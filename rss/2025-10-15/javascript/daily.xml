<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Tue, 14 Oct 2025 01:34:39 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>asgeirtj/system_prompts_leaks</title>
      <link>https://github.com/asgeirtj/system_prompts_leaks</link>
      <description>&lt;p&gt;Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude &amp; Gemini&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/22d32e2d-e0c9-4afc-9e72-44b779dac659" alt="CleanShot 2025-09-03 at 02 37 49" /&gt;&lt;/p&gt; 
&lt;h1&gt;System Prompts Leaks&lt;/h1&gt; 
&lt;p&gt;Collection of system prompts/system messages/developer messages.&lt;/p&gt; 
&lt;p&gt;Feel free to do Pull Requests&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#asgeirtj/system_prompts_leaks&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=asgeirtj/system_prompts_leaks&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SillyTavern/SillyTavern</title>
      <link>https://github.com/SillyTavern/SillyTavern</link>
      <description>&lt;p&gt;LLM Frontend for Power Users.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/01a6ae9a-16aa-45f2-8bff-32b5dc587e44" alt="" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-de_de.md"&gt;German&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_cn.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_tw.md"&gt;繁體中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ja_jp.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ru_ru.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ko_kr.md"&gt;한국어&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/forks"&gt;&lt;img src="https://img.shields.io/github/forks/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;&lt;img src="https://img.shields.io/github/issues/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Pull Requests" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;SillyTavern provides a single unified interface for many LLM APIs (KoboldAI/CPP, Horde, NovelAI, Ooba, Tabby, OpenAI, OpenRouter, Claude, Mistral and more), a mobile-friendly layout, Visual Novel Mode, Automatic1111 &amp;amp; ComfyUI API image generation integration, TTS, WorldInfo (lorebooks), customizable UI, auto-translate, more prompt options than you'd ever want or need, and endless growth potential via third-party extensions.&lt;/p&gt; 
&lt;p&gt;We have a &lt;a href="https://docs.sillytavern.app/"&gt;Documentation website&lt;/a&gt; to answer most of your questions and help you get started.&lt;/p&gt; 
&lt;h2&gt;What is SillyTavern?&lt;/h2&gt; 
&lt;p&gt;SillyTavern (or ST for short) is a locally installed user interface that allows you to interact with text generation LLMs, image generation engines, and TTS voice models.&lt;/p&gt; 
&lt;p&gt;Beginning in February 2023 as a fork of TavernAI 1.2.8, SillyTavern now has over 200 contributors and 2 years of independent development under its belt, and continues to serve as a leading software for savvy AI hobbyists.&lt;/p&gt; 
&lt;h2&gt;Our Vision&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;We aim to empower users with as much utility and control over their LLM prompts as possible. The steep learning curve is part of the fun!&lt;/li&gt; 
 &lt;li&gt;We do not provide any online or hosted services, nor programmatically track any user data.&lt;/li&gt; 
 &lt;li&gt;SillyTavern is a passion project brought to you by a dedicated community of LLM enthusiasts, and will always be free and open sourced.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Do I need a powerful PC to run SillyTavern?&lt;/h2&gt; 
&lt;p&gt;The hardware requirements are minimal: it will run on anything that can run NodeJS 18 or higher. If you intend to do LLM inference on your local machine, we recommend a 3000-series NVIDIA graphics card with at least 6GB of VRAM, but actual requirements may vary depending on the model and backend you choose to use.&lt;/p&gt; 
&lt;h2&gt;Questions or suggestions?&lt;/h2&gt; 
&lt;h3&gt;Discord server&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;&lt;img src="https://img.shields.io/discord/1100685673633153084?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="" /&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;Join our Discord community!&lt;/a&gt; Get support, share favorite characters and prompts.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;p&gt;Or get in touch with the developers directly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discord: cohee, rossascends, wolfsblvt&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/user/RossAscends/"&gt;/u/RossAscends&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/sillylossy/"&gt;/u/sillylossy&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/Wolfsblvt/"&gt;u/Wolfsblvt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;Post a GitHub issue&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;I like your project! How do I contribute?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send pull requests. Learn how to contribute: &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Send feature suggestions and issue reports using the provided templates.&lt;/li&gt; 
 &lt;li&gt;Read this entire readme file and check the documentation website first, to avoid sending duplicate issues.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/9b5f32f0-c3b3-4102-b3f5-0e9213c0f50f" /&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/913fdbaa-7d33-42f1-ae2c-89dca41c53d1" /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;For detailed installation instructions, please visit our documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/windows/"&gt;Windows Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/linuxmacos/"&gt;MacOS/Linux Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/android-(termux)/"&gt;Android (Termux) Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/docker/"&gt;Docker Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License and credits&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TavernAI/TavernAI"&gt;TavernAI&lt;/a&gt; 1.2.8 by Humi: MIT License&lt;/li&gt; 
 &lt;li&gt;Portions of CncAnon's TavernAITurbo mod used with permission&lt;/li&gt; 
 &lt;li&gt;Visual Novel Mode inspired by the work of PepperTaco (&lt;a href="https://github.com/peppertaco/Tavern/"&gt;https://github.com/peppertaco/Tavern/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Noto Sans font by Google (OFL license)&lt;/li&gt; 
 &lt;li&gt;Icon theme by Font Awesome &lt;a href="https://fontawesome.com"&gt;https://fontawesome.com&lt;/a&gt; (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)&lt;/li&gt; 
 &lt;li&gt;Default content by @OtisAlejandro (Seraphina character and lorebook) and @kallmeflocc (10K Discord Users Celebratory Background)&lt;/li&gt; 
 &lt;li&gt;Docker guide by &lt;a href="https://github.com/mrguymiah"&gt;@mrguymiah&lt;/a&gt; and &lt;a href="https://github.com/Bronya-Rand"&gt;@Bronya-Rand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;kokoro-js library by &lt;a href="https://github.com/hexgrad"&gt;@hexgrad&lt;/a&gt; (Apache-2.0 License)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Top Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=SillyTavern/SillyTavern" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- LINK GROUP --&gt;</description>
    </item>
    
    <item>
      <title>trueadm/ripple</title>
      <link>https://github.com/trueadm/ripple</link>
      <description>&lt;p&gt;the elegant TypeScript UI framework&lt;/p&gt;&lt;hr&gt;&lt;a href="https://ripplejs.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(min-width: 768px)" srcset="assets/ripple-desktop.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/trueadm/ripple/main/assets/ripple-mobile.png" alt="Ripple - the elegant TypeScript UI framework" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://github.com/trueadm/ripple/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/trueadm/ripple/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/JBF2ySrh2W"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Server-7289da?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic"&gt;&lt;img src="https://developer.stackblitz.com/img/open_in_stackblitz_small.svg?sanitize=true" alt="Open in StackBlitz" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What is RippleJS?&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Currently, this project is still in early development, and should not be used in production.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Ripple is a TypeScript UI framework that takes the best parts of React, Solid and Svelte and combines them into one package.&lt;/p&gt; 
&lt;p&gt;I wrote Ripple as a love letter for frontend web.&lt;/p&gt; 
&lt;p&gt;Personally, I (&lt;a href="https://github.com/trueadm"&gt;@trueadm&lt;/a&gt;) have been involved in some truly amazing frontend frameworks along their journeys – from &lt;a href="https://github.com/infernojs/inferno"&gt;Inferno&lt;/a&gt;, where it all began, to &lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; and the journey of React Hooks, to creating &lt;a href="https://github.com/facebook/lexical"&gt;Lexical&lt;/a&gt;, to &lt;a href="https://github.com/sveltejs/svelte"&gt;Svelte 5&lt;/a&gt; and its new compiler and signal-based reactivity runtime. Along that journey, I collected ideas, and intriguing thoughts that may or may not pay off. Given my time between roles, I decided it was the best opportunity to try them out, and for open source to see what I was cooking.&lt;/p&gt; 
&lt;p&gt;Ripple was designed to be a JS/TS-first framework, rather than HTML-first. Ripple modules have their own &lt;code&gt;.ripple&lt;/code&gt; extension, and these modules fully support TypeScript. By introducing a new extension, it allows Ripple to invent its own superset language, which plays really nicely with TypeScript and JSX, but with a few interesting touches. In my experience, this has led to better DX not only for humans, but also for LLMs.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reactive Primitives&lt;/strong&gt;: Built-in reactivity with &lt;code&gt;track&lt;/code&gt; and &lt;code&gt;@&lt;/code&gt; reactive syntax on primitives&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reactive Objects&lt;/strong&gt;: You can create fully reactive arrays/objects using shorthand syntax &lt;code&gt;#[]&lt;/code&gt; &lt;code&gt;#{}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based Architecture&lt;/strong&gt;: Clean, reusable components with props and children&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Template Syntax&lt;/strong&gt;: Familiar templating with Ripple-specific enhancements&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Fine-grain rendering, with industry-leading performance, bundle-size and memory usage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript Support&lt;/strong&gt;: Full TypeScript integration with type checking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VSCode Integration&lt;/strong&gt;: Rich editor support with diagnostics, syntax highlighting, and IntelliSense&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prettier Support&lt;/strong&gt;: Full Prettier formatting support for &lt;code&gt;.ripple&lt;/code&gt; modules&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ESLint Support&lt;/strong&gt;: Full ESLint integration for &lt;code&gt;.ripple&lt;/code&gt; modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Missing Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SSR&lt;/strong&gt;: Ripple is currently an SPA only. It will have SSR soon! Hydration to follow after.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Try Ripple&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We're working hard on getting an online playground available. Watch this space!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can try Ripple now by using our basic Vite template either via &lt;a href="https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic"&gt;StackBlitz&lt;/a&gt;, or by running these commands in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx degit trueadm/ripple/templates/basic my-app
cd my-app
npm i # or yarn or pnpm
npm run dev # or yarn or pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or use create-ripple interactive CLI tool for creating new Ripple applications with features like Tailwind CSS or Bootstrap setup.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx create-ripple  # or yarn create ripple or pnpm create ripple
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to install the RippleJS package directly, it is &lt;code&gt;ripple&lt;/code&gt; on npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i --save ripple # or yarn or pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;VSCode Extension&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin"&gt;Ripple VSCode extension&lt;/a&gt; provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Syntax Highlighting&lt;/strong&gt; for &lt;code&gt;.ripple&lt;/code&gt; files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Diagnostics&lt;/strong&gt; for compilation errors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript Integration&lt;/strong&gt; for type checking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IntelliSense&lt;/strong&gt; for autocompletion&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find the extension on the VS Code Marketplace as &lt;a href="https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin"&gt;&lt;code&gt;Ripple for VS Code&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also &lt;a href="https://github.com/trueadm/ripple/raw/refs/heads/main/packages/ripple-vscode-plugin/published/ripple-vscode-plugin.vsix"&gt;manually install the extension&lt;/a&gt; &lt;code&gt;.vsix&lt;/code&gt; that have been manually packaged.&lt;/p&gt; 
&lt;h3&gt;Mounting your app&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;mount&lt;/code&gt; API from the &lt;code&gt;ripple&lt;/code&gt; package to render your Ripple component, using the &lt;code&gt;target&lt;/code&gt; option to specify what DOM element you want to render the component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// index.ts
import { mount } from 'ripple';
import { App } from '/App.ripple';

mount(App, {
  props: {
    title: 'Hello world!',
  },
  target: document.getElementById('root'),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Key Concepts&lt;/h2&gt; 
&lt;h3&gt;Components&lt;/h3&gt; 
&lt;p&gt;Define reusable components with the &lt;code&gt;component&lt;/code&gt; keyword. These are similar to functions in that they have &lt;code&gt;props&lt;/code&gt;, but crucially, they allow for a JSX-like syntax to be defined alongside standard TypeScript. That means you do not &lt;em&gt;return JSX&lt;/em&gt; like in other frameworks, but you instead use it like a JavaScript statement, as shown:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Button(props: { text: string, onClick: () =&amp;gt; void }) {
  &amp;lt;button onClick={props.onClick}&amp;gt;
    {props.text}
  &amp;lt;/button&amp;gt;
}

// Usage
export component App() {
  &amp;lt;Button text="Click me" onClick={() =&amp;gt; console.log("Clicked!")} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ripple's templating language also supports shorthands and object spreads too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-svelte"&gt;// you can do a normal prop
&amp;lt;div onClick={onClick}&amp;gt;{text}&amp;lt;/div&amp;gt;

// or using the shorthand prop
&amp;lt;div {onClick}&amp;gt;{text}&amp;lt;/div&amp;gt;

// and you can spread props
&amp;lt;div {...properties}&amp;gt;{text}&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reactivity&lt;/h3&gt; 
&lt;p&gt;You use &lt;code&gt;track&lt;/code&gt; to create a single tracked value. The &lt;code&gt;track&lt;/code&gt; function will created a boxed &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object that is not accessible from the outside, and instead you must use &lt;code&gt;@&lt;/code&gt; to unbox the &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object to read or write its underlying value. You can pass the &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object between components, functions and context to read and write to the value in different parts of your codebase.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { track } from 'ripple';

let name = track('World');
let count = track(0);

// Updates automatically trigger re-renders
@count++;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Objects can also contain tracked values with &lt;code&gt;@&lt;/code&gt; to access the reactive object property:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { track } from 'ripple';

let counter = { current: track(0) };

// Updates automatically trigger re-renders
counter.@current++;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Tracked derived values are also &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; objects, except you pass a function to &lt;code&gt;track&lt;/code&gt; rather than a value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let count = track(0);
let double = track(() =&amp;gt; @count * 2);
let quadruple = track(() =&amp;gt; @double * 2);

console.log(@quadruple);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use a tracked value inside a reactive context, such as an effect but you don't want that value to be a tracked dependency, you can use &lt;code&gt;untrack&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let count = track(0);
let double = track(() =&amp;gt; @count * 2);
let quadruple = track(() =&amp;gt; @double * 2);

effect(() =&amp;gt; {
  // This effect will never fire again, as we've untracked the only dependency it has
  console.log(untrack(() =&amp;gt; @quadruple));
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: you cannot create &lt;code&gt;Tracked&lt;/code&gt; objects in module/global scope, they have to be created on access from an active component context.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;track with get / set&lt;/h4&gt; 
&lt;p&gt;The optional get and set parameters of the &lt;code&gt;track&lt;/code&gt; function let you customize how a tracked value is read or written, similar to property accessors but expressed as pure functions. The get function receives the current stored value and its return value is exposed when the tracked value is accessed / unboxed with &lt;code&gt;@&lt;/code&gt;. The set function should return the value that will actually be stored and receives two parameters: the first is the one being assigned and the second with the previous value. The get and set functions may be useful for tasks such as logging, validating, or transforming values before they are exposed or stored.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { track } from 'ripple';

export component App() {
  let count = track(0,
    (current) =&amp;gt; {
      console.log(current);
      return current;
    },
    (next, prev) =&amp;gt; {
      console.log(prev);
      if (typeof next === 'string') {
        next = Number(next);
      }

      return next;
    }
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If no value is returned from either &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; is either exposed (for get) or stored (for set). Also, if only supplying the &lt;code&gt;set&lt;/code&gt;, the &lt;code&gt;get&lt;/code&gt; parameter must be set to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;trackSplit Function&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;trackSplit&lt;/code&gt; "splits" a plain object — such as component props — into specified tracked variables and an extra &lt;code&gt;rest&lt;/code&gt; property containing the remaining unspecified object properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;const [children, count, rest] = trackSplit(props, ['children', 'count']);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When working with component props, destructuring is often useful — both for direct use as variables and for collecting remaining properties into a &lt;code&gt;rest&lt;/code&gt; object (which can be named arbitrarily). If destructuring happens in the component argument, e.g. &lt;code&gt;component Child({ children, value, ...rest })&lt;/code&gt;, Ripple automatically links variable access to the original props — for example, &lt;code&gt;value&lt;/code&gt; is compiled to &lt;code&gt;props.value&lt;/code&gt;, preserving reactivity.&lt;/p&gt; 
&lt;p&gt;However, destructuring inside the component body, e.g. &lt;code&gt;const { children, value, ...rest } = props&lt;/code&gt;, for read-only reactive props, does not preserve reactivity (too complicated to implement due to many edge cases). To ensure destructured read-only reactive props remain reactive in this case, use the &lt;code&gt;trackSplit&lt;/code&gt; function.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: boxed / wrapped Tracked objects are always reactive since they cross function boundaries by reference. Props that were not declared with &lt;code&gt;track()&lt;/code&gt; are never reactive and always render the same value that was initially passed in.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;A full example utilizing various Ripple constructs demonstrates the &lt;code&gt;split&lt;/code&gt; option usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { track, trackSplit } from 'ripple';
import type { PropsWithChildren, Tracked } from 'ripple';

component Child(props: PropsWithChildren&amp;lt;{ count: Tracked&amp;lt;number&amp;gt;, className: string }&amp;gt;) {
  // children, count are always reactive
  // but className is passed in as a read-only reactive value
  const [children, count, className, rest] = trackSplit(props, ['children', 'count', 'class']);

  &amp;lt;button class={@className} {...@rest}&amp;gt;&amp;lt;@children /&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;pre&amp;gt;{`Count is: ${@count}`}&amp;lt;/pre&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{'Increment Count'}&amp;lt;/button&amp;gt;
}

export component App() {
    let count = track(0,
    (current) =&amp;gt; {
      console.log('getter', current);
      return current;
    },
    (next) =&amp;gt; {
      console.log('setter', next);
      return next;
    }
  );
  let className = track('shadow');
  let name = track('Click Me');

  function buttonRef(el) {
    console.log('ref called with', el);
    return () =&amp;gt; {
      console.log('cleanup ref for', el);
    };
  }

  &amp;lt;Child
    class={@className}
    onClick={() =&amp;gt; { @name === 'Click Me' ? @name = 'Clicked' : @name = 'Click Me'; @className = ''}}
    {count}
    {ref buttonRef}
  &amp;gt;{@name}&amp;lt;/Child&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the regular destructuring, such as the one below, the &lt;code&gt;class&lt;/code&gt; property would lose its reactivity:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;// ❌ WRONG class / className reactivity would be lost
let { children, count, class: className, ...rest } = props;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Make sure the resulting &lt;code&gt;rest&lt;/code&gt;, if it's going to be spread onto a dom element, does not contain &lt;code&gt;Tracked&lt;/code&gt; values. Otherwise, you'd be spreading not the actual values but the boxed ones, which are objects that will appear as &lt;code&gt;[object Object]&lt;/code&gt; on the dom element.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Transporting Reactivity&lt;/h4&gt; 
&lt;p&gt;Ripple doesn't constrain reactivity to components only. &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; objects can simply be passed by reference between boundaries:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, track } from 'ripple';

function createDouble(count) {
  const double = track(() =&amp;gt; @count * 2);

  effect(() =&amp;gt; {
    console.log('Count:', @count)
  });

  return double;
}

export component App() {
  let count = track(0);

  const double = createDouble(count);

  &amp;lt;div&amp;gt;{'Double: ' + @double}&amp;lt;/div&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; { @count++; }}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dynamic Components&lt;/h4&gt; 
&lt;p&gt;Ripple has built-in support for dynamic components, a way to render different components based on reactive state. Instead of hardcoding which component to show, you can store a component in a &lt;code&gt;Tracked&lt;/code&gt; via &lt;code&gt;track()&lt;/code&gt;, and update it at runtime. When the tracked value changes, Ripple automatically unmounts the previous component and mounts the new one. Dynamic components are written with the &lt;code&gt;&amp;lt;@Component /&amp;gt;&lt;/code&gt; tag, where the @ both unwraps the tracked reference and tells the compiler that the component is dynamic. This makes it straightforward to pass components as props or swap them directly within a component, enabling flexible, state-driven UIs with minimal boilerplate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let swapMe = track(() =&amp;gt; Child1);

  &amp;lt;Child {swapMe} /&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; @swapMe = @swapMe === Child1 ? Child2 : Child1}&amp;gt;{'Swap Component'}&amp;lt;/button&amp;gt;
}

component Child({ swapMe }: {swapMe: Tracked&amp;lt;Component&amp;gt;}) {
  &amp;lt;@swapMe /&amp;gt;
}

component Child1(props) {
  &amp;lt;pre&amp;gt;{'I am child 1'}&amp;lt;/pre&amp;gt;
}

component Child2(props) {
  &amp;lt;pre&amp;gt;{'I am child 2'}&amp;lt;/pre&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dynamic Elements&lt;/h4&gt; 
&lt;p&gt;You can render dynamic HTML elements by storing the tag name in a tracked variable and using the &lt;code&gt;&amp;lt;@tagName&amp;gt;&lt;/code&gt; syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let tag = track('div');

  &amp;lt;@tag class="dynamic"&amp;gt;{'Hello World'}&amp;lt;/@tag&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; @tag = @tag === 'div' ? 'span' : 'div'}&amp;gt;{'Toggle Element'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Simple Reactive Arrays&lt;/h4&gt; 
&lt;p&gt;Just like objects, you can use the &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; objects in any standard JavaScript object, like arrays:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let first = track(0);
let second = track(0);
const arr = [first, second];

const total = track(() =&amp;gt; arr.reduce((a, b) =&amp;gt; a + @b, 0));

console.log(@total);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Like shown in the above example, you can compose normal arrays with reactivity and pass them through props or boundaries.&lt;/p&gt; 
&lt;p&gt;However, if you need the entire array to be fully reactive, including when new elements get added, you should use the reactive array that Ripple provides.&lt;/p&gt; 
&lt;h4&gt;Fully Reactive Array&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;TrackedArray&lt;/code&gt; class from Ripple extends the standard JS &lt;code&gt;Array&lt;/code&gt; class, and supports all of its methods and properties. Import it from the &lt;code&gt;'ripple'&lt;/code&gt; namespace or use the provided syntactic sugar for a quick creation via the bracketed notation. All elements existing or new of the &lt;code&gt;TrackedArray&lt;/code&gt; are reactive and respond to the various array operations such as push, pop, shift, unshift, etc. Even if you reference a non-existent element, once it added, the original reference will react to the change. You do NOT need to use the unboxing &lt;code&gt;@&lt;/code&gt; with the elements of the array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedArray } from 'ripple';

// using syntactic sugar `#`
const arr = #[1, 2, 3];

// using the new constructor
const arr = new TrackedArray(1, 2, 3);

// using static from method
const arr = TrackedArray.from([1, 2, 3]);

// using static of method
const arr = TrackedArray.of(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  const items = #[1, 2, 3];

  &amp;lt;div&amp;gt;
    &amp;lt;p&amp;gt;{"Length: "}{items.length}&amp;lt;/p&amp;gt;  // Reactive length
    for (const item of items) {
      &amp;lt;div&amp;gt;{item}&amp;lt;/div&amp;gt;
    }
    &amp;lt;button onClick={() =&amp;gt; items.push(items.length + 1)}&amp;gt;{"Add"}&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Object&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;TrackedObject&lt;/code&gt; class extends the standard JS &lt;code&gt;Object&lt;/code&gt; class, and supports all of its methods and properties. Import it from the &lt;code&gt;'ripple'&lt;/code&gt; namespace or use the provided syntactic sugar for a quick creation via the curly brace notation. &lt;code&gt;TrackedObject&lt;/code&gt; fully supports shallow reactivity and any property on the root level is reactive. You can even reference non-existent properties and once added the original reference reacts to the change. You do NOT need to use the unboxing &lt;code&gt;@&lt;/code&gt; with the properties of the &lt;code&gt;TrackedObject&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedObject } from 'ripple';

// using syntactic sugar `#`
const arr = #{a: 1, b: 2, c: 3};

// using the new constructor
const arr = new TrackedObject({a: 1, b: 2, c: 3});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  const obj = #{a: 0}

  obj.a = 0;

  &amp;lt;pre&amp;gt;{'obj.a is: '}{obj.a}&amp;lt;/pre&amp;gt;
  &amp;lt;pre&amp;gt;{'obj.b is: '}{obj.b}&amp;lt;/pre&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; { obj.a++; obj.b = obj.b ?? 5; obj.b++; }}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Set&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;TrackedSet&lt;/code&gt; extends the standard JS &lt;code&gt;Set&lt;/code&gt; class, and supports all of its methods and properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { TrackedSet } from 'ripple';

const set = new TrackedSet([1, 2, 3]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;TrackedSet's reactive methods or properties can be used directly or assigned to reactive variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedSet, track } from 'ripple';

export component App() {
  const set = new TrackedSet([1, 2, 3]);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: set contains 2: "}{set.has(2)}&amp;lt;/p&amp;gt;

  // reactive assignment
  let has = track(() =&amp;gt; set.has(2));
  &amp;lt;p&amp;gt;{"Assigned usage: set contains 2: "}{@has}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; set.delete(2)}&amp;gt;{"Delete 2"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; set.add(2)}&amp;gt;{"Add 2"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Map&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;TrackedMap&lt;/code&gt; extends the standard JS &lt;code&gt;Map&lt;/code&gt; class, and supports all of its methods and properties.&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { TrackedMap, track } from 'ripple';

const map = new TrackedMap([[1,1], [2,2], [3,3], [4,4]]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;TrackedMap's reactive methods or properties can be used directly or assigned to reactive variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedMap, track } from 'ripple';

export component App() {
  const map = new TrackedMap([[1,1], [2,2], [3,3], [4,4]]);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: map has an item with key 2: "}{map.has(2)}&amp;lt;/p&amp;gt;

  // reactive assignment
  let has = track(() =&amp;gt; map.has(2));
  &amp;lt;p&amp;gt;{"Assigned usage: map has an item with key 2: "}{@has}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; map.delete(2)}&amp;gt;{"Delete item with key 2"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; map.set(2, 2)}&amp;gt;{"Add key 2 with value 2"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Date&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;TrackedDate&lt;/code&gt; extends the standard JS &lt;code&gt;Date&lt;/code&gt; class, and supports all of its methods and properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { TrackedDate } from 'ripple';

const date = new TrackedDate(2026, 0, 1); // January 1, 2026
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;TrackedDate's reactive methods or properties can be used directly or assigned to reactive variables. All getter methods (&lt;code&gt;getFullYear()&lt;/code&gt;, &lt;code&gt;getMonth()&lt;/code&gt;, &lt;code&gt;getDate()&lt;/code&gt;, etc.) and formatting methods (&lt;code&gt;toISOString()&lt;/code&gt;, &lt;code&gt;toDateString()&lt;/code&gt;, etc.) are reactive and will update when the date is modified.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedDate, track } from 'ripple';

export component App() {
  const date = new TrackedDate(2025, 0, 1, 12, 0, 0);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: Current year is "}{date.getFullYear()}&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;{"ISO String: "}{date.toISOString()}&amp;lt;/p&amp;gt;

  // reactive assignment
  let year = track(() =&amp;gt; date.getFullYear());
  let month = track(() =&amp;gt; date.getMonth());
  &amp;lt;p&amp;gt;{"Assigned usage: Year "}{@year}{", Month "}{@month}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; date.setFullYear(2027)}&amp;gt;{"Change to 2026"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; date.setMonth(11)}&amp;gt;{"Change to December"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Effects&lt;/h3&gt; 
&lt;p&gt;When dealing with reactive state, you might want to be able to create side-effects based upon changes that happen upon updates. To do this, you can use &lt;code&gt;effect&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, track } from 'ripple';

export component App() {
  let count = track(0);

  effect(() =&amp;gt; {
    console.log(@count);
  });

  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;After Update tick()&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;tick()&lt;/code&gt; function returns a Promise that resolves after all pending reactive updates have been applied to the DOM. This is useful when you need to ensure that DOM changes are complete before executing subsequent code, similar to Vue's &lt;code&gt;nextTick()&lt;/code&gt; or Svelte's &lt;code&gt;tick()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, track, tick } from 'ripple';

export component App() {
  let count = track(0);

  effect(() =&amp;gt; {
    @count;

    if (@count === 0) {
      console.log('initial run, skipping');
      return;
    }

    tick().then(() =&amp;gt; {
      console.log('after the update');
    });
  });

  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Control flow&lt;/h3&gt; 
&lt;p&gt;The JSX-like syntax might take some time to get used to if you're coming from another framework. For one, templating in Ripple can only occur &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;component&lt;/code&gt; body – you can't create JSX inside functions, or assign it to variables as an expression.&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;div&amp;gt;
  // you can create variables inside the template!
  const str = "hello world";

  console.log(str); // and function calls too!

  debugger; // you can put breakpoints anywhere to help debugging!

  {str}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that strings inside the template need to be inside &lt;code&gt;{"string"}&lt;/code&gt;, you can't do &lt;code&gt;&amp;lt;div&amp;gt;hello&amp;lt;/div&amp;gt;&lt;/code&gt; as Ripple has no idea if &lt;code&gt;hello&lt;/code&gt; is a string or maybe some JavaScript code that needs evaluating, so just ensure you wrap them in curly braces. This shouldn't be an issue in the real-world anyway, as you'll likely use an i18n library that means using JavaScript expressions regardless.&lt;/p&gt; 
&lt;h3&gt;If statements&lt;/h3&gt; 
&lt;p&gt;If blocks work seamlessly with Ripple's templating language, you can put them inside the JSX-like statements, making control-flow far easier to read and reason with.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Truthy({ x }) {
  &amp;lt;div&amp;gt;
    if (x) {
      &amp;lt;span&amp;gt;{'x is truthy'}&amp;lt;/span&amp;gt;
    } else {
      &amp;lt;span&amp;gt;{'x is falsy'}&amp;lt;/span&amp;gt;
    }
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Switch statements&lt;/h3&gt; 
&lt;p&gt;Switch statements let you conditionally render content based on a value. They work with both static and reactive values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ripple"&gt;component StatusIndicator({ status }) {
  switch (status) {
    case 'loading':
      &amp;lt;p&amp;gt;{'Loading...'}&amp;lt;/p&amp;gt;
      break;
    case 'success':
      &amp;lt;p&amp;gt;{'Success!'}&amp;lt;/p&amp;gt;
      break;
    case 'error':
      &amp;lt;p&amp;gt;{'Error!'}&amp;lt;/p&amp;gt;
      break;
    default:
      &amp;lt;p&amp;gt;{'Unknown status'}&amp;lt;/p&amp;gt;
  }  
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use reactive values with switch statements:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ripple"&gt;import { track } from 'ripple';

component InteractiveStatus() {
  let status = track('loading');

  &amp;lt;button onClick={() =&amp;gt; @status = 'success'}&amp;gt;{'Success'}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; @status = 'error'}&amp;gt;{'Error'}&amp;lt;/button&amp;gt;

  switch (@status) {
    case 'loading':
      &amp;lt;p&amp;gt;{'Loading...'}&amp;lt;/p&amp;gt;
      break;
    case 'success':
      &amp;lt;p&amp;gt;{'Success!'}&amp;lt;/p&amp;gt;
      break;
    case 'error':
      &amp;lt;p&amp;gt;{'Error!'}&amp;lt;/p&amp;gt;
      break;
    default:
      &amp;lt;p&amp;gt;{'Unknown status'}&amp;lt;/p&amp;gt;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;For statements&lt;/h3&gt; 
&lt;p&gt;You can render collections using a &lt;code&gt;for...of&lt;/code&gt; loop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component ListView({ title, items }) {
  &amp;lt;h2&amp;gt;{title}&amp;lt;/h2&amp;gt;
  &amp;lt;ul&amp;gt;
    for (const item of items) {
      &amp;lt;li&amp;gt;{item.text}&amp;lt;/li&amp;gt;
    }
  &amp;lt;/ul&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;for...of&lt;/code&gt; loop has also a built-in support for accessing the loops numerical index. The &lt;code&gt;label&lt;/code&gt; index declares a variable that will used to assign the loop's index.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;  for (const item of items; index i) {
    &amp;lt;div&amp;gt;{item.label}{' at index '}{i}&amp;lt;/div&amp;gt;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also provide a &lt;code&gt;key&lt;/code&gt; for efficient list updates and reconciliation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;  for (const item of items; index i; key item.id) {
    &amp;lt;div&amp;gt;{item.label}{' at index '}{i}&amp;lt;/div&amp;gt;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Usage Guidelines:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Arrays with &lt;code&gt;#{}&lt;/code&gt; objects&lt;/strong&gt;: Keys are usually unnecessary - object identity and reactivity handle updates automatically. Identity-based loops are more efficient with less bookkeeping.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Arrays with plain objects&lt;/strong&gt;: Keys are needed when object reference isn't sufficient for identification. Use stable identifiers: &lt;code&gt;key item.id&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use Ripple's reactive arrays to easily compose contents of an array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedArray } from 'ripple';

component Numbers() {
  const array = new TrackedArray(1, 2, 3);

  for (const item of array; index i) {
    &amp;lt;div&amp;gt;{item}{' at index '}{i}&amp;lt;/div&amp;gt;
  }

  &amp;lt;button onClick={() =&amp;gt; array.push(`Item ${array.length + 1}`)}&amp;gt;{"Add Item"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Clicking the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will create a new item.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;for...of&lt;/code&gt; loops inside components must contain either dom elements or components. Otherwise, the loop can be run inside an &lt;code&gt;effect&lt;/code&gt; or function.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Try statements&lt;/h3&gt; 
&lt;p&gt;Try blocks work to build the foundation for &lt;strong&gt;error boundaries&lt;/strong&gt;, when the runtime encounters an error in the &lt;code&gt;try&lt;/code&gt; block, you can easily render a fallback in the &lt;code&gt;catch&lt;/code&gt; block.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { reportError } from 'some-library';

component ErrorBoundary() {
  &amp;lt;div&amp;gt;
    try {
      &amp;lt;ComponentThatFails /&amp;gt;
    } catch (e) {
      reportError(e);

      &amp;lt;div&amp;gt;{'An error occurred! ' + e.message}&amp;lt;/div&amp;gt;
    }
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Children&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;children&lt;/code&gt; prop and then use it in the form of &lt;code&gt;&amp;lt;children /&amp;gt;&lt;/code&gt; for component composition.&lt;/p&gt; 
&lt;p&gt;When you pass in children to a component, it gets implicitly passed as the &lt;code&gt;children&lt;/code&gt; prop, in the form of a component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import type { Component } from 'ripple';

component Card(props: { children: Component }) {
  &amp;lt;div class="card"&amp;gt;
    &amp;lt;props.children /&amp;gt;
  &amp;lt;/div&amp;gt;
}

// Usage
&amp;lt;Card&amp;gt;
  &amp;lt;p&amp;gt;{"Card content here"}&amp;lt;/p&amp;gt;
&amp;lt;/Card&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You could also explicitly write the same code as shown:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import type { Component } from 'ripple';

component Card(props: { children: Component }) {
  &amp;lt;div class="card"&amp;gt;
    &amp;lt;props.children /&amp;gt;
  &amp;lt;/div&amp;gt;
}

// Usage with explicit component
&amp;lt;Card&amp;gt;
  component children() {
    &amp;lt;p&amp;gt;{"Card content here"}&amp;lt;/p&amp;gt;
  }
&amp;lt;/Card&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Refs&lt;/h3&gt; 
&lt;p&gt;Ripple provides a consistent way to capture the underlying DOM element – refs. Specifically, using the syntax &lt;code&gt;{ref fn}&lt;/code&gt; where &lt;code&gt;fn&lt;/code&gt; is a function that captures the DOM element. If you're familiar with other frameworks, then this is identical to &lt;code&gt;{@attach fn}&lt;/code&gt; in Svelte 5 and somewhat similar to &lt;code&gt;ref&lt;/code&gt; in React. The hook function will receive the reference to the underlying DOM element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let div = track();

  const divRef = (node) =&amp;gt; {
    @div = node;
    console.log("mounted", node);

    return () =&amp;gt; {
      @div = undefined;
      console.log("unmounted", node);
    };
  };

  &amp;lt;div {ref divRef}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also create &lt;code&gt;{ref}&lt;/code&gt; functions inline.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let div = track();

  &amp;lt;div {ref (node) =&amp;gt; {
    @div = node;
    return () =&amp;gt; @div = undefined;
  }}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use function factories to define properties, these are functions that return functions that do the same thing. However, you can use this pattern to pass reactive properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { fadeIn } from 'some-library';

export component App({ ms }) {
  &amp;lt;div {ref fadeIn({ ms })}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lastly, you can use refs on composite components.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;Image {ref (node) =&amp;gt; console.log(node)} {...props} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When passing refs to composite components (rather than HTML elements) as shown above, they will be passed a &lt;code&gt;Symbol&lt;/code&gt; property, as they are not named. This still means that it can be spread to HTML template elements later on and still work.&lt;/p&gt; 
&lt;h4&gt;createRefKey&lt;/h4&gt; 
&lt;p&gt;Creates a unique object key that will be recognised as a ref when the object is spread onto an element. This allows programmatic assignment of refs without relying directly on the &lt;code&gt;{ref ...}&lt;/code&gt; template syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { createRefKey } from 'ripple';

export component App() {
  let value = track('');

  const props = {
    id: "example",
    @value,
    [createRefKey()]: (node) =&amp;gt; {
      const removeListener = node.addEventListener('input', (e) =&amp;gt; @value = e.target.value);

      return () =&amp;gt; {
        removeListener();
      }
    }
  };

  // applied to an element
  &amp;lt;input type="text" {...props} /&amp;gt;

  // with composite component
  &amp;lt;Input {...props} /&amp;gt;
}

component Input({ id, value, ...rest }) {
  &amp;lt;input type="text" {id} {value} {...rest} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Raw HTML&lt;/h3&gt; 
&lt;p&gt;By default, all text nodes in Ripple are escaped to prevent unintended script injections. If you'd like to render trusted HTML onto your page, you can use the HTML directive to opt-out:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
	let source = `
&amp;lt;h1&amp;gt;My Blog Post&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Hi! I like JS and Ripple.&amp;lt;/p&amp;gt;
`

	&amp;lt;article&amp;gt;
		{html source}
	&amp;lt;/article&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Events&lt;/h3&gt; 
&lt;h4&gt;Event Props&lt;/h4&gt; 
&lt;p&gt;Like React, events are props that start with &lt;code&gt;on&lt;/code&gt; and then continue with an uppercase character, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;onClick&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onKeyDown&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For &lt;code&gt;capture&lt;/code&gt; phase events, just add &lt;code&gt;Capture&lt;/code&gt; to the end of the prop name:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;onClickCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerMoveCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerDownCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onKeyDownCapture&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, and important distinction is that Ripple does not have a synthetic event system like React. So for example, you should opt to use &lt;code&gt;onInput&lt;/code&gt; instead of &lt;code&gt;onChange&lt;/code&gt; and things like &lt;code&gt;onFocus&lt;/code&gt; and &lt;code&gt;onBlur&lt;/code&gt; do not bubble – instead use &lt;code&gt;onFocusIn&lt;/code&gt; and &lt;code&gt;onFocusOut&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Some events are automatically delegated where possible by Ripple to improve runtime performance.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;on&lt;/h4&gt; 
&lt;p&gt;Adds an event handler to an element and returns a function to remove it. Compared to using addEventListener directly, this method guarantees the proper execution order with respect to attribute-based handlers such as &lt;code&gt;onClick&lt;/code&gt;, and similarly optimized through event delegation for those events that support it. We strongly advise to use it instead of addEventListener.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, on } from 'ripple';

export component App() {
  effect(() =&amp;gt; {
    // on component mount
    const removeListener = on(window, 'resize', () =&amp;gt; {
      console.log('Window resized!');
    });

    // return the removeListener when the component unmounts
    return removeListener;
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Styling&lt;/h3&gt; 
&lt;p&gt;Ripple supports native CSS styling that is localized to the given component using the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component MyComponent() {
  &amp;lt;div class="container"&amp;gt;&amp;lt;h1&amp;gt;{'Hello World'}&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;style&amp;gt;
    .container {
      background: blue;
      padding: 1rem;
    }

    h1 {
      color: white;
      font-size: 2rem;
    }
  &amp;lt;/style&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element must be top-level within a &lt;code&gt;component&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Dynamic Classes&lt;/h4&gt; 
&lt;p&gt;In Ripple, the &lt;code&gt;class&lt;/code&gt; attribute can accept more than just a string — it also supports objects and arrays. Truthy values are included as class names, while falsy values are omitted. This behavior is powered by the &lt;code&gt;clsx&lt;/code&gt; library.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let includeBaz = track(true);
&amp;lt;div class={{ foo: true, bar: false, baz: @includeBaz }}&amp;gt;&amp;lt;/div&amp;gt;
// becomes: class="foo baz"

&amp;lt;div class={['foo', {baz: false}, 0 &amp;amp;&amp;amp; 'bar', [true &amp;amp;&amp;amp; 'bat'] ]}&amp;gt;&amp;lt;/div&amp;gt;
// becomes: class="foo bat"

let count = track(3);
&amp;lt;div class={['foo', {bar: @count &amp;gt; 2}, @count &amp;gt; 3 &amp;amp;&amp;amp; 'bat']}&amp;gt;&amp;lt;/div&amp;gt;
// becomes: class="foo bar"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dynamic Inline Styles&lt;/h4&gt; 
&lt;p&gt;Sometimes you might need to dynamically set inline styles. For this, you can use the &lt;code&gt;style&lt;/code&gt; attribute, passing either a string or an object to it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let color = track('red');

&amp;lt;div style={`color: ${@color}; font-weight: bold; background-color: gray`}&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div style={{ color: @color, fontWeight: 'bold', 'background-color': 'gray' }}&amp;gt;&amp;lt;/div&amp;gt;

const style = {
  @color,
  fontWeight: 'bold',
  'background-color': 'gray',
};

// using object spread
&amp;lt;div style={{...style}}&amp;gt;&amp;lt;/div&amp;gt;

// using object directly
&amp;lt;div style={style}&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both examples above will render the same inline styles, however, it's recommended to use the object notation as it's typically more performance optimized.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When passing an object to the &lt;code&gt;style&lt;/code&gt; attribute, you can use either camelCase or kebab-case for CSS property names.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Context&lt;/h3&gt; 
&lt;p&gt;Ripple has the concept of &lt;code&gt;context&lt;/code&gt; where a value or reactive object can be shared through the component tree – like in other frameworks. This all happens from the &lt;code&gt;Context&lt;/code&gt; class that is imported from &lt;code&gt;ripple&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Creating contexts may take place anywhere. Contexts can contain anything including tracked values or objects. However, context cannot be read via &lt;code&gt;get&lt;/code&gt; or written to via &lt;code&gt;set&lt;/code&gt; inside an event handler or at the module level as it must happen within the context of a component. A good strategy is to assign the contents of a context to a variable via the &lt;code&gt;.get()&lt;/code&gt; method during the component initialization and use this variable for reading and writing.&lt;/p&gt; 
&lt;p&gt;When Child components overwrite a context's value via &lt;code&gt;.set()&lt;/code&gt;, this new value will only be seen by its descendants. Components higher up in the tree will continue to see the original value.&lt;/p&gt; 
&lt;p&gt;Example with tracked / reactive contents:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { track, Context } from "ripple"

// create context with an empty object
const context  = new Context({});
const context2 = new Context();

export component App() {
  // get reference to the object
  const obj = context.get();
  // set your reactive value
  obj.count = track(0);

  // create another tracked variable
  const count2 = track(0);
  // context2 now contains a trackrf variable
  context2.set(count2);

  &amp;lt;button onClick={() =&amp;gt; { obj.@count++; @count2++ }}&amp;gt;
    {'Click Me'}
  &amp;lt;/button&amp;gt;

  // context's reactive property count gets updated
  &amp;lt;pre&amp;gt;{'Context: '}{context.get().@count}&amp;lt;/pre&amp;gt;
  &amp;lt;pre&amp;gt;{'Context2: '}{@count2}&amp;lt;/pre&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;@(context2.get())&lt;/code&gt; usage with &lt;code&gt;@()&lt;/code&gt; wrapping syntax will be enabled in the near future&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Passing data between components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Context } from 'ripple';

const MyContext = new Context(null);

component Child() {
  // Context is read in the Child component
  const value = MyContext.get();

  // value is "Hello from context!"
  console.log(value);
}

component Parent() {
  const value = MyContext.get();

  // Context is read in the Parent component, but hasn't yet
  // been set, so we fallback to the initial context value.
  // So the value is `null`
  console.log(value);

  // Context is set in the Parent component
  MyContext.set("Hello from context!");

  &amp;lt;Child /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also pass a reactive &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object through context and read it at the other side.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Context, effect } from 'ripple';

const MyContext = new Context(null);

component Child() {
  const count = MyContext.get();

  effect(() =&amp;gt; {
    console.log(@count);
  });
}

component Parent() {
  const count = track(0);

  MyContext.set(count);

  &amp;lt;Child /&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{"increment count"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Portal&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;Portal&lt;/code&gt; component allows you to render (teleport) content anywhere in the DOM tree, breaking out of the normal component hierarchy. This is particularly useful for modals, tooltips, and notifications.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Portal } from 'ripple';

export component App() {
  &amp;lt;div class="app"&amp;gt;
    &amp;lt;h1&amp;gt;{'My App'}&amp;lt;/h1&amp;gt;

    {/* This will render inside document.body, not inside the .app div */}
    &amp;lt;Portal target={document.body}&amp;gt;
      &amp;lt;div class="modal"&amp;gt;
        &amp;lt;h2&amp;gt;{'I am rendered in document.body!'}&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;{'This content escapes the normal component tree.'}&amp;lt;/p&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/Portal&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;We recommend using Ripple with Ripple's Vite plugin. We also recommend using Vitest for testing. When using Vitest, make sure to configure your &lt;code&gt;vitest.config.js&lt;/code&gt; accordingly by using this template config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { configDefaults, defineConfig } from 'vitest/config';
import { ripple } from 'vite-plugin-ripple';

export default defineConfig({
  plugins: [ripple()],
  resolve: process.env.VITEST ? { conditions: ['browser'] } : undefined,
  test: {
    include: ['**/*.test.ripple'],
    environment: 'jsdom',
    ...configDefaults.test,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can create a &lt;code&gt;example.test.ripple&lt;/code&gt; module and put your Vitest test assertions in that module.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are happy for your interest in contributing. Please see our &lt;a href="https://raw.githubusercontent.com/trueadm/ripple/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/trueadm/ripple/main/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>davila7/claude-code-templates</title>
      <link>https://github.com/davila7/claude-code-templates</link>
      <description>&lt;p&gt;CLI tool for configuring and monitoring Claude Code&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.npmjs.com/package/claude-code-templates"&gt;&lt;img src="https://img.shields.io/npm/v/claude-code-templates.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-code-templates"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-code-templates.svg?sanitize=true" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/"&gt;&lt;img src="https://badges.frapsoft.com/os/v1/open-source.svg?v=103" alt="Open Source" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" alt="PRs Welcome" /&gt;&lt;/a&gt; &lt;a href="https://github.com/davila7/claude-code-templates"&gt;&lt;img src="https://img.shields.io/github/stars/davila7/claude-code-templates.svg?style=social&amp;amp;label=Star" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hesreallyhim/awesome-claude-code"&gt;&lt;img src="https://awesome.re/mentioned-badge-flat.svg?sanitize=true" alt="Mentioned in Awesome Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://buymeacoffee.com/daniavila"&gt;&lt;img src="https://img.shields.io/badge/%E2%98%95-Buy%20me%20a%20coffee-ffdd00?style=flat&amp;amp;logo=buy-me-a-coffee" alt="Buy Me a Coffee" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Claude Code Templates (aitmpl.com)&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Ready-to-use configurations for Anthropic's Claude Code.&lt;/strong&gt; A comprehensive collection of AI agents, custom commands, settings, hooks, external integrations (MCPs), and project templates to enhance your development workflow.&lt;/p&gt; 
&lt;h2&gt;Browse &amp;amp; Install Components and Templates&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aitmpl.com"&gt;Browse All Templates&lt;/a&gt;&lt;/strong&gt; - Interactive web interface to explore and install 100+ agents, commands, settings, hooks, and MCPs.&lt;/p&gt; 
&lt;img width="1049" height="855" alt="Screenshot 2025-08-19 at 08 09 24" src="https://github.com/user-attachments/assets/e3617410-9b1c-4731-87b7-a3858800b737" /&gt; 
&lt;h2&gt;🚀 Quick Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install a complete development stack
npx claude-code-templates@latest --agent development-team/frontend-developer --command testing/generate-tests --mcp development/github-integration

# Browse and install interactively
npx claude-code-templates@latest

# Install specific components
npx claude-code-templates@latest --agent business-marketing/security-auditor
npx claude-code-templates@latest --command performance/optimize-bundle
npx claude-code-templates@latest --setting performance/mcp-timeouts
npx claude-code-templates@latest --hook git/pre-commit-validation
npx claude-code-templates@latest --mcp database/postgresql-integration
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What You Get&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Component&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Examples&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🤖 Agents&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;AI specialists for specific domains&lt;/td&gt; 
   &lt;td&gt;Security auditor, React performance optimizer, database architect&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚡ Commands&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Custom slash commands&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/generate-tests&lt;/code&gt;, &lt;code&gt;/optimize-bundle&lt;/code&gt;, &lt;code&gt;/check-security&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🔌 MCPs&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;External service integrations&lt;/td&gt; 
   &lt;td&gt;GitHub, PostgreSQL, Stripe, AWS, OpenAI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚙️ Settings&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Claude Code configurations&lt;/td&gt; 
   &lt;td&gt;Timeouts, memory settings, output styles&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🪝 Hooks&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Automation triggers&lt;/td&gt; 
   &lt;td&gt;Pre-commit validation, post-completion actions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📦 Templates&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Complete project configurations with CLAUDE.md, .claude/* files and .mcp.json&lt;/td&gt; 
   &lt;td&gt;Framework-specific setups, project best practices&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🛠️ Additional Tools&lt;/h2&gt; 
&lt;p&gt;Beyond the template catalog, Claude Code Templates includes powerful development tools:&lt;/p&gt; 
&lt;h3&gt;📊 Claude Code Analytics&lt;/h3&gt; 
&lt;p&gt;Monitor your AI-powered development sessions in real-time with live state detection and performance metrics.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-code-templates@latest --analytics
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💬 Conversation Monitor&lt;/h3&gt; 
&lt;p&gt;Mobile-optimized interface to view Claude responses in real-time with secure remote access.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Local access
npx claude-code-templates@latest --chats

# Secure remote access via Cloudflare Tunnel
npx claude-code-templates@latest --chats --tunnel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🔍 Health Check&lt;/h3&gt; 
&lt;p&gt;Comprehensive diagnostics to ensure your Claude Code installation is optimized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-code-templates@latest --health-check
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🔌 Plugin Dashboard&lt;/h3&gt; 
&lt;p&gt;View marketplaces, installed plugins, and manage permissions from a unified interface.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-code-templates@latest --plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.aitmpl.com/"&gt;📚 docs.aitmpl.com&lt;/a&gt;&lt;/strong&gt; - Complete guides, examples, and API reference for all components and tools.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! &lt;strong&gt;&lt;a href="https://aitmpl.com"&gt;Browse existing templates&lt;/a&gt;&lt;/strong&gt; to see what's available, then check our &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to add your own agents, commands, MCPs, settings, or hooks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please read our &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; before contributing.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Attribution&lt;/h2&gt; 
&lt;p&gt;This collection includes components from multiple sources:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Agents Collection:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;wshobson/agents Collection&lt;/strong&gt; by &lt;a href="https://github.com/wshobson/agents"&gt;wshobson&lt;/a&gt; - Licensed under MIT License (48 agents)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Commands Collection:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;awesome-claude-code Commands&lt;/strong&gt; by &lt;a href="https://github.com/hesreallyhim/awesome-claude-code"&gt;hesreallyhim&lt;/a&gt; - Licensed under CC0 1.0 Universal (21 commands)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;🔗 Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Browse Templates&lt;/strong&gt;: &lt;a href="https://aitmpl.com"&gt;aitmpl.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📚 Documentation&lt;/strong&gt;: &lt;a href="https://docs.aitmpl.com"&gt;docs.aitmpl.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💬 Community&lt;/strong&gt;: &lt;a href="https://github.com/davila7/claude-code-templates/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🐛 Issues&lt;/strong&gt;: &lt;a href="https://github.com/davila7/claude-code-templates/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#davila7/claude-code-templates&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;⭐ Found this useful? Give us a star to support the project!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://buymeacoffee.com/daniavila"&gt;&lt;img src="https://img.buymeacoffee.com/button-api/?text=Buy%20me%20a%20coffee&amp;amp;slug=daniavila&amp;amp;button_colour=FFDD00&amp;amp;font_colour=000000&amp;amp;font_family=Cookie&amp;amp;outline_colour=000000&amp;amp;coffee_colour=ffffff" alt="Buy Me A Coffee" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>upstash/context7</title>
      <link>https://github.com/upstash/context7</link>
      <description>&lt;p&gt;Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/upstash/context7/master/public/cover.png" alt="Cover" /&gt;&lt;/p&gt; 
&lt;h1&gt;Context7 MCP - Up-to-date Code Docs For Any Prompt&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://context7.com"&gt;&lt;img src="https://img.shields.io/badge/Website-context7.com-blue" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://smithery.ai/server/@upstash/context7-mcp"&gt;&lt;img src="https://smithery.ai/badge/@upstash/context7-mcp" alt="smithery badge" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@upstash/context7-mcp"&gt;&lt;img src="https://img.shields.io/npm/v/%40upstash%2Fcontext7-mcp?color=red" alt="NPM Version" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/LICENSE"&gt;&lt;img src="https://img.shields.io/npm/l/%40upstash%2Fcontext7-mcp" alt="MIT licensed" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cursor.com/en/install-mcp?name=context7&amp;amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D"&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Install MCP Server" /&gt;&lt;/a&gt; &lt;a href="https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D"&gt;&lt;img alt="Install in VS Code (npx)" src="https://img.shields.io/badge/Install%20in%20VS%20Code-0098FF?style=for-the-badge&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.zh-TW.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87-yellow" alt="繁體中文" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.zh-CN.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-yellow" alt="简体中文" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ja.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%E6%97%A5%E6%9C%AC%E8%AA%9E-b7003a" alt="日本語" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ko.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%ED%95%9C%EA%B5%AD%EC%96%B4-green" alt="한국어 문서" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.es.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Espa%C3%B1ol-orange" alt="Documentación en Español" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.fr.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Fran%C3%A7ais-blue" alt="Documentation en Français" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.pt-BR.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Portugu%C3%AAs%20(Brasil)-purple" alt="Documentação em Português (Brasil)" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.it.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Italian-red" alt="Documentazione in italiano" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.id-ID.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink" alt="Dokumentasi Bahasa Indonesia" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.de.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Deutsch-darkgreen" alt="Dokumentation auf Deutsch" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ru.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-darkblue" alt="Документация на русском языке" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.uk.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%D0%A3%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%B0-lightblue" alt="Українська документація" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.tr.md"&gt;&lt;img src="https://img.shields.io/badge/docs-T%C3%BCrk%C3%A7e-blue" alt="Türkçe Doküman" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ar.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Arabic-white" alt="Arabic Documentation" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.vi.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Ti%E1%BA%BFng%20Vi%E1%BB%87t-red" alt="Tiếng Việt" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;❌ Without Context7&lt;/h2&gt; 
&lt;p&gt;LLMs rely on outdated or generic information about the libraries you use. You get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;❌ Code examples are outdated and based on year-old training data&lt;/li&gt; 
 &lt;li&gt;❌ Hallucinated APIs that don't even exist&lt;/li&gt; 
 &lt;li&gt;❌ Generic answers for old package versions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ With Context7&lt;/h2&gt; 
&lt;p&gt;Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source — and places them directly into your prompt.&lt;/p&gt; 
&lt;p&gt;Add &lt;code&gt;use context7&lt;/code&gt; to your prompt in Cursor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Context7 fetches up-to-date code examples and documentation right into your LLM's context.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1️⃣ Write your prompt naturally&lt;/li&gt; 
 &lt;li&gt;2️⃣ Tell the LLM to &lt;code&gt;use context7&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;3️⃣ Get working code answers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No tab-switching, no hallucinated APIs that don't exist, no outdated code generation.&lt;/p&gt; 
&lt;h2&gt;📚 Adding Projects&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/adding-projects.md"&gt;project addition guide&lt;/a&gt; to learn how to add (or update) your favorite libraries to Context7.&lt;/p&gt; 
&lt;h2&gt;🛠️ Installation&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js &amp;gt;= v18.0.0&lt;/li&gt; 
 &lt;li&gt;Cursor, Claude Code, VSCode, Windsurf or another MCP Client&lt;/li&gt; 
 &lt;li&gt;Context7 API Key (Optional) for higher rate limits and private repositories (Get yours by creating an account at &lt;a href="https://context7.com/dashboard"&gt;context7.com/dashboard&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;SSE Protocol Deprecation Notice&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;The Server-Sent Events (SSE) transport protocol is deprecated and its endpoint will be removed in upcoming releases. Please use HTTP or stdio transport methods instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;To install Context7 MCP Server for any client automatically via &lt;a href="https://smithery.ai/server/@upstash/context7-mcp"&gt;Smithery&lt;/a&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx -y @smithery/cli@latest install @upstash/context7-mcp --client &amp;lt;CLIENT_NAME&amp;gt; --key &amp;lt;YOUR_SMITHERY_KEY&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can find your Smithery key in the &lt;a href="https://smithery.ai/server/@upstash/context7-mcp"&gt;Smithery.ai webpage&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Go to: &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Cursor Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;MCP&lt;/code&gt; -&amp;gt; &lt;code&gt;Add new global MCP server&lt;/code&gt;&lt;/p&gt; 
 &lt;p&gt;Pasting the following configuration into your Cursor &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt; file is the recommended approach. You may also install in a specific project by creating &lt;code&gt;.cursor/mcp.json&lt;/code&gt; in your project folder. See &lt;a href="https://docs.cursor.com/context/model-context-protocol"&gt;Cursor MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Since Cursor 1.0, you can click the install button below for instant one-click installation.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Cursor Remote Server Connection&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://cursor.com/en/install-mcp?name=context7&amp;amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D"&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Install MCP Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Cursor Local Server Connection&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://cursor.com/en/install-mcp?name=context7&amp;amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9"&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Install MCP Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Run this command. See &lt;a href="https://docs.anthropic.com/en/docs/claude-code/mcp"&gt;Claude Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Claude Code Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;claude mcp add --transport http context7 https://mcp.context7.com/mcp --header "CONTEXT7_API_KEY: YOUR_API_KEY"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Claude Code Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;claude mcp add context7 -- npx -y @upstash/context7-mcp --api-key YOUR_API_KEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Amp&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Run this command in your terminal. See &lt;a href="https://ampcode.com/manual#mcp"&gt;Amp MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Without API Key (Basic Usage)&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;amp mcp add context7 https://mcp.context7.com/mcp
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;With API Key (Higher Rate Limits &amp;amp; Private Repos)&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;amp mcp add context7 --header "CONTEXT7_API_KEY=YOUR_API_KEY" https://mcp.context7.com/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Windsurf MCP config file. See &lt;a href="https://docs.windsurf.com/windsurf/cascade/mcp"&gt;Windsurf MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Windsurf Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "serverUrl": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Windsurf Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D"&gt;&lt;img alt="Install in VS Code (npx)" src="https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;amp;label=Install%20Context7%20MCP&amp;amp;color=0098FF" /&gt;&lt;/a&gt; &lt;a href="https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D"&gt;&lt;img alt="Install in VS Code Insiders (npx)" src="https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;amp;label=Install%20Context7%20MCP&amp;amp;color=24bfa5" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Add this to your VS Code MCP config file. See &lt;a href="https://code.visualstudio.com/docs/copilot/chat/mcp-servers"&gt;VS Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;VS Code Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"mcp": {
  "servers": {
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;VS Code Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"mcp": {
  "servers": {
    "context7": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Install in Cline&lt;/b&gt; &lt;/summary&gt; 
 &lt;p&gt;You can easily install Context7 through the &lt;a href="https://cline.bot/mcp-marketplace"&gt;Cline MCP Server Marketplace&lt;/a&gt; by following these instructions:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open &lt;strong&gt;Cline&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;Click the hamburger menu icon (☰) to enter the &lt;strong&gt;MCP Servers&lt;/strong&gt; section.&lt;/li&gt; 
  &lt;li&gt;Use the search bar within the &lt;strong&gt;Marketplace&lt;/strong&gt; tab to find &lt;em&gt;Context7&lt;/em&gt;.&lt;/li&gt; 
  &lt;li&gt;Click the &lt;strong&gt;Install&lt;/strong&gt; button.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Or you can directly edit MCP servers configuration:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open &lt;strong&gt;Cline&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;Click the hamburger menu icon (☰) to enter the &lt;strong&gt;MCP Servers&lt;/strong&gt; section.&lt;/li&gt; 
  &lt;li&gt;Choose &lt;strong&gt;Remote Servers&lt;/strong&gt; tab.&lt;/li&gt; 
  &lt;li&gt;Click the &lt;strong&gt;Edit Configuration&lt;/strong&gt; button.&lt;/li&gt; 
  &lt;li&gt;Add context7 to &lt;code&gt;mcpServers&lt;/code&gt;:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp",
      "type": "streamableHttp",
      "headers": {
        "Authorization": "Bearer YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;It can be installed via &lt;a href="https://zed.dev/extensions?query=Context7"&gt;Zed Extensions&lt;/a&gt; or you can add this to your Zed &lt;code&gt;settings.json&lt;/code&gt;. See &lt;a href="https://zed.dev/docs/assistant/context-servers"&gt;Zed Context Server docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "context_servers": {
    "Context7": {
      "source": "custom",
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.&lt;/p&gt; 
 &lt;h3&gt;&lt;strong&gt;A. Using the Augment Code UI&lt;/strong&gt;&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Click the hamburger menu.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Select &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Navigate to the &lt;strong&gt;Tools&lt;/strong&gt; section.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;+ Add MCP&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Enter the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npx -y @upstash/context7-mcp@latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Name the MCP: &lt;strong&gt;Context7&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;Add&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Once the MCP server is added, you can start using Context7's up-to-date code documentation features directly within Augment Code.&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;&lt;strong&gt;B. Manual Configuration&lt;/strong&gt;&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel&lt;/li&gt; 
  &lt;li&gt;Select Edit Settings&lt;/li&gt; 
  &lt;li&gt;Under Advanced, click Edit in settings.json&lt;/li&gt; 
  &lt;li&gt;Add the server configuration to the &lt;code&gt;mcpServers&lt;/code&gt; array in the &lt;code&gt;augment.advanced&lt;/code&gt; object&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"augment.advanced": {
  "mcpServers": [
    {
      "name": "context7",
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Roo Code MCP configuration file. See &lt;a href="https://docs.roocode.com/features/mcp/using-mcp-in-roo"&gt;Roo Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Roo Code Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "type": "streamable-http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Roo Code Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://google-gemini.github.io/gemini-cli/docs/tools/mcp-server.html"&gt;Gemini CLI Configuration&lt;/a&gt; for details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Gemini CLI settings file. The location is &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; (where &lt;code&gt;~&lt;/code&gt; is your home directory).&lt;/li&gt; 
  &lt;li&gt;Add the following to the &lt;code&gt;mcpServers&lt;/code&gt; object in your &lt;code&gt;settings.json&lt;/code&gt; file:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "httpUrl": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY",
        "Accept": "application/json, text/event-stream"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Or, for a local server:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If the &lt;code&gt;mcpServers&lt;/code&gt; object does not exist, create it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;Remote Server Connection&lt;/h4&gt; 
 &lt;p&gt;Open Claude Desktop and navigate to Settings &amp;gt; Connectors &amp;gt; Add Custom Connector. Enter the name as &lt;code&gt;Context7&lt;/code&gt; and the remote MCP server URL as &lt;code&gt;https://mcp.context7.com/mcp&lt;/code&gt;.&lt;/p&gt; 
 &lt;h4&gt;Local Server Connection&lt;/h4&gt; 
 &lt;p&gt;Open Claude Desktop developer settings and edit your &lt;code&gt;claude_desktop_config.json&lt;/code&gt; file to add the following configuration. See &lt;a href="https://modelcontextprotocol.io/quickstart/user"&gt;Claude Desktop MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Opencode configuration file. See &lt;a href="https://opencode.ai/docs/mcp-servers"&gt;Opencode MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Opencode Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"mcp": {
  "context7": {
    "type": "remote",
    "url": "https://mcp.context7.com/mcp",
    "headers": {
      "CONTEXT7_API_KEY": "YOUR_API_KEY"
    },
    "enabled": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Opencode Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcp": {
    "context7": {
      "type": "local",
      "command": ["npx", "-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
      "enabled": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in OpenAI Codex&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://github.com/openai/codex"&gt;OpenAI Codex&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;p&gt;Add the following configuration to your OpenAI Codex MCP server settings:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[mcp_servers.context7]
args = ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
command = "npx"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;⚠️ Windows Notes&lt;/p&gt; 
 &lt;p&gt;On Windows, some users may encounter request timed out errors with the default configuration. In that case, explicitly configure the MCP server with the full path to Node.js and the installed package:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[mcp_servers.context7]
command = "C:\\Program Files\\nodejs\\node.exe"
args = [
  "C:\\Users\\yourname\\AppData\\Roaming\\npm\\node_modules\\@upstash\\context7-mcp\\dist\\index.js",
  "--transport",
  "stdio",
  "--api-key",
  "YOUR_API_KEY"
]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Alternatively, you can use the following configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[mcp_servers.context7]
command = "cmd"
args = [
    "/c",
    "npx",
    "-y",
    "@upstash/context7-mcp",
    "--api-key",
    "YOUR_API_KEY"
]
env = { SystemRoot="C:\\Windows" }
startup_timeout_ms = 20_000
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This ensures Codex CLI works reliably on Windows.&lt;/p&gt; 
 &lt;p&gt;⚠️ MacOS Notes&lt;/p&gt; 
 &lt;p&gt;On MacOS, some users may encounter the same request timed out errors like Windows, it also can be solved with the full path to Node.js and the installed package:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[mcp_servers.context7]
command = "/Users/yourname/.nvm/versions/node/v22.14.0/bin/node"  # Node.js full path
args = ["/Users/yourname/.nvm/versions/node/v22.14.0/lib/node_modules/@upstash/context7-mcp/dist/index.js",
  "--transport",
  "stdio",
  "--api-key",
  "YOUR_API_KEY"
]
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This ensures Codex CLI works reliably on MacOS.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html"&gt;JetBrains AI Assistant Documentation&lt;/a&gt; for more details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;In JetBrains IDEs, go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;AI Assistant&lt;/code&gt; -&amp;gt; &lt;code&gt;Model Context Protocol (MCP)&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Click &lt;code&gt;+ Add&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Command&lt;/code&gt; in the top-left corner of the dialog and select the As JSON option from the list&lt;/li&gt; 
  &lt;li&gt;Add this configuration and click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="5"&gt; 
  &lt;li&gt;Click &lt;code&gt;Apply&lt;/code&gt; to save changes.&lt;/li&gt; 
  &lt;li&gt;The same way context7 could be added for JetBrains Junie in &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;Junie&lt;/code&gt; -&amp;gt; &lt;code&gt;MCP Settings&lt;/code&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Kiro&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://kiro.dev/docs/mcp/configuration/"&gt;Kiro Model Context Protocol Documentation&lt;/a&gt; for details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate &lt;code&gt;Kiro&lt;/code&gt; &amp;gt; &lt;code&gt;MCP Servers&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Add a new MCP server by clicking the &lt;code&gt;+ Add&lt;/code&gt; button.&lt;/li&gt; 
  &lt;li&gt;Paste the configuration given below:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "Context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
      "env": {},
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; to apply the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Use the Add manually feature and fill in the JSON configuration information for that MCP server. For more details, visit the &lt;a href="https://docs.trae.ai/ide/model-context-protocol?_lang=en"&gt;Trae documentation&lt;/a&gt;.&lt;/p&gt; 
 &lt;h4&gt;Trae Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Trae Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Using Bun or Deno&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Use these alternatives to run the local Context7 MCP server with other runtimes. These examples work for any client that supports launching a local MCP server via command + args.&lt;/p&gt; 
 &lt;h4&gt;Bun&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "bunx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Deno&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "deno",
      "args": [
        "run",
        "--allow-env=NO_DEPRECATION,TRACE_DEPRECATION",
        "--allow-net",
        "npm:@upstash/context7-mcp"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;If you prefer to run the MCP server in a Docker container:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the Docker Image:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;First, create a &lt;code&gt;Dockerfile&lt;/code&gt; in the project root (or anywhere you prefer):&lt;/p&gt; 
   &lt;details&gt; 
    &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt; 
    &lt;pre&gt;&lt;code class="language-Dockerfile"&gt;FROM node:18-alpine

WORKDIR /app

# Install the latest version globally
RUN npm install -g @upstash/context7-mcp

# Expose default port if needed (optional, depends on MCP client interaction)
# EXPOSE 3000

# Default command to run the server
CMD ["context7-mcp"]
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/details&gt; &lt;p&gt;Then, build the image using a tag (e.g., &lt;code&gt;context7-mcp&lt;/code&gt;). &lt;strong&gt;Make sure Docker Desktop (or the Docker daemon) is running.&lt;/strong&gt; Run the following command in the same directory where you saved the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t context7-mcp .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Your MCP Client:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Update your MCP client's configuration to use the Docker command.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Example for a cline_mcp_settings.json:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "Сontext7": {
      "autoApprove": [],
      "disabled": false,
      "timeout": 60,
      "command": "docker",
      "args": ["run", "-i", "--rm", "context7-mcp"],
      "transportType": "stdio"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., &lt;code&gt;mcpServers&lt;/code&gt; vs &lt;code&gt;servers&lt;/code&gt;). Also, ensure the image name in &lt;code&gt;args&lt;/code&gt; matches the tag used during the &lt;code&gt;docker build&lt;/code&gt; command.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install Using the Desktop Extension&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Install the &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/mcpb/context7.mcpb"&gt;context7.mcpb&lt;/a&gt; file under the mcpb folder and add it to your client. For more information, please check out &lt;a href="https://github.com/anthropics/mcpb#mcp-bundles-mcpb"&gt;MCP bundles docs&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The configuration on Windows is slightly different compared to Linux or macOS (&lt;em&gt;&lt;code&gt;Cline&lt;/code&gt; is used in the example&lt;/em&gt;). The same principle applies to other editors; refer to the configuration of &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt;.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "github.com/upstash/context7-mcp": {
      "command": "cmd",
      "args": ["/c", "npx", "-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Amazon Q Developer CLI configuration file. See &lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html"&gt;Amazon Q Developer CLI docs&lt;/a&gt; for more details.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server"&gt;Warp Model Context Protocol Documentation&lt;/a&gt; for details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate &lt;code&gt;Settings&lt;/code&gt; &amp;gt; &lt;code&gt;AI&lt;/code&gt; &amp;gt; &lt;code&gt;Manage MCP servers&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Add a new MCP server by clicking the &lt;code&gt;+ Add&lt;/code&gt; button.&lt;/li&gt; 
  &lt;li&gt;Paste the configuration given below:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "Context7": {
    "command": "npx",
    "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
    "env": {},
    "working_directory": null,
    "start_on_launch": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; to apply the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Copilot Coding Agent&lt;/b&gt;&lt;/summary&gt; 
 &lt;h2&gt;Using Context7 with Copilot Coding Agent&lt;/h2&gt; 
 &lt;p&gt;Add the following configuration to the &lt;code&gt;mcp&lt;/code&gt; section of your Copilot Coding Agent configuration file Repository-&amp;gt;Settings-&amp;gt;Copilot-&amp;gt;Coding agent-&amp;gt;MCP configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      },
      "tools": ["get-library-docs", "resolve-library-id"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more information, see the &lt;a href="https://docs.github.com/en/enterprise-cloud@latest/copilot/how-tos/agents/copilot-coding-agent/extending-copilot-coding-agent-with-mcp"&gt;official GitHub documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in LM Studio&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://lmstudio.ai/blog/lmstudio-v0.3.17"&gt;LM Studio MCP Support&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;h4&gt;One-click install:&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://lmstudio.ai/install-mcp?name=context7&amp;amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsIkB1cHN0YXNoL2NvbnRleHQ3LW1jcCJdfQ%3D%3D"&gt;&lt;img src="https://files.lmstudio.ai/deeplink/mcp-install-light.svg?sanitize=true" alt="Add MCP Server context7 to LM Studio" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;Manual set-up:&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate to &lt;code&gt;Program&lt;/code&gt; (right side) &amp;gt; &lt;code&gt;Install&lt;/code&gt; &amp;gt; &lt;code&gt;Edit mcp.json&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Paste the configuration given below:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "Context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="3"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; to apply the changes.&lt;/li&gt; 
  &lt;li&gt;Toggle the MCP server on/off from the right hand side, under &lt;code&gt;Program&lt;/code&gt;, or by clicking the plug icon at the bottom of the chat box.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Visual Studio 2022&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You can configure Context7 MCP in Visual Studio 2022 by following the &lt;a href="https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022"&gt;Visual Studio MCP Servers documentation&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Add this to your Visual Studio MCP config file (see the &lt;a href="https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022"&gt;Visual Studio docs&lt;/a&gt; for details):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "inputs": [],
  "servers": {
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Or, for a local server:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcp": {
    "servers": {
      "context7": {
        "type": "stdio",
        "command": "npx",
        "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more information and troubleshooting, refer to the &lt;a href="https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022"&gt;Visual Studio MCP Servers documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Crush&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Crush configuration file. See &lt;a href="https://github.com/charmbracelet/crush#mcps"&gt;Crush MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Crush Remote Server Connection (HTTP)&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Crush Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "context7": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in BoltAI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Open the "Settings" page of the app, navigate to "Plugins," and enter the following JSON:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once saved, enter in the chat &lt;code&gt;get-library-docs&lt;/code&gt; followed by your Context7 documentation ID (e.g., &lt;code&gt;get-library-docs /nuxt/ui&lt;/code&gt;). More information is available on &lt;a href="https://docs.boltai.com/docs/plugins/mcp-servers"&gt;BoltAI's Documentation site&lt;/a&gt;. For BoltAI on iOS, &lt;a href="https://docs.boltai.com/docs/boltai-mobile/mcp-servers"&gt;see this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Rovo Dev CLI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Edit your Rovo Dev CLI MCP config by running the command below -&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;acli rovodev mcp
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Example config -&lt;/p&gt; 
 &lt;h4&gt;Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Zencoder&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;To configure Context7 MCP in Zencoder, follow these steps:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Zencoder menu (...)&lt;/li&gt; 
  &lt;li&gt;From the dropdown menu, select Agent tools&lt;/li&gt; 
  &lt;li&gt;Click on the Add custom MCP&lt;/li&gt; 
  &lt;li&gt;Add the name and server configuration from below, and make sure to hit the Install button&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "command": "npx",
  "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once the MCP server is added, you can easily continue using it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Qodo Gen&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://docs.qodo.ai/qodo-documentation/qodo-gen/qodo-gen-chat/agentic-mode/agentic-tools-mcps"&gt;Qodo Gen docs&lt;/a&gt; for more details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open Qodo Gen chat panel in VSCode or IntelliJ.&lt;/li&gt; 
  &lt;li&gt;Click Connect more tools.&lt;/li&gt; 
  &lt;li&gt;Click + Add new MCP.&lt;/li&gt; 
  &lt;li&gt;Add the following configuration:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Qodo Gen Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Qodo Gen Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Perplexity Desktop&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://www.perplexity.ai/help-center/en/articles/11502712-local-and-remote-mcps-for-perplexity"&gt;Local and Remote MCPs for Perplexity&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate &lt;code&gt;Perplexity&lt;/code&gt; &amp;gt; &lt;code&gt;Settings&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Connectors&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Click &lt;code&gt;Add Connector&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Advanced&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Enter Server Name: &lt;code&gt;Context7&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Paste the following JSON in the text area:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
  "command": "npx",
  "env": {}
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="7"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;🔨 Available Tools&lt;/h2&gt; 
&lt;p&gt;Context7 MCP provides the following tools that LLMs can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;resolve-library-id&lt;/code&gt;: Resolves a general library name into a Context7-compatible library ID.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;libraryName&lt;/code&gt; (required): The name of the library to search for&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;get-library-docs&lt;/code&gt;: Fetches documentation for a library using a Context7-compatible library ID.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;context7CompatibleLibraryID&lt;/code&gt; (required): Exact Context7-compatible library ID (e.g., &lt;code&gt;/mongodb/docs&lt;/code&gt;, &lt;code&gt;/vercel/next.js&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;topic&lt;/code&gt; (optional): Focus the docs on a specific topic (e.g., "routing", "hooks")&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;tokens&lt;/code&gt; (optional, default 5000): Max number of tokens to return. Values less than 1000 are automatically increased to 1000.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛟 Tips&lt;/h2&gt; 
&lt;h3&gt;Add a Rule&lt;/h3&gt; 
&lt;p&gt;If you don’t want to add &lt;code&gt;use context7&lt;/code&gt; to every prompt, you can define a simple rule in your MCP client's rule section:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For Windsurf, in &lt;code&gt;.windsurfrules&lt;/code&gt; file&lt;/li&gt; 
 &lt;li&gt;For Cursor, from &lt;code&gt;Cursor Settings &amp;gt; Rules&lt;/code&gt; section&lt;/li&gt; 
 &lt;li&gt;For Claude Code, in &lt;code&gt;CLAUDE.md&lt;/code&gt; file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or the equivalent in your MCP client to auto-invoke Context7 on any code question.&lt;/p&gt; 
&lt;h4&gt;Example Rule&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Always use context7 when I need code generation, setup or configuration steps, or
library/API documentation. This means you should automatically use the Context7 MCP
tools to resolve library id and get library docs without me having to explicitly ask.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From then on, you’ll get Context7’s docs in any related conversation without typing anything extra. You can alter the rule to match your use cases.&lt;/p&gt; 
&lt;h3&gt;Use Library Id&lt;/h3&gt; 
&lt;p&gt;If you already know exactly which library you want to use, add its Context7 ID to your prompt. That way, Context7 MCP server can skip the library-matching step and directly continue with retrieving docs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Implement basic authentication with Supabase. use library /supabase/supabase for API and docs.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The slash syntax tells the MCP tool exactly which library to load docs for.&lt;/p&gt; 
&lt;h3&gt;HTTPS Proxy&lt;/h3&gt; 
&lt;p&gt;If you are behind an HTTP proxy, Context7 uses the standard &lt;code&gt;https_proxy&lt;/code&gt; / &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variables.&lt;/p&gt; 
&lt;h2&gt;💻 Development&lt;/h2&gt; 
&lt;p&gt;Clone the project and install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dist/index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CLI Arguments&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;context7-mcp&lt;/code&gt; accepts the following CLI flags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--transport &amp;lt;stdio|http&amp;gt;&lt;/code&gt; – Transport to use (&lt;code&gt;stdio&lt;/code&gt; by default). Note that HTTP transport automatically provides both HTTP and SSE endpoints.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--port &amp;lt;number&amp;gt;&lt;/code&gt; – Port to listen on when using &lt;code&gt;http&lt;/code&gt; transport (default &lt;code&gt;3000&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--api-key &amp;lt;key&amp;gt;&lt;/code&gt; – API key for authentication (or set &lt;code&gt;CONTEXT7_API_KEY&lt;/code&gt; env var). You can get your API key by creating an account at &lt;a href="https://context7.com/dashboard"&gt;context7.com/dashboard&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example with HTTP transport and port 8080:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dist/index.js --transport http --port 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another example with stdio transport:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dist/index.js --transport stdio --api-key YOUR_API_KEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Environment Variables&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;CONTEXT7_API_KEY&lt;/code&gt; environment variable instead of passing the &lt;code&gt;--api-key&lt;/code&gt; flag. This is useful for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Storing API keys securely in &lt;code&gt;.env&lt;/code&gt; files&lt;/li&gt; 
 &lt;li&gt;Integration with MCP server setups that use dotenv&lt;/li&gt; 
 &lt;li&gt;Tools that prefer environment variable configuration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;--api-key&lt;/code&gt; CLI flag takes precedence over the environment variable when both are provided.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example with .env file:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# .env
CONTEXT7_API_KEY=your_api_key_here
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Example MCP configuration using environment variable:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp"],
      "env": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Local Configuration Example&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["tsx", "/path/to/folder/context7/src/index.ts", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Testing with MCP Inspector&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx -y @modelcontextprotocol/inspector npx @upstash/context7-mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;🚨 Troubleshooting&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Module Not Found Errors&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;If you encounter &lt;code&gt;ERR_MODULE_NOT_FOUND&lt;/code&gt;, try using &lt;code&gt;bunx&lt;/code&gt; instead of &lt;code&gt;npx&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "bunx",
      "args": ["-y", "@upstash/context7-mcp"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This often resolves module resolution issues in environments where &lt;code&gt;npx&lt;/code&gt; doesn't properly install or resolve packages.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;ESM Resolution Issues&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;For errors like &lt;code&gt;Error: Cannot find module 'uriTemplate.js'&lt;/code&gt;, try the &lt;code&gt;--experimental-vm-modules&lt;/code&gt; flag:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "--node-options=--experimental-vm-modules", "@upstash/context7-mcp@1.0.6"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;TLS/Certificate Issues&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Use the &lt;code&gt;--experimental-fetch&lt;/code&gt; flag to bypass TLS-related problems:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "--node-options=--experimental-fetch", "@upstash/context7-mcp"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;General MCP Client Errors&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Try adding &lt;code&gt;@latest&lt;/code&gt; to the package name&lt;/li&gt; 
  &lt;li&gt;Use &lt;code&gt;bunx&lt;/code&gt; as an alternative to &lt;code&gt;npx&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Consider using &lt;code&gt;deno&lt;/code&gt; as another alternative&lt;/li&gt; 
  &lt;li&gt;Ensure you're using Node.js v18 or higher for native fetch support&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;⚠️ Disclaimer&lt;/h2&gt; 
&lt;p&gt;Context7 projects are community-contributed and while we strive to maintain high quality, we cannot guarantee the accuracy, completeness, or security of all library documentation. Projects listed in Context7 are developed and maintained by their respective owners, not by Context7. If you encounter any suspicious, inappropriate, or potentially harmful content, please use the "Report" button on the project page to notify us immediately. We take all reports seriously and will review flagged content promptly to maintain the integrity and safety of our platform. By using Context7, you acknowledge that you do so at your own discretion and risk.&lt;/p&gt; 
&lt;h2&gt;🤝 Connect with Us&lt;/h2&gt; 
&lt;p&gt;Stay updated and join our community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📢 Follow us on &lt;a href="https://x.com/context7ai"&gt;X&lt;/a&gt; for the latest news and updates&lt;/li&gt; 
 &lt;li&gt;🌐 Visit our &lt;a href="https://context7.com"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 Join our &lt;a href="https://upstash.com/discord"&gt;Discord Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📺 Context7 In Media&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/52FC3qObp9E"&gt;Better Stack: "Free Tool Makes Cursor 10x Smarter"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G7gK8H6u7Rs"&gt;Cole Medin: "This is Hands Down the BEST MCP Server for AI Coding Assistants"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-ggvzyLpK6o"&gt;Income Stream Surfers: "Context7 + SequentialThinking MCPs: Is This AGI?"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CTZm6fBYisc"&gt;Julian Goldie SEO: "Context7: New MCP AI Agent Update"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-ls0D-rtET4"&gt;JeredBlu: "Context 7 MCP: Get Documentation Instantly + VS Code Setup"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PS-2Azb-C3M"&gt;Income Stream Surfers: "Context7: The New MCP Server That Will CHANGE AI Coding"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qZfENAPMnyo"&gt;AICodeKing: "Context7 + Cline &amp;amp; RooCode: This MCP Server Makes CLINE 100X MORE EFFECTIVE!"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LqTQi8qexJM"&gt;Sean Kochel: "5 MCP Servers For Vibe Coding Glory (Just Plug-In &amp;amp; Go)"&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#upstash/context7&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=upstash/context7&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>blackmatrix7/ios_rule_script</title>
      <link>https://github.com/blackmatrix7/ios_rule_script</link>
      <description>&lt;p&gt;分流规则、重写写规则及脚本。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rules And Scripts&lt;/h1&gt; 
&lt;h2&gt;前言&lt;/h2&gt; 
&lt;p&gt;各平台的分流规则、复写规则及自动化脚本。&lt;/p&gt; 
&lt;h2&gt;特别声明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/li&gt; 
 &lt;li&gt;编写本项目主要目的为学习和研究ES6，无法保证项目内容的合法性、准确性、完整性和有效性。&lt;/li&gt; 
 &lt;li&gt;本项目涉及的数据由使用的个人或组织自行填写，本项目不对数据内容负责，包括但不限于数据的真实性、准确性、合法性。使用本项目所造成的一切后果，与本项目的所有贡献者无关，由使用的个人或组织完全承担。&lt;/li&gt; 
 &lt;li&gt;本项目中涉及的第三方硬件、软件等，与本项目没有任何直接或间接的关系。本项目仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本项目无关。&lt;/li&gt; 
 &lt;li&gt;本项目中所有内容只供学习和研究使用，不得将本项目中任何内容用于违反国家/地区/组织等的法律法规或相关规定的其他用途。&lt;/li&gt; 
 &lt;li&gt;所有基于本项目源代码，进行的任何修改，为其他个人或组织的自发行为，与本项目没有任何直接或间接的关系，所造成的一切后果亦与本项目无关。&lt;/li&gt; 
 &lt;li&gt;所有直接或间接使用本项目的个人和组织，应24小时内完成学习和研究，并及时删除本项目中的所有内容。如对本项目的功能有需求，应自行开发相关功能。&lt;/li&gt; 
 &lt;li&gt;本项目保留随时对免责声明进行补充或更改的权利，直接或间接使用本项目内容的个人或组织，视为接受本项目的特别声明。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;规则&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;我们并不生产规则，我们只是开源规则的搬运工。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;分流规则&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/rule"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rule&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;复写规则&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;所有规则数据都来自互联网，感谢开源规则项目作者的辛勤付出。&lt;/p&gt; 
&lt;h2&gt;脚本&lt;/h2&gt; 
&lt;h3&gt;脚本说明&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;脚本&lt;/th&gt; 
   &lt;th&gt;介绍&lt;/th&gt; 
   &lt;th&gt;框架&lt;/th&gt; 
   &lt;th&gt;维护状态&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/smzdm"&gt;什么值得买&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;什么值得买任务和去广告&lt;/td&gt; 
   &lt;td&gt;MagicJS 2/3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/tieba"&gt;百度贴吧&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;带重试功能的贴吧签到，提高签到成功率&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/startup"&gt;开屏去广告&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;通过脚本去除缓存到本地的APP开屏广告&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/manmanbuy"&gt;慢慢买&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/dingdong"&gt;叮咚买菜&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/famijia"&gt;Fa米家&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/luka"&gt;Luka&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/zheye"&gt;哲也同学&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;之乎者也&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/synology"&gt;Synology&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;群晖Download Station资源离线下载&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/applestore"&gt;AppleStore&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AppleStore 商品库存监控&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;暂停&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Quantumult X Gallery&lt;/h4&gt; 
&lt;p&gt;部分脚本已配置为Quantumult X Gallery。&lt;/p&gt; 
&lt;p&gt;地址： &lt;a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json"&gt;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;BoxJS&lt;/h4&gt; 
&lt;p&gt;感谢 &lt;a href="https://github.com/chouchoui"&gt;@chouchoui&lt;/a&gt; 为本项目添加BoxJS的订阅。&lt;/p&gt; 
&lt;p&gt;地址：&lt;a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/boxjs.json"&gt;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/boxjs.json&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;外部资源&lt;/h3&gt; 
&lt;p&gt;项目中资源来自互联网上其他开源项目（具体以不同目录的说明为准），这里主要进行一些整合和备份。对于此类资源，无法对使用过程中出现的任何问题进行解答，您需要联系原作者。&lt;/p&gt; 
&lt;p&gt;地址：&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/external"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/external&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;感谢&lt;/h1&gt; 
&lt;p&gt;以下排名不分先后&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/BaileyZyp"&gt;@BaileyZyp&lt;/a&gt; &lt;a href="https://github.com/Mazeorz"&gt;@Mazeorz&lt;/a&gt; &lt;a href="https://github.com/LuzMasonj"&gt;@LuzMasonj&lt;/a&gt; &lt;a href="https://github.com/chouchoui"&gt;@chouchoui&lt;/a&gt; &lt;a href="https://github.com/ypannnn"&gt;@ypannnn&lt;/a&gt; &lt;a href="https://github.com/echizenryoma"&gt;@echizenryoma&lt;/a&gt; &lt;a href="https://github.com/zirawell"&gt;@zirawell&lt;/a&gt; &lt;a href="https://github.com/urzz"&gt;@urzz&lt;/a&gt; &lt;a href="https://github.com/ASD-max"&gt;@ASD-max&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BaldissaraMatheus/Tasks.md</title>
      <link>https://github.com/BaldissaraMatheus/Tasks.md</link>
      <description>&lt;p&gt;A self-hosted, Markdown file based task management board&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/public/logo.png" alt="logo" /&gt; Tasks.md&lt;/h1&gt; 
&lt;p&gt;A self-hosted, Markdown file based task management board.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/public/demo.gif" alt="Demo" /&gt;&lt;/p&gt; 
&lt;h2&gt;⭐ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create cards, lanes and tags in a modern and responsive interface;&lt;/li&gt; 
 &lt;li&gt;Write cards as Markdown files;&lt;/li&gt; 
 &lt;li&gt;Easy to install with a single Docker image;&lt;/li&gt; 
 &lt;li&gt;Light and dark themes synced with operating system settings;&lt;/li&gt; 
 &lt;li&gt;Heavily customizable with 3 default color themes (&lt;a href="https://gnome.pages.gitlab.gnome.org/libadwaita/doc/main/named-colors.html"&gt;Adwaita&lt;/a&gt;, &lt;a href="https://www.nordtheme.com/"&gt;Nord&lt;/a&gt; and &lt;a href="https://github.com/catppuccin/catppuccin"&gt;Catppuccin&lt;/a&gt;);&lt;/li&gt; 
 &lt;li&gt;Support for subpath based reverse-proxy with an environment variable for base path;&lt;/li&gt; 
 &lt;li&gt;Can be installed as PWA.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Upgrade from 2.X.X to 3.X.X&lt;/h2&gt; 
&lt;p&gt;If you're running a docker container with version 2 of Tasks.md and want to upgrade it to version 3, please follow up &lt;a href="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/migration-guide.md"&gt;those instructions&lt;/a&gt; as it requires some tweeks for it to work properly.&lt;/p&gt; 
&lt;h2&gt;🐋 Installation&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Paste this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d \
  --name tasks.md \
  -e PUID=1000 \
  -e PGID=1000 \
  -e TITLE="" \
  -e BASE_PATH="" \
  -e LOCAL_IMAGES_CLEANUP_INTERVAL=1440 \
  -p 8080:8080 \
  -v /path/to/tasks/:/tasks/ \
  -v /path/to/config/:/config/ \
  --restart unless-stopped \
  baldissaramatheus/tasks.md
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Remove the environment variables you don't want to keep (all of them are optional, PUID and PGID are recommended), replace &lt;code&gt;/path/to/something&lt;/code&gt; with directories that exist in your filesystem and then execute it. The environment variables are the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;PUID&lt;/code&gt; and &lt;code&gt;PGID&lt;/code&gt;: User ID and group ID that owns the files and directories. On linux distros you can find your user's UID and GID running &lt;code&gt;id&lt;/code&gt; in the terminal, but it's usually &lt;code&gt;1000&lt;/code&gt; for both variables. If no value is assigned for those variables, docker will create all the files and directories as root. You can read more about it &lt;a href="https://docs.linuxserver.io/general/understanding-puid-and-pgid/"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TITLE&lt;/code&gt;: A given name that shows below the header and in the browser tab when accessing root path;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BASE_PATH&lt;/code&gt;: Base path in the url. Use this variable if you are going to run the app under a subpath based reverse-proxy. Be aware that PWA does not work when BASE_PATH is set with anything other than "/";&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LOCAL_IMAGES_CLEANUP_INTERVAL&lt;/code&gt;: After a given interval the app will remove all local images that aren't present in any task. This variable control the duration in minutes of this interval. The default value is 1440 (exactly 24h). Set it as 0 to disable it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;docker-compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;version: "3"
services:
  tasks.md:
    image: baldissaramatheus/tasks.md
    container_name: tasks.md
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - /path/to/tasks:/tasks
      - /path/to/config:/config
    restart: unless-stopped
    ports:
      - 8080:8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the Docker section above as reference for setting up variables and volumes.&lt;/p&gt; 
&lt;h3&gt;Source code&lt;/h3&gt; 
&lt;p&gt;Clone the repository with &lt;code&gt;git clone --recursive&lt;/code&gt;, open a terminal instance in the &lt;code&gt;/frontend&lt;/code&gt; directory and another one in the &lt;code&gt;/backend&lt;/code&gt; directory, then in both of them run &lt;code&gt;npm install&lt;/code&gt; and &lt;code&gt;npm start&lt;/code&gt;. The env variables are set in &lt;code&gt;package.json&lt;/code&gt; file for both directories, and are the same ones listed in the Docker section above, plus &lt;code&gt;CONFIG_DIR&lt;/code&gt; and &lt;code&gt;TASKS_DIR&lt;/code&gt; for config and tasks directories paths.&lt;/p&gt; 
&lt;h2&gt;🎨 Customize&lt;/h2&gt; 
&lt;p&gt;You can customize the application CSS through the &lt;code&gt;custom.css&lt;/code&gt; (within &lt;code&gt;/config&lt;/code&gt; directory if you're on Docker). You can replace the default &lt;code&gt;adwaita&lt;/code&gt; theme with &lt;code&gt;nord&lt;/code&gt; or &lt;code&gt;catppuccin&lt;/code&gt;, or you can make your own changes. The easieste way to customize the application is to use the existing color variables (detailed &lt;a href="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/#color-variables"&gt;below&lt;/a&gt;), but if you want to make changes other than color replacements you can use &lt;a href="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/frontend/src/stylesheets/index.css"&gt;index.css&lt;/a&gt; file as a reference.&lt;/p&gt; 
&lt;h3&gt;Color variables&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;color-accent&lt;/code&gt;: Highlight color;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-foreground&lt;/code&gt;: Anything that goes against background that needs contrast, text color;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-background-1&lt;/code&gt;: Main background color, used as background color for the app main page;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-background-2&lt;/code&gt;: 1 layer above main background color, used as background color for editor code-block, dialog, popovers, lanes and header;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-background-3&lt;/code&gt;: 2 layer above main background color, used as background color for cards;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-background-4&lt;/code&gt;: 3 layer above main background color, used as background color for buttons and inputs;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-alt-1&lt;/code&gt;: Used as tag color, input error and past due date;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-alt-2&lt;/code&gt;: Used as tag color;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-alt-3&lt;/code&gt;: Used as tag color and due date when it's current date;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-alt-4&lt;/code&gt;: Used as tag color;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-alt-5&lt;/code&gt;: Used as tag color;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-alt-6&lt;/code&gt;: Used as tag color;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;color-alt-7&lt;/code&gt;: Used as tag color;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📁 Files structure&lt;/h2&gt; 
&lt;p&gt;The way directories and files are organized in Tasks.md is quite simple. Every lane you add within the app is a directory in your filesystem and every task is file.&lt;/p&gt; 
&lt;h4&gt;So if your tasks look like this:&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/public/directories-organization-1.png" alt="Screenshot of the app. There are 3 lanes, Backlog, Sprint and Done. Within Done there is one file named &amp;quot;Something something&amp;quot;" /&gt;&lt;/p&gt; 
&lt;h4&gt;Your files should look like this:&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/public/directories-organization-2.png" alt="Screenshot of a file explorer showing 3 folders: Backlog, Sprint and Done" /&gt; &lt;img src="https://raw.githubusercontent.com/BaldissaraMatheus/Tasks.md/main/public/directories-organization-3.png" alt="Screenshot of file explorer within a folder called &amp;quot;Done&amp;quot;, containing one file named &amp;quot;Something something&amp;quot;" /&gt;&lt;/p&gt; 
&lt;p&gt;Sub-directories can also be opened as their own projects. In this example, by opening the app under &lt;code&gt;/backlog&lt;/code&gt; path it will treat this directory as a different project, with its own lanes and tasks.&lt;/p&gt; 
&lt;p&gt;More details (and it how it looks within Obsidian) can be found &lt;a href="https://github.com/BaldissaraMatheus/Tasks.md/issues/49"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💻 Technology stack&lt;/h2&gt; 
&lt;p&gt;With the goal of having a good mix of performance and maintainability, the application was built with &lt;a href="https://github.com/solidjs/solid"&gt;SolidJS&lt;/a&gt; and &lt;a href="https://github.com/koajs/koa"&gt;Koa&lt;/a&gt;. It also uses &lt;a href="https://github.com/StackExchange/Stacks-Editor"&gt;Stacks-Editor&lt;/a&gt; for text editing and &lt;a href="https://github.com/expressjs/serve-static"&gt;serve-static&lt;/a&gt; to serve the css files as-is.&lt;/p&gt; 
&lt;h2&gt;🔨 Contribute&lt;/h2&gt; 
&lt;p&gt;This is a low maintenance project. The scope of features and support are purposefully kept narrow to ensure longer term maintenance is viable. Issues and PRs raised for bugs and quality of life improvements are perfectly fine, just don’t do that for features that significantly increase the scope of the project.&lt;/p&gt; 
&lt;h3&gt;Sponsor&lt;/h3&gt; 
&lt;p&gt;If you like the project, consider &lt;a href="https://github.com/sponsors/BaldissaraMatheus"&gt;becoming a sponsor&lt;/a&gt; with a one-time donation!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>be5invis/Iosevka</title>
      <link>https://github.com/be5invis/Iosevka</link>
      <description>&lt;p&gt;Versatile typeface for code, from code.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/grand-title.light.svg#gh-light-mode-only" title="Iosevka Grand Title" /&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/grand-title.dark.svg#gh-dark-mode-only" title="Iosevka Grand Title" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/be5invis/Iosevka/releases#gh-light-mode-only"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/button-release.light.svg#gh-light-mode-only" title="Release" /&gt;&lt;/a&gt;&lt;a href="https://github.com/be5invis/Iosevka/releases#gh-dark-mode-only"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/button-release.dark.svg#gh-dark-mode-only" title="Release" /&gt;&lt;/a&gt; &lt;a href="https://be5invis.github.io/Iosevka/customizer#gh-light-mode-only"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/button-customize.light.svg#gh-light-mode-only" title="Customizer" /&gt;&lt;/a&gt;&lt;a href="https://be5invis.github.io/Iosevka/customizer#gh-dark-mode-only"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/button-customize.dark.svg#gh-dark-mode-only" title="Customizer" /&gt;&lt;/a&gt; &lt;a href="https://be5invis.github.io/Iosevka/specimen#gh-light-mode-only"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/button-specimen.light.svg#gh-light-mode-only" title="Specimen" /&gt;&lt;/a&gt;&lt;a href="https://be5invis.github.io/Iosevka/specimen#gh-dark-mode-only"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/button-specimen.dark.svg#gh-dark-mode-only" title="Specimen" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Iosevka&lt;/strong&gt; [ˌjɔˈseβ.kʰa] is an &lt;em&gt;open-source&lt;/em&gt;, &lt;em&gt;sans-serif&lt;/em&gt; + &lt;em&gt;slab-serif&lt;/em&gt;, &lt;em&gt;monospace&lt;/em&gt; + &lt;em&gt;quasi‑proportional&lt;/em&gt; typeface family, designed for &lt;em&gt;writing code&lt;/em&gt;, using in &lt;em&gt;terminals&lt;/em&gt;, and preparing &lt;em&gt;technical documents&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Installing from GitHub Releases&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download your font package from &lt;a href="https://github.com/be5invis/Iosevka/releases"&gt;releases&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;For Linux users you could use the following command to download all the TTC packages in the latest release: &lt;pre&gt;&lt;code class="language-bash"&gt;curl -s 'https://api.github.com/repos/be5invis/Iosevka/releases/latest' | jq -r ".assets[] | .browser_download_url" | grep PkgTTC-Iosevka | xargs -n 1 curl -L -O --fail --silent --show-error
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Quit all your editors / programs.&lt;/li&gt; 
 &lt;li&gt;Unarchive the font package and you will see the font files.&lt;/li&gt; 
 &lt;li&gt;Take actions depending on your OS: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Select the font files and drag into font &lt;a href="ms-settings:fonts"&gt;settings&lt;/a&gt; / font control panel page. 
    &lt;ul&gt; 
     &lt;li&gt;On Windows 10 1809 or newer, the default font installation is per-user, and it may cause compatibility issues for some applications, mostly written in Java. To cope with this, right click and select “Install for all users” instead. &lt;a href="https://youtrack.jetbrains.com/issue/JRE-1166?p=IDEA-200145"&gt;Ref.&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;a href="http://support.apple.com/kb/HT2509"&gt;Follow instructions here&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; : Copy the font files to your fonts directory then run &lt;code&gt;sudo fc-cache&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Installing via Package Managers&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Disclaimer: This repository does not maintain any package manager distribution. The packages listed below may not always be up-to-date.&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Standard distribution in Homebrew: &lt;pre&gt;&lt;code class="language-bash"&gt;brew install --cask font-iosevka
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Search for other variants using &lt;code&gt;brew search font-iosevka&lt;/code&gt; and install what you want.&lt;/li&gt; 
   &lt;li&gt;Customizable install using Homebrew: see &lt;a href="https://github.com/robertgzr/homebrew-tap"&gt;robertgzr/homebrew-tap&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Arch Linux: Install one of the &lt;a href="https://archlinux.org/packages/?q=ttc-iosevka"&gt;ttc-iosevka packages&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Ubuntu Linux: Install one of the &lt;a href="http://sid.ethz.ch/debian/fonts-iosevka/"&gt;fonts-iosevka packages&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Void Linux: Install the font with &lt;code&gt;xbps-install font-iosevka&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Fedora: Install the font(s) from &lt;a href="https://copr.fedorainfracloud.org/coprs/peterwu/iosevka/"&gt;the COPR here&lt;/a&gt;. Run &lt;code&gt;dnf search iosevka&lt;/code&gt; to discover available fonts and &lt;code&gt;dnf install&lt;/code&gt; to install the chosen one(s).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeBSD&lt;/strong&gt;: The font can be installed with &lt;code&gt;pkg install iosevka&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenBSD&lt;/strong&gt;: Run &lt;code&gt;pkg_info -Q iosevka&lt;/code&gt; to see which Iosevka packages are available. Use &lt;code&gt;pkg_add&lt;/code&gt; to install the chosen package(s).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;In the official package, Iosevka provides 6 monospace subfamilies (sans-serif and slab-serif, each in the 3 spacings Default, Term and Fixed) and 2 quasi-proportional subfamilies (Aile (sans-serif) and Etoile (slab-serif)). In all the monospace subfamilies, 9 weights (Thin to Heavy), 2 widths (Normal and Extended), and 3 slopes (Upright, Italic and Oblique) are included. In the quasi-proportional subfamilies, the quantity of widths is reduced to 1.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/weights.light.svg#gh-light-mode-only" alt="Weights sample" /&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/weights.dark.svg#gh-dark-mode-only" alt="Weights sample" /&gt;&lt;/p&gt; 
&lt;p&gt;All versions include the same ranges of characters: Latin letters, Greek letters (including Polytonic), some Cyrillic letters, IPA symbols and common punctuations and some symbols. You can check out the full list &lt;a href="http://be5invis.github.io/Iosevka/specimen"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/languages.light.svg#gh-light-mode-only" alt="Languages Sample" /&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/languages.dark.svg#gh-dark-mode-only" alt="Languages Sample" /&gt;&lt;/p&gt; 
&lt;!-- BEGIN Section-Language-List --&gt; 
&lt;!-- THIS SECTION IS AUTOMATICALLY GENERATED. DO NOT EDIT. --&gt; 
&lt;p&gt;241 Supported Languages:&lt;/p&gt; 
&lt;p&gt;Abkhazian, Afar, Afrikaans, Aghem, Akan, Akoose, Albanian, Anii, Aragonese, Armenian, Asturian, Asu, Atsam, Azerbaijani, Bafia, Baluchi&amp;nbsp;(bal_latn), Bambara, Basaa, Bashkir, Basque, Belarusian, Bemba, Bena, Betawi, Bosnian, Breton, Bulgarian, Caddo, Catalan, Cebuano, Central Atlas Tamazight, Chechen, Chickasaw, Chiga, Chinese&amp;nbsp;(zh_latn), Choctaw, Church Slavic, Chuvash, Colognian, Cornish, Corsican, Croatian, Czech, Danish, Duala, Dutch, Embu, English, Erzya, Esperanto, Estonian, Ewe, Ewondo, Faroese, Filipino, Finnish, French, Friulian, Fula, Ga, Galician, Ganda, German, Greek, Guarani, Gusii, Haitian Creole, Hausa, Hawaiian, Hindi (Latin), Hungarian, Icelandic, Ido, Igbo, Inari Sami, Indonesian, Interlingua, Interlingue, Inuktitut&amp;nbsp;(iu_latn), Irish, Italian, Javanese, Jju, Jola-Fonyi, Kabuverdianu, Kabyle, Kaingang, Kako, Kalaallisut, Kalenjin, Kamba, Kara-Kalpak, Kazakh, Kenyang, Kikuyu, Kinyarwanda, Konkani&amp;nbsp;(kok_latn), Koyra Chiini, Koyraboro Senni, Kpelle, Kurdish, Kuvi, Kwasio, Kyrgyz, Kʼicheʼ, Lakota, Langi, Latgalian, Latin, Latvian, Ligurian, Lingala, Lithuanian, Lojban, Lombard, Low German, Lower Sorbian, Luba-Katanga, Lule Sami, Luo, Luxembourgish, Luyia, Macedonian, Machame, Makhuwa, Makhuwa-Meetto, Makonde, Malagasy, Malay, Maltese, Manx, Mapuche, Masai, Meru, Metaʼ, Mi'kmaw, Mohawk, Moksha, Mongolian, Morisyen, Mundang, Muscogee, Māori, Nama, Navajo, Ngiemboon, Ngomba, Nheengatu, Nigerian Pidgin, North Ndebele, Northern Frisian, Northern Sami, Northern Sotho, Norwegian, Norwegian Bokmål, Norwegian Nynorsk, Nuer, Nyanja, Nyankole, Obolo, Occitan, Oromo, Ossetic, Papiamento, Pijin, Polish, Portuguese, Prussian, Quechua, Riffian, Romanian, Romansh, Rombo, Rundi, Russian, Rwa, Saho, Samburu, Sango, Sangu, Sardinian, Scottish Gaelic, Sena, Serbian, Shambala, Shona, Sicilian, Sidamo, Silesian, Skolt Sami, Slovak, Slovenian, Soga, Somali, South Ndebele, Southern Sami, Southern Sotho, Spanish, Sundanese, Swahili, Swati, Swedish, Swiss German, Tachelhit&amp;nbsp;(shi_latn), Taita, Tajik, Taroko, Tasawaq, Tatar, Teso, Tok Pisin, Toki Pona, Tongan, Tsonga, Tswana, Turkish, Turkmen, Tuvinian, Tyap, Ukrainian, Upper Sorbian, Uzbek, Vai&amp;nbsp;(vai_latn), Venda, Venetian, Vietnamese, Volapük, Vunjo, Walloon, Walser, Warlpiri, Welsh, Western Frisian, Wolof, Xhosa, Yakut, Yangben, Yoruba, Zarma, Zhuang, Zulu&lt;/p&gt; 
&lt;!-- END Section-Language-List --&gt; 
&lt;h3&gt;Stylistic Sets&lt;/h3&gt; 
&lt;p&gt;Monospace Iosevka contains various stylistic sets to change the shape of certain characters. Enabling corresponded OpenType feature to enable.&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/be5invis/Iosevka/main/doc/stylistic-sets.md"&gt;View list of stylistic sets of Iosevka.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Character Variants&lt;/h3&gt; 
&lt;p&gt;Alongside stylistic sets, Monospace Iosevka can also be configured to cherry-pick variants for each character using OpenType. The variants are shown below. To enable, assign the feature tag to the variant index. For example, setting &lt;code&gt;cv26&lt;/code&gt; to &lt;code&gt;6&lt;/code&gt; will enable single-storey &lt;code&gt;a&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Caution :&lt;/strong&gt; Certain software may limit the quantity of OpenType features and drop some of them if the feature list is too long. Please validate your feature configuration to ensure that it worked in your software.&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/be5invis/Iosevka/main/doc/character-variants.md"&gt;View list of character variants of Iosevka.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Ligations&lt;/h3&gt; 
&lt;p&gt;Monospace subfamilies support ligations. Iosevka’s default ligation set is assigned to &lt;code&gt;calt&lt;/code&gt; feature, though not all of them are enabled by default.&lt;/p&gt; 
&lt;!-- BEGIN Section-OT-Ligation-Tags-1 --&gt; 
&lt;!-- THIS SECTION IS AUTOMATICALLY GENERATED. DO NOT EDIT. --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;calt off&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Ligation Off&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/ligset-calt-0.light.svg#gh-light-mode-only" /&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/ligset-calt-0.dark.svg#gh-dark-mode-only" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;calt&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Default setting in text editors&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/ligset-calt-1.light.svg#gh-light-mode-only" /&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/ligset-calt-1.dark.svg#gh-dark-mode-only" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dlig&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Discretionary ligatures&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2"&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/ligset-dlig-1.light.svg#gh-light-mode-only" /&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/ligset-dlig-1.dark.svg#gh-dark-mode-only" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- END Section-OT-Ligation-Tags-1 --&gt; 
&lt;p&gt;Iosevka supports Language-Specific Ligations, which is the ligation set enabled only under certain languages. These ligation sets are assigned to custom feature tags. To use them, you need to turn &lt;strong&gt;off&lt;/strong&gt; &lt;code&gt;calt&lt;/code&gt; and enable the corresponded feature. The feature list is:&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/be5invis/Iosevka/main/doc/language-specific-ligation-sets.md"&gt;View list of language-specific ligations.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Please note that, due to the complex interactions when forming ligations, cherry-picking ligation groups will require a custom Iosevka build. The instructions could be seen below.&lt;/p&gt; 
&lt;h2&gt;Building from Source&lt;/h2&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt;&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/be5invis/Iosevka/main/doc/custom-build.md"&gt;Read instructions.&lt;/a&gt;&lt;/h2&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;For Chinese, Japanese and Korean (CJK) users...&lt;/h2&gt; 
&lt;p&gt;→ &lt;a href="https://github.com/be5invis/Sarasa-Gothic"&gt;Sarasa Gothic&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Mirrors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;TUNA (CN): &lt;a href="https://mirrors.tuna.tsinghua.edu.cn/github-release/be5invis/Iosevka"&gt;https://mirrors.tuna.tsinghua.edu.cn/github-release/be5invis/Iosevka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;NJU (CN): &lt;a href="https://mirrors.nju.edu.cn/github-release/be5invis/Iosevka"&gt;https://mirrors.nju.edu.cn/github-release/be5invis/Iosevka&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/matrix.light.svg#gh-light-mode-only" alt="Family Matrix" /&gt;&lt;img src="https://raw.githubusercontent.com/be5invis/Iosevka/main/images/matrix.dark.svg#gh-dark-mode-only" alt="Family Matrix" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tangyoha/telegram_media_downloader</title>
      <link>https://github.com/tangyoha/telegram_media_downloader</link>
      <description>&lt;p&gt;基于Dineshkarthik的项目， 电报视频下载，电报资源下载，跨平台，支持web查看下载进度 ，支持bot下发指令下载，支持下载已经加入的私有群但是限制下载的资源， telegram media download,Download media files from a telegram conversation/chat/channel up to 2GiB per file&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Telegram Media Downloader&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/tangyoha/telegram_media_downloader/actions"&gt;&lt;img alt="Unittest" src="https://github.com/tangyoha/telegram_media_downloader/workflows/Unittest/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/tangyoha/telegram_media_downloader"&gt;&lt;img alt="Coverage Status" src="https://codecov.io/gh/tangyoha/telegram_media_downloader/branch/master/graph/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tangyoha/telegram_media_downloader/raw/master/LICENSE"&gt;&lt;img alt="License: MIT" src="https://black.readthedocs.io/en/stable/_static/license.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/python/black"&gt;&lt;img alt="Code style: black" src="https://img.shields.io/badge/code%20style-black-000000.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tangyoha/telegram_media_downloader/releases"&gt; &lt;img alt="Code style: black" src="https://img.shields.io/github/v/release/tangyoha/telegram_media_downloader?display_name=tag" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt; &lt;a href="https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/README_CN.md"&gt;中文&lt;/a&gt;&lt;span&gt; · &lt;/span&gt; &lt;a href="https://github.com/tangyoha/telegram_media_downloader/discussions/categories/ideas"&gt;Feature request&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; &lt;a href="https://github.com/tangyoha/telegram_media_downloader/issues"&gt;Report a bug&lt;/a&gt; &lt;span&gt; · &lt;/span&gt; Support: &lt;a href="https://github.com/tangyoha/telegram_media_downloader/discussions"&gt;Discussions&lt;/a&gt; &lt;span&gt; &amp;amp; &lt;/span&gt; &lt;a href="https://t.me/TeegramMediaDownload"&gt;Telegram Community&lt;/a&gt; &lt;/h3&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Support two default running&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The robot is running, and the command &lt;code&gt;download&lt;/code&gt; or &lt;code&gt;forward&lt;/code&gt; is issued from the robot&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download as a one-time download tool&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;UI&lt;/h3&gt; 
&lt;h4&gt;Web page&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;After running, open a browser and visit &lt;code&gt;localhost:5000&lt;/code&gt; If it is a remote machine, you need to configure web_host: 0.0.0.0&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img alt="Code style: black" style="width:100%; high:60%;" src="https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/screenshot/web_ui.gif" /&gt; 
&lt;h3&gt;Robot&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Need to configure bot_token, please refer to &lt;a href="https://github.com/tangyoha/telegram_media_downloader/wiki/How-to-Download-Using-Robots"&gt;Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img alt="Code style: black" style="width:60%; high:30%; " src="https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/screenshot/bot.gif" /&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th&gt;Support&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Language&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Python 3.7&lt;/code&gt; and above&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Download media types&lt;/td&gt; 
   &lt;td&gt;audio, document, photo, video, video_note, voice&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Version release plan&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tangyoha/telegram_media_downloader/issues/2"&gt;v2.2.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;For *nix os distributions with &lt;code&gt;make&lt;/code&gt; availability&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/tangyoha/telegram_media_downloader.git
cd telegram_media_downloader
make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Windows which doesn't have &lt;code&gt;make&lt;/code&gt; inbuilt&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/tangyoha/telegram_media_downloader.git
cd telegram_media_downloader
pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more detailed installation tutorial, please check the wiki&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Make sure you have &lt;strong&gt;docker&lt;/strong&gt; and &lt;strong&gt;docker-compose&lt;/strong&gt; installed&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker pull tangyoha/telegram_media_downloader:latest
mkdir -p ~/app &amp;amp;&amp;amp; mkdir -p ~/app/log/ &amp;amp;&amp;amp; cd ~/app
wget https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/docker-compose.yaml -O docker-compose.yaml
wget https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/config.yaml -O config.yaml
wget https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/data.yaml -O data.yaml
# vi config.yaml and docker-compose.yaml
vi config.yaml

# The first time you need to start the foreground
# enter your phone number and code, then exit(ctrl + c)
docker-compose run --rm telegram_media_downloader

# After performing the above operations, all subsequent startups will start in the background
docker-compose up -d

# Upgrade
docker pull tangyoha/telegram_media_downloader:latest
cd ~/app
docker-compose down
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Upgrade installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cd telegram_media_downloader
pip3 install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;All the configurations are passed to the Telegram Media Downloader via &lt;code&gt;config.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Getting your API Keys:&lt;/strong&gt; The very first step requires you to obtain a valid Telegram API key (API id/hash pair):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Visit &lt;a href="https://my.telegram.org/apps"&gt;https://my.telegram.org/apps&lt;/a&gt; and log in with your Telegram Account.&lt;/li&gt; 
 &lt;li&gt;Fill out the form to register a new Telegram application.&lt;/li&gt; 
 &lt;li&gt;Done! The API key consists of two parts: &lt;strong&gt;api_id&lt;/strong&gt; and &lt;strong&gt;api_hash&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Getting chat id:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Using web telegram:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;a href="https://web.telegram.org/?legacy=1#/im"&gt;https://web.telegram.org/?legacy=1#/im&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now go to the chat/channel and you will see the URL as something like&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=u853521067_2449618633394&lt;/code&gt; here &lt;code&gt;853521067&lt;/code&gt; is the chat id.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=@somename&lt;/code&gt; here &lt;code&gt;somename&lt;/code&gt; is the chat id.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=s1301254321_6925449697188775560&lt;/code&gt; here take &lt;code&gt;1301254321&lt;/code&gt; and add &lt;code&gt;-100&lt;/code&gt; to the start of the id =&amp;gt; &lt;code&gt;-1001301254321&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;https://web.telegram.org/?legacy=1#/im?p=c1301254321_6925449697188775560&lt;/code&gt; here take &lt;code&gt;1301254321&lt;/code&gt; and add &lt;code&gt;-100&lt;/code&gt; to the start of the id =&amp;gt; &lt;code&gt;-1001301254321&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;2. Using bot:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use &lt;a href="https://t.me/username_to_id_bot"&gt;@username_to_id_bot&lt;/a&gt; to get the chat_id of 
  &lt;ul&gt; 
   &lt;li&gt;almost any telegram user: send username to the bot or just forward their message to the bot&lt;/li&gt; 
   &lt;li&gt;any chat: send chat username or copy and send its joinchat link to the bot&lt;/li&gt; 
   &lt;li&gt;public or private channel: same as chats, just copy and send to the bot&lt;/li&gt; 
   &lt;li&gt;id of any telegram bot&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;config.yaml&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;api_hash: your_api_hash
api_id: your_api_id
chat:
- chat_id: telegram_chat_id
  last_read_message_id: 0
  download_filter: message_date &amp;gt;= 2022-12-01 00:00:00 and message_date &amp;lt;= 2023-01-17 00:00:00
- chat_id: telegram_chat_id_2
  last_read_message_id: 0
# note we remove ids_to_retry to data.yaml
ids_to_retry: []
media_types:
- audio
- document
- photo
- video
- voice
- animation #gif
file_formats:
  audio:
  - all
  document:
  - pdf
  - epub
  video:
  - mp4
save_path: D:\telegram_media_downloader
file_path_prefix:
- chat_title
- media_datetime
upload_drive:
  # required
  enable_upload_file: true
  # required
  remote_dir: drive:/telegram
  # required
  upload_adapter: rclone
  # option,when config upload_adapter rclone then this config are required
  rclone_path: D:\rclone\rclone.exe
  # option
  before_upload_file_zip: True
  # option
  after_upload_file_delete: True
hide_file_name: true
file_name_prefix:
- message_id
- file_name
file_name_prefix_split: ' - '
max_download_task: 5
web_host: 127.0.0.1
web_port: 5000
language: EN
web_login_secret: 123
allowed_user_ids:
- 'me'
date_format: '%Y_%m'
enable_download_txt: false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;api_hash&lt;/strong&gt; - The api_hash you got from telegram apps&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;api_id&lt;/strong&gt; - The api_id you got from telegram apps&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;bot_token&lt;/strong&gt; - Your bot token&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;chat&lt;/strong&gt; - Chat list 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;chat_id&lt;/code&gt; - The id of the chat/channel you want to download media. Which you get from the above-mentioned steps.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;download_filter&lt;/code&gt; - Download filter, see &lt;a href="https://github.com/tangyoha/telegram_media_downloader/wiki/How-to-use-Filter"&gt;How to use Filter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;last_read_message_id&lt;/code&gt; - If it is the first time you are going to read the channel let it be &lt;code&gt;0&lt;/code&gt; or if you have already used this script to download media it will have some numbers which are auto-updated after the scripts successful execution. Don't change it.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ids_to_retry&lt;/code&gt; - &lt;code&gt;Leave it as it is.&lt;/code&gt; This is used by the downloader script to keep track of all skipped downloads so that it can be downloaded during the next execution of the script.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;media_types&lt;/strong&gt; - Type of media to download, you can update which type of media you want to download it can be one or any of the available types.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;file_formats&lt;/strong&gt; - File types to download for supported media types which are &lt;code&gt;audio&lt;/code&gt;, &lt;code&gt;document&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt;. Default format is &lt;code&gt;all&lt;/code&gt;, downloads all files.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;save_path&lt;/strong&gt; - The root directory where you want to store downloaded files.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;file_path_prefix&lt;/strong&gt; - Store file subfolders, the order of the list is not fixed, can be randomly combined. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;chat_title&lt;/code&gt; - Channel or group title, it will be chat id if not exist title.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;media_datetime&lt;/code&gt; - Media date.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;media_type&lt;/code&gt; - Media type, also see &lt;code&gt;media_types&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;upload_drive&lt;/strong&gt; - You can upload file to cloud drive. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;enable_upload_file&lt;/code&gt; - Enable upload file, default &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;remote_dir&lt;/code&gt; - Where you upload, like &lt;code&gt;drive_id/drive_name&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;upload_adapter&lt;/code&gt; - Upload file adapter, which can be &lt;code&gt;rclone&lt;/code&gt;, &lt;code&gt;aligo&lt;/code&gt;. If it is &lt;code&gt;rclone&lt;/code&gt;, it supports all &lt;code&gt;rclone&lt;/code&gt; servers that support uploading. If it is &lt;code&gt;aligo&lt;/code&gt;, it supports uploading &lt;code&gt;Ali cloud disk&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;rclone_path&lt;/code&gt; - RClone exe path, see &lt;a href="https://github.com/tangyoha/telegram_media_downloader/wiki/Rclone"&gt;How to use rclone&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;before_upload_file_zip&lt;/code&gt; - Zip file before upload, default &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;after_upload_file_delete&lt;/code&gt; - Delete file after upload success, default &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;file_name_prefix&lt;/strong&gt; - Custom file name, use the same as &lt;strong&gt;file_path_prefix&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;message_id&lt;/code&gt; - Message id&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;file_name&lt;/code&gt; - File name (may be empty)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;caption&lt;/code&gt; - The title of the message (may be empty)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;file_name_prefix_split&lt;/strong&gt; - Custom file name prefix symbol, the default is &lt;code&gt;-&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;max_download_task&lt;/strong&gt; - The maximum number of task download tasks, the default is 5.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;hide_file_name&lt;/strong&gt; - Whether to hide the web interface file name, default &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;web_host&lt;/strong&gt; - Web host&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;web_port&lt;/strong&gt; - Web port&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;language&lt;/strong&gt; - Application language, the default is English (&lt;code&gt;EN&lt;/code&gt;), optional &lt;code&gt;ZH&lt;/code&gt;(Chinese),&lt;code&gt;RU&lt;/code&gt;,&lt;code&gt;UA&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;web_login_secret&lt;/strong&gt; - Web page login password, if not configured, no login is required to access the web page&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;log_level&lt;/strong&gt; - see &lt;code&gt;logging._nameToLevel&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;forward_limit&lt;/strong&gt; - Limit the number of forwards per minute, the default is 33, please do not modify this parameter by default.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;allowed_user_ids&lt;/strong&gt; - Who is allowed to use the robot? The default login account can be used. Please add single quotes to the name with @.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;date_format&lt;/strong&gt; Support custom configuration of media_datetime format in file_path_prefix.see &lt;a href="https://docs.python.org/3/library/datetime.html"&gt;python-datetime&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;enable_download_txt&lt;/strong&gt; Enable download txt file, default &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Execution&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;python3 media_downloader.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All downloaded media will be stored at the root of &lt;code&gt;save_path&lt;/code&gt;. The specific location reference is as follows:&lt;/p&gt; 
&lt;p&gt;The complete directory of video download is: &lt;code&gt;save_path&lt;/code&gt;/&lt;code&gt;chat_title&lt;/code&gt;/&lt;code&gt;media_datetime&lt;/code&gt;/&lt;code&gt;media_type&lt;/code&gt;. The order of the list is not fixed and can be randomly combined. If the configuration is empty, all files are saved under &lt;code&gt;save_path&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Proxy&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;socks4, socks5, http&lt;/code&gt; proxies are supported in this project currently. To use it, add the following to the bottom of your &lt;code&gt;config.yaml&lt;/code&gt; file&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;proxy:
  scheme: socks5
  hostname: 127.0.0.1
  port: 1234
  username: your_username(delete the line if none)
  password: your_password(delete the line if none)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your proxy doesn’t require authorization you can omit username and password. Then the proxy will automatically be enabled.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Contributing Guidelines&lt;/h3&gt; 
&lt;p&gt;Read through our &lt;a href="https://github.com/tangyoha/telegram_media_downloader/raw/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to learn about our submission process, coding rules and more.&lt;/p&gt; 
&lt;h3&gt;Want to Help?&lt;/h3&gt; 
&lt;p&gt;Want to file a bug, contribute some code, or improve documentation? Excellent! Read up on our guidelines for &lt;a href="https://github.com/tangyoha/telegram_media_downloader/raw/master/CONTRIBUTING.md"&gt;contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of Conduct&lt;/h3&gt; 
&lt;p&gt;Help us keep Telegram Media Downloader open and inclusive. Please read and follow our &lt;a href="https://github.com/tangyoha/telegram_media_downloader/raw/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sponsor&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://paypal.me/tangyoha?country.x=C2&amp;amp;locale.x=zh_XC"&gt;PayPal&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt; &lt;img alt="Code style: black" style="width:30%" src="https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/screenshot/alipay.JPG" /&gt; &lt;img alt="Code style: black" style="width:30%" src="https://raw.githubusercontent.com/tangyoha/telegram_media_downloader/master/screenshot/wechat.JPG" /&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tangly1024/NotionNext</title>
      <link>https://github.com/tangly1024/NotionNext</link>
      <description>&lt;p&gt;使用 NextJS + Notion API 实现的，支持多种部署方案的静态博客，无需服务器、零门槛搭建网站，为Notion和所有创作者设计。 (A static blog built with NextJS and Notion API, supporting multiple deployment options. No server required, zero threshold to set up a website. Designed for Notion and all creators.)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;帮助教程&lt;/h1&gt; 
&lt;p&gt;访问帮助：&lt;a href="https://docs.tangly1024.com/"&gt;NotionNext帮助手册&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;本项目教程为免费、公开资源，仅限个人学习使用，禁止利用本教程建立的博客发布非法内容、进行违法犯罪活动。严禁任何个人或组织将本教程用于商业用途，包括但不限于直接售卖、间接收费、或其他变相盈利行为。转载、复制或介绍本教程内容时，须保留作者信息并明确注明来源。 本项目仅提供由作者团队授权的付费咨询服务，请注意辨别，谨防诈骗行为。任何未经授权的收费服务均可能存在法律风险。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Notion是一个能让效率暴涨的生产力引擎，可以帮你书写文档、管理笔记，搭建知识库，甚至可以为你规划项目、时间管理、组织团队、提高生产力、还有当前最强大的AI技术加持。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;如果希望进一步探索Notion的功能，欢迎购买《&lt;a href="https://docs.tangly1024.com/article/notion-tutorial"&gt;Notion笔记从入门到精通进阶课程&lt;/a&gt;》&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;NotionNext&lt;/h1&gt; 
&lt;p&gt; &lt;a aria-label="GitHub commit activity" href="https://github.com/tangly1024/NotionNext/commits/main" title="GitHub commit activity"&gt; &lt;img src="https://img.shields.io/github/commit-activity/m/tangly1024/NotionNext?style=for-the-badge" /&gt; &lt;/a&gt; &lt;a aria-label="GitHub contributors" href="https://github.com/tangly1024/NotionNext/graphs/contributors" title="GitHub contributors"&gt; &lt;img src="https://img.shields.io/github/contributors/tangly1024/NotionNext?color=orange&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;a aria-label="Build status" href="https://raw.githubusercontent.com/tangly1024/NotionNext/main/#" title="Build status"&gt; &lt;img src="https://img.shields.io/github/deployments/tangly1024/NotionNext/Production?logo=Vercel&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;a aria-label="Powered by Vercel" href="https://vercel.com?utm_source=Craigary&amp;amp;utm_campaign=oss" title="Powered by Vercel"&gt; &lt;img src="https://www.datocms-assets.com/31049/1618983297-powered-by-vercel.svg?sanitize=true" height="28" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;中文文档 | &lt;a href="https://raw.githubusercontent.com/tangly1024/NotionNext/main/README_EN.md"&gt;README in English&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;一个使用 NextJS + Notion API 实现的，部署在 Vercel 上的静态博客系统。为Notion和所有创作者设计。&lt;/p&gt; 
&lt;p&gt;支持多种部署方案&lt;/p&gt; 
&lt;h2&gt;预览效果&lt;/h2&gt; 
&lt;p&gt;在线演示：&lt;a href="https://preview.tangly1024.com/"&gt;https://preview.tangly1024.com/&lt;/a&gt; ，点击左下角挂件可以切换主题，没找到喜欢的主题？&lt;a href="https://raw.githubusercontent.com/tangly1024/NotionNext/main/CONTRIBUTING.md"&gt;贡献&lt;/a&gt;一个吧~&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Next&lt;/th&gt; 
   &lt;th&gt;Medium&lt;/th&gt; 
   &lt;th&gt;Hexo&lt;/th&gt; 
   &lt;th&gt;Fukasawa&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tangly1024/NotionNext/main/docs/theme-next.png" width="300" /&gt; &lt;a href="https://preview.tangly1024.com/?theme=next"&gt;预览NEXT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tangly1024/NotionNext/main/docs/theme-medium.png" width="300" /&gt; &lt;a href="https://preview.tangly1024.com/?theme=medium"&gt;预览MEDIUM&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tangly1024/NotionNext/main/docs/theme-hexo.png" width="300" /&gt; &lt;a href="https://preview.tangly1024.com/?theme=hexo"&gt;预览HEXO&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/tangly1024/NotionNext/main/docs/theme-fukasawa.png" width="300" /&gt; &lt;a href="https://preview.tangly1024.com/?theme=fukasawa"&gt;预览FUKASAWA&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;致谢&lt;/h2&gt; 
&lt;p&gt;感谢Craig Hart发起的Nobelium项目&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr align="left"&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/craigary" title="Craig Hart"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10571717" width="64px;" alt="Craig Hart" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/craigary" title="Craig Hart"&gt;Craig Hart&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;贡献者&lt;/h2&gt; 
&lt;p&gt;致敬每一位开发者！&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/tangly1024/NotionNext/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=tangly1024/NotionNext" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;引用技术&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;框架&lt;/strong&gt;: &lt;a href="https://nextjs.org"&gt;Next.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;样式&lt;/strong&gt;: &lt;a href="https://www.tailwindcss.cn/"&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;渲染&lt;/strong&gt;: &lt;a href="https://github.com/NotionX/react-notion-x"&gt;React-notion-x&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;评论&lt;/strong&gt;: &lt;a href="https://github.com/imaegoo/twikoo"&gt;Twikoo&lt;/a&gt;, &lt;a href="https://giscus.app/zh-CN"&gt;Giscus&lt;/a&gt;, &lt;a href="https://gitalk.github.io"&gt;Gitalk&lt;/a&gt;, &lt;a href="https://cusdis.com"&gt;Cusdis&lt;/a&gt;, &lt;a href="https://utteranc.es"&gt;Utterances&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;图标&lt;/strong&gt;: &lt;a href="https://fontawesome.com/v6/icons/"&gt;Fontawesome&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔗 友情链接&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LetTTGACO/elog"&gt;Elog&lt;/a&gt; Markdown 批量导出工具、开放式跨平台博客解决方案，随意组合写作平台(语雀/Notion/FlowUs/飞书)和博客平台(Hexo/Vitepress/Halo/Confluence/WordPress等)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The MIT License.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#tangly1024/NotionNext&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=tangly1024/NotionNext&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>renmu123/biliLive-tools</title>
      <link>https://github.com/renmu123/biliLive-tools</link>
      <description>&lt;p&gt;直播一站式处理工具，支持直播录制&amp;视频处理&amp;弹幕处理&amp;录播姬自动上传&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;biliLive-tools&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/downloads/renmu123/biliLive-tools/total" alt="Downloads" /&gt;&lt;/p&gt; 
&lt;p&gt;这是一个直播的一站式工具，支持弹幕转换与视频压制并上传至B站，支持斗鱼、虎牙、B站、抖音直播录制，支持&lt;a href="https://github.com/BililiveRecorder"&gt;B站录播姬&lt;/a&gt;、&lt;a href="https://github.com/acgnhiki/blrec"&gt;blrec&lt;/a&gt;、&lt;a href="https://github.com/CHKZL/DDTV"&gt;DDTV&lt;/a&gt;的webhook。&lt;br /&gt; 如果你是录播man正在寻找xml弹幕转换、弹幕压制、webhook上传工具，如果你是切片man正在寻找下载录播视频工具，如果你厌倦了b站的多p上传，你可以来试试本软件。&lt;br /&gt; 做这款工具的初衷是为了解决录播工具的碎片化，往往想完整处理一场带有弹幕的录播要使用多个软件的配合，一些工具只有CLI，加大了使用难度。&lt;br /&gt; 软件的目标是开箱即用，体验优先，默认配置下满足大部分人使用需求，同时支持个性化需求来增加可用性。&lt;br /&gt; 你可以在B站查看&lt;a href="https://www.bilibili.com/video/BV1Hs421M755/"&gt;系列教程&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;如果你使用了本软件，希望你在简介标注仓库地址或保留默认tag，本软件不存在任何数据追踪，我想大致知道使用使用人群及情况&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/renmu123/biliLive-tools/raw/master/CHANGELOG.md"&gt;更新历史&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持录播姬与blrec的webhook自动化处理&lt;/li&gt; 
 &lt;li&gt;支持 Danmafactory GUI 弹幕xml转换&lt;/li&gt; 
 &lt;li&gt;支持根据弹幕切片&lt;/li&gt; 
 &lt;li&gt;支持b站分P投稿&lt;/li&gt; 
 &lt;li&gt;支持视频与弹幕压制&lt;/li&gt; 
 &lt;li&gt;支持 ffmpeg 转码及转封装（含非标flv下的hevc）&lt;/li&gt; 
 &lt;li&gt;支持B站视频、斗鱼、虎牙、快手录播及其弹幕下载&lt;/li&gt; 
 &lt;li&gt;支持斗鱼、虎牙、B站、抖音直播录制&lt;/li&gt; 
 &lt;li&gt;支持自动同步到百度云、阿里云、alist平台&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/renmu123/biliLive-tools/master/docs/preview.png" alt="preview" /&gt;&lt;/p&gt; 
&lt;h1&gt;安装&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;任何版本更新前请查看更新记录，避免破坏性更新带来的问题&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;最优先支持的是桌面程序，其余或多或少缺失了部分功能&lt;/p&gt; 
&lt;h2&gt;桌面程序&lt;/h2&gt; 
&lt;p&gt;不提供 MacOS 安装包，需要的可以自行编译，编译时需要替换用到的二进制文件。&lt;br /&gt; 由于我不在Linux开发，测试覆盖不广，如果存在问题可以提issue。&lt;/p&gt; 
&lt;p&gt;下载地址：&lt;a href="https://github.com/renmu123/biliLive-tools/releases"&gt;https://github.com/renmu123/biliLive-tools/releases&lt;/a&gt;&lt;br /&gt; 备用下载地址：&lt;a href="https://pan.quark.cn/s/6da253a1ecb8"&gt;https://pan.quark.cn/s/6da253a1ecb8&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;CLI&lt;/h2&gt; 
&lt;p&gt;CLI的使用参考&lt;a href="https://github.com/renmu123/biliLive-tools/tree/master/packages/CLI"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;也可以使用&lt;code&gt;npm i bililive-cli -g&lt;/code&gt;来进行安装&lt;/p&gt; 
&lt;h2&gt;docker&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;由于软件并非针对web设计，无法保证安全性，请谨慎暴露在公网中&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;你可以通过运行&lt;code&gt;docker-compose up -d&lt;/code&gt;来快速搭建，也可以查看&lt;a href="https://www.bilibili.com/video/BV1HVd5YdEGh"&gt;视频教程&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  # UI镜像
  webui:
    image: renmu1234/bililive-tools-frontend
    ports:
      - "3000:3000"
  # 接口镜像
  api:
    image: renmu1234/bililive-tools-backend
    ports:
      - "18010:18010"
    volumes:
      # 映射的配置目录，用于持久化配置文件
      - ./data:/app/data
      # 存储文件的默认目录
      - ./video:/app/video
      # 字体目录
      - ./fonts:/usr/local/share/fonts
    environment:
      # 登录密钥
      - BILILIVE_TOOLS_PASSKEY=your_passkey
      # 账户加密密钥
      - BILILIVE_TOOLS_BILIKEY=your_bilikey
      # 中国时区
      - TZ=Asia/Shanghai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;具体支持的环境变量见&lt;a href="https://raw.githubusercontent.com/renmu123/biliLive-tools/master/README.md#%E6%94%AF%E6%8C%81%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F"&gt;文档&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;webhook&lt;/h3&gt; 
&lt;p&gt;docker下由于存储和网络的隔离，webhook使用其他安装方式并不完全一致，我们这里以录播姬为例，其他服务类似：&lt;/p&gt; 
&lt;p&gt;运行之后打开录播姬的配置webhookV2为&lt;code&gt;http://api:18010/webhook/bililiverecorder&lt;/code&gt;，无须在软件中设置“录播姬工作目录”&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  # UI镜像
  webui:
    image: renmu1234/bililive-tools-frontend
    ports:
      # 前者按需改动
      - "3000:3000"
  # 接口镜像
  api:
    image: renmu1234/bililive-tools-backend
    ports:
      - "18010:18010"
    volumes:
      # 映射的配置目录，用于持久化配置文件
      - ./data:/app/data
      # 用于处理webhook数据，按需修改，与录播姬的参数一致
      - ./video:/app/video
      # 字体目录
      - ./fonts:/usr/local/share/fonts
    environment:
      # 登录密钥，自行修改
      - BILILIVE_TOOLS_PASSKEY=your_passkey
      # 账户加密密钥，自行修改
      - BILILIVE_TOOLS_BILIKEY=your_bilikey
      # 中国时区
      - TZ=Asia/Shanghai
  # 录播姬
  recorder:
    image: bililive/recorder:latest
    restart: unless-stopped
    volumes:
      # 用于处理webhook数据，按需修改，和上述参数一致
      - ./video:/rec
    ports:
      - "2356:2356"
      # 第一个 2356 是宿主机的端口，可以根据自己需求改动。
      # 第二个 2356 是容器内的端口，不要修改。
    environment:
      - BREC_HTTP_BASIC_USER=用户名
      - BREC_HTTP_BASIC_PASS=密码
      # 更多参数见录播姬文档
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;硬件编码&lt;/h3&gt; 
&lt;h4&gt;Intel核显(qsv)&lt;/h4&gt; 
&lt;p&gt;可以参考 &lt;a href="https://github.com/renmu123/biliLive-tools/issues/59"&gt;#59&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;webui&lt;/h2&gt; 
&lt;p&gt;可用于国内未备案机器，或懒得自部署的情况，如果你的接口是http协议，由于浏览器安全措施，需要关闭https和http混合的安全选项，或者自部署，自部署参考&lt;a href="https://github.com/renmu123/biliLive-webui"&gt;项目&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;密钥为&lt;code&gt;appConfig.json&lt;/code&gt;的&lt;code&gt;passKey&lt;/code&gt;字段。&lt;/p&gt; 
&lt;p&gt;不会保证web的兼容性，请自行保证网页端与服务端版本一致，浏览器兼容性为最新chrome版本&lt;/p&gt; 
&lt;p&gt;线上地址：&lt;a href="https://bililive.irenmu.com"&gt;https://bililive.irenmu.com&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;功能介绍&lt;/h1&gt; 
&lt;h2&gt;直播录制&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;平台&lt;/th&gt; 
   &lt;th&gt;弹幕&lt;/th&gt; 
   &lt;th&gt;画质&lt;/th&gt; 
   &lt;th&gt;线路&lt;/th&gt; 
   &lt;th&gt;Cookie&lt;/th&gt; 
   &lt;th&gt;流格式&lt;/th&gt; 
   &lt;th&gt;流编码&lt;/th&gt; 
   &lt;th&gt;只音频&lt;/th&gt; 
   &lt;th&gt;付费直播&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;斗鱼&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;B站&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;抖音&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;虎牙&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol&gt; 
 &lt;li&gt;支持B站、斗鱼、虎牙、抖音三平台录制，包含弹幕和礼物，B站额外支持舰长以及SC，斗鱼支持高能弹幕&lt;/li&gt; 
 &lt;li&gt;以最小的文件大小支持最全的danmakufactory兼容性&lt;/li&gt; 
 &lt;li&gt;B站录制支持所有流，以及批量查询接口&lt;/li&gt; 
 &lt;li&gt;更加快捷的加入软件中的自动化视频压制与自动上传&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;目前支持斗鱼、虎牙、B站、抖音几个平台，&lt;strong&gt;除非我有需求，否则不会增加更多平台，支持PR&lt;/strong&gt;，支持录制弹幕及礼物，斗鱼和B站额外支持高能弹幕。&lt;/p&gt; 
&lt;p&gt;最优先维护斗鱼、其次B站、虎牙和抖音随心&lt;/p&gt; 
&lt;p&gt;实现由 &lt;a href="https://github.com/WhiteMinds/LiveAutoRecord"&gt;LiveAutoRecord&lt;/a&gt; 拓展而来&lt;/p&gt; 
&lt;h3&gt;录制器&lt;/h3&gt; 
&lt;p&gt;FFMPEG 是默认的录制器，几乎支持所有的格式。&lt;/p&gt; 
&lt;p&gt;mesio 作为测试录制器被引入，用于支持 flv 修复等功能，当你选择了 mesio 不支持的配置，会尝试使用 FFMPEG 来进行录制，以可以录制作为第一保障&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能&lt;/th&gt; 
   &lt;th&gt;ffmpeg&lt;/th&gt; 
   &lt;th&gt;mesio&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FLV 录制&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HLS 录制&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;时长分段&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;只音频&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;容器支持&lt;/td&gt; 
   &lt;td&gt;MP4,TS,MKV&lt;/td&gt; 
   &lt;td&gt;跟随链接容器&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FLV 修复&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;webhook&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/BililiveRecorder"&gt;B站录播姬&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;默认webhook地址：&lt;a href="http://127.0.0.1:18010/webhook/bililiverecorder"&gt;http://127.0.0.1:18010/webhook/bililiverecorder&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;需要在本软件的“设置-webhook-录播姬工作目录”设置录播的工作目录&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/acgnhiki/blrec"&gt;blrec&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;默认webhook地址：&lt;a href="http://127.0.0.1:18010/webhook/blrec"&gt;http://127.0.0.1:18010/webhook/blrec&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;依赖于“视频文件创建”,“视频文件完成”两个webhhook，建议直接勾选全部事件。&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.oneliverec.cc"&gt;oneliverec&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;默认webhook地址：&lt;a href="http://127.0.0.1:18010/webhook/oneliverec"&gt;http://127.0.0.1:18010/webhook/oneliverec&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;注意点：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;必须启用“格式转换”&lt;/li&gt; 
 &lt;li&gt;webhook事件必须选中“视频转换完成”事件，建议直接勾选全部事件。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;a href="https://github.com/CHKZL/DDTV"&gt;DDTV&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;默认webhook地址：&lt;a href="http://127.0.0.1:18010/webhook/ddtv"&gt;http://127.0.0.1:18010/webhook/ddtv&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;需要将DDTV的软件“设置-文件与路径设置-录制文件保存路径”设置为绝对路径，打开弹幕录制。&lt;/p&gt; 
&lt;p&gt;由于DDTV的webhook返回参数的非常扭曲&lt;del&gt;难用&lt;/del&gt;，无法保证任意配置下的可用性&lt;/p&gt; 
&lt;h3&gt;自定义Webhook&lt;/h3&gt; 
&lt;p&gt;如果想接入webhook相关功能，你可以自行构造参数并调用接口，采用&lt;code&gt;post&lt;/code&gt;方法，端口为&lt;code&gt;/webhook/custom&lt;/code&gt;，接收后立刻返回http code=200。&lt;/p&gt; 
&lt;p&gt;参数： &lt;code&gt;event&lt;/code&gt;: &lt;code&gt;FileClosed&lt;/code&gt;|&lt;code&gt;FileOpening&lt;/code&gt;|&lt;code&gt;FileError&lt;/code&gt; 如果你想使用断播续传功能，请在上一个&lt;code&gt;FileClosed&lt;/code&gt;事件后在设置的时间间隔内发送&lt;code&gt;FileOpening&lt;/code&gt;事件，&lt;code&gt;FileError&lt;/code&gt; 用于将该视频标注为错误，避免阻塞流程。&lt;br /&gt; &lt;code&gt;filePath&lt;/code&gt;: 视频文件的绝对路径 &lt;code&gt;coverPath&lt;/code&gt;: 可选，视频封面的绝对路径，如果为空，会读取与视频文件名相同的后缀为&lt;code&gt;jpg&lt;/code&gt;的文件 &lt;code&gt;danmuPath&lt;/code&gt;: 可选，视频弹幕&lt;code&gt;xml&lt;/code&gt;文件，如果为空，会读取与视频文件名相同的&lt;code&gt;xml&lt;/code&gt;文件 &lt;code&gt;roomId&lt;/code&gt;: 数字类型，房间号，用于断播续传&lt;br /&gt; &lt;code&gt;time&lt;/code&gt;: 用于标题格式化的时间，示例："2021-05-14T17:52:54.946"&lt;br /&gt; &lt;code&gt;title&lt;/code&gt;: 标题，用于格式化视频标题&lt;br /&gt; &lt;code&gt;username&lt;/code&gt;：主播名称，用于格式化视频标题&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;以下参数用于弹幕分析功能，非必要&lt;/strong&gt; 有些弹幕中存在元数据(参考blrec)的会被自动解析，比如弹幕姬或blrec或douyu-cli(0.6.1及以上)生成的弹幕 &lt;code&gt;platform&lt;/code&gt;：平台，如果是b站推荐为&lt;code&gt;bilibili&lt;/code&gt;，斗鱼推荐为&lt;code&gt;douyu&lt;/code&gt;，其实填啥都可以&lt;br /&gt; &lt;code&gt;live_start_time&lt;/code&gt;：直播开始时间，示例："2021-05-14T17:52:54.946" &lt;code&gt;live_title&lt;/code&gt;：直播标题&lt;/p&gt; 
&lt;p&gt;示例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl --location 'http://127.0.0.1:18010/webhook/custom' \
--header 'Content-Type: application/json' \
--data '{
    "event":"FileClosed",
    "filePath":"D:\\aa.mp4",
    "coverPath":"D:\\aa.jpg",
    "danmuPath":"D:\\aa.xml",
    "roomId":93589,
    "time":"2021-05-14T17:52:54.946",
    "title":"我是猪",
    "username":"djw"
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;断播续传&lt;/h2&gt; 
&lt;p&gt;这个功能主要用于解决：由于网络或者设置分段原因导致录播片段被切割成多个。&lt;br /&gt; 开启后，会将主播的一场直播上传到同一个视频中&lt;br /&gt; 一场直播的定义：同一个主播，本次文件创建时间与上一个文件结束写入时间如果相差n分钟（使用配置），那么会被定义为一场直播，不会使用webhook中比如录播姬的session定义。&lt;br /&gt; 开启录制后，或反复切换开关，可能会有奇怪的错误。&lt;/p&gt; 
&lt;h2&gt;xml弹幕转换&lt;/h2&gt; 
&lt;p&gt;xml弹幕转换底层使用&lt;a href="https://github.com/hihkm/DanmakuFactory"&gt;DanmakuFactory&lt;/a&gt;，B站弹幕确认可以使用，其余类型请自行测试。&lt;br /&gt; 部分功能如自适应分辨率&lt;/p&gt; 
&lt;h2&gt;切片功能&lt;/h2&gt; 
&lt;p&gt;支持通过弹幕以及高能进度条来快速找到你所需要的片段，支持导入&lt;a href="https://github.com/mifi/lossless-cut"&gt;lossless-cut&lt;/a&gt;项目&lt;/p&gt; 
&lt;h3&gt;支持哪些快捷键&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+s&lt;/code&gt; 保存到llc项目&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+shift+s&lt;/code&gt; 另存为llc项目&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+enter&lt;/code&gt; 导出&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+z&lt;/code&gt; 撤销&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+shift+z&lt;/code&gt; 重做&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;I&lt;/code&gt; 在当前时间开始当前片段&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;O&lt;/code&gt; 在当前时间结束当前片段&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;up&lt;/code&gt; 上一个片段&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;down&lt;/code&gt; 下一个片段&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;del&lt;/code&gt; 删除片段&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;space&lt;/code&gt; 播放/暂停&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+left&lt;/code&gt; 后退1秒&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+right&lt;/code&gt; 前进1秒&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+k&lt;/code&gt; 唤起弹幕搜索&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ctrl+shift+k&lt;/code&gt; 关闭弹幕搜索&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;通知&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;使用通知功能时，请妥善保存所有信息，请勿分享给他人，本软件不会发送任何信息到任何服务器&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;邮箱&lt;/h3&gt; 
&lt;p&gt;使用smtp服务来发送邮件，每个邮件服务商的参数各不相同，使用请自行参照各服务商的教程。&lt;/p&gt; 
&lt;h3&gt;server酱&lt;/h3&gt; 
&lt;p&gt;serer酱支持免费推送信息到手机微信，免费账户有限制。&lt;/p&gt; 
&lt;p&gt;官网：&lt;a href="https://sct.ftqq.com/"&gt;https://sct.ftqq.com/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;tg bot&lt;/h3&gt; 
&lt;p&gt;tg bot 的搭建请自行寻找教程&lt;/p&gt; 
&lt;h3&gt;ntfy&lt;/h3&gt; 
&lt;p&gt;官网：&lt;a href="https://docs.ntfy.sh/"&gt;https://docs.ntfy.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;push-all-in-cloud&lt;/h3&gt; 
&lt;p&gt;这是一个支持多种推送方式的工具，可以让你统一管理推送以及减少在客户端暴露相关key的机会&lt;/p&gt; 
&lt;p&gt;项目地址：&lt;a href="https://github.com/CaoMeiYouRen/push-all-in-cloud"&gt;https://github.com/CaoMeiYouRen/push-all-in-cloud&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;同步&lt;/h2&gt; 
&lt;h3&gt;如何使用&lt;/h3&gt; 
&lt;p&gt;打开“设置-文件同步”选择你需要的同步的网盘，&lt;strong&gt;使用前请仔细查看相关文档&lt;/strong&gt;，客户端需配置二进制包，并进行登录等相关操作。&lt;/p&gt; 
&lt;p&gt;之后去“同步器”中增加一个你需要使用的同步器，并设置相关配置。&lt;/p&gt; 
&lt;p&gt;去“webhook”配置中为需要同步的直播间设置“同步器”配置&lt;/p&gt; 
&lt;h3&gt;BaiduPCS-Go(百度网盘)&lt;/h3&gt; 
&lt;p&gt;项目地址：&lt;a href="https://github.com/qjfoidnh/BaiduPCS-Go"&gt;https://github.com/qjfoidnh/BaiduPCS-Go&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;测试版本：3.9.9&lt;/p&gt; 
&lt;h3&gt;aliyunpan(阿里云盘)&lt;/h3&gt; 
&lt;p&gt;项目地址：&lt;a href="https://github.com/tickstep/aliyunpan"&gt;https://github.com/tickstep/aliyunpan&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;测试版本：0.3.7&lt;/p&gt; 
&lt;h3&gt;alist&lt;/h3&gt; 
&lt;p&gt;项目地址：&lt;a href="https://alistgo.com"&gt;https://alistgo.com&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;常见问题&lt;/h1&gt; 
&lt;h2&gt;支持的环境变量&lt;/h2&gt; 
&lt;p&gt;windows下环境变量修改后可能需要重启电脑方能生效&lt;/p&gt; 
&lt;h3&gt;B站登录自定义密钥加密&lt;/h3&gt; 
&lt;p&gt;可以使用环境变量&lt;code&gt;BILILIVE_TOOLS_BILIKEY&lt;/code&gt;自定义账号密钥，自定义前请先退出原有全部账号。&lt;/p&gt; 
&lt;h3&gt;鉴权密钥&lt;/h3&gt; 
&lt;p&gt;通过环境变量&lt;code&gt;BILILIVE_TOOLS_PASSKEY&lt;/code&gt;自定义登录密钥&lt;/p&gt; 
&lt;h2&gt;Webhook标题模块引擎如何使用&lt;/h2&gt; 
&lt;p&gt;1.5.0起 Webhook 标题支持&lt;a href="https://github.com/mde/ejs"&gt;ejs模板引擎&lt;/a&gt;，具体语法参考文档，&lt;strong&gt;如果标题超过80字，会被自动截断&lt;/strong&gt;，会优先执行模板引擎，之后会对&lt;code&gt;{{}}&lt;/code&gt;占位符进行替换，如果有语法错误，会被跳过，优先保证上传。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// 以下为支持注入的参数
{
  title: string; // 直播间标题
  user: string; // 主播名称
  time: Date; // 直播开始时间
  roomId: number | string; // 房间号
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;示例：&lt;code&gt;&amp;lt;%= user %&amp;gt;-&amp;lt;%= time.getFullYear() %&amp;gt;&amp;lt;%= String(time.getMonth() + 1).padStart(2, "0") %&amp;gt;直播录像&lt;/code&gt; 渲染结果：&lt;code&gt;djw-202408直播录像&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;压制预设如何设置&lt;/h2&gt; 
&lt;p&gt;&lt;del&gt;我也不知道&lt;/del&gt;&lt;br /&gt; 如果你是一个小白，先根据自己的硬件选择对应的编码，推荐使用crf或cq等质量模式的默认参数，压制后查看视频大小，压制时间，画质，接下来调整参数，以满足你的需求，没有最好的参数，只有最合适的参数，不同视频，不同场景可能合适的参数都不一致。&lt;br /&gt; 进阶请自行搜索ffmpeg相关的教程&lt;/p&gt; 
&lt;h2&gt;nvnec或其他硬件转码无法正常使用&lt;/h2&gt; 
&lt;p&gt;请尝试更新显卡驱动，如果更新到最新后还无法使用，请尝试手动更换ffmpeg可执行文件为6.0，自定义后部分功能可能会无法使用&lt;/p&gt; 
&lt;h2&gt;blrec开启转换为mp4后无法使用&lt;/h2&gt; 
&lt;p&gt;请关闭该功能，使用本软件的“转封装为mp4”功能&lt;/p&gt; 
&lt;h2&gt;上传提示输入验证码&lt;/h2&gt; 
&lt;p&gt;说明你上传过多装上风控了，请去web端端投稿解除风控&lt;/p&gt; 
&lt;h2&gt;有时上传和下载任务点击暂停无效&lt;/h2&gt; 
&lt;p&gt;上传任务分为三个阶段，只有第二个阶段是支持暂停的，第三节阶段不支持取消：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;获取上传基础信息&lt;/li&gt; 
 &lt;li&gt;文件切片上传&lt;/li&gt; 
 &lt;li&gt;文件合并，调用提交接口&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;下载任务分为三个阶段，只有第二个阶段是支持暂停的：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;获取下载文件基础信息&lt;/li&gt; 
 &lt;li&gt;文件切片下载&lt;/li&gt; 
 &lt;li&gt;文件合并&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;怎么评估压制的速度&lt;/h2&gt; 
&lt;p&gt;进入队列，查看任务最后一栏的速率，可以根据速率调整压制参数&lt;/p&gt; 
&lt;h2&gt;如何查看原始ffmpeg命令输出&lt;/h2&gt; 
&lt;p&gt;压制之后查看log&lt;/p&gt; 
&lt;h2&gt;最大任务数&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;手动暂停的任务不会被自动启动&lt;/li&gt; 
 &lt;li&gt;高能进度条任务会自动进行，因为速度会很快&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;使用zip包后安装包无法使用&lt;/h2&gt; 
&lt;p&gt;zip包并非传统意义上的绿色包，数据和安装包文件的不会存放在同一个文件夹中，如果你尝试使用安装包后使用压缩包，可能会导致二进制文件的路径错误从而无法使用，请尝试在设置中手动修改二进制文件路径。&lt;/p&gt; 
&lt;p&gt;如果你想将数据放在同一个文件夹内，请在可执行文件所在文件夹创建一个&lt;code&gt;portable&lt;/code&gt;文件，无拓展名如&lt;code&gt;.txt&lt;/code&gt;，更改后重启应用，如有需要可以新建文件前在设置中备份设置。&lt;/p&gt; 
&lt;h2&gt;更改部分配置不生效&lt;/h2&gt; 
&lt;p&gt;绝大部分配置修改后生效、某部分配置只对当场直播生效、小部分配置重启后生效&lt;/p&gt; 
&lt;h2&gt;频繁上传失败怎么办&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;升级软件到最新版本&lt;/li&gt; 
 &lt;li&gt;增加重试次数和时间&lt;/li&gt; 
 &lt;li&gt;尝试手动选择并测试上传路线&lt;/li&gt; 
 &lt;li&gt;尝试关闭ipv6&lt;/li&gt; 
 &lt;li&gt;尝试手动修改dns&lt;/li&gt; 
 &lt;li&gt;你已经被运营商限速了&lt;/li&gt; 
 &lt;li&gt;国外服务器请尝试使用 &lt;code&gt;qn&lt;/code&gt; 线路&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;如何备份文件&lt;/h2&gt; 
&lt;p&gt;目前有两种方式备份恢复文件，导入后重启应用生效，尽量保持版本一致,&lt;strong&gt;恢复备份时请对原文件备份&lt;/strong&gt;：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;打开设置，点击“导出配置”，在需要恢复时点击“导入配置”，如果这种方式失败，请尝试使用第第二种方式进行手动备份&lt;/li&gt; 
 &lt;li&gt;找到配置文件夹，找到&lt;code&gt;appConfig.json&lt;/code&gt;、&lt;code&gt;presets.json&lt;/code&gt;、&lt;code&gt;danmu_presets.json&lt;/code&gt;、&lt;code&gt;ffmpeg_presets.json&lt;/code&gt;、&lt;code&gt;app.db&lt;/code&gt;，如果你还想备份封面，找到&lt;code&gt;cover&lt;/code&gt;文件夹，恢复时直接覆盖即可&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;字体问题&lt;/h2&gt; 
&lt;p&gt;web和客户端使用的字体方式并不相同，会有差异，再加上获取字体 &lt;code&gt;postscriptName&lt;/code&gt; 的微妙的有些不同，导致某些字体web中选择后无法使用。&lt;/p&gt; 
&lt;p&gt;docker下的emoji文本渲染错误，猜测和fontconfig有关，但是我不会改，如果你会欢迎发issue&lt;/p&gt; 
&lt;h2&gt;显示的上传下载速度不准确&lt;/h2&gt; 
&lt;p&gt;所有相关速度仅限参考~&lt;/p&gt; 
&lt;h2&gt;抖音双屏录播分割主画面&lt;/h2&gt; 
&lt;p&gt;假设你已经开始“双屏直播流选项”，主画面的分辨率为1920x1080。&lt;/p&gt; 
&lt;p&gt;在 &lt;code&gt;ffmpeg设置&lt;/code&gt; 的 &lt;code&gt;视频滤镜&lt;/code&gt; 中输入 &lt;code&gt;crop=1920:1080:0:0;$origin&lt;/code&gt;，即可分离出主画面，副画面同理&lt;/p&gt; 
&lt;h2&gt;录制如何为不同直播间配置不同存储路径&lt;/h2&gt; 
&lt;p&gt;支持为 &lt;code&gt;文件命名规则&lt;/code&gt; 配置项支持了 &lt;a href="https://ejs.co/"&gt;ejs&lt;/a&gt; 模板引擎，你可以将 &lt;code&gt;保存文件夹&lt;/code&gt; 置空，将保存路径及命名规则，全部配置在 &lt;code&gt;文件命名规则&lt;/code&gt; 配置项中。&lt;strong&gt;修改后及时进行测试&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;参考示例：斗鱼与其他站点保存在不同盘符中&lt;br /&gt; &lt;code&gt;&amp;lt;% if (platform=='斗鱼') { %&amp;gt;C&amp;lt;% } %&amp;gt;&amp;lt;% if (platform!='斗鱼') { %&amp;gt;D&amp;lt;% } %&amp;gt;:\录制\{platform}/{owner}/{year}-{month}-{date} {hour}-{min}-{sec} {title}&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;添加了几十个甚至上百个直播间后无法录制&lt;/h2&gt; 
&lt;p&gt;你很有可能已经被平台风控，请尝试关闭软件等待风控解除，之后尝试减少数量，或加大检查间隔，或检查网络，或检查硬盘读写。&lt;/p&gt; 
&lt;h2&gt;录制电台直播时帧数过低&lt;/h2&gt; 
&lt;p&gt;如果需要压制弹幕，请尝试手动指定帧数参数&lt;/p&gt; 
&lt;h2&gt;分辨率变化后不会进行切割&lt;/h2&gt; 
&lt;p&gt;设计如此，如果你的播放器不支持多分辨率，请尝试使用vlc&lt;/p&gt; 
&lt;h2&gt;弹幕转换失败&lt;/h2&gt; 
&lt;p&gt;如果你是新系统，请尝试安装系统相关运行库，如果不是，也请安装试试。&lt;/p&gt; 
&lt;h1&gt;TODO&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持使用ffmpeg压制弹幕至视频文件&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 工具页面 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持ffmpeg不同cpu，gpu以及相关配置&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持使用danmufactory自动处理xml文件并进行压制&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 工具页面，danmufactory的GUI&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 工具页面，flv的转封装&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持视频合并&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 下载页面&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持切片&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; log记录及其展示&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 配置持久化，压制高能进度条&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; B站上传支持 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 移除biliup二进制文件依赖&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持分p&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 多账户支持&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; webhook支持 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 录播姬webhook支持&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; blrec webhook支持&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持自动上传&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持弹幕压制&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 断播续传&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持自定义ffmpeg以及ffprobe&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 直播录制 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 斗鱼&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 虎牙&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; B站&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 抖音&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 弹幕分析&amp;amp;看板支持&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持斗鱼&amp;amp;虎牙录播自动搬运&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; web&amp;amp;docker版本支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;交流地址&lt;/h1&gt; 
&lt;p&gt;交流 QQ 群：872011161&lt;/p&gt; 
&lt;h1&gt;开发&lt;/h1&gt; 
&lt;p&gt;node版本根据&lt;code&gt;.node-version&lt;/code&gt;来进行选择&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pnpm install
$ pnpm run install:bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;better-sqlite3&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;弹幕分析&lt;/code&gt;功能依赖于&lt;code&gt;better-sqlite3&lt;/code&gt;，如果你无法编译安装，尝试安装&lt;a href="https://visualstudio.microsoft.com/zh-hans/thank-you-downloading-visual-studio/?sku=Community"&gt;visual-studio2022&lt;/a&gt;中的c++相关工具，以及python3(也许)。 如果你是Win，你还可能遇到报错比如&lt;code&gt;cause=fork/exec %1 is not a valid Win32 application.&lt;/code&gt;，根据&lt;a href="https://github.com/pnpm/pnpm/issues/5638#issuecomment-1327988206"&gt;提示&lt;/a&gt;修改pnpm源文件，如果你最后还是无法安装，尝试在项目根目录运行&lt;code&gt;node scripts\github-ci-better-sqlite3.js&lt;/code&gt;手动安装依赖。&lt;/p&gt; 
&lt;h3&gt;其他依赖&lt;/h3&gt; 
&lt;p&gt;如果二进制依赖安装失败或者不支持你的平台，请尝试&lt;a href="https://github.com/renmu123/biliLive-tools/releases/tag/0.2.1"&gt;手动下载安装&lt;/a&gt;二进制依赖，最新版本为距离当前版本最近的版本。&lt;/p&gt; 
&lt;p&gt;新建&lt;code&gt;packages\app\resources\bin&lt;/code&gt;文件夹，里面需要三个文件。 同时需要在应用的设置里设置相关可执行文件地址。&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;DanmukuFactory.exe&lt;/code&gt; &lt;a href="https://github.com/renmu123/DanmakuFactory/tree/test"&gt;自编译版本&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ffmpeg.exe&lt;/code&gt; &lt;a href="https://github.com/BtbN/FFmpeg-Builds/releases"&gt;n7.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ffprobe.exe&lt;/code&gt; &lt;a href="https://github.com/BtbN/FFmpeg-Builds/releases"&gt;n7.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;pnpm run dev&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;关于PR&lt;/h2&gt; 
&lt;p&gt;提 PR 前，最好先提一个 issue，以防重复或者 PR 不被接收&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# APP应用，如果需要分发也可以在github action进行自动编译
$ pnpm run build:app
# CLI应用
$ pnpm run build:cli
# docker
# 相关文件在`docker`文件夹下
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;WebUI项目地址&lt;/h2&gt; 
&lt;p&gt;为github actions自动编译&lt;/p&gt; 
&lt;p&gt;地址：&lt;a href="https://github.com/renmu123/biliLive-webui"&gt;https://github.com/renmu123/biliLive-webui&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;直播录制相关库&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@bililive-tools/manager"&gt;录制管理&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@bililive-tools/bilibili-recorder"&gt;B站录制&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@bililive-tools/douyu-recorder"&gt;斗鱼录制&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@bililive-tools/huya-recorder"&gt;虎牙录制&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/@bililive-tools/douyin-recorder"&gt;抖音录制&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/huya-danma-listener"&gt;虎牙弹幕监听&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/package/huya-danma-listener"&gt;抖音弹幕监听&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;赞赏&lt;/h1&gt; 
&lt;p&gt;如果本项目对你有帮助，请我喝瓶快乐水吧，有助于项目更好维护。&lt;br /&gt; 爱发电：&lt;a href="https://afdian.com/a/renmu123"&gt;https://afdian.com/a/renmu123&lt;/a&gt;&lt;br /&gt; 你也可以给我的 B 站帐号 &lt;a href="https://space.bilibili.com/10995238"&gt;充电&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;GPLv3&lt;/p&gt; 
&lt;h1&gt;参考资料 &amp;amp; 鸣谢&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;a href="https://github.com/hihkm/DanmakuFactory" class="external" target="_blank"&gt;DanmakuFactory&lt;/a&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;a href="https://github.com/biliup/biliup-rs" class="external" target="_blank"&gt;biliup-rs&lt;/a&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;a href="https://github.com/BililiveRecorder/BililiveRecorder" class="external" target="_blank"&gt;BililiveRecorder&lt;/a&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;a href="https://github.com/renmu123/biliAPI" class="external" target="_blank"&gt;biliAPI&lt;/a&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;a href="https://github.com/WhiteMinds/LiveAutoRecord" class="external" target="_blank"&gt;LiveAutoRecord&lt;/a&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>zotero/zotero</title>
      <link>https://github.com/zotero/zotero</link>
      <description>&lt;p&gt;Zotero is a free, easy-to-use tool to help you collect, organize, annotate, cite, and share your research sources.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zotero&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/zotero/zotero/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/zotero/zotero/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.zotero.org/"&gt;Zotero&lt;/a&gt; is a free, easy-to-use tool to help you collect, organize, cite, and share your research sources.&lt;/p&gt; 
&lt;p&gt;Please post feature requests or bug reports to the &lt;a href="https://forums.zotero.org/"&gt;Zotero Forums&lt;/a&gt;. If you're having trouble with Zotero, see &lt;a href="https://www.zotero.org/support/getting_help"&gt;Getting Help&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information on how to use this source code, see the &lt;a href="https://www.zotero.org/support/dev/source_code"&gt;Zotero documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>clusterzx/paperless-ai</title>
      <link>https://github.com/clusterzx/paperless-ai</link>
      <description>&lt;p&gt;An automated document analyzer for Paperless-ngx using OpenAI API, Ollama, Deepseek-r1, Azure and all OpenAI API compatible Services to automatically analyze and tag your documents.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;📄 Paperless-AI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/clusterzx/paperless-ai/commits/main"&gt;&lt;img src="https://img.shields.io/github/commit-activity/t/clusterzx/paperless-ai" alt="GitHub commit activity" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/clusterzx/paperless-ai"&gt;&lt;img src="https://img.shields.io/docker/pulls/clusterzx/paperless-ai" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://github.com/clusterzx"&gt;&lt;img src="https://img.shields.io/github/stars/clusterzx" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/clusterzx/paperless-ai/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/clusterzx/paperless-ai?cacheSeconds=1" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Paperless-AI&lt;/strong&gt; is an AI-powered extension for &lt;a href="https://github.com/paperless-ngx/paperless-ngx"&gt;Paperless-ngx&lt;/a&gt; that brings automatic document classification, smart tagging, and semantic search using OpenAI-compatible APIs and Ollama.&lt;/p&gt; 
&lt;p&gt;It enables &lt;strong&gt;fully automated document workflows&lt;/strong&gt;, &lt;strong&gt;contextual chat&lt;/strong&gt;, and &lt;strong&gt;powerful customization&lt;/strong&gt; — all via an intuitive web interface.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Just ask:&lt;br /&gt; “When did I sign my rental agreement?”&lt;br /&gt; “What was the amount of the last electricity bill?”&lt;br /&gt; “Which documents mention my health insurance?”&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Powered by &lt;strong&gt;Retrieval-Augmented Generation (RAG)&lt;/strong&gt;, you can now search semantically across your full archive and get precise, natural language answers.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;h3&gt;🔄 Automated Document Processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Detects new documents in Paperless-ngx automatically&lt;/li&gt; 
 &lt;li&gt;Analyzes content using OpenAI API, Ollama, and other compatible backends&lt;/li&gt; 
 &lt;li&gt;Assigns title, tags, document type, and correspondent&lt;/li&gt; 
 &lt;li&gt;Built-in support for: 
  &lt;ul&gt; 
   &lt;li&gt;Ollama (Mistral, Llama, Phi-3, Gemma-2)&lt;/li&gt; 
   &lt;li&gt;OpenAI&lt;/li&gt; 
   &lt;li&gt;DeepSeek.ai&lt;/li&gt; 
   &lt;li&gt;OpenRouter.ai&lt;/li&gt; 
   &lt;li&gt;Perplexity.ai&lt;/li&gt; 
   &lt;li&gt;Together.ai&lt;/li&gt; 
   &lt;li&gt;LiteLLM&lt;/li&gt; 
   &lt;li&gt;VLLM&lt;/li&gt; 
   &lt;li&gt;Fastchat&lt;/li&gt; 
   &lt;li&gt;Gemini (Google)&lt;/li&gt; 
   &lt;li&gt;...and more!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧠 RAG-Based AI Chat&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Natural language document search and Q&amp;amp;A&lt;/li&gt; 
 &lt;li&gt;Understands full document context (not just keywords)&lt;/li&gt; 
 &lt;li&gt;Semantic memory powered by your own data&lt;/li&gt; 
 &lt;li&gt;Fast, intelligent, privacy-friendly document queries&lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/clusterzx/paperless-ai/refs/heads/main/ppairag.png" alt="RAG_CHAT_DEMO" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚙️ Manual Processing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web interface for manual AI tagging&lt;/li&gt; 
 &lt;li&gt;Useful when reviewing sensitive documents&lt;/li&gt; 
 &lt;li&gt;Accessible via &lt;code&gt;/manual&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 Smart Tagging &amp;amp; Rules&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define rules to limit which documents are processed&lt;/li&gt; 
 &lt;li&gt;Disable prompts and apply tags automatically&lt;/li&gt; 
 &lt;li&gt;Set custom output tags for tracked classification&lt;br /&gt; &lt;img src="https://github.com/user-attachments/assets/1fc9f470-6e45-43e0-a212-b8fa6225e8dd" alt="PPAI_SHOWCASE3" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ &lt;strong&gt;First-time install:&lt;/strong&gt; Restart the container &lt;strong&gt;after completing setup&lt;/strong&gt; (API keys, preferences) to build RAG index.&lt;br /&gt; 🔁 Not required for updates.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;📘 &lt;a href="https://github.com/clusterzx/paperless-ai/wiki/2.-Installation"&gt;Installation Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐳 Docker Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Health monitoring and auto-restart&lt;/li&gt; 
 &lt;li&gt;Persistent volumes and graceful shutdown&lt;/li&gt; 
 &lt;li&gt;Works out of the box with minimal setup&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 Local Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install dependencies
npm install

# Start development/test mode
npm run test
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧭 Roadmap Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Multi-AI model support&lt;/li&gt; 
 &lt;li&gt;✅ Multilingual document analysis&lt;/li&gt; 
 &lt;li&gt;✅ Tag rules and filters&lt;/li&gt; 
 &lt;li&gt;✅ Integrated document chat with RAG&lt;/li&gt; 
 &lt;li&gt;✅ Responsive web interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome PRs and contributions!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Fork, clone, then:
git checkout -b feature/YourFeature
# After changes:
git commit -m "Add YourFeature"
git push origin feature/YourFeature
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then open a Pull Request via GitHub.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🆘 Support &amp;amp; Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/clusterzx/paperless-ai/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/AvNekAfK38"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See &lt;a href="https://raw.githubusercontent.com/clusterzx/paperless-ai/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🙏 Support Development&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.patreon.com/c/clusterzx"&gt;&lt;img src="https://img.shields.io/badge/Patreon-F96854?style=for-the-badge&amp;amp;logo=patreon&amp;amp;logoColor=white" alt="Patreon" /&gt;&lt;/a&gt; &lt;a href="https://www.paypal.com/paypalme/bech0r"&gt;&lt;img src="https://img.shields.io/badge/PayPal-00457C?style=for-the-badge&amp;amp;logo=paypal&amp;amp;logoColor=white" alt="PayPal" /&gt;&lt;/a&gt; &lt;a href="https://www.buymeacoffee.com/clusterzx"&gt;&lt;img src="https://img.shields.io/badge/Buy%20Me%20a%20Coffee-ffdd00?style=for-the-badge&amp;amp;logo=buy-me-a-coffee&amp;amp;logoColor=black" alt="BuyMeACoffee" /&gt;&lt;/a&gt; &lt;a href="https://ko-fi.com/clusterzx"&gt;&lt;img src="https://img.shields.io/badge/Ko--fi-F16061?style=for-the-badge&amp;amp;logo=ko-fi&amp;amp;logoColor=white" alt="Ko-Fi" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/node</title>
      <link>https://github.com/nodejs/node</link>
      <description>&lt;p&gt;Node.js JavaScript runtime ✨🐢🚀✨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js&lt;/h1&gt; 
&lt;p&gt;Node.js is an open-source, cross-platform JavaScript runtime environment.&lt;/p&gt; 
&lt;p&gt;For information on using Node.js, see the &lt;a href="https://nodejs.org/"&gt;Node.js website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Node.js project uses an &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;open governance model&lt;/a&gt;. The &lt;a href="https://openjsf.org/"&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; 
&lt;p&gt;Contributors are expected to act in a collaborative manner to move the project forward. We encourage the constructive exchange of contrary opinions and compromise. The &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md#technical-steering-committee"&gt;TSC&lt;/a&gt; reserves the right to limit or block contributors who repeatedly act in ways that discourage, exhaust, or otherwise negatively affect other participants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project has a &lt;a href="https://github.com/nodejs/admin/raw/HEAD/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#support"&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-types"&gt;Release types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#download"&gt;Download&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-and-lts-releases"&gt;Current and LTS releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#nightly-releases"&gt;Nightly releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#api-documentation"&gt;API documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#building-nodejs"&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#contributing-to-nodejs"&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-project-team-members"&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#tsc-technical-steering-committee"&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#collaborators"&gt;Collaborators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#triagers"&gt;Triagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Looking for help? Check out the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/.github/SUPPORT.md"&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href="https://github.com/nodejs/node/tree/v22.x"&gt;v22.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long Term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered code names, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and LTS releases follow &lt;a href="https://semver.org"&gt;semantic versioning&lt;/a&gt;. A member of the Release Team &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href="https://github.com/nodejs/Release#readme"&gt;Release README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href="https://nodejs.org/en/download/"&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Current and LTS releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/release/"&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://nodejs.org/download/release/latest/"&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href="https://nodejs.org/download/release/latest-hydrogen/"&gt;latest-hydrogen&lt;/a&gt; directory contains the latest Hydrogen (Node.js 18) release.&lt;/p&gt; 
&lt;h4&gt;Nightly releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/nightly/"&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Each directory and filename includes the version (e.g., &lt;code&gt;v22.0.0&lt;/code&gt;), followed by the UTC date (e.g., &lt;code&gt;20240424&lt;/code&gt; for April 24, 2024), and the short commit SHA of the HEAD of the release (e.g., &lt;code&gt;ddd0a9e494&lt;/code&gt;). For instance, a full directory name might look like &lt;code&gt;v22.0.0-nightly20240424ddd0a9e494&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;API documentation&lt;/h4&gt; 
&lt;p&gt;Documentation for the latest Current release is at &lt;a href="https://nodejs.org/api/"&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href="https://nodejs.org/download/docs/"&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Verifying binaries&lt;/h3&gt; 
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt.asc&lt;/code&gt; file with SHA checksums for the files and the releaser PGP signature.&lt;/p&gt; 
&lt;p&gt;You can get a trusted keyring from nodejs/release-keys, e.g. using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsLo "/path/to/nodejs-keyring.kbx" "https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can import the releaser keys in your default keyring, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt; for commands to how to do that.&lt;/p&gt; 
&lt;p&gt;Then, you can verify the files you've downloaded locally (if you're using your default keyring, pass &lt;code&gt;--keyring="${GNUPGHOME:-~/.gnupg}/pubring.kbx"&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsO "https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc" \
&amp;amp;&amp;amp; gpgv --keyring="/path/to/nodejs-keyring.kbx" --output SHASUMS256.txt &amp;lt; SHASUMS256.txt.asc \
&amp;amp;&amp;amp; shasum --check SHASUMS256.txt --ignore-missing
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building Node.js&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/CONTRIBUTING.md"&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nodejs/TSC/raw/HEAD/WORKING_GROUPS.md"&gt;Working Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/strategic-initiatives.md"&gt;Strategic initiatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/technical-values.md"&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt; 
&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; 
&lt;h4&gt;TSC voting members&lt;/h4&gt; 
&lt;!--lint disable prohibited-strings--&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;TSC regular members&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;TSC emeriti members&lt;/summary&gt; 
 &lt;h4&gt;TSC emeriti members&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nebrius"&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@nebri.us"&gt;bryan@nebri.us&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r@va.gg"&gt;r@va.gg&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt; 
&lt;h3&gt;Collaborators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abmusse"&gt;abmusse&lt;/a&gt; - &lt;strong&gt;Abdirahim Musse&lt;/strong&gt; &amp;lt;&lt;a href="mailto:abdirahim.musse@ibm.com"&gt;abdirahim.musse@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aditi-1400"&gt;Aditi-1400&lt;/a&gt; - &lt;strong&gt;Aditi Singh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:aditisingh1400@gmail.com"&gt;aditisingh1400@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/aduh95"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/anonrig"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnb"&gt;bnb&lt;/a&gt; - &lt;strong&gt;Tierney Cyren&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@bnb.im"&gt;hello@bnb.im&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cclauss"&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cclauss@me.com"&gt;cclauss@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cola119"&gt;cola119&lt;/a&gt; - &lt;strong&gt;Kohei Ueno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kohei.ueno119@gmail.com"&gt;kohei.ueno119@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dario-piotrowicz"&gt;dario-piotrowicz&lt;/a&gt; - &lt;strong&gt;Dario Piotrowicz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dario.piotrowicz@gmail.com"&gt;dario.piotrowicz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debadree25"&gt;debadree25&lt;/a&gt; - &lt;strong&gt;Debadree Chatterjee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:debadree333@gmail.com"&gt;debadree333@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deokjinkim"&gt;deokjinkim&lt;/a&gt; - &lt;strong&gt;Deokjin Kim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deokjin81.kim@gmail.com"&gt;deokjin81.kim@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edsadr"&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edsadr@gmail.com"&gt;edsadr@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ErickWendel"&gt;ErickWendel&lt;/a&gt; - &lt;strong&gt;Erick Wendel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:erick.workspace@gmail.com"&gt;erick.workspace@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ethan-Arrowood"&gt;Ethan-Arrowood&lt;/a&gt; - &lt;strong&gt;Ethan Arrowood&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ethan@arrowood.dev"&gt;ethan@arrowood.dev&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Flarna"&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard Stöbich&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deb2001-github@yahoo.de"&gt;deb2001-github@yahoo.de&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/geeksilva97"&gt;geeksilva97&lt;/a&gt; - &lt;strong&gt;Edy Silva&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edigleyssonsilva@gmail.com"&gt;edigleyssonsilva@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gengjiawen"&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:technicalcute@gmail.com"&gt;technicalcute@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guybedford"&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;&lt;a href="mailto:guybedford@gmail.com"&gt;guybedford@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/H4ad"&gt;H4ad&lt;/a&gt; - &lt;strong&gt;Vinícius Lourenço Claro Cardoso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:contact@viniciusl.com.br"&gt;contact@viniciusl.com.br&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HarshithaKP"&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:harshitha014@gmail.com"&gt;harshitha014@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/himself65"&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu "Alex" Yang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:himself65@outlook.com"&gt;himself65@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IlyasShabi"&gt;IlyasShabi&lt;/a&gt; - &lt;strong&gt;Ilyas Shabi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilyasshabi94@gmail.com"&gt;ilyasshabi94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/islandryu"&gt;islandryu&lt;/a&gt; - &lt;strong&gt;Ryuhei Shima&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shimaryuhei@gmail.com"&gt;shimaryuhei@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakecastelli"&gt;jakecastelli&lt;/a&gt; - &lt;strong&gt;Jake Yuesong Li&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jake.yuesong@gmail.com"&gt;jake.yuesong@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JakobJingleheimer"&gt;JakobJingleheimer&lt;/a&gt; - &lt;strong&gt;Jacob Smith&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jacob@frende.me"&gt;jacob@frende.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jazelly"&gt;jazelly&lt;/a&gt; - &lt;strong&gt;Jason Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:xzha4350@gmail.com"&gt;xzha4350@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jkrems"&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Martin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jan.krems@gmail.com"&gt;jan.krems@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JonasBa"&gt;JonasBa&lt;/a&gt; - &lt;strong&gt;Jonas Badalic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jonas.badalic@gmail.com"&gt;jonas.badalic@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JungMinu"&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:nodecorelab@gmail.com"&gt;nodecorelab@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KhafraDev"&gt;KhafraDev&lt;/a&gt; - &lt;strong&gt;Matthew Aitken&lt;/strong&gt; &amp;lt;&lt;a href="mailto:maitken033380023@gmail.com"&gt;maitken033380023@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemire"&gt;lemire&lt;/a&gt; - &lt;strong&gt;Daniel Lemire&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel@lemire.me"&gt;daniel@lemire.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LiviaMedeiros"&gt;LiviaMedeiros&lt;/a&gt; - &lt;strong&gt;LiviaMedeiros&lt;/strong&gt; &amp;lt;&lt;a href="mailto:livia@cirno.name"&gt;livia@cirno.name&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ljharb"&gt;ljharb&lt;/a&gt; - &lt;strong&gt;Jordan Harband&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ljharb@gmail.com"&gt;ljharb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lpinca"&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luigipinca@gmail.com"&gt;luigipinca@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukekarrys"&gt;lukekarrys&lt;/a&gt; - &lt;strong&gt;Luke Karrys&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luke@lukekarrys.com"&gt;luke@lukekarrys.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lxxyx"&gt;Lxxyx&lt;/a&gt; - &lt;strong&gt;Zijian Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxxyxzj@gmail.com"&gt;lxxyxzj@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/marco-ippolito"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MattiasBuelens"&gt;MattiasBuelens&lt;/a&gt; - &lt;strong&gt;Mattias Buelens&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattias@buelens.com"&gt;mattias@buelens.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/mcollina"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MrJithil"&gt;MrJithil&lt;/a&gt; - &lt;strong&gt;Jithil P Ponnan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jithil@outlook.com"&gt;jithil@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovflowd"&gt;ovflowd&lt;/a&gt; - &lt;strong&gt;Claudio Wunder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cwunder@gnome.org"&gt;cwunder@gnome.org&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/panva"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pimterry"&gt;pimterry&lt;/a&gt; - &lt;strong&gt;Tim Perry&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pimterry@gmail.com"&gt;pimterry@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmarchini"&gt;pmarchini&lt;/a&gt; - &lt;strong&gt;Pietro Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pietro.marchini94@gmail.com"&gt;pietro.marchini94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puskin"&gt;puskin&lt;/a&gt; - &lt;strong&gt;Giovanni Bucci&lt;/strong&gt; &amp;lt;&lt;a href="mailto:github@puskin.it"&gt;github@puskin.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Qard"&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;&lt;a href="mailto:admin@stephenbelanger.com"&gt;admin@stephenbelanger.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RafaelGSS"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RaisinTen"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rluvaton"&gt;rluvaton&lt;/a&gt; - &lt;strong&gt;Raz Luvaton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rluvaton@gmail.com"&gt;rluvaton@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/santigimeno"&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:santiago.gimeno@gmail.com"&gt;santiago.gimeno@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/srl295"&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:srl295@gmail.com"&gt;srl295@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StefanStojanovic"&gt;StefanStojanovic&lt;/a&gt; - &lt;strong&gt;Stefan Stojanovic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan.stojanovic@janeasystems.com"&gt;stefan.stojanovic@janeasystems.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sxa"&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sxa@redhat.com"&gt;sxa@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theanarkh"&gt;theanarkh&lt;/a&gt; - &lt;strong&gt;theanarkh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:theratliter@gmail.com"&gt;theratliter@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trivikr"&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trivikr.dev@gmail.com"&gt;trivikr.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vmoroz"&gt;vmoroz&lt;/a&gt; - &lt;strong&gt;Vladimir Morozov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vmorozov@microsoft.com"&gt;vmorozov@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zcbenz"&gt;zcbenz&lt;/a&gt; - &lt;strong&gt;Cheng Zhao&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zcbenz@gmail.com"&gt;zcbenz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ZYSzys"&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zyszys98@gmail.com"&gt;zyszys98@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Emeriti&lt;/summary&gt; 
 &lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.
     If the format changes, those utilities need to be tested and updated. --&gt; 
 &lt;h3&gt;Collaborator emeriti&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ak239"&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ak239spb@gmail.com"&gt;ak239spb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andrasq"&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;&lt;a href="mailto:andras@kinvey.com"&gt;andras@kinvey.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AndreasMadsen"&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:amwebdk@gmail.com"&gt;amwebdk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AnnaMag"&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna.m.kedzierska@gmail.com"&gt;anna.m.kedzierska@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/antsmartian"&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anto.aravinth.cse@gmail.com"&gt;anto.aravinth.cse@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aqrln"&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eaglexrlnk@gmail.com"&gt;eaglexrlnk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AshCripps"&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;&lt;a href="mailto:email@ashleycripps.co.uk"&gt;email@ashleycripps.co.uk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bcoe"&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bencoe@gmail.com"&gt;bencoe@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeck"&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bradley.meck@gmail.com"&gt;bradley.meck@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeurer"&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benedikt.meurer@gmail.com"&gt;benedikt.meurer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/boneskull"&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:boneskull@boneskull.com"&gt;boneskull@boneskull.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/brendanashworth"&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brendan.ashworth@me.com"&gt;brendan.ashworth@me.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bzoz"&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bartosz@janeasystems.com"&gt;bartosz@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/calvinmetcalf"&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;&lt;a href="mailto:calvin.metcalf@gmail.com"&gt;calvin.metcalf@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/claudiorodriguez"&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjrodr@yahoo.com"&gt;cjrodr@yahoo.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/DavidCai1993"&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davidcai1993@yahoo.com"&gt;davidcai1993@yahoo.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/davisjam"&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davisjam@vt.edu"&gt;davisjam@vt.edu&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devnexen"&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;&lt;a href="mailto:devnexen@gmail.com"&gt;devnexen@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devsnek"&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@gus.host"&gt;me@gus.host&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/digitalinfinity"&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:digitalinfinity@gmail.com"&gt;digitalinfinity@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dmabupt"&gt;dmabupt&lt;/a&gt; - &lt;strong&gt;Xu Meng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dmabupt@gmail.com"&gt;dmabupt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dnlup"&gt;dnlup&lt;/a&gt; - &lt;strong&gt;dnlup&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dnlup.dev@gmail.com"&gt;dnlup.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eljefedelrodeodeljefe"&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:robert.lindstaedt@gmail.com"&gt;robert.lindstaedt@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/estliberitas"&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:estliberitas@gmail.com"&gt;estliberitas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eugeneo"&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eostroukhov@google.com"&gt;eostroukhov@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/firedfox"&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wangyang0123@gmail.com"&gt;wangyang0123@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gdams"&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gadams@microsoft.com"&gt;gadams@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/geek"&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wpreul@gmail.com"&gt;wpreul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/glentiki"&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;&lt;a href="mailto:glenkeane.94@gmail.com"&gt;glenkeane.94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hashseed"&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yangguo@chromium.org"&gt;yangguo@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hiroppy"&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@hiroppy.me"&gt;hello@hiroppy.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iansu"&gt;iansu&lt;/a&gt; - &lt;strong&gt;Ian Sutherland&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ian@iansutherland.ca"&gt;ian@iansutherland.ca&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iarna"&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@re-becca.org"&gt;me@re-becca.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imran-iq"&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;&lt;a href="mailto:imran@imraniqbal.org"&gt;imran@imraniqbal.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imyller"&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilkka.myller@nodefield.com"&gt;ilkka.myller@nodefield.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/italoacasas"&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/JacksonTian"&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shyvo1987@gmail.com"&gt;shyvo1987@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jasongin"&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasongin@microsoft.com"&gt;jasongin@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jbergstroem"&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bugs@bergstroem.nu"&gt;bugs@bergstroem.nu&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jdalton"&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:john.david.dalton@gmail.com"&gt;john.david.dalton@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jhamhader"&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yuval@brik.org.il"&gt;yuval@brik.org.il&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joaocgreis"&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:reis@janeasystems.com"&gt;reis@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sepi@joesepi.com"&gt;sepi@joesepi.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/julianduque"&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;&lt;a href="mailto:julianduquej@gmail.com"&gt;julianduquej@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kfarnung"&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kfarnung@microsoft.com"&gt;kfarnung@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kunalspathak"&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kunal.pathak@microsoft.com"&gt;kunal.pathak@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kuriyosh"&gt;kuriyosh&lt;/a&gt; - &lt;strong&gt;Yoshiki Kurihara&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosyos0306@gmail.com"&gt;yosyos0306@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kvakil"&gt;kvakil&lt;/a&gt; - &lt;strong&gt;Keyhan Vakil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kvakil@sylph.kvakil.me"&gt;kvakil@sylph.kvakil.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lance"&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lball@redhat.com"&gt;lball@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Leko"&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;&lt;a href="mailto:leko.noor@gmail.com"&gt;leko.noor@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Linkgoron"&gt;Linkgoron&lt;/a&gt; - &lt;strong&gt;Nitzan Uziely&lt;/strong&gt; &amp;lt;&lt;a href="mailto:linkgoron@gmail.com"&gt;linkgoron@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lucamaraschi"&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luca.maraschi@gmail.com"&gt;luca.maraschi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lundibundi"&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shishugi@gmail.com"&gt;shishugi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lxe"&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxe@lxe.co"&gt;lxe@lxe.co&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maclover7"&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@jonathanmoss.me"&gt;me@jonathanmoss.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mafintosh"&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mathiasbuus@gmail.com"&gt;mathiasbuus@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/matthewloring"&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattloring@google.com"&gt;mattloring@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Mesteery"&gt;Mesteery&lt;/a&gt; - &lt;strong&gt;Mestery&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mestery@protonmail.com"&gt;mestery@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/micnic"&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:micnic90@gmail.com"&gt;micnic90@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mikeal"&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mikeal.rogers@gmail.com"&gt;mikeal.rogers@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/miladfarca"&gt;miladfarca&lt;/a&gt; - &lt;strong&gt;Milad Fa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mfarazma@redhat.com"&gt;mfarazma@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mildsunrise"&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@alba.sh"&gt;me@alba.sh&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/misterdjules"&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@netflix.com"&gt;jgilli@netflix.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/monsanto"&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chris@monsan.to"&gt;chris@monsan.to&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MoonBall"&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gangc.cxy@foxmail.com"&gt;gangc.cxy@foxmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/not-an-aardvark"&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:teddy.katz@gmail.com"&gt;teddy.katz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Olegas"&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oleg@elifantiev.ru"&gt;oleg@elifantiev.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/othiym23"&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ogd@aoaioxxysz.net"&gt;ogd@aoaioxxysz.net&lt;/a&gt;&amp;gt; (they/them/themself)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/oyyd"&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oyydoibh@gmail.com"&gt;oyydoibh@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/petkaantonov"&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petka_antonov@hotmail.com"&gt;petka_antonov@hotmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/phillipj"&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:johphi@gmail.com"&gt;johphi@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pmq20"&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pmq2001@gmail.com"&gt;pmq2001@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PoojaDurgad"&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:Pooja.D.P@ibm.com"&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/princejwesley"&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;&lt;a href="mailto:princejohnwesley@gmail.com"&gt;princejohnwesley@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/psmarshall"&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petermarshall@chromium.org"&gt;petermarshall@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/puzpuzpuz"&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apechkurov@gmail.com"&gt;apechkurov@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/refack"&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;&lt;a href="mailto:refack@gmail.com"&gt;refack@gmail.com&lt;/a&gt;&amp;gt; (he/him/הוא/אתה)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rexagod"&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rexagod@gmail.com"&gt;rexagod@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rickyes"&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;&lt;a href="mailto:0x19951125@gmail.com"&gt;0x19951125@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rlidwka"&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:alex@kocharin.ru"&gt;alex@kocharin.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rmg"&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r.m.graham@gmail.com"&gt;r.m.graham@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/robertkowalski"&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rok@kowalski.gd"&gt;rok@kowalski.gd&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/romankl"&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;&lt;a href="mailto:romaaan.git@gmail.com"&gt;romaaan.git@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ronkorving"&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ron@ronkorving.nl"&gt;ron@ronkorving.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/RReverser"&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@rreverser.com"&gt;me@rreverser.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rubys"&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rubys@intertwingly.net"&gt;rubys@intertwingly.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ryzokuken"&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ryzokuken@disroot.org"&gt;ryzokuken@disroot.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/saghul"&gt;saghul&lt;/a&gt; - &lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;&lt;a href="mailto:s@saghul.net"&gt;s@saghul.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sebdeckers"&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sebdeckers83@gmail.com"&gt;sebdeckers83@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/seishun"&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vvnicholas@gmail.com"&gt;vvnicholas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shisama"&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shisama07@gmail.com"&gt;shisama07@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/silverwind"&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@silverwind.io"&gt;me@silverwind.io&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/starkwang"&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:starkwang@126.com"&gt;starkwang@126.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/stefanmb"&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan@budeanu.com"&gt;stefan@budeanu.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tellnes"&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christian@tellnes.no"&gt;christian@tellnes.no&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thlorenz"&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thlorenz@gmx.de"&gt;thlorenz@gmx.de&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:m.j.tunnicliffe@gmail.com"&gt;m.j.tunnicliffe@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vdeturckheim"&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vlad2t@hotmail.com"&gt;vlad2t@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vkurchatkin"&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vladimir.kurchatkin@gmail.com"&gt;vladimir.kurchatkin@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vsemozhetbyt"&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vsemozhetbyt@gmail.com"&gt;vsemozhetbyt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watilde"&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daijiro.wachi@gmail.com"&gt;daijiro.wachi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watson"&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:w@tson.dk"&gt;w@tson.dk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/whitlockjc"&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jwhitlock@apache.org"&gt;jwhitlock@apache.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/XadillaX"&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@2333.moe"&gt;i@2333.moe&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yashLadha"&gt;yashLadha&lt;/a&gt; - &lt;strong&gt;Yash Ladha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yash@yashladha.in"&gt;yash@yashladha.in&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yhwang"&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yh.wang@ibm.com"&gt;yh.wang@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yorkie"&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yorkiefixer@gmail.com"&gt;yorkiefixer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yosuke-furukawa"&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosuke.furukawa@gmail.com"&gt;yosuke.furukawa@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--lint enable prohibited-strings--&gt; 
&lt;p&gt;Collaborators follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/collaborator-guide.md"&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1ilsang"&gt;1ilsang&lt;/a&gt; - &lt;strong&gt;Sangchul Lee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:1ilsang.dev@gmail.com"&gt;1ilsang.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bjohansebas"&gt;bjohansebas&lt;/a&gt; - &lt;strong&gt;Sebastian Beltran&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bjohansebas@gmail.com"&gt;bjohansebas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmuenzenmeyer"&gt;bmuenzenmeyer&lt;/a&gt; - &lt;strong&gt;Brian Muenzenmeyer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brian.muenzenmeyer@gmail.com"&gt;brian.muenzenmeyer@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CanadaHonk"&gt;CanadaHonk&lt;/a&gt; - &lt;strong&gt;Oliver Medhurst&lt;/strong&gt; &amp;lt;&lt;a href="mailto:honk@goose.icu"&gt;honk@goose.icu&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurgunday"&gt;gurgunday&lt;/a&gt; - &lt;strong&gt;Gürgün Dayıoğlu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hey@gurgun.day"&gt;hey@gurgun.day&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HBSPS"&gt;HBSPS&lt;/a&gt; - &lt;strong&gt;Wiyeong Seo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hbsps.dev@gmail.com"&gt;hbsps.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iam-frankqiu"&gt;iam-frankqiu&lt;/a&gt; - &lt;strong&gt;Frank Qiu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:iam.frankqiu@gmail.com"&gt;iam.frankqiu@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KevinEady"&gt;KevinEady&lt;/a&gt; - &lt;strong&gt;Kevin Eady&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kevin.c.eady@gmail.com"&gt;kevin.c.eady@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milesguicent"&gt;milesguicent&lt;/a&gt; - &lt;strong&gt;Miles Guicent&lt;/strong&gt; &amp;lt;&lt;a href="mailto:guicent@pm.me"&gt;guicent@pm.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/preveen-stack"&gt;preveen-stack&lt;/a&gt; - &lt;strong&gt;Preveen Padmanabhan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wide4head@gmail.com"&gt;wide4head@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Triagers follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/issues.md#triaging-a-bug-report"&gt;Triage Guide&lt;/a&gt; when responding to new issues.&lt;/p&gt; 
&lt;h3&gt;Release keys&lt;/h3&gt; 
&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;5BE8A3F6C8A5C01D106C0AD820B1A390B168D356&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;CC68F5A3106FF448322E48ED27F5E38D5B0A215F&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruyadorno@hotmail.com"&gt;ruyadorno@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;A363A499291CBBC940DD62E41F10027AF002F8B0&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use the keyring the project maintains at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx&lt;/a&gt;. Alternatively, you can import them from a public key server. Have in mind that the project cannot guarantee the availability of the server nor the keys on that server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gpg --keyserver hkps://keys.openpgp.org --recv-keys 5BE8A3F6C8A5C01D106C0AD820B1A390B168D356 # Antoine du Hamel
gpg --keyserver hkps://keys.openpgp.org --recv-keys DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 # Juan José Arboleda
gpg --keyserver hkps://keys.openpgp.org --recv-keys CC68F5A3106FF448322E48ED27F5E38D5B0A215F # Marco Ippolito
gpg --keyserver hkps://keys.openpgp.org --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 # Michaël Zasso
gpg --keyserver hkps://keys.openpgp.org --recv-keys 890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 # Rafael Gonzaga
gpg --keyserver hkps://keys.openpgp.org --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C # Richard Lau
gpg --keyserver hkps://keys.openpgp.org --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A # Ruy Adorno
gpg --keyserver hkps://keys.openpgp.org --recv-keys A363A499291CBBC940DD62E41F10027AF002F8B0 # Ulises Gascón
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other keys used to sign some previous releases&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C0D6248439F1D5604AAFFB4021D900FFDB233756&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; &lt;code&gt;141F07595B7B3FFE74309A937405533BE57C7D57&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt; &lt;code&gt;74F12602B6F1C4E913FAA37AD3A89613643B6201&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@keybase.io"&gt;jasnell@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock@keybase.io"&gt;fishrock@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;61FC681DFB92A079F1685E77973F295594EC4689&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@fastmail.fm"&gt;jgilli@fastmail.fm&lt;/a&gt;&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tjfontaine@gmail.com"&gt;tjfontaine@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The project maintains a keyring able to verify all past releases of Node.js at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Security release stewards&lt;/h3&gt; 
&lt;p&gt;When possible, the commitment to take slots in the security release steward rotation is made by companies in order to ensure individuals who act as security stewards have the support and recognition from their employer to be able to prioritize security releases. Security release stewards manage security releases on a rotation basis as outlined in the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/security-release-process.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.datadoghq.com/"&gt;Datadog&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.herodevs.com/"&gt;HeroDevs&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodesource.com/"&gt;NodeSource&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platformatic.dev/"&gt;Platformatic&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redhat.com"&gt;Red Hat&lt;/a&gt; / &lt;a href="https://ibm.com"&gt;IBM&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joesepi@ibm.com"&gt;joesepi@ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Node.js is available under the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href="https://github.com/nodejs/node/raw/HEAD/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>