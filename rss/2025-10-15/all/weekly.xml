<rss version="2.0">
  <channel>
    <title>GitHub All Languages Weekly Trending</title>
    <description>Weekly Trending of All Languages in GitHub</description>
    <pubDate>Tue, 14 Oct 2025 01:42:19 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>anthropics/claude-code</title>
      <link>https://github.com/anthropics/claude-code</link>
      <description>&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows - all through natural language commands.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Claude Code&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/Node.js-18%2B-brightgreen?style=flat-square" alt="" /&gt; &lt;a href="https://www.npmjs.com/package/@anthropic-ai/claude-code"&gt;&lt;img src="https://img.shields.io/npm/v/@anthropic-ai/claude-code.svg?style=flat-square" alt="npm" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Claude Code is an agentic coding tool that lives in your terminal, understands your codebase, and helps you code faster by executing routine tasks, explaining complex code, and handling git workflows -- all through natural language commands. Use it in your terminal, IDE, or tag @claude on Github.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Learn more in the &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;official documentation&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/anthropics/claude-code/main/demo.gif" /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Claude Code:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g @anthropic-ai/claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to your project directory and run &lt;code&gt;claude&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Reporting Bugs&lt;/h2&gt; 
&lt;p&gt;We welcome your feedback. Use the &lt;code&gt;/bug&lt;/code&gt; command to report issues directly within Claude Code, or file a &lt;a href="https://github.com/anthropics/claude-code/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Connect on Discord&lt;/h2&gt; 
&lt;p&gt;Join the &lt;a href="https://anthropic.com/discord"&gt;Claude Developers Discord&lt;/a&gt; to connect with other developers using Claude Code. Get help, share feedback, and discuss your projects with the community.&lt;/p&gt; 
&lt;h2&gt;Data collection, usage, and retention&lt;/h2&gt; 
&lt;p&gt;When you use Claude Code, we collect feedback, which includes usage data (such as code acceptance or rejections), associated conversation data, and user feedback submitted via the &lt;code&gt;/bug&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;How we use your data&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://docs.anthropic.com/en/docs/claude-code/data-usage"&gt;data usage policies&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Privacy safeguards&lt;/h3&gt; 
&lt;p&gt;We have implemented several safeguards to protect your data, including limited retention periods for sensitive information, restricted access to user session data, and clear policies against using feedback for model training.&lt;/p&gt; 
&lt;p&gt;For full details, please review our &lt;a href="https://www.anthropic.com/legal/commercial-terms"&gt;Commercial Terms of Service&lt;/a&gt; and &lt;a href="https://www.anthropic.com/legal/privacy"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evershopcommerce/evershop</title>
      <link>https://github.com/evershopcommerce/evershop</link>
      <description>&lt;p&gt;üõçÔ∏è Typescript E-commerce Platform&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="60" height="68" alt="EverShop Logo" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/logo-green.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;EverShop&lt;/h1&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://evershop.io/docs/development/getting-started/introduction"&gt;Documentation&lt;/a&gt; | &lt;a href="https://demo.evershop.io/"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/evershopcommerce/evershop/actions/workflows/build_test.yml/badge.svg?sanitize=true" alt="Github Action" /&gt; &lt;a href="https://twitter.com/evershopjs"&gt; &lt;img alt="Twitter Follow" src="https://img.shields.io/twitter/follow/evershopjs?style=social" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/GSzt7dt7RM"&gt; &lt;img src="https://img.shields.io/discord/757179260417867879?label=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/GPL-3.0"&gt; &lt;img src="https://img.shields.io/badge/License-GPLv3-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="EverShop" width="950" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/banner.png" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;EverShop is a modern, TypeScript-first eCommerce platform built with GraphQL and React. Designed for developers, it offers essential commerce features in a modular, fully customizable architecture‚Äîperfect for building tailored shopping experiences with confidence and speed.&lt;/p&gt; 
&lt;h2&gt;Installation Using Docker&lt;/h2&gt; 
&lt;p&gt;You can get started with EverShop in minutes by using the Docker image. The Docker image is a great way to get started with EverShop without having to worry about installing dependencies or configuring your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://raw.githubusercontent.com/evershopcommerce/evershop/main/docker-compose.yml &amp;gt; docker-compose.yml
docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the full installation guide, please refer to our &lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/getting-started/installation-guide"&gt;Installation guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/module/create-your-first-extension"&gt;Extension development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://evershop.io/docs/development/theme/theme-overview"&gt;Theme development&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Explore our demo store.&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://demo.evershop.io/admin" target="_blank"&gt; &lt;img alt="EverShop Admin Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-back.png" /&gt; &lt;/a&gt; &lt;a href="https://demo.evershop.io/" target="_blank"&gt; &lt;img alt="EverShop Store Demo" height="35" src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/evershop-demo-front.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;b&gt;Demo user:&lt;/b&gt; 
&lt;p&gt;Email: &lt;a href="mailto:demo@evershop.io"&gt;demo@evershop.io&lt;/a&gt;&lt;br /&gt; Password: 123456&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like my work, feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚≠ê this repository. It helps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fevershopcommerce%2Fevershop&amp;amp;text=Awesome%20React%20Ecommerce%20Project&amp;amp;hashtags=react,ecommerce,expressjs,graphql"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt; about EverShop. Thank you!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;EverShop is an open-source project. We are committed to a fully transparent development process and appreciate highly any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as part of the EverShop community.&lt;/p&gt; 
&lt;h3&gt;Ask a question about EverShop&lt;/h3&gt; 
&lt;p&gt;You can ask questions, and participate in discussions about EverShop-related topics in the EverShop Discord channel.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GSzt7dt7RM"&gt;&lt;img src="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/.github/images/discord_banner_github.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;create bug report&lt;/a&gt;. This effort is valued and it will help all EverShop users.&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If you have an idea, or you're missing a capability that would make development easier and more robust, please &lt;a href="https://github.com/evershopcommerce/evershop/issues/new"&gt;Submit feature request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If a similar feature request already exists, don't forget to leave a "+1". If you add some more information such as your thoughts and vision about the feature, your comments will be embraced warmly :)&lt;/p&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/evershopcommerce/evershop/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/evershopcommerce/evershop/raw/main/LICENSE"&gt;GPL-3.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stremio/stremio-web</title>
      <link>https://github.com/Stremio/stremio-web</link>
      <description>&lt;p&gt;Stremio - Freedom to Stream&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stremio - Freedom to Stream&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/Stremio/stremio-web/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/Stremio/stremio-web/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://stremio.github.io/stremio-web/development"&gt;&lt;img src="https://img.shields.io/website?label=Page&amp;amp;logo=github&amp;amp;up_message=online&amp;amp;down_message=offline&amp;amp;url=https%3A%2F%2Fstremio.github.io%2Fstremio-web%2F" alt="Github Page" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stremio is a modern media center that's a one-stop solution for your video entertainment. You discover, watch and organize video content from easy to install addons.&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 12 or higher&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pnpm.io/installation"&gt;pnpm&lt;/a&gt; 10 or higher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start development server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run with Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t stremio-web .
docker run -p 8080:8080 stremio-web
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Board&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/board.png" alt="Board" /&gt;&lt;/p&gt; 
&lt;h3&gt;Discover&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/discover.png" alt="Discover" /&gt;&lt;/p&gt; 
&lt;h3&gt;Meta Details&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/metadetails.png" alt="Meta Details" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Stremio is copyright 2017-2023 Smart code and available under GPLv2 license. See the &lt;a href="https://raw.githubusercontent.com/Stremio/stremio-web/development/LICENSE.md"&gt;LICENSE&lt;/a&gt; file in the project for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TapXWorld/ChinaTextbook</title>
      <link>https://github.com/TapXWorld/ChinaTextbook</link>
      <description>&lt;p&gt;ÊâÄÊúâÂ∞èÂàùÈ´ò„ÄÅÂ§ßÂ≠¶PDFÊïôÊùê„ÄÇ&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;È°πÁõÆÁöÑÁî±Êù•&lt;/h2&gt; 
&lt;p&gt;ËôΩÁÑ∂ÂõΩÂÜÖÊïôËÇ≤ÁΩëÁ´ôÂ∑≤Êèê‰æõÂÖçË¥πËµÑÊ∫êÔºå‰ΩÜÂ§ßÂ§öÊï∞ÊôÆÈÄö‰∫∫Ëé∑Âèñ‰ø°ÊÅØÁöÑÈÄîÂæÑ‰æùÁÑ∂ÂèóÈôê„ÄÇÊúâ‰∫õ‰∫∫Âà©Áî®Ëøô‰∏ÄÁÇπÔºåÂú®ÊüêÁ´ô‰∏äÈîÄÂîÆËøô‰∫õÂ∏¶ÊúâÁßÅ‰∫∫Ê∞¥Âç∞ÁöÑËµÑÊ∫ê„ÄÇ‰∏∫‰∫ÜÂ∫îÂØπËøôÁßçÊÉÖÂÜµÔºåÊàëËÆ°ÂàíÂ∞ÜËøô‰∫õËµÑÊ∫êÈõÜ‰∏≠Âπ∂ÂºÄÊ∫êÔºå‰ª•‰øÉËøõ‰πâÂä°ÊïôËÇ≤ÁöÑÊôÆÂèäÂíåÊ∂àÈô§Âú∞Âå∫Èó¥ÁöÑÊïôËÇ≤Ë¥´Âõ∞„ÄÇ&lt;/p&gt; 
&lt;p&gt;ËøòÊúâ‰∏Ä‰∏™ÊúÄÈáçË¶ÅÁöÑÂéüÂõ†ÊòØÔºåÂ∏åÊúõÊµ∑Â§ñÂçé‰∫∫ËÉΩÂ§üËÆ©Ëá™Â∑±ÁöÑÂ≠©Â≠êÁªßÁª≠‰∫ÜËß£ÂõΩÂÜÖÊïôËÇ≤„ÄÇ&lt;/p&gt; 
&lt;h2&gt;Â≠¶‰π†Êï∞Â≠¶&lt;/h2&gt; 
&lt;p&gt;Â∏åÊúõÊú™Êù•Âá∫Áé∞Êõ¥Â§ö‰∏çÊòØ‰∏∫‰∫ÜËÄÉÂ≠¶ËÄåËØª‰π¶ÁöÑ‰∫∫„ÄÇ&lt;/p&gt; 
&lt;h3&gt;Â∞èÂ≠¶Êï∞Â≠¶&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;‰∏ÄÂπ¥Á∫ß‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;‰∏ÄÂπ¥Á∫ß‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;‰∫åÂπ¥Á∫ß‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;‰∫åÂπ¥Á∫ß‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;‰∏âÂπ¥Á∫ß‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;‰∏âÂπ¥Á∫ß‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E5%9B%9B%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;ÂõõÂπ¥Á∫ß‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%9B%9B%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;ÂõõÂπ¥Á∫ß‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%BA%94%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;‰∫îÂπ¥Á∫ß‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%BA%94%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;‰∫îÂπ¥Á∫ß‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E5%85%AD%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;ÂÖ≠Âπ¥Á∫ß‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AD%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;ÂÖ≠Âπ¥Á∫ß‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Âàù‰∏≠Êï∞Â≠¶&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B8%83%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%83%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;Âàù‰∏Ä‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B8%83%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%83%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;Âàù‰∏Ä‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E5%85%AB%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AB%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;Âàù‰∫å‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E5%85%AB%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AB%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;Âàù‰∫å‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B9%9D%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B9%9D%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;Âàù‰∏â‰∏äÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B9%9D%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B9%9D%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;Âàù‰∏â‰∏ãÂÜå&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;È´ò‰∏≠Êï∞Â≠¶&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E9%AB%98%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88%EF%BC%88A%E7%89%88%EF%BC%89%EF%BC%88%E4%B8%BB%E7%BC%96%EF%BC%9A%E7%AB%A0%E5%BB%BA%E8%B7%83%26%E6%9D%8E%E5%A2%9E%E6%B2%AA%EF%BC%89-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE"&gt;ÁõÆÂΩï&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Â§ßÂ≠¶Êï∞Â≠¶&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E5%90%8C%E6%B5%8E%E5%A4%A7%E5%AD%A6%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%AC%AC%E4%B8%83%E7%89%88"&gt;È´òÁ≠âÊï∞Â≠¶&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0"&gt;Á∫øÊÄß‰ª£Êï∞&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6"&gt;Á¶ªÊï£Êï∞Â≠¶&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E6%A6%82%E7%8E%87%E8%AE%BA"&gt;Ê¶ÇÁéáËÆ∫&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="http://www.dxsx.net/index.php"&gt;Êõ¥Â§öÊï∞Â≠¶ËµÑÊñô-(Â§ßÂ≠¶Êï∞Â≠¶ÁΩë)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;ÈóÆÈ¢òÔºöÂ¶Ç‰ΩïÂêàÂπ∂Ë¢´ÊãÜÂàÜÁöÑÊñá‰ª∂Ôºü&lt;/h2&gt; 
&lt;p&gt;Áî±‰∫é GitHub ÂØπÂçï‰∏™Êñá‰ª∂ÁöÑ‰∏ä‰º†ÊúâÊúÄÂ§ßÈôêÂà∂ÔºåË∂ÖËøá 100MB ÁöÑÊñá‰ª∂‰ºöË¢´ÊãíÁªù‰∏ä‰º†ÔºåË∂ÖËøá 50MB ÁöÑÊñá‰ª∂‰∏ä‰º†Êó∂‰ºöÊî∂Âà∞Ë≠¶Âëä„ÄÇÂõ†Ê≠§ÔºåÊñá‰ª∂Â§ßÂ∞èË∂ÖËøá 50MB ÁöÑÊñá‰ª∂‰ºöË¢´ÊãÜÂàÜÊàêÊØè‰∏™ 35MB ÁöÑÂ§ö‰∏™Êñá‰ª∂„ÄÇ&lt;/p&gt; 
&lt;h3&gt;Á§∫‰æã&lt;/h3&gt; 
&lt;p&gt;Êñá‰ª∂Ë¢´ÊãÜÂàÜÁöÑÁ§∫‰æãÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰πâÂä°ÊïôËÇ≤ÊïôÁßë‰π¶ ¬∑ Êï∞Â≠¶‰∏ÄÂπ¥Á∫ß‰∏äÂÜå.pdf.1&lt;/li&gt; 
 &lt;li&gt;‰πâÂä°ÊïôËÇ≤ÊïôÁßë‰π¶ ¬∑ Êï∞Â≠¶‰∏ÄÂπ¥Á∫ß‰∏äÂÜå.pdf.2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ëß£ÂÜ≥ÂäûÊ≥ï&lt;/h3&gt; 
&lt;p&gt;Ë¶ÅÂêàÂπ∂Ëøô‰∫õË¢´ÊãÜÂàÜÁöÑÊñá‰ª∂ÔºåÊÇ®Âè™ÈúÄÊâßË°å‰ª•‰∏ãÊ≠•È™§(ÂÖ∂‰ªñÊìç‰ΩúÁ≥ªÁªüÂêåÁêÜ)Ôºö&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Â∞ÜÂêàÂπ∂Á®ãÂ∫è &lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt; ‰∏ãËΩΩÂà∞ÂåÖÂê´ PDF Êñá‰ª∂ÁöÑÊñá‰ª∂Â§π‰∏≠„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Á°Æ‰øù &lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt; ÂíåË¢´ÊãÜÂàÜÁöÑ PDF Êñá‰ª∂Âú®Âêå‰∏ÄÁõÆÂΩï‰∏ã„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÂèåÂáª &lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt; Á®ãÂ∫èÂç≥ÂèØËá™Âä®ÂÆåÊàêÊñá‰ª∂ÂêàÂπ∂„ÄÇ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;‰∏ãËΩΩÊñπÂºè&lt;/h3&gt; 
&lt;p&gt;ÊÇ®ÂèØ‰ª•ÈÄöËøá‰ª•‰∏ãÈìæÊé•Ôºå‰∏ãËΩΩÊñá‰ª∂ÂêàÂπ∂Á®ãÂ∫èÔºö&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook-tools/releases"&gt;‰∏ãËΩΩÊñá‰ª∂ÂêàÂπ∂Á®ãÂ∫è&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Êñá‰ª∂ÂíåÁ®ãÂ∫èÁ§∫‰æã&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;mergePDFs-windows-amd64.exe&lt;/li&gt; 
 &lt;li&gt;‰πâÂä°ÊïôËÇ≤ÊïôÁßë‰π¶ ¬∑ Êï∞Â≠¶‰∏ÄÂπ¥Á∫ß‰∏äÂÜå.pdf.1&lt;/li&gt; 
 &lt;li&gt;‰πâÂä°ÊïôËÇ≤ÊïôÁßë‰π¶ ¬∑ Êï∞Â≠¶‰∏ÄÂπ¥Á∫ß‰∏äÂÜå.pdf.2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÈáçÊñ∞‰∏ãËΩΩ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Â¶ÇÊûúÊÇ®‰Ωç‰∫éÂÜÖÂú∞ÔºåÂπ∂‰∏îÁΩëÁªú‰∏çÈîôÔºåÊÉ≥ÈáçÊñ∞‰∏ãËΩΩÔºåÊÇ®ÂèØ‰ª•‰ΩøÁî® &lt;a href="https://github.com/happycola233/tchMaterial-parser"&gt;tchMaterial-parser&lt;/a&gt; È°πÁõÆÔºàÈºìÂä±ÂºÄÊ∫êÔºâÔºåËøõË°åÈáçÊñ∞‰∏ãËΩΩ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Â¶ÇÊûúÊÇ®‰Ωç‰∫éÂõΩÂ§ñÔºåÂíåÂÜÖÂú∞ÁΩëÁªúÈÄö‰ø°ÈÄüÂ∫¶ËæÉÊÖ¢ÔºåÂª∫ËÆÆ‰ΩøÁî®Êú¨Â≠òÂÇ®Â∫ìËøõË°åÁ≠æÂá∫„ÄÇ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ÊïôÊùêÊçêÁåÆ&lt;/h2&gt; 
&lt;p&gt;Â¶ÇÊûúËøô‰∏™È°πÁõÆÂ∏ÆÂä©ÊÇ®ÂÖçË¥πËé∑ÂèñÊïôËÇ≤ËµÑÊ∫êÔºåËØ∑ËÄÉËôëÊîØÊåÅÊàë‰ª¨Êé®ÂπøÂºÄÊîæÊïôËÇ≤ÁöÑÂä™ÂäõÔºÅÊÇ®ÁöÑÊçêÁåÆÂ∞ÜÂ∏ÆÂä©Êàë‰ª¨Áª¥Êä§ÂíåÊâ©Â±ïËøô‰∏™ËµÑÊ∫êÂ∫ì„ÄÇ&lt;/p&gt; 
&lt;p&gt;Âä†ÂÖ•Êàë‰ª¨ÁöÑ Telegram Á§æÂå∫ÔºåËé∑ÂèñÊúÄÊñ∞Âä®ÊÄÅÂπ∂ÂàÜ‰∫´ÊÇ®ÁöÑÊÉ≥Ê≥ïÔºö&lt;a href="https://t.me/+1V6WjEq8WEM4MDM1"&gt;https://t.me/+1V6WjEq8WEM4MDM1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;ÊîØÊåÅÊàë&lt;/h2&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®ËßâÂæóËøô‰∏™È°πÁõÆÂØπÊÇ®ÊúâÂ∏ÆÂä©ÔºåÊÇ®ÂèØ‰ª•Êâ´Êèè‰ª•‰∏ã‰∫åÁª¥Á†ÅËøõË°åÊçêËµ†Ôºö&lt;/p&gt; 
&lt;p align="left"&gt; &lt;img src="https://raw.githubusercontent.com/TapXWorld/ChinaTextbook/master/.cache/support-alipay.png" width="20%" /&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ArjanCodes/examples</title>
      <link>https://github.com/ArjanCodes/examples</link>
      <description>&lt;p&gt;All the code examples I use in my videos&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.arjancodes.com"&gt;&lt;img src="https://www.arjancodes.com/_astro/logo.DSZjG3lW.png" alt="Company" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCVhQ2NnY5Rskt6UjCUkJ_DA" alt="YouTube Channel Subscribers" /&gt; &lt;img src="https://img.shields.io/twitter/follow/arjancodes" alt="X (formerly Twitter) Follow" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ArjanCodes/examples/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- omit in toc --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ArjanCodes/examples/main/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ArjanCodes/examples/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ArjanCodes/examples/main/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ArjanCodes/examples/main/#links"&gt;Links&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This repository contains all the code examples that I use in my YouTube videos. You'll find the link to the code in the description of each of the videos on YouTube. If you're a regular watcher, you can simply clone the repository and check out the code for the latest video. The main branch will always contain the latest code.&lt;/p&gt; 
&lt;p&gt;If you have any suggestion to improve this repository, feel free to open an issue or a pull request.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To clone this repository, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/arjancodes/examples.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Navigate to the cloned repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd examples
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ensure you have the necessary dependencies installed for each example. Each example should have atleast a &lt;code&gt;pyproject.toml&lt;/code&gt; in which you can use poetry to create a virtual enviroment for that specific example.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Arjan Egges, Project Maintainer: &lt;a href="https://github.com/egges"&gt;@egges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Andreas Bergman, Developer &amp;amp; Educational Specialist: &lt;a href="https://github.com/Anber96"&gt;@ABDreos&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/arjancodes"&gt;&lt;img src="https://go-skill-icons.vercel.app/api/icons?i=twitter" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/c/arjancodes"&gt;&lt;img src="https://go-skill-icons.vercel.app/api/icons?i=youtube" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/arjancodes"&gt;&lt;img src="https://go-skill-icons.vercel.app/api/icons?i=linkedin" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-agents-python</title>
      <link>https://github.com/openai/openai-agents-python</link>
      <description>&lt;p&gt;A lightweight, powerful framework for multi-agent workflows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Agents SDK&lt;/h1&gt; 
&lt;p&gt;The OpenAI Agents SDK is a lightweight yet powerful framework for building multi-agent workflows. It is provider-agnostic, supporting the OpenAI Responses and Chat Completions APIs, as well as 100+ other LLMs.&lt;/p&gt; 
&lt;img src="https://cdn.openai.com/API/docs/images/orchestration.png" alt="Image of the Agents Tracing UI" style="max-height: 803px;" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Looking for the JavaScript/TypeScript version? Check out &lt;a href="https://github.com/openai/openai-agents-js"&gt;Agents SDK JS/TS&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Core concepts:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/agents"&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/a&gt;: LLMs configured with instructions, tools, guardrails, and handoffs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/handoffs/"&gt;&lt;strong&gt;Handoffs&lt;/strong&gt;&lt;/a&gt;: A specialized tool call used by the Agents SDK for transferring control between agents&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/guardrails/"&gt;&lt;strong&gt;Guardrails&lt;/strong&gt;&lt;/a&gt;: Configurable safety checks for input and output validation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/#sessions"&gt;&lt;strong&gt;Sessions&lt;/strong&gt;&lt;/a&gt;: Automatic conversation history management across agent runs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/tracing/"&gt;&lt;strong&gt;Tracing&lt;/strong&gt;&lt;/a&gt;: Built-in tracking of agent runs, allowing you to view, debug and optimize your workflows&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Explore the &lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/examples"&gt;examples&lt;/a&gt; directory to see the SDK in action, and read our &lt;a href="https://openai.github.io/openai-agents-python/"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;To get started, set up your Python environment (Python 3.9 or newer required), and then install OpenAI Agents SDK package.&lt;/p&gt; 
&lt;h3&gt;venv&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m venv .venv
source .venv/bin/activate  # On Windows: .venv\Scripts\activate
pip install openai-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For voice support, install with the optional &lt;code&gt;voice&lt;/code&gt; group: &lt;code&gt;pip install 'openai-agents[voice]'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For Redis session support, install with the optional &lt;code&gt;redis&lt;/code&gt; group: &lt;code&gt;pip install 'openai-agents[redis]'&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;uv&lt;/h3&gt; 
&lt;p&gt;If you're familiar with &lt;a href="https://docs.astral.sh/uv/"&gt;uv&lt;/a&gt;, using the tool would be even similar:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv init
uv add openai-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For voice support, install with the optional &lt;code&gt;voice&lt;/code&gt; group: &lt;code&gt;uv add 'openai-agents[voice]'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For Redis session support, install with the optional &lt;code&gt;redis&lt;/code&gt; group: &lt;code&gt;uv add 'openai-agents[redis]'&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Hello world example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner

agent = Agent(name="Assistant", instructions="You are a helpful assistant")

result = Runner.run_sync(agent, "Write a haiku about recursion in programming.")
print(result.final_output)

# Code within the code,
# Functions calling themselves,
# Infinite loop's dance.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(&lt;em&gt;If running this, ensure you set the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;(&lt;em&gt;For Jupyter notebook users, see &lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/examples/basic/hello_world_jupyter.ipynb"&gt;hello_world_jupyter.ipynb&lt;/a&gt;&lt;/em&gt;)&lt;/p&gt; 
&lt;h2&gt;Handoffs example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner
import asyncio

spanish_agent = Agent(
    name="Spanish agent",
    instructions="You only speak Spanish.",
)

english_agent = Agent(
    name="English agent",
    instructions="You only speak English",
)

triage_agent = Agent(
    name="Triage agent",
    instructions="Handoff to the appropriate agent based on the language of the request.",
    handoffs=[spanish_agent, english_agent],
)


async def main():
    result = await Runner.run(triage_agent, input="Hola, ¬øc√≥mo est√°s?")
    print(result.final_output)
    # ¬°Hola! Estoy bien, gracias por preguntar. ¬øY t√∫, c√≥mo est√°s?


if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Functions example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import asyncio

from agents import Agent, Runner, function_tool


@function_tool
def get_weather(city: str) -&amp;gt; str:
    return f"The weather in {city} is sunny."


agent = Agent(
    name="Hello world",
    instructions="You are a helpful agent.",
    tools=[get_weather],
)


async def main():
    result = await Runner.run(agent, input="What's the weather in Tokyo?")
    print(result.final_output)
    # The weather in Tokyo is sunny.


if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;The agent loop&lt;/h2&gt; 
&lt;p&gt;When you call &lt;code&gt;Runner.run()&lt;/code&gt;, we run a loop until we get a final output.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We call the LLM, using the model and settings on the agent, and the message history.&lt;/li&gt; 
 &lt;li&gt;The LLM returns a response, which may include tool calls.&lt;/li&gt; 
 &lt;li&gt;If the response has a final output (see below for more on this), we return it and end the loop.&lt;/li&gt; 
 &lt;li&gt;If the response has a handoff, we set the agent to the new agent and go back to step 1.&lt;/li&gt; 
 &lt;li&gt;We process the tool calls (if any) and append the tool responses messages. Then we go to step 1.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;There is a &lt;code&gt;max_turns&lt;/code&gt; parameter that you can use to limit the number of times the loop executes.&lt;/p&gt; 
&lt;h3&gt;Final output&lt;/h3&gt; 
&lt;p&gt;Final output is the last thing the agent produces in the loop.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you set an &lt;code&gt;output_type&lt;/code&gt; on the agent, the final output is when the LLM returns something of that type. We use &lt;a href="https://platform.openai.com/docs/guides/structured-outputs"&gt;structured outputs&lt;/a&gt; for this.&lt;/li&gt; 
 &lt;li&gt;If there's no &lt;code&gt;output_type&lt;/code&gt; (i.e. plain text responses), then the first LLM response without any tool calls or handoffs is considered as the final output.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;As a result, the mental model for the agent loop is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If the current agent has an &lt;code&gt;output_type&lt;/code&gt;, the loop runs until the agent produces structured output matching that type.&lt;/li&gt; 
 &lt;li&gt;If the current agent does not have an &lt;code&gt;output_type&lt;/code&gt;, the loop runs until the current agent produces a message without any tool calls/handoffs.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Common agent patterns&lt;/h2&gt; 
&lt;p&gt;The Agents SDK is designed to be highly flexible, allowing you to model a wide range of LLM workflows including deterministic flows, iterative loops, and more. See examples in &lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/examples/agent_patterns"&gt;&lt;code&gt;examples/agent_patterns&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tracing&lt;/h2&gt; 
&lt;p&gt;The Agents SDK automatically traces your agent runs, making it easy to track and debug the behavior of your agents. Tracing is extensible by design, supporting custom spans and a wide variety of external destinations, including &lt;a href="https://logfire.pydantic.dev/docs/integrations/llms/openai/#openai-agents"&gt;Logfire&lt;/a&gt;, &lt;a href="https://docs.agentops.ai/v1/integrations/agentssdk"&gt;AgentOps&lt;/a&gt;, &lt;a href="https://braintrust.dev/docs/guides/traces/integrations#openai-agents-sdk"&gt;Braintrust&lt;/a&gt;, &lt;a href="https://docs.scorecard.io/docs/documentation/features/tracing#openai-agents-sdk-integration"&gt;Scorecard&lt;/a&gt;, and &lt;a href="https://docs.keywordsai.co/integration/development-frameworks/openai-agent"&gt;Keywords AI&lt;/a&gt;. For more details about how to customize or disable tracing, see &lt;a href="http://openai.github.io/openai-agents-python/tracing"&gt;Tracing&lt;/a&gt;, which also includes a larger list of &lt;a href="http://openai.github.io/openai-agents-python/tracing/#external-tracing-processors-list"&gt;external tracing processors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Long running agents &amp;amp; human-in-the-loop&lt;/h2&gt; 
&lt;p&gt;You can use the Agents SDK &lt;a href="https://temporal.io/"&gt;Temporal&lt;/a&gt; integration to run durable, long-running workflows, including human-in-the-loop tasks. View a demo of Temporal and the Agents SDK working in action to complete long-running tasks &lt;a href="https://www.youtube.com/watch?v=fFBZqzT4DD8"&gt;in this video&lt;/a&gt;, and &lt;a href="https://github.com/temporalio/sdk-python/tree/main/temporalio/contrib/openai_agents"&gt;view docs here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sessions&lt;/h2&gt; 
&lt;p&gt;The Agents SDK provides built-in session memory to automatically maintain conversation history across multiple agent runs, eliminating the need to manually handle &lt;code&gt;.to_input_list()&lt;/code&gt; between turns.&lt;/p&gt; 
&lt;h3&gt;Quick start&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner, SQLiteSession

# Create agent
agent = Agent(
    name="Assistant",
    instructions="Reply very concisely.",
)

# Create a session instance
session = SQLiteSession("conversation_123")

# First turn
result = await Runner.run(
    agent,
    "What city is the Golden Gate Bridge in?",
    session=session
)
print(result.final_output)  # "San Francisco"

# Second turn - agent automatically remembers previous context
result = await Runner.run(
    agent,
    "What state is it in?",
    session=session
)
print(result.final_output)  # "California"

# Also works with synchronous runner
result = Runner.run_sync(
    agent,
    "What's the population?",
    session=session
)
print(result.final_output)  # "Approximately 39 million"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Session options&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;No memory&lt;/strong&gt; (default): No session memory when session parameter is omitted&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session: Session = DatabaseSession(...)&lt;/code&gt;&lt;/strong&gt;: Use a Session instance to manage conversation history&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner, SQLiteSession

# SQLite - file-based or in-memory database
session = SQLiteSession("user_123", "conversations.db")

# Redis - for scalable, distributed deployments
# from agents.extensions.memory import RedisSession
# session = RedisSession.from_url("user_123", url="redis://localhost:6379/0")

agent = Agent(name="Assistant")

# Different session IDs maintain separate conversation histories
result1 = await Runner.run(
    agent,
    "Hello",
    session=session
)
result2 = await Runner.run(
    agent,
    "Hello",
    session=SQLiteSession("user_456", "conversations.db")
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom session implementations&lt;/h3&gt; 
&lt;p&gt;You can implement your own session memory by creating a class that follows the &lt;code&gt;Session&lt;/code&gt; protocol:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents.memory import Session
from typing import List

class MyCustomSession:
    """Custom session implementation following the Session protocol."""

    def __init__(self, session_id: str):
        self.session_id = session_id
        # Your initialization here

    async def get_items(self, limit: int | None = None) -&amp;gt; List[dict]:
        # Retrieve conversation history for the session
        pass

    async def add_items(self, items: List[dict]) -&amp;gt; None:
        # Store new items for the session
        pass

    async def pop_item(self) -&amp;gt; dict | None:
        # Remove and return the most recent item from the session
        pass

    async def clear_session(self) -&amp;gt; None:
        # Clear all items for the session
        pass

# Use your custom session
agent = Agent(name="Assistant")
result = await Runner.run(
    agent,
    "Hello",
    session=MyCustomSession("my_session")
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development (only needed if you need to edit the SDK/examples)&lt;/h2&gt; 
&lt;ol start="0"&gt; 
 &lt;li&gt;Ensure you have &lt;a href="https://docs.astral.sh/uv/"&gt;&lt;code&gt;uv&lt;/code&gt;&lt;/a&gt; installed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;(After making changes) lint/test&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;make check # run tests linter and typechecker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or to run them individually:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make tests  # run tests
make mypy   # run typechecker
make lint   # run linter
make format-check # run style checker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We'd like to acknowledge the excellent work of the open-source community, especially:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.pydantic.dev/latest/"&gt;Pydantic&lt;/a&gt; (data validation) and &lt;a href="https://ai.pydantic.dev/"&gt;PydanticAI&lt;/a&gt; (advanced agent framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt; (unified interface for 100+ LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/squidfunk/mkdocs-material"&gt;MkDocs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mkdocstrings/griffe"&gt;Griffe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/astral-sh/uv"&gt;uv&lt;/a&gt; and &lt;a href="https://github.com/astral-sh/ruff"&gt;ruff&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We're committed to continuing to build the Agents SDK as an open source framework so others in the community can expand on our approach.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anthropics/prompt-eng-interactive-tutorial</title>
      <link>https://github.com/anthropics/prompt-eng-interactive-tutorial</link>
      <description>&lt;p&gt;Anthropic's Interactive Prompt Engineering Tutorial&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Anthropic's Prompt Engineering Interactive Tutorial&lt;/h1&gt; 
&lt;h2&gt;Course introduction and goals&lt;/h2&gt; 
&lt;p&gt;This course is intended to provide you with a comprehensive step-by-step understanding of how to engineer optimal prompts within Claude.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;After completing this course, you will be able to&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Master the basic structure of a good prompt&lt;/li&gt; 
 &lt;li&gt;Recognize common failure modes and learn the '80/20' techniques to address them&lt;/li&gt; 
 &lt;li&gt;Understand Claude's strengths and weaknesses&lt;/li&gt; 
 &lt;li&gt;Build strong prompts from scratch for common use cases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Course structure and content&lt;/h2&gt; 
&lt;p&gt;This course is structured to allow you many chances to practice writing and troubleshooting prompts yourself. The course is broken up into &lt;strong&gt;9 chapters with accompanying exercises&lt;/strong&gt;, as well as an appendix of even more advanced methods. It is intended for you to &lt;strong&gt;work through the course in chapter order&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Each lesson has an "Example Playground" area&lt;/strong&gt; at the bottom where you are free to experiment with the examples in the lesson and see for yourself how changing prompts can change Claude's responses. There is also an &lt;a href="https://docs.google.com/spreadsheets/d/1jIxjzUWG-6xBVIa2ay6yDpLyeuOh_hR_ZB75a47KX_E/edit?usp=sharing"&gt;answer key&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Note: This tutorial uses our smallest, fastest, and cheapest model, Claude 3 Haiku. Anthropic has &lt;a href="https://docs.anthropic.com/claude/docs/models-overview"&gt;two other models&lt;/a&gt;, Claude 3 Sonnet and Claude 3 Opus, which are more intelligent than Haiku, with Opus being the most intelligent.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;This tutorial also exists on &lt;a href="https://docs.google.com/spreadsheets/d/19jzLgRruG9kjUQNKtCg1ZjdD6l6weA6qRXG5zLIAhC8/edit?usp=sharing"&gt;Google Sheets using Anthropic's Claude for Sheets extension&lt;/a&gt;. We recommend using that version as it is more user friendly.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;When you are ready to begin, go to &lt;code&gt;01_Basic Prompt Structure&lt;/code&gt; to proceed.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;p&gt;Each chapter consists of a lesson and a set of exercises.&lt;/p&gt; 
&lt;h3&gt;Beginner&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 1:&lt;/strong&gt; Basic Prompt Structure&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 2:&lt;/strong&gt; Being Clear and Direct&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 3:&lt;/strong&gt; Assigning Roles&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Intermediate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 4:&lt;/strong&gt; Separating Data from Instructions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 5:&lt;/strong&gt; Formatting Output &amp;amp; Speaking for Claude&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 6:&lt;/strong&gt; Precognition (Thinking Step by Step)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 7:&lt;/strong&gt; Using Examples&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 8:&lt;/strong&gt; Avoiding Hallucinations&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chapter 9:&lt;/strong&gt; Building Complex Prompts (Industry Use Cases)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Complex Prompts from Scratch - Chatbot&lt;/li&gt; 
   &lt;li&gt;Complex Prompts for Legal Services&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Exercise:&lt;/strong&gt; Complex Prompts for Financial Services&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Exercise:&lt;/strong&gt; Complex Prompts for Coding&lt;/li&gt; 
   &lt;li&gt;Congratulations &amp;amp; Next Steps&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Appendix:&lt;/strong&gt; Beyond Standard Prompting&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Chaining Prompts&lt;/li&gt; 
   &lt;li&gt;Tool Use&lt;/li&gt; 
   &lt;li&gt;Search &amp;amp; Retrieval&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>TibixDev/winboat</title>
      <link>https://github.com/TibixDev/winboat</link>
      <description>&lt;p&gt;Run Windows apps on üêß Linux with ‚ú® seamless integration&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/winboat_logo.svg?sanitize=true" alt="WinBoat Logo" width="150" /&gt; &lt;/td&gt; 
    &lt;td&gt; &lt;h1 style="color: #7C86FF; margin: 0; font-size: 32px;"&gt;WinBoat&lt;/h1&gt; &lt;p style="color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;"&gt;Windows for Penguins.&lt;br /&gt; Run Windows apps on üêß Linux with ‚ú® seamless integration&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_dash.png" alt="WinBoat Dashboard" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_apps.png" alt="WinBoat Apps" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_native.png" alt="Native Windows" width="45%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;‚ö†Ô∏è Work in Progress ‚ö†Ô∏è&lt;/h2&gt; 
&lt;p&gt;WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üé® Elegant Interface&lt;/strong&gt;: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üì¶ Automated Installs&lt;/strong&gt;: Simple installation process through our interface - pick your preferences &amp;amp; specs and let us handle the rest&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ Run Any App&lt;/strong&gt;: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üñ•Ô∏è Full Windows Desktop&lt;/strong&gt;: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÅ Filesystem Integration&lt;/strong&gt;: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ú® And many more&lt;/strong&gt;: Smartcard passthrough, resource monitoring, and more features being added regularly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Does It Work?&lt;/h2&gt; 
&lt;p&gt;WinBoat is an Electron app which allows you to run Windows apps on Linux using a containerized approach. Windows runs as a VM inside a Docker container, we communicate with it using the &lt;a href="https://github.com/TibixDev/winboat/tree/main/guest_server"&gt;WinBoat Guest Server&lt;/a&gt; to retrieve data we need from Windows. For compositing applications as native OS-level windows, we use FreeRDP together with Windows's RemoteApp protocol.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before running WinBoat, ensure your system meets the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: At least 4 GB of RAM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: At least 2 CPU threads&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: At least 32 GB free space on the drive your selected install folder corresponds to&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;: KVM enabled in BIOS/UEFI 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://duckduckgo.com/?t=h_&amp;amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;amp;ia=web"&gt;How to enable virtualization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Required for containerization 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;‚ö†Ô∏è NOTE:&lt;/strong&gt; Docker Desktop is &lt;strong&gt;not&lt;/strong&gt; supported, you will run into issues if you use it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose v2&lt;/strong&gt;: Required for compatibility with docker-compose.yml files 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/#plugin-linux-only"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker User Group&lt;/strong&gt;: Add your user to the &lt;code&gt;docker&lt;/code&gt; group 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"&gt;Setup Instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRDP&lt;/strong&gt;: Required for remote desktop connection (Please make sure you have &lt;strong&gt;Version 3.x.x&lt;/strong&gt; with sound support included) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;[OPTIONAL] &lt;strong&gt;Kernel Modules&lt;/strong&gt;: The &lt;code&gt;iptables&lt;/code&gt; / &lt;code&gt;nftables&lt;/code&gt; and &lt;code&gt;iptable_nat&lt;/code&gt; kernel modules can be loaded for network autodiscovery and better shared filesystem performance, but this is not obligatory in newer versions of WinBoat 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://rentry.org/rmfq2e5e"&gt;Module loading instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloading&lt;/h2&gt; 
&lt;p&gt;You can download the latest Linux builds under the &lt;a href="https://github.com/TibixDev/winboat/releases"&gt;Releases&lt;/a&gt; tab. We currently offer four variants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AppImage:&lt;/strong&gt; A popular &amp;amp; portable app format which should run fine on most distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unpacked:&lt;/strong&gt; The raw unpacked files, simply run the executable (&lt;code&gt;linux-unpacked/winboat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.deb:&lt;/strong&gt; The intended format for Debian based distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.rpm:&lt;/strong&gt; The intended format for Fedora based distributions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues About Container Runtimes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Podman is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Docker Desktop is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Distros that emulate Docker through a Podman socket are &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Any rootless containerization solution is currently &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building WinBoat&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For building you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the app and the guest server using &lt;code&gt;npm run build:linux-gs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;You can now find the built app under &lt;code&gt;dist&lt;/code&gt; with an AppImage and an Unpacked variant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running WinBoat in development mode&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you meet the &lt;a href="https://raw.githubusercontent.com/TibixDev/winboat/main/#prerequisites"&gt;prerequisites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additionally, for development you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the guest server (&lt;code&gt;npm run build-guest-server&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Run the app (&lt;code&gt;npm run dev&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Whether it's bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let's keep things focused on making great software! üöÄ&lt;/p&gt; 
&lt;p&gt;Feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and issues&lt;/li&gt; 
 &lt;li&gt;Submit feature requests&lt;/li&gt; 
 &lt;li&gt;Contribute code improvements&lt;/li&gt; 
 &lt;li&gt;Help with documentation&lt;/li&gt; 
 &lt;li&gt;Share feedback and suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our issues page to get started, or feel free to open a new issue if you've found something that needs attention.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WinBoat is licensed under the &lt;a href="https://github.com/TibixDev/winboat/raw/main/LICENSE"&gt;MIT&lt;/a&gt; license&lt;/p&gt; 
&lt;h2&gt;Inspiration / Alternatives&lt;/h2&gt; 
&lt;p&gt;These past few years some cool projects have surfaced with similar concepts, some of which we've also taken inspirations from.&lt;br /&gt; They're awesome and you should check them out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/winapps-org/winapps"&gt;WinApps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casualsnek/cassowary"&gt;Cassowary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dockur/windows"&gt;dockur/windows&lt;/a&gt; (üåü Also used in WinBoat)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Socials &amp;amp; Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.winboat.app/"&gt;&lt;img src="https://img.shields.io/badge/Website-winboat.app-blue?style=flat&amp;amp;logo=googlechrome&amp;amp;logoColor=white" alt="Website" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/winboat_app"&gt;&lt;img src="https://img.shields.io/badge/Twitter-@winboat__app-1DA1F2?style=flat&amp;amp;logo=x&amp;amp;logoColor=white" alt="Twitter" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fosstodon.org/@winboat"&gt;&lt;img src="https://img.shields.io/badge/Mastodon-@winboat-6364FF?style=flat&amp;amp;logo=mastodon&amp;amp;logoColor=white" alt="Mastodon" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://bsky.app/profile/winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Bluesky-winboat.app-00A8E8?style=flat&amp;amp;logo=bluesky&amp;amp;logoColor=white" alt="Bluesky" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://discord.gg/MEwmpWm4tN"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join_Community-5865F2?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="mailto:staff@winboat.app"&gt;&lt;img src="https://img.shields.io/badge/Email-staff@winboat.app-D14836?style=flat&amp;amp;logo=gmail&amp;amp;logoColor=white" alt="Email" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://deepwiki.com/TibixDev/winboat"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#tibixdev/winboat&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=tibixdev/winboat&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>MODSetter/SurfSense</title>
      <link>https://github.com/MODSetter/SurfSense</link>
      <description>&lt;p&gt;Open Source Alternative to NotebookLM / Perplexity, connected to external sources such as Search Engines, Slack, Linear, Jira, ClickUp, Confluence, Notion, YouTube, GitHub, Discord and more. Join our discord: https://discord.gg/ejRNvftDp9&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e236b764-0ddc-42ff-a1f1-8fbb3d2e0e65" alt="new_header" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://discord.gg/ejRNvftDp9"&gt; &lt;img src="https://img.shields.io/discord/1359368468260192417" alt="Discord" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;SurfSense&lt;/h1&gt; 
&lt;p&gt;While tools like NotebookLM and Perplexity are impressive and highly effective for conducting research on any topic/query, SurfSense elevates this capability by integrating with your personal knowledge base. It is a highly customizable AI research agent, connected to external sources such as Search Engines (Tavily, LinkUp), Slack, Linear, Jira, ClickUp, Confluence, Gmail, Notion, YouTube, GitHub, Discord, Airtable, Google Calendar, Luma and more to come.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/13606" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13606" alt="MODSetter%2FSurfSense | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Video&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/d9221908-e0de-4b2f-ac3a-691cf4b202da"&gt;https://github.com/user-attachments/assets/d9221908-e0de-4b2f-ac3a-691cf4b202da&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Podcast Sample&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/a0a16566-6967-4374-ac51-9b3e07fbecd7"&gt;https://github.com/user-attachments/assets/a0a16566-6967-4374-ac51-9b3e07fbecd7&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;h3&gt;üí° &lt;strong&gt;Idea&lt;/strong&gt;:&lt;/h3&gt; 
&lt;p&gt;Have your own highly customizable private NotebookLM and Perplexity integrated with external sources.&lt;/p&gt; 
&lt;h3&gt;üìÅ &lt;strong&gt;Multiple File Format Uploading Support&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Save content from your own personal files &lt;em&gt;(Documents, images, videos and supports &lt;strong&gt;50+ file extensions&lt;/strong&gt;)&lt;/em&gt; to your own personal knowledge base .&lt;/p&gt; 
&lt;h3&gt;üîç &lt;strong&gt;Powerful Search&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Quickly research or find anything in your saved content .&lt;/p&gt; 
&lt;h3&gt;üí¨ &lt;strong&gt;Chat with your Saved Content&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Interact in Natural Language and get cited answers.&lt;/p&gt; 
&lt;h3&gt;üìÑ &lt;strong&gt;Cited Answers&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Get Cited answers just like Perplexity.&lt;/p&gt; 
&lt;h3&gt;üîî &lt;strong&gt;Privacy &amp;amp; Local LLM Support&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Works Flawlessly with Ollama local LLMs.&lt;/p&gt; 
&lt;h3&gt;üè† &lt;strong&gt;Self Hostable&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Open source and easy to deploy locally.&lt;/p&gt; 
&lt;h3&gt;üéôÔ∏è Podcasts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Blazingly fast podcast generation agent. (Creates a 3-minute podcast in under 20 seconds.)&lt;/li&gt; 
 &lt;li&gt;Convert your chat conversations into engaging audio content&lt;/li&gt; 
 &lt;li&gt;Support for local TTS providers (Kokoro TTS)&lt;/li&gt; 
 &lt;li&gt;Support for multiple TTS providers (OpenAI, Azure, Google Vertex AI)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìä &lt;strong&gt;Advanced RAG Techniques&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports 100+ LLM's&lt;/li&gt; 
 &lt;li&gt;Supports 6000+ Embedding Models.&lt;/li&gt; 
 &lt;li&gt;Supports all major Rerankers (Pinecode, Cohere, Flashrank etc)&lt;/li&gt; 
 &lt;li&gt;Uses Hierarchical Indices (2 tiered RAG setup).&lt;/li&gt; 
 &lt;li&gt;Utilizes Hybrid Search (Semantic + Full Text Search combined with Reciprocal Rank Fusion).&lt;/li&gt; 
 &lt;li&gt;RAG as a Service API Backend.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‚ÑπÔ∏è &lt;strong&gt;External Sources&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search Engines (Tavily, LinkUp)&lt;/li&gt; 
 &lt;li&gt;SearxNG (self-hosted instances)&lt;/li&gt; 
 &lt;li&gt;Slack&lt;/li&gt; 
 &lt;li&gt;Linear&lt;/li&gt; 
 &lt;li&gt;Jira&lt;/li&gt; 
 &lt;li&gt;ClickUp&lt;/li&gt; 
 &lt;li&gt;Confluence&lt;/li&gt; 
 &lt;li&gt;Notion&lt;/li&gt; 
 &lt;li&gt;Gmail&lt;/li&gt; 
 &lt;li&gt;Youtube Videos&lt;/li&gt; 
 &lt;li&gt;GitHub&lt;/li&gt; 
 &lt;li&gt;Discord&lt;/li&gt; 
 &lt;li&gt;Airtable&lt;/li&gt; 
 &lt;li&gt;Google Calendar&lt;/li&gt; 
 &lt;li&gt;Luma&lt;/li&gt; 
 &lt;li&gt;and more to come.....&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìÑ &lt;strong&gt;Supported File Extensions&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: File format support depends on your ETL service configuration. LlamaCloud supports 50+ formats, Unstructured supports 34+ core formats, and Docling (core formats, local processing, privacy-focused, no API key).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Documents &amp;amp; Text&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.doc&lt;/code&gt;, &lt;code&gt;.docx&lt;/code&gt;, &lt;code&gt;.docm&lt;/code&gt;, &lt;code&gt;.dot&lt;/code&gt;, &lt;code&gt;.dotm&lt;/code&gt;, &lt;code&gt;.rtf&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.xml&lt;/code&gt;, &lt;code&gt;.epub&lt;/code&gt;, &lt;code&gt;.odt&lt;/code&gt;, &lt;code&gt;.wpd&lt;/code&gt;, &lt;code&gt;.pages&lt;/code&gt;, &lt;code&gt;.key&lt;/code&gt;, &lt;code&gt;.numbers&lt;/code&gt;, &lt;code&gt;.602&lt;/code&gt;, &lt;code&gt;.abw&lt;/code&gt;, &lt;code&gt;.cgm&lt;/code&gt;, &lt;code&gt;.cwk&lt;/code&gt;, &lt;code&gt;.hwp&lt;/code&gt;, &lt;code&gt;.lwp&lt;/code&gt;, &lt;code&gt;.mw&lt;/code&gt;, &lt;code&gt;.mcw&lt;/code&gt;, &lt;code&gt;.pbd&lt;/code&gt;, &lt;code&gt;.sda&lt;/code&gt;, &lt;code&gt;.sdd&lt;/code&gt;, &lt;code&gt;.sdp&lt;/code&gt;, &lt;code&gt;.sdw&lt;/code&gt;, &lt;code&gt;.sgl&lt;/code&gt;, &lt;code&gt;.sti&lt;/code&gt;, &lt;code&gt;.sxi&lt;/code&gt;, &lt;code&gt;.sxw&lt;/code&gt;, &lt;code&gt;.stw&lt;/code&gt;, &lt;code&gt;.sxg&lt;/code&gt;, &lt;code&gt;.uof&lt;/code&gt;, &lt;code&gt;.uop&lt;/code&gt;, &lt;code&gt;.uot&lt;/code&gt;, &lt;code&gt;.vor&lt;/code&gt;, &lt;code&gt;.wps&lt;/code&gt;, &lt;code&gt;.zabw&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.doc&lt;/code&gt;, &lt;code&gt;.docx&lt;/code&gt;, &lt;code&gt;.odt&lt;/code&gt;, &lt;code&gt;.rtf&lt;/code&gt;, &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.xml&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.rst&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.org&lt;/code&gt;, &lt;code&gt;.epub&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.docx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.htm&lt;/code&gt;, &lt;code&gt;.xhtml&lt;/code&gt;, &lt;code&gt;.adoc&lt;/code&gt;, &lt;code&gt;.asciidoc&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Presentations&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.ppt&lt;/code&gt;, &lt;code&gt;.pptx&lt;/code&gt;, &lt;code&gt;.pptm&lt;/code&gt;, &lt;code&gt;.pot&lt;/code&gt;, &lt;code&gt;.potm&lt;/code&gt;, &lt;code&gt;.potx&lt;/code&gt;, &lt;code&gt;.odp&lt;/code&gt;, &lt;code&gt;.key&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.ppt&lt;/code&gt;, &lt;code&gt;.pptx&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.pptx&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Spreadsheets &amp;amp; Data&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.xlsx&lt;/code&gt;, &lt;code&gt;.xls&lt;/code&gt;, &lt;code&gt;.xlsm&lt;/code&gt;, &lt;code&gt;.xlsb&lt;/code&gt;, &lt;code&gt;.xlw&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt;, &lt;code&gt;.tsv&lt;/code&gt;, &lt;code&gt;.ods&lt;/code&gt;, &lt;code&gt;.fods&lt;/code&gt;, &lt;code&gt;.numbers&lt;/code&gt;, &lt;code&gt;.dbf&lt;/code&gt;, &lt;code&gt;.123&lt;/code&gt;, &lt;code&gt;.dif&lt;/code&gt;, &lt;code&gt;.sylk&lt;/code&gt;, &lt;code&gt;.slk&lt;/code&gt;, &lt;code&gt;.prn&lt;/code&gt;, &lt;code&gt;.et&lt;/code&gt;, &lt;code&gt;.uos1&lt;/code&gt;, &lt;code&gt;.uos2&lt;/code&gt;, &lt;code&gt;.wk1&lt;/code&gt;, &lt;code&gt;.wk2&lt;/code&gt;, &lt;code&gt;.wk3&lt;/code&gt;, &lt;code&gt;.wk4&lt;/code&gt;, &lt;code&gt;.wks&lt;/code&gt;, &lt;code&gt;.wq1&lt;/code&gt;, &lt;code&gt;.wq2&lt;/code&gt;, &lt;code&gt;.wb1&lt;/code&gt;, &lt;code&gt;.wb2&lt;/code&gt;, &lt;code&gt;.wb3&lt;/code&gt;, &lt;code&gt;.qpw&lt;/code&gt;, &lt;code&gt;.xlr&lt;/code&gt;, &lt;code&gt;.eth&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.xls&lt;/code&gt;, &lt;code&gt;.xlsx&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt;, &lt;code&gt;.tsv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.xlsx&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Images&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.jpg&lt;/code&gt;, &lt;code&gt;.jpeg&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.gif&lt;/code&gt;, &lt;code&gt;.bmp&lt;/code&gt;, &lt;code&gt;.svg&lt;/code&gt;, &lt;code&gt;.tiff&lt;/code&gt;, &lt;code&gt;.webp&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.htm&lt;/code&gt;, &lt;code&gt;.web&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.jpg&lt;/code&gt;, &lt;code&gt;.jpeg&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.bmp&lt;/code&gt;, &lt;code&gt;.tiff&lt;/code&gt;, &lt;code&gt;.heic&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.jpg&lt;/code&gt;, &lt;code&gt;.jpeg&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.bmp&lt;/code&gt;, &lt;code&gt;.tiff&lt;/code&gt;, &lt;code&gt;.tif&lt;/code&gt;, &lt;code&gt;.webp&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio &amp;amp; Video &lt;em&gt;(Always Supported)&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;.mp3&lt;/code&gt;, &lt;code&gt;.mpga&lt;/code&gt;, &lt;code&gt;.m4a&lt;/code&gt;, &lt;code&gt;.wav&lt;/code&gt;, &lt;code&gt;.mp4&lt;/code&gt;, &lt;code&gt;.mpeg&lt;/code&gt;, &lt;code&gt;.webm&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Email &amp;amp; Communication&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.eml&lt;/code&gt;, &lt;code&gt;.msg&lt;/code&gt;, &lt;code&gt;.p7s&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;üîñ Cross Browser Extension&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;The SurfSense extension can be used to save any webpage you like.&lt;/li&gt; 
 &lt;li&gt;Its main usecase is to save any webpages protected beyond authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FEATURE REQUESTS AND FUTURE&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;SurfSense is actively being developed.&lt;/strong&gt; While it's not yet production-ready, you can help us speed up the process.&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href="https://discord.gg/ejRNvftDp9"&gt;SurfSense Discord&lt;/a&gt; and help shape the future of SurfSense!&lt;/p&gt; 
&lt;h2&gt;üöÄ Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with our development progress and upcoming features!&lt;br /&gt; Check out our public roadmap and contribute your ideas or feedback:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;View the Roadmap:&lt;/strong&gt; &lt;a href="https://github.com/users/MODSetter/projects/2"&gt;SurfSense Roadmap on GitHub Projects&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to get started?&lt;/h2&gt; 
&lt;h3&gt;Installation Options&lt;/h3&gt; 
&lt;p&gt;SurfSense provides two installation methods:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.surfsense.net/docs/docker-installation"&gt;Docker Installation&lt;/a&gt;&lt;/strong&gt; - The easiest way to get SurfSense up and running with all dependencies containerized.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Includes pgAdmin for database management through a web UI&lt;/li&gt; 
   &lt;li&gt;Supports environment variable customization via &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; 
   &lt;li&gt;Flexible deployment options (full stack or core services only)&lt;/li&gt; 
   &lt;li&gt;No need to manually edit configuration files between environments&lt;/li&gt; 
   &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/MODSetter/SurfSense/main/DOCKER_SETUP.md"&gt;Docker Setup Guide&lt;/a&gt; for detailed instructions&lt;/li&gt; 
   &lt;li&gt;For deployment scenarios and options, see &lt;a href="https://raw.githubusercontent.com/MODSetter/SurfSense/main/DEPLOYMENT_GUIDE.md"&gt;Deployment Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.surfsense.net/docs/manual-installation"&gt;Manual Installation (Recommended)&lt;/a&gt;&lt;/strong&gt; - For users who prefer more control over their setup or need to customize their deployment.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Both installation guides include detailed OS-specific instructions for Windows, macOS, and Linux.&lt;/p&gt; 
&lt;p&gt;Before installation, make sure to complete the &lt;a href="https://www.surfsense.net/docs/"&gt;prerequisite setup steps&lt;/a&gt; including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;PGVector setup&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Processing ETL Service&lt;/strong&gt; (choose one): 
  &lt;ul&gt; 
   &lt;li&gt;Unstructured.io API key (supports 34+ formats)&lt;/li&gt; 
   &lt;li&gt;LlamaIndex API key (enhanced parsing, supports 50+ formats)&lt;/li&gt; 
   &lt;li&gt;Docling (local processing, no API key required, supports PDF, Office docs, images, HTML, CSV)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Other required API keys&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Research Agent&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e22c5d86-f511-4c72-8c50-feba0c1561b4" alt="updated_researcher" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Search Spaces&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e254c38c-f937-44b6-9e9d-770db583d099" alt="search_spaces" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Manage Documents&lt;/strong&gt; &lt;img src="https://github.com/user-attachments/assets/7001e306-eb06-4009-89c6-8fadfdc3fc4d" alt="documents" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Podcast Agent&lt;/strong&gt; &lt;img src="https://github.com/user-attachments/assets/6cb82ffd-9e14-4172-bc79-67faf34c4c1c" alt="podcasts" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Agent Chat&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/bb352d52-1c6d-4020-926b-722d0b98b491" alt="git_chat" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Browser Extension&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/1f042b7a-6349-422b-94fb-d40d0df16c40" alt="ext1" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a9b9f1aa-2677-404d-b0a0-c1b2dddf24a7" alt="ext2" /&gt;&lt;/p&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;BackEnd&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;: Modern, fast web framework for building APIs with Python&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;PostgreSQL with pgvector&lt;/strong&gt;: Database with vector search capabilities for similarity searches&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;SQLAlchemy&lt;/strong&gt;: SQL toolkit and ORM (Object-Relational Mapping) for database interactions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Alembic&lt;/strong&gt;: A database migrations tool for SQLAlchemy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FastAPI Users&lt;/strong&gt;: Authentication and user management with JWT and OAuth support&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LangGraph&lt;/strong&gt;: Framework for developing AI-agents.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LangChain&lt;/strong&gt;: Framework for developing AI-powered applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LLM Integration&lt;/strong&gt;: Integration with LLM models through LiteLLM&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rerankers&lt;/strong&gt;: Advanced result ranking for improved search relevance&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hybrid Search&lt;/strong&gt;: Combines vector similarity and full-text search for optimal results using Reciprocal Rank Fusion (RRF)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vector Embeddings&lt;/strong&gt;: Document and text embeddings for semantic search&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;pgvector&lt;/strong&gt;: PostgreSQL extension for efficient vector similarity operations&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chonkie&lt;/strong&gt;: Advanced document chunking and embedding library&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Uses &lt;code&gt;AutoEmbeddings&lt;/code&gt; for flexible embedding model selection&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;LateChunker&lt;/code&gt; for optimized document chunking based on embedding model's max sequence length&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;&lt;strong&gt;FrontEnd&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Next.js 15.2.3&lt;/strong&gt;: React framework featuring App Router, server components, automatic code-splitting, and optimized rendering.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;React 19.0.0&lt;/strong&gt;: JavaScript library for building user interfaces.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: Static type-checking for JavaScript, enhancing code quality and developer experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vercel AI SDK Kit UI Stream Protocol&lt;/strong&gt;: To create scalable chat UI.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tailwind CSS 4.x&lt;/strong&gt;: Utility-first CSS framework for building custom UI designs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shadcn&lt;/strong&gt;: Headless components library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lucide React&lt;/strong&gt;: Icon set implemented as React components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Framer Motion&lt;/strong&gt;: Animation library for React.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sonner&lt;/strong&gt;: Toast notification library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Geist&lt;/strong&gt;: Font family from Vercel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;React Hook Form&lt;/strong&gt;: Form state management and validation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Zod&lt;/strong&gt;: TypeScript-first schema validation with static type inference.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;@hookform/resolvers&lt;/strong&gt;: Resolvers for using validation libraries with React Hook Form.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;@tanstack/react-table&lt;/strong&gt;: Headless UI for building powerful tables &amp;amp; datagrids.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;DevOps&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Container platform for consistent deployment across environments&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;: Tool for defining and running multi-container Docker applications&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;pgAdmin&lt;/strong&gt;: Web-based PostgreSQL administration tool included in Docker setup&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Extension&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Manifest v3 on Plasmo&lt;/p&gt; 
&lt;h2&gt;Future Work&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add More Connectors.&lt;/li&gt; 
 &lt;li&gt;Patch minor bugs.&lt;/li&gt; 
 &lt;li&gt;Document Podcasts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Contributions are very welcome! A contribution can be as small as a ‚≠ê or even finding and creating issues. Fine-tuning the Backend is always desired.&lt;/p&gt; 
&lt;p&gt;For detailed contribution guidelines, please see our &lt;a href="https://raw.githubusercontent.com/MODSetter/SurfSense/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#MODSetter/SurfSense&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/user-attachments/assets/329c9bc2-6005-4aed-a629-700b5ae296b4" alt="Catalyst Project" width="200" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>hsliuping/TradingAgents-CN</title>
      <link>https://github.com/hsliuping/TradingAgents-CN</link>
      <description>&lt;p&gt;Âü∫‰∫éÂ§öÊô∫ËÉΩ‰ΩìLLMÁöÑ‰∏≠ÊñáÈáëËûç‰∫§ÊòìÊ°ÜÊû∂ - TradingAgents‰∏≠ÊñáÂ¢ûÂº∫Áâà&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TradingAgents ‰∏≠ÊñáÂ¢ûÂº∫Áâà&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.python.org/"&gt;&lt;img src="https://img.shields.io/badge/Python-3.10%2B-blue.svg?sanitize=true" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/VERSION"&gt;&lt;img src="https://img.shields.io/badge/Version-cn--0.1.15-green.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;&lt;img src="https://img.shields.io/badge/docs-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-green.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;&lt;img src="https://img.shields.io/badge/%E5%9F%BA%E4%BA%8E-TauricResearch/TradingAgents-orange.svg?sanitize=true" alt="Original" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üöÄ &lt;strong&gt;ÊúÄÊñ∞ÁâàÊú¨ cn-0.1.15&lt;/strong&gt;: ÂºÄÂèëËÄÖ‰ΩìÈ™å‰∏éLLMÁîüÊÄÅÁ≥ªÁªüÂ§ßÂçáÁ∫ßÔºÅÊñ∞Â¢ûÂçÉÂ∏ÜÂ§ßÊ®°ÂûãÊîØÊåÅ„ÄÅÂÆåÊï¥ÂºÄÂèëÂ∑•ÂÖ∑Èìæ„ÄÅÂ≠¶ÊúØÁ†îÁ©∂ËµÑÊñô„ÄÅ‰ºÅ‰∏öÁ∫ßÂ∑•‰ΩúÊµÅËßÑËåÉÔºÅ&lt;/p&gt; 
 &lt;p&gt;üéØ &lt;strong&gt;Ê†∏ÂøÉÂäüËÉΩ&lt;/strong&gt;: ÂéüÁîüOpenAIÊîØÊåÅ | Google AIÂÖ®Èù¢ÈõÜÊàê | Ëá™ÂÆö‰πâÁ´ØÁÇπÈÖçÁΩÆ | Êô∫ËÉΩÊ®°ÂûãÈÄâÊã© | Â§öLLMÊèê‰æõÂïÜÊîØÊåÅ | Ê®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ | DockerÂÆπÂô®ÂåñÈÉ®ÁΩ≤ | ‰∏ì‰∏öÊä•ÂëäÂØºÂá∫ | ÂÆåÊï¥AËÇ°ÊîØÊåÅ | ‰∏≠ÊñáÊú¨Âú∞Âåñ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Âü∫‰∫éÂ§öÊô∫ËÉΩ‰ΩìÂ§ßËØ≠Ë®ÄÊ®°ÂûãÁöÑ&lt;strong&gt;‰∏≠ÊñáÈáëËûç‰∫§ÊòìÂÜ≥Á≠ñÊ°ÜÊû∂&lt;/strong&gt;„ÄÇ‰∏ì‰∏∫‰∏≠ÊñáÁî®Êà∑‰ºòÂåñÔºåÊèê‰æõÂÆåÊï¥ÁöÑAËÇ°/Ê∏ØËÇ°/ÁæéËÇ°ÂàÜÊûêËÉΩÂäõ„ÄÇ&lt;/p&gt; 
&lt;h2&gt;üôè Ëá¥Êï¨Ê∫êÈ°πÁõÆ&lt;/h2&gt; 
&lt;p&gt;ÊÑüË∞¢ &lt;a href="https://github.com/TauricResearch"&gt;Tauric Research&lt;/a&gt; Âõ¢ÈòüÂàõÈÄ†ÁöÑÈù©ÂëΩÊÄßÂ§öÊô∫ËÉΩ‰Ωì‰∫§ÊòìÊ°ÜÊû∂ &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TradingAgents&lt;/a&gt;ÔºÅ&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üéØ Êàë‰ª¨ÁöÑ‰ΩøÂëΩ&lt;/strong&gt;: ‰∏∫‰∏≠ÂõΩÁî®Êà∑Êèê‰æõÂÆåÊï¥ÁöÑ‰∏≠ÊñáÂåñ‰ΩìÈ™åÔºåÊîØÊåÅAËÇ°/Ê∏ØËÇ°Â∏ÇÂú∫ÔºåÈõÜÊàêÂõΩ‰∫ßÂ§ßÊ®°ÂûãÔºåÊé®Âä®AIÈáëËûçÊäÄÊúØÂú®‰∏≠ÊñáÁ§æÂå∫ÁöÑÊôÆÂèäÂ∫îÁî®„ÄÇ&lt;/p&gt; 
&lt;h2&gt;üÜï v0.1.15 ÈáçÂ§ßÊõ¥Êñ∞&lt;/h2&gt; 
&lt;h3&gt;ü§ñ LLMÁîüÊÄÅÁ≥ªÁªüÂ§ßÂçáÁ∫ß&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂçÉÂ∏ÜÂ§ßÊ®°ÂûãÊîØÊåÅ&lt;/strong&gt;: Êñ∞Â¢ûÁôæÂ∫¶ÂçÉÂ∏Ü(ERNIE)Â§ßÊ®°ÂûãÂÆåÊï¥ÈõÜÊàê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLMÈÄÇÈÖçÂô®ÈáçÊûÑ&lt;/strong&gt;: Áªü‰∏ÄÁöÑOpenAIÂÖºÂÆπÈÄÇÈÖçÂô®Êû∂ÊûÑ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â§öÂéÇÂïÜÊîØÊåÅ&lt;/strong&gt;: ÊîØÊåÅÊõ¥Â§öÂõΩ‰∫ßÂ§ßÊ®°ÂûãÊèê‰æõÂïÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈõÜÊàêÊåáÂçó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑLLMÈõÜÊàêÂºÄÂèëÊñáÊ°£ÂíåÊµãËØïÂ∑•ÂÖ∑&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìö Â≠¶ÊúØÁ†îÁ©∂ÊîØÊåÅ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;TradingAgentsËÆ∫Êñá&lt;/strong&gt;: ÂÆåÊï¥ÁöÑ‰∏≠ÊñáÁøªËØëÁâàÊú¨ÂíåÊ∑±Â∫¶Ëß£ËØª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊäÄÊúØÂçöÂÆ¢&lt;/strong&gt;: ËØ¶ÁªÜÁöÑÊäÄÊúØÂàÜÊûêÂíåÂÆûÁé∞ÂéüÁêÜËß£ËØª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â≠¶ÊúØËµÑÊñô&lt;/strong&gt;: PDFËÆ∫ÊñáÂíåÁõ∏ÂÖ≥Á†îÁ©∂ËµÑÊñô&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºïÁî®ÊîØÊåÅ&lt;/strong&gt;: Ê†áÂáÜÁöÑÂ≠¶ÊúØÂºïÁî®Ê†ºÂºèÂíåÂèÇËÄÉÊñáÁåÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üõ†Ô∏è ÂºÄÂèëËÄÖ‰ΩìÈ™åÂçáÁ∫ß&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÂèëÂ∑•‰ΩúÊµÅ&lt;/strong&gt;: Ê†áÂáÜÂåñÁöÑÂºÄÂèëÊµÅÁ®ãÂíåÂàÜÊîØÁÆ°ÁêÜËßÑËåÉ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆâË£ÖÈ™åËØÅ&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÂÆâË£ÖÊµãËØïÂíåÈ™åËØÅËÑöÊú¨&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊñáÊ°£ÈáçÊûÑ&lt;/strong&gt;: ÁªìÊûÑÂåñÁöÑÊñáÊ°£Á≥ªÁªüÂíåÂø´ÈÄüÂºÄÂßãÊåáÂçó&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PRÊ®°Êùø&lt;/strong&gt;: Ê†áÂáÜÂåñÁöÑPull RequestÊ®°ÊùøÂíå‰ª£Á†ÅÂÆ°Êü•ÊµÅÁ®ã&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîß ‰ºÅ‰∏öÁ∫ßÂ∑•ÂÖ∑Èìæ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂàÜÊîØ‰øùÊä§&lt;/strong&gt;: GitHubÂàÜÊîØ‰øùÊä§Á≠ñÁï•ÂíåÂÆâÂÖ®ËßÑÂàô&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Á¥ßÊÄ•Á®ãÂ∫è&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁ¥ßÊÄ•Â§ÑÁêÜÂíåÊïÖÈöúÊÅ¢Â§çÁ®ãÂ∫è&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊµãËØïÊ°ÜÊû∂&lt;/strong&gt;: Â¢ûÂº∫ÁöÑÊµãËØïË¶ÜÁõñÂíåÈ™åËØÅÂ∑•ÂÖ∑&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÉ®ÁΩ≤ÊåáÂçó&lt;/strong&gt;: ‰ºÅ‰∏öÁ∫ßÈÉ®ÁΩ≤ÂíåÈÖçÁΩÆÁÆ°ÁêÜ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìã v0.1.14 ÂäüËÉΩÂõûÈ°æ&lt;/h2&gt; 
&lt;h3&gt;üë• Áî®Êà∑ÊùÉÈôêÁÆ°ÁêÜÁ≥ªÁªü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆåÊï¥Áî®Êà∑ÁÆ°ÁêÜ&lt;/strong&gt;: Êñ∞Â¢ûÁî®Êà∑Ê≥®ÂÜå„ÄÅÁôªÂΩï„ÄÅÊùÉÈôêÊéßÂà∂ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËßíËâ≤ÊùÉÈôê&lt;/strong&gt;: ÊîØÊåÅÂ§öÁ∫ßÁî®Êà∑ËßíËâ≤ÂíåÊùÉÈôêÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‰ºöËØùÁÆ°ÁêÜ&lt;/strong&gt;: ÂÆâÂÖ®ÁöÑÁî®Êà∑‰ºöËØùÂíåÁä∂ÊÄÅÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑Ê¥ªÂä®Êó•Âøó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁî®Êà∑Êìç‰ΩúËÆ∞ÂΩïÂíåÂÆ°ËÆ°ÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîê WebÁî®Êà∑ËÆ§ËØÅÁ≥ªÁªü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÁôªÂΩïÁªÑ‰ª∂&lt;/strong&gt;: Áé∞‰ª£ÂåñÁöÑÁî®Êà∑ÁôªÂΩïÁïåÈù¢&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËÆ§ËØÅÁÆ°ÁêÜÂô®&lt;/strong&gt;: Áªü‰∏ÄÁöÑÁî®Êà∑ËÆ§ËØÅÂíåÊéàÊùÉÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆâÂÖ®Â¢ûÂº∫&lt;/strong&gt;: ÂØÜÁ†ÅÂä†ÂØÜ„ÄÅ‰ºöËØùÂÆâÂÖ®Á≠âÂÆâÂÖ®Êú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑‰ª™Ë°®Êùø&lt;/strong&gt;: ‰∏™ÊÄßÂåñÁöÑÁî®Êà∑Ê¥ªÂä®‰ª™Ë°®Êùø&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üóÑÔ∏è Êï∞ÊçÆÁÆ°ÁêÜ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MongoDBÈõÜÊàêÂ¢ûÂº∫&lt;/strong&gt;: ÊîπËøõÁöÑMongoDBËøûÊé•ÂíåÊï∞ÊçÆÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êï∞ÊçÆÁõÆÂΩïÈáçÁªÑ&lt;/strong&gt;: ‰ºòÂåñÁöÑÊï∞ÊçÆÂ≠òÂÇ®ÁªìÊûÑÂíåÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êï∞ÊçÆËøÅÁßªËÑöÊú¨&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÊï∞ÊçÆËøÅÁßªÂíåÂ§á‰ªΩÂ∑•ÂÖ∑&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁºìÂ≠ò‰ºòÂåñ&lt;/strong&gt;: ÊèêÂçáÊï∞ÊçÆÂä†ËΩΩÂíåÂàÜÊûêÁªìÊûúÁºìÂ≠òÊÄßËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üß™ ÊµãËØïË¶ÜÁõñÂ¢ûÂº∫&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂäüËÉΩÊµãËØïËÑöÊú¨&lt;/strong&gt;: Êñ∞Â¢û6‰∏™‰∏ìÈ°πÂäüËÉΩÊµãËØïËÑöÊú¨&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â∑•ÂÖ∑Â§ÑÁêÜÂô®ÊµãËØï&lt;/strong&gt;: GoogleÂ∑•ÂÖ∑Â§ÑÁêÜÂô®‰øÆÂ§çÈ™åËØÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºïÂØºËá™Âä®ÈöêËóèÊµãËØï&lt;/strong&gt;: UI‰∫§‰∫íÂäüËÉΩÊµãËØï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Âú®Á∫øÂ∑•ÂÖ∑ÈÖçÁΩÆÊµãËØï&lt;/strong&gt;: Â∑•ÂÖ∑ÈÖçÁΩÆÂíåÈÄâÊã©ÈÄªËæëÊµãËØï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁúüÂÆûÂú∫ÊôØÊµãËØï&lt;/strong&gt;: ÂÆûÈôÖ‰ΩøÁî®Âú∫ÊôØÁöÑÁ´ØÂà∞Á´ØÊµãËØï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁæéËÇ°Áã¨Á´ãÊÄßÊµãËØï&lt;/strong&gt;: ÁæéËÇ°ÂàÜÊûêÂäüËÉΩÁã¨Á´ãÊÄßÈ™åËØÅ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üÜï v0.1.13 ÈáçÂ§ßÊõ¥Êñ∞&lt;/h2&gt; 
&lt;h3&gt;ü§ñ ÂéüÁîüOpenAIÁ´ØÁÇπÊîØÊåÅ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Ëá™ÂÆö‰πâOpenAIÁ´ØÁÇπ&lt;/strong&gt;: ÊîØÊåÅÈÖçÁΩÆ‰ªªÊÑèOpenAIÂÖºÂÆπÁöÑAPIÁ´ØÁÇπ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁÅµÊ¥ªÊ®°ÂûãÈÄâÊã©&lt;/strong&gt;: ÂèØ‰ª•‰ΩøÁî®‰ªª‰ΩïOpenAIÊ†ºÂºèÁöÑÊ®°ÂûãÔºå‰∏çÈôê‰∫éÂÆòÊñπÊ®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÈÄÇÈÖçÂô®&lt;/strong&gt;: Êñ∞Â¢ûÂéüÁîüOpenAIÈÄÇÈÖçÂô®ÔºåÊèê‰æõÊõ¥Â•ΩÁöÑÂÖºÂÆπÊÄßÂíåÊÄßËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆÁÆ°ÁêÜ&lt;/strong&gt;: Áªü‰∏ÄÁöÑÁ´ØÁÇπÂíåÊ®°ÂûãÈÖçÁΩÆÁÆ°ÁêÜÁ≥ªÁªü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üß† Google AIÁîüÊÄÅÁ≥ªÁªüÂÖ®Èù¢ÈõÜÊàê&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;‰∏âÂ§ßGoogle AIÂåÖÊîØÊåÅ&lt;/strong&gt;: langchain-google-genai„ÄÅgoogle-generativeai„ÄÅgoogle-genai&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;9‰∏™È™åËØÅÊ®°Âûã&lt;/strong&gt;: gemini-2.5-pro, gemini-2.5-flash, gemini-2.0-flashÁ≠âÊúÄÊñ∞Ê®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoogleÂ∑•ÂÖ∑Â§ÑÁêÜÂô®&lt;/strong&gt;: ‰∏ìÈó®ÁöÑGoogle AIÂ∑•ÂÖ∑Ë∞ÉÁî®Â§ÑÁêÜÂô®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÈôçÁ∫ßÊú∫Âà∂&lt;/strong&gt;: È´òÁ∫ßÂäüËÉΩÂ§±Ë¥•Êó∂Ëá™Âä®ÈôçÁ∫ßÂà∞Âü∫Á°ÄÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîß LLMÈÄÇÈÖçÂô®Êû∂ÊûÑ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GoogleOpenAIAdapter&lt;/strong&gt;: Êñ∞Â¢ûGoogle AIÁöÑOpenAIÂÖºÂÆπÈÄÇÈÖçÂô®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áªü‰∏ÄÊé•Âè£&lt;/strong&gt;: ÊâÄÊúâLLMÊèê‰æõÂïÜ‰ΩøÁî®Áªü‰∏ÄÁöÑË∞ÉÁî®Êé•Âè£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈîôËØØÂ§ÑÁêÜÂ¢ûÂº∫&lt;/strong&gt;: ÊîπËøõÁöÑÂºÇÂ∏∏Â§ÑÁêÜÂíåËá™Âä®ÈáçËØïÊú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊÄßËÉΩÁõëÊéß&lt;/strong&gt;: Ê∑ªÂä†LLMË∞ÉÁî®ÊÄßËÉΩÁõëÊéßÂíåÁªüËÆ°&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üé® WebÁïåÈù¢Êô∫ËÉΩ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÊ®°ÂûãÈÄâÊã©&lt;/strong&gt;: Ê†πÊçÆÂèØÁî®ÊÄßËá™Âä®ÈÄâÊã©ÊúÄ‰Ω≥Ê®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KeyError‰øÆÂ§ç&lt;/strong&gt;: ÂΩªÂ∫ïËß£ÂÜ≥Ê®°ÂûãÈÄâÊã©‰∏≠ÁöÑKeyErrorÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UIÂìçÂ∫î‰ºòÂåñ&lt;/strong&gt;: ÊîπËøõÊ®°ÂûãÂàáÊç¢ÁöÑÂìçÂ∫îÈÄüÂ∫¶ÂíåÁî®Êà∑‰ΩìÈ™å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈîôËØØÊèêÁ§∫&lt;/strong&gt;: Êõ¥ÂèãÂ•ΩÁöÑÈîôËØØÊèêÁ§∫ÂíåËß£ÂÜ≥Âª∫ËÆÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üÜï v0.1.12 ÈáçÂ§ßÊõ¥Êñ∞&lt;/h2&gt; 
&lt;h3&gt;üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûêÊ®°Âùó&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÊñ∞ÈóªËøáÊª§Âô®&lt;/strong&gt;: Âü∫‰∫éAIÁöÑÊñ∞ÈóªÁõ∏ÂÖ≥ÊÄßËØÑÂàÜÂíåË¥®ÈáèËØÑ‰º∞&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â§öÂ±ÇÊ¨°ËøáÊª§Êú∫Âà∂&lt;/strong&gt;: Âü∫Á°ÄËøáÊª§„ÄÅÂ¢ûÂº∫ËøáÊª§„ÄÅÈõÜÊàêËøáÊª§‰∏âÁ∫ßÂ§ÑÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êñ∞ÈóªË¥®ÈáèËØÑ‰º∞&lt;/strong&gt;: Ëá™Âä®ËØÜÂà´ÂíåËøáÊª§‰ΩéË¥®Èáè„ÄÅÈáçÂ§ç„ÄÅÊó†ÂÖ≥Êñ∞Èóª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑&lt;/strong&gt;: Êï¥ÂêàÂ§ö‰∏™Êñ∞ÈóªÊ∫êÔºåÊèê‰æõÁªü‰∏ÄÁöÑÊñ∞ÈóªËé∑ÂèñÊé•Âè£&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîß ÊäÄÊúØ‰øÆÂ§çÂíå‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DashScopeÈÄÇÈÖçÂô®‰øÆÂ§ç&lt;/strong&gt;: Ëß£ÂÜ≥Â∑•ÂÖ∑Ë∞ÉÁî®ÂÖºÂÆπÊÄßÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DeepSeekÊ≠ªÂæ™ÁéØ‰øÆÂ§ç&lt;/strong&gt;: ‰øÆÂ§çÊñ∞ÈóªÂàÜÊûêÂ∏àÁöÑÊó†ÈôêÂæ™ÁéØÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLMÂ∑•ÂÖ∑Ë∞ÉÁî®Â¢ûÂº∫&lt;/strong&gt;: ÊèêÂçáÂ∑•ÂÖ∑Ë∞ÉÁî®ÁöÑÂèØÈù†ÊÄßÂíåÁ®≥ÂÆöÊÄß&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êñ∞ÈóªÊ£ÄÁ¥¢Âô®‰ºòÂåñ&lt;/strong&gt;: Â¢ûÂº∫Êñ∞ÈóªÊï∞ÊçÆËé∑ÂèñÂíåÂ§ÑÁêÜËÉΩÂäõ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìö ÂÆåÂñÑÊµãËØïÂíåÊñáÊ°£&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÖ®Èù¢ÊµãËØïË¶ÜÁõñ&lt;/strong&gt;: Êñ∞Â¢û15+‰∏™ÊµãËØïÊñá‰ª∂ÔºåË¶ÜÁõñÊâÄÊúâÊñ∞ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËØ¶ÁªÜÊäÄÊúØÊñáÊ°£&lt;/strong&gt;: Êñ∞Â¢û8‰∏™ÊäÄÊúØÂàÜÊûêÊä•ÂëäÂíå‰øÆÂ§çÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑ÊåáÂçóÂÆåÂñÑ&lt;/strong&gt;: Êñ∞Â¢ûÊñ∞ÈóªËøáÊª§‰ΩøÁî®ÊåáÂçóÂíåÊúÄ‰Ω≥ÂÆûË∑µ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊºîÁ§∫ËÑöÊú¨&lt;/strong&gt;: Êèê‰æõÂÆåÊï¥ÁöÑÊñ∞ÈóªËøáÊª§ÂäüËÉΩÊºîÁ§∫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üóÇÔ∏è È°πÁõÆÁªìÊûÑ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÊñáÊ°£ÂàÜÁ±ªÊï¥ÁêÜ&lt;/strong&gt;: ÊåâÂäüËÉΩÂ∞ÜÊñáÊ°£ÂàÜÁ±ªÂà∞docsÂ≠êÁõÆÂΩï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Á§∫‰æã‰ª£Á†ÅÂΩí‰Ωç&lt;/strong&gt;: ÊºîÁ§∫ËÑöÊú¨Áªü‰∏ÄÂà∞examplesÁõÆÂΩï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ê†πÁõÆÂΩïÊï¥Ê¥Å&lt;/strong&gt;: ‰øùÊåÅÊ†πÁõÆÂΩïÁÆÄÊ¥ÅÔºåÊèêÂçáÈ°πÁõÆ‰∏ì‰∏öÂ∫¶&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üéØ Ê†∏ÂøÉÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;ü§ñ Â§öÊô∫ËÉΩ‰ΩìÂçè‰ΩúÊû∂ÊûÑ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;‰∏ì‰∏öÂàÜÂ∑•&lt;/strong&gt;: Âü∫Êú¨Èù¢„ÄÅÊäÄÊúØÈù¢„ÄÅÊñ∞ÈóªÈù¢„ÄÅÁ§æ‰∫§Â™í‰ΩìÂõõÂ§ßÂàÜÊûêÂ∏à&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁªìÊûÑÂåñËæ©ËÆ∫&lt;/strong&gt;: ÁúãÊ∂®/ÁúãË∑åÁ†îÁ©∂ÂëòËøõË°åÊ∑±Â∫¶ÂàÜÊûê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÂÜ≥Á≠ñ&lt;/strong&gt;: ‰∫§ÊòìÂëòÂü∫‰∫éÊâÄÊúâËæìÂÖ•ÂÅöÂá∫ÊúÄÁªàÊäïËµÑÂª∫ËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;È£éÈô©ÁÆ°ÁêÜ&lt;/strong&gt;: Â§öÂ±ÇÊ¨°È£éÈô©ËØÑ‰º∞ÂíåÁÆ°ÁêÜÊú∫Âà∂&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üñ•Ô∏è WebÁïåÈù¢Â±ïÁ§∫&lt;/h2&gt; 
&lt;h3&gt;üì∏ ÁïåÈù¢Êà™Âõæ&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üé® &lt;strong&gt;Áé∞‰ª£ÂåñWebÁïåÈù¢&lt;/strong&gt;: Âü∫‰∫éStreamlitÊûÑÂª∫ÁöÑÂìçÂ∫îÂºèWebÂ∫îÁî®ÔºåÊèê‰æõÁõ¥ËßÇÁöÑËÇ°Á•®ÂàÜÊûê‰ΩìÈ™å&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;üè† ‰∏ªÁïåÈù¢ - ÂàÜÊûêÈÖçÁΩÆ&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003162925.png" alt="1755003162925" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002619976.png" alt="1755002619976" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Êô∫ËÉΩÈÖçÁΩÆÈù¢ÊùøÔºåÊîØÊåÅÂ§öÂ∏ÇÂú∫ËÇ°Á•®ÂàÜÊûêÔºå5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶ÈÄâÊã©&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;üìä ÂÆûÊó∂ÂàÜÊûêËøõÂ∫¶&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002731483.png" alt="1755002731483" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;ÂÆûÊó∂ËøõÂ∫¶Ë∑üË∏™ÔºåÂèØËßÜÂåñÂàÜÊûêËøáÁ®ãÔºåÊô∫ËÉΩÊó∂Èó¥È¢Ñ‰º∞&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;üìà ÂàÜÊûêÁªìÊûúÂ±ïÁ§∫&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002901204.png" alt="1755002901204" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002924844.png" alt="1755002924844" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002939905.png" alt="1755002939905" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002968608.png" alt="1755002968608" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002985903.png" alt="1755002985903" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003004403.png" alt="1755003004403" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003019759.png" alt="1755003019759" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003033939.png" alt="1755003033939" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003048242.png" alt="1755003048242" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003064598.png" alt="1755003064598" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003090603.png" alt="1755003090603" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‰∏ì‰∏öÊäïËµÑÊä•ÂëäÔºåÂ§öÁª¥Â∫¶ÂàÜÊûêÁªìÊûúÔºå‰∏ÄÈîÆÂØºÂá∫ÂäüËÉΩ&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;üéØ Ê†∏ÂøÉÂäüËÉΩÁâπËâ≤&lt;/h3&gt; 
&lt;h4&gt;üìã &lt;strong&gt;Êô∫ËÉΩÂàÜÊûêÈÖçÁΩÆ&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üåç Â§öÂ∏ÇÂú∫ÊîØÊåÅ&lt;/strong&gt;: ÁæéËÇ°„ÄÅAËÇ°„ÄÅÊ∏ØËÇ°‰∏ÄÁ´ôÂºèÂàÜÊûê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ 5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶&lt;/strong&gt;: ‰ªé2ÂàÜÈíüÂø´ÈÄüÂàÜÊûêÂà∞25ÂàÜÈíüÂÖ®Èù¢Á†îÁ©∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü§ñ Êô∫ËÉΩ‰ΩìÈÄâÊã©&lt;/strong&gt;: Â∏ÇÂú∫ÊäÄÊúØ„ÄÅÂü∫Êú¨Èù¢„ÄÅÊñ∞Èóª„ÄÅÁ§æ‰∫§Â™í‰ΩìÂàÜÊûêÂ∏à&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÖ ÁÅµÊ¥ªÊó∂Èó¥ËÆæÁΩÆ&lt;/strong&gt;: ÊîØÊåÅÂéÜÂè≤‰ªªÊÑèÊó∂Èó¥ÁÇπÂàÜÊûê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;ÂÆûÊó∂ËøõÂ∫¶Ë∑üË∏™&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìä ÂèØËßÜÂåñËøõÂ∫¶&lt;/strong&gt;: ÂÆûÊó∂ÊòæÁ§∫ÂàÜÊûêËøõÂ±ïÂíåÂâ©‰ΩôÊó∂Èó¥&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Êô∫ËÉΩÊ≠•È™§ËØÜÂà´&lt;/strong&gt;: Ëá™Âä®ËØÜÂà´ÂΩìÂâçÂàÜÊûêÈò∂ÊÆµ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚è±Ô∏è ÂáÜÁ°ÆÊó∂Èó¥È¢Ñ‰º∞&lt;/strong&gt;: Âü∫‰∫éÂéÜÂè≤Êï∞ÊçÆÁöÑÊô∫ËÉΩÊó∂Èó¥ËÆ°ÁÆó&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ Áä∂ÊÄÅÊåÅ‰πÖÂåñ&lt;/strong&gt;: È°µÈù¢Âà∑Êñ∞‰∏ç‰∏¢Â§±ÂàÜÊûêËøõÂ∫¶&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üìà &lt;strong&gt;‰∏ì‰∏öÁªìÊûúÂ±ïÁ§∫&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ ÊäïËµÑÂÜ≥Á≠ñ&lt;/strong&gt;: ÊòéÁ°ÆÁöÑ‰π∞ÂÖ•/ÊåÅÊúâ/ÂçñÂá∫Âª∫ËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä Â§öÁª¥ÂàÜÊûê&lt;/strong&gt;: ÊäÄÊúØÈù¢„ÄÅÂü∫Êú¨Èù¢„ÄÅÊñ∞ÈóªÈù¢ÁªºÂêàËØÑ‰º∞&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üî¢ ÈáèÂåñÊåáÊ†á&lt;/strong&gt;: ÁΩÆ‰ø°Â∫¶„ÄÅÈ£éÈô©ËØÑÂàÜ„ÄÅÁõÆÊ†á‰ª∑‰Ωç&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÑ ‰∏ì‰∏öÊä•Âëä&lt;/strong&gt;: ÊîØÊåÅMarkdown/Word/PDFÊ†ºÂºèÂØºÂá∫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;ü§ñ &lt;strong&gt;Â§öLLMÊ®°ÂûãÁÆ°ÁêÜ&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üåê 4Â§ßÊèê‰æõÂïÜ&lt;/strong&gt;: DashScope„ÄÅDeepSeek„ÄÅGoogle AI„ÄÅOpenRouter&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ 60+Ê®°ÂûãÈÄâÊã©&lt;/strong&gt;: ‰ªéÁªèÊµéÂûãÂà∞ÊóóËà∞Á∫ßÊ®°ÂûãÂÖ®Ë¶ÜÁõñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ ÈÖçÁΩÆÊåÅ‰πÖÂåñ&lt;/strong&gt;: URLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅËÆæÁΩÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° Âø´ÈÄüÂàáÊç¢&lt;/strong&gt;: 5‰∏™ÁÉ≠Èó®Ê®°Âûã‰∏ÄÈîÆÈÄâÊã©ÊåâÈíÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üéÆ WebÁïåÈù¢Êìç‰ΩúÊåáÂçó&lt;/h3&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;Âø´ÈÄüÂºÄÂßãÊµÅÁ®ã&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ÂêØÂä®Â∫îÁî®&lt;/strong&gt;: &lt;code&gt;python start_web.py&lt;/code&gt; Êàñ &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËÆøÈóÆÁïåÈù¢&lt;/strong&gt;: ÊµèËßàÂô®ÊâìÂºÄ &lt;code&gt;http://localhost:8501&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆÊ®°Âûã&lt;/strong&gt;: ‰æßËæπÊ†èÈÄâÊã©LLMÊèê‰æõÂïÜÂíåÊ®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËæìÂÖ•ËÇ°Á•®&lt;/strong&gt;: ËæìÂÖ•ËÇ°Á•®‰ª£Á†ÅÔºàÂ¶Ç AAPL„ÄÅ000001„ÄÅ0700.HKÔºâ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÄâÊã©Ê∑±Â∫¶&lt;/strong&gt;: Ê†πÊçÆÈúÄÊ±ÇÈÄâÊã©1-5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÂßãÂàÜÊûê&lt;/strong&gt;: ÁÇπÂáª"üöÄ ÂºÄÂßãÂàÜÊûê"ÊåâÈíÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êü•ÁúãÁªìÊûú&lt;/strong&gt;: ÂÆûÊó∂Ë∑üË∏™ËøõÂ∫¶ÔºåÊü•ÁúãÂàÜÊûêÊä•Âëä&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂØºÂá∫Êä•Âëä&lt;/strong&gt;: ‰∏ÄÈîÆÂØºÂá∫‰∏ì‰∏öÊ†ºÂºèÊä•Âëä&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üìä &lt;strong&gt;ÊîØÊåÅÁöÑËÇ°Á•®‰ª£Á†ÅÊ†ºÂºè&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üá∫üá∏ ÁæéËÇ°&lt;/strong&gt;: &lt;code&gt;AAPL&lt;/code&gt;, &lt;code&gt;TSLA&lt;/code&gt;, &lt;code&gt;MSFT&lt;/code&gt;, &lt;code&gt;NVDA&lt;/code&gt;, &lt;code&gt;GOOGL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üá®üá≥ AËÇ°&lt;/strong&gt;: &lt;code&gt;000001&lt;/code&gt;, &lt;code&gt;600519&lt;/code&gt;, &lt;code&gt;300750&lt;/code&gt;, &lt;code&gt;002415&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üá≠üá∞ Ê∏ØËÇ°&lt;/strong&gt;: &lt;code&gt;0700.HK&lt;/code&gt;, &lt;code&gt;9988.HK&lt;/code&gt;, &lt;code&gt;3690.HK&lt;/code&gt;, &lt;code&gt;1810.HK&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üéØ &lt;strong&gt;Á†îÁ©∂Ê∑±Â∫¶ËØ¥Êòé&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;1Á∫ß (2-4ÂàÜÈíü)&lt;/strong&gt;: Âø´ÈÄüÊ¶ÇËßàÔºåÂü∫Á°ÄÊäÄÊúØÊåáÊ†á&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2Á∫ß (4-6ÂàÜÈíü)&lt;/strong&gt;: Ê†áÂáÜÂàÜÊûêÔºåÊäÄÊúØ+Âü∫Êú¨Èù¢&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3Á∫ß (6-10ÂàÜÈíü)&lt;/strong&gt;: Ê∑±Â∫¶ÂàÜÊûêÔºåÂä†ÂÖ•Êñ∞ÈóªÊÉÖÁª™ ‚≠ê &lt;strong&gt;Êé®Ëçê&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Á∫ß (10-15ÂàÜÈíü)&lt;/strong&gt;: ÂÖ®Èù¢ÂàÜÊûêÔºåÂ§öËΩÆÊô∫ËÉΩ‰ΩìËæ©ËÆ∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;5Á∫ß (15-25ÂàÜÈíü)&lt;/strong&gt;: ÊúÄÊ∑±Â∫¶ÂàÜÊûêÔºåÂÆåÊï¥Á†îÁ©∂Êä•Âëä&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üí° &lt;strong&gt;‰ΩøÁî®ÊäÄÂ∑ß&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ ÂÆûÊó∂Âà∑Êñ∞&lt;/strong&gt;: ÂàÜÊûêËøáÁ®ã‰∏≠ÂèØÈöèÊó∂Âà∑Êñ∞È°µÈù¢ÔºåËøõÂ∫¶‰∏ç‰∏¢Â§±&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üì± ÁßªÂä®ÈÄÇÈÖç&lt;/strong&gt;: ÊîØÊåÅÊâãÊú∫ÂíåÂπ≥ÊùøËÆæÂ§áËÆøÈóÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üé® Ê∑±Ëâ≤Ê®°Âºè&lt;/strong&gt;: Ëá™Âä®ÈÄÇÈÖçÁ≥ªÁªü‰∏ªÈ¢òËÆæÁΩÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚å®Ô∏è Âø´Êç∑ÈîÆ&lt;/strong&gt;: ÊîØÊåÅEnterÈîÆÂø´ÈÄüÊèê‰∫§ÂàÜÊûê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìã ÂéÜÂè≤ËÆ∞ÂΩï&lt;/strong&gt;: Ëá™Âä®‰øùÂ≠òÊúÄËøëÁöÑÂàÜÊûêÈÖçÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìñ &lt;strong&gt;ËØ¶ÁªÜÊåáÂçó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑWebÁïåÈù¢‰ΩøÁî®ËØ¥ÊòéËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/web-interface-detailed-guide.md"&gt;üñ•Ô∏è WebÁïåÈù¢ËØ¶ÁªÜ‰ΩøÁî®ÊåáÂçó&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üéØ ÂäüËÉΩÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;üöÄ Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê‚ú® &lt;strong&gt;v0.1.12ÈáçÂ§ßÂçáÁ∫ß&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÂäüËÉΩÁâπÊÄß&lt;/th&gt; 
   &lt;th&gt;Áä∂ÊÄÅ&lt;/th&gt; 
   &lt;th&gt;ËØ¶ÁªÜËØ¥Êòé&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.12&lt;/td&gt; 
   &lt;td&gt;AIÊñ∞ÈóªËøáÊª§ÔºåË¥®ÈáèËØÑ‰º∞ÔºåÁõ∏ÂÖ≥ÊÄßÂàÜÊûê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üîß Êñ∞ÈóªËøáÊª§Âô®&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.12&lt;/td&gt; 
   &lt;td&gt;Â§öÂ±ÇÊ¨°ËøáÊª§ÔºåÂü∫Á°Ä/Â¢ûÂº∫/ÈõÜÊàê‰∏âÁ∫ßÂ§ÑÁêÜ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üì∞ Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.12&lt;/td&gt; 
   &lt;td&gt;Êï¥ÂêàÂ§öÊ∫êÊñ∞ÈóªÔºåÁªü‰∏ÄÊé•Âè£ÔºåÊô∫ËÉΩÊ£ÄÁ¥¢&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ü§ñ Â§öLLMÊèê‰æõÂïÜ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.11&lt;/td&gt; 
   &lt;td&gt;4Â§ßÊèê‰æõÂïÜÔºå60+Ê®°ÂûãÔºåÊô∫ËÉΩÂàÜÁ±ªÁÆ°ÁêÜ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üíæ Ê®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.11&lt;/td&gt; 
   &lt;td&gt;URLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅÔºåÈÖçÁΩÆÂàÜ‰∫´&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üéØ Âø´ÈÄüÈÄâÊã©ÊåâÈíÆ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.11&lt;/td&gt; 
   &lt;td&gt;‰∏ÄÈîÆÂàáÊç¢ÁÉ≠Èó®Ê®°ÂûãÔºåÊèêÂçáÊìç‰ΩúÊïàÁéá&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üìä ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ v0.1.10&lt;/td&gt; 
   &lt;td&gt;ÂºÇÊ≠•ËøõÂ∫¶Ë∑üË∏™ÔºåÊô∫ËÉΩÊ≠•È™§ËØÜÂà´ÔºåÂáÜÁ°ÆÊó∂Èó¥ËÆ°ÁÆó&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üíæ Êô∫ËÉΩ‰ºöËØùÁÆ°ÁêÜ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ v0.1.10&lt;/td&gt; 
   &lt;td&gt;Áä∂ÊÄÅÊåÅ‰πÖÂåñÔºåËá™Âä®ÈôçÁ∫ßÔºåË∑®È°µÈù¢ÊÅ¢Â§ç&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üéØ ‰∏ÄÈîÆÊü•ÁúãÊä•Âëä&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ v0.1.10&lt;/td&gt; 
   &lt;td&gt;ÂàÜÊûêÂÆåÊàêÂêé‰∏ÄÈîÆÊü•ÁúãÔºåÊô∫ËÉΩÁªìÊûúÊÅ¢Â§ç&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üñ•Ô∏è StreamlitÁïåÈù¢&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Áé∞‰ª£ÂåñÂìçÂ∫îÂºèÁïåÈù¢ÔºåÂÆûÊó∂‰∫§‰∫íÂíåÊï∞ÊçÆÂèØËßÜÂåñ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‚öôÔ∏è ÈÖçÁΩÆÁÆ°ÁêÜ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;WebÁ´ØAPIÂØÜÈí•ÁÆ°ÁêÜÔºåÊ®°ÂûãÈÄâÊã©ÔºåÂèÇÊï∞ÈÖçÁΩÆ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;üé® CLIÁî®Êà∑‰ΩìÈ™å ‚ú® &lt;strong&gt;v0.1.9‰ºòÂåñ&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÂäüËÉΩÁâπÊÄß&lt;/th&gt; 
   &lt;th&gt;Áä∂ÊÄÅ&lt;/th&gt; 
   &lt;th&gt;ËØ¶ÁªÜËØ¥Êòé&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üñ•Ô∏è ÁïåÈù¢‰∏éÊó•ÂøóÂàÜÁ¶ª&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Áî®Êà∑ÁïåÈù¢Ê∏ÖÁàΩÁæéËßÇÔºåÊäÄÊúØÊó•ÂøóÁã¨Á´ãÁÆ°ÁêÜ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üîÑ Êô∫ËÉΩËøõÂ∫¶ÊòæÁ§∫&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Â§öÈò∂ÊÆµËøõÂ∫¶Ë∑üË∏™ÔºåÈò≤Ê≠¢ÈáçÂ§çÊèêÁ§∫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‚è±Ô∏è Êó∂Èó¥È¢Ñ‰º∞ÂäüËÉΩ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Êô∫ËÉΩÂàÜÊûêÈò∂ÊÆµÊòæÁ§∫È¢ÑËÆ°ËÄóÊó∂&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåà RichÂΩ©Ëâ≤ËæìÂá∫&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;ÂΩ©Ëâ≤ËøõÂ∫¶ÊåáÁ§∫ÔºåÁä∂ÊÄÅÂõæÊ†áÔºåËßÜËßâÊïàÊûúÊèêÂçá&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;üß† LLMÊ®°ÂûãÊîØÊåÅ ‚ú® &lt;strong&gt;v0.1.13ÂÖ®Èù¢ÂçáÁ∫ß&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Ê®°ÂûãÊèê‰æõÂïÜ&lt;/th&gt; 
   &lt;th&gt;ÊîØÊåÅÊ®°Âûã&lt;/th&gt; 
   &lt;th&gt;ÁâπËâ≤ÂäüËÉΩ&lt;/th&gt; 
   &lt;th&gt;Êñ∞Â¢ûÂäüËÉΩ&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá®üá≥ ÈòøÈáåÁôæÁÇº&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;qwen-turbo/plus/max&lt;/td&gt; 
   &lt;td&gt;‰∏≠Êñá‰ºòÂåñÔºåÊàêÊú¨ÊïàÁõäÈ´ò&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá®üá≥ DeepSeek&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;deepseek-chat&lt;/td&gt; 
   &lt;td&gt;Â∑•ÂÖ∑Ë∞ÉÁî®ÔºåÊÄß‰ª∑ÊØîÊûÅÈ´ò&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåç Google AI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9‰∏™È™åËØÅÊ®°Âûã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞Gemini 2.5Á≥ªÂàó&lt;/td&gt; 
   &lt;td&gt;üÜï ÂçáÁ∫ß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;ÊúÄÊñ∞ÊóóËà∞&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.5-pro/flash&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞ÊóóËà∞ÔºåË∂ÖÂø´ÂìçÂ∫î&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;Á®≥ÂÆöÊé®Ëçê&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.0-flash&lt;/td&gt; 
   &lt;td&gt;Êé®Ëçê‰ΩøÁî®ÔºåÂπ≥Ë°°ÊÄßËÉΩ&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;ÁªèÂÖ∏Âº∫Â§ß&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-1.5-pro/flash&lt;/td&gt; 
   &lt;td&gt;ÁªèÂÖ∏Á®≥ÂÆöÔºåÈ´òË¥®ÈáèÂàÜÊûê&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îî‚îÄ&lt;strong&gt;ËΩªÈáèÂø´ÈÄü&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.5-flash-lite&lt;/td&gt; 
   &lt;td&gt;ËΩªÈáèÁ∫ß‰ªªÂä°ÔºåÂø´ÈÄüÂìçÂ∫î&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåê ÂéüÁîüOpenAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Ëá™ÂÆö‰πâÁ´ØÁÇπÊîØÊåÅ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‰ªªÊÑèOpenAIÂÖºÂÆπÁ´ØÁÇπ&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåê OpenRouter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;60+Ê®°ÂûãËÅöÂêàÂπ≥Âè∞&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‰∏Ä‰∏™APIËÆøÈóÆÊâÄÊúâ‰∏ªÊµÅÊ®°Âûã&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;OpenAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;o4-mini-high, o3-pro, GPT-4o&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞oÁ≥ªÂàóÔºåÊé®ÁêÜ‰∏ì‰∏öÁâà&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;Anthropic&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Claude 4 Opus/Sonnet/Haiku&lt;/td&gt; 
   &lt;td&gt;È°∂Á∫ßÊÄßËÉΩÔºåÂπ≥Ë°°ÁâàÊú¨&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;Meta&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Llama 4 Maverick/Scout&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞Llama 4Á≥ªÂàó&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îî‚îÄ&lt;strong&gt;Ëá™ÂÆö‰πâ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‰ªªÊÑèOpenRouterÊ®°ÂûãID&lt;/td&gt; 
   &lt;td&gt;Êó†ÈôêÊâ©Â±ïÔºå‰∏™ÊÄßÂåñÈÄâÊã©&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;üéØ Âø´ÈÄüÈÄâÊã©&lt;/strong&gt;: 5‰∏™ÁÉ≠Èó®Ê®°ÂûãÂø´ÈÄüÊåâÈíÆ | &lt;strong&gt;üíæ ÊåÅ‰πÖÂåñ&lt;/strong&gt;: URLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅ | &lt;strong&gt;üîÑ Êô∫ËÉΩÂàáÊç¢&lt;/strong&gt;: ‰∏ÄÈîÆÂàáÊç¢‰∏çÂêåÊèê‰æõÂïÜ&lt;/p&gt; 
&lt;h3&gt;üìä Êï∞ÊçÆÊ∫ê‰∏éÂ∏ÇÂú∫&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Â∏ÇÂú∫Á±ªÂûã&lt;/th&gt; 
   &lt;th&gt;Êï∞ÊçÆÊ∫ê&lt;/th&gt; 
   &lt;th&gt;Ë¶ÜÁõñËåÉÂõ¥&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá®üá≥ AËÇ°&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Tushare, AkShare, ÈÄöËææ‰ø°&lt;/td&gt; 
   &lt;td&gt;Ê≤™Ê∑±‰∏§Â∏ÇÔºåÂÆûÊó∂Ë°åÊÉÖÔºåË¥¢Êä•Êï∞ÊçÆ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá≠üá∞ Ê∏ØËÇ°&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;AkShare, Yahoo Finance&lt;/td&gt; 
   &lt;td&gt;Ê∏Ø‰∫§ÊâÄÔºåÂÆûÊó∂Ë°åÊÉÖÔºåÂü∫Êú¨Èù¢&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá∫üá∏ ÁæéËÇ°&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;FinnHub, Yahoo Finance&lt;/td&gt; 
   &lt;td&gt;NYSE, NASDAQÔºåÂÆûÊó∂Êï∞ÊçÆ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üì∞ Êñ∞Èóª&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Google News&lt;/td&gt; 
   &lt;td&gt;ÂÆûÊó∂Êñ∞ÈóªÔºåÂ§öËØ≠Ë®ÄÊîØÊåÅ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;ü§ñ Êô∫ËÉΩ‰ΩìÂõ¢Èòü&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ÂàÜÊûêÂ∏àÂõ¢Èòü&lt;/strong&gt;: üìàÂ∏ÇÂú∫ÂàÜÊûê | üí∞Âü∫Êú¨Èù¢ÂàÜÊûê | üì∞Êñ∞ÈóªÂàÜÊûê | üí¨ÊÉÖÁª™ÂàÜÊûê &lt;strong&gt;Á†îÁ©∂Âõ¢Èòü&lt;/strong&gt;: üêÇÁúãÊ∂®Á†îÁ©∂Âëò | üêªÁúãË∑åÁ†îÁ©∂Âëò | üéØ‰∫§ÊòìÂÜ≥Á≠ñÂëò &lt;strong&gt;ÁÆ°ÁêÜÂ±Ç&lt;/strong&gt;: üõ°Ô∏èÈ£éÈô©ÁÆ°ÁêÜÂëò | üëîÁ†îÁ©∂‰∏ªÁÆ°&lt;/p&gt; 
&lt;h2&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; 
&lt;h3&gt;üê≥ DockerÈÉ®ÁΩ≤ (Êé®Ëçê)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂÖãÈöÜÈ°πÁõÆ
git clone https://github.com/hsliuping/TradingAgents-CN.git
cd TradingAgents-CN

# 2. ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáè
cp .env.example .env
# ÁºñËæë .env Êñá‰ª∂ÔºåÂ°´ÂÖ•APIÂØÜÈí•

# 3. ÂêØÂä®ÊúçÂä°
# È¶ñÊ¨°ÂêØÂä®Êàñ‰ª£Á†ÅÂèòÊõ¥Êó∂ÔºàÈúÄË¶ÅÊûÑÂª∫ÈïúÂÉèÔºâ
docker-compose up -d --build

# Êó•Â∏∏ÂêØÂä®ÔºàÈïúÂÉèÂ∑≤Â≠òÂú®ÔºåÊó†‰ª£Á†ÅÂèòÊõ¥Ôºâ
docker-compose up -d

# Êô∫ËÉΩÂêØÂä®ÔºàËá™Âä®Âà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅÊûÑÂª∫Ôºâ
# WindowsÁéØÂ¢É
powershell -ExecutionPolicy Bypass -File scripts\smart_start.ps1

# Linux/MacÁéØÂ¢É
chmod +x scripts/smart_start.sh &amp;amp;&amp;amp; ./scripts/smart_start.sh

# 4. ËÆøÈóÆÂ∫îÁî®
# WebÁïåÈù¢: http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üíª Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂçáÁ∫ßpip (ÈáçË¶ÅÔºÅÈÅøÂÖçÂÆâË£ÖÈîôËØØ)
python -m pip install --upgrade pip

# 2. ÂÆâË£Ö‰æùËµñ
pip install -e .

# 3. ÂêØÂä®Â∫îÁî®
python start_web.py

# 4. ËÆøÈóÆ http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üìä ÂºÄÂßãÂàÜÊûê&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÄâÊã©Ê®°Âûã&lt;/strong&gt;: DeepSeek V3 / ÈÄö‰πâÂçÉÈóÆ / Gemini&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËæìÂÖ•ËÇ°Á•®&lt;/strong&gt;: &lt;code&gt;000001&lt;/code&gt; (AËÇ°) / &lt;code&gt;AAPL&lt;/code&gt; (ÁæéËÇ°) / &lt;code&gt;0700.HK&lt;/code&gt; (Ê∏ØËÇ°)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÂßãÂàÜÊûê&lt;/strong&gt;: ÁÇπÂáª"üöÄ ÂºÄÂßãÂàÜÊûê"ÊåâÈíÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆûÊó∂Ë∑üË∏™&lt;/strong&gt;: ËßÇÂØüÂÆûÊó∂ËøõÂ∫¶ÂíåÂàÜÊûêÊ≠•È™§&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êü•ÁúãÊä•Âëä&lt;/strong&gt;: ÁÇπÂáª"üìä Êü•ÁúãÂàÜÊûêÊä•Âëä"ÊåâÈíÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂØºÂá∫Êä•Âëä&lt;/strong&gt;: ÊîØÊåÅWord/PDF/MarkdownÊ†ºÂºè&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üîê Áî®Êà∑ÊùÉÈôêÁÆ°ÁêÜ&lt;/h2&gt; 
&lt;h3&gt;üîë ÈªòËÆ§Ë¥¶Âè∑‰ø°ÊÅØ&lt;/h3&gt; 
&lt;p&gt;Á≥ªÁªüÊèê‰æõ‰ª•‰∏ãÈªòËÆ§Ë¥¶Âè∑ÔºåÈ¶ñÊ¨°ÂêØÂä®Êó∂Ëá™Âä®ÂàõÂª∫Ôºö&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Áî®Êà∑Âêç&lt;/th&gt; 
   &lt;th&gt;ÂØÜÁ†Å&lt;/th&gt; 
   &lt;th&gt;ËßíËâ≤&lt;/th&gt; 
   &lt;th&gt;ÊùÉÈôêËØ¥Êòé&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;admin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;admin123&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÁÆ°ÁêÜÂëò&lt;/td&gt; 
   &lt;td&gt;ÂÆåÊï¥Á≥ªÁªüÊùÉÈôêÔºåÁî®Êà∑ÁÆ°ÁêÜÔºåÁ≥ªÁªüÈÖçÁΩÆ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;user&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;user123&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÊôÆÈÄöÁî®Êà∑&lt;/td&gt; 
   &lt;td&gt;ËÇ°Á•®ÂàÜÊûêÔºåÊä•ÂëäÊü•ÁúãÔºåÂü∫Á°ÄÂäüËÉΩ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;ÂÆâÂÖ®ÊèêÈÜí&lt;/strong&gt;: È¶ñÊ¨°ÁôªÂΩïÂêéËØ∑Á´ãÂç≥‰øÆÊîπÈªòËÆ§ÂØÜÁ†ÅÔºÅ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üõ°Ô∏è ÊùÉÈôêÊéßÂà∂‰ΩìÁ≥ª&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üîê ÁôªÂΩïËÆ§ËØÅ&lt;/strong&gt;: Âü∫‰∫éÁî®Êà∑ÂêçÂØÜÁ†ÅÁöÑÂÆâÂÖ®ËÆ§ËØÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üë• ËßíËâ≤ÁÆ°ÁêÜ&lt;/strong&gt;: ÁÆ°ÁêÜÂëò„ÄÅÊôÆÈÄöÁî®Êà∑Á≠âÂ§öÁ∫ßÊùÉÈôê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚è∞ ‰ºöËØùÁÆ°ÁêÜ&lt;/strong&gt;: Ëá™Âä®Ë∂ÖÊó∂‰øùÊä§ÔºåÂÆâÂÖ®ÁôªÂá∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä Êìç‰ΩúÊó•Âøó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁî®Êà∑Ê¥ªÂä®ËÆ∞ÂΩï&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üõ†Ô∏è Áî®Êà∑ÁÆ°ÁêÜÂ∑•ÂÖ∑&lt;/h3&gt; 
&lt;p&gt;Á≥ªÁªüÊèê‰æõÂÆåÊï¥ÁöÑÂëΩ‰ª§Ë°åÁî®Êà∑ÁÆ°ÁêÜÂ∑•ÂÖ∑Ôºö&lt;/p&gt; 
&lt;h4&gt;Windows Áî®Êà∑&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;# ‰ΩøÁî® PowerShell ËÑöÊú¨
.\scripts\user_manager.ps1 list                    # ÂàóÂá∫ÊâÄÊúâÁî®Êà∑
.\scripts\user_manager.ps1 change-password admin   # ‰øÆÊîπÂØÜÁ†Å
.\scripts\user_manager.ps1 create newuser trader  # ÂàõÂª∫Êñ∞Áî®Êà∑
.\scripts\user_manager.ps1 delete olduser         # Âà†Èô§Áî®Êà∑

# Êàñ‰ΩøÁî®ÊâπÂ§ÑÁêÜÊñá‰ª∂
.\scripts\user_manager.bat list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Python ËÑöÊú¨ÔºàË∑®Âπ≥Âè∞Ôºâ&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Áõ¥Êé•‰ΩøÁî® Python ËÑöÊú¨
python scripts/user_password_manager.py list
python scripts/user_password_manager.py change-password admin
python scripts/user_password_manager.py create newuser --role trader
python scripts/user_password_manager.py delete olduser
python scripts/user_password_manager.py reset  # ÈáçÁΩÆ‰∏∫ÈªòËÆ§ÈÖçÁΩÆ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üìã ÊîØÊåÅÁöÑÁî®Êà∑Êìç‰Ωú&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìù ÂàóÂá∫Áî®Êà∑&lt;/strong&gt;: Êü•ÁúãÊâÄÊúâÁî®Êà∑ÂèäÂÖ∂ËßíËâ≤ÊùÉÈôê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîë ‰øÆÊîπÂØÜÁ†Å&lt;/strong&gt;: ÂÆâÂÖ®ÁöÑÂØÜÁ†ÅÊõ¥Êñ∞Êú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üë§ ÂàõÂª∫Áî®Êà∑&lt;/strong&gt;: ÊîØÊåÅËá™ÂÆö‰πâËßíËâ≤ÂíåÊùÉÈôê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üóëÔ∏è Âà†Èô§Áî®Êà∑&lt;/strong&gt;: ÂÆâÂÖ®ÁöÑÁî®Êà∑Âà†Èô§ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ ÈáçÁΩÆÈÖçÁΩÆ&lt;/strong&gt;: ÊÅ¢Â§çÈªòËÆ§Áî®Êà∑ËÆæÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìÅ ÈÖçÁΩÆÊñá‰ª∂‰ΩçÁΩÆ&lt;/h3&gt; 
&lt;p&gt;Áî®Êà∑ÈÖçÁΩÆÂ≠òÂÇ®Âú®Ôºö&lt;code&gt;web/config/users.json&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;ËØ¶ÁªÜÊñáÊ°£&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁî®Êà∑ÁÆ°ÁêÜÊåáÂçóËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/scripts/USER_MANAGEMENT.md"&gt;scripts/USER_MANAGEMENT.md&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üöß ÂΩìÂâçÁâàÊú¨ÈôêÂà∂&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ùå ÊöÇ‰∏çÊîØÊåÅÂú®Á∫øÁî®Êà∑Ê≥®ÂÜå&lt;/li&gt; 
 &lt;li&gt;‚ùå ÊöÇ‰∏çÊîØÊåÅWebÁïåÈù¢ÁöÑËßíËâ≤ÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅÂÆåÊï¥ÁöÑÂëΩ‰ª§Ë°åÁî®Êà∑ÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅÂÆåÊï¥ÁöÑÊùÉÈôêÊéßÂà∂Ê°ÜÊû∂&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéØ Ê†∏ÂøÉ‰ºòÂäø&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê&lt;/strong&gt;: v0.1.12Êñ∞Â¢ûAIÈ©±Âä®ÁöÑÊñ∞ÈóªËøáÊª§ÂíåË¥®ÈáèËØÑ‰º∞Á≥ªÁªü&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß Â§öÂ±ÇÊ¨°ËøáÊª§&lt;/strong&gt;: Âü∫Á°Ä„ÄÅÂ¢ûÂº∫„ÄÅÈõÜÊàê‰∏âÁ∫ßÊñ∞ÈóªËøáÊª§Êú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üì∞ Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑&lt;/strong&gt;: Êï¥ÂêàÂ§öÊ∫êÊñ∞ÈóªÔºåÊèê‰æõÁªü‰∏ÄÁöÑÊô∫ËÉΩÊ£ÄÁ¥¢Êé•Âè£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üÜï Â§öLLMÈõÜÊàê&lt;/strong&gt;: v0.1.11Êñ∞Â¢û4Â§ßÊèê‰æõÂïÜÔºå60+Ê®°ÂûãÔºå‰∏ÄÁ´ôÂºèAI‰ΩìÈ™å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ ÈÖçÁΩÆÊåÅ‰πÖÂåñ&lt;/strong&gt;: Ê®°ÂûãÈÄâÊã©ÁúüÊ≠£ÊåÅ‰πÖÂåñÔºåURLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ Âø´ÈÄüÂàáÊç¢&lt;/strong&gt;: 5‰∏™ÁÉ≠Èó®Ê®°ÂûãÂø´ÈÄüÊåâÈíÆÔºå‰∏ÄÈîÆÂàáÊç¢‰∏çÂêåAI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üÜï ÂÆûÊó∂ËøõÂ∫¶&lt;/strong&gt;: v0.1.10ÂºÇÊ≠•ËøõÂ∫¶Ë∑üË∏™ÔºåÂëäÂà´ÈªëÁõíÁ≠âÂæÖ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ Êô∫ËÉΩ‰ºöËØù&lt;/strong&gt;: Áä∂ÊÄÅÊåÅ‰πÖÂåñÔºåÈ°µÈù¢Âà∑Êñ∞‰∏ç‰∏¢Â§±ÂàÜÊûêÁªìÊûú&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîê Áî®Êà∑ÊùÉÈôê&lt;/strong&gt;: v0.1.14Êñ∞Â¢ûÂÆåÊï¥ÁöÑÁî®Êà∑ËÆ§ËØÅÂíåÊùÉÈôêÁÆ°ÁêÜ‰ΩìÁ≥ª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üá®üá≥ ‰∏≠ÂõΩ‰ºòÂåñ&lt;/strong&gt;: AËÇ°/Ê∏ØËÇ°Êï∞ÊçÆ + ÂõΩ‰∫ßLLM + ‰∏≠ÊñáÁïåÈù¢&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üê≥ ÂÆπÂô®Âåñ&lt;/strong&gt;: Docker‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÁéØÂ¢ÉÈöîÁ¶ªÔºåÂø´ÈÄüÊâ©Â±ï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÑ ‰∏ì‰∏öÊä•Âëä&lt;/strong&gt;: Â§öÊ†ºÂºèÂØºÂá∫ÔºåËá™Âä®ÁîüÊàêÊäïËµÑÂª∫ËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Á®≥ÂÆöÂèØÈù†&lt;/strong&gt;: Â§öÂ±ÇÊï∞ÊçÆÊ∫êÔºåÊô∫ËÉΩÈôçÁ∫ßÔºåÈîôËØØÊÅ¢Â§ç&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîß ÊäÄÊúØÊû∂ÊûÑ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Ê†∏ÂøÉÊäÄÊúØ&lt;/strong&gt;: Python 3.10+ | LangChain | Streamlit | MongoDB | Redis &lt;strong&gt;AIÊ®°Âûã&lt;/strong&gt;: DeepSeek V3 | ÈòøÈáåÁôæÁÇº | Google AI | OpenRouter(60+Ê®°Âûã) | OpenAI &lt;strong&gt;Êï∞ÊçÆÊ∫ê&lt;/strong&gt;: Tushare | AkShare | FinnHub | Yahoo Finance &lt;strong&gt;ÈÉ®ÁΩ≤&lt;/strong&gt;: Docker | Docker Compose | Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/p&gt; 
&lt;h2&gt;üìö ÊñáÊ°£ÂíåÊîØÊåÅ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìñ ÂÆåÊï¥ÊñáÊ°£&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;docs/&lt;/a&gt; - ÂÆâË£ÖÊåáÂçó„ÄÅ‰ΩøÁî®ÊïôÁ®ã„ÄÅAPIÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üö® ÊïÖÈöúÊéíÈô§&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/troubleshooting/"&gt;troubleshooting/&lt;/a&gt; - Â∏∏ËßÅÈóÆÈ¢òËß£ÂÜ≥ÊñπÊ°à&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Êõ¥Êñ∞Êó•Âøó&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/releases/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; - ËØ¶ÁªÜÁâàÊú¨ÂéÜÂè≤&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/QUICKSTART.md"&gt;QUICKSTART.md&lt;/a&gt; - 5ÂàÜÈíüÂø´ÈÄüÈÉ®ÁΩ≤ÊåáÂçó&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üÜö ‰∏≠ÊñáÂ¢ûÂº∫ÁâπËâ≤&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Áõ∏ÊØîÂéüÁâàÊñ∞Â¢û&lt;/strong&gt;: Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê | Â§öÂ±ÇÊ¨°Êñ∞ÈóªËøáÊª§ | Êñ∞ÈóªË¥®ÈáèËØÑ‰º∞ | Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑ | Â§öLLMÊèê‰æõÂïÜÈõÜÊàê | Ê®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ | Âø´ÈÄüÂàáÊç¢ÊåâÈíÆ | | ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫ | Êô∫ËÉΩ‰ºöËØùÁÆ°ÁêÜ | ‰∏≠ÊñáÁïåÈù¢ | AËÇ°Êï∞ÊçÆ | ÂõΩ‰∫ßLLM | DockerÈÉ®ÁΩ≤ | ‰∏ì‰∏öÊä•ÂëäÂØºÂá∫ | Áªü‰∏ÄÊó•ÂøóÁÆ°ÁêÜ | WebÈÖçÁΩÆÁïåÈù¢ | ÊàêÊú¨‰ºòÂåñ&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DockerÈÉ®ÁΩ≤ÂåÖÂê´ÁöÑÊúçÂä°&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üåê &lt;strong&gt;WebÂ∫îÁî®&lt;/strong&gt;: TradingAgents-CN‰∏ªÁ®ãÂ∫è&lt;/li&gt; 
 &lt;li&gt;üóÑÔ∏è &lt;strong&gt;MongoDB&lt;/strong&gt;: Êï∞ÊçÆÊåÅ‰πÖÂåñÂ≠òÂÇ®&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Redis&lt;/strong&gt;: È´òÈÄüÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;MongoDB Express&lt;/strong&gt;: Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁïåÈù¢&lt;/li&gt; 
 &lt;li&gt;üéõÔ∏è &lt;strong&gt;Redis Commander&lt;/strong&gt;: ÁºìÂ≠òÁÆ°ÁêÜÁïåÈù¢&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üíª ÊñπÂºè‰∫åÔºöÊú¨Âú∞ÈÉ®ÁΩ≤&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;ÈÄÇÁî®Âú∫ÊôØ&lt;/strong&gt;: ÂºÄÂèëÁéØÂ¢É„ÄÅËá™ÂÆö‰πâÈÖçÁΩÆ„ÄÅÁ¶ªÁ∫ø‰ΩøÁî®&lt;/p&gt; 
&lt;h3&gt;ÁéØÂ¢ÉË¶ÅÊ±Ç&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python 3.10+ (Êé®Ëçê 3.11)&lt;/li&gt; 
 &lt;li&gt;4GB+ RAM (Êé®Ëçê 8GB+)&lt;/li&gt; 
 &lt;li&gt;Á®≥ÂÆöÁöÑÁΩëÁªúËøûÊé•&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂÆâË£ÖÊ≠•È™§&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂÖãÈöÜÈ°πÁõÆ
git clone https://github.com/hsliuping/TradingAgents-CN.git
cd TradingAgents-CN

# 2. ÂàõÂª∫ËôöÊãüÁéØÂ¢É
python -m venv env
# Windows
env\Scripts\activate
# Linux/macOS
source env/bin/activate

# 3. ÂçáÁ∫ßpip
python -m pip install --upgrade pip

# 4. ÂÆâË£ÖÊâÄÊúâ‰æùËµñ
pip install -r requirements.txt
#ÊàñËÄÖ‰ΩøÁî®pip install -e .
pip install -e .

# Ê≥®ÊÑèÔºörequirements.txtÂ∑≤ÂåÖÂê´ÊâÄÊúâÂøÖÈúÄ‰æùËµñÔºö
# - Êï∞ÊçÆÂ∫ìÊîØÊåÅ (MongoDB + Redis)
# - Â§öÂ∏ÇÂú∫Êï∞ÊçÆÊ∫ê (Tushare, AKShare, FinnHubÁ≠â)
# - WebÁïåÈù¢ÂíåÊä•ÂëäÂØºÂá∫ÂäüËÉΩ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÈÖçÁΩÆAPIÂØÜÈí•&lt;/h3&gt; 
&lt;h4&gt;üá®üá≥ Êé®ËçêÔºö‰ΩøÁî®ÈòøÈáåÁôæÁÇºÔºàÂõΩ‰∫ßÂ§ßÊ®°ÂûãÔºâ&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Â§çÂà∂ÈÖçÁΩÆÊ®°Êùø
cp .env.example .env

# ÁºñËæë .env Êñá‰ª∂ÔºåÈÖçÁΩÆ‰ª•‰∏ãÂøÖÈúÄÁöÑAPIÂØÜÈí•Ôºö
DASHSCOPE_API_KEY=your_dashscope_api_key_here
FINNHUB_API_KEY=your_finnhub_api_key_here

# Êé®ËçêÔºöTushare APIÔºà‰∏ì‰∏öAËÇ°Êï∞ÊçÆÔºâ
TUSHARE_TOKEN=your_tushare_token_here
TUSHARE_ENABLED=true

# ÂèØÈÄâÔºöÂÖ∂‰ªñAIÊ®°ÂûãAPI
GOOGLE_API_KEY=your_google_api_key_here
DEEPSEEK_API_KEY=your_deepseek_api_key_here

# Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàÂèØÈÄâÔºåÊèêÂçáÊÄßËÉΩÔºâ
# Êú¨Âú∞ÈÉ®ÁΩ≤‰ΩøÁî®Ê†áÂáÜÁ´ØÂè£
MONGODB_ENABLED=false  # ËÆæ‰∏∫trueÂêØÁî®MongoDB
REDIS_ENABLED=false    # ËÆæ‰∏∫trueÂêØÁî®Redis
MONGODB_HOST=localhost
MONGODB_PORT=27017     # Ê†áÂáÜMongoDBÁ´ØÂè£
REDIS_HOST=localhost
REDIS_PORT=6379        # Ê†áÂáÜRedisÁ´ØÂè£

# DockerÈÉ®ÁΩ≤Êó∂ÈúÄË¶Å‰øÆÊîπ‰∏ªÊú∫Âêç
# MONGODB_HOST=mongodb
# REDIS_HOST=redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üìã ÈÉ®ÁΩ≤Ê®°ÂºèÈÖçÁΩÆËØ¥Êòé&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Êú¨Âú∞ÈÉ®ÁΩ≤Ê®°Âºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàÊú¨Âú∞ÈÉ®ÁΩ≤Ôºâ
MONGODB_ENABLED=true
REDIS_ENABLED=true
MONGODB_HOST=localhost      # Êú¨Âú∞‰∏ªÊú∫
MONGODB_PORT=27017         # Ê†áÂáÜÁ´ØÂè£
REDIS_HOST=localhost       # Êú¨Âú∞‰∏ªÊú∫
REDIS_PORT=6379           # Ê†áÂáÜÁ´ØÂè£
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;DockerÈÉ®ÁΩ≤Ê®°Âºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàDockerÈÉ®ÁΩ≤Ôºâ
MONGODB_ENABLED=true
REDIS_ENABLED=true
MONGODB_HOST=mongodb       # DockerÂÆπÂô®ÊúçÂä°Âêç
MONGODB_PORT=27017        # Ê†áÂáÜÁ´ØÂè£
REDIS_HOST=redis          # DockerÂÆπÂô®ÊúçÂä°Âêç
REDIS_PORT=6379          # Ê†áÂáÜÁ´ØÂè£
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° &lt;strong&gt;ÈÖçÁΩÆÊèêÁ§∫&lt;/strong&gt;Ôºö&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Êú¨Âú∞ÈÉ®ÁΩ≤ÔºöÈúÄË¶ÅÊâãÂä®ÂêØÂä®MongoDBÂíåRedisÊúçÂä°&lt;/li&gt; 
  &lt;li&gt;DockerÈÉ®ÁΩ≤ÔºöÊï∞ÊçÆÂ∫ìÊúçÂä°ÈÄöËøádocker-composeËá™Âä®ÂêØÂä®&lt;/li&gt; 
  &lt;li&gt;Á´ØÂè£ÂÜ≤Á™ÅÔºöÂ¶ÇÊûúÊú¨Âú∞Â∑≤ÊúâÊï∞ÊçÆÂ∫ìÊúçÂä°ÔºåÂèØ‰øÆÊîπdocker-compose.yml‰∏≠ÁöÑÁ´ØÂè£Êò†Â∞Ñ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;üåç ÂèØÈÄâÔºö‰ΩøÁî®ÂõΩÂ§ñÊ®°Âûã&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# OpenAI (ÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë)
OPENAI_API_KEY=your_openai_api_key

# Anthropic (ÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë)
ANTHROPIC_API_KEY=your_anthropic_api_key
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üóÑÔ∏è Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàMongoDB + RedisÔºâ&lt;/h3&gt; 
&lt;h4&gt;È´òÊÄßËÉΩÊï∞ÊçÆÂ≠òÂÇ®ÊîØÊåÅ&lt;/h4&gt; 
&lt;p&gt;Êú¨È°πÁõÆÊîØÊåÅ &lt;strong&gt;MongoDB&lt;/strong&gt; Âíå &lt;strong&gt;Redis&lt;/strong&gt; Êï∞ÊçÆÂ∫ìÔºåÊèê‰æõÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìä ËÇ°Á•®Êï∞ÊçÆÁºìÂ≠ò&lt;/strong&gt;: ÂáèÂ∞ëAPIË∞ÉÁî®ÔºåÊèêÂçáÂìçÂ∫îÈÄüÂ∫¶&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Êô∫ËÉΩÈôçÁ∫ßÊú∫Âà∂&lt;/strong&gt;: MongoDB ‚Üí API ‚Üí Êú¨Âú∞ÁºìÂ≠òÁöÑÂ§öÂ±ÇÊï∞ÊçÆÊ∫ê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° È´òÊÄßËÉΩÁºìÂ≠ò&lt;/strong&gt;: RedisÁºìÂ≠òÁÉ≠ÁÇπÊï∞ÊçÆÔºåÊØ´ÁßíÁ∫ßÂìçÂ∫î&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Êï∞ÊçÆÊåÅ‰πÖÂåñ&lt;/strong&gt;: MongoDBÂ≠òÂÇ®ÂéÜÂè≤Êï∞ÊçÆÔºåÊîØÊåÅÁ¶ªÁ∫øÂàÜÊûê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÈÉ®ÁΩ≤ÊñπÂºè&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;üê≥ DockerÈÉ®ÁΩ≤ÔºàÊé®ËçêÔºâ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®DockerÈÉ®ÁΩ≤ÔºåÊï∞ÊçÆÂ∫ìÂ∑≤Ëá™Âä®ÂåÖÂê´Âú®ÂÜÖÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# DockerÈÉ®ÁΩ≤‰ºöËá™Âä®ÂêØÂä®ÊâÄÊúâÊúçÂä°ÔºåÂåÖÊã¨Ôºö
docker-compose up -d --build
# - WebÂ∫îÁî® (Á´ØÂè£8501)
# - MongoDB (Á´ØÂè£27017)
# - Redis (Á´ØÂè£6379)
# - Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁïåÈù¢ (Á´ØÂè£8081, 8082)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;üíª Êú¨Âú∞ÈÉ®ÁΩ≤ - Êï∞ÊçÆÂ∫ìÈÖçÁΩÆ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®Êú¨Âú∞ÈÉ®ÁΩ≤ÔºåÂèØ‰ª•ÈÄâÊã©‰ª•‰∏ãÊñπÂºèÔºö&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÊñπÂºè‰∏ÄÔºö‰ªÖÂêØÂä®Êï∞ÊçÆÂ∫ìÊúçÂä°&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ‰ªÖÂêØÂä® MongoDB + Redis ÊúçÂä°Ôºà‰∏çÂêØÂä®WebÂ∫îÁî®Ôºâ
docker-compose up -d mongodb redis mongo-express redis-commander

# Êü•ÁúãÊúçÂä°Áä∂ÊÄÅ
docker-compose ps

# ÂÅúÊ≠¢ÊúçÂä°
docker-compose down
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÊñπÂºè‰∫åÔºöÂÆåÂÖ®Êú¨Âú∞ÂÆâË£Ö&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êï∞ÊçÆÂ∫ì‰æùËµñÂ∑≤ÂåÖÂê´Âú®requirements.txt‰∏≠ÔºåÊó†ÈúÄÈ¢ùÂ§ñÂÆâË£Ö

# ÂêØÂä® MongoDB (ÈªòËÆ§Á´ØÂè£ 27017)
mongod --dbpath ./data/mongodb

# ÂêØÂä® Redis (ÈªòËÆ§Á´ØÂè£ 6379)
redis-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;ÈáçË¶ÅËØ¥Êòé&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;üê≥ DockerÈÉ®ÁΩ≤&lt;/strong&gt;: Êï∞ÊçÆÂ∫ìËá™Âä®ÂåÖÂê´ÔºåÊó†ÈúÄÈ¢ùÂ§ñÈÖçÁΩÆ&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;üíª Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/strong&gt;: ÂèØÈÄâÊã©‰ªÖÂêØÂä®Êï∞ÊçÆÂ∫ìÊúçÂä°ÊàñÂÆåÂÖ®Êú¨Âú∞ÂÆâË£Ö&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;üìã Êé®Ëçê&lt;/strong&gt;: ‰ΩøÁî®DockerÈÉ®ÁΩ≤‰ª•Ëé∑ÂæóÊúÄ‰Ω≥‰ΩìÈ™åÂíå‰∏ÄËá¥ÊÄß&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÈÄâÈ°π&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ&lt;/strong&gt;ÔºàÊé®ËçêÔºâÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# MongoDB ÈÖçÁΩÆ
MONGODB_HOST=localhost
MONGODB_PORT=27017
MONGODB_DATABASE=trading_agents
MONGODB_USERNAME=admin
MONGODB_PASSWORD=your_password

# Redis ÈÖçÁΩÆ
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DB=0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÈÖçÁΩÆÊñá‰ª∂ÊñπÂºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# config/database_config.py
DATABASE_CONFIG = {
    'mongodb': {
        'host': 'localhost',
        'port': 27017,
        'database': 'trading_agents',
        'username': 'admin',
        'password': 'your_password'
    },
    'redis': {
        'host': 'localhost',
        'port': 6379,
        'password': 'your_redis_password',
        'db': 0
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÂäüËÉΩÁâπÊÄß&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;MongoDB ÂäüËÉΩ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ ËÇ°Á•®Âü∫Á°Ä‰ø°ÊÅØÂ≠òÂÇ®&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÂéÜÂè≤‰ª∑Ê†ºÊï∞ÊçÆÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÂàÜÊûêÁªìÊûúÊåÅ‰πÖÂåñ&lt;/li&gt; 
 &lt;li&gt;‚úÖ Áî®Êà∑ÈÖçÁΩÆÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚úÖ Ëá™Âä®Êï∞ÊçÆÂêåÊ≠•&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Redis ÂäüËÉΩ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ö° ÂÆûÊó∂‰ª∑Ê†ºÊï∞ÊçÆÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;‚ö° APIÂìçÂ∫îÁªìÊûúÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;‚ö° ‰ºöËØùÁä∂ÊÄÅÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚ö° ÁÉ≠ÁÇπÊï∞ÊçÆÈ¢ÑÂä†ËΩΩ&lt;/li&gt; 
 &lt;li&gt;‚ö° ÂàÜÂ∏ÉÂºèÈîÅÊîØÊåÅ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Êô∫ËÉΩÈôçÁ∫ßÊú∫Âà∂&lt;/h4&gt; 
&lt;p&gt;Á≥ªÁªüÈááÁî®Â§öÂ±ÇÊï∞ÊçÆÊ∫êÈôçÁ∫ßÁ≠ñÁï•ÔºåÁ°Æ‰øùÈ´òÂèØÁî®ÊÄßÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;üìä Êï∞ÊçÆËé∑ÂèñÊµÅÁ®ãÔºö
1. üîç Ê£ÄÊü• Redis ÁºìÂ≠ò (ÊØ´ÁßíÁ∫ß)
2. üìö Êü•ËØ¢ MongoDB Â≠òÂÇ® (ÁßíÁ∫ß)
3. üåê Ë∞ÉÁî®ÈÄöËææ‰ø°API (ÁßíÁ∫ß)
4. üíæ Êú¨Âú∞Êñá‰ª∂ÁºìÂ≠ò (Â§áÁî®)
5. ‚ùå ËøîÂõûÈîôËØØ‰ø°ÊÅØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÈÖçÁΩÆÈôçÁ∫ßÁ≠ñÁï•&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Âú® .env Êñá‰ª∂‰∏≠ÈÖçÁΩÆ
ENABLE_MONGODB=true
ENABLE_REDIS=true
ENABLE_FALLBACK=true

# ÁºìÂ≠òËøáÊúüÊó∂Èó¥ÔºàÁßíÔºâ
REDIS_CACHE_TTL=300
MONGODB_CACHE_TTL=3600
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÊÄßËÉΩ‰ºòÂåñÂª∫ËÆÆ&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Áîü‰∫ßÁéØÂ¢ÉÈÖçÁΩÆ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# MongoDB ‰ºòÂåñ
MONGODB_MAX_POOL_SIZE=50
MONGODB_MIN_POOL_SIZE=5
MONGODB_MAX_IDLE_TIME=30000

# Redis ‰ºòÂåñ
REDIS_MAX_CONNECTIONS=20
REDIS_CONNECTION_POOL_SIZE=10
REDIS_SOCKET_TIMEOUT=5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÂ∑•ÂÖ∑&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÂàùÂßãÂåñÊï∞ÊçÆÂ∫ì
python scripts/setup/init_database.py

# Á≥ªÁªüÁä∂ÊÄÅÊ£ÄÊü•
python scripts/validation/check_system_status.py

# Ê∏ÖÁêÜÁºìÂ≠òÂ∑•ÂÖ∑
python scripts/maintenance/cleanup_cache.py --days 7
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÊïÖÈöúÊéíÈô§&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Â∏∏ËßÅÈóÆÈ¢òËß£ÂÜ≥&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ü™ü Windows 10 ChromaDBÂÖºÂÆπÊÄßÈóÆÈ¢ò&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;ÈóÆÈ¢òÁé∞Ë±°&lt;/strong&gt;ÔºöÂú®Windows 10‰∏äÂá∫Áé∞ &lt;code&gt;Configuration error: An instance of Chroma already exists for ephemeral with different settings&lt;/code&gt; ÈîôËØØÔºåËÄåWindows 11Ê≠£Â∏∏„ÄÇ&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Âø´ÈÄüËß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;Ôºö&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# ÊñπÊ°à1ÔºöÁ¶ÅÁî®ÂÜÖÂ≠òÂäüËÉΩÔºàÊé®ËçêÔºâ
# Âú® .env Êñá‰ª∂‰∏≠Ê∑ªÂä†Ôºö
MEMORY_ENABLED=false

# ÊñπÊ°à2Ôºö‰ΩøÁî®‰∏ìÁî®‰øÆÂ§çËÑöÊú¨
powershell -ExecutionPolicy Bypass -File scripts\fix_chromadb_win10.ps1

# ÊñπÊ°à3ÔºöÁÆ°ÁêÜÂëòÊùÉÈôêËøêË°å
# Âè≥ÈîÆPowerShell -&amp;gt; "‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°å"
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;ËØ¶ÁªÜËß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;ÔºöÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/troubleshooting/windows10-chromadb-fix.md"&gt;Windows 10ÂÖºÂÆπÊÄßÊåáÂçó&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MongoDBËøûÊé•Â§±Ë¥•&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;DockerÈÉ®ÁΩ≤&lt;/strong&gt;Ôºö&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
docker-compose logs mongodb

# ÈáçÂêØÊúçÂä°
docker-compose restart mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/strong&gt;Ôºö&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•MongoDBËøõÁ®ã
ps aux | grep mongod

# ÈáçÂêØMongoDB
sudo systemctl restart mongod  # Linux
brew services restart mongodb  # macOS
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RedisËøûÊé•Ë∂ÖÊó∂&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•RedisÁä∂ÊÄÅ
redis-cli ping

# Ê∏ÖÁêÜRedisÁºìÂ≠ò
redis-cli flushdb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÁºìÂ≠òÈóÆÈ¢ò&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•Á≥ªÁªüÁä∂ÊÄÅÂíåÁºìÂ≠ò
python scripts/validation/check_system_status.py

# Ê∏ÖÁêÜËøáÊúüÁºìÂ≠ò
python scripts/maintenance/cleanup_cache.py --days 7
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° &lt;strong&gt;ÊèêÁ§∫&lt;/strong&gt;: Âç≥‰Ωø‰∏çÈÖçÁΩÆÊï∞ÊçÆÂ∫ìÔºåÁ≥ªÁªü‰ªçÂèØÊ≠£Â∏∏ËøêË°åÔºå‰ºöËá™Âä®ÈôçÁ∫ßÂà∞APIÁõ¥Êé•Ë∞ÉÁî®Ê®°Âºè„ÄÇÊï∞ÊçÆÂ∫ìÈÖçÁΩÆÊòØÂèØÈÄâÁöÑÊÄßËÉΩ‰ºòÂåñÂäüËÉΩ„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;ËØ¶ÁªÜÊñáÊ°£&lt;/strong&gt;: Êõ¥Â§öÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ‰ø°ÊÅØËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/database-architecture.md"&gt;Êï∞ÊçÆÂ∫ìÊû∂ÊûÑÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üì§ Êä•ÂëäÂØºÂá∫ÂäüËÉΩ&lt;/h3&gt; 
&lt;h4&gt;Êñ∞Â¢ûÂäüËÉΩÔºö‰∏ì‰∏öÂàÜÊûêÊä•ÂëäÂØºÂá∫&lt;/h4&gt; 
&lt;p&gt;Êú¨È°πÁõÆÁé∞Â∑≤ÊîØÊåÅÂ∞ÜËÇ°Á•®ÂàÜÊûêÁªìÊûúÂØºÂá∫‰∏∫Â§öÁßç‰∏ì‰∏öÊ†ºÂºèÔºö&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÊîØÊåÅÁöÑÂØºÂá∫Ê†ºÂºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìÑ Markdown (.md)&lt;/strong&gt; - ËΩªÈáèÁ∫ßÊ†áËÆ∞ËØ≠Ë®ÄÔºåÈÄÇÂêàÊäÄÊúØÁî®Êà∑ÂíåÁâàÊú¨ÊéßÂà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìù Word (.docx)&lt;/strong&gt; - Microsoft WordÊñáÊ°£ÔºåÈÄÇÂêàÂïÜÂä°Êä•ÂëäÂíåËøõ‰∏ÄÊ≠•ÁºñËæë&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä PDF (.pdf)&lt;/strong&gt; - ‰æøÊê∫ÂºèÊñáÊ°£Ê†ºÂºèÔºåÈÄÇÂêàÊ≠£ÂºèÂàÜ‰∫´ÂíåÊâìÂç∞&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Êä•ÂëäÂÜÖÂÆπÁªìÊûÑ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üéØ &lt;strong&gt;ÊäïËµÑÂÜ≥Á≠ñÊëòË¶Å&lt;/strong&gt; - ‰π∞ÂÖ•/ÊåÅÊúâ/ÂçñÂá∫Âª∫ËÆÆÔºåÁΩÆ‰ø°Â∫¶ÔºåÈ£éÈô©ËØÑÂàÜ&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;ËØ¶ÁªÜÂàÜÊûêÊä•Âëä&lt;/strong&gt; - ÊäÄÊúØÂàÜÊûêÔºåÂü∫Êú¨Èù¢ÂàÜÊûêÔºåÂ∏ÇÂú∫ÊÉÖÁª™ÔºåÊñ∞Èóª‰∫ã‰ª∂&lt;/li&gt; 
 &lt;li&gt;‚ö†Ô∏è &lt;strong&gt;È£éÈô©ÊèêÁ§∫&lt;/strong&gt; - ÂÆåÊï¥ÁöÑÊäïËµÑÈ£éÈô©Â£∞ÊòéÂíåÂÖçË¥£Êù°Ê¨æ&lt;/li&gt; 
 &lt;li&gt;üìã &lt;strong&gt;ÈÖçÁΩÆ‰ø°ÊÅØ&lt;/strong&gt; - ÂàÜÊûêÂèÇÊï∞ÔºåÊ®°Âûã‰ø°ÊÅØÔºåÁîüÊàêÊó∂Èó¥&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÂÆåÊàêËÇ°Á•®ÂàÜÊûêÂêéÔºåÂú®ÁªìÊûúÈ°µÈù¢Â∫ïÈÉ®ÊâæÂà∞"üì§ ÂØºÂá∫Êä•Âëä"ÈÉ®ÂàÜ&lt;/li&gt; 
 &lt;li&gt;ÈÄâÊã©ÈúÄË¶ÅÁöÑÊ†ºÂºèÔºöMarkdown„ÄÅWordÊàñPDF&lt;/li&gt; 
 &lt;li&gt;ÁÇπÂáªÂØºÂá∫ÊåâÈíÆÔºåÁ≥ªÁªüËá™Âä®ÁîüÊàêÂπ∂Êèê‰æõ‰∏ãËΩΩ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;ÂÆâË£ÖÂØºÂá∫‰æùËµñ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÂÆâË£ÖPython‰æùËµñ
pip install markdown pypandoc

# ÂÆâË£ÖÁ≥ªÁªüÂ∑•ÂÖ∑ÔºàÁî®‰∫éPDFÂØºÂá∫Ôºâ
# Windows: choco install pandoc wkhtmltopdf
# macOS: brew install pandoc wkhtmltopdf
# Linux: sudo apt-get install pandoc wkhtmltopdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;ËØ¶ÁªÜÊñáÊ°£&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÂØºÂá∫ÂäüËÉΩ‰ΩøÁî®ÊåáÂçóËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/EXPORT_GUIDE.md"&gt;ÂØºÂá∫ÂäüËÉΩÊåáÂçó&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üöÄ ÂêØÂä®Â∫îÁî®&lt;/h3&gt; 
&lt;h4&gt;üê≥ DockerÂêØÂä®ÔºàÊé®ËçêÔºâ&lt;/h4&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®DockerÈÉ®ÁΩ≤ÔºåÂ∫îÁî®Â∑≤ÁªèËá™Âä®ÂêØÂä®Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Â∫îÁî®Â∑≤Âú®Docker‰∏≠ËøêË°åÔºåÁõ¥Êé•ËÆøÈóÆÔºö
# WebÁïåÈù¢: http://localhost:8501
# Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜ: http://localhost:8081
# ÁºìÂ≠òÁÆ°ÁêÜ: http://localhost:8082

# Êü•ÁúãËøêË°åÁä∂ÊÄÅ
docker-compose ps

# Êü•ÁúãÊó•Âøó
docker-compose logs -f web
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üíª Êú¨Âú∞ÂêØÂä®&lt;/h4&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®Êú¨Âú∞ÈÉ®ÁΩ≤Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÊøÄÊ¥ªËôöÊãüÁéØÂ¢É
# Windows
.\env\Scripts\activate
# Linux/macOS
source env/bin/activate

# 2. ÂÆâË£ÖÈ°πÁõÆÂà∞ËôöÊãüÁéØÂ¢ÉÔºàÈáçË¶ÅÔºÅÔºâ
pip install -e .

# 3. ÂêØÂä®WebÁÆ°ÁêÜÁïåÈù¢
# ÊñπÊ≥ï1Ôºö‰ΩøÁî®È°πÁõÆÂêØÂä®ËÑöÊú¨ÔºàÊé®ËçêÔºâ
python start_web.py

# ÊñπÊ≥ï2Ôºö‰ΩøÁî®ÂéüÂßãÂêØÂä®ËÑöÊú¨
python web/run_web.py

# ÊñπÊ≥ï3ÔºöÁõ¥Êé•‰ΩøÁî®streamlitÔºàÈúÄË¶ÅÂÖàÂÆâË£ÖÈ°πÁõÆÔºâ
streamlit run web/app.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÁÑ∂ÂêéÂú®ÊµèËßàÂô®‰∏≠ËÆøÈóÆ &lt;code&gt;http://localhost:8501&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WebÁïåÈù¢ÁâπËâ≤ÂäüËÉΩ&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üá∫üá∏ &lt;strong&gt;ÁæéËÇ°ÂàÜÊûê&lt;/strong&gt;: ÊîØÊåÅ AAPL, TSLA, NVDA Á≠âÁæéËÇ°‰ª£Á†Å&lt;/li&gt; 
 &lt;li&gt;üá®üá≥ &lt;strong&gt;AËÇ°ÂàÜÊûê&lt;/strong&gt;: ÊîØÊåÅ 000001, 600519, 300750 Á≠âAËÇ°‰ª£Á†Å&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;ÂÆûÊó∂Êï∞ÊçÆ&lt;/strong&gt;: ÈÄöËææ‰ø°APIÊèê‰æõAËÇ°ÂÆûÊó∂Ë°åÊÉÖÊï∞ÊçÆ&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;strong&gt;Êô∫ËÉΩ‰ΩìÈÄâÊã©&lt;/strong&gt;: ÂèØÈÄâÊã©‰∏çÂêåÁöÑÂàÜÊûêÂ∏àÁªÑÂêà&lt;/li&gt; 
 &lt;li&gt;üì§ &lt;strong&gt;Êä•ÂëäÂØºÂá∫&lt;/strong&gt;: ‰∏ÄÈîÆÂØºÂá∫Markdown/Word/PDFÊ†ºÂºè‰∏ì‰∏öÂàÜÊûêÊä•Âëä&lt;/li&gt; 
 &lt;li&gt;üéØ &lt;strong&gt;5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶&lt;/strong&gt;: ‰ªéÂø´ÈÄüÂàÜÊûê(2-4ÂàÜÈíü)Âà∞ÂÖ®Èù¢ÂàÜÊûê(15-25ÂàÜÈíü)&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;Êô∫ËÉΩÂàÜÊûêÂ∏àÈÄâÊã©&lt;/strong&gt;: Â∏ÇÂú∫ÊäÄÊúØ„ÄÅÂü∫Êú¨Èù¢„ÄÅÊñ∞Èóª„ÄÅÁ§æ‰∫§Â™í‰ΩìÂàÜÊûêÂ∏à&lt;/li&gt; 
 &lt;li&gt;üîÑ &lt;strong&gt;ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫&lt;/strong&gt;: ÂèØËßÜÂåñÂàÜÊûêËøáÁ®ãÔºåÈÅøÂÖçÁ≠âÂæÖÁÑ¶Ëôë&lt;/li&gt; 
 &lt;li&gt;üìà &lt;strong&gt;ÁªìÊûÑÂåñÁªìÊûú&lt;/strong&gt;: ÊäïËµÑÂª∫ËÆÆ„ÄÅÁõÆÊ†á‰ª∑‰Ωç„ÄÅÁΩÆ‰ø°Â∫¶„ÄÅÈ£éÈô©ËØÑ‰º∞&lt;/li&gt; 
 &lt;li&gt;üá®üá≥ &lt;strong&gt;ÂÆåÂÖ®‰∏≠ÊñáÂåñ&lt;/strong&gt;: ÁïåÈù¢ÂíåÂàÜÊûêÁªìÊûúÂÖ®‰∏≠ÊñáÊòæÁ§∫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Á†îÁ©∂Ê∑±Â∫¶Á∫ßÂà´ËØ¥Êòé&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;1Á∫ß - Âø´ÈÄüÂàÜÊûê&lt;/strong&gt; (2-4ÂàÜÈíü): Êó•Â∏∏ÁõëÊéßÔºåÂü∫Á°ÄÂÜ≥Á≠ñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2Á∫ß - Âü∫Á°ÄÂàÜÊûê&lt;/strong&gt; (4-6ÂàÜÈíü): Â∏∏ËßÑÊäïËµÑÔºåÂπ≥Ë°°ÈÄüÂ∫¶&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3Á∫ß - Ê†áÂáÜÂàÜÊûê&lt;/strong&gt; (6-10ÂàÜÈíü): ÈáçË¶ÅÂÜ≥Á≠ñÔºåÊé®ËçêÈªòËÆ§&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Á∫ß - Ê∑±Â∫¶ÂàÜÊûê&lt;/strong&gt; (10-15ÂàÜÈíü): ÈáçÂ§ßÊäïËµÑÔºåËØ¶ÁªÜÁ†îÁ©∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;5Á∫ß - ÂÖ®Èù¢ÂàÜÊûê&lt;/strong&gt; (15-25ÂàÜÈíü): ÊúÄÈáçË¶ÅÂÜ≥Á≠ñÔºåÊúÄÂÖ®Èù¢ÂàÜÊûê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üíª ‰ª£Á†ÅË∞ÉÁî®ÔºàÈÄÇÂêàÂºÄÂèëËÄÖÔºâ&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from tradingagents.graph.trading_graph import TradingAgentsGraph
from tradingagents.default_config import DEFAULT_CONFIG

# ÈÖçÁΩÆÈòøÈáåÁôæÁÇº
config = DEFAULT_CONFIG.copy()
config["llm_provider"] = "dashscope"
config["deep_think_llm"] = "qwen-plus"      # Ê∑±Â∫¶ÂàÜÊûê
config["quick_think_llm"] = "qwen-turbo"    # Âø´ÈÄü‰ªªÂä°

# ÂàõÂª∫‰∫§ÊòìÊô∫ËÉΩ‰Ωì
ta = TradingAgentsGraph(debug=True, config=config)

# ÂàÜÊûêËÇ°Á•® (‰ª•ËãπÊûúÂÖ¨Âè∏‰∏∫‰æã)
state, decision = ta.propagate("AAPL", "2024-01-15")

# ËæìÂá∫ÂàÜÊûêÁªìÊûú
print(f"Êé®ËçêÂä®‰Ωú: {decision['action']}")
print(f"ÁΩÆ‰ø°Â∫¶: {decision['confidence']:.1%}")
print(f"È£éÈô©ËØÑÂàÜ: {decision['risk_score']:.1%}")
print(f"Êé®ÁêÜËøáÁ®ã: {decision['reasoning']}")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Âø´ÈÄüÂêØÂä®ËÑöÊú¨&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÈòøÈáåÁôæÁÇºÊºîÁ§∫ÔºàÊé®Ëçê‰∏≠ÊñáÁî®Êà∑Ôºâ
python examples/dashscope/demo_dashscope_chinese.py

# ÈòøÈáåÁôæÁÇºÂÆåÊï¥ÊºîÁ§∫
python examples/dashscope/demo_dashscope.py

# ÈòøÈáåÁôæÁÇºÁÆÄÂåñÊµãËØï
python examples/dashscope/demo_dashscope_simple.py

# OpenAIÊºîÁ§∫ÔºàÈúÄË¶ÅÂõΩÂ§ñAPIÔºâ
python examples/openai/demo_openai.py

# ÈõÜÊàêÊµãËØï
python tests/integration/test_dashscope_integration.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üìÅ Êï∞ÊçÆÁõÆÂΩïÈÖçÁΩÆ&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Êñ∞ÂäüËÉΩ&lt;/strong&gt;: ÁÅµÊ¥ªÈÖçÁΩÆÊï∞ÊçÆÂ≠òÂÇ®Ë∑ØÂæÑÔºåÊîØÊåÅÂ§öÁßçÈÖçÁΩÆÊñπÂºèÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êü•ÁúãÂΩìÂâçÊï∞ÊçÆÁõÆÂΩïÈÖçÁΩÆ
python -m cli.main data-config --show

# ËÆæÁΩÆËá™ÂÆö‰πâÊï∞ÊçÆÁõÆÂΩï
python -m cli.main data-config --set /path/to/your/data

# ÈáçÁΩÆ‰∏∫ÈªòËÆ§ÈÖçÁΩÆ
python -m cli.main data-config --reset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Windows
set TRADING_AGENTS_DATA_DIR=C:\MyTradingData

# Linux/macOS
export TRADING_AGENTS_DATA_DIR=/home/user/trading_data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Á®ãÂ∫èÂåñÈÖçÁΩÆ&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from tradingagents.config_manager import ConfigManager

# ËÆæÁΩÆÊï∞ÊçÆÁõÆÂΩï
config_manager = ConfigManager()
config_manager.set_data_directory("/path/to/data")

# Ëé∑ÂèñÈÖçÁΩÆ
data_dir = config_manager.get_data_directory()
print(f"Êï∞ÊçÆÁõÆÂΩï: {data_dir}")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÈÖçÁΩÆ‰ºòÂÖàÁ∫ß&lt;/strong&gt;: Á®ãÂ∫èËÆæÁΩÆ &amp;gt; ÁéØÂ¢ÉÂèòÈáè &amp;gt; ÈÖçÁΩÆÊñá‰ª∂ &amp;gt; ÈªòËÆ§ÂÄº&lt;/p&gt; 
&lt;p&gt;ËØ¶ÁªÜËØ¥ÊòéËØ∑ÂèÇËÄÉ: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/data-directory-configuration.md"&gt;üìÅ Êï∞ÊçÆÁõÆÂΩïÈÖçÁΩÆÊåáÂçó&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;‰∫§‰∫íÂºèÂàÜÊûê&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÂêØÂä®‰∫§‰∫íÂºèÂëΩ‰ª§Ë°åÁïåÈù¢
python -m cli.main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üéØ &lt;strong&gt;Âø´ÈÄüÂØºËà™&lt;/strong&gt; - ÊâæÂà∞ÊÇ®ÈúÄË¶ÅÁöÑÂÜÖÂÆπ&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;üéØ&lt;strong&gt;ÊàëÊÉ≥Ë¶Å...&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;üìñ&lt;strong&gt;Êé®ËçêÊñáÊ°£&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;‚è±Ô∏è&lt;strong&gt;ÈòÖËØªÊó∂Èó¥&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Âø´ÈÄü‰∏äÊâã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;10ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‰∫ÜËß£Êû∂ÊûÑ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;15ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Áúã‰ª£Á†ÅÁ§∫‰æã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;20ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ëß£ÂÜ≥ÈóÆÈ¢ò&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ê∑±Â∫¶Â≠¶‰π†&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/#-%E8%AF%A6%E7%BB%86%E6%96%87%E6%A1%A3%E7%9B%AE%E5%BD%95"&gt;üìÅ ÂÆåÊï¥ÊñáÊ°£ÁõÆÂΩï&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2Â∞èÊó∂+&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° &lt;strong&gt;ÊèêÁ§∫&lt;/strong&gt;: Êàë‰ª¨ÁöÑ &lt;code&gt;docs/&lt;/code&gt; ÁõÆÂΩïÂåÖÂê´‰∫Ü &lt;strong&gt;50,000+Â≠ó&lt;/strong&gt; ÁöÑËØ¶ÁªÜ‰∏≠ÊñáÊñáÊ°£ÔºåËøôÊòØ‰∏éÂéüÁâàÊúÄÂ§ßÁöÑÂå∫Âà´ÔºÅ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üìö ÂÆåÊï¥ÊñáÊ°£‰ΩìÁ≥ª - Ê†∏ÂøÉ‰∫ÆÁÇπ&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;üåü ËøôÊòØÊú¨È°πÁõÆ‰∏éÂéüÁâàÊúÄÂ§ßÁöÑÂå∫Âà´ÔºÅ&lt;/strong&gt; Êàë‰ª¨ÊûÑÂª∫‰∫Ü‰∏öÁïåÊúÄÂÆåÊï¥ÁöÑ‰∏≠ÊñáÈáëËûçAIÊ°ÜÊû∂ÊñáÊ°£‰ΩìÁ≥ªÔºåÂåÖÂê´Ë∂ÖËøá &lt;strong&gt;50,000Â≠ó&lt;/strong&gt; ÁöÑËØ¶ÁªÜÊäÄÊúØÊñáÊ°£Ôºå&lt;strong&gt;20+&lt;/strong&gt; ‰∏™‰∏ì‰∏öÊñáÊ°£Êñá‰ª∂Ôºå&lt;strong&gt;100+&lt;/strong&gt; ‰∏™‰ª£Á†ÅÁ§∫‰æã„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üéØ ‰∏∫‰ªÄ‰πàÈÄâÊã©Êàë‰ª¨ÁöÑÊñáÊ°£Ôºü&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÂØπÊØîÁª¥Â∫¶&lt;/th&gt; 
   &lt;th&gt;ÂéüÁâà TradingAgents&lt;/th&gt; 
   &lt;th&gt;üöÄ&lt;strong&gt;‰∏≠ÊñáÂ¢ûÂº∫Áâà&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ÊñáÊ°£ËØ≠Ë®Ä&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ëã±ÊñáÂü∫Á°ÄËØ¥Êòé&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;ÂÆåÊï¥‰∏≠Êñá‰ΩìÁ≥ª&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ÊñáÊ°£Ê∑±Â∫¶&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÁÆÄÂçï‰ªãÁªç&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Ê∑±Â∫¶ÊäÄÊúØÂâñÊûê&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Êû∂ÊûÑËØ¥Êòé&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ê¶ÇÂøµÊÄßÊèèËø∞&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;ËØ¶ÁªÜËÆæËÆ°ÊñáÊ°£ + Êû∂ÊûÑÂõæ&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‰ΩøÁî®ÊåáÂçó&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Âü∫Á°ÄÁ§∫‰æã&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;‰ªéÂÖ•Èó®Âà∞‰∏ìÂÆ∂ÁöÑÂÆåÊï¥Ë∑ØÂæÑ&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ÊïÖÈöúÊéíÈô§&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Êó†&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;ËØ¶ÁªÜFAQ + Ëß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‰ª£Á†ÅÁ§∫‰æã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Â∞ëÈáèÁ§∫‰æã&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;100+ ÂÆûÁî®Á§∫‰æã&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;üìñ ÊñáÊ°£ÂØºËà™ - ÊåâÂ≠¶‰π†Ë∑ØÂæÑÁªÑÁªá&lt;/h3&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;Êñ∞ÊâãÂÖ•Èó®Ë∑ØÂæÑ&lt;/strong&gt; (Êé®Ëçê‰ªéËøôÈáåÂºÄÂßã)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;üìã È°πÁõÆÊ¶ÇËø∞&lt;/a&gt; - &lt;strong&gt;‰∫ÜËß£È°πÁõÆËÉåÊôØÂíåÊ†∏ÂøÉ‰ª∑ÂÄº&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/installation.md"&gt;‚öôÔ∏è ËØ¶ÁªÜÂÆâË£Ö&lt;/a&gt; - &lt;strong&gt;ÂêÑÂπ≥Âè∞ËØ¶ÁªÜÂÆâË£ÖÊåáÂçó&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/a&gt; - &lt;strong&gt;10ÂàÜÈíü‰∏äÊâãÊåáÂçó&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt; - &lt;strong&gt;8‰∏™ÂÆûÁî®ÁöÑÂÖ•Èó®Á§∫‰æã&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üèóÔ∏è &lt;strong&gt;Êû∂ÊûÑÁêÜËß£Ë∑ØÂæÑ&lt;/strong&gt; (Ê∑±ÂÖ•‰∫ÜËß£Á≥ªÁªüËÆæËÆ°)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt; - &lt;strong&gt;ÂÆåÊï¥ÁöÑÁ≥ªÁªüÊû∂ÊûÑËÆæËÆ°&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊû∂ÊûÑ&lt;/a&gt; - &lt;strong&gt;Â§öÊô∫ËÉΩ‰ΩìÂçè‰ΩúÊú∫Âà∂&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;üìä Êï∞ÊçÆÊµÅÊû∂ÊûÑ&lt;/a&gt; - &lt;strong&gt;Êï∞ÊçÆÂ§ÑÁêÜÂÖ®ÊµÅÁ®ã&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/graph-structure.md"&gt;üîÑ ÂõæÁªìÊûÑËÆæËÆ°&lt;/a&gt; - &lt;strong&gt;LangGraphÂ∑•‰ΩúÊµÅÁ®ã&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;ü§ñ &lt;strong&gt;Êô∫ËÉΩ‰ΩìÊ∑±Â∫¶Ëß£Êûê&lt;/strong&gt; (‰∫ÜËß£ÊØè‰∏™Êô∫ËÉΩ‰ΩìÁöÑËÆæËÆ°)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/analysts.md"&gt;üìà ÂàÜÊûêÂ∏àÂõ¢Èòü&lt;/a&gt; - &lt;strong&gt;ÂõõÁ±ª‰∏ì‰∏öÂàÜÊûêÂ∏àËØ¶Ëß£&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;üî¨ Á†îÁ©∂ÂëòÂõ¢Èòü&lt;/a&gt; - &lt;strong&gt;ÁúãÊ∂®/ÁúãË∑åËæ©ËÆ∫Êú∫Âà∂&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/trader.md"&gt;üíº ‰∫§ÊòìÂëòÊô∫ËÉΩ‰Ωì&lt;/a&gt; - &lt;strong&gt;‰∫§ÊòìÂÜ≥Á≠ñÂà∂ÂÆöÊµÅÁ®ã&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/risk-management.md"&gt;üõ°Ô∏è È£éÈô©ÁÆ°ÁêÜ&lt;/a&gt; - &lt;strong&gt;Â§öÂ±ÇÊ¨°È£éÈô©ËØÑ‰º∞&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/managers.md"&gt;üëî ÁÆ°ÁêÜÂ±ÇÊô∫ËÉΩ‰Ωì&lt;/a&gt; - &lt;strong&gt;ÂçèË∞ÉÂíåÂÜ≥Á≠ñÁÆ°ÁêÜ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üìä &lt;strong&gt;Êï∞ÊçÆÂ§ÑÁêÜ‰∏ìÈ¢ò&lt;/strong&gt; (ÊéåÊè°Êï∞ÊçÆÂ§ÑÁêÜÊäÄÊúØ)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-sources.md"&gt;üîå Êï∞ÊçÆÊ∫êÈõÜÊàê&lt;/a&gt; - &lt;strong&gt;Â§öÊï∞ÊçÆÊ∫êAPIÈõÜÊàê&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-processing.md"&gt;‚öôÔ∏è Êï∞ÊçÆÂ§ÑÁêÜÊµÅÁ®ã&lt;/a&gt; - &lt;strong&gt;Êï∞ÊçÆÊ∏ÖÊ¥óÂíåËΩ¨Êç¢&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;üíæ ÁºìÂ≠òÁ≠ñÁï•&lt;/a&gt; - &lt;strong&gt;Â§öÂ±ÇÁºìÂ≠ò‰ºòÂåñÊÄßËÉΩ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;‚öôÔ∏è &lt;strong&gt;ÈÖçÁΩÆÂíå‰ºòÂåñ&lt;/strong&gt; (ÊÄßËÉΩË∞É‰ºòÂíåÂÆöÂà∂)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/config-guide.md"&gt;üìù ÈÖçÁΩÆÊåáÂçó&lt;/a&gt; - &lt;strong&gt;ËØ¶ÁªÜÈÖçÁΩÆÈÄâÈ°πËØ¥Êòé&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;üß† LLMÈÖçÁΩÆ&lt;/a&gt; - &lt;strong&gt;Â§ßËØ≠Ë®ÄÊ®°Âûã‰ºòÂåñ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üí° &lt;strong&gt;È´òÁ∫ßÂ∫îÁî®&lt;/strong&gt; (Êâ©Â±ïÂºÄÂèëÂíåÂÆûÊàò)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt; - &lt;strong&gt;8‰∏™ÂÆûÁî®Âü∫Á°ÄÁ§∫‰æã&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/advanced-examples.md"&gt;üöÄ È´òÁ∫ßÁ§∫‰æã&lt;/a&gt; - &lt;strong&gt;Â§çÊùÇÂú∫ÊôØÂíåÊâ©Â±ïÂºÄÂèë&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;‚ùì &lt;strong&gt;ÈóÆÈ¢òËß£ÂÜ≥&lt;/strong&gt; (ÈÅáÂà∞ÈóÆÈ¢òÊó∂Êü•Áúã)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt; - &lt;strong&gt;ËØ¶ÁªÜFAQÂíåËß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üìä ÊñáÊ°£ÁªüËÆ°Êï∞ÊçÆ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìÑ &lt;strong&gt;ÊñáÊ°£Êñá‰ª∂Êï∞&lt;/strong&gt;: 20+ ‰∏™‰∏ì‰∏öÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;üìù &lt;strong&gt;ÊÄªÂ≠óÊï∞&lt;/strong&gt;: 50,000+ Â≠óËØ¶ÁªÜÂÜÖÂÆπ&lt;/li&gt; 
 &lt;li&gt;üíª &lt;strong&gt;‰ª£Á†ÅÁ§∫‰æã&lt;/strong&gt;: 100+ ‰∏™ÂÆûÁî®Á§∫‰æã&lt;/li&gt; 
 &lt;li&gt;üìà &lt;strong&gt;Êû∂ÊûÑÂõæË°®&lt;/strong&gt;: 10+ ‰∏™‰∏ì‰∏öÂõæË°®&lt;/li&gt; 
 &lt;li&gt;üéØ &lt;strong&gt;Ë¶ÜÁõñËåÉÂõ¥&lt;/strong&gt;: ‰ªéÂÖ•Èó®Âà∞‰∏ìÂÆ∂ÁöÑÂÆåÊï¥Ë∑ØÂæÑ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üé® ÊñáÊ°£ÁâπËâ≤&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üá®üá≥ ÂÆåÂÖ®‰∏≠ÊñáÂåñ&lt;/strong&gt;: ‰∏ì‰∏∫‰∏≠ÊñáÁî®Êà∑‰ºòÂåñÁöÑË°®ËææÊñπÂºè&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä ÂõæÊñáÂπ∂ËåÇ&lt;/strong&gt;: ‰∏∞ÂØåÁöÑÊû∂ÊûÑÂõæÂíåÊµÅÁ®ãÂõæ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíª ‰ª£Á†Å‰∏∞ÂØå&lt;/strong&gt;: ÊØè‰∏™Ê¶ÇÂøµÈÉΩÊúâÂØπÂ∫îÁöÑ‰ª£Á†ÅÁ§∫‰æã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîç Ê∑±Â∫¶ÂâñÊûê&lt;/strong&gt;: ‰∏ç‰ªÖÂëäËØâ‰Ω†ÊÄé‰πàÂÅöÔºåËøòÂëäËØâ‰Ω†‰∏∫‰ªÄ‰πàËøôÊ†∑ÂÅö&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ†Ô∏è ÂÆûÁî®ÂØºÂêë&lt;/strong&gt;: ÊâÄÊúâÊñáÊ°£ÈÉΩÈù¢ÂêëÂÆûÈôÖÂ∫îÁî®Âú∫ÊôØ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìö ËØ¶ÁªÜÊñáÊ°£ÁõÆÂΩï&lt;/h2&gt; 
&lt;h3&gt;üìÅ &lt;strong&gt;docs/ ÁõÆÂΩïÁªìÊûÑ&lt;/strong&gt; - ÂÆåÊï¥ÁöÑÁü•ËØÜ‰ΩìÁ≥ª&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;docs/
‚îú‚îÄ‚îÄ üìñ overview/              # È°πÁõÆÊ¶ÇËßà - Êñ∞ÊâãÂøÖËØª
‚îÇ   ‚îú‚îÄ‚îÄ project-overview.md   # üìã È°πÁõÆËØ¶ÁªÜ‰ªãÁªç
‚îÇ   ‚îú‚îÄ‚îÄ quick-start.md        # üöÄ 10ÂàÜÈíüÂø´ÈÄü‰∏äÊâã
‚îÇ   ‚îî‚îÄ‚îÄ installation.md       # ‚öôÔ∏è ËØ¶ÁªÜÂÆâË£ÖÊåáÂçó
‚îÇ
‚îú‚îÄ‚îÄ üèóÔ∏è architecture/          # Á≥ªÁªüÊû∂ÊûÑ - Ê∑±Â∫¶ÁêÜËß£
‚îÇ   ‚îú‚îÄ‚îÄ system-architecture.md    # üèõÔ∏è Êï¥‰ΩìÊû∂ÊûÑËÆæËÆ°
‚îÇ   ‚îú‚îÄ‚îÄ agent-architecture.md     # ü§ñ Êô∫ËÉΩ‰ΩìÂçè‰ΩúÊú∫Âà∂
‚îÇ   ‚îú‚îÄ‚îÄ data-flow-architecture.md # üìä Êï∞ÊçÆÊµÅÂ§ÑÁêÜÊû∂ÊûÑ
‚îÇ   ‚îî‚îÄ‚îÄ graph-structure.md        # üîÑ LangGraphÂ∑•‰ΩúÊµÅ
‚îÇ
‚îú‚îÄ‚îÄ ü§ñ agents/               # Êô∫ËÉΩ‰ΩìËØ¶Ëß£ - Ê†∏ÂøÉÁªÑ‰ª∂
‚îÇ   ‚îú‚îÄ‚îÄ analysts.md          # üìà ÂõõÁ±ª‰∏ì‰∏öÂàÜÊûêÂ∏à
‚îÇ   ‚îú‚îÄ‚îÄ researchers.md       # üî¨ ÁúãÊ∂®/ÁúãË∑åËæ©ËÆ∫Êú∫Âà∂
‚îÇ   ‚îú‚îÄ‚îÄ trader.md           # üíº ‰∫§ÊòìÂÜ≥Á≠ñÂà∂ÂÆö
‚îÇ   ‚îú‚îÄ‚îÄ risk-management.md  # üõ°Ô∏è Â§öÂ±ÇÈ£éÈô©ËØÑ‰º∞
‚îÇ   ‚îî‚îÄ‚îÄ managers.md         # üëî ÁÆ°ÁêÜÂ±ÇÂçèË∞É
‚îÇ
‚îú‚îÄ‚îÄ üìä data/                 # Êï∞ÊçÆÂ§ÑÁêÜ - ÊäÄÊúØÊ†∏ÂøÉ
‚îÇ   ‚îú‚îÄ‚îÄ data-sources.md      # üîå Â§öÊï∞ÊçÆÊ∫êÈõÜÊàê
‚îÇ   ‚îú‚îÄ‚îÄ data-processing.md   # ‚öôÔ∏è Êï∞ÊçÆÂ§ÑÁêÜÊµÅÁ®ã
‚îÇ   ‚îî‚îÄ‚îÄ caching.md          # üíæ ÁºìÂ≠ò‰ºòÂåñÁ≠ñÁï•
‚îÇ
‚îú‚îÄ‚îÄ ‚öôÔ∏è configuration/        # ÈÖçÁΩÆ‰ºòÂåñ - ÊÄßËÉΩË∞É‰ºò
‚îÇ   ‚îú‚îÄ‚îÄ config-guide.md      # üìù ËØ¶ÁªÜÈÖçÁΩÆËØ¥Êòé
‚îÇ   ‚îî‚îÄ‚îÄ llm-config.md       # üß† LLMÊ®°Âûã‰ºòÂåñ
‚îÇ
‚îú‚îÄ‚îÄ üí° examples/             # Á§∫‰æãÊïôÁ®ã - ÂÆûÊàòÂ∫îÁî®
‚îÇ   ‚îú‚îÄ‚îÄ basic-examples.md    # üìö 8‰∏™Âü∫Á°ÄÁ§∫‰æã
‚îÇ   ‚îî‚îÄ‚îÄ advanced-examples.md # üöÄ È´òÁ∫ßÂºÄÂèëÁ§∫‰æã
‚îÇ
‚îî‚îÄ‚îÄ ‚ùì faq/                  # ÈóÆÈ¢òËß£ÂÜ≥ - ÁñëÈöæËß£Á≠î
    ‚îî‚îÄ‚îÄ faq.md              # üÜò Â∏∏ËßÅÈóÆÈ¢òFAQ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üéØ &lt;strong&gt;ÈáçÁÇπÊé®ËçêÊñáÊ°£&lt;/strong&gt; (ÂøÖËØªÁ≤æÈÄâ)&lt;/h3&gt; 
&lt;h4&gt;üî• &lt;strong&gt;ÊúÄÂèóÊ¨¢ËøéÁöÑÊñáÊ°£&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;üìã È°πÁõÆÊ¶ÇËø∞&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;‰∫ÜËß£È°πÁõÆÁöÑÊ†∏ÂøÉ‰ª∑ÂÄºÂíåÊäÄÊúØÁâπËâ≤Ôºå5ÂàÜÈíüËØªÊáÇÊï¥‰∏™Ê°ÜÊû∂&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Ê∑±Â∫¶Ëß£ÊûêÂ§öÊô∫ËÉΩ‰ΩìÂçè‰ΩúÊú∫Âà∂ÔºåÂåÖÂê´ËØ¶ÁªÜÊû∂ÊûÑÂõæ&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;8‰∏™ÂÆûÁî®Á§∫‰æãÔºå‰ªéËÇ°Á•®ÂàÜÊûêÂà∞ÊäïËµÑÁªÑÂêà‰ºòÂåñ&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;ÊäÄÊúØÊ∑±Â∫¶ÊñáÊ°£&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊû∂ÊûÑ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Â§öÊô∫ËÉΩ‰ΩìËÆæËÆ°Ê®°ÂºèÂíåÂçè‰ΩúÊú∫Âà∂ËØ¶Ëß£&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;üìä Êï∞ÊçÆÊµÅÊû∂ÊûÑ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Êï∞ÊçÆËé∑Âèñ„ÄÅÂ§ÑÁêÜ„ÄÅÁºìÂ≠òÁöÑÂÆåÊï¥ÊµÅÁ®ã&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;üî¨ Á†îÁ©∂ÂëòÂõ¢Èòü&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;ÁúãÊ∂®/ÁúãË∑åÁ†îÁ©∂ÂëòËæ©ËÆ∫Êú∫Âà∂ÁöÑÂàõÊñ∞ËÆæËÆ°&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üíº &lt;strong&gt;ÂÆûÁî®Â∑•ÂÖ∑ÊñáÊ°£&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/web-interface-guide.md"&gt;üåê WebÁïåÈù¢ÊåáÂçó&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;ÂÆåÊï¥ÁöÑWebÁïåÈù¢‰ΩøÁî®ÊïôÁ®ãÔºåÂåÖÂê´5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶ËØ¶ÁªÜËØ¥Êòé&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/investment_analysis_guide.md"&gt;üí∞ ÊäïËµÑÂàÜÊûêÊåáÂçó&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;‰ªéÂü∫Á°ÄÂà∞È´òÁ∫ßÁöÑÂÆåÊï¥ÊäïËµÑÂàÜÊûêÊïôÁ®ã&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;üß† LLMÈÖçÁΩÆ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Â§öLLMÊ®°ÂûãÈÖçÁΩÆÂíåÊàêÊú¨‰ºòÂåñÁ≠ñÁï•&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;üíæ ÁºìÂ≠òÁ≠ñÁï•&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Â§öÂ±ÇÁºìÂ≠òËÆæËÆ°ÔºåÊòæËëóÈôç‰ΩéAPIË∞ÉÁî®ÊàêÊú¨&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;ËØ¶ÁªÜÁöÑFAQÂíåÊïÖÈöúÊéíÈô§ÊåáÂçó&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üìñ &lt;strong&gt;ÊåâÊ®°ÂùóÊµèËßàÊñáÊ°£&lt;/strong&gt;&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üìñ Ê¶ÇËßàÊñáÊ°£&lt;/strong&gt; - È°πÁõÆÂÖ•Èó®ÂøÖËØª&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;üìã È°πÁõÆÊ¶ÇËø∞&lt;/a&gt; - ËØ¶ÁªÜÁöÑÈ°πÁõÆËÉåÊôØÂíåÁâπÊÄß‰ªãÁªç&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/a&gt; - ‰ªéÂÆâË£ÖÂà∞Á¨¨‰∏ÄÊ¨°ËøêË°åÁöÑÂÆåÊï¥ÊåáÂçó&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/installation.md"&gt;‚öôÔ∏è ËØ¶ÁªÜÂÆâË£Ö&lt;/a&gt; - ÂêÑÂπ≥Âè∞ËØ¶ÁªÜÂÆâË£ÖËØ¥Êòé&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üèóÔ∏è Êû∂ÊûÑÊñáÊ°£&lt;/strong&gt; - Ê∑±Â∫¶ÁêÜËß£Á≥ªÁªüËÆæËÆ°&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt; - ÂÆåÊï¥ÁöÑÁ≥ªÁªüÊû∂ÊûÑËÆæËÆ°&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊû∂ÊûÑ&lt;/a&gt; - Êô∫ËÉΩ‰ΩìËÆæËÆ°Ê®°ÂºèÂíåÂçè‰ΩúÊú∫Âà∂&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;üìä Êï∞ÊçÆÊµÅÊû∂ÊûÑ&lt;/a&gt; - Êï∞ÊçÆËé∑Âèñ„ÄÅÂ§ÑÁêÜÂíåÂàÜÂèëÊµÅÁ®ã&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/graph-structure.md"&gt;üîÑ ÂõæÁªìÊûÑËÆæËÆ°&lt;/a&gt; - LangGraphÂ∑•‰ΩúÊµÅÁ®ãËÆæËÆ°&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊñáÊ°£&lt;/strong&gt; - Ê†∏ÂøÉÁªÑ‰ª∂ËØ¶Ëß£&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/analysts.md"&gt;üìà ÂàÜÊûêÂ∏àÂõ¢Èòü&lt;/a&gt; - ÂõõÁ±ª‰∏ì‰∏öÂàÜÊûêÂ∏àËØ¶Ëß£&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;üî¨ Á†îÁ©∂ÂëòÂõ¢Èòü&lt;/a&gt; - ÁúãÊ∂®/ÁúãË∑åÁ†îÁ©∂ÂëòÂíåËæ©ËÆ∫Êú∫Âà∂&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/trader.md"&gt;üíº ‰∫§ÊòìÂëòÊô∫ËÉΩ‰Ωì&lt;/a&gt; - ‰∫§ÊòìÂÜ≥Á≠ñÂà∂ÂÆöÊµÅÁ®ã&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/risk-management.md"&gt;üõ°Ô∏è È£éÈô©ÁÆ°ÁêÜ&lt;/a&gt; - Â§öÂ±ÇÊ¨°È£éÈô©ËØÑ‰º∞‰ΩìÁ≥ª&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/managers.md"&gt;üëî ÁÆ°ÁêÜÂ±ÇÊô∫ËÉΩ‰Ωì&lt;/a&gt; - ÂçèË∞ÉÂíåÂÜ≥Á≠ñÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üìä Êï∞ÊçÆÂ§ÑÁêÜ&lt;/strong&gt; - ÊäÄÊúØÊ†∏ÂøÉÂÆûÁé∞&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-sources.md"&gt;üîå Êï∞ÊçÆÊ∫êÈõÜÊàê&lt;/a&gt; - ÊîØÊåÅÁöÑÊï∞ÊçÆÊ∫êÂíåAPIÈõÜÊàê&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-processing.md"&gt;‚öôÔ∏è Êï∞ÊçÆÂ§ÑÁêÜÊµÅÁ®ã&lt;/a&gt; - Êï∞ÊçÆÊ∏ÖÊ¥ó„ÄÅËΩ¨Êç¢ÂíåÈ™åËØÅ&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;üíæ ÁºìÂ≠òÁ≠ñÁï•&lt;/a&gt; - Â§öÂ±ÇÁºìÂ≠ò‰ºòÂåñÊÄßËÉΩ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;‚öôÔ∏è ÈÖçÁΩÆ‰∏éÈÉ®ÁΩ≤&lt;/strong&gt; - ÊÄßËÉΩË∞É‰ºòÊåáÂçó&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/config-guide.md"&gt;üìù ÈÖçÁΩÆÊåáÂçó&lt;/a&gt; - ËØ¶ÁªÜÁöÑÈÖçÁΩÆÈÄâÈ°πËØ¥Êòé&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;üß† LLMÈÖçÁΩÆ&lt;/a&gt; - Â§ßËØ≠Ë®ÄÊ®°ÂûãÈÖçÁΩÆ‰ºòÂåñ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üí° Á§∫‰æãÂíåÊïôÁ®ã&lt;/strong&gt; - ÂÆûÊàòÂ∫îÁî®ÊåáÂçó&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt; - 8‰∏™ÂÆûÁî®ÁöÑÂü∫Á°ÄÁ§∫‰æã&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/advanced-examples.md"&gt;üöÄ È´òÁ∫ßÁ§∫‰æã&lt;/a&gt; - Â§çÊùÇÂú∫ÊôØÂíåÊâ©Â±ïÂºÄÂèë&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;‚ùì Â∏ÆÂä©ÊñáÊ°£&lt;/strong&gt; - ÈóÆÈ¢òËß£ÂÜ≥ÊñπÊ°à&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt; - ËØ¶ÁªÜÁöÑFAQÂíåËß£ÂÜ≥ÊñπÊ°à&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;üí∞ ÊàêÊú¨ÊéßÂà∂&lt;/h2&gt; 
&lt;h3&gt;ÂÖ∏Âûã‰ΩøÁî®ÊàêÊú¨&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÁªèÊµéÊ®°Âºè&lt;/strong&gt;: $0.01-0.05/Ê¨°ÂàÜÊûê (‰ΩøÁî® gpt-4o-mini)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ê†áÂáÜÊ®°Âºè&lt;/strong&gt;: $0.05-0.15/Ê¨°ÂàÜÊûê (‰ΩøÁî® gpt-4o)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;È´òÁ≤æÂ∫¶Ê®°Âºè&lt;/strong&gt;: $0.10-0.30/Ê¨°ÂàÜÊûê (‰ΩøÁî® gpt-4o + Â§öËΩÆËæ©ËÆ∫)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÊàêÊú¨‰ºòÂåñÂª∫ËÆÆ&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# ‰ΩéÊàêÊú¨ÈÖçÁΩÆÁ§∫‰æã
cost_optimized_config = {
    "deep_think_llm": "gpt-4o-mini",
    "quick_think_llm": "gpt-4o-mini", 
    "max_debate_rounds": 1,
    "online_tools": False  # ‰ΩøÁî®ÁºìÂ≠òÊï∞ÊçÆ
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ü§ù Ë¥°ÁåÆÊåáÂçó&lt;/h2&gt; 
&lt;p&gt;Êàë‰ª¨Ê¨¢ËøéÂêÑÁßçÂΩ¢ÂºèÁöÑË¥°ÁåÆÔºö&lt;/p&gt; 
&lt;h3&gt;Ë¥°ÁåÆÁ±ªÂûã&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Bug‰øÆÂ§ç&lt;/strong&gt; - ÂèëÁé∞Âπ∂‰øÆÂ§çÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‚ú® &lt;strong&gt;Êñ∞ÂäüËÉΩ&lt;/strong&gt; - Ê∑ªÂä†Êñ∞ÁöÑÂäüËÉΩÁâπÊÄß&lt;/li&gt; 
 &lt;li&gt;üìö &lt;strong&gt;ÊñáÊ°£ÊîπËøõ&lt;/strong&gt; - ÂÆåÂñÑÊñáÊ°£ÂíåÊïôÁ®ã&lt;/li&gt; 
 &lt;li&gt;üåê &lt;strong&gt;Êú¨Âú∞Âåñ&lt;/strong&gt; - ÁøªËØëÂíåÊú¨Âú∞ÂåñÂ∑•‰Ωú&lt;/li&gt; 
 &lt;li&gt;üé® &lt;strong&gt;‰ª£Á†Å‰ºòÂåñ&lt;/strong&gt; - ÊÄßËÉΩ‰ºòÂåñÂíå‰ª£Á†ÅÈáçÊûÑ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ë¥°ÁåÆÊµÅÁ®ã&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork Êú¨‰ªìÂ∫ì&lt;/li&gt; 
 &lt;li&gt;ÂàõÂª∫ÁâπÊÄßÂàÜÊîØ (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Êèê‰∫§Êõ¥Êîπ (&lt;code&gt;git commit -m 'Add some AmazingFeature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Êé®ÈÄÅÂà∞ÂàÜÊîØ (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;ÂàõÂª∫ Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üìã Êü•ÁúãË¥°ÁåÆËÄÖ&lt;/h3&gt; 
&lt;p&gt;Êü•ÁúãÊâÄÊúâË¥°ÁåÆËÄÖÂíåËØ¶ÁªÜË¥°ÁåÆÂÜÖÂÆπÔºö&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/CONTRIBUTORS.md"&gt;ü§ù Ë¥°ÁåÆËÄÖÂêçÂçï&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;üìÑ ËÆ∏ÂèØËØÅ&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂü∫‰∫é Apache 2.0 ËÆ∏ÂèØËØÅÂºÄÊ∫ê„ÄÇËØ¶ËßÅ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/LICENSE"&gt;LICENSE&lt;/a&gt; Êñá‰ª∂„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ËÆ∏ÂèØËØÅËØ¥Êòé&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ ÂïÜ‰∏ö‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;‚úÖ ‰øÆÊîπÂíåÂàÜÂèë&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÁßÅ‰∫∫‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;‚úÖ ‰∏ìÂà©‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;‚ùó ÈúÄË¶Å‰øùÁïôÁâàÊùÉÂ£∞Êòé&lt;/li&gt; 
 &lt;li&gt;‚ùó ÈúÄË¶ÅÂåÖÂê´ËÆ∏ÂèØËØÅÂâØÊú¨&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üôè Ëá¥Ë∞¢‰∏éÊÑüÊÅ©&lt;/h2&gt; 
&lt;h3&gt;üåü ÂêëÊ∫êÈ°πÁõÆÂºÄÂèëËÄÖËá¥Êï¨&lt;/h3&gt; 
&lt;p&gt;Êàë‰ª¨Âêë &lt;a href="https://github.com/TauricResearch"&gt;Tauric Research&lt;/a&gt; Âõ¢ÈòüË°®ËææÊúÄÊ∑±ÁöÑÊï¨ÊÑèÂíåÊÑüË∞¢Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ ÊÑøÊôØÈ¢ÜÂØºËÄÖ&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨Âú®AIÈáëËûçÈ¢ÜÂüüÁöÑÂâçÁûªÊÄßÊÄùËÄÉÂíåÂàõÊñ∞ÂÆûË∑µ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíé ÁèçË¥µÊ∫êÁ†Å&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ÂºÄÊ∫êÁöÑÊØè‰∏ÄË°å‰ª£Á†ÅÔºåÂÆÉ‰ª¨ÂáùËÅöÁùÄÊó†Êï∞ÁöÑÊô∫ÊÖßÂíåÂøÉË°Ä&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üèóÔ∏è Êû∂ÊûÑÂ§ßÂ∏à&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ËÆæËÆ°‰∫ÜÂ¶ÇÊ≠§‰ºòÈõÖ„ÄÅÂèØÊâ©Â±ïÁöÑÂ§öÊô∫ËÉΩ‰ΩìÊ°ÜÊû∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üí° ÊäÄÊúØÂÖàÈ©±&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨Â∞ÜÂâçÊ≤øAIÊäÄÊúØ‰∏éÈáëËûçÂÆûÂä°ÂÆåÁæéÁªìÂêà&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ ÊåÅÁª≠Ë¥°ÁåÆ&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ÊåÅÁª≠ÁöÑÁª¥Êä§„ÄÅÊõ¥Êñ∞ÂíåÊîπËøõÂ∑•‰Ωú&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ü§ù Á§æÂå∫Ë¥°ÁåÆËÄÖËá¥Ë∞¢&lt;/h3&gt; 
&lt;p&gt;ÊÑüË∞¢ÊâÄÊúâ‰∏∫TradingAgents-CNÈ°πÁõÆÂÅöÂá∫Ë¥°ÁåÆÁöÑÂºÄÂèëËÄÖÂíåÁî®Êà∑ÔºÅ&lt;/p&gt; 
&lt;p&gt;ËØ¶ÁªÜÁöÑË¥°ÁåÆËÄÖÂêçÂçïÂíåË¥°ÁåÆÂÜÖÂÆπËØ∑Êü•ÁúãÔºö&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/CONTRIBUTORS.md"&gt;üìã Ë¥°ÁåÆËÄÖÂêçÂçï&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üê≥ &lt;strong&gt;DockerÂÆπÂô®Âåñ&lt;/strong&gt; - ÈÉ®ÁΩ≤ÊñπÊ°à‰ºòÂåñ&lt;/li&gt; 
 &lt;li&gt;üìÑ &lt;strong&gt;Êä•ÂëäÂØºÂá∫ÂäüËÉΩ&lt;/strong&gt; - Â§öÊ†ºÂºèËæìÂá∫ÊîØÊåÅ&lt;/li&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Bug‰øÆÂ§ç&lt;/strong&gt; - Á≥ªÁªüÁ®≥ÂÆöÊÄßÊèêÂçá&lt;/li&gt; 
 &lt;li&gt;üîß &lt;strong&gt;‰ª£Á†Å‰ºòÂåñ&lt;/strong&gt; - Áî®Êà∑‰ΩìÈ™åÊîπËøõ&lt;/li&gt; 
 &lt;li&gt;üìù &lt;strong&gt;ÊñáÊ°£ÂÆåÂñÑ&lt;/strong&gt; - ‰ΩøÁî®ÊåáÂçóÂíåÊïôÁ®ã&lt;/li&gt; 
 &lt;li&gt;üåç &lt;strong&gt;Á§æÂå∫Âª∫ËÆæ&lt;/strong&gt; - ÈóÆÈ¢òÂèçÈ¶àÂíåÊé®Âπø&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üåç ÂºÄÊ∫êË¥°ÁåÆ&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ÈÄâÊã©Apache 2.0ÂçèËÆÆÔºåÁªô‰∫àÂºÄÂèëËÄÖÊúÄÂ§ßÁöÑËá™Áî±&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìö Áü•ËØÜÂàÜ‰∫´&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨Êèê‰æõÁöÑËØ¶ÁªÜÊñáÊ°£ÂíåÊúÄ‰Ω≥ÂÆûË∑µÊåáÂØº&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;ÁâπÂà´ÊÑüË∞¢&lt;/strong&gt;Ôºö&lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TradingAgents&lt;/a&gt; È°πÁõÆ‰∏∫Êàë‰ª¨Êèê‰æõ‰∫ÜÂùöÂÆûÁöÑÊäÄÊúØÂü∫Á°Ä„ÄÇËôΩÁÑ∂Apache 2.0ÂçèËÆÆËµã‰∫à‰∫ÜÊàë‰ª¨‰ΩøÁî®Ê∫êÁ†ÅÁöÑÊùÉÂà©Ôºå‰ΩÜÊàë‰ª¨Ê∑±Áü•ÊØè‰∏ÄË°å‰ª£Á†ÅÁöÑÁèçË¥µ‰ª∑ÂÄºÔºåÂ∞ÜÊ∞∏ËøúÈì≠ËÆ∞Âπ∂ÊÑüË∞¢ÊÇ®‰ª¨ÁöÑÊó†ÁßÅË¥°ÁåÆ„ÄÇ&lt;/p&gt; 
&lt;h3&gt;üá®üá≥ Êé®Âπø‰ΩøÂëΩÁöÑÂàùÂøÉ&lt;/h3&gt; 
&lt;p&gt;ÂàõÂª∫Ëøô‰∏™‰∏≠ÊñáÂ¢ûÂº∫ÁâàÊú¨ÔºåÊàë‰ª¨ÊÄÄÁùÄ‰ª•‰∏ãÂàùÂøÉÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üåâ ÊäÄÊúØ‰º†Êí≠&lt;/strong&gt;: ËÆ©‰ºòÁßÄÁöÑTradingAgentsÊäÄÊúØÂú®‰∏≠ÂõΩÂæóÂà∞Êõ¥ÂπøÊ≥õÁöÑÂ∫îÁî®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéì ÊïôËÇ≤ÊôÆÂèä&lt;/strong&gt;: ‰∏∫‰∏≠ÂõΩÁöÑAIÈáëËûçÊïôËÇ≤Êèê‰æõÊõ¥Â•ΩÁöÑÂ∑•ÂÖ∑ÂíåËµÑÊ∫ê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü§ù ÊñáÂåñÊ°•Ê¢Å&lt;/strong&gt;: Âú®‰∏≠Ë•øÊñπÊäÄÊúØÁ§æÂå∫‰πãÈó¥Êê≠Âª∫‰∫§ÊµÅÂêà‰ΩúÁöÑÊ°•Ê¢Å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ ÂàõÊñ∞Êé®Âä®&lt;/strong&gt;: Êé®Âä®‰∏≠ÂõΩÈáëËûçÁßëÊäÄÈ¢ÜÂüüÁöÑAIÊäÄÊúØÂàõÊñ∞ÂíåÂ∫îÁî®&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üåç ÂºÄÊ∫êÁ§æÂå∫&lt;/h3&gt; 
&lt;p&gt;ÊÑüË∞¢ÊâÄÊúâ‰∏∫Êú¨È°πÁõÆË¥°ÁåÆ‰ª£Á†Å„ÄÅÊñáÊ°£„ÄÅÂª∫ËÆÆÂíåÂèçÈ¶àÁöÑÂºÄÂèëËÄÖÂíåÁî®Êà∑„ÄÇÊ≠£ÊòØÂõ†‰∏∫Êúâ‰∫ÜÂ§ßÂÆ∂ÁöÑÊîØÊåÅÔºåÊàë‰ª¨ÊâçËÉΩÊõ¥Â•ΩÂú∞ÊúçÂä°‰∏≠ÊñáÁî®Êà∑Á§æÂå∫„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ü§ù Âêà‰ΩúÂÖ±Ëµ¢&lt;/h3&gt; 
&lt;p&gt;Êàë‰ª¨ÊâøËØ∫Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Â∞äÈáçÂéüÂàõ&lt;/strong&gt;: ÂßãÁªàÂ∞äÈáçÊ∫êÈ°πÁõÆÁöÑÁü•ËØÜ‰∫ßÊùÉÂíåÂºÄÊ∫êÂçèËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂèçÈ¶àË¥°ÁåÆ&lt;/strong&gt;: Â∞ÜÊúâ‰ª∑ÂÄºÁöÑÊîπËøõÂíåÂàõÊñ∞ÂèçÈ¶àÁªôÊ∫êÈ°πÁõÆÂíåÂºÄÊ∫êÁ§æÂå∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊåÅÁª≠ÊîπËøõ&lt;/strong&gt;: ‰∏çÊñ≠ÂÆåÂñÑ‰∏≠ÊñáÂ¢ûÂº∫ÁâàÊú¨ÔºåÊèê‰æõÊõ¥Â•ΩÁöÑÁî®Êà∑‰ΩìÈ™å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÊîæÂêà‰Ωú&lt;/strong&gt;: Ê¨¢Ëøé‰∏éÊ∫êÈ°πÁõÆÂõ¢ÈòüÂíåÂÖ®ÁêÉÂºÄÂèëËÄÖËøõË°åÊäÄÊúØ‰∫§ÊµÅ‰∏éÂêà‰Ωú&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìà ÁâàÊú¨ÂéÜÂè≤&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.13&lt;/strong&gt; (2025-08-02): ü§ñ ÂéüÁîüOpenAIÊîØÊåÅ‰∏éGoogle AIÁîüÊÄÅÁ≥ªÁªüÂÖ®Èù¢ÈõÜÊàê ‚ú® &lt;strong&gt;ÊúÄÊñ∞ÁâàÊú¨&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.12&lt;/strong&gt; (2025-07-29): üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûêÊ®°Âùó‰∏éÈ°πÁõÆÁªìÊûÑ‰ºòÂåñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.11&lt;/strong&gt; (2025-07-27): ü§ñ Â§öLLMÊèê‰æõÂïÜÈõÜÊàê‰∏éÊ®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.10&lt;/strong&gt; (2025-07-18): üöÄ WebÁïåÈù¢ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫‰∏éÊô∫ËÉΩ‰ºöËØùÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.9&lt;/strong&gt; (2025-07-16): üéØ CLIÁî®Êà∑‰ΩìÈ™åÈáçÂ§ß‰ºòÂåñ‰∏éÁªü‰∏ÄÊó•ÂøóÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.8&lt;/strong&gt; (2025-07-15): üé® WebÁïåÈù¢ÂÖ®Èù¢‰ºòÂåñ‰∏éÁî®Êà∑‰ΩìÈ™åÊèêÂçá&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.7&lt;/strong&gt; (2025-07-13): üê≥ ÂÆπÂô®ÂåñÈÉ®ÁΩ≤‰∏é‰∏ì‰∏öÊä•ÂëäÂØºÂá∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.6&lt;/strong&gt; (2025-07-11): üîß ÈòøÈáåÁôæÁÇº‰øÆÂ§ç‰∏éÊï∞ÊçÆÊ∫êÂçáÁ∫ß&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.5&lt;/strong&gt; (2025-07-08): üìä Ê∑ªÂä†DeepseekÊ®°ÂûãÊîØÊåÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.4&lt;/strong&gt; (2025-07-05): üèóÔ∏è Êû∂ÊûÑ‰ºòÂåñ‰∏éÈÖçÁΩÆÁÆ°ÁêÜÈáçÊûÑ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.3&lt;/strong&gt; (2025-06-28): üá®üá≥ AËÇ°Â∏ÇÂú∫ÂÆåÊï¥ÊîØÊåÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.2&lt;/strong&gt; (2025-06-15): üåê WebÁïåÈù¢ÂíåÈÖçÁΩÆÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.1&lt;/strong&gt; (2025-06-01): üß† ÂõΩ‰∫ßLLMÈõÜÊàê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;üìã &lt;strong&gt;ËØ¶ÁªÜÊõ¥Êñ∞Êó•Âøó&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/releases/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìû ËÅîÁ≥ªÊñπÂºè&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/hsliuping/TradingAgents-CN/issues"&gt;Êèê‰∫§ÈóÆÈ¢òÂíåÂª∫ËÆÆ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÈÇÆÁÆ±&lt;/strong&gt;: &lt;a href="mailto:hsliup@163.com"&gt;hsliup@163.com&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;È°πÁõÆÔº±Ôº±Áæ§Ôºö187537480&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;È°πÁõÆÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÔºöTradingAgents-CN&lt;/p&gt; &lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/assets/weixin.png" alt="ÂæÆ‰ø°ÂÖ¨‰ºóÂè∑" width="200" /&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÂéüÈ°πÁõÆ&lt;/strong&gt;: &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TauricResearch/TradingAgents&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÊñáÊ°£&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;ÂÆåÊï¥ÊñáÊ°£ÁõÆÂΩï&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö†Ô∏è È£éÈô©ÊèêÁ§∫&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;ÈáçË¶ÅÂ£∞Êòé&lt;/strong&gt;: Êú¨Ê°ÜÊû∂‰ªÖÁî®‰∫éÁ†îÁ©∂ÂíåÊïôËÇ≤ÁõÆÁöÑÔºå‰∏çÊûÑÊàêÊäïËµÑÂª∫ËÆÆ„ÄÇ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìä ‰∫§ÊòìË°®Áé∞ÂèØËÉΩÂõ†Â§öÁßçÂõ†Á¥†ËÄåÂºÇ&lt;/li&gt; 
 &lt;li&gt;ü§ñ AIÊ®°ÂûãÁöÑÈ¢ÑÊµãÂ≠òÂú®‰∏çÁ°ÆÂÆöÊÄß&lt;/li&gt; 
 &lt;li&gt;üí∞ ÊäïËµÑÊúâÈ£éÈô©ÔºåÂÜ≥Á≠ñÈúÄË∞®ÊÖé&lt;/li&gt; 
 &lt;li&gt;üë®‚Äçüíº Âª∫ËÆÆÂí®ËØ¢‰∏ì‰∏öË¥¢Âä°È°æÈóÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;üåü Â¶ÇÊûúËøô‰∏™È°πÁõÆÂØπÊÇ®ÊúâÂ∏ÆÂä©ÔºåËØ∑ÁªôÊàë‰ª¨‰∏Ä‰∏™ StarÔºÅ&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/hsliuping/TradingAgents-CN"&gt;‚≠ê Star this repo&lt;/a&gt; | &lt;a href="https://github.com/hsliuping/TradingAgents-CN/fork"&gt;üç¥ Fork this repo&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;üìñ Read the docs&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>trycua/cua</title>
      <link>https://github.com/trycua/cua</link>
      <description>&lt;p&gt;Open-source infrastructure for Computer-Use Agents. Sandboxes, SDKs, and benchmarks to train and evaluate AI agents that can control full desktops (macOS, Linux, Windows).&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" alt="Cua logo" height="150" srcset="img/logo_white.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" alt="Cua logo" height="150" srcset="img/logo_black.png" /&gt; 
  &lt;img alt="Cua logo" height="150" src="https://raw.githubusercontent.com/trycua/cua/main/img/logo_black.png" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/#"&gt;&lt;img src="https://img.shields.io/badge/Python-333333?logo=python&amp;amp;logoColor=white&amp;amp;labelColor=333333" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/#"&gt;&lt;img src="https://img.shields.io/badge/Swift-F05138?logo=swift&amp;amp;logoColor=white" alt="Swift" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/#"&gt;&lt;img src="https://img.shields.io/badge/macOS-000000?logo=apple&amp;amp;logoColor=F0F0F0" alt="macOS" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/mVnXXpdE85"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://trendshift.io/repositories/13685" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13685" alt="trycua%2Fcua | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We‚Äôre hosting the &lt;strong&gt;Computer-Use Agents SOTA Challenge&lt;/strong&gt; at &lt;a href="https://hackthenorth.com"&gt;Hack the North&lt;/a&gt; and online!&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Track A (On-site @ UWaterloo)&lt;/strong&gt;: Reserved for participants accepted to Hack the North. üèÜ Prize: &lt;strong&gt;YC interview guaranteed&lt;/strong&gt;.&lt;br /&gt; &lt;strong&gt;Track B (Remote)&lt;/strong&gt;: Open to everyone worldwide. üèÜ Prize: &lt;strong&gt;Cash award&lt;/strong&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;üëâ Sign up here: &lt;a href="https://www.trycua.com/hackathon"&gt;trycua.com/hackathon&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;cua&lt;/strong&gt; ("koo-ah") is Docker for &lt;a href="https://www.oneusefulthing.org/p/when-you-give-a-claude-a-mouse"&gt;Computer-Use Agents&lt;/a&gt; - it enables AI agents to control full operating systems in virtual containers and deploy them locally or to the cloud.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;video src="https://github.com/user-attachments/assets/c619b4ea-bb8e-4382-860e-f3757e36af20" width="600" controls&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;p&gt;With the Computer SDK, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;automate Windows, Linux, and macOS VMs with a consistent, &lt;a href="https://docs.trycua.com/docs/libraries/computer#interface-actions"&gt;pyautogui-like API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;create &amp;amp; manage VMs &lt;a href="https://docs.trycua.com/docs/computer-sdk/computers#cua-local-containers"&gt;locally&lt;/a&gt; or using &lt;a href="https://www.trycua.com/"&gt;cua cloud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the Agent SDK, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run computer-use models with a &lt;a href="https://docs.trycua.com/docs/agent-sdk/message-format"&gt;consistent schema&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;benchmark on OSWorld-Verified, SheetBench-V2, and more &lt;a href="https://docs.trycua.com/docs/agent-sdk/integrations/hud"&gt;with a single line of code using HUD&lt;/a&gt; (&lt;a href="https://github.com/trycua/cua/raw/main/notebooks/eval_osworld.ipynb"&gt;Notebook&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;combine UI grounding models with any LLM using &lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/composed-agents"&gt;composed agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;use new UI agent models and UI grounding models from the Model Zoo below with just a model string (e.g., &lt;code&gt;ComputerAgent(model="openai/computer-use-preview")&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;use API or local inference by changing a prefix (e.g., &lt;code&gt;openai/&lt;/code&gt;, &lt;code&gt;openrouter/&lt;/code&gt;, &lt;code&gt;ollama/&lt;/code&gt;, &lt;code&gt;huggingface-local/&lt;/code&gt;, &lt;code&gt;mlx/&lt;/code&gt;, &lt;a href="https://docs.litellm.ai/docs/providers"&gt;etc.&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CUA Model Zoo üê®&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/computer-use-agents"&gt;All-in-one CUAs&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/composed-agents"&gt;UI Grounding Models&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/composed-agents"&gt;UI Planning Models&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;anthropic/claude-sonnet-4-5-20250929&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/xlangai/OpenCUA-{7B,32B}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any all-in-one CUA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;openai/computer-use-preview&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/HelloKKMe/GTA1-{7B,32B,72B}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any VLM (using liteLLM, requires &lt;code&gt;tools&lt;/code&gt; parameter)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;openrouter/z-ai/glm-4.5v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/Hcompany/Holo1.5-{3B,7B,72B}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any LLM (using liteLLM, requires &lt;code&gt;moondream3+&lt;/code&gt; prefix )&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/OpenGVLab/InternVL3_5-{1B,2B,4B,8B,...}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any all-in-one CUA&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/ByteDance-Seed/UI-TARS-1.5-7B&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;moondream3+{ui planning}&lt;/code&gt; (supports text-only models)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;omniparser+{ui planning}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;{ui grounding}+{ui planning}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;human/human&lt;/code&gt; ‚Üí &lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/human-in-the-loop"&gt;Human-in-the-Loop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Missing a model? &lt;a href="https://github.com/trycua/cua/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;title=%5BAgent%5D%3A+Add+model+support+for+"&gt;Raise a feature request&lt;/a&gt; or &lt;a href="https://github.com/trycua/cua/raw/main/CONTRIBUTING.md"&gt;contribute&lt;/a&gt;!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h1&gt;Quick Start&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.trycua.com/docs/quickstart-ui"&gt;Get started with a Computer-Use Agent UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.trycua.com/docs/quickstart-cli"&gt;Get started with the Computer-Use Agent CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.trycua.com/docs/quickstart-devs"&gt;Get started with the Python SDKs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h1&gt;Usage (&lt;a href="https://docs.trycua.com/docs"&gt;Docs&lt;/a&gt;)&lt;/h1&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install cua-agent[all]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agent import ComputerAgent

agent = ComputerAgent(
    model="anthropic/claude-3-5-sonnet-20241022",
    tools=[computer],
    max_trajectory_budget=5.0
)

messages = [{"role": "user", "content": "Take a screenshot and tell me what you see"}]

async for result in agent.run(messages):
    for item in result["output"]:
        if item["type"] == "message":
            print(item["content"][0]["text"])
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Output format (OpenAI Agent Responses Format):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{ 
  "output": [
    # user input
    {
        "role": "user",
        "content": "go to trycua on gh"
    },
    # first agent turn adds the model output to the history
    {
        "summary": [
            {
                "text": "Searching Firefox for Trycua GitHub",
                "type": "summary_text"
            }
        ],
        "type": "reasoning"
    },
    {
        "action": {
            "text": "Trycua GitHub",
            "type": "type"
        },
        "call_id": "call_QI6OsYkXxl6Ww1KvyJc4LKKq",
        "status": "completed",
        "type": "computer_call"
    },
    # second agent turn adds the computer output to the history
    {
        "type": "computer_call_output",
        "call_id": "call_QI6OsYkXxl6Ww1KvyJc4LKKq",
        "output": {
            "type": "input_image",
            "image_url": "data:image/png;base64,..."
        }
    },
    # final agent turn adds the agent output text to the history
    {
        "type": "message",
        "role": "assistant",
        "content": [
          {
            "text": "Success! The Trycua GitHub page has been opened.",
            "type": "output_text"
          }
        ]
    }
  ], 
  "usage": {
      "prompt_tokens": 150,
      "completion_tokens": 75,
      "total_tokens": 225,
      "response_cost": 0.01,
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Computer (&lt;a href="https://docs.trycua.com/docs/computer-sdk/computers"&gt;Docs&lt;/a&gt;)&lt;/h1&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install cua-computer[all]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from computer import Computer

async with Computer(
    os_type="linux",
    provider_type="cloud",
    name="your-sandbox-name",
    api_key="your-api-key"
) as computer:
    # Take screenshot
    screenshot = await computer.interface.screenshot()

    # Click and type
    await computer.interface.left_click(100, 100)
    await computer.interface.type("Hello!")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/mcp-server/README.md"&gt;How to use the MCP Server with Claude Desktop or other MCP clients&lt;/a&gt; - One of the easiest ways to get started with Cua&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/agent/README.md"&gt;How to use OpenAI Computer-Use, Anthropic, OmniParser, or UI-TARS for your Computer-Use Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/lume/README.md"&gt;How to use Lume CLI for managing desktops&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.trycua.com/blog/training-computer-use-models-trajectories-1"&gt;Training Computer-Use Models: Collecting Human Trajectories with Cua (Part 1)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Module&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Installation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/lume/README.md"&gt;&lt;strong&gt;Lume&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;VM management for macOS/Linux using Apple's Virtualization.Framework&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;curl -fsSL https://raw.githubusercontent.com/trycua/cua/main/libs/lume/scripts/install.sh | bash&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/lumier/README.md"&gt;&lt;strong&gt;Lumier&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Docker interface for macOS and Linux VMs&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;docker pull trycua/lumier:latest&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/computer/README.md"&gt;&lt;strong&gt;Computer (Python)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python Interface for controlling virtual machines&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install "cua-computer[all]"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/typescript/computer/README.md"&gt;&lt;strong&gt;Computer (Typescript)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Typescript Interface for controlling virtual machines&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npm install @trycua/computer&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/agent/README.md"&gt;&lt;strong&gt;Agent&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AI agent framework for automating tasks&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install "cua-agent[all]"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/mcp-server/README.md"&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;MCP server for using CUA with Claude Desktop&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-mcp-server&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/som/README.md"&gt;&lt;strong&gt;SOM&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Self-of-Mark library for Agent&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-som&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/computer-server/README.md"&gt;&lt;strong&gt;Computer Server&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Server component for Computer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-computer-server&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/core/README.md"&gt;&lt;strong&gt;Core (Python)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python Core utilities&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-core&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/typescript/core/README.md"&gt;&lt;strong&gt;Core (Typescript)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Typescript Core utilities&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npm install @trycua/core&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.com/invite/mVnXXpdE85"&gt;Discord community&lt;/a&gt; to discuss ideas, get assistance, or share your demos!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Cua is open-sourced under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/LICENSE.md"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;Portions of this project, specifically components adapted from Kasm Technologies Inc., are also licensed under the MIT License. See &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/kasm/LICENSE"&gt;libs/kasm/LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;Microsoft's OmniParser, which is used in this project, is licensed under the Creative Commons Attribution 4.0 International License (CC-BY-4.0). See the &lt;a href="https://github.com/microsoft/OmniParser/raw/master/LICENSE"&gt;OmniParser LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Third-Party Licenses and Optional Components&lt;/h3&gt; 
&lt;p&gt;Some optional extras for this project depend on third-party packages that are licensed under terms different from the MIT License.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The optional "omni" extra (installed via &lt;code&gt;pip install "cua-agent[omni]"&lt;/code&gt;) installs the &lt;code&gt;cua-som&lt;/code&gt; module, which includes &lt;code&gt;ultralytics&lt;/code&gt; and is licensed under the AGPL-3.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When you choose to install and use such optional extras, your use, modification, and distribution of those third-party components are governed by their respective licenses (e.g., AGPL-3.0 for &lt;code&gt;ultralytics&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to Cua! Please refer to our &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;Apple, macOS, and Apple Silicon are trademarks of Apple Inc.&lt;br /&gt; Ubuntu and Canonical are registered trademarks of Canonical Ltd.&lt;br /&gt; Microsoft is a registered trademark of Microsoft Corporation.&lt;/p&gt; 
&lt;p&gt;This project is not affiliated with, endorsed by, or sponsored by Apple Inc., Canonical Ltd., Microsoft Corporation, or Kasm Technologies.&lt;/p&gt; 
&lt;h2&gt;Stargazers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our supporters!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/trycua/cua"&gt;&lt;img src="https://starchart.cc/trycua/cua.svg?variant=adaptive" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Thank you to all our &lt;a href="https://github.com/sponsors/trycua"&gt;GitHub Sponsors&lt;/a&gt;!&lt;/p&gt; 
&lt;img width="300" alt="coderabbit-cli" src="https://github.com/user-attachments/assets/23a98e38-7897-4043-8ef7-eb990520dccc" /&gt;</description>
    </item>
    
    <item>
      <title>dyad-sh/dyad</title>
      <link>https://github.com/dyad-sh/dyad</link>
      <description>&lt;p&gt;Free, local, open-source AI app builder ‚ú® v0 / lovable / Bolt alternative üåü Star if you like it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dyad&lt;/h1&gt; 
&lt;p&gt;Dyad is a local, open-source AI app builder. It's fast, private, and fully under your control ‚Äî like Lovable, v0, or Bolt, but running right on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://dyad.sh/"&gt;&lt;img src="https://github.com/user-attachments/assets/f6c83dfc-6ffd-4d32-93dd-4b9c46d17790" alt="Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More info at: &lt;a href="http://dyad.sh/"&gt;http://dyad.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ö°Ô∏è &lt;strong&gt;Local&lt;/strong&gt;: Fast, private and no lock-in.&lt;/li&gt; 
 &lt;li&gt;üõ† &lt;strong&gt;Bring your own keys&lt;/strong&gt;: Use your own AI API keys ‚Äî no vendor lock-in.&lt;/li&gt; 
 &lt;li&gt;üñ•Ô∏è &lt;strong&gt;Cross-platform&lt;/strong&gt;: Easy to run on Mac or Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¶ Download&lt;/h2&gt; 
&lt;p&gt;No sign-up required. Just download and go.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.dyad.sh/#download"&gt;üëâ Download for your platform&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;ü§ù Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community of AI app builders on &lt;strong&gt;Reddit&lt;/strong&gt;: &lt;a href="https://www.reddit.com/r/dyadbuilders/"&gt;r/dyadbuilders&lt;/a&gt; - share your projects and get help from the community!&lt;/p&gt; 
&lt;h2&gt;üõ†Ô∏è Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dyad&lt;/strong&gt; is open-source (Apache 2.0 licensed).&lt;/p&gt; 
&lt;p&gt;If you're interested in contributing to dyad, please read our &lt;a href="https://raw.githubusercontent.com/dyad-sh/dyad/main/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>davila7/claude-code-templates</title>
      <link>https://github.com/davila7/claude-code-templates</link>
      <description>&lt;p&gt;CLI tool for configuring and monitoring Claude Code&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.npmjs.com/package/claude-code-templates"&gt;&lt;img src="https://img.shields.io/npm/v/claude-code-templates.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-code-templates"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-code-templates.svg?sanitize=true" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/"&gt;&lt;img src="https://badges.frapsoft.com/os/v1/open-source.svg?v=103" alt="Open Source" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" alt="PRs Welcome" /&gt;&lt;/a&gt; &lt;a href="https://github.com/davila7/claude-code-templates"&gt;&lt;img src="https://img.shields.io/github/stars/davila7/claude-code-templates.svg?style=social&amp;amp;label=Star" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hesreallyhim/awesome-claude-code"&gt;&lt;img src="https://awesome.re/mentioned-badge-flat.svg?sanitize=true" alt="Mentioned in Awesome Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://buymeacoffee.com/daniavila"&gt;&lt;img src="https://img.shields.io/badge/%E2%98%95-Buy%20me%20a%20coffee-ffdd00?style=flat&amp;amp;logo=buy-me-a-coffee" alt="Buy Me a Coffee" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Claude Code Templates (aitmpl.com)&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Ready-to-use configurations for Anthropic's Claude Code.&lt;/strong&gt; A comprehensive collection of AI agents, custom commands, settings, hooks, external integrations (MCPs), and project templates to enhance your development workflow.&lt;/p&gt; 
&lt;h2&gt;Browse &amp;amp; Install Components and Templates&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aitmpl.com"&gt;Browse All Templates&lt;/a&gt;&lt;/strong&gt; - Interactive web interface to explore and install 100+ agents, commands, settings, hooks, and MCPs.&lt;/p&gt; 
&lt;img width="1049" height="855" alt="Screenshot 2025-08-19 at 08 09 24" src="https://github.com/user-attachments/assets/e3617410-9b1c-4731-87b7-a3858800b737" /&gt; 
&lt;h2&gt;üöÄ Quick Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install a complete development stack
npx claude-code-templates@latest --agent development-team/frontend-developer --command testing/generate-tests --mcp development/github-integration

# Browse and install interactively
npx claude-code-templates@latest

# Install specific components
npx claude-code-templates@latest --agent business-marketing/security-auditor
npx claude-code-templates@latest --command performance/optimize-bundle
npx claude-code-templates@latest --setting performance/mcp-timeouts
npx claude-code-templates@latest --hook git/pre-commit-validation
npx claude-code-templates@latest --mcp database/postgresql-integration
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What You Get&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Component&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Examples&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ü§ñ Agents&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;AI specialists for specific domains&lt;/td&gt; 
   &lt;td&gt;Security auditor, React performance optimizer, database architect&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‚ö° Commands&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Custom slash commands&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/generate-tests&lt;/code&gt;, &lt;code&gt;/optimize-bundle&lt;/code&gt;, &lt;code&gt;/check-security&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üîå MCPs&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;External service integrations&lt;/td&gt; 
   &lt;td&gt;GitHub, PostgreSQL, Stripe, AWS, OpenAI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‚öôÔ∏è Settings&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Claude Code configurations&lt;/td&gt; 
   &lt;td&gt;Timeouts, memory settings, output styles&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ü™ù Hooks&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Automation triggers&lt;/td&gt; 
   &lt;td&gt;Pre-commit validation, post-completion actions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üì¶ Templates&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Complete project configurations with CLAUDE.md, .claude/* files and .mcp.json&lt;/td&gt; 
   &lt;td&gt;Framework-specific setups, project best practices&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üõ†Ô∏è Additional Tools&lt;/h2&gt; 
&lt;p&gt;Beyond the template catalog, Claude Code Templates includes powerful development tools:&lt;/p&gt; 
&lt;h3&gt;üìä Claude Code Analytics&lt;/h3&gt; 
&lt;p&gt;Monitor your AI-powered development sessions in real-time with live state detection and performance metrics.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-code-templates@latest --analytics
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üí¨ Conversation Monitor&lt;/h3&gt; 
&lt;p&gt;Mobile-optimized interface to view Claude responses in real-time with secure remote access.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Local access
npx claude-code-templates@latest --chats

# Secure remote access via Cloudflare Tunnel
npx claude-code-templates@latest --chats --tunnel
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üîç Health Check&lt;/h3&gt; 
&lt;p&gt;Comprehensive diagnostics to ensure your Claude Code installation is optimized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-code-templates@latest --health-check
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üîå Plugin Dashboard&lt;/h3&gt; 
&lt;p&gt;View marketplaces, installed plugins, and manage permissions from a unified interface.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-code-templates@latest --plugins
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.aitmpl.com/"&gt;üìö docs.aitmpl.com&lt;/a&gt;&lt;/strong&gt; - Complete guides, examples, and API reference for all components and tools.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! &lt;strong&gt;&lt;a href="https://aitmpl.com"&gt;Browse existing templates&lt;/a&gt;&lt;/strong&gt; to see what's available, then check our &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to add your own agents, commands, MCPs, settings, or hooks.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please read our &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; before contributing.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Attribution&lt;/h2&gt; 
&lt;p&gt;This collection includes components from multiple sources:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Agents Collection:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;wshobson/agents Collection&lt;/strong&gt; by &lt;a href="https://github.com/wshobson/agents"&gt;wshobson&lt;/a&gt; - Licensed under MIT License (48 agents)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Commands Collection:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;awesome-claude-code Commands&lt;/strong&gt; by &lt;a href="https://github.com/hesreallyhim/awesome-claude-code"&gt;hesreallyhim&lt;/a&gt; - Licensed under CC0 1.0 Universal (21 commands)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/davila7/claude-code-templates/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;üîó Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üåê Browse Templates&lt;/strong&gt;: &lt;a href="https://aitmpl.com"&gt;aitmpl.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìö Documentation&lt;/strong&gt;: &lt;a href="https://docs.aitmpl.com"&gt;docs.aitmpl.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üí¨ Community&lt;/strong&gt;: &lt;a href="https://github.com/davila7/claude-code-templates/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üêõ Issues&lt;/strong&gt;: &lt;a href="https://github.com/davila7/claude-code-templates/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚≠ê Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#davila7/claude-code-templates&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=davila7/claude-code-templates&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;‚≠ê Found this useful? Give us a star to support the project!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://buymeacoffee.com/daniavila"&gt;&lt;img src="https://img.buymeacoffee.com/button-api/?text=Buy%20me%20a%20coffee&amp;amp;slug=daniavila&amp;amp;button_colour=FFDD00&amp;amp;font_colour=000000&amp;amp;font_family=Cookie&amp;amp;outline_colour=000000&amp;amp;coffee_colour=ffffff" alt="Buy Me A Coffee" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dgtlmoon/changedetection.io</title>
      <link>https://github.com/dgtlmoon/changedetection.io</link>
      <description>&lt;p&gt;Best and simplest tool for website change detection, web page monitoring, and website change alerts. Perfect for tracking content changes, price drops, restock alerts, and website defacement monitoring‚Äîall for free or enjoy our SaaS plan!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Detect Website Changes Automatically ‚Äî Monitor Web Page Changes in Real Time&lt;/h1&gt; 
&lt;p&gt;Monitor websites for updates ‚Äî get notified via Discord, Email, Slack, Telegram, Webhook and many more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Detect web page content changes and get instant alerts.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Ideal for monitoring price changes, content edits, conditional changes and more.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png" style="max-width:100%;" alt="Web site page change monitoring" title="Web site page change monitoring" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dgtlmoon/changedetection.io/releases"&gt;&lt;img src="https://img.shields.io:/github/v/release/dgtlmoon/changedetection.io?style=for-the-badge" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dgtlmoon/changedetection.io"&gt;&lt;img src="https://img.shields.io/docker/pulls/dgtlmoon/changedetection.io?style=for-the-badge" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/github/license/dgtlmoon/changedetection.io.svg?style=for-the-badge" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/dgtlmoon/changedetection.io/actions/workflows/test-only.yml/badge.svg?branch=master" alt="changedetection.io" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io"&gt;&lt;strong&gt;Get started with website page change monitoring straight away. Don't have time? Try our $8.99/month subscription, use our proxies and support!&lt;/strong&gt;&lt;/a&gt; , &lt;em&gt;half the price of other website change monitoring services!&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome browser included.&lt;/li&gt; 
 &lt;li&gt;Nothing to install, access via browser login after signup.&lt;/li&gt; 
 &lt;li&gt;Super fast, no registration needed setup.&lt;/li&gt; 
 &lt;li&gt;Get started watching and receiving website change notifications straight away.&lt;/li&gt; 
 &lt;li&gt;See our &lt;a href="https://changedetection.io/tutorials"&gt;tutorials and how-to page for more inspiration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Target specific parts of the webpage using the Visual Selector tool.&lt;/h3&gt; 
&lt;p&gt;Available when connected to a &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Playwright-content-fetcher"&gt;playwright content fetcher&lt;/a&gt; (included as part of our subscription service)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/visualselector-anim.gif" style="max-width:100%;" alt="Select parts and elements of a web page to monitor for changes" title="Select parts and elements of a web page to monitor for changes" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Easily see what changed, examine by word, line, or individual character.&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-diff.png" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference " title="Self-hosted web page change monitoring context difference " /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Perform interactive browser steps&lt;/h3&gt; 
&lt;p&gt;Fill in text boxes, click buttons and more, setup your changedetection scenario.&lt;/p&gt; 
&lt;p&gt;Using the &lt;strong&gt;Browser Steps&lt;/strong&gt; configuration, add basic steps before performing change detection, such as logging into websites, adding a product to a cart, accept cookie logins, entering dates and refining searches.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/browsersteps-anim.gif" style="max-width:100%;" alt="Website change detection with interactive browser steps, detect changes behind login and password, search queries and more" title="Website change detection with interactive browser steps, detect changes behind login and password, search queries and more" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After &lt;strong&gt;Browser Steps&lt;/strong&gt; have been run, then visit the &lt;strong&gt;Visual Selector&lt;/strong&gt; tab to refine the content you're interested in. Requires Playwright to be enabled.&lt;/p&gt; 
&lt;h3&gt;Awesome restock and price change notifications&lt;/h3&gt; 
&lt;p&gt;Enable the &lt;em&gt;"Re-stock &amp;amp; Price detection for single product pages"&lt;/em&gt; option to activate the best way to monitor product pricing, this will extract any meta-data in the HTML page and give you many options to follow the pricing of the product.&lt;/p&gt; 
&lt;p&gt;Easily organise and monitor prices for products from the dashboard, get alerts and notifications when the price of a product changes or comes back in stock again!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/restock-overview.png" style="max-width:100%;" alt="Easily keep an eye on product price changes directly from the UI" title="Easily keep an eye on product price changes directly from the UI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Set price change notification parameters, upper and lower price, price change percentage and more. Always know when a product for sale drops in price.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/restock-settings.png" style="max-width:100%;" alt="Set upper lower and percentage price change notification values" title="Set upper lower and percentage price change notification values" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Example use cases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Products and services have a change in pricing&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Out of stock notification&lt;/em&gt; and &lt;em&gt;Back In stock notification&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Monitor and track PDF file changes, know when a PDF file has text changes.&lt;/li&gt; 
 &lt;li&gt;Governmental department updates (changes are often only on their websites)&lt;/li&gt; 
 &lt;li&gt;New software releases, security advisories when you're not on their mailing list.&lt;/li&gt; 
 &lt;li&gt;Festivals with changes&lt;/li&gt; 
 &lt;li&gt;Discogs restock alerts and monitoring&lt;/li&gt; 
 &lt;li&gt;Realestate listing changes&lt;/li&gt; 
 &lt;li&gt;Know when your favourite whiskey is on sale, or other special deals are announced before anyone else&lt;/li&gt; 
 &lt;li&gt;COVID related news from government websites&lt;/li&gt; 
 &lt;li&gt;University/organisation news from their website&lt;/li&gt; 
 &lt;li&gt;Detect and monitor changes in JSON API responses&lt;/li&gt; 
 &lt;li&gt;JSON API monitoring and alerting&lt;/li&gt; 
 &lt;li&gt;Changes in legal and other documents&lt;/li&gt; 
 &lt;li&gt;Trigger API calls via notifications when text appears on a website&lt;/li&gt; 
 &lt;li&gt;Glue together APIs using the JSON filter and JSON notifications&lt;/li&gt; 
 &lt;li&gt;Create RSS feeds based on changes in web content&lt;/li&gt; 
 &lt;li&gt;Monitor HTML source code for unexpected changes, strengthen your PCI compliance&lt;/li&gt; 
 &lt;li&gt;You have a very sensitive list of URLs to watch and you do &lt;em&gt;not&lt;/em&gt; want to use the paid alternatives. (Remember, &lt;em&gt;you&lt;/em&gt; are the product)&lt;/li&gt; 
 &lt;li&gt;Get notified when certain keywords appear in Twitter search results&lt;/li&gt; 
 &lt;li&gt;Proactively search for jobs, get notified when companies update their careers page, search job portals for keywords.&lt;/li&gt; 
 &lt;li&gt;Get alerts when new job positions are open on Bamboo HR and other job platforms&lt;/li&gt; 
 &lt;li&gt;Website defacement monitoring&lt;/li&gt; 
 &lt;li&gt;Pok√©mon Card Restock Tracker / Pok√©mon TCG Tracker&lt;/li&gt; 
 &lt;li&gt;RegTech - stay ahead of regulatory changes, regulatory compliance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Need an actual Chrome runner with Javascript support? We support fetching via WebDriver and Playwright!&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Key Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lots of trigger filters, such as "Trigger on text", "Remove text by selector", "Ignore text", "Extract text", also using regular-expressions!&lt;/li&gt; 
 &lt;li&gt;Target elements with xPath 1 and xPath 2, CSS Selectors, Easily monitor complex JSON with JSONPath or jq&lt;/li&gt; 
 &lt;li&gt;Switch between fast non-JS and Chrome JS based "fetchers"&lt;/li&gt; 
 &lt;li&gt;Track changes in PDF files (Monitor text changed in the PDF, Also monitor PDF filesize and checksums)&lt;/li&gt; 
 &lt;li&gt;Easily specify how often a site should be checked&lt;/li&gt; 
 &lt;li&gt;Execute JS before extracting text (Good for logging in, see examples in the UI!)&lt;/li&gt; 
 &lt;li&gt;Override Request Headers, Specify &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;GET&lt;/code&gt; and other methods&lt;/li&gt; 
 &lt;li&gt;Use the "Visual Selector" to help target specific elements&lt;/li&gt; 
 &lt;li&gt;Configurable &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration"&gt;proxy per watch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Send a screenshot with the notification when a change is detected in the web page&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We &lt;a href="https://brightdata.grsm.io/n0r16zf7eivq"&gt;recommend and use Bright Data&lt;/a&gt; global proxy services, Bright Data will match any first deposit up to $150 using our signup link.&lt;/p&gt; 
&lt;p&gt;Please &lt;span&gt;‚≠ê&lt;/span&gt; star &lt;span&gt;‚≠ê&lt;/span&gt; this project and help it grow! &lt;a href="https://github.com/dgtlmoon/changedetection.io/"&gt;https://github.com/dgtlmoon/changedetection.io/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Conditional web page changes&lt;/h3&gt; 
&lt;p&gt;Easily &lt;a href="https://changedetection.io/tutorial/conditional-actions-web-page-changes"&gt;configure conditional actions&lt;/a&gt;, for example, only trigger when a price is above or below a preset amount, or &lt;a href="https://changedetection.io/tutorial/how-monitor-keywords-any-website"&gt;when a web page includes (or does not include) a keyword&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/web-page-change-conditions.png" style="max-width:80%;" alt="Conditional web page changes" title="Conditional web page changes" /&gt; 
&lt;h3&gt;Schedule web page watches in any timezone, limit by day of week and time.&lt;/h3&gt; 
&lt;p&gt;Easily set a re-check schedule, for example you could limit the web page change detection to only operate during business hours. Or perhaps based on a foreign timezone (for example, you want to check for the latest news-headlines in a foreign country at 0900 AM),&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/scheduler.png" style="max-width:80%;" alt="How to monitor web page changes according to a schedule" title="How to monitor web page changes according to a schedule" /&gt; 
&lt;p&gt;Includes quick short-cut buttons to setup a schedule for &lt;strong&gt;business hours only&lt;/strong&gt;, or &lt;strong&gt;weekends&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;We have a Chrome extension!&lt;/h3&gt; 
&lt;p&gt;Easily add the current web page to your changedetection.io tool, simply install the extension and click "Sync" to connect it to your existing changedetection.io install.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/changedetectionio-website/kefcfmgmlhmankjmnbijimhofdjekbop"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/chrome-extension-screenshot.png" style="max-width:80%;" alt="Chrome Extension to easily add the current web-page to detect a change." title="Chrome Extension to easily add the current web-page to detect a change." /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/changedetectionio-website/kefcfmgmlhmankjmnbijimhofdjekbop"&gt;Goto the Chrome Webstore to download the extension.&lt;/a&gt; ( Or check out the &lt;a href="https://github.com/dgtlmoon/changedetection.io-browser-extension"&gt;GitHub repo&lt;/a&gt; )&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;With Docker composer, just clone this repository and..&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Docker standalone&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ docker run -d --restart always -p "127.0.0.1:5000:5000" -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;:latest&lt;/code&gt; tag is our latest stable release, &lt;code&gt;:dev&lt;/code&gt; tag is our bleeding edge &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; 
&lt;p&gt;Alternative docker repository over at ghcr - &lt;a href="https://ghcr.io/dgtlmoon/changedetection.io"&gt;ghcr.io/dgtlmoon/changedetection.io&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;See the install instructions at the wiki &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows"&gt;https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Python Pip&lt;/h3&gt; 
&lt;p&gt;Check out our pypi page &lt;a href="https://pypi.org/project/changedetection.io/"&gt;https://pypi.org/project/changedetection.io/&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pip3 install changedetection.io
$ changedetection.io -d /path/to/empty/data/dir -p 5000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://127.0.0.1:5000"&gt;http://127.0.0.1:5000&lt;/a&gt; , You should now be able to access the UI.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Now with per-site configurable support for using a fast built in HTTP fetcher or use a Chrome based fetcher for monitoring of JavaScript websites!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Updating changedetection.io&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;docker pull dgtlmoon/changedetection.io
docker kill $(docker ps -a -f name=changedetection.io -q)
docker rm $(docker ps -a -f name=changedetection.io -q)
docker run -d --restart always -p "127.0.0.1:5000:5000" -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;docker compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose pull &amp;amp;&amp;amp; docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the wiki for more information &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki"&gt;https://github.com/dgtlmoon/changedetection.io/wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Filters&lt;/h2&gt; 
&lt;p&gt;XPath(1.0), JSONPath, jq, and CSS support comes baked in! You can be as specific as you need, use XPath exported from various XPath element query creation tools. (We support LXML &lt;code&gt;re:test&lt;/code&gt;, &lt;code&gt;re:match&lt;/code&gt; and &lt;code&gt;re:replace&lt;/code&gt;.)&lt;/p&gt; 
&lt;h2&gt;Notifications&lt;/h2&gt; 
&lt;p&gt;ChangeDetection.io supports a massive amount of notifications (including email, office365, custom APIs, etc) when a web-page has a change detected thanks to the &lt;a href="https://github.com/caronc/apprise"&gt;apprise&lt;/a&gt; library. Simply set one or more notification URL's in the &lt;em&gt;[edit]&lt;/em&gt; tab of that watch.&lt;/p&gt; 
&lt;p&gt;Just some examples&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;discord://webhook_id/webhook_token
flock://app_token/g:channel_id
gitter://token/room
gchat://workspace/key/token
msteams://TokenA/TokenB/TokenC/
o365://TenantID:AccountEmail/ClientID/ClientSecret/TargetEmail
rocket://user:password@hostname/#Channel
mailto://user:pass@example.com?to=receivingAddress@example.com
json://someserver.com/custom-api
syslog://
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/caronc/apprise#popular-notification-services"&gt;And everything else in this list!&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-notifications.png" style="max-width:100%;" alt="Self-hosted web page change monitoring notifications" title="Self-hosted web page change monitoring notifications" /&gt; 
&lt;p&gt;Now you can also customise your notification content and use &lt;a target="_new" href="https://jinja.palletsprojects.com/en/3.0.x/templates/"&gt;Jinja2 templating&lt;/a&gt; for their title and body!&lt;/p&gt; 
&lt;h2&gt;JSON API Monitoring&lt;/h2&gt; 
&lt;p&gt;Detect changes and monitor data in JSON API's by using either JSONPath or jq to filter, parse, and restructure JSON as needed.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-filter-field-example.png" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;This will re-parse the JSON and apply formatting to the text, making it super easy to monitor and detect changes in JSON API results&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-diff-example.png" alt="image" /&gt;&lt;/p&gt; 
&lt;h3&gt;JSONPath or jq?&lt;/h3&gt; 
&lt;p&gt;For more complex parsing, filtering, and modifying of JSON data, jq is recommended due to the built-in operators and functions. Refer to the &lt;a href="https://stedolan.github.io/jq/manual/"&gt;documentation&lt;/a&gt; for more specific information on jq.&lt;/p&gt; 
&lt;p&gt;One big advantage of &lt;code&gt;jq&lt;/code&gt; is that you can use logic in your JSON filter, such as filters to only show items that have a value greater than/less than etc.&lt;/p&gt; 
&lt;p&gt;See the wiki &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/JSON-Selector-Filter-help"&gt;https://github.com/dgtlmoon/changedetection.io/wiki/JSON-Selector-Filter-help&lt;/a&gt; for more information and examples&lt;/p&gt; 
&lt;h3&gt;Parse JSON embedded in HTML!&lt;/h3&gt; 
&lt;p&gt;When you enable a &lt;code&gt;json:&lt;/code&gt; or &lt;code&gt;jq:&lt;/code&gt; filter, you can even automatically extract and parse embedded JSON inside a HTML page! Amazingly handy for sites that build content based on JSON, such as many e-commerce websites.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
...
&amp;lt;script type="application/ld+json"&amp;gt;

{
   "@context":"http://schema.org/",
   "@type":"Product",
   "offers":{
      "@type":"Offer",
      "availability":"http://schema.org/InStock",
      "price":"3949.99",
      "priceCurrency":"USD",
      "url":"https://www.newegg.com/p/3D5-000D-001T1"
   },
   "description":"Cobratype King Cobra Hero Desktop Gaming PC",
   "name":"Cobratype King Cobra Hero Desktop Gaming PC",
   "sku":"3D5-000D-001T1",
   "itemCondition":"NewCondition"
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;json:$..price&lt;/code&gt; or &lt;code&gt;jq:..price&lt;/code&gt; would give &lt;code&gt;3949.99&lt;/code&gt;, or you can extract the whole structure (use a JSONpath test website to validate with)&lt;/p&gt; 
&lt;p&gt;The application also supports notifying you that it can follow this information automatically&lt;/p&gt; 
&lt;h2&gt;Proxy Configuration&lt;/h2&gt; 
&lt;p&gt;See the wiki &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration"&gt;https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration&lt;/a&gt; , we also support using &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration#brightdata-proxy-support"&gt;Bright Data proxy services where possible&lt;/a&gt; and &lt;a href="https://oxylabs.go2cloud.org/SH2d"&gt;Oxylabs&lt;/a&gt; proxy services.&lt;/p&gt; 
&lt;h2&gt;Raspberry Pi support?&lt;/h2&gt; 
&lt;p&gt;Raspberry Pi and linux/arm/v6 linux/arm/v7 arm64 devices are supported! See the wiki for &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Fetching-pages-with-WebDriver"&gt;details&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Import support&lt;/h2&gt; 
&lt;p&gt;Easily &lt;a href="https://changedetection.io/tutorial/how-import-your-website-change-detection-lists-excel"&gt;import your list of websites to watch for changes in Excel .xslx file format&lt;/a&gt;, or paste in lists of website URLs as plaintext.&lt;/p&gt; 
&lt;p&gt;Excel import is recommended - that way you can better organise tags/groups of websites and other features.&lt;/p&gt; 
&lt;h2&gt;API Support&lt;/h2&gt; 
&lt;p&gt;Full REST API for programmatic management of watches, tags, notifications and more.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://changedetection.io/docs/api_v1/index.html"&gt;Interactive API Documentation&lt;/a&gt;&lt;/strong&gt; - Complete API reference with live testing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/api-spec.yaml"&gt;OpenAPI Specification&lt;/a&gt;&lt;/strong&gt; - Generate SDKs for any programming language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support us&lt;/h2&gt; 
&lt;p&gt;Do you use changedetection.io to make money? does it save you time or money? Does it make your life easier? less stressful? Remember, we write this software when we should be doing actual paid work, we have to buy food and pay rent just like you.&lt;/p&gt; 
&lt;p&gt;Consider taking out an officially supported &lt;a href="https://changedetection.io?src=github"&gt;website change detection subscription&lt;/a&gt; , even if you don't use it, you still get the warm fuzzy feeling of helping out the project. (And who knows, you might just use it!)&lt;/p&gt; 
&lt;h2&gt;Commercial Support&lt;/h2&gt; 
&lt;p&gt;I offer commercial support, this software is depended on by network security, aerospace , data-science and data-journalist professionals just to name a few, please reach out at &lt;a href="mailto:dgtlmoon@gmail.com"&gt;dgtlmoon@gmail.com&lt;/a&gt; for any enquiries, I am more than glad to work with your organisation to further the possibilities of what can be done with changedetection.io&lt;/p&gt; 
&lt;h2&gt;Commercial Licencing&lt;/h2&gt; 
&lt;p&gt;If you are reselling this software either in part or full as part of any commercial arrangement, you must abide by our COMMERCIAL_LICENCE.md found in our code repository, please contact &lt;a href="mailto:dgtlmoon@gmail.com"&gt;dgtlmoon@gmail.com&lt;/a&gt; and &lt;a href="mailto:contact@changedetection.io"&gt;contact@changedetection.io&lt;/a&gt; .&lt;/p&gt; 
&lt;h2&gt;Third-party licenses&lt;/h2&gt; 
&lt;p&gt;changedetectionio.html_tools.elementpath_tostring: Copyright (c), 2018-2021, SISSA (Scuola Internazionale Superiore di Studi Avanzati), Licensed under &lt;a href="https://github.com/sissaschool/elementpath/raw/master/LICENSE"&gt;MIT license&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Recognition of fantastic contributors to the project&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Constantin Hong &lt;a href="https://github.com/Constantin1489"&gt;https://github.com/Constantin1489&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Infisical/infisical</title>
      <link>https://github.com/Infisical/infisical</link>
      <description>&lt;p&gt;Infisical is the open-source platform for secrets, certificates, and privileged access management.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img width="300" src="https://raw.githubusercontent.com/Infisical/infisical/main/img/logoname-white.svg#gh-dark-mode-only" alt="infisical" /&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;p align="center"&gt;&lt;b&gt;The open-source secret management platform&lt;/b&gt;: Sync secrets/configs across your team/infrastructure and prevent secret leaks.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://infisical.com/slack"&gt;Slack&lt;/a&gt; | &lt;a href="https://infisical.com/"&gt;Infisical Cloud&lt;/a&gt; | &lt;a href="https://infisical.com/docs/self-hosting/overview"&gt;Self-Hosting&lt;/a&gt; | &lt;a href="https://infisical.com/docs/documentation/getting-started/introduction"&gt;Docs&lt;/a&gt; | &lt;a href="https://www.infisical.com"&gt;Website&lt;/a&gt; | &lt;a href="https://infisical.com/careers"&gt;Hiring (Remote/SF)&lt;/a&gt; &lt;/h4&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://github.com/Infisical/infisical/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="Infisical is released under the MIT license." /&gt; &lt;/a&gt; &lt;a href="https://github.com/infisical/infisical/raw/main/CONTRIBUTING.md"&gt; &lt;img src="https://img.shields.io/badge/PRs-Welcome-brightgreen" alt="PRs welcome!" /&gt; &lt;/a&gt; &lt;a href="https://github.com/Infisical/infisical/issues"&gt; &lt;img src="https://img.shields.io/github/commit-activity/m/infisical/infisical" alt="git commit activity" /&gt; &lt;/a&gt; &lt;a href="https://cloudsmith.io/~infisical/repos/"&gt; &lt;img src="https://img.shields.io/badge/Downloads-6.95M-orange" alt="Cloudsmith downloads" /&gt; &lt;/a&gt; &lt;a href="https://infisical.com/slack"&gt; &lt;img src="https://img.shields.io/badge/chat-on%20Slack-blueviolet" alt="Slack community channel" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/infisical"&gt; &lt;img src="https://img.shields.io/twitter/follow/infisical?label=Follow" alt="Infisical Twitter" /&gt; &lt;/a&gt; &lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/Infisical/infisical/main/img/infisical_github_repo2.png" width="100%" alt="Dashboard" /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://infisical.com"&gt;Infisical&lt;/a&gt;&lt;/strong&gt; is the open source secret management platform that teams use to centralize their application configuration and secrets like API keys and database credentials as well as manage their internal PKI.&lt;/p&gt; 
&lt;p&gt;We're on a mission to make security tooling more accessible to everyone, not just security teams, and that means redesigning the entire developer experience from ground up.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Secrets Management:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/project"&gt;Dashboard&lt;/a&gt;&lt;/strong&gt;: Manage secrets across projects and environments (e.g. development, production, etc.) through a user-friendly interface.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/integrations/overview"&gt;Native Integrations&lt;/a&gt;&lt;/strong&gt;: Sync secrets to platforms like &lt;a href="https://infisical.com/docs/integrations/cicd/githubactions"&gt;GitHub&lt;/a&gt;, &lt;a href="https://infisical.com/docs/integrations/cloud/vercel"&gt;Vercel&lt;/a&gt;, &lt;a href="https://infisical.com/docs/integrations/cloud/aws-secret-manager"&gt;AWS&lt;/a&gt;, and use tools like &lt;a href="https://infisical.com/docs/integrations/frameworks/terraform"&gt;Terraform&lt;/a&gt;, &lt;a href="https://infisical.com/docs/integrations/platforms/ansible"&gt;Ansible&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/secret-versioning"&gt;Secret versioning&lt;/a&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pit-recovery"&gt;Point-in-Time Recovery&lt;/a&gt;&lt;/strong&gt;: Keep track of every secret and project state; roll back when needed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/overview"&gt;Secret Rotation&lt;/a&gt;&lt;/strong&gt;: Rotate secrets at regular intervals for services like &lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/postgres-credentials"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/mysql"&gt;MySQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/secret-rotation/aws-iam"&gt;AWS IAM&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/overview"&gt;Dynamic Secrets&lt;/a&gt;&lt;/strong&gt;: Generate ephemeral secrets on-demand for services like &lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/postgresql"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/mysql"&gt;MySQL&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/dynamic-secrets/rabbit-mq"&gt;RabbitMQ&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/cli/scanning-overview"&gt;Secret Scanning and Leak Prevention&lt;/a&gt;&lt;/strong&gt;: Prevent secrets from leaking to git.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/getting-started/kubernetes"&gt;Infisical Kubernetes Operator&lt;/a&gt;&lt;/strong&gt;: Deliver secrets to your Kubernetes workloads and automatically reload deployments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/infisical-agent/overview"&gt;Infisical Agent&lt;/a&gt;&lt;/strong&gt;: Inject secrets into applications without modifying any code logic.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infisical (Internal) PKI:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/private-ca"&gt;Private Certificate Authority&lt;/a&gt;&lt;/strong&gt;: Create CA hierarchies, configure &lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates"&gt;certificate templates&lt;/a&gt; for policy enforcement, and start issuing X.509 certificates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates"&gt;Certificate Management&lt;/a&gt;&lt;/strong&gt;: Manage the certificate lifecycle from &lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-issuing-certificates"&gt;issuance&lt;/a&gt; to &lt;a href="https://infisical.com/docs/documentation/platform/pki/certificates#guide-to-revoking-certificates"&gt;revocation&lt;/a&gt; with support for CRL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/alerting"&gt;Alerting&lt;/a&gt;&lt;/strong&gt;: Configure alerting for expiring CA and end-entity certificates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/pki-issuer"&gt;Infisical PKI Issuer for Kubernetes&lt;/a&gt;&lt;/strong&gt;: Deliver TLS certificates to your Kubernetes workloads with automatic renewal.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/pki/est"&gt;Enrollment over Secure Transport&lt;/a&gt;&lt;/strong&gt;: Enroll and manage certificates via EST protocol.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infisical Key Management System (KMS):&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/kms"&gt;Cryptographic Keys&lt;/a&gt;&lt;/strong&gt;: Centrally manage keys across projects through a user-friendly interface or via the API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/kms#guide-to-encrypting-data"&gt;Encrypt and Decrypt Data&lt;/a&gt;&lt;/strong&gt;: Use symmetric keys to encrypt and decrypt data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Infisical SSH&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/ssh"&gt;Signed SSH Certificates&lt;/a&gt;&lt;/strong&gt;: Issue ephemeral SSH credentials for secure, short-lived, and centralized access to infrastructure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;General Platform:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Authentication Methods&lt;/strong&gt;: Authenticate machine identities with Infisical using a cloud-native or platform agnostic authentication method (&lt;a href="https://infisical.com/docs/documentation/platform/identities/kubernetes-auth"&gt;Kubernetes Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/gcp-auth"&gt;GCP Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/azure-auth"&gt;Azure Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/aws-auth"&gt;AWS Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/oidc-auth/general"&gt;OIDC Auth&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/identities/universal-auth"&gt;Universal Auth&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/access-controls/overview"&gt;Access Controls&lt;/a&gt;&lt;/strong&gt;: Define advanced authorization controls for users and machine identities with &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/role-based-access-controls"&gt;RBAC&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/additional-privileges"&gt;additional privileges&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/temporary-access"&gt;temporary access&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/access-controls/access-requests"&gt;access requests&lt;/a&gt;, &lt;a href="https://infisical.com/docs/documentation/platform/pr-workflows"&gt;approval workflows&lt;/a&gt;, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/documentation/platform/audit-logs"&gt;Audit logs&lt;/a&gt;&lt;/strong&gt;: Track every action taken on the platform.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/self-hosting/overview"&gt;Self-hosting&lt;/a&gt;&lt;/strong&gt;: Deploy Infisical on-prem or cloud with ease; keep data on your own infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/sdks/overview"&gt;Infisical SDK&lt;/a&gt;&lt;/strong&gt;: Interact with Infisical via client SDKs (&lt;a href="https://infisical.com/docs/sdks/languages/node"&gt;Node&lt;/a&gt;, &lt;a href="https://github.com/Infisical/python-sdk-official?tab=readme-ov-file#infisical-python-sdk"&gt;Python&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/go"&gt;Go&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/ruby"&gt;Ruby&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/java"&gt;Java&lt;/a&gt;, &lt;a href="https://infisical.com/docs/sdks/languages/csharp"&gt;.NET&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/cli/overview"&gt;Infisical CLI&lt;/a&gt;&lt;/strong&gt;: Interact with Infisical via CLI; useful for injecting secrets into local development and CI/CD pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://infisical.com/docs/api-reference/overview/introduction"&gt;Infisical API&lt;/a&gt;&lt;/strong&gt;: Interact with Infisical via API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://infisical.com/docs/getting-started/introduction"&gt;Quickstart Guides&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Use Infisical Cloud&lt;/th&gt; 
   &lt;th&gt;Deploy Infisical on premise&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;The fastest and most reliable way to &lt;br /&gt; get started with Infisical is signing up &lt;br /&gt; for free to &lt;a href="https://app.infisical.com/login"&gt;Infisical Cloud&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;br /&gt; View all &lt;a href="https://infisical.com/docs/self-hosting/overview"&gt;deployment options&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Run Infisical locally&lt;/h3&gt; 
&lt;p&gt;To set up and run Infisical locally, make sure you have Git and Docker installed on your system. Then run the command for your system:&lt;/p&gt; 
&lt;p&gt;Linux/macOS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;git clone https://github.com/Infisical/infisical &amp;amp;&amp;amp; cd "$(basename $_ .git)" &amp;amp;&amp;amp; cp .env.example .env &amp;amp;&amp;amp; docker compose -f docker-compose.prod.yml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Windows Command Prompt:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;git clone https://github.com/Infisical/infisical &amp;amp;&amp;amp; cd infisical &amp;amp;&amp;amp; copy .env.example .env &amp;amp;&amp;amp; docker compose -f docker-compose.prod.yml up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create an account at &lt;code&gt;http://localhost:80&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Scan and prevent secret leaks&lt;/h3&gt; 
&lt;p&gt;On top managing secrets with Infisical, you can also &lt;a href=""&gt;scan for over 140+ secret types&lt;/a&gt; in your files, directories and git repositories.&lt;/p&gt; 
&lt;p&gt;To scan your full git history, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;infisical scan --verbose
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install pre commit hook to scan each commit before you push to your repository&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;infisical scan install --pre-commit-hook
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn about Infisical's code scanning feature &lt;a href="https://infisical.com/docs/cli/scanning-overview"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Open-source vs. paid&lt;/h2&gt; 
&lt;p&gt;This repo available under the &lt;a href="https://github.com/Infisical/infisical/raw/main/LICENSE"&gt;MIT expat license&lt;/a&gt;, with the exception of the &lt;code&gt;ee&lt;/code&gt; directory which will contain premium enterprise features requiring a Infisical license.&lt;/p&gt; 
&lt;p&gt;If you are interested in managed Infisical Cloud of self-hosted Enterprise Offering, take a look at &lt;a href="https://infisical.com/"&gt;our website&lt;/a&gt; or &lt;a href="https://infisical.cal.com/vlad/infisical-demo"&gt;book a meeting with us&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Please do not file GitHub issues or post on our public forum for security vulnerabilities, as they are public!&lt;/p&gt; 
&lt;p&gt;Infisical takes security issues very seriously. If you have any concerns about Infisical or believe you have uncovered a vulnerability, please get in touch via the e-mail address &lt;a href="mailto:security@infisical.com"&gt;security@infisical.com&lt;/a&gt;. In the message, try to provide a description of the issue and ideally a way of reproducing it. The security team will get back to you as soon as possible.&lt;/p&gt; 
&lt;p&gt;Note that this security address should be used only for undisclosed vulnerabilities. Please report any security problems to us before disclosing it publicly.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Whether it's big or small, we love contributions. Check out our guide to see how to &lt;a href="https://infisical.com/docs/contributing/getting-started"&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Not sure where to get started? You can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join our &lt;a href="https://infisical.com/slack"&gt;Slack&lt;/a&gt;, and ask us any questions there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;We are hiring!&lt;/h2&gt; 
&lt;p&gt;If you're reading this, there is a strong chance you like the products we created.&lt;/p&gt; 
&lt;p&gt;You might also make a great addition to our team. We're growing fast and would love for you to &lt;a href="https://infisical.com/careers"&gt;join us&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xyflow/xyflow</title>
      <link>https://github.com/xyflow/xyflow</link>
      <description>&lt;p&gt;React Flow |¬†Svelte Flow - Powerful open source libraries for building node-based UIs with React (https://reactflow.dev) or Svelte (https://svelteflow.dev). Ready out-of-the-box and infinitely customizable.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/2857535/279643999-ffda9f91-6b6d-447d-82be-fcbd6103edb6.svg#gh-light-mode-only" alt="xyflow-header" /&gt; &lt;img src="https://user-images.githubusercontent.com/2857535/279644026-a01c231c-6c6e-4b41-96e0-a85c75c9acee.svg#gh-dark-mode-only" alt="xyflow-header-dark" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/github/license/wbkd/react-flow?color=%23ff0072" alt="GitHub License MIT" /&gt; &lt;img src="https://img.shields.io/npm/dt/reactflow?color=%23FF0072&amp;amp;label=React%20Flow%20downloads" alt="npm downloads" /&gt; &lt;img src="https://img.shields.io/npm/dt/@xyflow/svelte?color=%23FF3E00&amp;amp;label=Svelte%20Flow%20downloads" alt="npm downloads" /&gt;&lt;/p&gt; 
 &lt;p&gt;Powerful open source libraries for building node-based UIs with React or Svelte. Ready out-of-the-box and infinitely customizable.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://reactflow.dev/"&gt;React Flow&lt;/a&gt; ¬∑ &lt;a href="https://svelteflow.dev/"&gt;Svelte Flow&lt;/a&gt; ¬∑ &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro&lt;/a&gt; ¬∑ &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;The xyflow mono repo&lt;/h2&gt; 
&lt;p&gt;The xyflow repository is the home of four packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;React Flow 12 &lt;code&gt;@xyflow/react&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/react"&gt;packages/react&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;React Flow 11 &lt;code&gt;reactflow&lt;/code&gt; &lt;a href="https://github.com/xyflow/xyflow/tree/v11"&gt;v11 branch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Svelte Flow &lt;code&gt;@xyflow/svelte&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/svelte"&gt;packages/svelte&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shared helper library &lt;code&gt;@xyflow/system&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/packages/system"&gt;packages/system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Commercial usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow for a personal project?&lt;/strong&gt; Great! No sponsorship needed, you can support us by reporting any bugs you find, sending us screenshots of your projects, and starring us on Github üåü&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Are you using React Flow or Svelte Flow at your organization and making money from it?&lt;/strong&gt; Awesome! We rely on your support to keep our libraries developed and maintained under an MIT License, just how we like it. For React Flow you can do that on the &lt;a href="https://reactflow.dev/pro"&gt;React Flow Pro website&lt;/a&gt; and for both of our libraries you can do it through &lt;a href="https://github.com/sponsors/xyflow"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;The best way to get started is to check out the &lt;a href="https://reactflow.dev/learn"&gt;React Flow&lt;/a&gt; or &lt;a href="https://svelteflow.dev/learn"&gt;Svelte Flow&lt;/a&gt; learn section. However if you want to get a sneak peek of how to install and use the libraries you can see it here:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;React Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/react
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-jsx"&gt;import { useCallback } from 'react';
import {
ReactFlow,
MiniMap,
Controls,
Background,
useNodesState,
useEdgesState,
addEdge,
} from '@xyflow/react';

import '@xyflow/react/dist/style.css';

const initialNodes = [
{ id: '1', position: { x: 0, y: 0 }, data: { label: '1' } },
{ id: '2', position: { x: 0, y: 100 }, data: { label: '2' } },
];

const initialEdges = [{ id: 'e1-2', source: '1', target: '2' }];

function Flow() {
const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);
const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);

const onConnect = useCallback((params) =&amp;gt; setEdges((eds) =&amp;gt; addEdge(params, eds)), [setEdges]);

return (
  &amp;lt;ReactFlow
    nodes={nodes}
    edges={edges}
    onNodesChange={onNodesChange}
    onEdgesChange={onEdgesChange}
    onConnect={onConnect}
  &amp;gt;
    &amp;lt;MiniMap /&amp;gt;
    &amp;lt;Controls /&amp;gt;
    &amp;lt;Background /&amp;gt;
  &amp;lt;/ReactFlow&amp;gt;
);
}

export default Flow;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Svelte Flow&lt;/strong&gt; basic usage&lt;/summary&gt; 
 &lt;h3&gt;Installation&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;npm install @xyflow/svelte
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Basic usage&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-svelte"&gt;&amp;lt;script lang="ts"&amp;gt;
import { writable } from 'svelte/store';
import {
  SvelteFlow,
  Controls,
  Background,
  BackgroundVariant,
  MiniMap,
} from '@xyflow/svelte';

import '@xyflow/svelte/dist/style.css'

const nodes = writable([
  {
    id: '1',
    type: 'input',
    data: { label: 'Input Node' },
    position: { x: 0, y: 0 }
  },
  {
    id: '2',
    type: 'custom',
    data: { label: 'Node' },
    position: { x: 0, y: 150 }
  }
]);

const edges = writable([
  {
    id: '1-2',
    type: 'default',
    source: '1',
    target: '2',
    label: 'Edge Text'
  }
]);
&amp;lt;/script&amp;gt;

&amp;lt;SvelteFlow
{nodes}
{edges}
fitView
on:nodeclick={(event) =&amp;gt; console.log('on node click', event)}
&amp;gt;
&amp;lt;Controls /&amp;gt;
&amp;lt;Background variant={BackgroundVariant.Dots} /&amp;gt;
&amp;lt;MiniMap /&amp;gt;
&amp;lt;/SvelteFlow&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Releases&lt;/h2&gt; 
&lt;p&gt;For releasing packages we are using &lt;a href="https://github.com/changesets/changesets"&gt;changesets&lt;/a&gt; in combination with the &lt;a href="https://github.com/changesets/action"&gt;changeset Github action&lt;/a&gt;. The rough idea is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;create PRs for new features, updates and fixes (with a changeset if relevant for changelog)&lt;/li&gt; 
 &lt;li&gt;merge into main&lt;/li&gt; 
 &lt;li&gt;changset creates a PR that bumps all packages based on the changesets&lt;/li&gt; 
 &lt;li&gt;merge changeset PR if you want to release to Github and npm&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Built by &lt;a href="https://xyflow.com"&gt;xyflow&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are maintained by the &lt;a href="https://xyflow.com/about"&gt;xyflow team&lt;/a&gt;. If you need help or want to talk to us about a collaboration, reach out through our&amp;nbsp;&lt;a href="https://xyflow.com/contact"&gt;contact form&lt;/a&gt;&amp;nbsp;or by joining our &lt;a href="https://discord.gg/Bqt6xrs"&gt;Discord Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;React Flow and Svelte Flow are &lt;a href="https://raw.githubusercontent.com/xyflow/xyflow/main/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>audacity/audacity</title>
      <link>https://github.com/audacity/audacity</link>
      <description>&lt;p&gt;Audio Editor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Audacity&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/audacity/audacity/actions/workflows/au4_check_unit_tests.yml"&gt;&lt;img src="https://s3.us-east-1.amazonaws.com/extensions.musescore.org/test/code_coverage/au_coverage_badge.svg?" alt="Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.audacityteam.org"&gt;&lt;strong&gt;Audacity&lt;/strong&gt;&lt;/a&gt; is an easy-to-use, multi-track audio editor and recorder for Windows, macOS, GNU/Linux and other operating systems. More info can be found on &lt;a href="https://www.audacityteam.org"&gt;https://www.audacityteam.org&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;This repository is currently undergoing major structural change.&lt;/h2&gt; 
&lt;p&gt;We're currently working on Audacity 4, which means an entirely new UI and also refactorings aplenty. As such, the &lt;code&gt;master&lt;/code&gt; branch is currently not particularly friendly to new contributors. It is still possible to submit patches to Audacity 3.x; make sure you branch off &lt;code&gt;audacity3&lt;/code&gt; if you choose to do so. Build instructions for 3.x can be found &lt;a href="https://github.com/audacity/audacity/raw/release-3.7.0/BUILDING.md"&gt;here&lt;/a&gt;; build instructions for Audacity 4 can be found &lt;a href="https://github.com/audacity/audacity/raw/master/BUILDING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can stay updated with our efforts on &lt;a href="https://youtube.com/@audacity"&gt;YouTube&lt;/a&gt;, &lt;a href="https://discord.gg/audacity"&gt;Discord&lt;/a&gt; and &lt;a href="https://audacityteam.org/blog"&gt;our blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Audacity is open source software licensed GPLv3. Most code files are GPLv2-or-later, with the notable exceptions being &lt;code&gt;/au3/lib-src&lt;/code&gt; (which contains third party libraries), as well as VST3-related code. Documentation is licensed CC-by 3.0 unless otherwise noted. Details can be found in the &lt;a href="https://raw.githubusercontent.com/audacity/audacity/master/LICENSE.txt"&gt;license file&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BeehiveInnovations/zen-mcp-server</title>
      <link>https://github.com/BeehiveInnovations/zen-mcp-server</link>
      <description>&lt;p&gt;The power of Claude Code / GeminiCLI / CodexCLI + [Gemini / OpenAI / OpenRouter / Azure / Grok / Ollama / Custom Model / All Of The Above] working as one.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zen MCP: Many Workflows. One Context.&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0d26061e-5f21-4ab1-b7d0-f883ddc2c3da"&gt;Zen in action&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#-watch-tools-in-action"&gt;Watch more examples&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h3&gt;Your CLI + Multiple Models = Your AI Dev Team&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;Use the ü§ñ CLI you love:&lt;/strong&gt;&lt;br /&gt; &lt;a href="https://www.anthropic.com/claude-code"&gt;Claude Code&lt;/a&gt; ¬∑ &lt;a href="https://github.com/google-gemini/gemini-cli"&gt;Gemini CLI&lt;/a&gt; ¬∑ &lt;a href="https://github.com/openai/codex"&gt;Codex CLI&lt;/a&gt; ¬∑ &lt;a href="https://qwenlm.github.io/qwen-code-docs/"&gt;Qwen Code CLI&lt;/a&gt; ¬∑ &lt;a href="https://cursor.com"&gt;Cursor&lt;/a&gt; ¬∑ &lt;em&gt;and more&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;With multiple models within a single prompt:&lt;/strong&gt;&lt;br /&gt; Gemini ¬∑ OpenAI ¬∑ Anthropic ¬∑ Grok ¬∑ Azure ¬∑ Ollama ¬∑ OpenRouter ¬∑ DIAL ¬∑ On-Device Model&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üÜï Now with CLI-to-CLI Bridge&lt;/h2&gt; 
&lt;p&gt;The new &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/clink.md"&gt;&lt;code&gt;clink&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; (CLI + Link) tool connects external AI CLIs directly into your workflow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Connect external CLIs&lt;/strong&gt; like &lt;a href="https://github.com/google-gemini/gemini-cli"&gt;Gemini CLI&lt;/a&gt;, &lt;a href="https://github.com/openai/codex"&gt;Codex CLI&lt;/a&gt;, and &lt;a href="https://www.anthropic.com/claude-code"&gt;Claude Code&lt;/a&gt; directly into your workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CLI Subagents&lt;/strong&gt; - Launch isolated CLI instances from &lt;em&gt;within&lt;/em&gt; your current CLI! Claude Code can spawn Codex subagents, Codex can spawn Gemini CLI subagents, etc. Offload heavy tasks (code reviews, bug hunting) to fresh contexts while your main session's context window remains unpolluted. Each subagent returns only final results.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Isolation&lt;/strong&gt; - Run separate investigations without polluting your primary workspace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role Specialization&lt;/strong&gt; - Spawn &lt;code&gt;planner&lt;/code&gt;, &lt;code&gt;codereviewer&lt;/code&gt;, or custom role agents with specialized system prompts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full CLI Capabilities&lt;/strong&gt; - Web search, file inspection, MCP tool access, latest documentation lookups&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Continuity&lt;/strong&gt; - Sub-CLIs participate as first-class members with full conversation context between tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Codex spawns Codex subagent for isolated code review in fresh context
clink with codex codereviewer to audit auth module for security issues
# Subagent reviews in isolation, returns final report without cluttering your context as codex reads each file and walks the directory structure

# Consensus from different AI models ‚Üí Implementation handoff with full context preservation between tools
Use consensus with gpt-5 and gemini-pro to decide: dark mode or offline support next
Continue with clink gemini - implement the recommended feature
# Gemini receives full debate context and starts coding immediately
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/clink.md"&gt;Learn more about clink&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Why Zen MCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Why rely on one AI model when you can orchestrate them all?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A Model Context Protocol server that supercharges tools like &lt;a href="https://www.anthropic.com/claude-code"&gt;Claude Code&lt;/a&gt;, &lt;a href="https://developers.openai.com/codex/cli"&gt;Codex CLI&lt;/a&gt;, and IDE clients such as &lt;a href="https://cursor.com"&gt;Cursor&lt;/a&gt; or the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Anthropic.claude-vscode"&gt;Claude Dev VS Code extension&lt;/a&gt;. &lt;strong&gt;Zen MCP connects your favorite AI tool to multiple AI models&lt;/strong&gt; for enhanced code analysis, problem-solving, and collaborative development.&lt;/p&gt; 
&lt;h3&gt;True AI Collaboration with Conversation Continuity&lt;/h3&gt; 
&lt;p&gt;Zen supports &lt;strong&gt;conversation threading&lt;/strong&gt; so your CLI can &lt;strong&gt;discuss ideas with multiple AI models, exchange reasoning, get second opinions, and even run collaborative debates between models&lt;/strong&gt; to help you reach deeper insights and better solutions.&lt;/p&gt; 
&lt;p&gt;Your CLI always stays in control but gets perspectives from the best AI for each subtask. Context carries forward seamlessly across tools and models, enabling complex workflows like: code reviews with multiple models ‚Üí automated planning ‚Üí implementation ‚Üí pre-commit validation.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;You're in control.&lt;/strong&gt; Your CLI of choice orchestrates the AI team, but you decide the workflow. Craft powerful prompts that bring in Gemini Pro, GPT 5, Flash, or local offline models exactly when needed.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Reasons to Use Zen MCP&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;A typical workflow with Claude Code as an example:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-Model Orchestration&lt;/strong&gt; - Claude coordinates with Gemini Pro, O3, GPT-5, and 50+ other models to get the best analysis for each task&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Context Revival Magic&lt;/strong&gt; - Even after Claude's context resets, continue conversations seamlessly by having other models "remind" Claude of the discussion&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Guided Workflows&lt;/strong&gt; - Enforces systematic investigation phases that prevent rushed analysis and ensure thorough code examination&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extended Context Windows&lt;/strong&gt; - Break Claude's limits by delegating to Gemini (1M tokens) or O3 (200K tokens) for massive codebases&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;True Conversation Continuity&lt;/strong&gt; - Full context flows across tools and models - Gemini remembers what O3 said 10 steps ago&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Model-Specific Strengths&lt;/strong&gt; - Extended thinking with Gemini Pro, blazing speed with Flash, strong reasoning with O3, privacy with local Ollama&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Professional Code Reviews&lt;/strong&gt; - Multi-pass analysis with severity levels, actionable feedback, and consensus from multiple AI experts&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Smart Debugging Assistant&lt;/strong&gt; - Systematic root cause analysis with hypothesis tracking and confidence levels&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic Model Selection&lt;/strong&gt; - Claude intelligently picks the right model for each subtask (or you can specify)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vision Capabilities&lt;/strong&gt; - Analyze screenshots, diagrams, and visual content with vision-enabled models&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Local Model Support&lt;/strong&gt; - Run Llama, Mistral, or other models locally for complete privacy and zero API costs&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Bypass MCP Token Limits&lt;/strong&gt; - Automatically works around MCP's 25K limit for large prompts and responses&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;The Killer Feature:&lt;/strong&gt; When Claude's context resets, just ask to "continue with O3" - the other model's response magically revives Claude's understanding without re-ingesting documents!&lt;/p&gt; 
 &lt;h4&gt;Example: Multi-Model Code Review Workflow&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;code&gt;Perform a codereview using gemini pro and o3 and use planner to generate a detailed plan, implement the fixes and do a final precommit check by continuing from the previous codereview&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;This triggers a &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/codereview.md"&gt;&lt;code&gt;codereview&lt;/code&gt;&lt;/a&gt; workflow where Claude walks the code, looking for all kinds of issues&lt;/li&gt; 
  &lt;li&gt;After multiple passes, collects relevant code and makes note of issues along the way&lt;/li&gt; 
  &lt;li&gt;Maintains a &lt;code&gt;confidence&lt;/code&gt; level between &lt;code&gt;exploring&lt;/code&gt;, &lt;code&gt;low&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt; and &lt;code&gt;certain&lt;/code&gt; to track how confidently it's been able to find and identify issues&lt;/li&gt; 
  &lt;li&gt;Generates a detailed list of critical -&amp;gt; low issues&lt;/li&gt; 
  &lt;li&gt;Shares the relevant files, findings, etc with &lt;strong&gt;Gemini Pro&lt;/strong&gt; to perform a deep dive for a second &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/codereview.md"&gt;&lt;code&gt;codereview&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Comes back with a response and next does the same with o3, adding to the prompt if a new discovery comes to light&lt;/li&gt; 
  &lt;li&gt;When done, Claude takes in all the feedback and combines a single list of all critical -&amp;gt; low issues, including good patterns in your code. The final list includes new findings or revisions in case Claude misunderstood or missed something crucial and one of the other models pointed this out&lt;/li&gt; 
  &lt;li&gt;It then uses the &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/planner.md"&gt;&lt;code&gt;planner&lt;/code&gt;&lt;/a&gt; workflow to break the work down into simpler steps if a major refactor is required&lt;/li&gt; 
  &lt;li&gt;Claude then performs the actual work of fixing highlighted issues&lt;/li&gt; 
  &lt;li&gt;When done, Claude returns to Gemini Pro for a &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/precommit.md"&gt;&lt;code&gt;precommit&lt;/code&gt;&lt;/a&gt; review&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;All within a single conversation thread! Gemini Pro in step 11 &lt;em&gt;knows&lt;/em&gt; what was recommended by O3 in step 7! Taking that context and review into consideration to aid with its final pre-commit review.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Think of it as Claude Code &lt;em&gt;for&lt;/em&gt; Claude Code.&lt;/strong&gt; This MCP isn't magic. It's just &lt;strong&gt;super-glue&lt;/strong&gt;.&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Remember:&lt;/strong&gt; Claude stays in full control ‚Äî but &lt;strong&gt;YOU&lt;/strong&gt; call the shots. Zen is designed to have Claude engage other models only when needed ‚Äî and to follow through with meaningful back-and-forth. &lt;strong&gt;You're&lt;/strong&gt; the one who crafts the powerful prompt that makes Claude bring in Gemini, Flash, O3 ‚Äî or fly solo. You're the guide. The prompter. The puppeteer.&lt;/p&gt; 
  &lt;h4&gt;You are the AI - &lt;strong&gt;Actually Intelligent&lt;/strong&gt;.&lt;/h4&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h4&gt;Recommended AI Stack&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;For Claude Code Users&lt;/summary&gt; 
 &lt;p&gt;For best results when using &lt;a href="https://claude.ai/code"&gt;Claude Code&lt;/a&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Sonnet 4.5&lt;/strong&gt; - All agentic work and orchestration&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; OR &lt;strong&gt;GPT-5-Pro&lt;/strong&gt; - Deep thinking, additional code reviews, debugging and validations, pre-commit analysis&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;For Codex Users&lt;/summary&gt; 
 &lt;p&gt;For best results when using &lt;a href="https://developers.openai.com/codex/cli"&gt;Codex CLI&lt;/a&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;GPT-5 Codex Medium&lt;/strong&gt; - All agentic work and orchestration&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; OR &lt;strong&gt;GPT-5-Pro&lt;/strong&gt; - Deep thinking, additional code reviews, debugging and validations, pre-commit analysis&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Quick Start (5 minutes)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Python 3.10+, Git, &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;uv installed&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Get API Keys&lt;/strong&gt; (choose one or more):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://openrouter.ai/"&gt;OpenRouter&lt;/a&gt;&lt;/strong&gt; - Access multiple models with one API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://makersuite.google.com/app/apikey"&gt;Gemini&lt;/a&gt;&lt;/strong&gt; - Google's latest models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://platform.openai.com/api-keys"&gt;OpenAI&lt;/a&gt;&lt;/strong&gt; - O3, GPT-5 series&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/azure/ai-services/openai/"&gt;Azure OpenAI&lt;/a&gt;&lt;/strong&gt; - Enterprise deployments of GPT-4o, GPT-4.1, GPT-5 family&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://console.x.ai/"&gt;X.AI&lt;/a&gt;&lt;/strong&gt; - Grok models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://dialx.ai/"&gt;DIAL&lt;/a&gt;&lt;/strong&gt; - Vendor-agnostic model access&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://ollama.ai/"&gt;Ollama&lt;/a&gt;&lt;/strong&gt; - Local models (free)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2. Install&lt;/strong&gt; (choose one):&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option A: Clone and Automatic Setup&lt;/strong&gt; (recommended)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/BeehiveInnovations/zen-mcp-server.git
cd zen-mcp-server

# Handles everything: setup, config, API keys from system environment. 
# Auto-configures Claude Desktop, Claude Code, Gemini CLI, Codex CLI, Qwen CLI
# Enable / disable additional settings in .env
./run-server.sh  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Option B: Instant Setup with &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;uvx&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// Add to ~/.claude/settings.json or .mcp.json
// Don't forget to add your API keys under env
{
  "mcpServers": {
    "zen": {
      "command": "bash",
      "args": ["-c", "for p in $(which uvx 2&amp;gt;/dev/null) $HOME/.local/bin/uvx /opt/homebrew/bin/uvx /usr/local/bin/uvx uvx; do [ -x \"$p\" ] &amp;amp;&amp;amp; exec \"$p\" --from git+https://github.com/BeehiveInnovations/zen-mcp-server.git zen-mcp-server; done; echo 'uvx not found' &amp;gt;&amp;amp;2; exit 1"],
      "env": {
        "PATH": "/usr/local/bin:/usr/bin:/bin:/opt/homebrew/bin:~/.local/bin",
        "GEMINI_API_KEY": "your-key-here",
        "DISABLED_TOOLS": "analyze,refactor,testgen,secaudit,docgen,tracer",
        "DEFAULT_MODEL": "auto"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;3. Start Using!&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Use zen to analyze this code for security issues with gemini pro"
"Debug this error with o3 and then get flash to suggest optimizations"
"Plan the migration strategy with zen, get consensus from multiple models"
"clink with cli_name=\"gemini\" role=\"planner\" to draft a phased rollout plan"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/getting-started.md"&gt;Complete Setup Guide&lt;/a&gt;&lt;/strong&gt; with detailed installation, configuration for Gemini / Codex / Qwen, and troubleshooting üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/getting-started.md#ide-clients"&gt;Cursor &amp;amp; VS Code Setup&lt;/a&gt;&lt;/strong&gt; for IDE integration instructions üì∫ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#-watch-tools-in-action"&gt;Watch tools in action&lt;/a&gt;&lt;/strong&gt; to see real-world examples&lt;/p&gt; 
&lt;h2&gt;Provider Configuration&lt;/h2&gt; 
&lt;p&gt;Zen activates any provider that has credentials in your &lt;code&gt;.env&lt;/code&gt;. See &lt;code&gt;.env.example&lt;/code&gt; for deeper customization.&lt;/p&gt; 
&lt;h2&gt;Core Tools&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Each tool comes with its own multi-step workflow, parameters, and descriptions that consume valuable context window space even when not in use. To optimize performance, some tools are disabled by default. See &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;Tool Configuration&lt;/a&gt; below to enable them.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Collaboration &amp;amp; Planning&lt;/strong&gt; &lt;em&gt;(Enabled by default)&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/clink.md"&gt;&lt;code&gt;clink&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Bridge requests to external AI CLIs (Gemini planner, codereviewer, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/chat.md"&gt;&lt;code&gt;chat&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Brainstorm ideas, get second opinions, validate approaches. With capable models (GPT-5 Pro, Gemini 2.5 Pro), generates complete code / implementation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/thinkdeep.md"&gt;&lt;code&gt;thinkdeep&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Extended reasoning, edge case analysis, alternative perspectives&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/planner.md"&gt;&lt;code&gt;planner&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Break down complex projects into structured, actionable plans&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/consensus.md"&gt;&lt;code&gt;consensus&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Get expert opinions from multiple AI models with stance steering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Code Analysis &amp;amp; Quality&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/debug.md"&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Systematic investigation and root cause analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/precommit.md"&gt;&lt;code&gt;precommit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Validate changes before committing, prevent regressions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/codereview.md"&gt;&lt;code&gt;codereview&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Professional reviews with severity levels and actionable feedback&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/analyze.md"&gt;&lt;code&gt;analyze&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;(disabled by default - &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;enable&lt;/a&gt;)&lt;/em&gt; - Understand architecture, patterns, dependencies across entire codebases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Development Tools&lt;/strong&gt; &lt;em&gt;(Disabled by default - &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;enable&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/refactor.md"&gt;&lt;code&gt;refactor&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Intelligent code refactoring with decomposition focus&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/testgen.md"&gt;&lt;code&gt;testgen&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Comprehensive test generation with edge cases&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/secaudit.md"&gt;&lt;code&gt;secaudit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Security audits with OWASP Top 10 analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/docgen.md"&gt;&lt;code&gt;docgen&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Generate documentation with complexity analysis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Utilities&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/apilookup.md"&gt;&lt;code&gt;apilookup&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Forces current-year API/SDK documentation lookups in a sub-process (saves tokens within the current context window), prevents outdated training data responses&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/challenge.md"&gt;&lt;code&gt;challenge&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Prevent "You're absolutely right!" responses with critical analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/tracer.md"&gt;&lt;code&gt;tracer&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;(disabled by default - &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;enable&lt;/a&gt;)&lt;/em&gt; - Static analysis prompts for call-flow mapping&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b id="tool-configuration"&gt;üëâ Tool Configuration&lt;/b&gt;&lt;/summary&gt; 
 &lt;h3&gt;Default Configuration&lt;/h3&gt; 
 &lt;p&gt;To optimize context window usage, only essential tools are enabled by default:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Enabled by default:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;chat&lt;/code&gt;, &lt;code&gt;thinkdeep&lt;/code&gt;, &lt;code&gt;planner&lt;/code&gt;, &lt;code&gt;consensus&lt;/code&gt; - Core collaboration tools&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;codereview&lt;/code&gt;, &lt;code&gt;precommit&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt; - Essential code quality tools&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;apilookup&lt;/code&gt; - Rapid API/SDK information lookup&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;challenge&lt;/code&gt; - Critical thinking utility&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Disabled by default:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;analyze&lt;/code&gt;, &lt;code&gt;refactor&lt;/code&gt;, &lt;code&gt;testgen&lt;/code&gt;, &lt;code&gt;secaudit&lt;/code&gt;, &lt;code&gt;docgen&lt;/code&gt;, &lt;code&gt;tracer&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Enabling Additional Tools&lt;/h3&gt; 
 &lt;p&gt;To enable additional tools, remove them from the &lt;code&gt;DISABLED_TOOLS&lt;/code&gt; list:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Option 1: Edit your .env file&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Default configuration (from .env.example)
DISABLED_TOOLS=analyze,refactor,testgen,secaudit,docgen,tracer

# To enable specific tools, remove them from the list
# Example: Enable analyze tool
DISABLED_TOOLS=refactor,testgen,secaudit,docgen,tracer

# To enable ALL tools
DISABLED_TOOLS=
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Option 2: Configure in MCP settings&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;// In ~/.claude/settings.json or .mcp.json
{
  "mcpServers": {
    "zen": {
      "env": {
        // Tool configuration
        "DISABLED_TOOLS": "refactor,testgen,secaudit,docgen,tracer",
        "DEFAULT_MODEL": "pro",
        "DEFAULT_THINKING_MODE_THINKDEEP": "high",
        
        // API configuration
        "GEMINI_API_KEY": "your-gemini-key",
        "OPENAI_API_KEY": "your-openai-key",
        "OPENROUTER_API_KEY": "your-openrouter-key",
        
        // Logging and performance
        "LOG_LEVEL": "INFO",
        "CONVERSATION_TIMEOUT_HOURS": "6",
        "MAX_CONVERSATION_TURNS": "50"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Option 3: Enable all tools&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;// Remove or empty the DISABLED_TOOLS to enable everything
{
  "mcpServers": {
    "zen": {
      "env": {
        "DISABLED_TOOLS": ""
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Essential tools (&lt;code&gt;version&lt;/code&gt;, &lt;code&gt;listmodels&lt;/code&gt;) cannot be disabled&lt;/li&gt; 
  &lt;li&gt;After changing tool configuration, restart your Claude session for changes to take effect&lt;/li&gt; 
  &lt;li&gt;Each tool adds to context window usage, so only enable what you need&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;üì∫ Watch Tools In Action&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Chat Tool&lt;/b&gt; - Collaborative decision making and multi-turn conversations&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Picking Redis vs Memcached:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/41076cfe-dd49-4dfc-82f5-d7461b34705d"&gt;Chat Redis or Memcached_web.webm&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Multi-turn conversation with continuation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/37bd57ca-e8a6-42f7-b5fb-11de271e95db"&gt;Chat With Gemini_web.webm&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Consensus Tool&lt;/b&gt; - Multi-model debate and decision making&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Multi-model consensus debate:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/76a23dd5-887a-4382-9cf0-642f5cf6219e"&gt;Zen Consensus Debate&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;PreCommit Tool&lt;/b&gt; - Comprehensive change validation&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Pre-commit validation workflow:&lt;/strong&gt;&lt;/p&gt; 
 &lt;div align="center"&gt; 
  &lt;img src="https://github.com/user-attachments/assets/584adfa6-d252-49b4-b5b0-0cd6e97fb2c6" width="950" /&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;API Lookup Tool&lt;/b&gt; - Current vs outdated API documentation&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Without Zen - outdated APIs:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/01a79dc9-ad16-4264-9ce1-76a56c3580ee"&gt;API without Zen&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;With Zen - current APIs:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/5c847326-4b66-41f7-8f30-f380453dce22"&gt;API with Zen&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Challenge Tool&lt;/b&gt; - Critical thinking vs reflexive agreement&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Without Zen:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/64f3c9fb-7ca9-4876-b687-25e847edfd87" alt="without_zen@2x" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;With Zen:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/9d72f444-ba53-4ab1-83e5-250062c6ee70" alt="with_zen@2x" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;AI Orchestration&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto model selection&lt;/strong&gt; - Claude picks the right AI for each task&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-model workflows&lt;/strong&gt; - Chain different models in single conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conversation continuity&lt;/strong&gt; - Context preserved across tools and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/context-revival.md"&gt;Context revival&lt;/a&gt;&lt;/strong&gt; - Continue conversations even after context resets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Model Support&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple providers&lt;/strong&gt; - Gemini, OpenAI, Azure, X.AI, OpenRouter, DIAL, Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Latest models&lt;/strong&gt; - GPT-5, Gemini 2.5 Pro, O3, Grok-4, local Llama&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md#thinking-modes"&gt;Thinking modes&lt;/a&gt;&lt;/strong&gt; - Control reasoning depth vs cost&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vision support&lt;/strong&gt; - Analyze images, diagrams, screenshots&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Developer Experience&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Guided workflows&lt;/strong&gt; - Systematic investigation prevents rushed analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart file handling&lt;/strong&gt; - Auto-expand directories, manage token limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web search integration&lt;/strong&gt; - Access current documentation and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md#working-with-large-prompts"&gt;Large prompt support&lt;/a&gt;&lt;/strong&gt; - Bypass MCP's 25K token limit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example Workflows&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Multi-model Code Review:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Perform a codereview using gemini pro and o3, then use planner to create a fix strategy"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Üí Claude reviews code systematically ‚Üí Consults Gemini Pro ‚Üí Gets O3's perspective ‚Üí Creates unified action plan&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Collaborative Debugging:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Debug this race condition with max thinking mode, then validate the fix with precommit"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Üí Deep investigation ‚Üí Expert analysis ‚Üí Solution implementation ‚Üí Pre-commit validation&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Architecture Planning:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Plan our microservices migration, get consensus from pro and o3 on the approach"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Üí Structured planning ‚Üí Multiple expert opinions ‚Üí Consensus building ‚Üí Implementation roadmap&lt;/p&gt; 
&lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md"&gt;Advanced Usage Guide&lt;/a&gt;&lt;/strong&gt; for complex workflows, model configuration, and power-user features&lt;/p&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;üìñ Documentation&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/index.md"&gt;Docs Overview&lt;/a&gt; - High-level map of major guides&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/getting-started.md"&gt;Getting Started&lt;/a&gt; - Complete setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/"&gt;Tools Reference&lt;/a&gt; - All tools with examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md"&gt;Advanced Usage&lt;/a&gt; - Power user features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/configuration.md"&gt;Configuration&lt;/a&gt; - Environment variables, restrictions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/adding_providers.md"&gt;Adding Providers&lt;/a&gt; - Provider-specific setup (OpenAI, Azure, custom gateways)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/model_ranking.md"&gt;Model Ranking Guide&lt;/a&gt; - How intelligence scores drive auto-mode suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üîß Setup &amp;amp; Support&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/wsl-setup.md"&gt;WSL Setup&lt;/a&gt; - Windows users&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/troubleshooting.md"&gt;Troubleshooting&lt;/a&gt; - Common issues&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/contributions.md"&gt;Contributing&lt;/a&gt; - Code standards, PR process&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 License - see &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Built with the power of &lt;strong&gt;Multi-Model AI&lt;/strong&gt; collaboration ü§ù&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;ctual &lt;strong&gt;I&lt;/strong&gt;ntelligence by real Humans&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://modelcontextprotocol.com"&gt;MCP (Model Context Protocol)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.openai.com/codex/cli"&gt;Codex CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://claude.ai/code"&gt;Claude Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ai.google.dev/"&gt;Gemini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/azure/ai-services/openai/"&gt;Azure OpenAI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Star History&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#BeehiveInnovations/zen-mcp-server&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=BeehiveInnovations/zen-mcp-server&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openemr/openemr</title>
      <link>https://github.com/openemr/openemr</link>
      <description>&lt;p&gt;The most popular open source electronic health records and medical practice management solution.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/openemr/openemr/actions/workflows/syntax.yml"&gt;&lt;img src="https://github.com/openemr/openemr/actions/workflows/syntax.yml/badge.svg?sanitize=true" alt="Syntax Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/openemr/openemr/actions/workflows/styling.yml"&gt;&lt;img src="https://github.com/openemr/openemr/actions/workflows/styling.yml/badge.svg?sanitize=true" alt="Styling Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/openemr/openemr/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/openemr/openemr/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Testing Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/openemr/openemr/actions/workflows/js-test.yml"&gt;&lt;img src="https://github.com/openemr/openemr/actions/workflows/js-test.yml/badge.svg?sanitize=true" alt="JS Unit Testing Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/openemr/openemr/actions/workflows/phpstan.yml"&gt;&lt;img src="https://github.com/openemr/openemr/actions/workflows/phpstan.yml/badge.svg?sanitize=true" alt="PHPStan" /&gt;&lt;/a&gt; &lt;a href="https://github.com/openemr/openemr/actions/workflows/rector.yml"&gt;&lt;img src="https://github.com/openemr/openemr/actions/workflows/rector.yml/badge.svg?sanitize=true" alt="Rector" /&gt;&lt;/a&gt; &lt;a href="https://github.com/openemr/openemr/actions/workflows/shellcheck.yml"&gt;&lt;img src="https://github.com/openemr/openemr/actions/workflows/shellcheck.yml/badge.svg?sanitize=true" alt="ShellCheck" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/openemr/openemr"&gt;&lt;img src="https://codecov.io/gh/openemr/openemr/graph/badge.svg?token=7Eu3U1Ozdq" alt="codecov" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/#backers"&gt;&lt;img src="https://opencollective.com/openemr/backers/badge.svg?sanitize=true" alt="Backers on Open Collective" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/#sponsors"&gt;&lt;img src="https://opencollective.com/openemr/sponsors/badge.svg?sanitize=true" alt="Sponsors on Open Collective" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;OpenEMR&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://open-emr.org"&gt;OpenEMR&lt;/a&gt; is a Free and Open Source electronic health records and medical practice management application. It features fully integrated electronic health records, practice management, scheduling, electronic billing, internationalization, free support, a vibrant community, and a whole lot more. It runs on Windows, Linux, Mac OS X, and many other platforms.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;OpenEMR is a leader in healthcare open source software and comprises a large and diverse community of software developers, medical providers and educators with a very healthy mix of both volunteers and professionals. &lt;a href="https://open-emr.org/wiki/index.php/FAQ#How_do_I_begin_to_volunteer_for_the_OpenEMR_project.3F"&gt;Join us and learn how to start contributing today!&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Already comfortable with git? Check out &lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for quick setup instructions and requirements for contributing to OpenEMR by resolving a bug or adding an awesome feature üòä.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Support&lt;/h3&gt; 
&lt;p&gt;Community and Professional support can be found &lt;a href="https://open-emr.org/wiki/index.php/OpenEMR_Support_Guide"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Extensive documentation and forums can be found on the &lt;a href="https://open-emr.org"&gt;OpenEMR website&lt;/a&gt; that can help you to become more familiar about the project üìñ.&lt;/p&gt; 
&lt;h3&gt;Reporting Issues and Bugs&lt;/h3&gt; 
&lt;p&gt;Report these on the &lt;a href="https://github.com/openemr/openemr/issues"&gt;Issue Tracker&lt;/a&gt;. If you are unsure if it is an issue/bug, then always feel free to use the &lt;a href="https://community.open-emr.org/"&gt;Forum&lt;/a&gt; and &lt;a href="https://www.open-emr.org/chat/"&gt;Chat&lt;/a&gt; to discuss about the issue ü™≤.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; 
&lt;p&gt;Check out &lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/.github/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;Check out &lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/API_README.md"&gt;API_README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;Check out &lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/DOCKER_README.md"&gt;DOCKER_README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;FHIR&lt;/h3&gt; 
&lt;p&gt;Check out &lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/FHIR_README.md"&gt;FHIR_README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;For Developers&lt;/h3&gt; 
&lt;p&gt;If using OpenEMR directly from the code repository, then the following commands will build OpenEMR (Node.js version 22.* is required) :&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;composer install --no-dev
npm install
npm run build
composer dump-autoload -o
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;p&gt;This project exists thanks to all the people who have contributed. &lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/CONTRIBUTING.md"&gt;[Contribute]&lt;/a&gt;. &lt;a href="https://github.com/openemr/openemr/graphs/contributors"&gt;&lt;img src="https://opencollective.com/openemr/contributors.svg?width=890" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Thanks to our &lt;a href="https://www.open-emr.org/wiki/index.php/OpenEMR_Certification_Stage_III_Meaningful_Use#Major_sponsors"&gt;ONC Certification Major Sponsors&lt;/a&gt;!&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/openemr/openemr/master/LICENSE"&gt;GNU GPL&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>