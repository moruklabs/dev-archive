<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Fri, 31 Oct 2025 01:30:31 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>mem0ai/mem0</title>
      <link>https://github.com/mem0ai/mem0</link>
      <description>&lt;p&gt;Universal memory layer for AI Agents; Announcing OpenMemory MCP - local and secure memory management.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/mem0ai/mem0"&gt; &lt;img src="https://raw.githubusercontent.com/mem0ai/mem0/main/docs/images/banner-sm.png" width="800px" alt="Mem0 - The Memory Layer for Personalized AI" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center" style="display: flex; justify-content: center; gap: 20px; align-items: center;"&gt; &lt;a href="https://trendshift.io/repositories/11194" target="blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/11194" alt="mem0ai%2Fmem0 | Trendshift" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://mem0.ai"&gt;Learn more&lt;/a&gt; ¬∑ &lt;a href="https://mem0.dev/DiG"&gt;Join Discord&lt;/a&gt; ¬∑ &lt;a href="https://mem0.dev/demo"&gt;Demo&lt;/a&gt; ¬∑ &lt;a href="https://mem0.dev/openmemory"&gt;OpenMemory&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://mem0.dev/DiG"&gt; &lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Mem0 Discord" /&gt; &lt;/a&gt; &lt;a href="https://pepy.tech/project/mem0ai"&gt; &lt;img src="https://img.shields.io/pypi/dm/mem0ai" alt="Mem0 PyPI - Downloads" /&gt; &lt;/a&gt; &lt;a href="https://github.com/mem0ai/mem0"&gt; &lt;img src="https://img.shields.io/github/commit-activity/m/mem0ai/mem0?style=flat-square" alt="GitHub commit activity" /&gt; &lt;/a&gt; &lt;a href="https://pypi.org/project/mem0ai" target="blank"&gt; &lt;img src="https://img.shields.io/pypi/v/mem0ai?color=%2334D058&amp;amp;label=pypi%20package" alt="Package version" /&gt; &lt;/a&gt; &lt;a href="https://www.npmjs.com/package/mem0ai" target="blank"&gt; &lt;img src="https://img.shields.io/npm/v/mem0ai" alt="Npm package" /&gt; &lt;/a&gt; &lt;a href="https://www.ycombinator.com/companies/mem0"&gt; &lt;img src="https://img.shields.io/badge/Y%20Combinator-S24-orange?style=flat-square" alt="Y Combinator S24" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://mem0.ai/research"&gt;&lt;strong&gt;üìÑ Building Production-Ready AI Agents with Scalable Long-Term Memory ‚Üí&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt;‚ö° +26% Accuracy vs. OpenAI Memory ‚Ä¢ üöÄ 91% Faster ‚Ä¢ üí∞ 90% Fewer Tokens&lt;/strong&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;üéâ mem0ai v1.0.0 is now available!&lt;/strong&gt; This major release includes API modernization, improved vector store support, and enhanced GCP integration. &lt;a href="https://raw.githubusercontent.com/mem0ai/mem0/main/MIGRATION_GUIDE_v1.0.md"&gt;See migration guide ‚Üí&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üî• Research Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;+26% Accuracy&lt;/strong&gt; over OpenAI Memory on the LOCOMO benchmark&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;91% Faster Responses&lt;/strong&gt; than full-context, ensuring low-latency at scale&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;90% Lower Token Usage&lt;/strong&gt; than full-context, cutting costs without compromise&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mem0.ai/research"&gt;Read the full paper&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Introduction&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://mem0.ai"&gt;Mem0&lt;/a&gt; ("mem-zero") enhances AI assistants and agents with an intelligent memory layer, enabling personalized AI interactions. It remembers user preferences, adapts to individual needs, and continuously learns over time‚Äîideal for customer support chatbots, AI assistants, and autonomous systems.&lt;/p&gt; 
&lt;h3&gt;Key Features &amp;amp; Use Cases&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Core Capabilities:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Level Memory&lt;/strong&gt;: Seamlessly retains User, Session, and Agent state with adaptive personalization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Developer-Friendly&lt;/strong&gt;: Intuitive API, cross-platform SDKs, and a fully managed service option&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Applications:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI Assistants&lt;/strong&gt;: Consistent, context-rich conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customer Support&lt;/strong&gt;: Recall past tickets and user history for tailored help&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Healthcare&lt;/strong&gt;: Track patient preferences and history for personalized care&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Productivity &amp;amp; Gaming&lt;/strong&gt;: Adaptive workflows and environments based on user behavior&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ Quickstart Guide &lt;a name="quickstart"&gt;&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Choose between our hosted platform or self-hosted package:&lt;/p&gt; 
&lt;h3&gt;Hosted Platform&lt;/h3&gt; 
&lt;p&gt;Get up and running in minutes with automatic updates, analytics, and enterprise security.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Sign up on &lt;a href="https://app.mem0.ai"&gt;Mem0 Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Embed the memory layer via SDK or API keys&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Self-Hosted (Open Source)&lt;/h3&gt; 
&lt;p&gt;Install the sdk via pip:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install mem0ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install sdk via npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install mem0ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;p&gt;Mem0 requires an LLM to function, with `gpt-4.1-nano-2025-04-14 from OpenAI as the default. However, it supports a variety of LLMs; for details, refer to our &lt;a href="https://docs.mem0.ai/components/llms/overview"&gt;Supported LLMs documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;First step is to instantiate the memory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from openai import OpenAI
from mem0 import Memory

openai_client = OpenAI()
memory = Memory()

def chat_with_memories(message: str, user_id: str = "default_user") -&amp;gt; str:
    # Retrieve relevant memories
    relevant_memories = memory.search(query=message, user_id=user_id, limit=3)
    memories_str = "\n".join(f"- {entry['memory']}" for entry in relevant_memories["results"])

    # Generate Assistant response
    system_prompt = f"You are a helpful AI. Answer the question based on query and memories.\nUser Memories:\n{memories_str}"
    messages = [{"role": "system", "content": system_prompt}, {"role": "user", "content": message}]
    response = openai_client.chat.completions.create(model="gpt-4.1-nano-2025-04-14", messages=messages)
    assistant_response = response.choices[0].message.content

    # Create new memories from the conversation
    messages.append({"role": "assistant", "content": assistant_response})
    memory.add(messages, user_id=user_id)

    return assistant_response

def main():
    print("Chat with AI (type 'exit' to quit)")
    while True:
        user_input = input("You: ").strip()
        if user_input.lower() == 'exit':
            print("Goodbye!")
            break
        print(f"AI: {chat_with_memories(user_input)}")

if __name__ == "__main__":
    main()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For detailed integration steps, see the &lt;a href="https://docs.mem0.ai/quickstart"&gt;Quickstart&lt;/a&gt; and &lt;a href="https://docs.mem0.ai/api-reference"&gt;API Reference&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üîó Integrations &amp;amp; Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ChatGPT with Memory&lt;/strong&gt;: Personalized chat powered by Mem0 (&lt;a href="https://mem0.dev/demo"&gt;Live Demo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Browser Extension&lt;/strong&gt;: Store memories across ChatGPT, Perplexity, and Claude (&lt;a href="https://chromewebstore.google.com/detail/onihkkbipkfeijkadecaafbgagkhglop?utm_source=item-share-cb"&gt;Chrome Extension&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Langgraph Support&lt;/strong&gt;: Build a customer bot with Langgraph + Mem0 (&lt;a href="https://docs.mem0.ai/integrations/langgraph"&gt;Guide&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CrewAI Integration&lt;/strong&gt;: Tailor CrewAI outputs with Mem0 (&lt;a href="https://docs.mem0.ai/integrations/crewai"&gt;Example&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìö Documentation &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full docs: &lt;a href="https://docs.mem0.ai"&gt;https://docs.mem0.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Community: &lt;a href="https://mem0.dev/DiG"&gt;Discord&lt;/a&gt; ¬∑ &lt;a href="https://x.com/mem0ai"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contact: &lt;a href="mailto:founders@mem0.ai"&gt;founders@mem0.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;We now have a paper you can cite:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@article{mem0,
  title={Mem0: Building Production-Ready AI Agents with Scalable Long-Term Memory},
  author={Chhikara, Prateek and Khant, Dev and Aryan, Saket and Singh, Taranjeet and Yadav, Deshraj},
  journal={arXiv preprint arXiv:2504.19413},
  year={2025}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚öñÔ∏è License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 ‚Äî see the &lt;a href="https://github.com/mem0ai/mem0/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Project-MONAI/MONAI</title>
      <link>https://github.com/Project-MONAI/MONAI</link>
      <description>&lt;p&gt;AI Toolkit for Healthcare Imaging&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Project-MONAI/MONAI/dev/docs/images/MONAI-logo-color.png" width="50%" alt="project-monai" /&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;M&lt;/strong&gt;edical &lt;strong&gt;O&lt;/strong&gt;pen &lt;strong&gt;N&lt;/strong&gt;etwork for &lt;strong&gt;AI&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Project-MONAI/MONAI/dev/docs/images/python.svg?sanitize=true" alt="Supported Python versions" /&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202.0-green.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://arxiv.org/abs/2211.02701"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?label=citations&amp;amp;query=%24.citationCount&amp;amp;url=https%3A%2F%2Fapi.semanticscholar.org%2Fgraph%2Fv1%2Fpaper%2FDOI%3A10.48550%2FarXiv.2211.02701%3Ffields%3DcitationCount" alt="auto-commit-msg" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/monai"&gt;&lt;img src="https://badge.fury.io/py/monai.svg?sanitize=true" alt="PyPI version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/projectmonai/monai"&gt;&lt;img src="https://img.shields.io/badge/docker-pull-green.svg?logo=docker&amp;amp;logoColor=white" alt="docker" /&gt;&lt;/a&gt; &lt;a href="https://anaconda.org/conda-forge/monai"&gt;&lt;img src="https://img.shields.io/conda/vn/conda-forge/monai?color=green" alt="conda" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/Project-MONAI/MONAI/actions/workflows/pythonapp.yml"&gt;&lt;img src="https://github.com/Project-MONAI/MONAI/actions/workflows/pythonapp.yml/badge.svg?branch=dev" alt="premerge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Project-MONAI/MONAI/actions?query=branch%3Adev"&gt;&lt;img src="https://img.shields.io/github/checks-status/project-monai/monai/dev?label=postmerge" alt="postmerge" /&gt;&lt;/a&gt; &lt;a href="https://docs.monai.io/en/latest/"&gt;&lt;img src="https://readthedocs.org/projects/monai/badge/?version=latest" alt="Documentation Status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/Project-MONAI/MONAI"&gt;&lt;img src="https://codecov.io/gh/Project-MONAI/MONAI/branch/dev/graph/badge.svg?token=6FTC7U1JJ4" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://piptrends.com/package/monai"&gt;&lt;img src="https://assets.piptrends.com/get-last-month-downloads-badge/monai.svg?sanitize=true" alt="monai Downloads Last Month" title="monai Downloads Last Month by pip Trends" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MONAI is a &lt;a href="https://pytorch.org/"&gt;PyTorch&lt;/a&gt;-based, &lt;a href="https://github.com/Project-MONAI/MONAI/raw/dev/LICENSE"&gt;open-source&lt;/a&gt; framework for deep learning in healthcare imaging, part of the &lt;a href="https://pytorch.org/ecosystem/"&gt;PyTorch Ecosystem&lt;/a&gt;. Its ambitions are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Developing a community of academic, industrial and clinical researchers collaborating on a common foundation;&lt;/li&gt; 
 &lt;li&gt;Creating state-of-the-art, end-to-end training workflows for healthcare imaging;&lt;/li&gt; 
 &lt;li&gt;Providing researchers with the optimized and standardized way to create and evaluate deep learning models.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Please see &lt;a href="https://docs.monai.io/en/latest/highlights.html"&gt;the technical highlights&lt;/a&gt; and &lt;a href="https://docs.monai.io/en/latest/whatsnew.html"&gt;What's New&lt;/a&gt; of the milestone releases.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;flexible pre-processing for multi-dimensional medical imaging data;&lt;/li&gt; 
 &lt;li&gt;compositional &amp;amp; portable APIs for ease of integration in existing workflows;&lt;/li&gt; 
 &lt;li&gt;domain-specific implementations for networks, losses, evaluation metrics and more;&lt;/li&gt; 
 &lt;li&gt;customizable design for varying user expertise;&lt;/li&gt; 
 &lt;li&gt;multi-GPU multi-node data parallelism support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;MONAI works with the &lt;a href="https://devguide.python.org/versions"&gt;currently supported versions of Python&lt;/a&gt;, and depends directly on NumPy and PyTorch with many optional dependencies.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Major releases of MONAI will have dependency versions stated for them. The current state of the &lt;code&gt;dev&lt;/code&gt; branch in this repository is the unreleased development version of MONAI which typically will support current versions of dependencies and include updates and bug fixes to do so.&lt;/li&gt; 
 &lt;li&gt;PyTorch support covers &lt;a href="https://github.com/pytorch/pytorch/releases"&gt;the current version&lt;/a&gt; plus three previous minor versions. If compatibility issues with a PyTorch version and other dependencies arise, support for a version may be delayed until a major release.&lt;/li&gt; 
 &lt;li&gt;Our support policy for other dependencies adheres for the most part to &lt;a href="https://scientific-python.org/specs/spec-0000"&gt;SPEC0&lt;/a&gt;, where dependency versions are supported where possible for up to two years. Discovered vulnerabilities or defects may require certain versions to be explicitly not supported.&lt;/li&gt; 
 &lt;li&gt;See the &lt;code&gt;requirements*.txt&lt;/code&gt; files for dependency version information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install &lt;a href="https://pypi.org/project/monai/"&gt;the current release&lt;/a&gt;, you can simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install monai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to &lt;a href="https://docs.monai.io/en/latest/installation.html"&gt;the installation guide&lt;/a&gt; for other installation options.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://colab.research.google.com/github/Project-MONAI/tutorials/blob/main/2d_classification/mednist_tutorial.ipynb"&gt;MedNIST demo&lt;/a&gt; and &lt;a href="https://colab.research.google.com/github/Project-MONAI/tutorials/blob/main/modules/developer_guide.ipynb"&gt;MONAI for PyTorch Users&lt;/a&gt; are available on Colab.&lt;/p&gt; 
&lt;p&gt;Examples and notebook tutorials are located at &lt;a href="https://github.com/Project-MONAI/tutorials"&gt;Project-MONAI/tutorials&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Technical documentation is available at &lt;a href="https://docs.monai.io"&gt;docs.monai.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you have used MONAI in your research, please cite us! The citation can be exported from: &lt;a href="https://arxiv.org/abs/2211.02701"&gt;https://arxiv.org/abs/2211.02701&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Model Zoo&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/Project-MONAI/model-zoo"&gt;The MONAI Model Zoo&lt;/a&gt; is a place for researchers and data scientists to share the latest and great models from the community. Utilizing &lt;a href="https://docs.monai.io/en/latest/bundle_intro.html"&gt;the MONAI Bundle format&lt;/a&gt; makes it easy to &lt;a href="https://github.com/Project-MONAI/tutorials/tree/main/model_zoo"&gt;get started&lt;/a&gt; building workflows with MONAI.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For guidance on making a contribution to MONAI, see the &lt;a href="https://github.com/Project-MONAI/MONAI/raw/dev/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join the conversation on Twitter/X &lt;a href="https://twitter.com/ProjectMONAI"&gt;@ProjectMONAI&lt;/a&gt;, &lt;a href="https://www.linkedin.com/company/projectmonai"&gt;LinkedIn&lt;/a&gt;, or join our &lt;a href="https://forms.gle/QTxJq3hFictp31UM9"&gt;Slack channel&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Ask and answer questions over on &lt;a href="https://github.com/Project-MONAI/MONAI/discussions"&gt;MONAI's GitHub Discussions tab&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://monai.io/"&gt;https://monai.io/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API documentation (milestone): &lt;a href="https://docs.monai.io/"&gt;https://docs.monai.io/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;API documentation (latest dev): &lt;a href="https://docs.monai.io/en/latest/"&gt;https://docs.monai.io/en/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Code: &lt;a href="https://github.com/Project-MONAI/MONAI"&gt;https://github.com/Project-MONAI/MONAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Project tracker: &lt;a href="https://github.com/Project-MONAI/MONAI/projects"&gt;https://github.com/Project-MONAI/MONAI/projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Issue tracker: &lt;a href="https://github.com/Project-MONAI/MONAI/issues"&gt;https://github.com/Project-MONAI/MONAI/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wiki: &lt;a href="https://github.com/Project-MONAI/MONAI/wiki"&gt;https://github.com/Project-MONAI/MONAI/wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Test status: &lt;a href="https://github.com/Project-MONAI/MONAI/actions"&gt;https://github.com/Project-MONAI/MONAI/actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;PyPI package: &lt;a href="https://pypi.org/project/monai/"&gt;https://pypi.org/project/monai/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;conda-forge: &lt;a href="https://anaconda.org/conda-forge/monai"&gt;https://anaconda.org/conda-forge/monai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Weekly previews: &lt;a href="https://pypi.org/project/monai-weekly/"&gt;https://pypi.org/project/monai-weekly/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Docker Hub: &lt;a href="https://hub.docker.com/r/projectmonai/monai"&gt;https://hub.docker.com/r/projectmonai/monai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>storybookjs/storybook</title>
      <link>https://github.com/storybookjs/storybook</link>
      <description>&lt;p&gt;Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://storybook.js.org/?ref=readme"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/263385/199832481-bbbf5961-6a26-481d-8224-51258cce9b33.png" /&gt; 
   &lt;img src="https://user-images.githubusercontent.com/321738/63501763-88dbf600-c4cc-11e9-96cd-94adadc2fd72.png" alt="Storybook" width="400" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;Build bulletproof UI components faster&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://circleci.com/gh/storybookjs/storybook"&gt; &lt;img src="https://circleci.com/gh/storybookjs/storybook.svg?style=shield" alt="Build Status on CircleCI" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/storybookjs/storybook"&gt; &lt;img src="https://codecov.io/gh/storybookjs/storybook/branch/main/graph/badge.svg?sanitize=true" alt="codecov" /&gt; &lt;/a&gt; &lt;a href="https://github.com/storybookjs/storybook/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/storybookjs/storybook.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://discord.gg/storybook"&gt; &lt;img src="https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&amp;amp;longCache=true&amp;amp;style=flat" /&gt; &lt;/a&gt; &lt;a href="https://storybook.js.org/community/?ref=readme"&gt; &lt;img src="https://img.shields.io/badge/community-join-4BC424.svg?sanitize=true" alt="Storybook Community" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#backers"&gt; &lt;img src="https://opencollective.com/storybook/backers/badge.svg?sanitize=true" alt="Backers on Open Collective" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#sponsors"&gt; &lt;img src="https://opencollective.com/storybook/tiers/sponsors/badge.svg?sanitize=true" alt="Sponsors on Open Collective" /&gt; &lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=storybookjs"&gt; &lt;img src="https://img.shields.io/twitter/follow/storybookjs?color=blue&amp;amp;logo=twitter" alt="Official Twitter Handle" /&gt; &lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook"&gt; &lt;img src="https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook/badge" alt="OpenSSF Scorecard" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. Find out more at &lt;a href="https://storybook.js.org/?ref=readme"&gt;storybook.js.org&lt;/a&gt;! &lt;/p&gt; 
&lt;center&gt; 
 &lt;img src="https://raw.githubusercontent.com/storybookjs/storybook/refs/heads/release-6-5/media/storybook-intro.gif" width="100%" /&gt; 
&lt;/center&gt; 
&lt;p align="center"&gt; View README for:&lt;br /&gt; &lt;a href="https://github.com/storybookjs/storybook/raw/main/README.md" title="latest"&gt;&lt;img alt="latest" src="https://img.shields.io/npm/v/@storybook/react/latest?style=for-the-badge&amp;amp;logo=storybook&amp;amp;logoColor=ffffff&amp;amp;color=66BF3C" /&gt;&lt;/a&gt; &lt;a href="https://github.com/storybookjs/storybook/raw/next/README.md" title="next"&gt;&lt;img alt="next" src="https://img.shields.io/npm/v/@storybook/react/next?style=for-the-badge&amp;amp;logo=storybook&amp;amp;logoColor=ffffff&amp;amp;color=1EA7FD" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üöÄ &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üìí &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#projects"&gt;Projects&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;üõ† &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#supported-frameworks"&gt;Supported Frameworks &amp;amp; Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;üîó&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#addons"&gt;Addons&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üèÖ &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#badges--presentation-materials"&gt;Badges &amp;amp; Presentation materials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üë• &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;üëè &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;üë®‚Äçüíª &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#development-scripts"&gt;Development scripts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;üí∏ &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;üíµ &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#backers"&gt;Backers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;üìù&lt;/span&gt; &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://storybook.js.org/?ref=readme"&gt;Storybook's website&lt;/a&gt; to learn more about Storybook and to get started.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Documentation can be found on &lt;a href="https://storybook.js.org/docs?ref=readme"&gt;Storybook's docs site&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;p&gt;View &lt;a href="https://storybook.js.org/showcase?ref=readme"&gt;Component Encyclopedia&lt;/a&gt; to see how leading teams use Storybook.&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://storybook.new"&gt;storybook.new&lt;/a&gt; to quickly create an example project in Stackblitz.&lt;/p&gt; 
&lt;p&gt;Storybook comes with a lot of &lt;a href="https://storybook.js.org/docs/configure/user-interface/storybook-addons?ref=readme"&gt;addons&lt;/a&gt; for component design, documentation, testing, interactivity, and so on. Storybook's API makes it possible to configure and extend in various ways. It has even been extended to support React Native, Android, iOS, and Flutter development for mobile.&lt;/p&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;For additional help, share your issue in &lt;a href="https://github.com/storybookjs/storybook/discussions/new?category=help"&gt;the repo's GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Projects&lt;/h2&gt; 
&lt;h3&gt;Supported Frameworks&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Renderer&lt;/th&gt; 
   &lt;th&gt;Demo&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/react"&gt;React&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--630511d655df72125520f051.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/react/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/react"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/react?style=flat-square&amp;amp;color=eee" alt="React" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/angular/"&gt;Angular&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--6322ce6af69825592bbb28fc.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/angular/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/angular/"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/angular?style=flat-square&amp;amp;color=eee" alt="Angular" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/vue3"&gt;Vue 3&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--630513346a8e284ae244d415.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/vue3/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/vue3/"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/vue3?style=flat-square&amp;amp;color=eee" alt="Vue 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/web-components"&gt;Web components&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--638db5bf49adfdfe8cf545e0.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/web-components/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/web-components"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/web-components?style=flat-square&amp;amp;color=eee" alt="Svelte" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/react-native"&gt;React Native&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/react-native/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/react-native"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/react-native?style=flat-square&amp;amp;color=eee" alt="React Native" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/html"&gt;HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--63dd39a158cf6fc05199b4bb.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/html/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/html"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/html?style=flat-square&amp;amp;color=eee" alt="HTML" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/ember/"&gt;Ember&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/ember/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/ember/"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/ember?style=flat-square&amp;amp;color=eee" alt="Ember" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/svelte"&gt;Svelte&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--630873996e4e3557791c069c.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/svelte/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/svelte"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/svelte?style=flat-square&amp;amp;color=eee" alt="Svelte" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/preact"&gt;Preact&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--63b588a512565bfaace15e7c.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/preact/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/preact"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/preact?style=flat-square&amp;amp;color=eee" alt="Preact" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/literalpie/storybook-framework-qwik"&gt;Qwik&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/storybook-framework-qwik/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/literalpie/storybook-framework-qwik"&gt;&lt;img src="https://img.shields.io/npm/dm/storybook-framework-qwik?style=flat-square&amp;amp;color=eee" alt="Qwik" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/solidjs-community/storybook"&gt;SolidJS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/storybook-solidjs-vite/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/solidjs-community/storybook"&gt;&lt;img src="https://img.shields.io/npm/dm/storybook-solidjs-vite?style=flat-square&amp;amp;color=eee" alt="SolidJS" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/native"&gt;Android, iOS, Flutter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/native/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/native"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/native?style=flat-square&amp;amp;color=eee" alt="Native" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Addons&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Addons&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/a11y/"&gt;a11y&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Test components for user accessibility in Storybook&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/actions/"&gt;actions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Log actions as users interact with components in the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/backgrounds"&gt;backgrounds&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Let users choose backgrounds in the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-cssresources"&gt;cssresources&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Dynamically add/remove CSS resources to the component iframe&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-design-assets"&gt;design assets&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;View images, videos, and weblinks alongside your story&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/docs/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add high quality documentation to your components&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-events"&gt;events&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Interactively fire events to components that respond to EventEmitter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-google-analytics"&gt;google-analytics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Reports google analytics on stories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-graphql"&gt;graphql&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Query a GraphQL server within Storybook stories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-jest"&gt;jest&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;View the results of components' unit tests in Storybook&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/links/"&gt;links&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Create links between stories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/measure/"&gt;measure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Visually inspect the layout and box model within the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/outline/"&gt;outline&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Visually debug the CSS layout and alignment within the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-queryparams"&gt;query params&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mock query params&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/viewport/"&gt;viewport&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Change display sizes and layouts for responsive components using Storybook&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://storybook.js.org/docs/configure/integration/frameworks-feature-support?ref=readme"&gt;Addon / Framework Support Table&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To continue improving your experience, we have to eventually deprecate or remove certain addons in favor of new and better tools.&lt;/p&gt; 
&lt;p&gt;If you're using info/notes, we highly recommend you migrate to &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/docs/"&gt;docs&lt;/a&gt; instead, and &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/docs/docs/recipes.md#migrating-from-notesinfo-addons"&gt;here is a guide&lt;/a&gt; to help you.&lt;/p&gt; 
&lt;p&gt;If you're using contexts, we highly recommend you migrate to &lt;a href="https://github.com/storybookjs/storybook/tree/next/code/addons/toolbars"&gt;toolbars&lt;/a&gt; and &lt;a href="https://github.com/storybookjs/storybook/raw/next/MIGRATION.md#deprecated-addon-contexts"&gt;here is a guide&lt;/a&gt; to help you.&lt;/p&gt; 
&lt;p&gt;If you're using addon-storyshots, we highly recommend you migrate to the Storybook &lt;a href="https://github.com/storybookjs/test-runner"&gt;test-runner&lt;/a&gt; and &lt;a href="https://storybook.js.org/docs/writing-tests/storyshots-migration-guide?ref=readme"&gt;here is a guide&lt;/a&gt; to help you.&lt;/p&gt; 
&lt;h2&gt;Badges &amp;amp; Presentation materials&lt;/h2&gt; 
&lt;p&gt;We have a badge! Link it to your live Storybook example.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg?sanitize=true" alt="Storybook" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)](link to site)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're looking for material to use in your Storybook presentation, such as logos, video material, and the colors we use, you can find it all on our &lt;a href="https://github.com/storybookjs/brand"&gt;brand repo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tweeting via &lt;a href="https://x.com/storybookjs"&gt;@storybookjs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blogging at &lt;a href="https://storybook.js.org/blog/?ref=readme"&gt;storybook.js.org&lt;/a&gt; and &lt;a href="https://medium.com/storybookjs"&gt;Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chatting on &lt;a href="https://discord.gg/storybook"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Videos and streams at &lt;a href="https://www.youtube.com/channel/UCr7Quur3eIyA_oe8FNYexfg"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Storybook are always welcome!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üì• Pull requests and üåü Stars are always welcome.&lt;/li&gt; 
 &lt;li&gt;Read our &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started, or find us on &lt;a href="https://discord.gg/storybook"&gt;Discord&lt;/a&gt;, we will take the time to guide you.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Looking for a first issue to tackle?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We tag issues with &lt;a href="https://github.com/storybookjs/storybook/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"&gt;&lt;img src="https://img.shields.io/github/issues/storybookjs/storybook/good%20first%20issue.svg?sanitize=true" alt="Good First Issue" /&gt;&lt;/a&gt; when we think they are well suited for people who are new to the codebase or OSS in general.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/storybook"&gt;Talk to us&lt;/a&gt;, we'll find something that suits your skills and learning interest.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development scripts&lt;/h3&gt; 
&lt;p&gt;Storybook is organized as a monorepo. Useful scripts include:&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Runs a sandbox template storybook with test stories&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;yarn task&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;As above, but gives you options to customize the sandbox (e.g. selecting other frameworks)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;yarn lint&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;boolean check if code conforms to linting rules - uses remark &amp;amp; eslint&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint:js&lt;/code&gt; - will check js&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint:md&lt;/code&gt; - will check markdown + code samples&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint:js --fix&lt;/code&gt; - will automatically fix js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;code&gt;yarn test&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;boolean check if unit tests all pass - uses jest&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn run test --core --watch&lt;/code&gt; - will run core tests in watch-mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Become a sponsor to have your logo and website URL on our README on Github. [&lt;a href="https://opencollective.com/storybook#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/storybook/tiers/sponsors/0/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/0/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/1/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/1/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/2/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/2/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/3/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/3/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/4/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/4/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/5/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/5/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/6/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/6/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/7/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/7/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/8/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/8/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/9/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/9/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/10/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/10/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/11/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/11/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/12/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/12/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/13/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/13/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/14/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/14/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/15/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/15/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/16/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/16/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/17/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/17/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/18/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/18/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/19/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/19/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/20/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/20/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/21/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/21/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/22/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/22/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/23/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/23/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/24/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/24/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/25/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/25/avatar.svg?requireActive=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;By making a recurring donation, you can support us and our work. [&lt;a href="https://opencollective.com/storybook#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/storybook"&gt;&lt;img src="https://opencollective.com/storybook/tiers/backers.svg?limit=80&amp;amp;button=false&amp;amp;avatarHeight=46&amp;amp;width=750" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/storybookjs/storybook/raw/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;-the end-&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-telemetry/opentelemetry-collector</title>
      <link>https://github.com/open-telemetry/opentelemetry-collector</link>
      <description>&lt;p&gt;OpenTelemetry Collector&lt;/p&gt;&lt;hr&gt;&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://opentelemetry.io/docs/collector/getting-started/"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Getting Involved&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp; &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;Getting In Touch&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/actions/workflows/build-and-test.yml?query=branch%3Amain"&gt; &lt;img alt="Build Status" src="https://img.shields.io/github/actions/workflow/status/open-telemetry/opentelemetry-collector/build-and-test.yml?branch=main&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/open-telemetry/opentelemetry-collector"&gt; &lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/open-telemetry/opentelemetry-collector?style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/open-telemetry/opentelemetry-collector/branch/main/"&gt; &lt;img alt="Codecov Status" src="https://img.shields.io/codecov/c/github/open-telemetry/opentelemetry-collector?style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/releases"&gt; &lt;img alt="GitHub release (latest by date including pre-releases)" src="https://img.shields.io/github/v/release/open-telemetry/opentelemetry-collector?include_prereleases&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8404"&gt;&lt;img src="https://www.bestpractices.dev/projects/8404/badge" /&gt; &lt;/a&gt; &lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:opentelemetry"&gt; &lt;img alt="Fuzzing Status" src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/opentelemetry.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/vision.md"&gt;Vision&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/configuration/"&gt;Configuration&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/internal-telemetry/#use-internal-telemetry-to-monitor-the-collector"&gt;Monitoring&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/security-best-practices.md"&gt;Security&lt;/a&gt; &amp;nbsp;&amp;nbsp;‚Ä¢&amp;nbsp;&amp;nbsp; &lt;a href="https://pkg.go.dev/go.opentelemetry.io/collector"&gt;Package&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;&lt;img src="https://opentelemetry.io/img/logos/opentelemetry-logo-nav.png" alt="OpenTelemetry Icon" width="45" height="" /&gt; OpenTelemetry Collector&lt;/h1&gt; 
&lt;p&gt;The OpenTelemetry Collector offers a vendor-agnostic implementation on how to receive, process and export telemetry data. In addition, it removes the need to run, operate and maintain multiple agents/collectors in order to support open-source telemetry data formats (e.g. Jaeger, Prometheus, etc.) to multiple open-source or commercial back-ends.&lt;/p&gt; 
&lt;p&gt;Objectives:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usable: Reasonable default configuration, supports popular protocols, runs and collects out of the box.&lt;/li&gt; 
 &lt;li&gt;Performant: Highly stable and performant under varying loads and configurations.&lt;/li&gt; 
 &lt;li&gt;Observable: An exemplar of an observable service.&lt;/li&gt; 
 &lt;li&gt;Extensible: Customizable without touching the core code.&lt;/li&gt; 
 &lt;li&gt;Unified: Single codebase, deployable as an agent or collector with support for traces, metrics and logs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The OpenTelemetry Collector SIG is present at the &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;#otel-collector&lt;/a&gt; channel on the CNCF Slack and &lt;a href="https://github.com/open-telemetry/community#implementation-sigs"&gt;meets once a week&lt;/a&gt; via video calls. Everyone is invited to join those calls, which typically serves the following purposes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;meet the humans behind the project&lt;/li&gt; 
 &lt;li&gt;get an opinion about specific proposals&lt;/li&gt; 
 &lt;li&gt;look for a sponsor for a proposed component after trying already via GitHub and Slack&lt;/li&gt; 
 &lt;li&gt;get attention to a specific pull-request that got stuck and is difficult to discuss asynchronously&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We rotate our video calls between three time slots, in order to allow everyone to join at least once every three meetings. The rotation order is as follows:&lt;/p&gt; 
&lt;p&gt;Tuesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=1700"&gt;17:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Wednesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0900"&gt;09:00 PT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0500"&gt;05:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Contributors to the project are also welcome to have ad-hoc meetings for synchronous discussions about specific points. Post a note in #otel-collector-dev on Slack inviting others, specifying the topic to be discussed. Unless there are strong reasons to keep the meeting private, please make it an open invitation for other contributors to join. Try also to identify who would be the other contributors interested on that topic and in which timezones they are.&lt;/p&gt; 
&lt;p&gt;Remember that our source of truth is GitHub: every decision made via Slack or video calls has to be recorded in the relevant GitHub issue. Ideally, the agenda items from the meeting notes would include a link to the issue or pull request where a discussion is happening already. We acknowledge that not everyone can join Slack or the synchronous calls and don't want them to feel excluded.&lt;/p&gt; 
&lt;h2&gt;Supported OTLP version&lt;/h2&gt; 
&lt;p&gt;This code base is currently built against using OTLP protocol v1.5.0, considered Stable. &lt;a href="https://github.com/open-telemetry/opentelemetry-proto?tab=readme-ov-file#stability-definition"&gt;See the OpenTelemetry Protocol Stability definition here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stability levels&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/component-stability.md"&gt;Stability Levels and versioning&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;When used as a library, the OpenTelemetry Collector attempts to track the currently supported versions of Go, as &lt;a href="https://go.dev/doc/devel/release#policy"&gt;defined by the Go team&lt;/a&gt;. Removing support for an unsupported Go version is not considered a breaking change.&lt;/p&gt; 
&lt;p&gt;Support for Go versions on the OpenTelemetry Collector is updated as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will add build and tests steps for the new Go minor version.&lt;/li&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will remove support for Go version &lt;code&gt;N-2&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Official OpenTelemetry Collector distro binaries will be built with a release in the latest Go minor version series.&lt;/p&gt; 
&lt;h2&gt;Verifying the images signatures&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] To verify a signed artifact or blob, first &lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;install Cosign&lt;/a&gt;, then follow the instructions below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We are signing the images &lt;code&gt;otel/opentelemetry-collector&lt;/code&gt; and &lt;code&gt;otel/opentelemetry-collector-contrib&lt;/code&gt; using &lt;a href="https://github.com/sigstore/cosign"&gt;sigstore cosign&lt;/a&gt; tool and to verify the signatures you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify \
  --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/&amp;lt;RELEASE_TAG&amp;gt; \
  --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
  &amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;RELEASE_TAG&amp;gt;&lt;/code&gt;: is the release that you want to validate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;&lt;/code&gt;: is the image that you want to check&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0 --certificate-oidc-issuer=https://token.actions.githubusercontent.com ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0

Verification for ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0 --
The following checks were performed on each of these signatures:
  - The cosign claims were validated
  - Existence of the claims in the transparency log was verified offline
  - The code-signing certificate was verified using trusted certificate authority certificates

[{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQDdlmNeKXQrHnonwWiHLhLLwFDVDNoOBCn2sv85J9P8mgIgDQFssWJImo1hn38VlojvSCL7Qq5FMmtnGu0oLsNdOm8=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FVUNJUURFbDV6N0diMWRVYkM5KzR4c1VvbDhMcWZNV2hiTzhkdEpwdExyMXhUNWZnSWdTdEwwN1I0ZDA5R2x0ZkV0azJVbmlJSlJhQVdrVDJNWDVtRXJNSlplc2pRPSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaG9ha05EUW5jeVowRjNTVUpCWjBsVlNETkNjRFZTYlVSU1VpOXphMWg0YVdWUFlrcFhSbmRrUjNNNGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJOTlZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkUwMVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVZyWlRsSE1ubHNjMjkzYVZZMmRFOVZSazlRVVhNd2NXY3hTSEV5WmpsVUx6UTJZbEFLU1ZSNE0ybFRkVXBhV0hGc1dEUldWV2Q1VlZndmNVazJhblZ2WlZSVEswaG5XVUoyYjBseVNERTFUeTltZEd0VmVtRlBRMEpwZDNkbloxbHZUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZHTkRrMUNrdDFNRWhqTm5rek1rNUNTVTFFU21ReVpuWkxNMHBCZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwWjFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpoQ1NHOUJaVUZDTWtGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUlVOUlFVRkJVVVJCUldOM1VsRkpaMWg2Y2xaME0xQjRkU3ROWVZKRkswUkdORzlGUldNMGVucHphSGR1VDJ4bGMwZGlla2xwYnpNS0wxWmpRMGxSUkZNelJ6QmlNemRhYUhRNGFITjJUSEozYkc1UFFXYzJWRXh1U1ZSS09HTjNkMVEzTW5sMVRVdFlUbFJCUzBKblozRm9hMnBQVUZGUlJBcEJkMDV1UVVSQ2EwRnFRWGxFUkZSYVFqQlRPVXBGYkZsSGJuTnZWVmhLYm04MU5Fc3ZUVUZUTlN0RFFVMU9lbWRqUWpWQ2JrRk5OMWhNUjBoV01HRnhDbVpaY21weFkyOXFia3RaUTAxSFRWRnFjalpUVGt0Q2NVaEtZVGwxTDBSTlQySlpNa0pKTVV0ME4yTnhOemhFT0VOcVMzQmFVblJoYnpadFVVMUVZMk1LUms5M2VYWnhWalJPVld0dlpsRTlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809120,"logIndex":84797936,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}},{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQD1ehDnPO6fzoPIpeQ3KFuYHHBiX7RcEbpo9B2r7JAlzwIgZ1bsuQz7gAXbNU1IEdsTQgfAnRk3xVXO16GnKXM2sAQ=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FUUNJRU92QXl0aE5RVGNvNHFMdG9GZUVOV0toNCtEK2I5SUxyYWhoa09WMmVBM0FpQjNEL2FpUGd1T05zUlB5alhaWk1hdnlCam0vMkVxNFNUMkZJWHozTnpyYWc9PSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaHBSRU5EUW5jMlowRjNTVUpCWjBsVlZuRlRLMnd4WXpoMWVFUktOWEppZDAxMlVuaDBSR3hXVW1nMGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJSZVZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkZGNVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVYyWlRCdGJrRkdRVzl1TVZoUGRIVlRMMXBNT0djeE5YUlJkVmxPTmtRemVUUlBWM0FLT1ZSTFMwUlVkRkJHU2xST1ZrWlJkVTlKUWs1bVJqWk1ORTlGYkd4dlZuUndaSE5uYjB0NVZGTnlPR3hTV1c1S1JIRlBRMEpwTUhkbloxbHdUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZDSzFkSENuVmtlRE5IZUcxS1RWUkpUVVJyYW13clJtdzFXRzkzZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwZDFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpsQ1NITkJaVkZDTTBGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUjJKSlFVRkJVVVJCUldkM1VtZEphRUZQZUZNM2RteDRjVzVGYTBKVVRtSlZVRUpsUkZSbk0waGtlRlkyY0cxWk9FdGliREV6TjNBS1lWUnViMEZwUlVFelMyMUxVbU5uYWxBeVQzSmxORVpyVm5vNU4xaENNWGRsUzBOeWFXazFTMWx2UTB0bVkxRktSREJSZDBObldVbExiMXBKZW1vd1JRcEJkMDFFWVVGQmQxcFJTWGhCUzNwcVpHMUZTV2gzV21Kb1lVSlNlalk1Y1N0MWVrNVZSMmxhYlRWVk4xcE5aWFJMUTFSM1VFTkljRkZQVldvdlVERkJDa2R0YWt3elJucFFObTVpYkRGblNYZFNUbXN6UkhkNWMwOUJUMHhoUVVoR09IaHhZV0ZzT0U5WGNGRmFhRGh4TTJVMVNVSmFXR0ZWVkhocFlWbGFTM29LUXpWS1RGVlNWbnBMTURsd04wVjBUd290TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809122,"logIndex":84797940,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We started signing the images with release &lt;code&gt;v0.95.0&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;Here is a list of community roles with current and previous members:&lt;/p&gt; 
&lt;h3&gt;Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codeboten"&gt;Alex Boten&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bogdandrutu"&gt;Bogdan Drutu&lt;/a&gt;, Snowflake&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmitryax"&gt;Dmitrii Anoshin&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mx-psi"&gt;Pablo Baeyens&lt;/a&gt;, DataDog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the maintainer role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#maintainer"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atoulme"&gt;Antoine Toulme&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmathieu"&gt;Damien Mathieu&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/evan-bradley"&gt;Evan Bradley&lt;/a&gt;, Dynatrace&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jade-guiton-dd"&gt;Jade Guiton&lt;/a&gt;, Datadog&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmacd"&gt;Joshua MacDonald&lt;/a&gt;, Microsoft&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TylerHelmuth"&gt;Tyler Helmuth&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songy23"&gt;Yang Song&lt;/a&gt;, Datadog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the approver role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#approver"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In addition to what is described at the organization-level, the SIG Collector requires all core approvers to take part in rotating the role of the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/release.md#release-manager"&gt;release manager&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axw"&gt;Andrew Wilkins&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrzej-stencel"&gt;Andrzej Stencel&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sincejune"&gt;Chao Weng&lt;/a&gt;, AppDynamics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VihasMakwana"&gt;Vihas Makwana&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;Actively seeking contributors to triage issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the triager role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#triager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pjanotti"&gt;Paulo Janotti&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tigrannajaryan"&gt;Tigran Najaryan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aneurysm9"&gt;Anthony Mirabella&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djaglowski"&gt;Daniel Jaglowski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bebbington"&gt;James Bebbington&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jrcamp"&gt;Jay Camp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jpkrohling"&gt;Juraci Paix√£o Kr√∂hling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nilebox"&gt;Nail Islamov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owais"&gt;Owais Lone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rghetia"&gt;Rahul Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sjkaris"&gt;Steven Karis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alolita"&gt;Alolita Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewhsu"&gt;Andrew Hsu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/punya"&gt;Punya Biswal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flands"&gt;Steve Flanders&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Thanks to all of our contributors!&lt;/h3&gt; 
&lt;a href="https://github.com/open-telemetry/opentelemetry-collector/graphs/contributors"&gt; &lt;img alt="Repo contributors" src="https://contrib.rocks/image?repo=open-telemetry/opentelemetry-collector" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>iam-veeramalla/aws-devops-zero-to-hero</title>
      <link>https://github.com/iam-veeramalla/aws-devops-zero-to-hero</link>
      <description>&lt;p&gt;AWS zero to hero repo for devops engineers to learn AWS in 30 Days. This repo includes projects, presentations, interview questions and real time examples.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;aws-devops-zero-to-hero&lt;/h1&gt; 
&lt;p&gt;Complete YouTube playlist - &lt;a href="https://www.youtube.com/playlist?list=PLdpzxOOAlwvLNOxX0RfndiYSt1Le9azze"&gt;https://www.youtube.com/playlist?list=PLdpzxOOAlwvLNOxX0RfndiYSt1Le9azze&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;AWS zero to hero repo for devops engineers to learn AWS in 30 Days. This repo includes projects, presentations, interview questions and real time examples. Each day's class will provide real-time knowledge on AWS services, allowing you to apply what you've learned and gain practical skills in working with AWS in a DevOps context.&lt;/p&gt; 
&lt;h2&gt;Day 1: Introduction to AWS&lt;/h2&gt; 
&lt;p&gt;You will learn what is private and public cloud. Why companies are moving to public cloud, what are the advantages of moving to cloud.&lt;/p&gt; 
&lt;p&gt;Also, you will be introduced to the basics of AWS, including the core services and their significance in DevOps practices. Finally learn how to set up an AWS account and navigate the AWS Management Console.&lt;/p&gt; 
&lt;h2&gt;Day 2: IAM (Identity and Access Management)&lt;/h2&gt; 
&lt;p&gt;You will explore IAM, which is used for managing access to AWS resources. You'll learn how to create IAM users, groups, and roles, and how to apply permissions and security best practices to ensure proper access control.&lt;/p&gt; 
&lt;h2&gt;Day 3: EC2 Instances&lt;/h2&gt; 
&lt;p&gt;You'll dive into EC2, which provides virtual servers in the cloud. You'll learn how to launch EC2 instances, connect to them using SSH, and understand key concepts such as instance types, security groups, and key pairs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Your First AWS Project&lt;/strong&gt;: Deploy a simple web application(such as jenkins) on the ec2 instance and access the application from outside AWS.&lt;/p&gt; 
&lt;h2&gt;Day 4: AWS Networking (VPC)&lt;/h2&gt; 
&lt;p&gt;You'll explore AWS networking concepts, with a specific focus on VPC (Virtual Private Cloud). You'll learn how to create and configure VPCs, subnets, and route tables, enabling you to design and manage the network infrastructure for your applications.&lt;/p&gt; 
&lt;h2&gt;Day 5: AWS Security&lt;/h2&gt; 
&lt;p&gt;This day emphasizes security best practices in AWS. You'll learn how to implement security measures such as security groups, network ACLs (Access Control Lists), and IAM policies to ensure the confidentiality, integrity, and availability of your AWS resources.&lt;/p&gt; 
&lt;h2&gt;Day 6: AWS Route 53&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; Configure and manage a domain name using Route 53. You'll register a domain, set up DNS records, and explore advanced features such as health checks, routing policies, and DNS-based failover.&lt;/p&gt; 
&lt;h2&gt;Day 7: Secure VPC Setup with EC2 Instances&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Design and configure a VPC: Create a VPC with custom IP ranges. Set up public and private subnets. Configure route tables and associate subnets.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Implement network security: Set up network access control lists (ACLs) to control inbound and outbound traffic. Configure security groups for EC2 instances to allow specific ports and protocols.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Provision EC2 instances: Launch EC2 instances in both the public and private subnets. Configure security groups for the instances to allow necessary traffic. Create and assign IAM roles to the instances with appropriate permissions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Networking and routing: Set up an internet gateway to allow internet access for instances in the public subnet. Configure NAT gateway or NAT instance to enable outbound internet access for instances in the private subnet. Create appropriate route tables and associate them with the subnets.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;SSH key pair and access control: Generate an SSH key pair and securely store the private key. Configure the instances to allow SSH access only with the generated key pair. Implement IAM policies and roles to control access and permissions to AWS resources.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Test and validate the setup: SSH into the EC2 instances using the private key and verify connectivity. Test network connectivity between instances in different subnets. Validate security group rules and network ACL settings.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By implementing this project, you'll gain hands-on experience in setting up a secure VPC with EC2 instances, implementing networking and routing, configuring security groups and IAM roles, and ensuring proper access control. This project will provide a practical understanding of how these AWS services work together to create a secure and scalable infrastructure for your applications.&lt;/p&gt; 
&lt;h2&gt;Day 8: AWS Interview Questions on EC2, IAM and VPC&lt;/h2&gt; 
&lt;h2&gt;Day 9: Amazon S3&lt;/h2&gt; 
&lt;p&gt;This day focuses on Amazon S3, a scalable object storage service. You'll learn how to create S3 buckets, upload and download objects, and organize data using S3 features like versioning, lifecycle policies, and access control.&lt;/p&gt; 
&lt;h2&gt;Day 10: AWS CLI&lt;/h2&gt; 
&lt;h2&gt;Day 11: AWS CloudFormation&lt;/h2&gt; 
&lt;p&gt;This day introduces Infrastructure as Code (IaC) using AWS CloudFormation. You'll learn how to create CloudFormation templates to automate the provisioning of resources, manage stacks, and ensure consistent infrastructure across deployments.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll work on creating a CloudFormation template that provisions a fully configured application stack, including EC2 instances, networking components, and security groups.&lt;/p&gt; 
&lt;h2&gt;Day 12: AWS CodeCommit&lt;/h2&gt; 
&lt;p&gt;This day focuses on AWS CodeCommit, a managed source control service. You'll learn how to set up a Git repository in CodeCommit, collaborate with team members, and manage version control of your codebase.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll configure a CodeCommit repository for a team project, including setting up access control and collaboration workflows.&lt;/p&gt; 
&lt;h2&gt;Day 13: AWS CodePipeline&lt;/h2&gt; 
&lt;p&gt;You'll dive into AWS CodePipeline, a fully managed continuous delivery service. You'll learn how to build end-to-end CI/CD pipelines by configuring source, build, and deployment stages, automating the entire software release process.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll create a CI/CD pipeline using CodePipeline for an application deployment, including source code integration, build, and automatic deployment to a target environment.&lt;/p&gt; 
&lt;h2&gt;Day 14: AWS CodeBuild&lt;/h2&gt; 
&lt;p&gt;This day focuses on AWS CodeBuild, a fully managed build service. You'll learn how to configure build projects in CodeBuild, define build specifications, and perform build and testing processes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll configure and run CodeBuild for a project, including defining build specifications and integrating with other AWS services.&lt;/p&gt; 
&lt;h2&gt;Day 15: AWS CodeDeploy&lt;/h2&gt; 
&lt;p&gt;You'll explore AWS CodeDeploy, a service for automating application deployments to various compute environments. You'll learn how to create deployment groups, configure deployment strategies, and perform automatic rollbacks if necessary.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll implement a Blue/Green deployment strategy for a sample application using CodeDeploy, ensuring zero-downtime deployments and easy rollback options.&lt;/p&gt; 
&lt;h2&gt;Day 16: AWS CloudWatch&lt;/h2&gt; 
&lt;p&gt;This day focuses on monitoring AWS resources using AWS CloudWatch. You'll learn how to create alarms, set up notifications, and collect metrics to gain insights into the health and performance of your applications and infrastructure.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll set up CloudWatch alarms for critical metrics of an application, define appropriate threshold conditions, and configure notification actions.&lt;/p&gt; 
&lt;h2&gt;Day 17: AWS Lambda&lt;/h2&gt; 
&lt;p&gt;This day introduces serverless computing with AWS Lambda. You'll learn how to create and deploy serverless functions, trigger them based on events, and leverage Lambda to build scalable and event-driven architectures.&lt;/p&gt; 
&lt;h2&gt;Day 18: AWS CloudWatch Events and EventBridge&lt;/h2&gt; 
&lt;p&gt;This day focuses on AWS CloudWatch Events and EventBridge, services for event-driven architectures. You'll learn how to create event rules, configure event targets, and build serverless event-driven workflows.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll build a serverless event-driven workflow using CloudWatch Events and EventBridge, demonstrating the integration and automation of different AWS services based on events.&lt;/p&gt; 
&lt;h2&gt;Day 19: AWS CloudFront&lt;/h2&gt; 
&lt;p&gt;If you've never heard of CDN or CloudFront before, don't worry, we will start from scratch and gradually build up your understanding. By the end, you'll be well-versed in these technologies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll configure a s3 bucket to host a static website and learn how to serve the requests to this website through CDN that is AWS Cloud Front.&lt;/p&gt; 
&lt;h2&gt;Day 20: AWS ECR (Elastic Container Registry)&lt;/h2&gt; 
&lt;p&gt;You'll explore AWS ECR, a fully managed container registry for storing and managing container images. You'll learn how to push and pull Docker images to and from ECR, enabling seamless integration with ECS and other container services.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll build a CI/CD pipeline that automatically builds, pushes, and deploys Docker images to ECR, ensuring streamlined container image management.&lt;/p&gt; 
&lt;h2&gt;Day 21: AWS ECS (Elastic Container Service)&lt;/h2&gt; 
&lt;p&gt;This day focuses on AWS ECS, a fully managed container orchestration service. You'll learn how to run and manage containers using ECS, including creating task definitions, managing services, and scaling with auto-scaling capabilities.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll deploy a multi-container application using ECS, configure auto-scaling policies, and ensure high availability and efficient resource utilization.&lt;/p&gt; 
&lt;h2&gt;Day 22: AWS EKS (Elastic Kubernetes Service)&lt;/h2&gt; 
&lt;p&gt;This day introduces AWS EKS, a fully managed Kubernetes service. You'll learn how to deploy and manage Kubernetes clusters using EKS, including launching worker nodes, configuring networking, and deploying applications using Kubernetes manifests.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll deploy a sample application on EKS using Kubernetes manifests, demonstrating the capabilities of running containerized applications on a managed Kubernetes service.&lt;/p&gt; 
&lt;h2&gt;Day 23: AWS Systems Manager&lt;/h2&gt; 
&lt;p&gt;This day focuses on AWS Secrets Manager, a service for storing and managing secrets such as database credentials, API keys, and other sensitive information. You'll learn how to store, retrieve, and rotate secrets securely in your applications.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll configure Secrets Manager to store and manage secrets, integrate secret retrieval in an application, and implement secret rotation policies.&lt;/p&gt; 
&lt;h2&gt;Day 24: Create Infrastructure using Terraform&lt;/h2&gt; 
&lt;p&gt;This day focusses on creating infrastructure using Terraform with real time example.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll create a VPC and deploy 2 applications in different availability zones. We will also create a load balancer to balance the load between the instances automatically.&lt;/p&gt; 
&lt;h2&gt;Day 25: AWS CloudTrail and Config&lt;/h2&gt; 
&lt;p&gt;You'll explore AWS CloudTrail and AWS Config, which provide auditing and compliance capabilities. You'll learn how to track API calls using CloudTrail and ensure compliance with AWS Config rules.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll configure CloudTrail to log API activities and set up AWS Config rules to enforce compliance policies for your AWS resources.&lt;/p&gt; 
&lt;h2&gt;Day 26: AWS Elastic Load Balancer&lt;/h2&gt; 
&lt;p&gt;You'll explore AWS Elastic Load Balancer, a service for distributing incoming application traffic across multiple targets. You'll learn how to configure and manage load balancers to ensure high availability, fault tolerance, and scalability.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Project:&lt;/strong&gt; You'll configure an Elastic Load Balancer for an application, define target groups, and observe the load balancing behavior across instances.&lt;/p&gt; 
&lt;h2&gt;Day 27: 500 AWS interview questions and answers topic wise for interviews.&lt;/h2&gt; 
&lt;p&gt;This day focuses on learning how to migrate applications to AWS cloud. What are the most popular strategies and tools used to achieve the cloud migration.&lt;/p&gt; 
&lt;h2&gt;Day 28: AWS Cloud Migration Strategies and Tools&lt;/h2&gt; 
&lt;p&gt;This day focuses on learning how to migrate applications to AWS cloud. What are the most popular strategies and tools used to achieve the cloud migration.&lt;/p&gt; 
&lt;h2&gt;Day 29: AWS Best Practices and Job Preparation&lt;/h2&gt; 
&lt;p&gt;On the final day, you'll review best practices for AWS services, including security, cost optimization and performance.&lt;/p&gt; 
&lt;h2&gt;Day 30: AWS Project with RDS&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>Tencent/WeKnora</title>
      <link>https://github.com/Tencent/WeKnora</link>
      <description>&lt;p&gt;LLM-powered framework for deep document understanding, semantic retrieval, and context-aware answers using RAG paradigm.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/logo.png" alt="WeKnora Logo" height="120" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://weknora.weixin.qq.com" target="_blank"&gt; &lt;img alt="ÂÆòÊñπÁΩëÁ´ô" src="https://img.shields.io/badge/ÂÆòÊñπÁΩëÁ´ô-WeKnora-4e6b99" /&gt; &lt;/a&gt; &lt;a href="https://chatbot.weixin.qq.com" target="_blank"&gt; &lt;img alt="ÂæÆ‰ø°ÂØπËØùÂºÄÊîæÂπ≥Âè∞" src="https://img.shields.io/badge/ÂæÆ‰ø°ÂØπËØùÂºÄÊîæÂπ≥Âè∞-5ac725" /&gt; &lt;/a&gt; &lt;a href="https://github.com/Tencent/WeKnora/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/License-MIT-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4" alt="License" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/CHANGELOG.md"&gt; &lt;img alt="Version" src="https://img.shields.io/badge/version-0.1.3-2e6cc4?labelColor=d4eaf7" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; | &lt;b&gt;English&lt;/b&gt; | &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/README_CN.md"&gt;&lt;b&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/b&gt;&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/README_JA.md"&gt;&lt;b&gt;Êó•Êú¨Ë™û&lt;/b&gt;&lt;/a&gt; | &lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h4 align="center"&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-overview"&gt;Overview&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-architecture"&gt;Architecture&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-key-features"&gt;Key Features&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-getting-started"&gt;Getting Started&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-api-reference"&gt;API Reference&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/#-developer-guide"&gt;Developer Guide&lt;/a&gt;&lt;/p&gt; &lt;/h4&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;üí° WeKnora - LLM-Powered Document Understanding &amp;amp; Retrieval Framework&lt;/h1&gt; 
&lt;h2&gt;üìå Overview&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://weknora.weixin.qq.com"&gt;&lt;strong&gt;WeKnora&lt;/strong&gt;&lt;/a&gt; is an LLM-powered framework designed for deep document understanding and semantic retrieval, especially for handling complex, heterogeneous documents.&lt;/p&gt; 
&lt;p&gt;It adopts a modular architecture that combines multimodal preprocessing, semantic vector indexing, intelligent retrieval, and large language model inference. At its core, WeKnora follows the &lt;strong&gt;RAG (Retrieval-Augmented Generation)&lt;/strong&gt; paradigm, enabling high-quality, context-aware answers by combining relevant document chunks with model reasoning.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Website:&lt;/strong&gt; &lt;a href="https://weknora.weixin.qq.com"&gt;https://weknora.weixin.qq.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üîí Security Notice&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Starting from v0.1.3, WeKnora includes login authentication functionality to enhance system security. For production deployments, we strongly recommend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Deploy WeKnora services in internal/private network environments rather than public internet&lt;/li&gt; 
 &lt;li&gt;Avoid exposing the service directly to public networks to prevent potential information leakage&lt;/li&gt; 
 &lt;li&gt;Configure proper firewall rules and access controls for your deployment environment&lt;/li&gt; 
 &lt;li&gt;Regularly update to the latest version for security patches and improvements&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üèóÔ∏è Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/pipeline.jpg" alt="weknora-pipeline.png" /&gt;&lt;/p&gt; 
&lt;p&gt;WeKnora employs a modern modular design to build a complete document understanding and retrieval pipeline. The system primarily includes document parsing, vector processing, retrieval engine, and large model inference as core modules, with each component being flexibly configurable and extendable.&lt;/p&gt; 
&lt;h2&gt;üéØ Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üîç Precise Understanding&lt;/strong&gt;: Structured content extraction from PDFs, Word documents, images and more into unified semantic views&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Intelligent Reasoning&lt;/strong&gt;: Leverages LLMs to understand document context and user intent for accurate Q&amp;amp;A and multi-turn conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß Flexible Extension&lt;/strong&gt;: All components from parsing and embedding to retrieval and generation are decoupled for easy customization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° Efficient Retrieval&lt;/strong&gt;: Hybrid retrieval strategies combining keywords, vectors, and knowledge graphs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ User-Friendly&lt;/strong&gt;: Intuitive web interface and standardized APIs for zero technical barriers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîí Secure &amp;amp; Controlled&lt;/strong&gt;: Support for local deployment and private cloud, ensuring complete data sovereignty&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìä Application Scenarios&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario&lt;/th&gt; 
   &lt;th&gt;Applications&lt;/th&gt; 
   &lt;th&gt;Core Value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Enterprise Knowledge Management&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Internal document retrieval, policy Q&amp;amp;A, operation manual search&lt;/td&gt; 
   &lt;td&gt;Improve knowledge discovery efficiency, reduce training costs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Academic Research Analysis&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Paper retrieval, research report analysis, scholarly material organization&lt;/td&gt; 
   &lt;td&gt;Accelerate literature review, assist research decisions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Product Technical Support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Product manual Q&amp;amp;A, technical documentation search, troubleshooting&lt;/td&gt; 
   &lt;td&gt;Enhance customer service quality, reduce support burden&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Legal &amp;amp; Compliance Review&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Contract clause retrieval, regulatory policy search, case analysis&lt;/td&gt; 
   &lt;td&gt;Improve compliance efficiency, reduce legal risks&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Medical Knowledge Assistance&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Medical literature retrieval, treatment guideline search, case analysis&lt;/td&gt; 
   &lt;td&gt;Support clinical decisions, improve diagnosis quality&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üß© Feature Matrix&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Module&lt;/th&gt; 
   &lt;th&gt;Support&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Document Formats&lt;/td&gt; 
   &lt;td&gt;‚úÖ PDF / Word / Txt / Markdown / Images (with OCR / Caption)&lt;/td&gt; 
   &lt;td&gt;Support for structured and unstructured documents with text extraction from images&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Embedding Models&lt;/td&gt; 
   &lt;td&gt;‚úÖ Local models, BGE / GTE APIs, etc.&lt;/td&gt; 
   &lt;td&gt;Customizable embedding models, compatible with local deployment and cloud vector generation APIs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vector DB Integration&lt;/td&gt; 
   &lt;td&gt;‚úÖ PostgreSQL (pgvector), Elasticsearch&lt;/td&gt; 
   &lt;td&gt;Support for mainstream vector index backends, flexible switching for different retrieval scenarios&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Retrieval Strategies&lt;/td&gt; 
   &lt;td&gt;‚úÖ BM25 / Dense Retrieval / GraphRAG&lt;/td&gt; 
   &lt;td&gt;Support for sparse/dense recall and knowledge graph-enhanced retrieval with customizable retrieve-rerank-generate pipelines&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLM Integration&lt;/td&gt; 
   &lt;td&gt;‚úÖ Support for Qwen, DeepSeek, etc., with thinking/non-thinking mode switching&lt;/td&gt; 
   &lt;td&gt;Compatible with local models (e.g., via Ollama) or external API services with flexible inference configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QA Capabilities&lt;/td&gt; 
   &lt;td&gt;‚úÖ Context-aware, multi-turn dialogue, prompt templates&lt;/td&gt; 
   &lt;td&gt;Support for complex semantic modeling, instruction control and chain-of-thought Q&amp;amp;A with configurable prompts and context windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;E2E Testing&lt;/td&gt; 
   &lt;td&gt;‚úÖ Retrieval+generation process visualization and metric evaluation&lt;/td&gt; 
   &lt;td&gt;End-to-end testing tools for evaluating recall hit rates, answer coverage, BLEU/ROUGE and other metrics&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Deployment Modes&lt;/td&gt; 
   &lt;td&gt;‚úÖ Support for local deployment / Docker images&lt;/td&gt; 
   &lt;td&gt;Meets private, offline deployment and flexible operation requirements&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;User Interfaces&lt;/td&gt; 
   &lt;td&gt;‚úÖ Web UI + RESTful API&lt;/td&gt; 
   &lt;td&gt;Interactive interface and standard API endpoints, suitable for both developers and business users&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;h3&gt;üõ† Prerequisites&lt;/h3&gt; 
&lt;p&gt;Make sure the following tools are installed on your system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/compose/"&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üì¶ Installation&lt;/h3&gt; 
&lt;h4&gt;‚ë† Clone the repository&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the main repository
git clone https://github.com/Tencent/WeKnora.git
cd WeKnora
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;‚ë° Configure environment variables&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Copy example env file
cp .env.example .env

# Edit .env and set required values
# All variables are documented in the .env.example comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;‚ë¢ Start the services&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start all services (Ollama + backend containers)
./scripts/start_all.sh
# Or
make start-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;‚ë¢ Start the services (backup)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start ollama services (Optional)
ollama serve &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;

# Start the service
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;‚ë£ Stop the services&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./scripts/start_all.sh --stop
# Or
make stop-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üåê Access Services&lt;/h3&gt; 
&lt;p&gt;Once started, services will be available at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web UI: &lt;code&gt;http://localhost&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Backend API: &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Jaeger Tracing: &lt;code&gt;http://localhost:16686&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîå Using WeChat Dialog Open Platform&lt;/h3&gt; 
&lt;p&gt;WeKnora serves as the core technology framework for the &lt;a href="https://chatbot.weixin.qq.com"&gt;WeChat Dialog Open Platform&lt;/a&gt;, providing a more convenient usage approach:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Zero-code Deployment&lt;/strong&gt;: Simply upload knowledge to quickly deploy intelligent Q&amp;amp;A services within the WeChat ecosystem, achieving an "ask and answer" experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Efficient Question Management&lt;/strong&gt;: Support for categorized management of high-frequency questions, with rich data tools to ensure accurate, reliable, and easily maintainable answers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WeChat Ecosystem Integration&lt;/strong&gt;: Through the WeChat Dialog Open Platform, WeKnora's intelligent Q&amp;amp;A capabilities can be seamlessly integrated into WeChat Official Accounts, Mini Programs, and other WeChat scenarios, enhancing user interaction experiences&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîó Access WeKnora via MCP Server&lt;/h3&gt; 
&lt;h4&gt;1Ô∏è‚É£ Clone the repository&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Tencent/WeKnora
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2Ô∏è‚É£ Configure MCP Server&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It is recommended to directly refer to the &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/mcp-server/MCP_CONFIG.md"&gt;MCP Configuration Guide&lt;/a&gt; for configuration.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Configure the MCP client to connect to the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "weknora": {
      "args": [
        "path/to/WeKnora/mcp-server/run_server.py"
      ],
      "command": "python",
      "env":{
        "WEKNORA_API_KEY":"Enter your WeKnora instance, open developer tools, check the request header x-api-key starting with sk",
        "WEKNORA_BASE_URL":"http(s)://your-weknora-address/api/v1"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run directly using stdio command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pip install weknora-mcp-server
python -m weknora-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üîß Initialization Configuration Guide&lt;/h2&gt; 
&lt;p&gt;To help users quickly configure various models and reduce trial-and-error costs, we've improved the original configuration file initialization method by adding a Web UI interface for model configuration. Before using, please ensure the code is updated to the latest version. The specific steps are as follows: If this is your first time using this project, you can skip steps ‚ë†‚ë° and go directly to steps ‚ë¢‚ë£.&lt;/p&gt; 
&lt;h3&gt;‚ë† Stop the services&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./scripts/start_all.sh --stop
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;‚ë° Clear existing data tables (recommended when no important data exists)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make clean-db
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;‚ë¢ Compile and start services&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./scripts/start_all.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;‚ë£ Access Web UI&lt;/h3&gt; 
&lt;p&gt;&lt;a href="http://localhost"&gt;http://localhost&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;On first access, it will automatically redirect to the initialization configuration page. After configuration is complete, it will automatically redirect to the knowledge base page. Please follow the page instructions to complete model configuration.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/config.png" alt="Configuration Page" /&gt;&lt;/p&gt; 
&lt;h2&gt;üì± Interface Showcase&lt;/h2&gt; 
&lt;h3&gt;Web UI Interface&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Knowledge Upload&lt;/b&gt;&lt;br /&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/knowledges.png" alt="Knowledge Upload Interface" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Q&amp;amp;A Entry&lt;/b&gt;&lt;br /&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/qa.png" alt="Q&amp;amp;A Entry Interface" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="2"&gt;&lt;b&gt;Rich Text &amp;amp; Image Responses&lt;/b&gt;&lt;br /&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/answer.png" alt="Rich Answer Interface" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Knowledge Base Management:&lt;/strong&gt; Support for dragging and dropping various documents, automatically identifying document structures and extracting core knowledge to establish indexes. The system clearly displays processing progress and document status, achieving efficient knowledge base management.&lt;/p&gt; 
&lt;h3&gt;Document Knowledge Graph&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/graph2.png" alt="Knowledge Graph View 1" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/images/graph1.png" alt="Knowledge Graph View 2" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;WeKnora supports transforming documents into knowledge graphs, displaying the relationships between different sections of the documents. Once the knowledge graph feature is enabled, the system analyzes and constructs an internal semantic association network that not only helps users understand document content but also provides structured support for indexing and retrieval, enhancing the relevance and breadth of search results.&lt;/p&gt; 
&lt;h3&gt;MCP Server Integration Effects&lt;/h3&gt; 
&lt;img width="950" height="2063" alt="MCP Server Integration Demo" src="https://github.com/user-attachments/assets/09111ec8-0489-415c-969d-aa3835778e14" /&gt; 
&lt;h2&gt;üìò API Reference&lt;/h2&gt; 
&lt;p&gt;Troubleshooting FAQ: &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/QA.md"&gt;Troubleshooting FAQ&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Detailed API documentation is available at: &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/docs/API.md"&gt;API Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üß≠ Developer Guide&lt;/h2&gt; 
&lt;h3&gt;üìÅ Directory Structure&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;WeKnora/
‚îú‚îÄ‚îÄ cmd/         # Main entry point
‚îú‚îÄ‚îÄ internal/    # Core business logic
‚îú‚îÄ‚îÄ config/      # Configuration files
‚îú‚îÄ‚îÄ migrations/  # DB migration scripts
‚îú‚îÄ‚îÄ scripts/     # Shell scripts
‚îú‚îÄ‚îÄ services/    # Microservice logic
‚îú‚îÄ‚îÄ frontend/    # Frontend app
‚îî‚îÄ‚îÄ docs/        # Project documentation
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üîß Common Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Wipe all data from DB (use with caution)
make clean-db
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome community contributions! For suggestions, bugs, or feature requests, please submit an &lt;a href="https://github.com/Tencent/WeKnora/issues"&gt;Issue&lt;/a&gt; or directly create a Pull Request.&lt;/p&gt; 
&lt;h3&gt;üéØ How to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Bug Fixes&lt;/strong&gt;: Discover and fix system defects&lt;/li&gt; 
 &lt;li&gt;‚ú® &lt;strong&gt;New Features&lt;/strong&gt;: Propose and implement new capabilities&lt;/li&gt; 
 &lt;li&gt;üìö &lt;strong&gt;Documentation&lt;/strong&gt;: Improve project documentation&lt;/li&gt; 
 &lt;li&gt;üß™ &lt;strong&gt;Test Cases&lt;/strong&gt;: Write unit and integration tests&lt;/li&gt; 
 &lt;li&gt;üé® &lt;strong&gt;UI/UX Enhancements&lt;/strong&gt;: Improve user interface and experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìã Contribution Process&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the project&lt;/strong&gt; to your GitHub account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a feature branch&lt;/strong&gt; &lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Commit changes&lt;/strong&gt; &lt;code&gt;git commit -m 'Add amazing feature'&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Push branch&lt;/strong&gt; &lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Create a Pull Request&lt;/strong&gt; with detailed description of changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üé® Code Standards&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href="https://github.com/golang/go/wiki/CodeReviewComments"&gt;Go Code Review Comments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Format code using &lt;code&gt;gofmt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add necessary unit tests&lt;/li&gt; 
 &lt;li&gt;Update relevant documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìù Commit Guidelines&lt;/h3&gt; 
&lt;p&gt;Use &lt;a href="https://www.conventionalcommits.org/"&gt;Conventional Commits&lt;/a&gt; standard:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;feat: Add document batch upload functionality
fix: Resolve vector retrieval precision issue
docs: Update API documentation
test: Add retrieval engine test cases
refactor: Restructure document parsing module
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/Tencent/WeKnora/main/LICENSE"&gt;MIT License&lt;/a&gt;. You are free to use, modify, and distribute the code with proper attribution.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yhirose/cpp-httplib</title>
      <link>https://github.com/yhirose/cpp-httplib</link>
      <description>&lt;p&gt;A C++ header-only HTTP/HTTPS server and client library&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;cpp-httplib&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/yhirose/cpp-httplib/actions"&gt;&lt;img src="https://github.com/yhirose/cpp-httplib/workflows/test/badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A C++11 single-file header-only cross platform HTTP/HTTPS library.&lt;/p&gt; 
&lt;p&gt;It's extremely easy to set up. Just include the &lt;strong&gt;httplib.h&lt;/strong&gt; file in your code!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] This library uses 'blocking' socket I/O. If you are looking for a library with 'non-blocking' socket I/O, this is not the one that you want.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Simple examples&lt;/h2&gt; 
&lt;h4&gt;Server (Multi-threaded)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;#define CPPHTTPLIB_OPENSSL_SUPPORT
#include "path/to/httplib.h"

// HTTP
httplib::Server svr;

// HTTPS
httplib::SSLServer svr;

svr.Get("/hi", [](const httplib::Request &amp;amp;, httplib::Response &amp;amp;res) {
  res.set_content("Hello World!", "text/plain");
});

svr.listen("0.0.0.0", 8080);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Client&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;#define CPPHTTPLIB_OPENSSL_SUPPORT
#include "path/to/httplib.h"

// HTTP
httplib::Client cli("http://yhirose.github.io");

// HTTPS
httplib::Client cli("https://yhirose.github.io");

auto res = cli.Get("/hi");
res-&amp;gt;status;
res-&amp;gt;body;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SSL Support&lt;/h2&gt; 
&lt;p&gt;SSL support is available with &lt;code&gt;CPPHTTPLIB_OPENSSL_SUPPORT&lt;/code&gt;. &lt;code&gt;libssl&lt;/code&gt; and &lt;code&gt;libcrypto&lt;/code&gt; should be linked.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] cpp-httplib currently supports only version 3.0 or later. Please see &lt;a href="https://www.openssl.org/policies/releasestrat.html"&gt;this page&lt;/a&gt; to get more information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] For macOS: cpp-httplib now can use system certs with &lt;code&gt;CPPHTTPLIB_USE_CERTS_FROM_MACOSX_KEYCHAIN&lt;/code&gt;. &lt;code&gt;CoreFoundation&lt;/code&gt; and &lt;code&gt;Security&lt;/code&gt; should be linked with &lt;code&gt;-framework&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;#define CPPHTTPLIB_OPENSSL_SUPPORT
#include "path/to/httplib.h"

// Server
httplib::SSLServer svr("./cert.pem", "./key.pem");

// Client
httplib::Client cli("https://localhost:1234"); // scheme + host
httplib::SSLClient cli("localhost:1234"); // host
httplib::SSLClient cli("localhost", 1234); // host, port

// Use your CA bundle
cli.set_ca_cert_path("./ca-bundle.crt");

// Disable cert verification
cli.enable_server_certificate_verification(false);

// Disable host verification
cli.enable_server_hostname_verification(false);
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] When using SSL, it seems impossible to avoid SIGPIPE in all cases, since on some operating systems, SIGPIPE can only be suppressed on a per-message basis, but there is no way to make the OpenSSL library do so for its internal communications. If your program needs to avoid being terminated on SIGPIPE, the only fully general way might be to set up a signal handler for SIGPIPE to handle or ignore it yourself.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;SSL Error Handling&lt;/h3&gt; 
&lt;p&gt;When SSL operations fail, cpp-httplib provides detailed error information through two separate error fields:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;#define CPPHTTPLIB_OPENSSL_SUPPORT
#include "path/to/httplib.h"

httplib::Client cli("https://example.com");

auto res = cli.Get("/");
if (!res) {
  // Check the error type
  const auto err = res.error();

  switch (err) {
    case httplib::Error::SSLConnection:
      std::cout &amp;lt;&amp;lt; "SSL connection failed, SSL error: "
                &amp;lt;&amp;lt; res.ssl_error() &amp;lt;&amp;lt; std::endl;
      break;

    case httplib::Error::SSLLoadingCerts:
      std::cout &amp;lt;&amp;lt; "SSL cert loading failed, OpenSSL error: "
                &amp;lt;&amp;lt; std::hex &amp;lt;&amp;lt; res.ssl_openssl_error() &amp;lt;&amp;lt; std::endl;
      break;

    case httplib::Error::SSLServerVerification:
      std::cout &amp;lt;&amp;lt; "SSL verification failed, X509 error: "
                &amp;lt;&amp;lt; res.ssl_openssl_error() &amp;lt;&amp;lt; std::endl;
      break;

    case httplib::Error::SSLServerHostnameVerification:
      std::cout &amp;lt;&amp;lt; "SSL hostname verification failed, X509 error: "
                &amp;lt;&amp;lt; res.ssl_openssl_error() &amp;lt;&amp;lt; std::endl;
      break;

    default:
      std::cout &amp;lt;&amp;lt; "HTTP error: " &amp;lt;&amp;lt; httplib::to_string(err) &amp;lt;&amp;lt; std::endl;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Server&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;#include &amp;lt;httplib.h&amp;gt;

int main(void)
{
  using namespace httplib;

  Server svr;

  svr.Get("/hi", [](const Request&amp;amp; req, Response&amp;amp; res) {
    res.set_content("Hello World!", "text/plain");
  });

  // Match the request path against a regular expression
  // and extract its captures
  svr.Get(R"(/numbers/(\d+))", [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {
    auto numbers = req.matches[1];
    res.set_content(numbers, "text/plain");
  });

  // Capture the second segment of the request path as "id" path param
  svr.Get("/users/:id", [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {
    auto user_id = req.path_params.at("id");
    res.set_content(user_id, "text/plain");
  });

  // Extract values from HTTP headers and URL query params
  svr.Get("/body-header-param", [](const Request&amp;amp; req, Response&amp;amp; res) {
    if (req.has_header("Content-Length")) {
      auto val = req.get_header_value("Content-Length");
    }
    if (req.has_param("key")) {
      auto val = req.get_param_value("key");
    }
    res.set_content(req.body, "text/plain");
  });

  // If the handler takes time to finish, you can also poll the connection state
  svr.Get("/task", [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {
    const char * result = nullptr;
    process.run(); // for example, starting an external process
    while (result == nullptr) {
      sleep(1);
      if (req.is_connection_closed()) {
        process.kill(); // kill the process
        return;
      }
      result = process.stdout(); // != nullptr if the process finishes
    }
    res.set_content(result, "text/plain");
  });

  svr.Get("/stop", [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {
    svr.stop();
  });

  svr.listen("localhost", 1234);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;Post&lt;/code&gt;, &lt;code&gt;Put&lt;/code&gt;, &lt;code&gt;Delete&lt;/code&gt; and &lt;code&gt;Options&lt;/code&gt; methods are also supported.&lt;/p&gt; 
&lt;h3&gt;Bind a socket to multiple interfaces and any available port&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;int port = svr.bind_to_any_port("0.0.0.0");
svr.listen_after_bind();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Static File Server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// Mount / to ./www directory
auto ret = svr.set_mount_point("/", "./www");
if (!ret) {
  // The specified base directory doesn't exist...
}

// Mount /public to ./www directory
ret = svr.set_mount_point("/public", "./www");

// Mount /public to ./www1 and ./www2 directories
ret = svr.set_mount_point("/public", "./www1"); // 1st order to search
ret = svr.set_mount_point("/public", "./www2"); // 2nd order to search

// Remove mount /
ret = svr.remove_mount_point("/");

// Remove mount /public
ret = svr.remove_mount_point("/public");
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// User defined file extension and MIME type mappings
svr.set_file_extension_and_mimetype_mapping("cc", "text/x-c");
svr.set_file_extension_and_mimetype_mapping("cpp", "text/x-c");
svr.set_file_extension_and_mimetype_mapping("hh", "text/x-h");
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following are built-in mappings:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Extension&lt;/th&gt; 
   &lt;th align="left"&gt;MIME Type&lt;/th&gt; 
   &lt;th align="left"&gt;Extension&lt;/th&gt; 
   &lt;th align="left"&gt;MIME Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;css&lt;/td&gt; 
   &lt;td align="left"&gt;text/css&lt;/td&gt; 
   &lt;td align="left"&gt;mpga&lt;/td&gt; 
   &lt;td align="left"&gt;audio/mpeg&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;csv&lt;/td&gt; 
   &lt;td align="left"&gt;text/csv&lt;/td&gt; 
   &lt;td align="left"&gt;weba&lt;/td&gt; 
   &lt;td align="left"&gt;audio/webm&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;txt&lt;/td&gt; 
   &lt;td align="left"&gt;text/plain&lt;/td&gt; 
   &lt;td align="left"&gt;wav&lt;/td&gt; 
   &lt;td align="left"&gt;audio/wave&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;vtt&lt;/td&gt; 
   &lt;td align="left"&gt;text/vtt&lt;/td&gt; 
   &lt;td align="left"&gt;otf&lt;/td&gt; 
   &lt;td align="left"&gt;font/otf&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;html, htm&lt;/td&gt; 
   &lt;td align="left"&gt;text/html&lt;/td&gt; 
   &lt;td align="left"&gt;ttf&lt;/td&gt; 
   &lt;td align="left"&gt;font/ttf&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;apng&lt;/td&gt; 
   &lt;td align="left"&gt;image/apng&lt;/td&gt; 
   &lt;td align="left"&gt;woff&lt;/td&gt; 
   &lt;td align="left"&gt;font/woff&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;avif&lt;/td&gt; 
   &lt;td align="left"&gt;image/avif&lt;/td&gt; 
   &lt;td align="left"&gt;woff2&lt;/td&gt; 
   &lt;td align="left"&gt;font/woff2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;bmp&lt;/td&gt; 
   &lt;td align="left"&gt;image/bmp&lt;/td&gt; 
   &lt;td align="left"&gt;7z&lt;/td&gt; 
   &lt;td align="left"&gt;application/x-7z-compressed&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gif&lt;/td&gt; 
   &lt;td align="left"&gt;image/gif&lt;/td&gt; 
   &lt;td align="left"&gt;atom&lt;/td&gt; 
   &lt;td align="left"&gt;application/atom+xml&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;png&lt;/td&gt; 
   &lt;td align="left"&gt;image/png&lt;/td&gt; 
   &lt;td align="left"&gt;pdf&lt;/td&gt; 
   &lt;td align="left"&gt;application/pdf&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;svg&lt;/td&gt; 
   &lt;td align="left"&gt;image/svg+xml&lt;/td&gt; 
   &lt;td align="left"&gt;mjs, js&lt;/td&gt; 
   &lt;td align="left"&gt;text/javascript&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;webp&lt;/td&gt; 
   &lt;td align="left"&gt;image/webp&lt;/td&gt; 
   &lt;td align="left"&gt;json&lt;/td&gt; 
   &lt;td align="left"&gt;application/json&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;ico&lt;/td&gt; 
   &lt;td align="left"&gt;image/x-icon&lt;/td&gt; 
   &lt;td align="left"&gt;rss&lt;/td&gt; 
   &lt;td align="left"&gt;application/rss+xml&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;tif&lt;/td&gt; 
   &lt;td align="left"&gt;image/tiff&lt;/td&gt; 
   &lt;td align="left"&gt;tar&lt;/td&gt; 
   &lt;td align="left"&gt;application/x-tar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;tiff&lt;/td&gt; 
   &lt;td align="left"&gt;image/tiff&lt;/td&gt; 
   &lt;td align="left"&gt;xhtml, xht&lt;/td&gt; 
   &lt;td align="left"&gt;application/xhtml+xml&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;jpeg, jpg&lt;/td&gt; 
   &lt;td align="left"&gt;image/jpeg&lt;/td&gt; 
   &lt;td align="left"&gt;xslt&lt;/td&gt; 
   &lt;td align="left"&gt;application/xslt+xml&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;mp4&lt;/td&gt; 
   &lt;td align="left"&gt;video/mp4&lt;/td&gt; 
   &lt;td align="left"&gt;xml&lt;/td&gt; 
   &lt;td align="left"&gt;application/xml&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;mpeg&lt;/td&gt; 
   &lt;td align="left"&gt;video/mpeg&lt;/td&gt; 
   &lt;td align="left"&gt;gz&lt;/td&gt; 
   &lt;td align="left"&gt;application/gzip&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;webm&lt;/td&gt; 
   &lt;td align="left"&gt;video/webm&lt;/td&gt; 
   &lt;td align="left"&gt;zip&lt;/td&gt; 
   &lt;td align="left"&gt;application/zip&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;mp3&lt;/td&gt; 
   &lt;td align="left"&gt;audio/mp3&lt;/td&gt; 
   &lt;td align="left"&gt;wasm&lt;/td&gt; 
   &lt;td align="left"&gt;application/wasm&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] These static file server methods are not thread-safe.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;File request handler&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// The handler is called right before the response is sent to a client
svr.set_file_request_handler([](const Request &amp;amp;req, Response &amp;amp;res) {
  ...
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;p&gt;cpp-httplib provides separate logging capabilities for access logs and error logs, similar to web servers like Nginx and Apache.&lt;/p&gt; 
&lt;h4&gt;Access Logging&lt;/h4&gt; 
&lt;p&gt;Access loggers capture successful HTTP requests and responses:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_logger([](const httplib::Request&amp;amp; req, const httplib::Response&amp;amp; res) {
  std::cout &amp;lt;&amp;lt; req.method &amp;lt;&amp;lt; " " &amp;lt;&amp;lt; req.path &amp;lt;&amp;lt; " -&amp;gt; " &amp;lt;&amp;lt; res.status &amp;lt;&amp;lt; std::endl;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Pre-compression Logging&lt;/h4&gt; 
&lt;p&gt;You can also set a pre-compression logger to capture request/response data before compression is applied:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_pre_compression_logger([](const httplib::Request&amp;amp; req, const httplib::Response&amp;amp; res) {
  // Log before compression - res.body contains uncompressed content
  // Content-Encoding header is not yet set
  your_pre_compression_logger(req, res);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The pre-compression logger is only called when compression would be applied. For responses without compression, only the access logger is called.&lt;/p&gt; 
&lt;h4&gt;Error Logging&lt;/h4&gt; 
&lt;p&gt;Error loggers capture failed requests and connection issues. Unlike access loggers, error loggers only receive the Error and Request information, as errors typically occur before a meaningful Response can be generated.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_error_logger([](const httplib::Error&amp;amp; err, const httplib::Request* req) {
  std::cerr &amp;lt;&amp;lt; httplib::to_string(err) &amp;lt;&amp;lt; " while processing request";
  if (req) {
    std::cerr &amp;lt;&amp;lt; ", client: " &amp;lt;&amp;lt; req-&amp;gt;get_header_value("X-Forwarded-For")
              &amp;lt;&amp;lt; ", request: '" &amp;lt;&amp;lt; req-&amp;gt;method &amp;lt;&amp;lt; " " &amp;lt;&amp;lt; req-&amp;gt;path &amp;lt;&amp;lt; " " &amp;lt;&amp;lt; req-&amp;gt;version &amp;lt;&amp;lt; "'"
              &amp;lt;&amp;lt; ", host: " &amp;lt;&amp;lt; req-&amp;gt;get_header_value("Host");
  }
  std::cerr &amp;lt;&amp;lt; std::endl;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Error handler&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_error_handler([](const auto&amp;amp; req, auto&amp;amp; res) {
  auto fmt = "&amp;lt;p&amp;gt;Error Status: &amp;lt;span style='color:red;'&amp;gt;%d&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;";
  char buf[BUFSIZ];
  snprintf(buf, sizeof(buf), fmt, res.status);
  res.set_content(buf, "text/html");
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exception handler&lt;/h3&gt; 
&lt;p&gt;The exception handler gets called if a user routing handler throws an error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_exception_handler([](const auto&amp;amp; req, auto&amp;amp; res, std::exception_ptr ep) {
  auto fmt = "&amp;lt;h1&amp;gt;Error 500&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;%s&amp;lt;/p&amp;gt;";
  char buf[BUFSIZ];
  try {
    std::rethrow_exception(ep);
  } catch (std::exception &amp;amp;e) {
    snprintf(buf, sizeof(buf), fmt, e.what());
  } catch (...) { // See the following NOTE
    snprintf(buf, sizeof(buf), fmt, "Unknown Exception");
  }
  res.set_content(buf, "text/html");
  res.status = StatusCode::InternalServerError_500;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] if you don't provide the &lt;code&gt;catch (...)&lt;/code&gt; block for a rethrown exception pointer, an uncaught exception will end up causing the server crash. Be careful!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Pre routing handler&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_pre_routing_handler([](const auto&amp;amp; req, auto&amp;amp; res) {
  if (req.path == "/hello") {
    res.set_content("world", "text/html");
    return Server::HandlerResponse::Handled;
  }
  return Server::HandlerResponse::Unhandled;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Post routing handler&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_post_routing_handler([](const auto&amp;amp; req, auto&amp;amp; res) {
  res.set_header("ADDITIONAL_HEADER", "value");
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pre request handler&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_pre_request_handler([](const auto&amp;amp; req, auto&amp;amp; res) {
  if (req.matched_route == "/user/:user") {
    auto user = req.path_params.at("user");
    if (user != "john") {
      res.status = StatusCode::Forbidden_403;
      res.set_content("error", "text/html");
      return Server::HandlerResponse::Handled;
    }
  }
  return Server::HandlerResponse::Unhandled;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Form data handling&lt;/h3&gt; 
&lt;h4&gt;URL-encoded form data ('application/x-www-form-urlencoded')&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.Post("/form", [&amp;amp;](const auto&amp;amp; req, auto&amp;amp; res) {
  // URL query parameters and form-encoded data are accessible via req.params
  std::string username = req.get_param_value("username");
  std::string password = req.get_param_value("password");

  // Handle multiple values with same name
  auto interests = req.get_param_values("interests");

  // Check existence
  if (req.has_param("newsletter")) {
    // Handle newsletter subscription
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;'multipart/form-data' POST data&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.Post("/multipart", [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {
  // Access text fields (from form inputs without files)
  std::string username = req.form.get_field("username");
  std::string bio = req.form.get_field("bio");

  // Access uploaded files
  if (req.form.has_file("avatar")) {
    const auto&amp;amp; file = req.form.get_file("avatar");
    std::cout &amp;lt;&amp;lt; "Uploaded file: " &amp;lt;&amp;lt; file.filename
              &amp;lt;&amp;lt; " (" &amp;lt;&amp;lt; file.content_type &amp;lt;&amp;lt; ") - "
              &amp;lt;&amp;lt; file.content.size() &amp;lt;&amp;lt; " bytes" &amp;lt;&amp;lt; std::endl;

    // Access additional headers if needed
    for (const auto&amp;amp; header : file.headers) {
      std::cout &amp;lt;&amp;lt; "Header: " &amp;lt;&amp;lt; header.first &amp;lt;&amp;lt; " = " &amp;lt;&amp;lt; header.second &amp;lt;&amp;lt; std::endl;
    }

    // Save to disk
    std::ofstream ofs(file.filename, std::ios::binary);
    ofs &amp;lt;&amp;lt; file.content;
  }

  // Handle multiple values with same name
  auto tags = req.form.get_fields("tags");  // e.g., multiple checkboxes
  for (const auto&amp;amp; tag : tags) {
    std::cout &amp;lt;&amp;lt; "Tag: " &amp;lt;&amp;lt; tag &amp;lt;&amp;lt; std::endl;
  }

  auto documents = req.form.get_files("documents");  // multiple file upload
  for (const auto&amp;amp; doc : documents) {
    std::cout &amp;lt;&amp;lt; "Document: " &amp;lt;&amp;lt; doc.filename
              &amp;lt;&amp;lt; " (" &amp;lt;&amp;lt; doc.content.size() &amp;lt;&amp;lt; " bytes)" &amp;lt;&amp;lt; std::endl;
  }

  // Check existence before accessing
  if (req.form.has_field("newsletter")) {
    std::cout &amp;lt;&amp;lt; "Newsletter subscription: " &amp;lt;&amp;lt; req.form.get_field("newsletter") &amp;lt;&amp;lt; std::endl;
  }

  // Get counts for validation
  if (req.form.get_field_count("tags") &amp;gt; 5) {
    res.status = StatusCode::BadRequest_400;
    res.set_content("Too many tags", "text/plain");
    return;
  }

  // Summary
  std::cout &amp;lt;&amp;lt; "Received " &amp;lt;&amp;lt; req.form.fields.size() &amp;lt;&amp;lt; " text fields and "
            &amp;lt;&amp;lt; req.form.files.size() &amp;lt;&amp;lt; " files" &amp;lt;&amp;lt; std::endl;

  res.set_content("Upload successful", "text/plain");
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Receive content with a content receiver&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.Post("/content_receiver",
  [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res, const ContentReader &amp;amp;content_reader) {
    if (req.is_multipart_form_data()) {
      // NOTE: `content_reader` is blocking until every form data field is read
      // This approach allows streaming processing of large files
      std::vector&amp;lt;FormData&amp;gt; items;
      content_reader(
        [&amp;amp;](const FormData &amp;amp;item) {
          items.push_back(item);
          return true;
        },
        [&amp;amp;](const char *data, size_t data_length) {
          items.back().content.append(data, data_length);
          return true;
        });

      // Process the received items
      for (const auto&amp;amp; item : items) {
        if (item.filename.empty()) {
          // Text field
          std::cout &amp;lt;&amp;lt; "Field: " &amp;lt;&amp;lt; item.name &amp;lt;&amp;lt; " = " &amp;lt;&amp;lt; item.content &amp;lt;&amp;lt; std::endl;
        } else {
          // File
          std::cout &amp;lt;&amp;lt; "File: " &amp;lt;&amp;lt; item.name &amp;lt;&amp;lt; " (" &amp;lt;&amp;lt; item.filename &amp;lt;&amp;lt; ") - "
                    &amp;lt;&amp;lt; item.content.size() &amp;lt;&amp;lt; " bytes" &amp;lt;&amp;lt; std::endl;
        }
      }
    } else {
      std::string body;
      content_reader([&amp;amp;](const char *data, size_t data_length) {
        body.append(data, data_length);
        return true;
      });
    }
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Send content with the content provider&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;const size_t DATA_CHUNK_SIZE = 4;

svr.Get("/stream", [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res) {
  auto data = new std::string("abcdefg");

  res.set_content_provider(
    data-&amp;gt;size(), // Content length
    "text/plain", // Content type
    [&amp;amp;, data](size_t offset, size_t length, DataSink &amp;amp;sink) {
      const auto &amp;amp;d = *data;
      sink.write(&amp;amp;d[offset], std::min(length, DATA_CHUNK_SIZE));
      return true; // return 'false' if you want to cancel the process.
    },
    [data](bool success) { delete data; });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Without content length:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.Get("/stream", [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res) {
  res.set_content_provider(
    "text/plain", // Content type
    [&amp;amp;](size_t offset, DataSink &amp;amp;sink) {
      if (/* there is still data */) {
        std::vector&amp;lt;char&amp;gt; data;
        // prepare data...
        sink.write(data.data(), data.size());
      } else {
        sink.done(); // No more data
      }
      return true; // return 'false' if you want to cancel the process.
    });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chunked transfer encoding&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.Get("/chunked", [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {
  res.set_chunked_content_provider(
    "text/plain",
    [](size_t offset, DataSink &amp;amp;sink) {
      sink.write("123", 3);
      sink.write("345", 3);
      sink.write("789", 3);
      sink.done(); // No more data
      return true; // return 'false' if you want to cancel the process.
    }
  );
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With trailer:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.Get("/chunked", [&amp;amp;](const Request&amp;amp; req, Response&amp;amp; res) {
  res.set_header("Trailer", "Dummy1, Dummy2");
  res.set_chunked_content_provider(
    "text/plain",
    [](size_t offset, DataSink &amp;amp;sink) {
      sink.write("123", 3);
      sink.write("345", 3);
      sink.write("789", 3);
      sink.done_with_trailer({
        {"Dummy1", "DummyVal1"},
        {"Dummy2", "DummyVal2"}
      });
      return true;
    }
  );
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Send file content&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.Get("/content", [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res) {
  res.set_file_content("./path/to/content.html");
});

svr.Get("/content", [&amp;amp;](const Request &amp;amp;req, Response &amp;amp;res) {
  res.set_file_content("./path/to/content", "text/html");
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;'Expect: 100-continue' handler&lt;/h3&gt; 
&lt;p&gt;By default, the server sends a &lt;code&gt;100 Continue&lt;/code&gt; response for an &lt;code&gt;Expect: 100-continue&lt;/code&gt; header.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// Send a '417 Expectation Failed' response.
svr.set_expect_100_continue_handler([](const Request &amp;amp;req, Response &amp;amp;res) {
  return StatusCode::ExpectationFailed_417;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// Send a final status without reading the message body.
svr.set_expect_100_continue_handler([](const Request &amp;amp;req, Response &amp;amp;res) {
  return res.status = StatusCode::Unauthorized_401;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keep-Alive connection&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.set_keep_alive_max_count(2); // Default is 100
svr.set_keep_alive_timeout(10);  // Default is 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Timeout&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;svr.set_read_timeout(5, 0); // 5 seconds
svr.set_write_timeout(5, 0); // 5 seconds
svr.set_idle_interval(0, 100000); // 100 milliseconds
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Set maximum payload length for reading a request body&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;svr.set_payload_max_length(1024 * 1024 * 512); // 512MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] When the request body content type is 'www-form-urlencoded', the actual payload length shouldn't exceed &lt;code&gt;CPPHTTPLIB_FORM_URL_ENCODED_PAYLOAD_MAX_LENGTH&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Server-Sent Events&lt;/h3&gt; 
&lt;p&gt;Please see &lt;a href="https://github.com/yhirose/cpp-httplib/raw/master/example/ssesvr.cc"&gt;Server example&lt;/a&gt; and &lt;a href="https://github.com/yhirose/cpp-httplib/raw/master/example/ssecli.cc"&gt;Client example&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Default thread pool support&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ThreadPool&lt;/code&gt; is used as the &lt;strong&gt;default&lt;/strong&gt; task queue, with a default thread count of 8 or &lt;code&gt;std:&lt;span&gt;üßµ&lt;/span&gt;:hardware_concurrency() - 1&lt;/code&gt;, whichever is greater. You can change it with &lt;code&gt;CPPHTTPLIB_THREAD_POOL_COUNT&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to set the thread count at runtime, there is no convenient way... But here is how.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.new_task_queue = [] { return new ThreadPool(12); };
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also provide an optional parameter to limit the maximum number of pending requests, i.e. requests &lt;code&gt;accept()&lt;/code&gt;ed by the listener but still waiting to be serviced by worker threads.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;svr.new_task_queue = [] { return new ThreadPool(/*num_threads=*/12, /*max_queued_requests=*/18); };
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Default limit is 0 (unlimited). Once the limit is reached, the listener will shutdown the client connection.&lt;/p&gt; 
&lt;h3&gt;Override the default thread pool with yours&lt;/h3&gt; 
&lt;p&gt;You can supply your own thread pool implementation according to your need.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;class YourThreadPoolTaskQueue : public TaskQueue {
public:
  YourThreadPoolTaskQueue(size_t n) {
    pool_.start_with_thread_count(n);
  }

  virtual bool enqueue(std::function&amp;lt;void()&amp;gt; fn) override {
    /* Return true if the task was actually enqueued, or false
     * if the caller must drop the corresponding connection. */
    return pool_.enqueue(fn);
  }

  virtual void shutdown() override {
    pool_.shutdown_gracefully();
  }

private:
  YourThreadPool pool_;
};

svr.new_task_queue = [] {
  return new YourThreadPoolTaskQueue(12);
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Client&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;#include &amp;lt;httplib.h&amp;gt;
#include &amp;lt;iostream&amp;gt;

int main(void)
{
  httplib::Client cli("localhost", 1234);

  if (auto res = cli.Get("/hi")) {
    if (res-&amp;gt;status == StatusCode::OK_200) {
      std::cout &amp;lt;&amp;lt; res-&amp;gt;body &amp;lt;&amp;lt; std::endl;
    }
  } else {
    auto err = res.error();
    std::cout &amp;lt;&amp;lt; "HTTP error: " &amp;lt;&amp;lt; httplib::to_string(err) &amp;lt;&amp;lt; std::endl;
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Constructor with scheme-host-port string is now supported!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;httplib::Client cli("localhost");
httplib::Client cli("localhost:8080");
httplib::Client cli("http://localhost");
httplib::Client cli("http://localhost:8080");
httplib::Client cli("https://localhost");
httplib::SSLClient cli("localhost");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Error code&lt;/h3&gt; 
&lt;p&gt;Here is the list of errors from &lt;code&gt;Result::error()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;enum Error {
  Success = 0,
  Unknown,
  Connection,
  BindIPAddress,
  Read,
  Write,
  ExceedRedirectCount,
  Canceled,
  SSLConnection,
  SSLLoadingCerts,
  SSLServerVerification,
  SSLServerHostnameVerification,
  UnsupportedMultipartBoundaryChars,
  Compression,
  ConnectionTimeout,
  ProxyConnection,
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Client Logging&lt;/h3&gt; 
&lt;h4&gt;Access Logging&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;cli.set_logger([](const httplib::Request&amp;amp; req, const httplib::Response&amp;amp; res) {
  auto duration = std::chrono::duration_cast&amp;lt;std::chrono::milliseconds&amp;gt;(
    std::chrono::steady_clock::now() - start_time).count();
  std::cout &amp;lt;&amp;lt; "‚úì " &amp;lt;&amp;lt; req.method &amp;lt;&amp;lt; " " &amp;lt;&amp;lt; req.path
            &amp;lt;&amp;lt; " -&amp;gt; " &amp;lt;&amp;lt; res.status &amp;lt;&amp;lt; " (" &amp;lt;&amp;lt; res.body.size() &amp;lt;&amp;lt; " bytes, "
            &amp;lt;&amp;lt; duration &amp;lt;&amp;lt; "ms)" &amp;lt;&amp;lt; std::endl;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Error Logging&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;cli.set_error_logger([](const httplib::Error&amp;amp; err, const httplib::Request* req) {
  std::cerr &amp;lt;&amp;lt; "‚úó ";
  if (req) {
    std::cerr &amp;lt;&amp;lt; req-&amp;gt;method &amp;lt;&amp;lt; " " &amp;lt;&amp;lt; req-&amp;gt;path &amp;lt;&amp;lt; " ";
  }
  std::cerr &amp;lt;&amp;lt; "failed: " &amp;lt;&amp;lt; httplib::to_string(err);

  // Add specific guidance based on error type
  switch (err) {
    case httplib::Error::Connection:
      std::cerr &amp;lt;&amp;lt; " (verify server is running and reachable)";
      break;
    case httplib::Error::SSLConnection:
      std::cerr &amp;lt;&amp;lt; " (check SSL certificate and TLS configuration)";
      break;
    case httplib::Error::ConnectionTimeout:
      std::cerr &amp;lt;&amp;lt; " (increase timeout or check network latency)";
      break;
    case httplib::Error::Read:
      std::cerr &amp;lt;&amp;lt; " (server may have closed connection prematurely)";
      break;
    default:
      break;
  }
  std::cerr &amp;lt;&amp;lt; std::endl;
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GET with HTTP headers&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;httplib::Headers headers = {
  { "Hello", "World!" }
};
auto res = cli.Get("/hi", headers);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;auto res = cli.Get("/hi", {{"Hello", "World!"}});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;cli.set_default_headers({
  { "Hello", "World!" }
});
auto res = cli.Get("/hi");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;POST&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;res = cli.Post("/post", "text", "text/plain");
res = cli.Post("/person", "name=john1&amp;amp;note=coder", "application/x-www-form-urlencoded");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;POST with parameters&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;httplib::Params params;
params.emplace("name", "john");
params.emplace("note", "coder");

auto res = cli.Post("/post", params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;httplib::Params params{
  { "name", "john" },
  { "note", "coder" }
};

auto res = cli.Post("/post", params);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;POST with Multipart Form Data&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;httplib::UploadFormDataItems items = {
  { "text1", "text default", "", "" },
  { "text2", "aœâb", "", "" },
  { "file1", "h\ne\n\nl\nl\no\n", "hello.txt", "text/plain" },
  { "file2", "{\n  \"world\", true\n}\n", "world.json", "application/json" },
  { "file3", "", "", "application/octet-stream" },
};

auto res = cli.Post("/multipart", items);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PUT&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;res = cli.Put("/resource/foo", "text", "text/plain");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;DELETE&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;res = cli.Delete("/resource/foo");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;OPTIONS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;res = cli.Options("*");
res = cli.Options("/resource/foo");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Timeout&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;cli.set_connection_timeout(0, 300000); // 300 milliseconds
cli.set_read_timeout(5, 0); // 5 seconds
cli.set_write_timeout(5, 0); // 5 seconds

// This method works the same as curl's `--max-time` option
cli.set_max_timeout(5000); // 5 seconds
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Receive content with a content receiver&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;std::string body;

auto res = cli.Get("/large-data",
  [&amp;amp;](const char *data, size_t data_length) {
    body.append(data, data_length);
    return true;
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;std::string body;

auto res = cli.Get(
  "/stream", Headers(),
  [&amp;amp;](const Response &amp;amp;response) {
    EXPECT_EQ(StatusCode::OK_200, response.status);
    return true; // return 'false' if you want to cancel the request.
  },
  [&amp;amp;](const char *data, size_t data_length) {
    body.append(data, data_length);
    return true; // return 'false' if you want to cancel the request.
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Send content with a content provider&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;std::string body = ...;

auto res = cli.Post(
  "/stream", body.size(),
  [](size_t offset, size_t length, DataSink &amp;amp;sink) {
    sink.write(body.data() + offset, length);
    return true; // return 'false' if you want to cancel the request.
  },
  "text/plain");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chunked transfer encoding&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;auto res = cli.Post(
  "/stream",
  [](size_t offset, DataSink &amp;amp;sink) {
    sink.os &amp;lt;&amp;lt; "chunked data 1";
    sink.os &amp;lt;&amp;lt; "chunked data 2";
    sink.os &amp;lt;&amp;lt; "chunked data 3";
    sink.done();
    return true; // return 'false' if you want to cancel the request.
  },
  "text/plain");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;With Progress Callback&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;httplib::Client cli(url, port);

// prints: 0 / 000 bytes =&amp;gt; 50% complete
auto res = cli.Get("/", [](size_t len, size_t total) {
  printf("%lld / %lld bytes =&amp;gt; %d%% complete\n",
    len, total,
    (int)(len*100/total));
  return true; // return 'false' if you want to cancel the request.
}
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/236374/33138910-495c4ecc-cf86-11e7-8693-2fc6d09615c4.gif" alt="progress" /&gt;&lt;/p&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// Basic Authentication
cli.set_basic_auth("user", "pass");

// Digest Authentication
cli.set_digest_auth("user", "pass");

// Bearer Token Authentication
cli.set_bearer_token_auth("token");
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] OpenSSL is required for Digest Authentication.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Proxy server support&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;cli.set_proxy("host", port);

// Basic Authentication
cli.set_proxy_basic_auth("user", "pass");

// Digest Authentication
cli.set_proxy_digest_auth("user", "pass");

// Bearer Token Authentication
cli.set_proxy_bearer_token_auth("pass");
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] OpenSSL is required for Digest Authentication.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Range&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;httplib::Client cli("httpbin.org");

auto res = cli.Get("/range/32", {
  httplib::make_range_header({{1, 10}}) // 'Range: bytes=1-10'
});
// res-&amp;gt;status should be 206.
// res-&amp;gt;body should be "bcdefghijk".
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;httplib::make_range_header({{1, 10}, {20, -1}})      // 'Range: bytes=1-10, 20-'
httplib::make_range_header({{100, 199}, {500, 599}}) // 'Range: bytes=100-199, 500-599'
httplib::make_range_header({{0, 0}, {-1, 1}})        // 'Range: bytes=0-0, -1'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keep-Alive connection&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;httplib::Client cli("localhost", 1234);

cli.Get("/hello");         // with "Connection: close"

cli.set_keep_alive(true);
cli.Get("/world");

cli.set_keep_alive(false);
cli.Get("/last-request");  // with "Connection: close"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Redirect&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;httplib::Client cli("yahoo.com");

auto res = cli.Get("/");
res-&amp;gt;status; // 301

cli.set_follow_location(true);
res = cli.Get("/");
res-&amp;gt;status; // 200
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use a specific network interface&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This feature is not available on Windows, yet.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;cli.set_interface("eth0"); // Interface name, IP address or host name
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Automatic Path Encoding&lt;/h3&gt; 
&lt;p&gt;The client automatically encodes special characters in URL paths by default:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;httplib::Client cli("https://example.com");

// Automatic path encoding (default behavior)
cli.set_path_encode(true);
auto res = cli.Get("/path with spaces/file.txt"); // Automatically encodes spaces

// Disable automatic path encoding
cli.set_path_encode(false);
auto res = cli.Get("/already%20encoded/path"); // Use pre-encoded paths
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;set_path_encode(bool on)&lt;/code&gt; - Controls automatic encoding of special characters in URL paths 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;true&lt;/code&gt; (default): Automatically encodes spaces, plus signs, newlines, and other special characters&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;false&lt;/code&gt;: Sends paths as-is without encoding (useful for pre-encoded URLs)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Performance Note for Local Connections&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] On Windows systems with improperly configured IPv6 settings, using "localhost" as the hostname may cause significant connection delays (up to 2 seconds per request) due to DNS resolution issues. This affects both client and server operations. For better performance when connecting to local services, use "127.0.0.1" instead of "localhost".&lt;/p&gt; 
 &lt;p&gt;See: &lt;a href="https://github.com/yhirose/cpp-httplib/issues/366#issuecomment-593004264"&gt;https://github.com/yhirose/cpp-httplib/issues/366#issuecomment-593004264&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;// May be slower on Windows due to DNS resolution delays
httplib::Client cli("localhost", 8080);
httplib::Server svr;
svr.listen("localhost", 8080);

// Faster alternative for local connections
httplib::Client cli("127.0.0.1", 8080);
httplib::Server svr;
svr.listen("127.0.0.1", 8080);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Compression&lt;/h2&gt; 
&lt;p&gt;The server can apply compression to the following MIME type contents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;all text types except text/event-stream&lt;/li&gt; 
 &lt;li&gt;image/svg+xml&lt;/li&gt; 
 &lt;li&gt;application/javascript&lt;/li&gt; 
 &lt;li&gt;application/json&lt;/li&gt; 
 &lt;li&gt;application/xml&lt;/li&gt; 
 &lt;li&gt;application/protobuf&lt;/li&gt; 
 &lt;li&gt;application/xhtml+xml&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Zlib Support&lt;/h3&gt; 
&lt;p&gt;'gzip' compression is available with &lt;code&gt;CPPHTTPLIB_ZLIB_SUPPORT&lt;/code&gt;. &lt;code&gt;libz&lt;/code&gt; should be linked.&lt;/p&gt; 
&lt;h3&gt;Brotli Support&lt;/h3&gt; 
&lt;p&gt;Brotli compression is available with &lt;code&gt;CPPHTTPLIB_BROTLI_SUPPORT&lt;/code&gt;. Necessary libraries should be linked. Please see &lt;a href="https://github.com/google/brotli"&gt;https://github.com/google/brotli&lt;/a&gt; for more detail.&lt;/p&gt; 
&lt;h3&gt;Zstd Support&lt;/h3&gt; 
&lt;p&gt;Zstd compression is available with &lt;code&gt;CPPHTTPLIB_ZSTD_SUPPORT&lt;/code&gt;. Necessary libraries should be linked. Please see &lt;a href="https://github.com/facebook/zstd"&gt;https://github.com/facebook/zstd&lt;/a&gt; for more detail.&lt;/p&gt; 
&lt;h3&gt;Default &lt;code&gt;Accept-Encoding&lt;/code&gt; value&lt;/h3&gt; 
&lt;p&gt;The default &lt;code&gt;Accept-Encoding&lt;/code&gt; value contains all possible compression types. So, the following two examples are same.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;res = cli.Get("/resource/foo");
res = cli.Get("/resource/foo", {{"Accept-Encoding", "br, gzip, deflate, zstd"}});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If we don't want a response without compression, we have to set &lt;code&gt;Accept-Encoding&lt;/code&gt; to an empty string. This behavior is similar to curl.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;res = cli.Get("/resource/foo", {{"Accept-Encoding", ""}});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compress request body on client&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;cli.set_compress(true);
res = cli.Post("/resource/foo", "...", "text/plain");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compress response body on client&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;cli.set_decompress(false);
res = cli.Get("/resource/foo");
res-&amp;gt;body; // Compressed data

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Unix Domain Socket Support&lt;/h2&gt; 
&lt;p&gt;Unix Domain Socket support is available on Linux and macOS.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c++"&gt;// Server
httplib::Server svr;
svr.set_address_family(AF_UNIX).listen("./my-socket.sock", 80);

// Client
httplib::Client cli("./my-socket.sock");
cli.set_address_family(AF_UNIX);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;"my-socket.sock" can be a relative path or an absolute path. Your application must have the appropriate permissions for the path. You can also use an abstract socket address on Linux. To use an abstract socket address, prepend a null byte ('\x00') to the path.&lt;/p&gt; 
&lt;p&gt;This library automatically sets the Host header to "localhost" for Unix socket connections, similar to curl's behavior:&lt;/p&gt; 
&lt;h2&gt;URI Encoding/Decoding Utilities&lt;/h2&gt; 
&lt;p&gt;cpp-httplib provides utility functions for URI encoding and decoding:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;#include &amp;lt;httplib.h&amp;gt;

std::string url = "https://example.com/search?q=hello world";
std::string encoded = httplib::encode_uri(url);
std::string decoded = httplib::decode_uri(encoded);

std::string param = "hello world";
std::string encoded_component = httplib::encode_uri_component(param);
std::string decoded_component = httplib::decode_uri_component(encoded_component);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Functions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;encode_uri(const std::string &amp;amp;value)&lt;/code&gt; - Encodes a full URI, preserving reserved characters like &lt;code&gt;://&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;decode_uri(const std::string &amp;amp;value)&lt;/code&gt; - Decodes a URI-encoded string&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;encode_uri_component(const std::string &amp;amp;value)&lt;/code&gt; - Encodes a URI component (query parameter, path segment), encoding all reserved characters&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;decode_uri_component(const std::string &amp;amp;value)&lt;/code&gt; - Decodes a URI component&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Use &lt;code&gt;encode_uri()&lt;/code&gt; for full URLs and &lt;code&gt;encode_uri_component()&lt;/code&gt; for individual query parameters or path segments.&lt;/p&gt; 
&lt;h2&gt;Split httplib.h into .h and .cc&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ ./split.py -h
usage: split.py [-h] [-e EXTENSION] [-o OUT]

This script splits httplib.h into .h and .cc parts.

optional arguments:
  -h, --help            show this help message and exit
  -e EXTENSION, --extension EXTENSION
                        extension of the implementation file (default: cc)
  -o OUT, --out OUT     where to write the files (default: out)

$ ./split.py
Wrote out/httplib.h and out/httplib.cc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Dockerfile for Static HTTP Server&lt;/h2&gt; 
&lt;p&gt;Dockerfile for static HTTP server is available. Port number of this HTTP server is 80, and it serves static files from &lt;code&gt;/html&lt;/code&gt; directory in the container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; docker build -t cpp-httplib-server .
...

&amp;gt; docker run --rm -it -p 8080:80 -v ./docker/html:/html cpp-httplib-server
Serving HTTP on 0.0.0.0 port 80 ...
192.168.65.1 - - [31/Aug/2024:21:33:56 +0000] "GET / HTTP/1.1" 200 599 "-" "curl/8.7.1"
192.168.65.1 - - [31/Aug/2024:21:34:26 +0000] "GET / HTTP/1.1" 200 599 "-" "Mozilla/5.0 ..."
192.168.65.1 - - [31/Aug/2024:21:34:26 +0000] "GET /favicon.ico HTTP/1.1" 404 152 "-" "Mozilla/5.0 ..."
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From Docker Hub&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;&amp;gt; docker run --rm -it -p 8080:80 -v ./docker/html:/html yhirose4dockerhub/cpp-httplib-server
Serving HTTP on 0.0.0.0 port 80 ...
192.168.65.1 - - [31/Aug/2024:21:33:56 +0000] "GET / HTTP/1.1" 200 599 "-" "curl/8.7.1"
192.168.65.1 - - [31/Aug/2024:21:34:26 +0000] "GET / HTTP/1.1" 200 599 "-" "Mozilla/5.0 ..."
192.168.65.1 - - [31/Aug/2024:21:34:26 +0000] "GET /favicon.ico HTTP/1.1" 404 152 "-" "Mozilla/5.0 ..."
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;NOTE&lt;/h2&gt; 
&lt;h3&gt;Regular Expression Stack Overflow&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] When using complex regex patterns in route handlers, be aware that certain patterns may cause stack overflow during pattern matching. This is a known issue with &lt;code&gt;std::regex&lt;/code&gt; implementations and affects the &lt;code&gt;dispatch_request()&lt;/code&gt; method.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-cpp"&gt;// This pattern can cause stack overflow with large input
svr.Get(".*", handler);
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Consider using simpler patterns or path parameters to avoid this issue:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-cpp"&gt;// Safer alternatives
svr.Get("/users/:id", handler);           // Path parameters
svr.Get(R"(/api/v\d+/.*)", handler);     // More specific patterns
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;g++&lt;/h3&gt; 
&lt;p&gt;g++ 4.8 and below cannot build this library since &lt;code&gt;&amp;lt;regex&amp;gt;&lt;/code&gt; in the versions are &lt;a href="https://stackoverflow.com/questions/12530406/is-gcc-4-8-or-earlier-buggy-about-regular-expressions"&gt;broken&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Include &lt;code&gt;httplib.h&lt;/code&gt; before &lt;code&gt;Windows.h&lt;/code&gt; or include &lt;code&gt;Windows.h&lt;/code&gt; by defining &lt;code&gt;WIN32_LEAN_AND_MEAN&lt;/code&gt; beforehand.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;#include &amp;lt;httplib.h&amp;gt;
#include &amp;lt;Windows.h&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-cpp"&gt;#define WIN32_LEAN_AND_MEAN
#include &amp;lt;Windows.h&amp;gt;
#include &amp;lt;httplib.h&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] cpp-httplib officially supports only the latest Visual Studio. It might work with former versions of Visual Studio, but I can no longer verify it. Pull requests are always welcome for the older versions of Visual Studio unless they break the C++11 conformance.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Windows 8 or lower, Visual Studio 2015 or lower, and Cygwin and MSYS2 including MinGW are neither supported nor tested.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT license (¬© 2025 Yuji Hirose)&lt;/p&gt; 
&lt;h2&gt;Special Thanks To&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/yhirose/cpp-httplib/graphs/contributors"&gt;These folks&lt;/a&gt; made great contributions to polish this library to totally another level from a simple toy!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nvm-sh/nvm</title>
      <link>https://github.com/nvm-sh/nvm</link>
      <description>&lt;p&gt;Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions&lt;/p&gt;&lt;hr&gt;&lt;a href="https://github.com/nvm-sh/logos"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-white.svg" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/nvm-sh/logos/HEAD/nvm-logo-color.svg?sanitize=true" height="50" alt="nvm project logo" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h1&gt;Node Version Manager &lt;a href="https://app.travis-ci.com/nvm-sh/nvm"&gt;&lt;img src="https://app.travis-ci.com/nvm-sh/nvm.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nvm-sh/nvm/releases/tag/v0.40.3"&gt;&lt;img src="https://img.shields.io/badge/version-v0.40.3-yellow.svg?sanitize=true" alt="nvm version" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.dev/projects/684"&gt;&lt;img src="https://bestpractices.dev/projects/684/badge" alt="CII Best Practices" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;!-- To update this table of contents, ensure you have run `npm install` then `npm run doctoc` --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#intro"&gt;Intro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-and-updating"&gt;Installing and Updating&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#install--update-script"&gt;Install &amp;amp; Update Script&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#additional-notes"&gt;Additional Notes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker"&gt;Installing in Docker&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-in-docker-for-cicd-jobs"&gt;Installing in Docker for CICD-Jobs&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-linux"&gt;Troubleshooting on Linux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#troubleshooting-on-macos"&gt;Troubleshooting on macOS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#ansible"&gt;Ansible&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#verify-installation"&gt;Verify Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#important-notes"&gt;Important Notes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#git-install"&gt;Git Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install"&gt;Manual Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-upgrade"&gt;Manual Upgrade&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage"&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#long-term-support"&gt;Long-term Support&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#migrating-global-packages-while-installing"&gt;Migrating Global Packages While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#default-global-packages-from-file-while-installing"&gt;Default Global Packages From File While Installing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#iojs"&gt;io.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#system-version-of-node"&gt;System Version of Node&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#listing-versions"&gt;Listing Versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#setting-custom-colors"&gt;Setting Custom Colors&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#persisting-custom-colors"&gt;Persisting custom colors&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#suppressing-colorized-output"&gt;Suppressing colorized output&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#restoring-path"&gt;Restoring PATH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#set-default-node-version"&gt;Set default node version&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#use-a-mirror-of-node-binaries"&gt;Use a mirror of node binaries&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#pass-authorization-header-to-mirror"&gt;Pass Authorization header to mirror&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#nvmrc"&gt;.nvmrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#deeper-shell-integration"&gt;Deeper Shell Integration&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#calling-nvm-use-automatically-in-a-directory-with-a-nvmrc-file"&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash"&gt;bash&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#zsh"&gt;zsh&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#fish"&gt;fish&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#running-tests"&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#environment-variables"&gt;Environment variables&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#bash-completion"&gt;Bash Completion&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage-1"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#compatibility-issues"&gt;Compatibility Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#installing-nvm-on-alpine-linux"&gt;Installing nvm on Alpine Linux&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-313"&gt;Alpine Linux 3.13+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#alpine-linux-35---312"&gt;Alpine Linux 3.5 - 3.12&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#uninstalling--removal"&gt;Uninstalling / Removal&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-uninstall"&gt;Manual Uninstall&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#docker-for-development-environment"&gt;Docker For Development Environment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#problems"&gt;Problems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#macos-troubleshooting"&gt;macOS Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#wsl-troubleshooting"&gt;WSL Troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#maintainers"&gt;Maintainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#project-support"&gt;Project Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#enterprise-support"&gt;Enterprise Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#copyright-notice"&gt;Copyright notice&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;Intro&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; allows you to quickly install and use different versions of node via the command line.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ nvm use 16
Now using node v16.9.1 (npm v7.21.1)
$ node -v
v16.9.1
$ nvm use 14
Now using node v14.18.0 (npm v6.14.15)
$ node -v
v14.18.0
$ nvm install 12
Now using node v12.22.6 (npm v6.14.5)
$ node -v
v12.22.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Simple as that!&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;nvm is a version manager for &lt;a href="https://nodejs.org/en/"&gt;node.js&lt;/a&gt;, designed to be installed per-user, and invoked per-shell. &lt;code&gt;nvm&lt;/code&gt; works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and &lt;a href="https://github.com/nvm-sh/nvm#important-notes"&gt;windows WSL&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id="installation-and-update"&gt;&lt;/a&gt; &lt;a id="install-script"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing and Updating&lt;/h2&gt; 
&lt;h3&gt;Install &amp;amp; Update Script&lt;/h3&gt; 
&lt;p&gt;To &lt;strong&gt;install&lt;/strong&gt; or &lt;strong&gt;update&lt;/strong&gt; nvm, you should run the &lt;a href="https://github.com/nvm-sh/nvm/raw/v0.40.3/install.sh"&gt;install script&lt;/a&gt;. To do that, you may either download and run the script manually, or use the following cURL or Wget command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running either of the above commands downloads a script and runs it. The script clones the nvm repository to &lt;code&gt;~/.nvm&lt;/code&gt;, and attempts to add the source lines from the snippet below to the correct profile file (&lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, or &lt;code&gt;~/.profile&lt;/code&gt;). If you find the install script is updating the wrong profile file, set the &lt;code&gt;$PROFILE&lt;/code&gt; env var to the profile file‚Äôs path, and then rerun the installation script.&lt;/p&gt; 
&lt;p&gt;&lt;a id="profile_snippet"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] &amp;amp;&amp;amp; printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh" # This loads nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Additional Notes&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If the environment variable &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; is present, it will place the &lt;code&gt;nvm&lt;/code&gt; files there.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can add &lt;code&gt;--no-use&lt;/code&gt; to the end of the above script to postpone using &lt;code&gt;nvm&lt;/code&gt; until you manually &lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#usage"&gt;&lt;code&gt;use&lt;/code&gt;&lt;/a&gt; it:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] &amp;amp;&amp;amp; printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh" --no-use # This loads nvm, without auto-using the default version
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can customize the install source, directory, profile, and version using the &lt;code&gt;NVM_SOURCE&lt;/code&gt;, &lt;code&gt;NVM_DIR&lt;/code&gt;, &lt;code&gt;PROFILE&lt;/code&gt;, and &lt;code&gt;NODE_VERSION&lt;/code&gt; variables. Eg: &lt;code&gt;curl ... | NVM_DIR="path/to/nvm"&lt;/code&gt;. Ensure that the &lt;code&gt;NVM_DIR&lt;/code&gt; does not contain a trailing slash.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The installer can use &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;curl&lt;/code&gt;, or &lt;code&gt;wget&lt;/code&gt; to download &lt;code&gt;nvm&lt;/code&gt;, whichever is available.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can instruct the installer to not edit your shell config (for example if you already get completions via a &lt;a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm"&gt;zsh nvm plugin&lt;/a&gt;) by setting &lt;code&gt;PROFILE=/dev/null&lt;/code&gt; before running the &lt;code&gt;install.sh&lt;/code&gt; script. Here's an example one-line command to do that: &lt;code&gt;PROFILE=/dev/null bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash'&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Installing in Docker&lt;/h4&gt; 
&lt;p&gt;When invoking bash as a non-interactive shell, like in a Docker container, none of the regular profile files are sourced. In order to use &lt;code&gt;nvm&lt;/code&gt;, &lt;code&gt;node&lt;/code&gt;, and &lt;code&gt;npm&lt;/code&gt; like normal, you can instead specify the special &lt;code&gt;BASH_ENV&lt;/code&gt; variable, which bash sources when invoked non-interactively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Dockerfile"&gt;# Use bash for the shell
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Create a script file sourced by both interactive and non-interactive bash shells
ENV BASH_ENV /home/user/.bash_env
RUN touch "${BASH_ENV}"
RUN echo '. "${BASH_ENV}"' &amp;gt;&amp;gt; ~/.bashrc

# Download and install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | PROFILE="${BASH_ENV}" bash
RUN echo node &amp;gt; .nvmrc
RUN nvm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Installing in Docker for CICD-Jobs&lt;/h5&gt; 
&lt;p&gt;More robust, works in CI/CD-Jobs. Can be run in interactive and non-interactive containers. See &lt;a href="https://github.com/nvm-sh/nvm/issues/3531"&gt;https://github.com/nvm-sh/nvm/issues/3531&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Dockerfile"&gt;FROM ubuntu:latest
ARG NODE_VERSION=20

# install curl
RUN apt update &amp;amp;&amp;amp; apt install curl -y

# install nvm
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash

# set env
ENV NVM_DIR=/root/.nvm

# install node
RUN bash -c "source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; nvm install $NODE_VERSION"

# set ENTRYPOINT for reloading nvm-environment
ENTRYPOINT ["bash", "-c", "source $NVM_DIR/nvm.sh &amp;amp;&amp;amp; exec \"$@\"", "--"]

# set cmd to bash
CMD ["/bin/bash"]

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example defaults to installation of nodejs version 20.x.y. Optionally you can easily override the version with docker build args like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker build -t nvmimage --build-arg NODE_VERSION=19 .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After creation of the image you can start container interactively and run commands, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --rm -it nvmimage

root@0a6b5a237c14:/# nvm -v
0.40.3

root@0a6b5a237c14:/# node -v
v19.9.0

root@0a6b5a237c14:/# npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Noninteractive example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;user@host:/tmp/test $ docker run --rm -it nvmimage node -v
v19.9.0
user@host:/tmp/test $ docker run --rm -it nvmimage npm -v
9.6.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting on Linux&lt;/h4&gt; 
&lt;p&gt;On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;bash&lt;/em&gt;: &lt;code&gt;source ~/.bashrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;zsh&lt;/em&gt;: &lt;code&gt;source ~/.zshrc&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;ksh&lt;/em&gt;: &lt;code&gt;. ~/.profile&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;These should pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; 
&lt;h4&gt;Troubleshooting on macOS&lt;/h4&gt; 
&lt;p&gt;Since OS X 10.9, &lt;code&gt;/usr/bin/git&lt;/code&gt; has been preset by Xcode command line tools, which means we can't properly detect if Git is installed or not. You need to manually install the Xcode command line tools before running the install script, otherwise, it'll fail. (see &lt;a href="https://github.com/nvm-sh/nvm/issues/1782"&gt;#1782&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;If you get &lt;code&gt;nvm: command not found&lt;/code&gt; after running the install script, one of the following might be the reason:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Since macOS 10.15, the default shell is &lt;code&gt;zsh&lt;/code&gt; and nvm will look for &lt;code&gt;.zshrc&lt;/code&gt; to update, none is installed by default. Create one with &lt;code&gt;touch ~/.zshrc&lt;/code&gt; and run the install script again.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, the previous default shell, your system may not have &lt;code&gt;.bash_profile&lt;/code&gt; or &lt;code&gt;.bashrc&lt;/code&gt; files where the command is set up. Create one of them with &lt;code&gt;touch ~/.bash_profile&lt;/code&gt; or &lt;code&gt;touch ~/.bashrc&lt;/code&gt; and run the install script again. Then, run &lt;code&gt;. ~/.bash_profile&lt;/code&gt; or &lt;code&gt;. ~/.bashrc&lt;/code&gt; to pick up the &lt;code&gt;nvm&lt;/code&gt; command.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You have previously used &lt;code&gt;bash&lt;/code&gt;, but you have &lt;code&gt;zsh&lt;/code&gt; installed. You need to manually add &lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#manual-install"&gt;these lines&lt;/a&gt; to &lt;code&gt;~/.zshrc&lt;/code&gt; and run &lt;code&gt;. ~/.zshrc&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You might need to restart your terminal instance or run &lt;code&gt;. ~/.nvm/nvm.sh&lt;/code&gt;. Restarting your terminal/opening a new tab/window, or running the source command will load the command and the new configuration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the above didn't help, you might need to restart your terminal instance. Try opening a new tab/window in your terminal and retry.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the above doesn't fix the problem, you may try the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you use bash, it may be that your &lt;code&gt;.bash_profile&lt;/code&gt; (or &lt;code&gt;~/.profile&lt;/code&gt;) does not source your &lt;code&gt;~/.bashrc&lt;/code&gt; properly. You could fix this by adding &lt;code&gt;source ~/&amp;lt;your_profile_file&amp;gt;&lt;/code&gt; to it or following the next step below.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Try adding &lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/#profile_snippet"&gt;the snippet from the install section&lt;/a&gt;, that finds the correct nvm directory and loads nvm, to your usual profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For more information about this issue and possible workarounds, please &lt;a href="https://github.com/nvm-sh/nvm/issues/576"&gt;refer here&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; For Macs with the Apple Silicon chip, node started offering &lt;strong&gt;arm64&lt;/strong&gt; arch Darwin packages since v16.0.0 and experimental &lt;strong&gt;arm64&lt;/strong&gt; support when compiling from source since v14.17.0. If you are facing issues installing node using &lt;code&gt;nvm&lt;/code&gt;, you may want to update to one of those versions or later.&lt;/p&gt; 
&lt;h4&gt;Ansible&lt;/h4&gt; 
&lt;p&gt;You can use a task:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Install nvm
  ansible.builtin.shell: &amp;gt;
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verify Installation&lt;/h3&gt; 
&lt;p&gt;To verify that nvm has been installed, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;command -v nvm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;which should output &lt;code&gt;nvm&lt;/code&gt; if the installation was successful. Please note that &lt;code&gt;which nvm&lt;/code&gt; will not work, since &lt;code&gt;nvm&lt;/code&gt; is a sourced shell function, not an executable binary.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On Linux, after running the install script, if you get &lt;code&gt;nvm: command not found&lt;/code&gt; or see no feedback from your terminal after you type &lt;code&gt;command -v nvm&lt;/code&gt;, simply close your current terminal, open a new terminal, and try verifying again.&lt;/p&gt; 
&lt;h3&gt;Important Notes&lt;/h3&gt; 
&lt;p&gt;If you're running a system without prepackaged binary available, which means you're going to install node or io.js from its source code, you need to make sure your system has a C++ compiler. For OS X, Xcode will work, for Debian/Ubuntu based GNU/Linux, the &lt;code&gt;build-essential&lt;/code&gt; and &lt;code&gt;libssl-dev&lt;/code&gt; packages work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; also supports Windows in some cases. It should work through WSL (Windows Subsystem for Linux) depending on the version of WSL. It should also work with &lt;a href="https://gitforwindows.org/"&gt;GitBash&lt;/a&gt; (MSYS) or &lt;a href="https://cygwin.com"&gt;Cygwin&lt;/a&gt;. Otherwise, for Windows, a few alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coreybutler/nvm-windows"&gt;nvm-windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcelklehr/nodist"&gt;nodist&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasongin/nvs"&gt;nvs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code&gt;nvm&lt;/code&gt; does not support &lt;a href="https://fishshell.com"&gt;Fish&lt;/a&gt; either (see &lt;a href="https://github.com/nvm-sh/nvm/issues/303"&gt;#303&lt;/a&gt;). Alternatives exist, which are neither supported nor developed by us:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edc/bass"&gt;bass&lt;/a&gt; allows you to use utilities written for Bash in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brigand/fast-nvm-fish"&gt;fast-nvm-fish&lt;/a&gt; only works with version numbers (not aliases) but doesn't significantly slow your shell startup&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/derekstavis/plugin-nvm"&gt;plugin-nvm&lt;/a&gt; plugin for &lt;a href="https://github.com/oh-my-fish/oh-my-fish"&gt;Oh My Fish&lt;/a&gt;, which makes nvm and its completions available in fish shell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jorgebucaran/nvm.fish"&gt;nvm.fish&lt;/a&gt; - The Node.js version manager you'll adore, crafted just for Fish&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FabioAntunes/fish-nvm"&gt;fish-nvm&lt;/a&gt; - Wrapper around nvm for fish, delays sourcing nvm until it's actually used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; We still have some problems with FreeBSD, because there is no official pre-built binary for FreeBSD, and building from source may need &lt;a href="https://www.freshports.org/www/node/files/patch-deps_v8_src_base_platform_platform-posix.cc"&gt;patches&lt;/a&gt;; see the issue ticket:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nvm-sh/nvm/issues/900"&gt;[#900] [Bug] node on FreeBSD may need to be patched&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nodejs/node/issues/3716"&gt;nodejs/node#3716&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you do not have Xcode installed and you do not wish to download the ~4.3GB file, you can install the &lt;code&gt;Command Line Tools&lt;/code&gt;. You can check out this blog post on how to just that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/"&gt;How to Install Command Line Tools in OS X Mavericks &amp;amp; Yosemite (Without Xcode)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On OS X, if you have/had a "system" node installed and want to install modules globally, keep in mind that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;When using &lt;code&gt;nvm&lt;/code&gt; you do not need &lt;code&gt;sudo&lt;/code&gt; to globally install a module with &lt;code&gt;npm -g&lt;/code&gt;, so instead of doing &lt;code&gt;sudo npm install -g grunt&lt;/code&gt;, do instead &lt;code&gt;npm install -g grunt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If you have an &lt;code&gt;~/.npmrc&lt;/code&gt; file, make sure it does not contain any &lt;code&gt;prefix&lt;/code&gt; settings (which is not compatible with &lt;code&gt;nvm&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;You can (but should not?) keep your previous "system" node install, but &lt;code&gt;nvm&lt;/code&gt; will only be available to your user account (the one used to install nvm). This might cause version mismatches, as other users will be using &lt;code&gt;/usr/local/lib/node_modules/*&lt;/code&gt; VS your user account using &lt;code&gt;~/.nvm/versions/node/vX.X.X/lib/node_modules/*&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Homebrew installation is not supported. If you have issues with homebrew-installed &lt;code&gt;nvm&lt;/code&gt;, please &lt;code&gt;brew uninstall&lt;/code&gt; it, and install it using the instructions below, before filing an issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you're using &lt;code&gt;zsh&lt;/code&gt; you can easily install &lt;code&gt;nvm&lt;/code&gt; as a zsh plugin. Install &lt;a href="https://github.com/lukechilds/zsh-nvm"&gt;&lt;code&gt;zsh-nvm&lt;/code&gt;&lt;/a&gt; and run &lt;code&gt;nvm upgrade&lt;/code&gt; to upgrade (&lt;a href="https://github.com/lukechilds/zsh-nvm#auto-use"&gt;you can set&lt;/a&gt; &lt;code&gt;NVM_AUTO_USE=true&lt;/code&gt; to have it automatically detect and use &lt;code&gt;.nvmrc&lt;/code&gt; files).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Git versions before v1.7 may face a problem of cloning &lt;code&gt;nvm&lt;/code&gt; source from GitHub via https protocol, and there is also different behavior of git before v1.6, and git prior to &lt;a href="https://github.com/git/git/commit/5a7d5b683f869d3e3884a89775241afa515da9e7"&gt;v1.17.10&lt;/a&gt; can not clone tags, so the minimum required git version is v1.7.10. If you are interested in the problem we mentioned here, please refer to GitHub's &lt;a href="https://help.github.com/articles/https-cloning-errors/"&gt;HTTPS cloning errors&lt;/a&gt; article.&lt;/p&gt; 
&lt;h3&gt;Git Install&lt;/h3&gt; 
&lt;p&gt;If you have &lt;code&gt;git&lt;/code&gt; installed (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;clone this repo in the root of your user profile 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;cd ~/&lt;/code&gt; from anywhere then &lt;code&gt;git clone https://github.com/nvm-sh/nvm.git .nvm&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd ~/.nvm&lt;/code&gt; and check out the latest version with &lt;code&gt;git checkout v0.40.3&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;activate &lt;code&gt;nvm&lt;/code&gt; by sourcing it from your shell: &lt;code&gt;. ./nvm.sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] &amp;amp;&amp;amp; \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Install&lt;/h3&gt; 
&lt;p&gt;For a fully manual install, execute the following lines to first clone the &lt;code&gt;nvm&lt;/code&gt; repository into &lt;code&gt;$HOME/.nvm&lt;/code&gt;, and then load &lt;code&gt;nvm&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_DIR="$HOME/.nvm" &amp;amp;&amp;amp; (
  git clone https://github.com/nvm-sh/nvm.git "$NVM_DIR"
  cd "$NVM_DIR"
  git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now add these lines to your &lt;code&gt;~/.bashrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.zshrc&lt;/code&gt; file to have it automatically sourced upon login: (you may have to add to more than one of the above files)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh" # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] &amp;amp;&amp;amp; \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual Upgrade&lt;/h3&gt; 
&lt;p&gt;For manual upgrade with &lt;code&gt;git&lt;/code&gt; (requires git v1.7.10+):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;change to the &lt;code&gt;$NVM_DIR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;pull down the latest changes&lt;/li&gt; 
 &lt;li&gt;check out the latest version&lt;/li&gt; 
 &lt;li&gt;activate the new version&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;(
  cd "$NVM_DIR"
  git fetch --tags origin
  git checkout `git describe --abbrev=0 --tags --match "v[0-9]*" $(git rev-list --tags --max-count=1)`
) &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To download, compile, and install the latest release of node, do this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install node # "node" is an alias for the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install a specific version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install 14.7.0 # or 16.3.0, 12.22.1, etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To set an alias:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm alias my_alias v14.4.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Make sure that your alias does not contain any spaces or slashes.&lt;/p&gt; 
&lt;p&gt;The first version installed becomes the default. New shells will start with the default version of node (e.g., &lt;code&gt;nvm alias default&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;You can list available versions using &lt;code&gt;ls-remote&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then in any new shell just use the installed version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm use node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can just run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm run node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, you can run any arbitrary command in a subshell with the desired version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm exec 4.2 node --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also get the path to the executable to where it was installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm which 12.22
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In place of a version pointer like "14.7" or "16.3" or "12.22.1", you can use the following special default aliases with &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm which&lt;/code&gt;, etc:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;node&lt;/code&gt;: this installs the latest version of &lt;a href="https://nodejs.org/en/"&gt;&lt;code&gt;node&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;iojs&lt;/code&gt;: this installs the latest version of &lt;a href="https://iojs.org/en/"&gt;&lt;code&gt;io.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stable&lt;/code&gt;: this alias is deprecated, and only truly applies to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.12&lt;/code&gt; and earlier. Currently, this is an alias for &lt;code&gt;node&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;unstable&lt;/code&gt;: this alias points to &lt;code&gt;node&lt;/code&gt; &lt;code&gt;v0.11&lt;/code&gt; - the last "unstable" node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Long-term Support&lt;/h3&gt; 
&lt;p&gt;Node has a &lt;a href="https://github.com/nodejs/Release#release-schedule"&gt;schedule&lt;/a&gt; for long-term support (LTS) You can reference LTS versions in aliases and &lt;code&gt;.nvmrc&lt;/code&gt; files with the notation &lt;code&gt;lts/*&lt;/code&gt; for the latest LTS, and &lt;code&gt;lts/argon&lt;/code&gt; for LTS releases from the "argon" line, for example. In addition, the following commands support LTS arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;nvm install --lts&lt;/code&gt; / &lt;code&gt;nvm install --lts=argon&lt;/code&gt; / &lt;code&gt;nvm install 'lts/*'&lt;/code&gt; / &lt;code&gt;nvm install lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm uninstall --lts&lt;/code&gt; / &lt;code&gt;nvm uninstall --lts=argon&lt;/code&gt; / &lt;code&gt;nvm uninstall 'lts/*'&lt;/code&gt; / &lt;code&gt;nvm uninstall lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm use --lts&lt;/code&gt; / &lt;code&gt;nvm use --lts=argon&lt;/code&gt; / &lt;code&gt;nvm use 'lts/*'&lt;/code&gt; / &lt;code&gt;nvm use lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm exec --lts&lt;/code&gt; / &lt;code&gt;nvm exec --lts=argon&lt;/code&gt; / &lt;code&gt;nvm exec 'lts/*'&lt;/code&gt; / &lt;code&gt;nvm exec lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm run --lts&lt;/code&gt; / &lt;code&gt;nvm run --lts=argon&lt;/code&gt; / &lt;code&gt;nvm run 'lts/*'&lt;/code&gt; / &lt;code&gt;nvm run lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm ls-remote --lts&lt;/code&gt; / &lt;code&gt;nvm ls-remote --lts=argon&lt;/code&gt; &lt;code&gt;nvm ls-remote 'lts/*'&lt;/code&gt; / &lt;code&gt;nvm ls-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nvm version-remote --lts&lt;/code&gt; / &lt;code&gt;nvm version-remote --lts=argon&lt;/code&gt; / &lt;code&gt;nvm version-remote 'lts/*'&lt;/code&gt; / &lt;code&gt;nvm version-remote lts/argon&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Any time your local copy of &lt;code&gt;nvm&lt;/code&gt; connects to &lt;a href="https://nodejs.org"&gt;https://nodejs.org&lt;/a&gt;, it will re-create the appropriate local aliases for all available LTS lines. These aliases (stored under &lt;code&gt;$NVM_DIR/alias/lts&lt;/code&gt;), are managed by &lt;code&gt;nvm&lt;/code&gt;, and you should not modify, remove, or create these files - expect your changes to be undone, and expect meddling with these files to cause bugs that will likely not be supported.&lt;/p&gt; 
&lt;p&gt;To get the latest LTS version of node and migrate your existing installed packages, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install --reinstall-packages-from=current 'lts/*'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Migrating Global Packages While Installing&lt;/h3&gt; 
&lt;p&gt;If you want to install a new version of Node.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install --reinstall-packages-from=node node
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will first use "nvm version node" to identify the current version you're migrating packages from. Then it resolves the new version to install from the remote server and installs it. Lastly, it runs "nvm reinstall-packages" to reinstall the npm packages from your prior version of Node to the new one.&lt;/p&gt; 
&lt;p&gt;You can also install and migrate npm packages from specific versions of Node like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install --reinstall-packages-from=5 6
nvm install --reinstall-packages-from=iojs v4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that reinstalling packages &lt;em&gt;explicitly does not update the npm version&lt;/em&gt; ‚Äî this is to ensure that npm isn't accidentally upgraded to a broken version for the new node version.&lt;/p&gt; 
&lt;p&gt;To update npm at the same time add the &lt;code&gt;--latest-npm&lt;/code&gt; flag, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install --reinstall-packages-from=default --latest-npm 'lts/*'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or, you can at any time run the following command to get the latest supported npm version on the current node version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install-latest-npm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you've already gotten an error to the effect of "npm does not support Node.js", you'll need to (1) revert to a previous node version (&lt;code&gt;nvm ls&lt;/code&gt; &amp;amp; &lt;code&gt;nvm use &amp;lt;your latest _working_ version from the ls&amp;gt;&lt;/code&gt;), (2) delete the newly created node version (&lt;code&gt;nvm uninstall &amp;lt;your _broken_ version of node from the ls&amp;gt;&lt;/code&gt;), then (3) rerun your &lt;code&gt;nvm install&lt;/code&gt; with the &lt;code&gt;--latest-npm&lt;/code&gt; flag.&lt;/p&gt; 
&lt;h3&gt;Default Global Packages From File While Installing&lt;/h3&gt; 
&lt;p&gt;If you have a list of default packages you want installed every time you install a new version, we support that too -- just add the package names, one per line, to the file &lt;code&gt;$NVM_DIR/default-packages&lt;/code&gt;. You can add anything npm would accept as a package argument on the command line.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# $NVM_DIR/default-packages

rimraf
object-inspect@1.0.2
stevemao/left-pad
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;io.js&lt;/h3&gt; 
&lt;p&gt;If you want to install &lt;a href="https://github.com/iojs/io.js/"&gt;io.js&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to install a new version of io.js and migrate npm packages from a previous version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install --reinstall-packages-from=iojs iojs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The same guidelines mentioned for migrating npm packages in node are applicable to io.js.&lt;/p&gt; 
&lt;h3&gt;System Version of Node&lt;/h3&gt; 
&lt;p&gt;If you want to use the system-installed version of node, you can use the special default alias "system":&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm use system
nvm run system --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Listing Versions&lt;/h3&gt; 
&lt;p&gt;If you want to see what versions are installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see what versions are available to install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm ls-remote
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setting Custom Colors&lt;/h3&gt; 
&lt;p&gt;You can set five colors that will be used to display version and alias information. These colors replace the default colors. Initial colors are: g b y r e&lt;/p&gt; 
&lt;p&gt;Color codes:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;r/R = red / bold red

g/G = green / bold green

b/B = blue / bold blue

c/C = cyan / bold cyan

m/M = magenta / bold magenta

y/Y = yellow / bold yellow

k/K = black / bold black

e/W = light grey / white
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm set-colors rgBcm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Persisting custom colors&lt;/h4&gt; 
&lt;p&gt;If you want the custom colors to persist after terminating the shell, export the &lt;code&gt;NVM_COLORS&lt;/code&gt; variable in your shell profile. For example, if you want to use cyan, magenta, green, bold red and bold yellow, add the following line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_COLORS='cmgRY'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Suppressing colorized output&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;nvm help (or -h or --help)&lt;/code&gt;, &lt;code&gt;nvm ls&lt;/code&gt;, &lt;code&gt;nvm ls-remote&lt;/code&gt; and &lt;code&gt;nvm alias&lt;/code&gt; usually produce colorized output. You can disable colors with the &lt;code&gt;--no-colors&lt;/code&gt; option (or by setting the environment variable &lt;code&gt;TERM=dumb&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm ls --no-colors
nvm help --no-colors
TERM=dumb nvm ls
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Restoring PATH&lt;/h3&gt; 
&lt;p&gt;To restore your PATH, you can deactivate it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm deactivate
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Set default node version&lt;/h3&gt; 
&lt;p&gt;To set a default Node version to be used in any new shell, use the alias 'default':&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm alias default node # this refers to the latest installed version of node
nvm alias default 18 # this refers to the latest installed v18.x version of node
nvm alias default 18.12  # this refers to the latest installed v18.12.x version of node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Use a mirror of node binaries&lt;/h3&gt; 
&lt;p&gt;To use a mirror of the node binaries, set &lt;code&gt;$NVM_NODEJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist
nvm install node

NVM_NODEJS_ORG_MIRROR=https://nodejs.org/dist nvm install 4.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use a mirror of the io.js binaries, set &lt;code&gt;$NVM_IOJS_ORG_MIRROR&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist
nvm install iojs-v1.0.3

NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; will not, by default, create a "current" symlink. Set &lt;code&gt;$NVM_SYMLINK_CURRENT&lt;/code&gt; to "true" to enable this behavior, which is sometimes useful for IDEs. Note that using &lt;code&gt;nvm&lt;/code&gt; in multiple shell tabs with this environment variable enabled can cause race conditions.&lt;/p&gt; 
&lt;h4&gt;Pass Authorization header to mirror&lt;/h4&gt; 
&lt;p&gt;To pass an Authorization header through to the mirror url, set &lt;code&gt;$NVM_AUTH_HEADER&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;NVM_AUTH_HEADER="Bearer secret-token" nvm install node
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;.nvmrc&lt;/h3&gt; 
&lt;p&gt;You can create a &lt;code&gt;.nvmrc&lt;/code&gt; file containing a node version number (or any other string that &lt;code&gt;nvm&lt;/code&gt; understands; see &lt;code&gt;nvm --help&lt;/code&gt; for details) in the project root directory (or any parent directory). Afterwards, &lt;code&gt;nvm use&lt;/code&gt;, &lt;code&gt;nvm install&lt;/code&gt;, &lt;code&gt;nvm exec&lt;/code&gt;, &lt;code&gt;nvm run&lt;/code&gt;, and &lt;code&gt;nvm which&lt;/code&gt; will use the version specified in the &lt;code&gt;.nvmrc&lt;/code&gt; file if no version is supplied on the command line.&lt;/p&gt; 
&lt;p&gt;For example, to make nvm default to the latest 5.9 release, the latest LTS version, or the latest node version for the current directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ echo "5.9" &amp;gt; .nvmrc

$ echo "lts/*" &amp;gt; .nvmrc # to default to the latest LTS version

$ echo "node" &amp;gt; .nvmrc # to default to the latest version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[NB these examples assume a POSIX-compliant shell version of &lt;code&gt;echo&lt;/code&gt;. If you use a Windows &lt;code&gt;cmd&lt;/code&gt; development environment, eg the &lt;code&gt;.nvmrc&lt;/code&gt; file is used to configure a remote Linux deployment, then keep in mind the &lt;code&gt;"&lt;/code&gt;s will be copied leading to an invalid file. Remove them.]&lt;/p&gt; 
&lt;p&gt;Then when you run nvm use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ nvm use
Found '/path/to/project/.nvmrc' with version &amp;lt;5.9&amp;gt;
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running nvm install will also switch over to the correct version, but if the correct node version isn't already installed, it will install it for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ nvm install
Found '/path/to/project/.nvmrc' with version &amp;lt;5.9&amp;gt;
Downloading and installing node v5.9.1...
Downloading https://nodejs.org/dist/v5.9.1/node-v5.9.1-linux-x64.tar.xz...
#################################################################################### 100.0%
Computing checksum with sha256sum
Checksums matched!
Now using node v5.9.1 (npm v3.7.3)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;nvm use&lt;/code&gt; et. al. will traverse directory structure upwards from the current directory looking for the &lt;code&gt;.nvmrc&lt;/code&gt; file. In other words, running &lt;code&gt;nvm use&lt;/code&gt; et. al. in any subdirectory of a directory with an &lt;code&gt;.nvmrc&lt;/code&gt; will result in that &lt;code&gt;.nvmrc&lt;/code&gt; being utilized.&lt;/p&gt; 
&lt;p&gt;The contents of a &lt;code&gt;.nvmrc&lt;/code&gt; file &lt;strong&gt;must&lt;/strong&gt; contain precisely one &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; (as described by &lt;code&gt;nvm --help&lt;/code&gt;) followed by a newline. &lt;code&gt;.nvmrc&lt;/code&gt; files may also have comments. The comment delimiter is &lt;code&gt;#&lt;/code&gt;, and it and any text after it, as well as blank lines, and leading and trailing white space, will be ignored when parsing.&lt;/p&gt; 
&lt;p&gt;Key/value pairs using &lt;code&gt;=&lt;/code&gt; are also allowed and ignored, but are reserved for future use, and may cause validation errors in the future.&lt;/p&gt; 
&lt;p&gt;Run &lt;a href="https://npmjs.com/nvmrc"&gt;&lt;code&gt;npx nvmrc&lt;/code&gt;&lt;/a&gt; to validate an &lt;code&gt;.nvmrc&lt;/code&gt; file. If that tool‚Äôs results do not agree with nvm, one or the other has a bug - please file an issue.&lt;/p&gt; 
&lt;h3&gt;Deeper Shell Integration&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://github.com/iamogbz/nvshim"&gt;&lt;code&gt;nvshim&lt;/code&gt;&lt;/a&gt; to shim the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;npm&lt;/code&gt;, and &lt;code&gt;npx&lt;/code&gt; bins to automatically use the &lt;code&gt;nvm&lt;/code&gt; config in the current directory. &lt;code&gt;nvshim&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. Please &lt;a href="https://github.com/iamogbz/nvshim/issues/new"&gt;report issues to the &lt;code&gt;nvshim&lt;/code&gt; team&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you prefer a lighter-weight solution, the recipes below have been contributed by &lt;code&gt;nvm&lt;/code&gt; users. They are &lt;strong&gt;not&lt;/strong&gt; supported by the &lt;code&gt;nvm&lt;/code&gt; maintainers. We are, however, accepting pull requests for more examples.&lt;/p&gt; 
&lt;h4&gt;Calling &lt;code&gt;nvm use&lt;/code&gt; automatically in a directory with a &lt;code&gt;.nvmrc&lt;/code&gt; file&lt;/h4&gt; 
&lt;p&gt;In your profile (&lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.zshrc&lt;/code&gt;, &lt;code&gt;~/.profile&lt;/code&gt;, or &lt;code&gt;~/.bashrc&lt;/code&gt;), add the following to &lt;code&gt;nvm use&lt;/code&gt; whenever you enter a new directory:&lt;/p&gt; 
&lt;h5&gt;bash&lt;/h5&gt; 
&lt;p&gt;Put the following at the end of your &lt;code&gt;$HOME/.bashrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cdnvm() {
    command cd "$@" || return $?
    nvm_path="$(nvm_find_up .nvmrc | command tr -d '\n')"

    # If there are no .nvmrc file, use the default nvm version
    if [[ ! $nvm_path = *[^[:space:]]* ]]; then

        declare default_version
        default_version="$(nvm version default)"

        # If there is no default version, set it to `node`
        # This will use the latest version on your machine
        if [ $default_version = 'N/A' ]; then
            nvm alias default node
            default_version=$(nvm version default)
        fi

        # If the current version is not the default version, set it to use the default version
        if [ "$(nvm current)" != "${default_version}" ]; then
            nvm use default
        fi
    elif [[ -s "${nvm_path}/.nvmrc" &amp;amp;&amp;amp; -r "${nvm_path}/.nvmrc" ]]; then
        declare nvm_version
        nvm_version=$(&amp;lt;"${nvm_path}"/.nvmrc)

        declare locally_resolved_nvm_version
        # `nvm ls` will check all locally-available versions
        # If there are multiple matching versions, take the latest one
        # Remove the `-&amp;gt;` and `*` characters and spaces
        # `locally_resolved_nvm_version` will be `N/A` if no local versions are found
        locally_resolved_nvm_version=$(nvm ls --no-colors "${nvm_version}" | command tail -1 | command tr -d '\-&amp;gt;*' | command tr -d '[:space:]')

        # If it is not already installed, install it
        # `nvm install` will implicitly use the newly-installed version
        if [ "${locally_resolved_nvm_version}" = 'N/A' ]; then
            nvm install "${nvm_version}";
        elif [ "$(nvm current)" != "${locally_resolved_nvm_version}" ]; then
            nvm use "${nvm_version}";
        fi
    fi
}

alias cd='cdnvm'
cdnvm "$PWD" || exit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This alias would search 'up' from your current directory in order to detect a &lt;code&gt;.nvmrc&lt;/code&gt; file. If it finds it, it will switch to that version; if not, it will use the default version.&lt;/p&gt; 
&lt;h5&gt;zsh&lt;/h5&gt; 
&lt;p&gt;This shell function will install (if needed) and &lt;code&gt;nvm use&lt;/code&gt; the specified Node version when an &lt;code&gt;.nvmrc&lt;/code&gt; is found, and &lt;code&gt;nvm use default&lt;/code&gt; otherwise.&lt;/p&gt; 
&lt;p&gt;Put this into your &lt;code&gt;$HOME/.zshrc&lt;/code&gt; to call &lt;code&gt;nvm use&lt;/code&gt; automatically whenever you enter a directory that contains an &lt;code&gt;.nvmrc&lt;/code&gt; file with a string telling nvm which node to &lt;code&gt;use&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-zsh"&gt;# place this after nvm initialization!
autoload -U add-zsh-hook

load-nvmrc() {
  local nvmrc_path
  nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version
    nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$(nvm version)" ]; then
      nvm use
    fi
  elif [ -n "$(PWD=$OLDPWD nvm_find_nvmrc)" ] &amp;amp;&amp;amp; [ "$(nvm version)" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}

add-zsh-hook chpwd load-nvmrc
load-nvmrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After saving the file, run &lt;code&gt;source ~/.zshrc&lt;/code&gt; to reload the configuration with the latest changes made.&lt;/p&gt; 
&lt;h5&gt;fish&lt;/h5&gt; 
&lt;p&gt;This requires that you have &lt;a href="https://github.com/edc/bass"&gt;bass&lt;/a&gt; installed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-fish"&gt;# ~/.config/fish/functions/nvm.fish
function nvm
  bass source ~/.nvm/nvm.sh --no-use ';' nvm $argv
end

# ~/.config/fish/functions/nvm_find_nvmrc.fish
function nvm_find_nvmrc
  bass source ~/.nvm/nvm.sh --no-use ';' nvm_find_nvmrc
end

# ~/.config/fish/functions/load_nvm.fish
function load_nvm --on-variable="PWD"
  set -l default_node_version (nvm version default)
  set -l node_version (nvm version)
  set -l nvmrc_path (nvm_find_nvmrc)
  if test -n "$nvmrc_path"
    set -l nvmrc_node_version (nvm version (cat $nvmrc_path))
    if test "$nvmrc_node_version" = "N/A"
      nvm install (cat $nvmrc_path)
    else if test "$nvmrc_node_version" != "$node_version"
      nvm use $nvmrc_node_version
    end
  else if test "$node_version" != "$default_node_version"
    echo "Reverting to default Node version"
    nvm use default
  end
end

# ~/.config/fish/config.fish
# You must call it on initialization or listening to directory switching won't work
load_nvm &amp;gt; /dev/stderr
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running Tests&lt;/h2&gt; 
&lt;p&gt;Tests are written in &lt;a href="https://git.sdf.org/tlevine/urchin"&gt;Urchin&lt;/a&gt;. Install Urchin (and other dependencies) like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are slow tests and fast tests. The slow tests do things like install node and check that the right versions are used. The fast tests fake this to test things like aliases and uninstalling. From the root of the nvm git repository, run the fast tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/fast
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the slow tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run test/slow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run all of the tests like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Nota bene: Avoid running nvm while the tests are running.&lt;/p&gt; 
&lt;h2&gt;Environment variables&lt;/h2&gt; 
&lt;p&gt;nvm exposes the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;NVM_DIR&lt;/code&gt; - nvm's installation directory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_BIN&lt;/code&gt; - where node, npm, and global packages for the active version of node are installed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_INC&lt;/code&gt; - node's include file directory (useful for building C/C++ addons for node).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_CD_FLAGS&lt;/code&gt; - used to maintain compatibility with zsh.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NVM_RC_VERSION&lt;/code&gt; - version from .nvmrc file if being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Additionally, nvm modifies &lt;code&gt;PATH&lt;/code&gt;, and, if present, &lt;code&gt;MANPATH&lt;/code&gt; and &lt;code&gt;NODE_PATH&lt;/code&gt; when changing versions.&lt;/p&gt; 
&lt;h2&gt;Bash Completion&lt;/h2&gt; 
&lt;p&gt;To activate, you need to source &lt;code&gt;bash_completion&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Put the above sourcing line just below the sourcing line for nvm in your profile (&lt;code&gt;.bashrc&lt;/code&gt;, &lt;code&gt;.bash_profile&lt;/code&gt;).&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;nvm:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;alias               deactivate          install             list-remote         reinstall-packages  uninstall           version
cache               exec                install-latest-npm  ls                  run                 unload              version-remote
current             help                list                ls-remote           unalias             use                 which
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm alias:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;default      iojs         lts/*        lts/argon    lts/boron    lts/carbon   lts/dubnium  lts/erbium   node         stable       unstable
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm alias my_alias&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm use:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm use&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;nvm uninstall:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$ nvm uninstall&lt;/code&gt; &lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;my_alias        default        v10.22.0       v12.18.3      v14.8.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Compatibility Issues&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;nvm&lt;/code&gt; will encounter some issues if you have some non-default settings set. (see &lt;a href="https://github.com/nvm-sh/nvm/issues/606"&gt;#606&lt;/a&gt;) The following are known to cause issues:&lt;/p&gt; 
&lt;p&gt;Inside &lt;code&gt;~/.npmrc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;prefix='some/path'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Environment Variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$NPM_CONFIG_PREFIX
$PREFIX
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Shell settings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;set -e
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installing nvm on Alpine Linux&lt;/h2&gt; 
&lt;p&gt;In order to provide the best performance (and other optimizations), nvm will download and install pre-compiled binaries for Node (and npm) when you run &lt;code&gt;nvm install X&lt;/code&gt;. The Node project compiles, tests and hosts/provides these pre-compiled binaries which are built for mainstream/traditional Linux distributions (such as Debian, Ubuntu, CentOS, RedHat et al).&lt;/p&gt; 
&lt;p&gt;Alpine Linux, unlike mainstream/traditional Linux distributions, is based on &lt;a href="https://www.busybox.net/"&gt;BusyBox&lt;/a&gt;, a very compact (~5MB) Linux distribution. BusyBox (and thus Alpine Linux) uses a different C/C++ stack to most mainstream/traditional Linux distributions - &lt;a href="https://www.musl-libc.org/"&gt;musl&lt;/a&gt;. This makes binary programs built for such mainstream/traditional incompatible with Alpine Linux, thus we cannot simply &lt;code&gt;nvm install X&lt;/code&gt; on Alpine Linux and expect the downloaded binary to run correctly - you'll likely see "...does not exist" errors if you try that.&lt;/p&gt; 
&lt;p&gt;There is a &lt;code&gt;-s&lt;/code&gt; flag for &lt;code&gt;nvm install&lt;/code&gt; which requests nvm download Node source and compile it locally.&lt;/p&gt; 
&lt;p&gt;If installing nvm on Alpine Linux &lt;em&gt;is&lt;/em&gt; still what you want or need to do, you should be able to achieve this by running the following from you Alpine Linux shell, depending on which version you are using:&lt;/p&gt; 
&lt;h3&gt;Alpine Linux 3.13+&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python3 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Alpine Linux 3.5 - 3.12&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;apk add -U curl bash ca-certificates openssl ncurses coreutils python2 make gcc g++ libgcc linux-headers grep util-linux binutils findutils
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;Note: Alpine 3.5 can only install NodeJS versions up to v6.9.5, Alpine 3.6 can only install versions up to v6.10.3, Alpine 3.7 installs versions up to v8.9.3, Alpine 3.8 installs versions up to v8.14.0, Alpine 3.9 installs versions up to v10.19.0, Alpine 3.10 installs versions up to v10.24.1, Alpine 3.11 installs versions up to v12.22.6, Alpine 3.12 installs versions up to v12.22.12, Alpine 3.13 &amp;amp; 3.14 install versions up to v14.20.0, Alpine 3.15 &amp;amp; 3.16 install versions up to v16.16.0 (&lt;strong&gt;These are all versions on the main branch&lt;/strong&gt;). Alpine 3.5 - 3.12 required the package &lt;code&gt;python2&lt;/code&gt; to build NodeJS, as they are older versions to build. Alpine 3.13+ requires &lt;code&gt;python3&lt;/code&gt; to successfully build newer NodeJS versions, but you can use &lt;code&gt;python2&lt;/code&gt; with Alpine 3.13+ if you need to build versions of node supported in Alpine 3.5 - 3.15, you just need to specify what version of NodeJS you need to install in the package install script.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The Node project has some desire but no concrete plans (due to the overheads of building, testing and support) to offer Alpine-compatible binaries.&lt;/p&gt; 
&lt;p&gt;As a potential alternative, @mhart (a Node contributor) has some &lt;a href="https://github.com/mhart/alpine-node"&gt;Docker images for Alpine Linux with Node and optionally, npm, pre-installed&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a id="removal"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Uninstalling / Removal&lt;/h2&gt; 
&lt;h3&gt;Manual Uninstall&lt;/h3&gt; 
&lt;p&gt;To remove &lt;code&gt;nvm&lt;/code&gt; manually, execute the following:&lt;/p&gt; 
&lt;p&gt;First, use &lt;code&gt;nvm unload&lt;/code&gt; to remove the nvm command from your terminal session and delete the installation directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ nvm_dir="${NVM_DIR:-~/.nvm}"
$ nvm unload
$ rm -rf "$nvm_dir"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Edit &lt;code&gt;~/.bashrc&lt;/code&gt; (or other shell resource config) and remove the lines below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] &amp;amp;&amp;amp; \. "$NVM_DIR/nvm.sh" # This loads nvm
[[ -r $NVM_DIR/bash_completion ]] &amp;amp;&amp;amp; \. $NVM_DIR/bash_completion
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker For Development Environment&lt;/h2&gt; 
&lt;p&gt;To make the development and testing work easier, we have a Dockerfile for development usage, which is based on Ubuntu 18.04 base image, prepared with essential and useful tools for &lt;code&gt;nvm&lt;/code&gt; development, to build the docker image of the environment, run the docker command at the root of &lt;code&gt;nvm&lt;/code&gt; repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ docker build -t nvm-dev .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will package your current nvm repository with our pre-defined development environment into a docker image named &lt;code&gt;nvm-dev&lt;/code&gt;, once it's built with success, validate your image via &lt;code&gt;docker images&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ docker images

REPOSITORY         TAG                 IMAGE ID            CREATED             SIZE
nvm-dev            latest              9ca4c57a97d8        7 days ago          650 MB
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you got no error message, now you can easily involve in:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ docker run -h nvm-dev -it nvm-dev

nvm@nvm-dev:~/.nvm$
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note that it'll take about 8 minutes to build the image and the image size would be about 650MB, so it's not suitable for production usage.&lt;/p&gt; 
&lt;p&gt;For more information and documentation about docker, please refer to its official website:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/"&gt;https://www.docker.com/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/"&gt;https://docs.docker.com/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Problems&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If you try to install a node version and the installation fails, be sure to run &lt;code&gt;nvm cache clear&lt;/code&gt; to delete cached node downloads, or you might get an error like the following:&lt;/p&gt; &lt;p&gt;curl: (33) HTTP server doesn't seem to support byte ranges. Cannot resume.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Where's my &lt;code&gt;sudo node&lt;/code&gt;? Check out &lt;a href="https://github.com/nvm-sh/nvm/issues/43"&gt;#43&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After the v0.8.6 release of node, nvm tries to install from binary packages. But in some systems, the official binary packages don't work due to incompatibility of shared libs. In such cases, use &lt;code&gt;-s&lt;/code&gt; option to force install from source:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nvm install -s 0.8.6
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If setting the &lt;code&gt;default&lt;/code&gt; alias does not establish the node version in new shells (i.e. &lt;code&gt;nvm current&lt;/code&gt; yields &lt;code&gt;system&lt;/code&gt;), ensure that the system's node &lt;code&gt;PATH&lt;/code&gt; is set before the &lt;code&gt;nvm.sh&lt;/code&gt; source line in your shell profile (see &lt;a href="https://github.com/nvm-sh/nvm/issues/658"&gt;#658&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;macOS Troubleshooting&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;nvm node version not found in vim shell&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If you set node version to a version other than your system node version &lt;code&gt;nvm use 6.2.1&lt;/code&gt; and open vim and run &lt;code&gt;:!node -v&lt;/code&gt; you should see &lt;code&gt;v6.2.1&lt;/code&gt; if you see your system version &lt;code&gt;v0.12.7&lt;/code&gt;. You need to run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo chmod ugo-x /usr/libexec/path_helper
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More on this issue in &lt;a href="https://github.com/dotphiles/dotzsh#mac-os-x"&gt;dotphiles/dotzsh&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;nvm is not compatible with the npm config "prefix" option&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Some solutions for this issue can be found &lt;a href="https://github.com/nvm-sh/nvm/issues/1245"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;There is one more edge case causing this issue, and that's a &lt;strong&gt;mismatch between the &lt;code&gt;$HOME&lt;/code&gt; path and the user's home directory's actual name&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;You have to make sure that the user directory name in &lt;code&gt;$HOME&lt;/code&gt; and the user directory name you'd see from running &lt;code&gt;ls /Users/&lt;/code&gt; &lt;strong&gt;are capitalized the same way&lt;/strong&gt; (&lt;a href="https://github.com/nvm-sh/nvm/issues/2261"&gt;See this issue&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;To change the user directory and/or account name follow the instructions &lt;a href="https://support.apple.com/en-us/HT201548"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Homebrew makes zsh directories unsecure&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;zsh compinit: insecure directories, run compaudit for list.
Ignore insecure directories and continue [y] or abort compinit [n]? y
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Homebrew causes insecure directories like &lt;code&gt;/usr/local/share/zsh/site-functions&lt;/code&gt; and &lt;code&gt;/usr/local/share/zsh&lt;/code&gt;. This is &lt;strong&gt;not&lt;/strong&gt; an &lt;code&gt;nvm&lt;/code&gt; problem - it is a homebrew problem. Refer &lt;a href="https://github.com/zsh-users/zsh-completions/issues/680"&gt;here&lt;/a&gt; for some solutions related to the issue.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Macs with Apple Silicon chips&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Experimental support for the Apple Silicon chip architecture was added in node.js v15.3 and full support was added in v16.0. Because of this, if you try to install older versions of node as usual, you will probably experience either compilation errors when installing node or out-of-memory errors while running your code.&lt;/p&gt; 
&lt;p&gt;So, if you want to run a version prior to v16.0 on an Apple Silicon Mac, it may be best to compile node targeting the &lt;code&gt;x86_64&lt;/code&gt; Intel architecture so that Rosetta 2 can translate the &lt;code&gt;x86_64&lt;/code&gt; processor instructions to ARM-based Apple Silicon instructions. Here's what you will need to do:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install Rosetta, if you haven't already done so&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;$ softwareupdate --install-rosetta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You might wonder, "how will my Apple Silicon Mac know to use Rosetta for a version of node compiled for an Intel chip?". If an executable contains only Intel instructions, macOS will automatically use Rosetta to translate the instructions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open a shell that's running using Rosetta&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;$ arch -x86_64 zsh
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: This same thing can also be accomplished by finding the Terminal or iTerm App in Finder, right clicking, selecting "Get Info", and then checking the box labeled "Open using Rosetta".&lt;/p&gt; &lt;p&gt;Note: This terminal session is now running in &lt;code&gt;zsh&lt;/code&gt;. If &lt;code&gt;zsh&lt;/code&gt; is not the shell you typically use, &lt;code&gt;nvm&lt;/code&gt; may not be &lt;code&gt;source&lt;/code&gt;'d automatically like it probably is for your usual shell through your dotfiles. If that's the case, make sure to source &lt;code&gt;nvm&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;$ source "${NVM_DIR}/nvm.sh"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install whatever older version of node you are interested in. Let's use 12.22.1 as an example. This will fetch the node source code and compile it, which will take several minutes.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;$ nvm install v12.22.1 --shared-zlib
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: You're probably curious why &lt;code&gt;--shared-zlib&lt;/code&gt; is included. There's a bug in recent versions of Apple's system &lt;code&gt;clang&lt;/code&gt; compiler. If one of these broken versions is installed on your system, the above step will likely still succeed even if you didn't include the &lt;code&gt;--shared-zlib&lt;/code&gt; flag. However, later, when you attempt to &lt;code&gt;npm install&lt;/code&gt; something using your old version of node.js, you will see &lt;code&gt;incorrect data check&lt;/code&gt; errors. If you want to avoid the possible hassle of dealing with this, include that flag. For more details, see &lt;a href="https://github.com/nodejs/node/issues/39313"&gt;this issue&lt;/a&gt; and &lt;a href="https://github.com/nodejs/node/issues/39313#issuecomment-90.40.376"&gt;this comment&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Exit back to your native shell.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;$ exit
$ arch
arm64
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note: If you selected the box labeled "Open using Rosetta" rather than running the CLI command in the second step, you will see &lt;code&gt;i386&lt;/code&gt; here. Unless you have another reason to have that box selected, you can deselect it now.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Check to make sure the architecture is correct. &lt;code&gt;x64&lt;/code&gt; is the abbreviation for &lt;code&gt;x86_64&lt;/code&gt;, which is what you want to see.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;$ node -p process.arch
x64
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Now you should be able to use node as usual.&lt;/p&gt; 
&lt;h2&gt;WSL Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you've encountered this error on WSL-2:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash
% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                Dload  Upload  Total   Spent    Left  Speed
0     0    0     0    0     0      0      0 --:--:--  0:00:09 --:--:--     0curl: (6) Could not resolve host: raw.githubusercontent.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It may be due to your antivirus, VPN, or other reasons.&lt;/p&gt; 
&lt;p&gt;Where you can &lt;code&gt;ping 8.8.8.8&lt;/code&gt; while you can't &lt;code&gt;ping google.com&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This could simply be solved by running this in your root directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo rm /etc/resolv.conf
sudo bash -c 'echo "nameserver 8.8.8.8" &amp;gt; /etc/resolv.conf'
sudo bash -c 'echo "[network]" &amp;gt; /etc/wsl.conf'
sudo bash -c 'echo "generateResolvConf = false" &amp;gt;&amp;gt; /etc/wsl.conf'
sudo chattr +i /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This deletes your &lt;code&gt;resolv.conf&lt;/code&gt; file that is automatically generated when you run WSL, creates a new file and puts &lt;code&gt;nameserver 8.8.8.8&lt;/code&gt;, then creates a &lt;code&gt;wsl.conf&lt;/code&gt; file and adds &lt;code&gt;[network]&lt;/code&gt; and &lt;code&gt;generateResolveConf = false&lt;/code&gt; to prevent auto-generation of that file.&lt;/p&gt; 
&lt;p&gt;You can check the contents of the file by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;cat /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;Currently, the sole maintainer is &lt;a href="https://github.com/ljharb"&gt;@ljharb&lt;/a&gt; - more maintainers are quite welcome, and we hope to add folks to the team over time. &lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/GOVERNANCE.md"&gt;Governance&lt;/a&gt; will be re-evaluated as the project evolves.&lt;/p&gt; 
&lt;h2&gt;Project Support&lt;/h2&gt; 
&lt;p&gt;Only the latest version (v0.40.3 at this time) is supported.&lt;/p&gt; 
&lt;h2&gt;Enterprise Support&lt;/h2&gt; 
&lt;p&gt;If you are unable to update to the latest version of &lt;code&gt;nvm&lt;/code&gt;, our &lt;a href="https://openjsf.org/ecosystem-sustainability-program"&gt;partners&lt;/a&gt; provide commercial security fixes for all unsupported versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.herodevs.com/support?utm_source=OpenJS&amp;amp;utm_medium=Link&amp;amp;utm_campaign=nvm_openjs"&gt;HeroDevs Never-Ending Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nvm-sh/nvm/master/LICENSE.md"&gt;LICENSE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Copyright notice&lt;/h2&gt; 
&lt;p&gt;Copyright &lt;a href="https://openjsf.org"&gt;OpenJS Foundation&lt;/a&gt; and &lt;code&gt;nvm&lt;/code&gt; contributors. All rights reserved. The &lt;a href="https://openjsf.org"&gt;OpenJS Foundation&lt;/a&gt; has registered trademarks and uses trademarks. For a list of trademarks of the &lt;a href="https://openjsf.org"&gt;OpenJS Foundation&lt;/a&gt;, please see our &lt;a href="https://trademark-policy.openjsf.org/"&gt;Trademark Policy&lt;/a&gt; and &lt;a href="https://trademark-list.openjsf.org/"&gt;Trademark List&lt;/a&gt;. Trademarks and logos not indicated on the &lt;a href="https://trademark-list.openjsf.org"&gt;list of OpenJS Foundation trademarks&lt;/a&gt; are trademarks‚Ñ¢ or registered¬Æ trademarks of their respective holders. Use of them does not imply any affiliation with or endorsement by them. &lt;a href="https://openjsf.org/"&gt;The OpenJS Foundation&lt;/a&gt; | &lt;a href="https://terms-of-use.openjsf.org/"&gt;Terms of Use&lt;/a&gt; | &lt;a href="https://privacy-policy.openjsf.org/"&gt;Privacy Policy&lt;/a&gt; | &lt;a href="https://bylaws.openjsf.org/"&gt;Bylaws&lt;/a&gt; | &lt;a href="https://code-of-conduct.openjsf.org"&gt;Code of Conduct&lt;/a&gt; | &lt;a href="https://trademark-policy.openjsf.org/"&gt;Trademark Policy&lt;/a&gt; | &lt;a href="https://trademark-list.openjsf.org/"&gt;Trademark List&lt;/a&gt; | &lt;a href="https://www.linuxfoundation.org/cookies/"&gt;Cookie Policy&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/agent-lightning</title>
      <link>https://github.com/microsoft/agent-lightning</link>
      <description>&lt;p&gt;The absolute trainer to light up AI agents.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/agent-lightning/main/docs/assets/readme-banner.svg?sanitize=true" alt="Agent-lightning-banner" style="width:600px" /&gt; &lt;/p&gt; 
&lt;h1&gt;Agent Lightning‚ö°&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/microsoft/agent-lightning/actions/workflows/tests-full.yml"&gt;&lt;img src="https://github.com/microsoft/agent-lightning/actions/workflows/tests-full.yml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://microsoft.github.io/agent-lightning/"&gt;&lt;img src="https://img.shields.io/badge/GitHub%20Pages-Documentation-blue" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/agentlightning"&gt;&lt;img src="https://badge.fury.io/py/agentlightning.svg?sanitize=true" alt="PyPI version" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/microsoft/agent-lightning/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/RYk7CdvDR7"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join-5865F2?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The absolute trainer to light up AI agents.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/RYk7CdvDR7"&gt;Discord community&lt;/a&gt; to connect with other users and contributors.&lt;/p&gt; 
&lt;h2&gt;‚ö° Core Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Turn your agent into an optimizable beast with &lt;strong&gt;ZERO CODE CHANGE&lt;/strong&gt; (almost)! üí§&lt;/li&gt; 
 &lt;li&gt;Build with &lt;strong&gt;ANY&lt;/strong&gt; agent framework (LangChain, OpenAI Agent SDK, AutoGen, CrewAI, Microsoft Agent Framework...); or even WITHOUT agent framework (Python OpenAI). You name it! ü§ñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Selectively&lt;/strong&gt; optimize one or more agents in a multi-agent system. üéØ&lt;/li&gt; 
 &lt;li&gt;Embraces &lt;strong&gt;Algorithms&lt;/strong&gt; like Reinforcement Learning, Automatic Prompt Optimization, Supervised Fine-tuning and more. ü§ó&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Read more on our &lt;a href="https://microsoft.github.io/agent-lightning/"&gt;documentation website&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/agent-lightning/main/docs/assets/readme-diff.svg?sanitize=true" alt="Agent-Lightning Core Quickstart" style="width:100%" /&gt; &lt;/p&gt; 
&lt;h2&gt;‚ö° Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install agentlightning
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://microsoft.github.io/agent-lightning/stable/tutorials/installation/"&gt;installation guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;To start using Agent-lightning, check out our &lt;a href="https://microsoft.github.io/agent-lightning/"&gt;documentation&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/microsoft/agent-lightning/main/examples"&gt;examples&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;‚ö° Articles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;10/22/2025 &lt;a href="https://blog.vllm.ai/2025/10/22/agent-lightning.html"&gt;No More Retokenization Drift: Returning Token IDs via the OpenAI Compatible API Matters in Agent RL&lt;/a&gt; vLLM blog. See also &lt;a href="https://zhuanlan.zhihu.com/p/1965067274642785725"&gt;Zhihu writeup&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;8/11/2025 &lt;a href="https://medium.com/@yugez/training-ai-agents-to-write-and-self-correct-sql-with-reinforcement-learning-571ed31281ad"&gt;Training AI Agents to Write and Self-correct SQL with Reinforcement Learning&lt;/a&gt; Medium.&lt;/li&gt; 
 &lt;li&gt;8/5/2025 &lt;a href="https://arxiv.org/abs/2508.03680"&gt;Agent Lightning: Train ANY AI Agents with Reinforcement Learning&lt;/a&gt; arXiv paper.&lt;/li&gt; 
 &lt;li&gt;7/26/2025 &lt;a href="https://www.reddit.com/r/LocalLLaMA/comments/1m9m670/we_discovered_an_approach_to_train_any_ai_agent/"&gt;We discovered an approach to train any AI agent with RL, with (almost) zero code changes.&lt;/a&gt; Reddit.&lt;/li&gt; 
 &lt;li&gt;6/6/2025 &lt;a href="https://www.microsoft.com/en-us/research/project/agent-lightning/"&gt;Agent Lightning - Microsoft Research&lt;/a&gt; Project page.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö° Community Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/af-74413592/DeepWerewolf"&gt;DeepWerewolf&lt;/a&gt; ‚Äî A case study of agent RL training for the Chinese Werewolf game built with AgentScope and Agent Lightning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://agentflow.stanford.edu/"&gt;AgentFlow&lt;/a&gt; ‚Äî A modular multi-agent framework that combines planner, executor, verifier, and generator agents with the Flow-GRPO algorithm to tackle long-horizon, sparse-reward tasks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö° Architecture&lt;/h2&gt; 
&lt;p&gt;Agent Lightning keeps the moving parts to a minimum so you can focus on your idea, not the plumbing. Your agent continues to run as usual; you can still use any agent framework you like; you drop in the lightweight &lt;code&gt;agl.emit_xxx()&lt;/code&gt; helper, or let the tracer collect every prompt, tool call, and reward. Those events become structured spans that flow into the LightningStore, a central hub that keeps tasks, resources, and traces in sync.&lt;/p&gt; 
&lt;p&gt;On the other side of the store sits the algorithm you choose, or write yourself. The algorithm reads spans, learns from them, and posts updated resources such as refined prompt templates or new policy weights. The Trainer ties it all together: it streams datasets to runners, ferries resources between the store and the algorithm, and updates the inference engine when improvements land. You can either stop there, or simply let the same loop keep turning.&lt;/p&gt; 
&lt;p&gt;No rewrites, no lock-in, just a clear path from first rollout to steady improvement.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/agent-lightning/main/docs/assets/readme-architecture.svg?sanitize=true" alt="Agent-lightning Architecture" style="width:100%" /&gt; &lt;/p&gt; 
&lt;h2&gt;‚ö° CI Status&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Workflow&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CPU Tests&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/agent-lightning/actions/workflows/tests.yml"&gt;&lt;img src="https://github.com/microsoft/agent-lightning/actions/workflows/tests.yml/badge.svg?sanitize=true" alt="tests workflow status" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GPU Tests&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/agent-lightning/actions/workflows/tests-full.yml"&gt;&lt;img src="https://github.com/microsoft/agent-lightning/actions/workflows/tests-full.yml/badge.svg?sanitize=true" alt="tests-full workflow status" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Examples Integration&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/agent-lightning/actions/workflows/badge-examples.yml"&gt;&lt;img src="https://github.com/microsoft/agent-lightning/actions/workflows/badge-examples.yml/badge.svg?sanitize=true" alt="examples summary workflow status" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Latest Dependency Compatibility&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/agent-lightning/actions/workflows/badge-latest.yml"&gt;&lt;img src="https://github.com/microsoft/agent-lightning/actions/workflows/badge-latest.yml/badge.svg?sanitize=true" alt="latest summary workflow status" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Legacy Examples Compatibility&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/agent-lightning/actions/workflows/examples-compat.yml"&gt;&lt;img src="https://github.com/microsoft/agent-lightning/actions/workflows/examples-compat.yml/badge.svg?sanitize=true" alt="examples compatibility workflow status" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;‚ö° Citation&lt;/h2&gt; 
&lt;p&gt;If you find Agent Lightning useful in your research or projects, please cite our paper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{luo2025agentlightningtrainai,
      title={Agent Lightning: Train ANY AI Agents with Reinforcement Learning},
      author={Xufang Luo and Yuge Zhang and Zhiyuan He and Zilong Wang and Siyun Zhao and Dongsheng Li and Luna K. Qiu and Yuqing Yang},
      year={2025},
      eprint={2508.03680},
      archivePrefix={arXiv},
      primaryClass={cs.AI},
      url={https://arxiv.org/abs/2508.03680},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;‚ö° Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.opensource.microsoft.com"&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;‚ö° Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt; 
&lt;h2&gt;‚ö° Responsible AI&lt;/h2&gt; 
&lt;p&gt;This project has been evaluated and certified to comply with the Microsoft Responsible AI Standard. The team will continue to monitor and maintain the repository, addressing any severe issues, including potential harms, if they arise.&lt;/p&gt; 
&lt;h2&gt;‚ö° License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/microsoft/agent-lightning/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>patchy631/ai-engineering-hub</title>
      <link>https://github.com/patchy631/ai-engineering-hub</link>
      <description>&lt;p&gt;In-depth tutorials on LLMs, RAGs and real-world AI agent applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/12800"&gt; &lt;img src="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/assets/TRENDING-BADGE.png" alt="Trending Badge" style="width: 250px; height: 55px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/assets/ai-eng-hub.gif" alt="AI Engineering Hub Banner" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;AI Engineering Hub üöÄ&lt;/h1&gt; 
&lt;p&gt;Welcome to the &lt;strong&gt;AI Engineering Hub&lt;/strong&gt; - your comprehensive resource for learning and building with AI!&lt;/p&gt; 
&lt;h2&gt;üåü Why This Repo?&lt;/h2&gt; 
&lt;p&gt;AI Engineering is advancing rapidly, and staying at the forefront requires both deep understanding and hands-on experience. Here, you will find:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;93+ Production-Ready Projects&lt;/strong&gt; across all skill levels&lt;/li&gt; 
 &lt;li&gt;In-depth tutorials on &lt;strong&gt;LLMs, RAG, Agents, and more&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Real-world &lt;strong&gt;AI agent&lt;/strong&gt; applications&lt;/li&gt; 
 &lt;li&gt;Examples to implement, adapt, and scale in your projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Whether you're a beginner, practitioner, or researcher, this repo provides resources for all skill levels to experiment and succeed in AI engineering.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìã Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-stay-updated-with-our-newsletter"&gt;Newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-projects-by-difficulty"&gt;Projects by Difficulty&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-beginner-projects"&gt;Beginner Projects (22)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-intermediate-projects"&gt;Intermediate Projects (48)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-advanced-projects"&gt;Advanced Projects (23)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-contribute-to-the-ai-engineering-hub"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéØ Getting Started&lt;/h2&gt; 
&lt;p&gt;New to AI Engineering? Start here:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Complete Beginners&lt;/strong&gt;: Check out the &lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/ai-engineering-roadmap"&gt;AI Engineering Roadmap&lt;/a&gt; for a comprehensive learning path&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn the Basics&lt;/strong&gt;: Start with &lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-beginner-projects"&gt;Beginner Projects&lt;/a&gt; like OCR apps and simple RAG implementations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build Your Skills&lt;/strong&gt;: Move to &lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-intermediate-projects"&gt;Intermediate Projects&lt;/a&gt; with agents and complex workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Master Advanced Concepts&lt;/strong&gt;: Tackle &lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/#-advanced-projects"&gt;Advanced Projects&lt;/a&gt; including fine-tuning and production systems&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üì¨ Stay Updated with Our Newsletter!&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Get a FREE Data Science eBook&lt;/strong&gt; üìñ with 150+ essential lessons in Data Science when you subscribe to our newsletter! Stay in the loop with the latest tutorials, insights, and exclusive resources. &lt;a href="https://join.dailydoseofds.com"&gt;Subscribe now!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://join.dailydoseofds.com"&gt;&lt;img src="https://github.com/patchy631/ai-engineering/raw/main/resources/join_ddods.png" alt="Daily Dose of Data Science Newsletter" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéì Projects by Difficulty&lt;/h2&gt; 
&lt;h3&gt;üü¢ Beginner Projects&lt;/h3&gt; 
&lt;p&gt;Perfect for getting started with AI engineering. These projects focus on single components and straightforward implementations.&lt;/p&gt; 
&lt;h4&gt;OCR &amp;amp; Vision&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/LaTeX-OCR-with-Llama"&gt;&lt;strong&gt;LaTeX OCR with Llama&lt;/strong&gt;&lt;/a&gt; - Convert LaTeX equation images to code using Llama 3.2 vision&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/llama-ocr"&gt;&lt;strong&gt;Llama OCR&lt;/strong&gt;&lt;/a&gt; - 100% local OCR app with Llama 3.2 and Streamlit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/gemma3-ocr"&gt;&lt;strong&gt;Gemma-3 OCR&lt;/strong&gt;&lt;/a&gt; - Local OCR with structured text extraction using Gemma-3&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/qwen-2.5VL-ocr"&gt;&lt;strong&gt;Qwen 2.5 OCR&lt;/strong&gt;&lt;/a&gt; - Text extraction using Qwen 2.5 VL model&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Chat Interfaces &amp;amp; UI&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/local-chatgpt%20with%20DeepSeek"&gt;&lt;strong&gt;Local ChatGPT with DeepSeek&lt;/strong&gt;&lt;/a&gt; - Mini-ChatGPT with DeepSeek-R1 and Chainlit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/local-chatgpt"&gt;&lt;strong&gt;Local ChatGPT with Llama&lt;/strong&gt;&lt;/a&gt; - ChatGPT clone using Llama 3.2 vision&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/local-chatgpt%20with%20Gemma%203"&gt;&lt;strong&gt;Local ChatGPT with Gemma 3&lt;/strong&gt;&lt;/a&gt; - Local chat interface with Gemma 3&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/deepseek-thinking-ui"&gt;&lt;strong&gt;DeepSeek Thinking UI&lt;/strong&gt;&lt;/a&gt; - ChatGPT with visible reasoning using DeepSeek-R1&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/qwen3-thinking-ui"&gt;&lt;strong&gt;Qwen3 Thinking UI&lt;/strong&gt;&lt;/a&gt; - Thinking UI with Qwen3:4B and Streamlit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/gpt-oss-thinking-ui"&gt;&lt;strong&gt;GPT-OSS Thinking UI&lt;/strong&gt;&lt;/a&gt; - GPT-OSS with reasoning visualization&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/streaming-ai-chatbot"&gt;&lt;strong&gt;Streaming AI Chatbot&lt;/strong&gt;&lt;/a&gt; - Real-time AI streaming with Motia framework&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Basic RAG&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/simple-rag-workflow"&gt;&lt;strong&gt;Simple RAG Workflow&lt;/strong&gt;&lt;/a&gt; - Basic RAG with LlamaIndex and Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/document-chat-rag"&gt;&lt;strong&gt;Document Chat RAG&lt;/strong&gt;&lt;/a&gt; - Chat with documents using Llama 3.3&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/fastest-rag-stack"&gt;&lt;strong&gt;Fastest RAG Stack&lt;/strong&gt;&lt;/a&gt; - Fast RAG with SambaNova, LlamaIndex, and Qdrant&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/github-rag"&gt;&lt;strong&gt;GitHub RAG&lt;/strong&gt;&lt;/a&gt; - Chat with GitHub repos locally&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/modernbert-rag"&gt;&lt;strong&gt;ModernBERT RAG&lt;/strong&gt;&lt;/a&gt; - RAG with ModernBert embeddings&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/llama-4-rag"&gt;&lt;strong&gt;Llama 4 RAG&lt;/strong&gt;&lt;/a&gt; - RAG powered by Meta's Llama 4&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Multimodal &amp;amp; Media&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/imagegen-janus-pro"&gt;&lt;strong&gt;Image Generation with Janus-Pro&lt;/strong&gt;&lt;/a&gt; - Local image generation with DeepSeek Janus-pro 7B&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/video-rag-gemini"&gt;&lt;strong&gt;Video RAG with Gemini&lt;/strong&gt;&lt;/a&gt; - Chat with videos using Gemini AI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Other Tools&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/Website-to-API-with-FireCrawl"&gt;&lt;strong&gt;Website to API with FireCrawl&lt;/strong&gt;&lt;/a&gt; - Convert websites to APIs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/ai_news_generator"&gt;&lt;strong&gt;AI News Generator&lt;/strong&gt;&lt;/a&gt; - News generation with CrewAI and Cohere&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/siamese-network"&gt;&lt;strong&gt;Siamese Network&lt;/strong&gt;&lt;/a&gt; - Digit similarity detection on MNIST&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;üü° Intermediate Projects&lt;/h3&gt; 
&lt;p&gt;Multi-component systems, agentic workflows, and advanced features for experienced practitioners.&lt;/p&gt; 
&lt;h4&gt;AI Agents &amp;amp; Workflows&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/Youtube-trend-analysis"&gt;&lt;strong&gt;YouTube Trend Analysis&lt;/strong&gt;&lt;/a&gt; - Analyze YouTube trends with CrewAI and BrightData&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/autogen-stock-analyst"&gt;&lt;strong&gt;AutoGen Stock Analyst&lt;/strong&gt;&lt;/a&gt; - Advanced analyst with Microsoft AutoGen&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/agentic_rag"&gt;&lt;strong&gt;Agentic RAG&lt;/strong&gt;&lt;/a&gt; - RAG with document search and web fallback&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/agentic_rag_deepseek"&gt;&lt;strong&gt;Agentic RAG with DeepSeek&lt;/strong&gt;&lt;/a&gt; - Enterprise agentic RAG with GroundX&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/book-writer-flow"&gt;&lt;strong&gt;Book Writer Flow&lt;/strong&gt;&lt;/a&gt; - Automated book writing with CrewAI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/content_planner_flow"&gt;&lt;strong&gt;Content Planner Flow&lt;/strong&gt;&lt;/a&gt; - Content workflow with CrewAI Flow&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/brand-monitoring"&gt;&lt;strong&gt;Brand Monitoring&lt;/strong&gt;&lt;/a&gt; - Automated brand monitoring system&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/hotel-booking-crew"&gt;&lt;strong&gt;Hotel Booking Crew&lt;/strong&gt;&lt;/a&gt; - Multi-agent hotel booking with DeepSeek-R1&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/deploy-agentic-rag"&gt;&lt;strong&gt;Deploy Agentic RAG&lt;/strong&gt;&lt;/a&gt; - Private Agentic RAG API with LitServe&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/zep-memory-assistant"&gt;&lt;strong&gt;Zep Memory Assistant&lt;/strong&gt;&lt;/a&gt; - AI Agent with human-like memory&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/agent-with-mcp-memory"&gt;&lt;strong&gt;Agent with MCP Memory&lt;/strong&gt;&lt;/a&gt; - Agents with Graphiti memory and Opik&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/acp-code"&gt;&lt;strong&gt;ACP Code&lt;/strong&gt;&lt;/a&gt; - Agent Communication Protocol demo&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/motia-content-creation"&gt;&lt;strong&gt;Motia Content Creation&lt;/strong&gt;&lt;/a&gt; - Social media automation workflow&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Voice &amp;amp; Audio&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/real-time-voicebot"&gt;&lt;strong&gt;Real-time Voice Bot&lt;/strong&gt;&lt;/a&gt; - Conversational travel guide with AssemblyAI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/rag-voice-agent"&gt;&lt;strong&gt;RAG Voice Agent&lt;/strong&gt;&lt;/a&gt; - Real-time RAG Voice Agent with Cartesia&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/chat-with-audios"&gt;&lt;strong&gt;Chat with Audios&lt;/strong&gt;&lt;/a&gt; - RAG over audio files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/audio-analysis-toolkit"&gt;&lt;strong&gt;Audio Analysis Toolkit&lt;/strong&gt;&lt;/a&gt; - Audio analysis with AssemblyAI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/multilingual-meeting-notes-generator"&gt;&lt;strong&gt;Multilingual Meeting Notes&lt;/strong&gt;&lt;/a&gt; - Auto meeting notes with language detection&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Advanced RAG&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/rag-with-dockling"&gt;&lt;strong&gt;RAG with Dockling&lt;/strong&gt;&lt;/a&gt; - RAG over Excel with IBM's Docling&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/trustworthy-rag"&gt;&lt;strong&gt;Trustworthy RAG&lt;/strong&gt;&lt;/a&gt; - RAG over complex docs with TLM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/fastest-rag-milvus-groq"&gt;&lt;strong&gt;Fastest RAG with Milvus and Groq&lt;/strong&gt;&lt;/a&gt; - Sub-15ms retrieval latency&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/chat-with-code"&gt;&lt;strong&gt;Chat with Code&lt;/strong&gt;&lt;/a&gt; - Chat with code using Qwen3-Coder&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/rag-sql-router"&gt;&lt;strong&gt;RAG SQL Router&lt;/strong&gt;&lt;/a&gt; - Agent with RAG and SQL routing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Multimodal&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/deepseek-multimodal-RAG"&gt;&lt;strong&gt;DeepSeek Multimodal RAG&lt;/strong&gt;&lt;/a&gt; - MultiModal RAG with DeepSeek-Janus-Pro&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/Colivara-deepseek-website-RAG"&gt;&lt;strong&gt;ColiVara Website RAG&lt;/strong&gt;&lt;/a&gt; - MultiModal RAG for websites&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/multimodal-rag-assemblyai"&gt;&lt;strong&gt;Multimodal RAG with AssemblyAI&lt;/strong&gt;&lt;/a&gt; - Audio + vector database + CrewAI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;MCP (Model Context Protocol)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/cursor_linkup_mcp"&gt;&lt;strong&gt;Cursor Linkup MCP&lt;/strong&gt;&lt;/a&gt; - Custom MCP with deep web search&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/eyelevel-mcp-rag"&gt;&lt;strong&gt;EyeLevel MCP RAG&lt;/strong&gt;&lt;/a&gt; - MCP for RAG over complex docs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/llamaindex-mcp"&gt;&lt;strong&gt;LlamaIndex MCP&lt;/strong&gt;&lt;/a&gt; - Local MCP client with LlamaIndex&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/mcp-agentic-rag"&gt;&lt;strong&gt;MCP Agentic RAG&lt;/strong&gt;&lt;/a&gt; - MCP-powered Agentic RAG for Cursor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/mcp-agentic-rag-firecrawl"&gt;&lt;strong&gt;MCP Agentic RAG Firecrawl&lt;/strong&gt;&lt;/a&gt; - Agentic RAG with Firecrawl&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/mcp-video-rag"&gt;&lt;strong&gt;MCP Video RAG&lt;/strong&gt;&lt;/a&gt; - Video RAG using Ragie via MCP&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/mcp-voice-agent"&gt;&lt;strong&gt;MCP Voice Agent&lt;/strong&gt;&lt;/a&gt; - Voice agent with Firecrawl and Supabase&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/sdv-mcp"&gt;&lt;strong&gt;SDV MCP&lt;/strong&gt;&lt;/a&gt; - Synthetic Data Vault orchestration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/kitops-mcp"&gt;&lt;strong&gt;KitOps MCP&lt;/strong&gt;&lt;/a&gt; - ML model management with KitOps&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/stagehand%20x%20mcp-use"&gt;&lt;strong&gt;Stagehand √ó MCP-Use&lt;/strong&gt;&lt;/a&gt; - Web automation with Stagehand MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Model Comparison &amp;amp; Evaluation&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/eval-and-observability"&gt;&lt;strong&gt;Evaluation and Observability&lt;/strong&gt;&lt;/a&gt; - E2E RAG evaluation with CometML Opik&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/llama-4_vs_deepseek-r1"&gt;&lt;strong&gt;Llama 4 vs DeepSeek-R1&lt;/strong&gt;&lt;/a&gt; - Compare models using RAG&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/qwen3_vs_deepseek-r1"&gt;&lt;strong&gt;Qwen3 vs DeepSeek-R1&lt;/strong&gt;&lt;/a&gt; - Model comparison with Opik&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/o3-vs-claude-code"&gt;&lt;strong&gt;O3 vs Claude Code&lt;/strong&gt;&lt;/a&gt; - Compare Claude 3.7 and o3&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/sonnet4-vs-o4"&gt;&lt;strong&gt;Sonnet4 vs O4&lt;/strong&gt;&lt;/a&gt; - Code generation comparison&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/sonnet4-vs-qwen3-coder"&gt;&lt;strong&gt;Sonnet4 vs Qwen3-Coder&lt;/strong&gt;&lt;/a&gt; - Coder model comparison&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/code-model-comparison"&gt;&lt;strong&gt;Code Model Comparison&lt;/strong&gt;&lt;/a&gt; - Frontier model code comparison&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/gpt-oss-vs-qwen3"&gt;&lt;strong&gt;GPT-OSS vs Qwen3&lt;/strong&gt;&lt;/a&gt; - Reasoning capabilities comparison&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;üî¥ Advanced Projects&lt;/h3&gt; 
&lt;p&gt;Complex systems, fine-tuning, production deployments, and cutting-edge implementations.&lt;/p&gt; 
&lt;h4&gt;Fine-tuning &amp;amp; Model Development&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/DeepSeek-finetuning"&gt;&lt;strong&gt;DeepSeek Fine-tuning&lt;/strong&gt;&lt;/a&gt; - Fine-tune DeepSeek with Unsloth and Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/Build-reasoning-model"&gt;&lt;strong&gt;Build Reasoning Model&lt;/strong&gt;&lt;/a&gt; - Build DeepSeek-R1-like reasoning models&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/attention-is-all-you-need-impl"&gt;&lt;strong&gt;Attention Is All You Need Implementation&lt;/strong&gt;&lt;/a&gt; - Transformer architecture from scratch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Advanced Agent Systems&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/nvidia-demo"&gt;&lt;strong&gt;NVIDIA Demo&lt;/strong&gt;&lt;/a&gt; - Documentation writer with CrewAI Flows and NVIDIA NIM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/documentation-writer-flow"&gt;&lt;strong&gt;Documentation Writer Flow&lt;/strong&gt;&lt;/a&gt; - Agentic documentation workflow&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/Multi-Agent-deep-researcher-mcp-windows-linux"&gt;&lt;strong&gt;Multi-Agent Deep Researcher&lt;/strong&gt;&lt;/a&gt; - MCP-powered deep researcher&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/multiplatform_deep_researcher"&gt;&lt;strong&gt;Multiplatform Deep Researcher&lt;/strong&gt;&lt;/a&gt; - Multi-platform research with BrightData&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/web-browsing-agent"&gt;&lt;strong&gt;Web Browsing Agent&lt;/strong&gt;&lt;/a&gt; - Browser automation with CrewAI and Stagehand&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/paralegal-agent-crew"&gt;&lt;strong&gt;Paralegal Agent Crew&lt;/strong&gt;&lt;/a&gt; - Intelligent paralegal with RAG&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/firecrawl-agent"&gt;&lt;strong&gt;FireCrawl Agent&lt;/strong&gt;&lt;/a&gt; - Corrective RAG with web search fallback&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/context-engineering-workflow"&gt;&lt;strong&gt;Context Engineering Workflow&lt;/strong&gt;&lt;/a&gt; - Research assistant with TensorLake and Zep&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/parlant-conversational-agent"&gt;&lt;strong&gt;Parlant Conversational Agent&lt;/strong&gt;&lt;/a&gt; - Compliance-driven conversational agent&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/stock-portfolio-analysis-agent"&gt;&lt;strong&gt;Stock Portfolio Analysis Agent&lt;/strong&gt;&lt;/a&gt; - Portfolio analysis with React frontend&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/guidelines-vs-traditional-prompt"&gt;&lt;strong&gt;Guidelines vs Traditional Prompt&lt;/strong&gt;&lt;/a&gt; - Structured guidelines comparison&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Advanced MCP &amp;amp; Infrastructure&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/mindsdb-mcp"&gt;&lt;strong&gt;MindsDB MCP&lt;/strong&gt;&lt;/a&gt; - Unified MCP for all data sources&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/financial-analyst-deepseek"&gt;&lt;strong&gt;Financial Analyst DeepSeek&lt;/strong&gt;&lt;/a&gt; - MCP financial analysis workflow&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/graphiti-mcp"&gt;&lt;strong&gt;Graphiti MCP&lt;/strong&gt;&lt;/a&gt; - Persistent memory with Zep's Graphiti&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/pixeltable-mcp"&gt;&lt;strong&gt;Pixeltable MCP&lt;/strong&gt;&lt;/a&gt; - Unified multimodal data orchestration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/ultimate-ai-assitant-using-mcp"&gt;&lt;strong&gt;Ultimate AI Assistant&lt;/strong&gt;&lt;/a&gt; - Multi-MCP server interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Production Systems&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/groundX-doc-pipeline"&gt;&lt;strong&gt;GroundX Document Pipeline&lt;/strong&gt;&lt;/a&gt; - World-class document processing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/notebook-lm-clone"&gt;&lt;strong&gt;NotebookLM Clone&lt;/strong&gt;&lt;/a&gt; - Full NotebookLM with RAG, citations, and podcasts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Learning Resources&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/ai-engineering-roadmap"&gt;&lt;strong&gt;AI Engineering Roadmap&lt;/strong&gt;&lt;/a&gt; - Complete guide from Python to production AI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üì¢ Contribute to the AI Engineering Hub!&lt;/h2&gt; 
&lt;p&gt;We welcome contributors! Whether you want to add new tutorials, improve existing code, or report issues, your contributions make this community thrive. Here's how to get involved:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; the repository&lt;/li&gt; 
 &lt;li&gt;Create a new branch for your contribution&lt;/li&gt; 
 &lt;li&gt;Submit a &lt;strong&gt;Pull Request&lt;/strong&gt; and describe the improvements&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Check out our &lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìú License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/patchy631/ai-engineering-hub/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üí¨ Connect&lt;/h2&gt; 
&lt;p&gt;For discussions, suggestions, and more, feel free to &lt;a href="https://github.com/patchy631/ai-engineering/issues"&gt;create an issue&lt;/a&gt; or reach out directly!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Happy Coding!&lt;/strong&gt; üéâ&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>projectdiscovery/nuclei-templates</title>
      <link>https://github.com/projectdiscovery/nuclei-templates</link>
      <description>&lt;p&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; Nuclei Templates &lt;/h1&gt; 
&lt;h4 align="center"&gt;Community curated list of templates for the nuclei engine to find security vulnerabilities in applications.&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/projectdiscovery/nuclei-templates/issues"&gt;&lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" /&gt;&lt;/a&gt; &lt;a href="https://github.com/projectdiscovery/nuclei-templates/releases"&gt;&lt;img src="https://img.shields.io/github/release/projectdiscovery/nuclei-templates" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/pdnuclei"&gt;&lt;img src="https://img.shields.io/twitter/follow/pdnuclei.svg?logo=twitter" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/projectdiscovery"&gt;&lt;img src="https://img.shields.io/discord/695645237418131507.svg?logo=discord" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://nuclei.projectdiscovery.io/templating-guide/"&gt;Documentation&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/#-contributions"&gt;Contributions&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/#-discussion"&gt;Discussion&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/#-community"&gt;Community&lt;/a&gt; ‚Ä¢ &lt;a href="https://nuclei.projectdiscovery.io/faq/templates/"&gt;FAQs&lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.gg/projectdiscovery"&gt;Join Discord&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Templates are the core of the &lt;a href="https://github.com/projectdiscovery/nuclei"&gt;nuclei scanner&lt;/a&gt; which powers the actual scanning engine. This repository stores and houses various templates for the scanner provided by our team, as well as contributed by the community. We hope that you also contribute by sending templates via &lt;strong&gt;pull requests&lt;/strong&gt; or &lt;a href="https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=submit-template.md&amp;amp;title=%5Bnuclei-template%5D+"&gt;Github issues&lt;/a&gt; to grow the list.&lt;/p&gt; 
&lt;h2&gt;Nuclei Templates overview&lt;/h2&gt; 
&lt;p&gt;An overview of the nuclei template project, including statistics on unique tags, author, directory, severity, and type of templates. The table below contains the top ten statistics for each matrix; an expanded version of this is &lt;a href="https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/TEMPLATES-STATS.md"&gt;available here&lt;/a&gt;, and also available in &lt;a href="https://raw.githubusercontent.com/projectdiscovery/nuclei-templates/main/TEMPLATES-STATS.json"&gt;JSON&lt;/a&gt; format for integration.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;h2&gt;Nuclei Templates Top 10 statistics&lt;/h2&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;TAG&lt;/th&gt; 
       &lt;th&gt;COUNT&lt;/th&gt; 
       &lt;th&gt;AUTHOR&lt;/th&gt; 
       &lt;th&gt;COUNT&lt;/th&gt; 
       &lt;th&gt;DIRECTORY&lt;/th&gt; 
       &lt;th&gt;COUNT&lt;/th&gt; 
       &lt;th&gt;SEVERITY&lt;/th&gt; 
       &lt;th&gt;COUNT&lt;/th&gt; 
       &lt;th&gt;TYPE&lt;/th&gt; 
       &lt;th&gt;COUNT&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;cve&lt;/td&gt; 
       &lt;td&gt;3288&lt;/td&gt; 
       &lt;td&gt;dhiyaneshdk&lt;/td&gt; 
       &lt;td&gt;1882&lt;/td&gt; 
       &lt;td&gt;http&lt;/td&gt; 
       &lt;td&gt;8967&lt;/td&gt; 
       &lt;td&gt;info&lt;/td&gt; 
       &lt;td&gt;4190&lt;/td&gt; 
       &lt;td&gt;file&lt;/td&gt; 
       &lt;td&gt;435&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;panel&lt;/td&gt; 
       &lt;td&gt;1342&lt;/td&gt; 
       &lt;td&gt;daffainfo&lt;/td&gt; 
       &lt;td&gt;868&lt;/td&gt; 
       &lt;td&gt;cloud&lt;/td&gt; 
       &lt;td&gt;657&lt;/td&gt; 
       &lt;td&gt;high&lt;/td&gt; 
       &lt;td&gt;2446&lt;/td&gt; 
       &lt;td&gt;dns&lt;/td&gt; 
       &lt;td&gt;26&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;xss&lt;/td&gt; 
       &lt;td&gt;1257&lt;/td&gt; 
       &lt;td&gt;princechaddha&lt;/td&gt; 
       &lt;td&gt;854&lt;/td&gt; 
       &lt;td&gt;file&lt;/td&gt; 
       &lt;td&gt;435&lt;/td&gt; 
       &lt;td&gt;medium&lt;/td&gt; 
       &lt;td&gt;2379&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;wordpress&lt;/td&gt; 
       &lt;td&gt;1181&lt;/td&gt; 
       &lt;td&gt;dwisiswant0&lt;/td&gt; 
       &lt;td&gt;806&lt;/td&gt; 
       &lt;td&gt;dast&lt;/td&gt; 
       &lt;td&gt;255&lt;/td&gt; 
       &lt;td&gt;critical&lt;/td&gt; 
       &lt;td&gt;1425&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;exposure&lt;/td&gt; 
       &lt;td&gt;1107&lt;/td&gt; 
       &lt;td&gt;ritikchaddha&lt;/td&gt; 
       &lt;td&gt;649&lt;/td&gt; 
       &lt;td&gt;workflows&lt;/td&gt; 
       &lt;td&gt;202&lt;/td&gt; 
       &lt;td&gt;low&lt;/td&gt; 
       &lt;td&gt;318&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;wp-plugin&lt;/td&gt; 
       &lt;td&gt;1032&lt;/td&gt; 
       &lt;td&gt;pussycat0x&lt;/td&gt; 
       &lt;td&gt;532&lt;/td&gt; 
       &lt;td&gt;code&lt;/td&gt; 
       &lt;td&gt;198&lt;/td&gt; 
       &lt;td&gt;unknown&lt;/td&gt; 
       &lt;td&gt;56&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;osint&lt;/td&gt; 
       &lt;td&gt;841&lt;/td&gt; 
       &lt;td&gt;pikpikcu&lt;/td&gt; 
       &lt;td&gt;352&lt;/td&gt; 
       &lt;td&gt;network&lt;/td&gt; 
       &lt;td&gt;145&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;tech&lt;/td&gt; 
       &lt;td&gt;803&lt;/td&gt; 
       &lt;td&gt;pdteam&lt;/td&gt; 
       &lt;td&gt;310&lt;/td&gt; 
       &lt;td&gt;javascript&lt;/td&gt; 
       &lt;td&gt;71&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;rce&lt;/td&gt; 
       &lt;td&gt;786&lt;/td&gt; 
       &lt;td&gt;pdresearch&lt;/td&gt; 
       &lt;td&gt;269&lt;/td&gt; 
       &lt;td&gt;ssl&lt;/td&gt; 
       &lt;td&gt;38&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;lfi&lt;/td&gt; 
       &lt;td&gt;777&lt;/td&gt; 
       &lt;td&gt;iamnoooob&lt;/td&gt; 
       &lt;td&gt;257&lt;/td&gt; 
       &lt;td&gt;dns&lt;/td&gt; 
       &lt;td&gt;23&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
       &lt;td&gt;&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;p&gt;&lt;strong&gt;848 directories, 11344 files&lt;/strong&gt;.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;Please navigate to &lt;a href="https://nuclei.projectdiscovery.io"&gt;https://nuclei.projectdiscovery.io&lt;/a&gt; for detailed documentation to &lt;strong&gt;build&lt;/strong&gt; new or your own &lt;strong&gt;custom&lt;/strong&gt; templates. We have also added a set of templates to help you understand how things work.&lt;/p&gt; 
&lt;h2&gt;üí™ Contributions&lt;/h2&gt; 
&lt;p&gt;Nuclei-templates is powered by major contributions from the community. &lt;a href="https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=submit-template.md&amp;amp;title=%5Bnuclei-template%5D+"&gt;Template contributions &lt;/a&gt;, &lt;a href="https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title=%5BFeature%5D+"&gt;Feature Requests&lt;/a&gt; and &lt;a href="https://github.com/projectdiscovery/nuclei-templates/issues/new?assignees=&amp;amp;labels=&amp;amp;template=bug_report.md&amp;amp;title=%5BBug%5D+"&gt;Bug Reports&lt;/a&gt; are more than welcome.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/55ee65543bb9a0f9c797626c4e66d472a517d17c.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;üí¨ Discussion&lt;/h2&gt; 
&lt;p&gt;Have questions / doubts / ideas to discuss? Feel free to open a discussion on &lt;a href="https://github.com/projectdiscovery/nuclei-templates/discussions"&gt;Github discussions&lt;/a&gt; board.&lt;/p&gt; 
&lt;h2&gt;üë®‚Äçüíª Community&lt;/h2&gt; 
&lt;p&gt;You are welcome to join the active &lt;a href="https://discord.gg/projectdiscovery"&gt;Discord Community&lt;/a&gt; to discuss directly with project maintainers and share things with others around security and automation. Additionally, you may follow us on &lt;a href="https://twitter.com/pdnuclei"&gt;Twitter&lt;/a&gt; to be updated on all the things about Nuclei.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/projectdiscovery/nuclei-templates/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=projectdiscovery/nuclei-templates&amp;amp;max=300" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Thanks again for your contribution and keeping this community vibrant. &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>helm/helm</title>
      <link>https://github.com/helm/helm</link>
      <description>&lt;p&gt;The Kubernetes Package Manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helm&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/helm/helm/actions?workflow=release"&gt;&lt;img src="https://github.com/helm/helm/workflows/release/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/helm.sh/helm/v4"&gt;&lt;img src="https://goreportcard.com/badge/helm.sh/helm/v4" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/helm.sh/helm/v4"&gt;&lt;img src="https://img.shields.io/static/v1?label=godoc&amp;amp;message=reference&amp;amp;color=blue" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3131"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3131/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/helm/helm"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/helm/helm/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/helm"&gt;&lt;img src="https://insights.production.lfx.dev/api/badge/health-score?project=helm" alt="LFX Health Score" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources.&lt;/p&gt; 
&lt;p&gt;Use Helm to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find and use &lt;a href="https://artifacthub.io/packages/search?kind=0"&gt;popular software packaged as Helm Charts&lt;/a&gt; to run in Kubernetes&lt;/li&gt; 
 &lt;li&gt;Share your own applications as Helm Charts&lt;/li&gt; 
 &lt;li&gt;Create reproducible builds of your Kubernetes applications&lt;/li&gt; 
 &lt;li&gt;Intelligently manage your Kubernetes manifest files&lt;/li&gt; 
 &lt;li&gt;Manage releases of Helm packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm in a Handbasket&lt;/h2&gt; 
&lt;p&gt;Helm is a tool that streamlines installing and managing Kubernetes applications. Think of it like apt/yum/homebrew for Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Helm renders your templates and communicates with the Kubernetes API&lt;/li&gt; 
 &lt;li&gt;Helm runs on your laptop, CI/CD, or wherever you want it to run.&lt;/li&gt; 
 &lt;li&gt;Charts are Helm packages that contain at least two things: 
  &lt;ul&gt; 
   &lt;li&gt;A description of the package (&lt;code&gt;Chart.yaml&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;One or more templates, which contain Kubernetes manifest files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Charts can be stored on disk, or fetched from remote chart repositories (like Debian or RedHat packages)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm Development and Stable Versions&lt;/h2&gt; 
&lt;p&gt;Helm v4 is currently under development on the &lt;code&gt;main&lt;/code&gt; branch. This is unstable and the APIs within the Go SDK and at the command line are changing. Helm v3 (current stable) is maintained on the &lt;code&gt;dev-v3&lt;/code&gt; branch. APIs there follow semantic versioning.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Binary downloads of the Helm client can be found on &lt;a href="https://github.com/helm/helm/releases/latest"&gt;the Releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unpack the &lt;code&gt;helm&lt;/code&gt; binary and add it to your PATH and you are good to go!&lt;/p&gt; 
&lt;p&gt;If you want to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; users can use &lt;code&gt;brew install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; users can use &lt;code&gt;choco install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/"&gt;Winget&lt;/a&gt; users can use &lt;code&gt;winget install Helm.Helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scoop.sh/"&gt;Scoop&lt;/a&gt; users can use &lt;code&gt;scoop install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snapcraft.io/"&gt;Snapcraft&lt;/a&gt; users can use &lt;code&gt;snap install helm --classic&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev"&gt;Flox&lt;/a&gt; users can use &lt;code&gt;flox install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To rapidly get Helm up and running, start with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://helm.sh/docs/intro/install/"&gt;installation guide&lt;/a&gt; for more options, including installing pre-releases.&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;Get started with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start guide&lt;/a&gt; or plunge into the &lt;a href="https://helm.sh/docs"&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/helm/helm/milestones"&gt;Helm roadmap uses GitHub milestones&lt;/a&gt; to track the progress of the project.&lt;/p&gt; 
&lt;p&gt;The development of Helm v4 is currently happening on the &lt;code&gt;main&lt;/code&gt; branch while the development of Helm v3, the stable branch, is happening on the &lt;code&gt;dev-v3&lt;/code&gt; branch. Changes should be made to the &lt;code&gt;main&lt;/code&gt; branch prior to being added to the &lt;code&gt;dev-v3&lt;/code&gt; branch so that all changes are carried along to Helm v4.&lt;/p&gt; 
&lt;h2&gt;Community, discussion, contribution, and support&lt;/h2&gt; 
&lt;p&gt;You can reach the Helm community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kubernetes.slack.com"&gt;Kubernetes Slack&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-users"&gt;#helm-users&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-dev"&gt;#helm-dev&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/charts"&gt;#charts&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mailing List: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-helm"&gt;Helm Mailing List&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Developer Call: Thursdays at 9:30-10:00 Pacific (&lt;a href="https://github.com/helm/community/raw/master/communication.md#meetings"&gt;meeting details&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;If you're interested in contributing, please refer to the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; &lt;strong&gt;before submitting a pull request&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;Participation in the Helm community is governed by the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>qeeqbox/social-analyzer</title>
      <link>https://github.com/qeeqbox/social-analyzer</link>
      <description>&lt;p&gt;API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png" /&gt;&lt;/p&gt; 
&lt;p&gt;Social Analyzer - API, CLI, and Web App for analyzing &amp;amp; finding a person's profile across +1000 social media \ websites. It includes different analysis and detection modules, and you can choose which modules to use during the investigation process.&lt;/p&gt; 
&lt;p&gt;The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module is intended to have fewer false positives.&lt;/p&gt; 
&lt;p&gt;The analysis and public extracted information from this OSINT tool could help investigate profiles related to suspicious or malicious activities such as cyberbullying, cyber grooming, cyberstalking, and spreading misinformation.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;This project is currently used by some law enforcement agencies in countries where resources are limited - The detection database is different than the one shared here..&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;So¬∑cial Me¬∑di¬∑a&lt;/h2&gt; 
&lt;p&gt;Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary&lt;/p&gt; 
&lt;h2&gt;Structure&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/structure.png" /&gt; 
&lt;h2&gt;APP (Preferred!)&lt;/h2&gt; 
&lt;p&gt;Standard localhost WEB APP url: &lt;a href="http://0.0.0.0:9005/app.html"&gt;http://0.0.0.0:9005/app.html&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif" style="max-width:768px" /&gt; 
&lt;h2&gt;CLI&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif" style="max-width:768px" /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;String &amp;amp; name analysis (Permutations and Combinations)&lt;/li&gt; 
 &lt;li&gt;Find a profile using multiple techniques (HTTPS library &amp;amp; Webdriver)&lt;/li&gt; 
 &lt;li&gt;Multi profile search (Used for correlation - any combination separated with "," )&lt;/li&gt; 
 &lt;li&gt;Multilayers detections (OCR, normal, advanced &amp;amp; special)&lt;/li&gt; 
 &lt;li&gt;Visualized profile information using Ixora (Metadata &amp;amp; Patterns)&lt;/li&gt; 
 &lt;li&gt;Metadata &amp;amp; Patterns extraction (Added from Qeeqbox OSINT project)&lt;/li&gt; 
 &lt;li&gt;Force-directed Graph for Metadata (Needs ExtractPatterns)&lt;/li&gt; 
 &lt;li&gt;Search by top ranking or by country (Alexa Ranking)&lt;/li&gt; 
 &lt;li&gt;Search by type (adult, music, etc.. - automated websites stats)&lt;/li&gt; 
 &lt;li&gt;Profiles stats and static info (Category country)&lt;/li&gt; 
 &lt;li&gt;Cross Metadata stats (Added from Qeeqbox OSINT project)&lt;/li&gt; 
 &lt;li&gt;Auto-flirtation to unnecessary output (Enable javascript etc..)&lt;/li&gt; 
 &lt;li&gt;Search engine lookup (Google API - optional)&lt;/li&gt; 
 &lt;li&gt;Custom search queries (Google API &amp;amp; DuckDuckGo API - optional)&lt;/li&gt; 
 &lt;li&gt;Profile screenshot, title, info, and website description&lt;/li&gt; 
 &lt;li&gt;Find name origins, name similarity &amp;amp; common words by language&lt;/li&gt; 
 &lt;li&gt;Find possible profile\person age (Limited analysis)&lt;/li&gt; 
 &lt;li&gt;Custom user-agent, proxy, timeout &amp;amp; implicit wait&lt;/li&gt; 
 &lt;li&gt;Python CLI &amp;amp; NodeJS CLI (limited to FindUserProfilesFast option)&lt;/li&gt; 
 &lt;li&gt;Screenshots of detected profile (The latest version of Chrome must be installed)&lt;/li&gt; 
 &lt;li&gt;Grid option for faster checking (limited to docker-compose)&lt;/li&gt; 
 &lt;li&gt;Dump logs to folder or terminal (prettified)&lt;/li&gt; 
 &lt;li&gt;Adjust finding\getting profile workers (default 15)&lt;/li&gt; 
 &lt;li&gt;Re-checking option for failed profiles&lt;/li&gt; 
 &lt;li&gt;Filter profiles by good, maybe, and bad&lt;/li&gt; 
 &lt;li&gt;Save the analysis as a JSON file&lt;/li&gt; 
 &lt;li&gt;Simplified web interface and CLI&lt;/li&gt; 
 &lt;li&gt;And, more!!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Detections&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Facebook (Phone number, name, or profile name)&lt;/li&gt; 
 &lt;li&gt;Gmail (&lt;a href="mailto:example@gmail.com"&gt;example@gmail.com&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Google (&lt;a href="mailto:example@example.com"&gt;example@example.com&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Run&lt;/h2&gt; 
&lt;h3&gt;Linux (As Node WebApp)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm update
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As Node CLI)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install
nodejs app.js --username "johndoe"
#or
nodejs app.js --username "johndoe,janedoe" --metadata
#or
nodejs app.js --username "johndoe,janedoe" --metadata --top 100
#or
nodejs app.js --username "johndoe" --type "adult"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As python package)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install python3 python3-pip
pip3 install social-analyzer
python3 -m social-analyzer --username "johndoe"
#or
python3 -m social-analyzer --username "johndoe" --metadata
#or
python3 -m social-analyzer --username "johndoe" --metadata --top 100
#or
python3 -m social-analyzer --username "johndoe" --type "adult"
#or
python3 -m social-analyzer --username "johndoe" --websites "car" --logs --screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As python script)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install git python3 python3-pip
git clone https://github.com/qeeqbox/social-analyzer
cd social-analyzer
pip3 install -r requirements.txt
python3 app.py --username "janedoe"
#or
python3 app.py --username "johndoe" --metadata
#or
python3 app.py --username "johndoe" --metadata --top 100
#or
python3 app.py --username "johndoe" --type "adult"
#or
python3 app.py --username "johndoe" --websites "car" --logs --screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Importing as object (python)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;
#E.g. #1
from importlib import import_module
SocialAnalyzer = import_module("social-analyzer").SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username="johndoe",silent=True)
print(results)

#E.g. #2
from importlib import import_module
SocialAnalyzer = import_module("social-analyzer").SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username="johndoe,janedoe",silent=True,output="json",filter="good",metadata=False,timeout=10, profiles="detected")
print(results)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux, Windows, MacOS, Raspberry pi..&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;check this &lt;a href="https://github.com/qeeqbox/social-analyzer/wiki/install"&gt;wiki&lt;/a&gt; for all possible installation methods&lt;/li&gt; 
 &lt;li&gt;check this &lt;a href="https://github.com/qeeqbox/social-analyzer/wiki/integration"&gt;wiki&lt;/a&gt; for integrating social-analyzer with your OSINT tools, feeds, etc...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;social-analyzer --h&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Required Arguments:
  --username   E.g. johndoe, john_doe or johndoe9999

Optional Arguments:
  --websites    A website or websites separated by space E.g. youtube, tiktokor tumblr
  --mode        Analysis mode E.g.fast -&amp;gt; FindUserProfilesFast, slow -&amp;gt; FindUserProfilesSlow or special -&amp;gt; FindUserProfilesSpecial
  --output      Show the output in the following format: json -&amp;gt; json outputfor integration or pretty -&amp;gt; prettify the output
  --options     Show the following when a profile is found: link, rate, titleor text
  --method      find -&amp;gt; show detected profiles, get -&amp;gt; show all profiles regardless detected or not, all -&amp;gt; combine find &amp;amp; get
  --filter      Filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all
  --profiles    Filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all
  --countries   select websites by country or countries separated by space as: us br ru
  --type        Select websites by type (Adult, Music etc)
  --top         select top websites as 10, 50 etc...[--websites is not needed]
  --extract     Extract profiles, urls &amp;amp; patterns if possible
  --metadata    Extract metadata if possible (pypi QeeqBox OSINT)
  --trim        Trim long strings
  --gui         Reserved for a gui (Not implemented)
  --cli         Reserved for a cli (Not needed)

Listing websites &amp;amp; detections:
  --list        List all available websites

Setting:
  --headers     Headers as dict
  --logs_dir    Change logs directory
  --timeout     Change timeout between each request
  --silent      Disable output to screen
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Open Shell&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;amp;tutorial=README.md"&gt;&lt;img src="https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20Cloud%20Shell&amp;amp;color=3267d6&amp;amp;style=flat-square" alt="Open in Cloud Shell" /&gt;&lt;/a&gt; &lt;a href="https://repl.it/github/qeeqbox/social-analyzer"&gt;&lt;img src="https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20repl.it%20Shell&amp;amp;color=606c74&amp;amp;style=flat-square" alt="Open in repl.it Shell" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp;amp; tesseract.js&lt;/li&gt; 
 &lt;li&gt;Let me know if I missed a reference or resource!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer\Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download this project from GitHub and treat it as a security project&lt;/li&gt; 
 &lt;li&gt;If you want your website to be excluded from this project list, please reach out to me&lt;/li&gt; 
 &lt;li&gt;This tool is meant to be used locally, not as a service (It does not have any Access Control)&lt;/li&gt; 
 &lt;li&gt;For issues related to modules that end with -private or under the private group &lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/modules.png" alt="" /&gt;, reach out directly to me (do not open an issue on GitHub)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Projects&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/qeeqbox/analyzer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/analyzer.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/chameleon"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/chameleon.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/honeypots"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/honeypots.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/osint"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/osint.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/url-sandbox"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/url-sandbox.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/mitre-visualizer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/mitre-visualizer.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/woodpecker"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/woodpecker.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/docker-images"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/docker-images.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/seahorse"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/seahorse.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/rhino"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/rhino.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/raven"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/raven.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/image-analyzer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/image-analyzer.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/"&gt;&lt;img src="https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/"&gt;&lt;img src="https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub issues" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/"&gt;&lt;img src="https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub pull-requests" /&gt;&lt;/a&gt; &lt;a href="http://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/"&gt;&lt;img src="https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Watch&amp;amp;maxAge=2592000" alt="GitHub watchers" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/"&gt;&lt;img src="https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000" alt="GitHub forks" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000" alt="GitHub stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott"&gt;&lt;img src="https://dcbadge.vercel.app/api/server/ByRwuEEgH4" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!&lt;/p&gt; 
&lt;p&gt;Join the Azure AI Foundry Discord Community&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.com/invite/ByRwuEEgH4"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/ByRwuEEgH4" alt="Microsoft Azure AI Foundry Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Follow these steps to get started using these resources:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;: Click &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/fork"&gt;&lt;img src="https://img.shields.io/github/forks/microsoft/Web-Dev-For-beginners.svg?style=social&amp;amp;label=Fork" alt="GitHub forks" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;: &lt;code&gt;git clone https://github.com/microsoft/Web-Dev-For-Beginners.git&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.com/invite/ByRwuEEgH4"&gt;&lt;strong&gt;Join The Azure AI Foundry Discord and meet experts and fellow developers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üåê Multi-Language Support&lt;/h3&gt; 
&lt;h4&gt;Supported via GitHub Action (Automated &amp;amp; Always Up-to-Date)&lt;/h4&gt; 
&lt;!-- CO-OP TRANSLATOR LANGUAGES TABLE START --&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ar/README.md"&gt;Arabic&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/bn/README.md"&gt;Bengali&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/bg/README.md"&gt;Bulgarian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/my/README.md"&gt;Burmese (Myanmar)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/zh/README.md"&gt;Chinese (Simplified)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/hk/README.md"&gt;Chinese (Traditional, Hong Kong)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/mo/README.md"&gt;Chinese (Traditional, Macau)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/tw/README.md"&gt;Chinese (Traditional, Taiwan)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/hr/README.md"&gt;Croatian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/cs/README.md"&gt;Czech&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/da/README.md"&gt;Danish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/nl/README.md"&gt;Dutch&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/et/README.md"&gt;Estonian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/fi/README.md"&gt;Finnish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/fr/README.md"&gt;French&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/de/README.md"&gt;German&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/el/README.md"&gt;Greek&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/he/README.md"&gt;Hebrew&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/hi/README.md"&gt;Hindi&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/hu/README.md"&gt;Hungarian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/id/README.md"&gt;Indonesian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/it/README.md"&gt;Italian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ja/README.md"&gt;Japanese&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ko/README.md"&gt;Korean&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/lt/README.md"&gt;Lithuanian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ms/README.md"&gt;Malay&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/mr/README.md"&gt;Marathi&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ne/README.md"&gt;Nepali&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/no/README.md"&gt;Norwegian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/fa/README.md"&gt;Persian (Farsi)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/pl/README.md"&gt;Polish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/br/README.md"&gt;Portuguese (Brazil)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/pt/README.md"&gt;Portuguese (Portugal)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/pa/README.md"&gt;Punjabi (Gurmukhi)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ro/README.md"&gt;Romanian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ru/README.md"&gt;Russian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/sr/README.md"&gt;Serbian (Cyrillic)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/sk/README.md"&gt;Slovak&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/sl/README.md"&gt;Slovenian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/es/README.md"&gt;Spanish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/sw/README.md"&gt;Swahili&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/sv/README.md"&gt;Swedish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/tl/README.md"&gt;Tagalog (Filipino)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ta/README.md"&gt;Tamil&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/th/README.md"&gt;Thai&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/tr/README.md"&gt;Turkish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/uk/README.md"&gt;Ukrainian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/ur/README.md"&gt;Urdu&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/translations/vi/README.md"&gt;Vietnamese&lt;/a&gt;&lt;/p&gt; 
&lt;!-- CO-OP TRANSLATOR LANGUAGES TABLE END --&gt; 
&lt;p&gt;&lt;strong&gt;If you wish to have additional translations languages supported are listed &lt;a href="https://github.com/Azure/co-op-translator/raw/main/getting_started/supported-languages.md"&gt;here&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://open.vscode.dev/microsoft/Web-Dev-For-Beginners"&gt;&lt;img src="https://img.shields.io/static/v1?logo=visualstudiocode&amp;amp;label=&amp;amp;message=Open%20in%20Visual%20Studio%20Code&amp;amp;labelColor=2c2c32&amp;amp;color=007acc&amp;amp;logoColor=007acc" alt="Open in Visual Studio Code" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;üßë‚Äçüéì &lt;em&gt;Are you a student?&lt;/em&gt;&lt;/h4&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon"&gt;&lt;strong&gt;Student Hub page&lt;/strong&gt;&lt;/a&gt; where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.&lt;/p&gt; 
&lt;h3&gt;üì£ Announcement - New GitHub Copilot Agent mode challenges to complete!&lt;/h3&gt; 
&lt;p&gt;New Challenge added, look for "GitHub Copilot Agent Challenge üöÄ" in most chapters. That's a new challenge for you to complete using GitHub Copilot and Agent mode. If you haven't used Agent mode before it's capable of not just generating text but can also create and edit files, run commands and more.&lt;/p&gt; 
&lt;h3&gt;üì£ Announcement - &lt;em&gt;New Project to build using Generative AI&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;New AI Assistant project just added, check it out &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/09-chat-project/README.md"&gt;project&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;üì£ Announcement - &lt;em&gt;New Curriculum&lt;/em&gt; on Generative AI for JavaScript was just released&lt;/h3&gt; 
&lt;p&gt;Don't miss our new Generative AI curriculum!&lt;/p&gt; 
&lt;p&gt;Visit &lt;a href="https://aka.ms/genai-js-course"&gt;https://aka.ms/genai-js-course&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/background.png" alt="Background" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lessons covering everything from basics to RAG.&lt;/li&gt; 
 &lt;li&gt;Interact with historical characters using GenAI and our companion app.&lt;/li&gt; 
 &lt;li&gt;Fun and engaging narrative, you'll be time traveling!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/character.png" alt="character" /&gt;&lt;/p&gt; 
&lt;p&gt;Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prompting and prompt engineering&lt;/li&gt; 
 &lt;li&gt;Text and image app generation&lt;/li&gt; 
 &lt;li&gt;Search apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Visit &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/%5Bhttps://aka.ms/genai-js-course"&gt;https://aka.ms/genai-js-course&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;h2&gt;üå± Getting Started&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md"&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. We'd love your feedback &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner"&gt;in our discussion forum&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon"&gt;Learners&lt;/a&gt;&lt;/strong&gt;, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.&lt;/p&gt; 
&lt;p&gt;To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/discussions"&gt;discussion forum&lt;/a&gt; where our team of moderators will be available to answer your questions.&lt;/p&gt; 
&lt;p&gt;To further your education, we highly recommend exploring &lt;a href="https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon"&gt;Microsoft Learn&lt;/a&gt; for additional study materials.&lt;/p&gt; 
&lt;h3&gt;üìã Setting up your environment&lt;/h3&gt; 
&lt;p&gt;This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a &lt;a href="https://github.com/features/codespaces/"&gt;Codespace&lt;/a&gt; (&lt;em&gt;a browser-based, no installs needed environment&lt;/em&gt;), or locally on your computer using a text editor such as &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;Visual Studio Code&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Create your repository&lt;/h4&gt; 
&lt;p&gt;For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the &lt;strong&gt;Use this template&lt;/strong&gt; button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.&lt;/p&gt; 
&lt;p&gt;Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;: Click on the "Fork" button at the top-right corner of this page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;: &lt;code&gt;git clone https://github.com/microsoft/Web-Dev-For-Beginners.git&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Running the curriculum in a Codespace&lt;/h4&gt; 
&lt;p&gt;In your copy of this repository that you created, click the &lt;strong&gt;Code&lt;/strong&gt; button and select &lt;strong&gt;Open with Codespaces&lt;/strong&gt;. This will create a new Codespace for you to work in.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/createcodespace.png" alt="Codespace" /&gt;&lt;/p&gt; 
&lt;h4&gt;Running the curriculum locally on your computer&lt;/h4&gt; 
&lt;p&gt;To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages"&gt;Introduction to Programming Languages and Tools of the Trade&lt;/a&gt;, will walk you through various options for each of these tools for you to select what works best for you.&lt;/p&gt; 
&lt;p&gt;Our recommendation is to use &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;Visual Studio Code&lt;/a&gt; as your editor, which also has a built-in &lt;a href="https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon"&gt;Terminal&lt;/a&gt;. You can download Visual Studio Code &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone your repository to your computer. You can do this by clicking the &lt;strong&gt;Code&lt;/strong&gt; button and copying the URL:&lt;/p&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/createcodespace.png"&gt;CodeSpace&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Then, open &lt;a href="https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon"&gt;Terminal&lt;/a&gt; within &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;Visual Studio Code&lt;/a&gt; and run the following command, replacing &lt;code&gt;&amp;lt;your-repository-url&amp;gt;&lt;/code&gt; with the URL you just copied:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone &amp;lt;your-repository-url&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open the folder in Visual Studio Code. You can do this by clicking &lt;strong&gt;File&lt;/strong&gt; &amp;gt; &lt;strong&gt;Open Folder&lt;/strong&gt; and selecting the folder you just cloned.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Recommended Visual Studio Code extensions:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;amp;WT.mc_id=academic-77807-sagibbon"&gt;Live Server&lt;/a&gt; - to preview HTML pages within Visual Studio Code&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;amp;WT.mc_id=academic-77807-sagibbon"&gt;Copilot&lt;/a&gt; - to help you write code faster&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üìÇ Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ff-quizzes.netlify.app/web/"&gt;post-lesson quiz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are available &lt;a href="https://ff-quizzes.netlify.app/web/"&gt;here&lt;/a&gt; the quiz app can be run locally or deployed to Azure; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üóÉÔ∏è Lessons&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;Project Name&lt;/th&gt; 
   &lt;th align="center"&gt;Concepts Taught&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align="center"&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align="center"&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;01&lt;/td&gt; 
   &lt;td align="center"&gt;Getting Started&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to Programming and Tools of the Trade&lt;/td&gt; 
   &lt;td&gt;Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md"&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;02&lt;/td&gt; 
   &lt;td align="center"&gt;Getting Started&lt;/td&gt; 
   &lt;td align="center"&gt;Basics of GitHub, includes working with a team&lt;/td&gt; 
   &lt;td&gt;How to use GitHub in your project, how to collaborate with others on a code base&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md"&gt;Intro to GitHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;03&lt;/td&gt; 
   &lt;td align="center"&gt;Getting Started&lt;/td&gt; 
   &lt;td align="center"&gt;Accessibility&lt;/td&gt; 
   &lt;td&gt;Learn the basics of web accessibility&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md"&gt;Accessibility Fundamentals&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;04&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;JavaScript Data Types&lt;/td&gt; 
   &lt;td&gt;The basics of JavaScript data types&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md"&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;05&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;Functions and Methods&lt;/td&gt; 
   &lt;td&gt;Learn about functions and methods to manage an application's logic flow&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md"&gt;Functions and Methods&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine and Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;06&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;Making Decisions with JS&lt;/td&gt; 
   &lt;td&gt;Learn how to create conditions in your code using decision-making methods&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md"&gt;Making Decisions&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;07&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;Arrays and Loops&lt;/td&gt; 
   &lt;td&gt;Work with data using arrays and loops in JavaScript&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md"&gt;Arrays and Loops&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;08&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md"&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;HTML in Practice&lt;/td&gt; 
   &lt;td&gt;Build the HTML to create an online terrarium, focusing on building a layout&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md"&gt;Introduction to HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;09&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md"&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;CSS in Practice&lt;/td&gt; 
   &lt;td&gt;Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md"&gt;Introduction to CSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;10&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md"&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;JavaScript Closures, DOM manipulation&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md"&gt;JavaScript Closures, DOM manipulation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;11&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution/README.md"&gt;Typing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Build a Typing Game&lt;/td&gt; 
   &lt;td&gt;Learn how to use keyboard events to drive the logic of your JavaScript app&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md"&gt;Event-Driven Programming&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;12&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution/README.md"&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Working with Browsers&lt;/td&gt; 
   &lt;td&gt;Learn how browsers work, their history, and how to scaffold the first elements of a browser extension&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md"&gt;About Browsers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;13&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution/README.md"&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Building a form, calling an API and storing variables in local storage&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript elements of your browser extension to call an API using variables stored in local storage&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md"&gt;APIs, Forms, and Local Storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;14&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution/README.md"&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Background processes in the browser, web performance&lt;/td&gt; 
   &lt;td&gt;Use the browser's background processes to manage the extension's icon; learn about web performance and some optimizations to make&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md"&gt;Background Tasks and Performance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;15&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;More Advanced Game Development with JavaScript&lt;/td&gt; 
   &lt;td&gt;Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md"&gt;Introduction to Advanced Game Development&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;16&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Drawing to canvas&lt;/td&gt; 
   &lt;td&gt;Learn about the Canvas API, used to draw elements to a screen&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md"&gt;Drawing to Canvas&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;17&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Moving elements around the screen&lt;/td&gt; 
   &lt;td&gt;Discover how elements can gain motion using the cartesian coordinates and the Canvas API&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md"&gt;Moving Elements Around&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;18&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Collision detection&lt;/td&gt; 
   &lt;td&gt;Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md"&gt;Collision Detection&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;19&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Keeping score&lt;/td&gt; 
   &lt;td&gt;Perform math calculations based on the game's status and performance&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md"&gt;Keeping Score&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;20&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Ending and restarting the game&lt;/td&gt; 
   &lt;td&gt;Learn about ending and restarting the game, including cleaning up assets and resetting variable values&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md"&gt;The Ending Condition&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;21&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;HTML Templates and Routes in a Web App&lt;/td&gt; 
   &lt;td&gt;Learn how to create the scaffold of a multipage website's architecture using routing and HTML templates&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md"&gt;HTML Templates and Routes&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;22&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Build a Login and Registration Form&lt;/td&gt; 
   &lt;td&gt;Learn about building forms and handling validation routines&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md"&gt;Forms&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;23&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Methods of Fetching and Using Data&lt;/td&gt; 
   &lt;td&gt;How data flows in and out of your app, how to fetch it, store it, and dispose of it&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md"&gt;Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;24&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Concepts of State Management&lt;/td&gt; 
   &lt;td&gt;Learn how your app retains state and how to manage it programmatically&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md"&gt;State Management&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;25&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/8-code-editor/"&gt;Browser/VScode Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Working with VScode&lt;/td&gt; 
   &lt;td&gt;Learn how to Using a code editor&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/8-code-editor/1-using-a-code-editor/README.md"&gt;Use VScode Code Editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;26&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/9-chat-project/README.md"&gt;AI Assistants&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Working with AI&lt;/td&gt; 
   &lt;td&gt;Learn how to build your own AI assistant&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/9-chat-project/README.md"&gt;AI Assistant project&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üè´ Pedagogy&lt;/h2&gt; 
&lt;p&gt;Our curriculum is designed with two key pedagogical principles in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;project-based learning&lt;/li&gt; 
 &lt;li&gt;frequent quizzes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today's web developers. Students will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses. By the end of the series, students will have gained a solid understanding of web development.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üéì You can take the first few lessons in this curriculum as a &lt;a href="https://docs.microsoft.com/learn/paths/web-development-101/?WT.mc_id=academic-77807-sagibbon"&gt;Learn Path&lt;/a&gt; on Microsoft Learn!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with a video from the "&lt;a href="https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript/?WT.mc_id=academic-77807-sagibbon"&gt;Beginners Series to: JavaScript&lt;/a&gt;" collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12-week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: "&lt;a href="https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs/?WT.mc_id=academic-77807-sagibbon"&gt;Beginner Series to: Node.js&lt;/a&gt;".&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Visit our &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üß≠ Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href="https://docsify.js.org/#/"&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href="https://docsify.js.org/#/quickstart"&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;üìò PDF&lt;/h2&gt; 
&lt;p&gt;A PDF of all of the lessons can be found &lt;a href="https://microsoft.github.io/Web-Dev-For-Beginners/pdf/readme.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üéí Other Courses&lt;/h2&gt; 
&lt;p&gt;Our team produces other courses! Check out:&lt;/p&gt; 
&lt;!-- CO-OP TRANSLATOR OTHER COURSES START --&gt; 
&lt;h3&gt;Azure / Edge / MCP / Agents&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/microsoft/AZD-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/AZD%20for%20Beginners-0078D4?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=0078D4" alt="AZD for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/edgeai-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Edge%20AI%20for%20Beginners-00B8E4?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=00B8E4" alt="Edge AI for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/mcp-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/MCP%20for%20Beginners-009688?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=009688" alt="MCP for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/ai-agents-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/AI%20Agents%20for%20Beginners-00C49A?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=00C49A" alt="AI Agents for Beginners" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Generative AI Series&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/microsoft/generative-ai-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Generative%20AI%20for%20Beginners-8B5CF6?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=8B5CF6" alt="Generative AI for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/Generative-AI-for-beginners-dotnet?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Generative%20AI%20(.NET)-9333EA?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=9333EA" alt="Generative AI (.NET)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/generative-ai-for-beginners-java?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Generative%20AI%20(Java)-C084FC?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=C084FC" alt="Generative AI (Java)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/generative-ai-with-javascript?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Generative%20AI%20(JavaScript)-E879F9?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=E879F9" alt="Generative AI (JavaScript)" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Core Learning&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/ml-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/ML%20for%20Beginners-22C55E?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=22C55E" alt="ML for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://aka.ms/datascience-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Data%20Science%20for%20Beginners-84CC16?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=84CC16" alt="Data Science for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://aka.ms/ai-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/AI%20for%20Beginners-A3E635?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=A3E635" alt="AI for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/Security-101?WT.mc_id=academic-96948-sayoung"&gt;&lt;img src="https://img.shields.io/badge/Cybersecurity%20for%20Beginners-F97316?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=F97316" alt="Cybersecurity for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://aka.ms/webdev-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Web%20Dev%20for%20Beginners-EC4899?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=EC4899" alt="Web Dev for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://aka.ms/iot-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/IoT%20for%20Beginners-14B8A6?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=14B8A6" alt="IoT for Beginners" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/xr-development-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/XR%20Development%20for%20Beginners-38BDF8?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=38BDF8" alt="XR Development for Beginners" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Copilot Series&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/GitHubCopilotAI?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Copilot%20for%20AI%20Paired%20Programming-FACC15?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=FACC15" alt="Copilot for AI Paired Programming" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Copilot%20for%20C%23/.NET-FBBF24?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=FBBF24" alt="Copilot for C#/.NET" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/CopilotAdventures?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/Copilot%20Adventure-FDE68A?style=for-the-badge&amp;amp;labelColor=E5E7EB&amp;amp;color=FDE68A" alt="Copilot Adventure" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- CO-OP TRANSLATOR OTHER COURSES END --&gt; 
&lt;h2&gt;Getting Help&lt;/h2&gt; 
&lt;p&gt;If you get stuck or have any questions about building AI apps, join:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/foundry/discord"&gt;&lt;img src="https://img.shields.io/badge/Discord-Azure_AI_Foundry_Community_Discord-blue?style=for-the-badge&amp;amp;logo=discord&amp;amp;color=5865f2&amp;amp;logoColor=fff" alt="Azure AI Foundry Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you have product feedback or errors while building visit:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/foundry/forum"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Azure_AI_Foundry_Developer_Forum-blue?style=for-the-badge&amp;amp;logo=github&amp;amp;color=000000&amp;amp;logoColor=fff" alt="Azure AI Foundry Developer Forum" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the MIT license. See the &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>allenai/olmocr</title>
      <link>https://github.com/allenai/olmocr</link>
      <description>&lt;p&gt;Toolkit for linearizing PDFs for LLM datasets/training&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img width="350" alt="olmocr-2-full@2x" src="https://github.com/user-attachments/assets/24f1b596-4059-46f1-8130-5d72dcc0b02e" /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/allenai/OLMo/raw/main/LICENSE"&gt; &lt;img alt="GitHub License" src="https://img.shields.io/github/license/allenai/OLMo" /&gt; &lt;/a&gt; &lt;a href="https://github.com/allenai/olmocr/releases"&gt; &lt;img alt="GitHub release" src="https://img.shields.io/github/release/allenai/olmocr.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://arxiv.org/abs/2502.18443"&gt; &lt;img alt="Tech Report v1" src="https://img.shields.io/badge/Paper_v1-olmOCR-blue" /&gt; &lt;/a&gt; &lt;a href="https://arxiv.org/abs/2510.19817"&gt; &lt;img alt="Tech Report v2" src="https://img.shields.io/badge/Paper_v2-olmOCR-blue" /&gt; &lt;/a&gt; &lt;a href="https://olmocr.allenai.org"&gt; &lt;img alt="Demo" src="https://img.shields.io/badge/Ai2-Demo-F0529C" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/sZq3jTNVNG"&gt; &lt;img alt="Discord" src="https://img.shields.io/badge/Discord%20-%20blue?style=flat&amp;amp;logo=discord&amp;amp;label=Ai2&amp;amp;color=%235B65E9" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;A toolkit for converting PDFs and other image-based document formats into clean, readable, plain text format.&lt;/p&gt; 
&lt;p&gt;Try the online demo: &lt;a href="https://olmocr.allenai.org/"&gt;https://olmocr.allenai.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Convert PDF, PNG, and JPEG based documents into clean Markdown&lt;/li&gt; 
 &lt;li&gt;Support for equations, tables, handwriting, and complex formatting&lt;/li&gt; 
 &lt;li&gt;Automatically removes headers and footers&lt;/li&gt; 
 &lt;li&gt;Convert into text with a natural reading order, even in the presence of figures, multi-column layouts, and insets&lt;/li&gt; 
 &lt;li&gt;Efficient, less than $200 USD per million pages converted&lt;/li&gt; 
 &lt;li&gt;(Based on a 7B parameter VLM, so it requires a GPU)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;News&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;October 21, 2025 - v0.4.0 - &lt;a href="https://huggingface.co/allenai/olmOCR-2-7B-1025-FP8"&gt;New model release&lt;/a&gt;, boosts olmOCR-bench score by ~4 points using synthetic data and introduces RL training.&lt;/li&gt; 
 &lt;li&gt;August 13, 2025 - v0.3.0 - &lt;a href="https://huggingface.co/allenai/olmOCR-7B-0825-FP8"&gt;New model release&lt;/a&gt;, fixes auto-rotation detection, and hallucinations on blank documents.&lt;/li&gt; 
 &lt;li&gt;July 24, 2025 - v0.2.1 - &lt;a href="https://huggingface.co/allenai/olmOCR-7B-0725-FP8"&gt;New model release&lt;/a&gt;, scores 3 points higher on &lt;a href="https://github.com/allenai/olmocr/tree/main/olmocr/bench"&gt;olmOCR-Bench&lt;/a&gt;, also runs significantly faster because it's default FP8, and needs much fewer retries per document.&lt;/li&gt; 
 &lt;li&gt;July 23, 2025 - v0.2.0 - New cleaned up &lt;a href="https://github.com/allenai/olmocr/tree/main/olmocr/train"&gt;trainer code&lt;/a&gt;, makes it much simpler to train olmOCR models yourself.&lt;/li&gt; 
 &lt;li&gt;June 17, 2025 - v0.1.75 - Switch from sglang to vllm based inference pipeline, updated docker image to CUDA 12.8.&lt;/li&gt; 
 &lt;li&gt;May 23, 2025 - v0.1.70 - Official docker support and images are now available! &lt;a href="https://raw.githubusercontent.com/allenai/olmocr/main/#using-docker"&gt;See Docker usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;May 19, 2025 - v0.1.68 - &lt;a href="https://github.com/allenai/olmocr/tree/main/olmocr/bench"&gt;olmOCR-Bench&lt;/a&gt; launch, scoring 77.4. Launch includes 2 point performance boost in olmOCR pipeline due to bug fixes with prompts.&lt;/li&gt; 
 &lt;li&gt;Mar 17, 2025 - v0.1.60 - Performance improvements due to better temperature selection in sampling.&lt;/li&gt; 
 &lt;li&gt;Feb 25, 2025 - v0.1.58 - Initial public launch and demo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Benchmark&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/allenai/olmocr/tree/main/olmocr/bench"&gt;&lt;strong&gt;olmOCR-Bench&lt;/strong&gt;&lt;/a&gt;: We also ship a comprehensive benchmark suite covering over 7,000 test cases across 1,400 documents to help measure performance of OCR systems.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;ArXiv&lt;/th&gt; 
   &lt;th&gt;Old&lt;br /&gt;scans&lt;br /&gt;math&lt;/th&gt; 
   &lt;th&gt;Tables&lt;/th&gt; 
   &lt;th&gt;Old&lt;br /&gt;scans&lt;/th&gt; 
   &lt;th&gt;Headers&lt;br /&gt;&amp;amp;&lt;br /&gt;footers&lt;/th&gt; 
   &lt;th&gt;Multi&lt;br /&gt;column&lt;/th&gt; 
   &lt;th&gt;Long&lt;br /&gt;tiny&lt;br /&gt;text&lt;/th&gt; 
   &lt;th&gt;Base&lt;/th&gt; 
   &lt;th&gt;Overall&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral OCR API&lt;/td&gt; 
   &lt;td&gt;77.2&lt;/td&gt; 
   &lt;td&gt;67.5&lt;/td&gt; 
   &lt;td&gt;60.6&lt;/td&gt; 
   &lt;td&gt;29.3&lt;/td&gt; 
   &lt;td&gt;93.6&lt;/td&gt; 
   &lt;td&gt;71.3&lt;/td&gt; 
   &lt;td&gt;77.1&lt;/td&gt; 
   &lt;td&gt;99.4&lt;/td&gt; 
   &lt;td&gt;72.0¬±1.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Marker 1.10.1&lt;/td&gt; 
   &lt;td&gt;83.8&lt;/td&gt; 
   &lt;td&gt;66.8&lt;/td&gt; 
   &lt;td&gt;72.9&lt;/td&gt; 
   &lt;td&gt;33.5&lt;/td&gt; 
   &lt;td&gt;86.6&lt;/td&gt; 
   &lt;td&gt;80.0&lt;/td&gt; 
   &lt;td&gt;85.7&lt;/td&gt; 
   &lt;td&gt;99.3&lt;/td&gt; 
   &lt;td&gt;76.1¬±1.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MinerU 2.5.4*&lt;/td&gt; 
   &lt;td&gt;76.6&lt;/td&gt; 
   &lt;td&gt;54.6&lt;/td&gt; 
   &lt;td&gt;84.9&lt;/td&gt; 
   &lt;td&gt;33.7&lt;/td&gt; 
   &lt;td&gt;96.6&lt;/td&gt; 
   &lt;td&gt;78.2&lt;/td&gt; 
   &lt;td&gt;83.5&lt;/td&gt; 
   &lt;td&gt;93.7&lt;/td&gt; 
   &lt;td&gt;75.2¬±1.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-OCR&lt;/td&gt; 
   &lt;td&gt;77.2&lt;/td&gt; 
   &lt;td&gt;73.6&lt;/td&gt; 
   &lt;td&gt;80.2&lt;/td&gt; 
   &lt;td&gt;33.3&lt;/td&gt; 
   &lt;td&gt;96.1&lt;/td&gt; 
   &lt;td&gt;66.4&lt;/td&gt; 
   &lt;td&gt;79.4&lt;/td&gt; 
   &lt;td&gt;99.8&lt;/td&gt; 
   &lt;td&gt;75.7¬±1.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nanonets-OCR2-3B&lt;/td&gt; 
   &lt;td&gt;75.4&lt;/td&gt; 
   &lt;td&gt;46.1&lt;/td&gt; 
   &lt;td&gt;86.8&lt;/td&gt; 
   &lt;td&gt;40.9&lt;/td&gt; 
   &lt;td&gt;32.1&lt;/td&gt; 
   &lt;td&gt;81.9&lt;/td&gt; 
   &lt;td&gt;93.0&lt;/td&gt; 
   &lt;td&gt;99.6&lt;/td&gt; 
   &lt;td&gt;69.5¬±1.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PaddleOCR-VL*&lt;/td&gt; 
   &lt;td&gt;85.7&lt;/td&gt; 
   &lt;td&gt;71.0&lt;/td&gt; 
   &lt;td&gt;84.1&lt;/td&gt; 
   &lt;td&gt;37.8&lt;/td&gt; 
   &lt;td&gt;97.0&lt;/td&gt; 
   &lt;td&gt;79.9&lt;/td&gt; 
   &lt;td&gt;85.7&lt;/td&gt; 
   &lt;td&gt;98.5&lt;/td&gt; 
   &lt;td&gt;80.0¬±1.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Infinity-Parser 7B*&lt;/td&gt; 
   &lt;td&gt;84.4&lt;/td&gt; 
   &lt;td&gt;83.8&lt;/td&gt; 
   &lt;td&gt;85.0&lt;/td&gt; 
   &lt;td&gt;47.9&lt;/td&gt; 
   &lt;td&gt;88.7&lt;/td&gt; 
   &lt;td&gt;84.2&lt;/td&gt; 
   &lt;td&gt;86.4&lt;/td&gt; 
   &lt;td&gt;99.8&lt;/td&gt; 
   &lt;td&gt;82.5¬±?&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chandra OCR 0.1.0*&lt;/td&gt; 
   &lt;td&gt;82.2&lt;/td&gt; 
   &lt;td&gt;80.3&lt;/td&gt; 
   &lt;td&gt;88.0&lt;/td&gt; 
   &lt;td&gt;50.4&lt;/td&gt; 
   &lt;td&gt;90.8&lt;/td&gt; 
   &lt;td&gt;81.2&lt;/td&gt; 
   &lt;td&gt;92.3&lt;/td&gt; 
   &lt;td&gt;99.9&lt;/td&gt; 
   &lt;td&gt;83.1¬±0.9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td colspan="10"&gt;
    &lt;hr /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;olmOCR v0.4.0&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;83.0&lt;/td&gt; 
   &lt;td&gt;82.3&lt;/td&gt; 
   &lt;td&gt;84.9&lt;/td&gt; 
   &lt;td&gt;47.7&lt;/td&gt; 
   &lt;td&gt;96.1&lt;/td&gt; 
   &lt;td&gt;83.7&lt;/td&gt; 
   &lt;td&gt;81.9&lt;/td&gt; 
   &lt;td&gt;99.7&lt;/td&gt; 
   &lt;td&gt;82.4¬±1.1&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Recent NVIDIA GPU (tested on RTX 4090, L40S, A100, H100) with at least 15 GB of GPU RAM&lt;/li&gt; 
 &lt;li&gt;30GB of free disk space&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You will need to install poppler-utils and additional fonts for rendering PDF images.&lt;/p&gt; 
&lt;p&gt;Install dependencies (Ubuntu/Debian)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install poppler-utils ttf-mscorefonts-installer msttcorefonts fonts-crosextra-caladea fonts-crosextra-carlito gsfonts lcdf-typetools
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Set up a conda environment and install olmocr. The requirements for running olmOCR are difficult to install in an existing python environment, so please do make a clean python environment to install into.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;conda create -n olmocr python=3.11
conda activate olmocr

# For CPU-only operations, ex running the benchmark
pip install olmocr[bench]

# For actually converting the files with your own GPU
pip install olmocr[gpu]  --extra-index-url https://download.pytorch.org/whl/cu128

# Recommended: Install flash infer for faster inference on GPU
pip install https://download.pytorch.org/whl/cu128/flashinfer/flashinfer_python-0.2.5%2Bcu128torch2.7-cp38-abi3-linux_x86_64.whl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Local Usage Example&lt;/h3&gt; 
&lt;p&gt;For quick testing, try the &lt;a href="https://olmocr.allen.ai/"&gt;web demo&lt;/a&gt;. To run locally, a GPU is required, as inference is powered by &lt;a href="https://github.com/sgl-project/sglang"&gt;sglang&lt;/a&gt; under the hood.&lt;/p&gt; 
&lt;p&gt;Convert a Single PDF:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Download a sample PDF
curl -o olmocr-sample.pdf https://olmocr.allenai.org/papers/olmocr_3pg_sample.pdf

# Convert it to markdown
python -m olmocr.pipeline ./localworkspace --markdown --pdfs olmocr-sample.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Convert an Image file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m olmocr.pipeline ./localworkspace --markdown --pdfs random_page.png
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Convert Multiple PDFs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m olmocr.pipeline ./localworkspace --markdown --pdfs tests/gnarly_pdfs/*.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the addition of the &lt;code&gt;--markdown&lt;/code&gt; flag, results will be stored as markdown files inside of &lt;code&gt;./localworkspace/markdown/&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Viewing Results&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;./localworkspace/&lt;/code&gt; workspace folder will then have both &lt;a href="https://github.com/allenai/dolma"&gt;Dolma&lt;/a&gt; and markdown files (if using &lt;code&gt;--markdown&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cat localworkspace/markdown/olmocr-sample.md 
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;olmOCR: Unlocking Trillions of Tokens in PDFs with Vision Language Models
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using an Inference Provider or External Server&lt;/h3&gt; 
&lt;p&gt;If you have a vLLM server already running elsewhere (or any inference platform implementing the OpenAI API), you can point olmOCR to use it instead of spawning a local instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Use external vLLM server instead of local one
python -m olmocr.pipeline ./localworkspace --server http://remote-server:8000/v1 --markdown --pdfs tests/gnarly_pdfs/*.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The served model name should be &lt;code&gt;olmocr&lt;/code&gt;. An example vLLM launch command would be:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;vllm serve allenai/olmOCR-2-7B-1025-FP8 --served-model-name olmocr --max-model-len 16384
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Verified External Providers&lt;/h4&gt; 
&lt;p&gt;We have tested &lt;code&gt;olmOCR-2-7B-1025-FP8&lt;/code&gt; on these external model providers and confirmed that they work&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;$/1M Input tokens&lt;/th&gt; 
   &lt;th&gt;$/1M Output tokens&lt;/th&gt; 
   &lt;th&gt;Example Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ai2endpoints.cirrascale.ai/models/overview"&gt;Cirrascale&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;$0.07&lt;/td&gt; 
   &lt;td&gt;$0.15&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;python -m olmocr.pipeline ./localworkspace1 --server https://ai2endpoints.cirrascale.ai/api --api_key sk-XXXXXXX --model olmOCR-2-7B-1025 --pdfs tests/gnarly_pdfs/*.pdf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://deepinfra.com/"&gt;DeepInfra&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;$0.09&lt;/td&gt; 
   &lt;td&gt;$0.19&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;python -m olmocr.pipeline ./localworkspace1 --server https://api.deepinfra.com/v1/openai --api_key DfXXXXXXX --model allenai/olmOCR-2-7B-1025 --pdfs tests/gnarly_pdfs/*.pdf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.saas.parasail.io/serverless?name=olmocr-7b-1025-fp8"&gt;Parasail&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;$0.10&lt;/td&gt; 
   &lt;td&gt;$0.20&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;python -m olmocr.pipeline ./localworkspace1 --server https://api.parasail.io/v1 --api_key psk-XXXXX --model allenai/olmOCR-2-7B-1025 --pdfs tests/gnarly_pdfs/*.pdf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Notes on arguments&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--server&lt;/code&gt;: Defines the OpenAI-compatible endpoint: ex &lt;code&gt;https://api.deepinfra.com/v1/openai&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--api_key&lt;/code&gt;: Your API key, bassed in via Authorization Bearer HTTP header&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--pages_per_group&lt;/code&gt;: You may want a smaller number of pages per group as many external provides have lower concurrent request limits&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--model&lt;/code&gt;: The model identifier, ex. &lt;code&gt;allenai/olmOCR-2-7B-1025&lt;/code&gt;, different providers have different names, and if you run locally, you can use &lt;code&gt;olmocr&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Other arguments work the same as with local inference&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Multi-node / Cluster Usage&lt;/h3&gt; 
&lt;p&gt;If you want to convert millions of PDFs, using multiple nodes running in parallel, then olmOCR supports reading your PDFs from AWS S3, and coordinating work using an AWS S3 output bucket.&lt;/p&gt; 
&lt;p&gt;For example, you can start this command on your first worker node, and it will set up a simple work queue in your AWS bucket and start converting PDFs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m olmocr.pipeline s3://my_s3_bucket/pdfworkspaces/exampleworkspace --pdfs s3://my_s3_bucket/jakep/gnarly_pdfs/*.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now on any subsequent nodes, just run this and they will start grabbing items from the same workspace queue.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m olmocr.pipeline s3://my_s3_bucket/pdfworkspaces/exampleworkspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are at Ai2 and want to linearize millions of PDFs efficiently using &lt;a href="https://www.beaker.org"&gt;beaker&lt;/a&gt;, just add the &lt;code&gt;--beaker&lt;/code&gt; flag. This will prepare the workspace on your local machine, and then launch N GPU workers in the cluster to start converting PDFs.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m olmocr.pipeline s3://my_s3_bucket/pdfworkspaces/exampleworkspace --pdfs s3://my_s3_bucket/jakep/gnarly_pdfs/*.pdf --beaker --beaker_gpus 4
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;Pull the Docker image.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull alleninstituteforai/olmocr:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run the container interactively:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --gpus all --name olmocr_container alleninstituteforai/olmocr:latest /bin/bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to access your local files inside the container, use volume mounting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --gpus all \
  -v /path/to/your/local/files:/local_files \
  --name olmocr_container \
  alleninstituteforai/olmocr:latest /bin/bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All dependencies are already installed. Once you‚Äôre inside the container, you can run olmOCR commands. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -o olmocr-sample.pdf https://olmocr.allenai.org/papers/olmocr_3pg_sample.pdf

python -m olmocr.pipeline ./localworkspace --markdown --pdfs olmocr-sample.pdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You can also visit our Docker repository on &lt;a href="https://hub.docker.com/r/alleninstituteforai/olmocr"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Full documentation for the pipeline&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m olmocr.pipeline --help
usage: pipeline.py [-h] [--pdfs [PDFS ...]] [--model MODEL] [--workspace_profile WORKSPACE_PROFILE] [--pdf_profile PDF_PROFILE] [--pages_per_group PAGES_PER_GROUP] [--max_page_retries MAX_PAGE_RETRIES] [--max_page_error_rate MAX_PAGE_ERROR_RATE] [--workers WORKERS]
                   [--apply_filter] [--stats] [--markdown] [--target_longest_image_dim TARGET_LONGEST_IMAGE_DIM] [--target_anchor_text_len TARGET_ANCHOR_TEXT_LEN] [--guided_decoding] [--gpu-memory-utilization GPU_MEMORY_UTILIZATION] [--max_model_len MAX_MODEL_LEN]
                   [--tensor-parallel-size TENSOR_PARALLEL_SIZE] [--data-parallel-size DATA_PARALLEL_SIZE] [--port PORT] [--server SERVER] [--beaker] [--beaker_workspace BEAKER_WORKSPACE] [--beaker_cluster BEAKER_CLUSTER] [--beaker_gpus BEAKER_GPUS] [--beaker_priority BEAKER_PRIORITY]
                   workspace

Manager for running millions of PDFs through a batch inference pipeline

positional arguments:
  workspace             The filesystem path where work will be stored, can be a local folder, or an s3 path if coordinating work with many workers, s3://bucket/prefix/

options:
  -h, --help            show this help message and exit
  --pdfs [PDFS ...]     Path to add pdfs stored in s3 to the workspace, can be a glob path s3://bucket/prefix/*.pdf or path to file containing list of pdf paths
  --model MODEL         Path where the model is located, allenai/olmOCR-7B-0725-FP8 is the default, can be local, s3, or hugging face.
  --workspace_profile WORKSPACE_PROFILE
                        S3 configuration profile for accessing the workspace
  --pdf_profile PDF_PROFILE
                        S3 configuration profile for accessing the raw pdf documents
  --pages_per_group PAGES_PER_GROUP
                        Aiming for this many pdf pages per work item group
  --max_page_retries MAX_PAGE_RETRIES
                        Max number of times we will retry rendering a page
  --max_page_error_rate MAX_PAGE_ERROR_RATE
                        Rate of allowable failed pages in a document, 1/250 by default
  --workers WORKERS     Number of workers to run at a time
  --apply_filter        Apply basic filtering to English pdfs which are not forms, and not likely seo spam
  --stats               Instead of running any job, reports some statistics about the current workspace
  --markdown            Also write natural text to markdown files preserving the folder structure of the input pdfs
  --target_longest_image_dim TARGET_LONGEST_IMAGE_DIM
                        Dimension on longest side to use for rendering the pdf pages
  --target_anchor_text_len TARGET_ANCHOR_TEXT_LEN
                        Maximum amount of anchor text to use (characters), not used for new models
  --guided_decoding     Enable guided decoding for model YAML type outputs

VLLM arguments:
  --gpu-memory-utilization GPU_MEMORY_UTILIZATION
                        Fraction of VRAM vLLM may pre-allocate for KV-cache (passed through to vllm serve).
  --max_model_len MAX_MODEL_LEN
                        Upper bound (tokens) vLLM will allocate KV-cache for, lower if VLLM won't start
  --tensor-parallel-size TENSOR_PARALLEL_SIZE, -tp TENSOR_PARALLEL_SIZE
                        Tensor parallel size for vLLM
  --data-parallel-size DATA_PARALLEL_SIZE, -dp DATA_PARALLEL_SIZE
                        Data parallel size for vLLM
  --port PORT           Port to use for the VLLM server
  --server SERVER       URL of external vLLM (or other compatible provider)
                        server (e.g., http://hostname:port). If provided,
                        skips spawning local vLLM instance

beaker/cluster execution:
  --beaker              Submit this job to beaker instead of running locally
  --beaker_workspace BEAKER_WORKSPACE
                        Beaker workspace to submit to
  --beaker_cluster BEAKER_CLUSTER
                        Beaker clusters you want to run on
  --beaker_gpus BEAKER_GPUS
                        Number of gpu replicas to run
  --beaker_priority BEAKER_PRIORITY
                        Beaker priority level for the job
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Code overview&lt;/h2&gt; 
&lt;p&gt;There are some nice reusable pieces of the code that may be useful for your own projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A prompting strategy to get really good natural text parsing using ChatGPT 4o - &lt;a href="https://github.com/allenai/olmocr/raw/main/olmocr/data/buildsilver.py"&gt;buildsilver.py&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Basic filtering by language and SEO spam removal - &lt;a href="https://github.com/allenai/olmocr/raw/main/olmocr/filter/filter.py"&gt;filter.py&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SFT Finetuning code for Qwen2.5-VL - &lt;a href="https://github.com/allenai/olmocr/raw/main/olmocr/train/train.py"&gt;train.py&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GRPO RL Trainer - &lt;a href="https://github.com/allenai/olmocr/raw/main/olmocr/train/grpo_train.py"&gt;grpo_train.py&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Synthetic data generation - &lt;a href="https://github.com/allenai/olmocr/raw/main/olmocr/bench/synth/mine_html_templates.py"&gt;mine_html_templates.py&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Processing millions of PDFs through a finetuned model using VLLM - &lt;a href="https://github.com/allenai/olmocr/raw/main/olmocr/pipeline.py"&gt;pipeline.py&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Viewing &lt;a href="https://github.com/allenai/dolma"&gt;Dolma docs&lt;/a&gt; created from PDFs - &lt;a href="https://github.com/allenai/olmocr/raw/main/olmocr/viewer/dolmaviewer.py"&gt;dolmaviewer.py&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;!-- start team --&gt; 
&lt;p&gt;&lt;strong&gt;olmOCR&lt;/strong&gt; is developed and maintained by the AllenNLP team, backed by &lt;a href="https://allenai.org/"&gt;the Allen Institute for Artificial Intelligence (AI2)&lt;/a&gt;. AI2 is a non-profit institute with the mission to contribute to humanity through high-impact AI research and engineering. To learn more about who specifically contributed to this codebase, see &lt;a href="https://github.com/allenai/olmocr/graphs/contributors"&gt;our contributors&lt;/a&gt; page.&lt;/p&gt; 
&lt;!-- end team --&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;!-- start license --&gt; 
&lt;p&gt;&lt;strong&gt;olmOCR&lt;/strong&gt; is licensed under &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0&lt;/a&gt;. A full copy of the license can be found &lt;a href="https://github.com/allenai/olmocr/raw/main/LICENSE"&gt;on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- end license --&gt; 
&lt;h2&gt;Citing&lt;/h2&gt; 
&lt;p&gt;For olmOCR v1 and OlmOCR-bench:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{olmocrbench,
      title={{olmOCR: Unlocking Trillions of Tokens in PDFs with Vision Language Models}},
      author={Jake Poznanski and Jon Borchardt and Jason Dunkelberger and Regan Huff and Daniel Lin and Aman Rangapur and Christopher Wilhelm and Kyle Lo and Luca Soldaini},
      year={2025},
      eprint={2502.18443},
      archivePrefix={arXiv},
      primaryClass={cs.CL},
      url={https://arxiv.org/abs/2502.18443},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For olmOCR v2 Unit Testing Rewards with RL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{olmocr2,
      title={olmOCR 2: Unit Test Rewards for Document OCR}, 
      author={Jake Poznanski and Luca Soldaini and Kyle Lo},
      year={2025},
      eprint={2510.19817},
      archivePrefix={arXiv},
      primaryClass={cs.CV},
      url={https://arxiv.org/abs/2510.19817}, 
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>janhq/jan</title>
      <link>https://github.com/janhq/jan</link>
      <description>&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Open-source ChatGPT replacement&lt;/h1&gt; 
&lt;img width="2048" height="280" alt="github jan banner" src="https://github.com/user-attachments/assets/f3f87889-c133-433b-b250-236218150d3f" /&gt; 
&lt;p align="center"&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/janhq/jan" /&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/janhq/jan" /&gt; &lt;img alt="Github Contributors" src="https://img.shields.io/github/contributors/janhq/jan" /&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/janhq/jan" /&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.jan.ai/docs/desktop"&gt;Getting Started&lt;/a&gt; - &lt;a href="https://discord.gg/Exe46xPMbK"&gt;Community&lt;/a&gt; - &lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - &lt;a href="https://github.com/janhq/jan/issues"&gt;Bug reports&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jan is bringing the best of open-source AI in an easy-to-use product. Download and run LLMs with &lt;strong&gt;full control&lt;/strong&gt; and &lt;strong&gt;privacy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started is by downloading one of the following versions for your respective operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Download&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;macOS&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (deb)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (AppImage)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Download from &lt;a href="https://jan.ai/"&gt;jan.ai&lt;/a&gt; or &lt;a href="https://github.com/janhq/jan/releases"&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local AI Models&lt;/strong&gt;: Download and run LLMs (Llama, Gemma, Qwen, GPT-oss etc.) from HuggingFace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Integration&lt;/strong&gt;: Connect to GPT models via OpenAI, Claude models via Anthropic, Mistral, Groq, and others&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Assistants&lt;/strong&gt;: Create specialized AI assistants for your tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI-Compatible API&lt;/strong&gt;: Local server at &lt;code&gt;localhost:1337&lt;/code&gt; for other applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: MCP integration for agentic capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt;: Everything runs locally when you want it to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;For those who enjoy the scenic route:&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js ‚â• 20.0.0&lt;/li&gt; 
 &lt;li&gt;Yarn ‚â• 1.22.0&lt;/li&gt; 
 &lt;li&gt;Make ‚â• 3.81&lt;/li&gt; 
 &lt;li&gt;Rust (for Tauri)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/janhq/jan
cd jan
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This handles everything: installs dependencies, builds core components, and launches the app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available make targets:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn build:tauri:plugin:api
yarn build:core
yarn build:extensions
yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Minimum specs for a decent experience:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 13.6+ (8GB RAM for 3B models, 16GB for 7B, 32GB for 13B)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 10+ with GPU support for NVIDIA/AMD/Intel Arc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Most distributions work, GPU acceleration available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed compatibility, check our &lt;a href="https://jan.ai/docs/desktop/mac"&gt;installation guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If things go sideways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check our &lt;a href="https://jan.ai/docs/troubleshooting"&gt;troubleshooting docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy your error logs and system specs&lt;/li&gt; 
 &lt;li&gt;Ask for help in our &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; &lt;code&gt;#üÜò|jan-help&lt;/code&gt; channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions welcome. See &lt;a href="https://raw.githubusercontent.com/janhq/jan/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for the full spiel.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/docs"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/api-reference"&gt;API Reference&lt;/a&gt; - For the technically inclined&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/janhq/jan/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@jan.ai"&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:hr@jan.ai"&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 - Because sharing is caring.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Built on the shoulders of giants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scalar/scalar"&gt;Scalar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>