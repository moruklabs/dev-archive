<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Fri, 31 Oct 2025 01:38:03 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>cjpais/Handy</title>
      <link>https://github.com/cjpais/Handy</link>
      <description>&lt;p&gt;A free, open source, and extensible speech-to-text application that works completely offline.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Handy&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://discord.com/invite/WVBeWsNXK4"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A free, open source, and extensible speech-to-text application that works completely offline.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Handy is a cross-platform desktop application built with Tauri (Rust + React/TypeScript) that provides simple, privacy-focused speech transcription. Press a shortcut, speak, and have your words appear in any text field—all without sending your voice to the cloud.&lt;/p&gt; 
&lt;h2&gt;Why Handy?&lt;/h2&gt; 
&lt;p&gt;Handy was created to fill the gap for a truly open source, extensible speech-to-text tool. As stated on &lt;a href="https://handy.computer"&gt;handy.computer&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free&lt;/strong&gt;: Accessibility tooling belongs in everyone's hands, not behind a paywall&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;: Together we can build further. Extend Handy for yourself and contribute to something bigger&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Private&lt;/strong&gt;: Your voice stays on your computer. Get transcriptions without sending audio to the cloud&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: One tool, one job. Transcribe what you say and put it into a text box&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Handy isn't trying to be the best speech-to-text app—it's trying to be the most forkable one.&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Press&lt;/strong&gt; a configurable keyboard shortcut to start/stop recording (or use push-to-talk mode)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Speak&lt;/strong&gt; your words while the shortcut is active&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Release&lt;/strong&gt; and Handy processes your speech using Whisper&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Get&lt;/strong&gt; your transcribed text pasted directly into whatever app you're using&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The process is entirely local:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Silence is filtered using VAD (Voice Activity Detection) with Silero&lt;/li&gt; 
 &lt;li&gt;Transcription uses your choice of models: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Whisper models&lt;/strong&gt; (Small/Medium/Turbo/Large) with GPU acceleration when available&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Parakeet V3&lt;/strong&gt; - CPU-optimized model with excellent performance and automatic language detection&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Works on Windows, macOS, and Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the latest release from the &lt;a href="https://github.com/cjpais/Handy/releases"&gt;releases page&lt;/a&gt; or the &lt;a href="https://handy.computer"&gt;website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install the application following platform-specific instructions&lt;/li&gt; 
 &lt;li&gt;Launch Handy and grant necessary system permissions (microphone, accessibility)&lt;/li&gt; 
 &lt;li&gt;Configure your preferred keyboard shortcuts in Settings&lt;/li&gt; 
 &lt;li&gt;Start transcribing!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Development Setup&lt;/h3&gt; 
&lt;p&gt;For detailed build instructions including platform-specific requirements, see &lt;a href="https://raw.githubusercontent.com/cjpais/Handy/main/BUILD.md"&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Handy is built as a Tauri application combining:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: React + TypeScript with Tailwind CSS for the settings UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Rust for system integration, audio processing, and ML inference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Core Libraries&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;whisper-rs&lt;/code&gt;: Local speech recognition with Whisper models&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;transcription-rs&lt;/code&gt;: CPU-optimized speech recognition with Parakeet models&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cpal&lt;/code&gt;: Cross-platform audio I/O&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;vad-rs&lt;/code&gt;: Voice Activity Detection&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;rdev&lt;/code&gt;: Global keyboard shortcuts and system events&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;rubato&lt;/code&gt;: Audio resampling&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debug Mode&lt;/h3&gt; 
&lt;p&gt;Handy includes an advanced debug mode for development and troubleshooting. Access it by pressing:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;Cmd+Shift+D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows/Linux&lt;/strong&gt;: &lt;code&gt;Ctrl+Shift+D&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues &amp;amp; Current Limitations&lt;/h2&gt; 
&lt;p&gt;This project is actively being developed and has some &lt;a href="https://github.com/cjpais/Handy/issues"&gt;known issues&lt;/a&gt;. We believe in transparency about the current state:&lt;/p&gt; 
&lt;h3&gt;Platform Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS (both Intel and Apple Silicon)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;x64 Windows&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;x64 Linux&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Requirements/Recommendations&lt;/h3&gt; 
&lt;p&gt;The following are recommendations for running Handy on your own machine. If you don't meet the system requirements, the performance of the application may be degraded. We are working on improving the performance across all kinds of computers and hardware.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For Whisper Models:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: M series Mac, Intel Mac&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Intel, AMD, or NVIDIA GPU&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Intel, AMD, or NVIDIA GPU 
  &lt;ul&gt; 
   &lt;li&gt;Ubuntu 22.04, 24.04&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;For Parakeet V3 Model:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CPU-only operation&lt;/strong&gt; - runs on a wide variety of hardware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Minimum&lt;/strong&gt;: Intel Skylake (6th gen) or equivalent AMD processors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: ~5x real-time speed on mid-range hardware (tested on i5)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic language detection&lt;/strong&gt; - no manual language selection required&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How to Contribute&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Check existing issues&lt;/strong&gt; at &lt;a href="https://github.com/cjpais/Handy/issues"&gt;github.com/cjpais/Handy/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the repository&lt;/strong&gt; and create a feature branch&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test thoroughly&lt;/strong&gt; on your target platform&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Submit a pull request&lt;/strong&gt; with clear description of changes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join the discussion&lt;/strong&gt; - reach out at &lt;a href="mailto:contact@handy.computer"&gt;contact@handy.computer&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The goal is to create both a useful tool and a foundation for others to build upon—a well-patterned, simple codebase that serves the community.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;div align="center"&gt;
  We're grateful for the support of our sponsors who help make Handy possible: 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;a href="https://wordcab.com"&gt; &lt;img src="https://raw.githubusercontent.com/cjpais/Handy/main/sponsor-images/wordcab.png" alt="Wordcab" width="120" height="120" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://github.com/epicenter-so/epicenter"&gt; &lt;img src="https://raw.githubusercontent.com/cjpais/Handy/main/sponsor-images/epicenter.png" alt="Epicenter" width="120" height="120" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/cjpais/handy-cli"&gt;Handy CLI&lt;/a&gt;&lt;/strong&gt; - The original Python command-line version&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://handy.computer"&gt;handy.computer&lt;/a&gt;&lt;/strong&gt; - Project website with demos and documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/cjpais/Handy/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Whisper&lt;/strong&gt; by OpenAI for the speech recognition model&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;whisper.cpp and ggml&lt;/strong&gt; for amazing cross-platform whisper inference/acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Silero&lt;/strong&gt; for great lightweight VAD&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tauri&lt;/strong&gt; team for the excellent Rust-based app framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community contributors&lt;/strong&gt; helping make Handy better&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;"Your search for the right speech-to-text tool can end here—not because Handy is perfect, but because you can make it perfect for you."&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chaitin/PandaWiki</title>
      <link>https://github.com/chaitin/PandaWiki</link>
      <description>&lt;p&gt;PandaWiki 是一款 AI 大模型驱动的开源知识库搭建系统，帮助你快速构建智能化的 产品文档、技术文档、FAQ、博客系统，借助大模型的力量为你提供 AI 创作、AI 问答、AI 搜索等能力。&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/banner.png" width="400" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a target="_blank" href="https://ly.safepoint.cloud/Br48PoX"&gt;📖 官方网站&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a target="_blank" href="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/wechat.png"&gt;🙋‍♂️ 微信交流群&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;👋 项目介绍&lt;/h2&gt; 
&lt;p&gt;PandaWiki 是一款 AI 大模型驱动的&lt;strong&gt;开源知识库搭建系统&lt;/strong&gt;，帮助你快速构建智能化的 &lt;strong&gt;产品文档、技术文档、FAQ、博客系统&lt;/strong&gt;，借助大模型的力量为你提供 &lt;strong&gt;AI 创作、AI 问答、AI 搜索&lt;/strong&gt; 等能力。&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/setup.png" width="800" /&gt; &lt;/p&gt; 
&lt;h2&gt;⚡️ 界面展示&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;PandaWiki 控制台&lt;/th&gt; 
   &lt;th&gt;Wiki 网站前台&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-1.png" width="370" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-2.png" width="370" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-3.png" width="370" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/screenshot-4.png" width="370" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🔥 功能与特色&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI 驱动智能化：AI 辅助创作、AI 辅助问答、AI 辅助搜索。&lt;/li&gt; 
 &lt;li&gt;强大的富文本编辑能力：兼容 Markdown 和 HTML，支持导出为 word、pdf、markdown 等多种格式。&lt;/li&gt; 
 &lt;li&gt;轻松与第三方应用进行集成：支持做成网页挂件挂在其他网站上，支持做成钉钉、飞书、企业微信等聊天机器人。&lt;/li&gt; 
 &lt;li&gt;通过第三方来源导入内容：根据网页 URL 导入、通过网站 Sitemap 导入、通过 RSS 订阅、通过离线文件导入等。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 上手指南&lt;/h2&gt; 
&lt;h3&gt;安装 PandaWiki&lt;/h3&gt; 
&lt;p&gt;你需要一台支持 Docker 20.x 以上版本的 Linux 系统来安装 PandaWiki。&lt;/p&gt; 
&lt;p&gt;使用 root 权限登录你的服务器，然后执行以下命令。&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash -c "$(curl -fsSLk https://release.baizhi.cloud/panda-wiki/manager.sh)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;根据命令提示的选项进行安装，命令执行过程将会持续几分钟，请耐心等待。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;关于安装与部署的更多细节请参考 &lt;a href="https://pandawiki.docs.baizhi.cloud/node/01971602-bb4e-7c90-99df-6d3c38cfd6d5"&gt;安装 PandaWiki&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;登录 PandaWiki&lt;/h3&gt; 
&lt;p&gt;在上一步中，安装命令执行结束后，你的终端会输出以下内容。&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;SUCCESS  控制台信息:
SUCCESS    访问地址(内网): http://*.*.*.*:2443
SUCCESS    访问地址(外网): http://*.*.*.*:2443
SUCCESS    用户名: admin
SUCCESS    密码: **********************
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;使用浏览器打开上述内容中的 “访问地址”，你将看到 PandaWiki 的控制台登录入口，使用上述内容中的 “用户名” 和 “密码” 登录即可。&lt;/p&gt; 
&lt;h3&gt;配置 AI 模型&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;PandaWiki 是由 AI 大模型驱动的 Wiki 系统，在未配置大模型的情况下 AI 创作、AI 问答、AI 搜索 等功能无法正常使用。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;首次登录时会提示需要先配置 AI 模型，根据下方图片配置 “Chat 模型”。&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/modelconfig.png" width="800" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;推荐使用 &lt;a href="https://baizhi.cloud/"&gt;百智云模型广场&lt;/a&gt; 快速接入 AI 模型，注册即可获赠 5 元的模型使用额度。 关于大模型的更多配置细节请参考 &lt;a href="https://pandawiki.docs.baizhi.cloud/node/01971616-811c-70e1-82d9-706a202b8498"&gt;接入 AI 模型&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;创建知识库&lt;/h3&gt; 
&lt;p&gt;一切配置就绪后，你需要先创建一个 “知识库”。&lt;/p&gt; 
&lt;p&gt;“知识库” 是一组文档的集合，PandaWiki 将会根据知识库中的文档，为不同的知识库分别创建 “Wiki 网站”。&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/createkb.png" width="800" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;关于知识库的更多配置细节请参考 &lt;a href="https://pandawiki.docs.baizhi.cloud/node/01971b5e-5bea-76d2-9f89-a95f98347bb0"&gt;知识库设置&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💪 开始使用&lt;/h3&gt; 
&lt;p&gt;如果你顺利完成了以上步骤，那么恭喜你，属于你的 PandaWiki 搭建成功，你可以：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;访问 &lt;strong&gt;控制台&lt;/strong&gt; 来管理你的知识库内容&lt;/li&gt; 
 &lt;li&gt;访问 &lt;strong&gt;Wiki 网站&lt;/strong&gt; 让你的用户使用知识库&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;社区交流&lt;/h2&gt; 
&lt;p&gt;欢迎加入我们的微信群进行交流。&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/chaitin/PandaWiki/main/images/wechat.png" width="300" /&gt; 
&lt;h2&gt;🙋‍♂️ 贡献&lt;/h2&gt; 
&lt;p&gt;欢迎提交 &lt;a href="https://github.com/chaitin/PandaWiki/pulls"&gt;Pull Request&lt;/a&gt; 或创建 &lt;a href="https://github.com/chaitin/PandaWiki/issues"&gt;Issue&lt;/a&gt; 来帮助改进项目。&lt;/p&gt; 
&lt;h2&gt;📝 许可证&lt;/h2&gt; 
&lt;p&gt;本项目采用 GNU Affero General Public License v3.0 (AGPL-3.0) 许可证。这意味着：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;你可以自由使用、修改和分发本软件&lt;/li&gt; 
 &lt;li&gt;你必须以相同的许可证开源你的修改&lt;/li&gt; 
 &lt;li&gt;如果你通过网络提供服务，也必须开源你的代码&lt;/li&gt; 
 &lt;li&gt;商业使用需要遵守相同的开源要求&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#chaitin/PandaWiki&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=chaitin/PandaWiki&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chatboxai/chatbox</title>
      <link>https://github.com/chatboxai/chatbox</link>
      <description>&lt;p&gt;User-friendly Desktop Client App for AI Models/LLMs (GPT, Claude, Gemini, Ollama...)&lt;/p&gt;&lt;hr&gt;&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/README-CN.md"&gt;简体中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is the repository for the Chatbox Community Edition, open-sourced under the GPLv3 license.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/chatboxai/chatbox/issues/2266"&gt;Chatbox is going open-source Again!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We regularly sync code from the pro repo to this repo, and vice versa.&lt;/p&gt; 
&lt;h3&gt;Download for Desktop&lt;/h3&gt; 
&lt;table style="width: 100%"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Windows&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center" colspan="2"&gt; &lt;b&gt;MacOS&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Linux&lt;/b&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr style="text-align: center"&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-windows"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/windows.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Setup.exe&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-intel"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Intel&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-aarch"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b style="white-space: nowrap;"&gt;Apple Silicon&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-linux"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/linux.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;AppImage&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Download for iOS/Android&lt;/h3&gt; 
&lt;a href="https://apps.apple.com/app/chatbox-ai/id6471368056" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/app_store.webp" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://play.google.com/store/apps/details?id=xyz.chatboxapp.chatbox" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/google_play.png" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://chatboxai.app/install?download=android_apk" style="margin-right: 4px; display: inline-flex; justify-content: center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/android.png" style="height:28px; display: inline-block" /&gt; .APK &lt;/a&gt; 
&lt;p&gt;For more information: &lt;a href="https://chatboxai.app/"&gt;chatboxai.app&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/icon.png" width="30" /&gt; &lt;span&gt; Chatbox &lt;span style="font-size:8px; font-weight: normal;"&gt;(Community Edition)&lt;/span&gt; &lt;/span&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;em&gt;Your Ultimate AI Copilot on the Desktop. &lt;br /&gt;Chatbox is a desktop client for ChatGPT, Claude and other LLMs, available on Windows, Mac, Linux&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="macOS" src="https://img.shields.io/badge/-macOS-black?style=flat-square&amp;amp;logo=apple&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Windows" src="https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;amp;logo=windows&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Linux" src="https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;amp;logo=linux&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/github/downloads/chatboxai/chatbox/total.svg?style=flat" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/chatbox?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-chatbox" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=429547&amp;amp;theme=light" alt="Chatbox - Better UI &amp;amp; Desktop App for ChatGPT, Claude and other LLMs. | Product Hunt" style="width: 150px; height: 30px;" width="100" height="40" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png" width="400" /&gt; &lt;/a&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png" width="400" /&gt; &lt;/a&gt; 
&lt;!-- &lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_1.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_2.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt; --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Local Data Storage&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💾&lt;/span&gt; Your data remains on your device, ensuring it never gets lost and maintains your privacy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No-Deployment Installation Packages&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📦&lt;/span&gt; Get started quickly with downloadable installation packages. No complex setup necessary!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for Multiple LLM Providers&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⚙&lt;/span&gt; Seamlessly integrate with a variety of cutting-edge language models:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;OpenAI (ChatGPT)&lt;/li&gt; 
   &lt;li&gt;Azure OpenAI&lt;/li&gt; 
   &lt;li&gt;Claude&lt;/li&gt; 
   &lt;li&gt;Google Gemini Pro&lt;/li&gt; 
   &lt;li&gt;Ollama (enable access to local models like llama2, Mistral, Mixtral, codellama, vicuna, yi, and solar)&lt;/li&gt; 
   &lt;li&gt;ChatGLM-6B&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Image Generation with Dall-E-3&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🎨&lt;/span&gt; Create the images of your imagination with Dall-E-3.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhanced Prompting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💬&lt;/span&gt; Advanced prompting features to refine and focus your queries for better responses.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⌨&lt;/span&gt; Stay productive with shortcuts that speed up your workflow.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Markdown, Latex &amp;amp; Code Highlighting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📜&lt;/span&gt; Generate messages with the full power of Markdown and Latex formatting, coupled with syntax highlighting for various programming languages, enhancing readability and presentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Library &amp;amp; Message Quoting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📚&lt;/span&gt; Save and organize prompts for reuse, and quote messages for context in discussions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Streaming Reply&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;▶&lt;/span&gt; Provide rapid responses to your interactions with immediate, progressive replies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ergonomic UI &amp;amp; Dark Theme&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌑&lt;/span&gt; A user-friendly interface with a night mode option for reduced eye strain during extended use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Team Collaboration&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;👥&lt;/span&gt; Collaborate with ease and share OpenAI API resources among your team. &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/team-sharing/README.md"&gt;Learn More&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cross-Platform Availability&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💻&lt;/span&gt; Chatbox is ready for Windows, Mac, Linux users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access Anywhere with the Web Version&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌐&lt;/span&gt; Use the web application on any device with a browser, anywhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;iOS &amp;amp; Android&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;☎&lt;/span&gt; Use the mobile applications that will bring this power to your fingertips on the go.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌎&lt;/span&gt; Catering to a global audience by offering support in multiple languages:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;English&lt;/li&gt; 
   &lt;li&gt;简体中文 (Simplified Chinese)&lt;/li&gt; 
   &lt;li&gt;繁體中文 (Traditional Chinese)&lt;/li&gt; 
   &lt;li&gt;日本語 (Japanese)&lt;/li&gt; 
   &lt;li&gt;한국어 (Korean)&lt;/li&gt; 
   &lt;li&gt;Français (French)&lt;/li&gt; 
   &lt;li&gt;Deutsch (German)&lt;/li&gt; 
   &lt;li&gt;Русский (Russian)&lt;/li&gt; 
   &lt;li&gt;Español (Spanish)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;And More...&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;✨&lt;/span&gt; Constantly enhancing the experience with new features!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why I made Chatbox?&lt;/h2&gt; 
&lt;p&gt;I developed Chatbox initially because I was debugging some prompts and found myself in need of a simple and easy-to-use prompt and API debugging tool. I thought there might be more people who needed such a tool, so I open-sourced it.&lt;/p&gt; 
&lt;p&gt;At first, I didn't know that it would be so popular. I listened to the feedback from the open-source community and continued to develop and improve it. Now, it has become a very useful AI desktop application. There are many users who love Chatbox, and they not only use it for developing and debugging prompts, but also for daily chatting, and even to do some more interesting things like using well-designed prompts to make AI play various professional roles to assist them in everyday work...&lt;/p&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Any form of contribution is welcome, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Submitting issues&lt;/li&gt; 
 &lt;li&gt;Submitting pull requests&lt;/li&gt; 
 &lt;li&gt;Submitting feature requests&lt;/li&gt; 
 &lt;li&gt;Submitting bug reports&lt;/li&gt; 
 &lt;li&gt;Submitting documentation revisions&lt;/li&gt; 
 &lt;li&gt;Submitting translations&lt;/li&gt; 
 &lt;li&gt;Submitting any other forms of contribution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (v20.x – v22.x)&lt;/li&gt; 
 &lt;li&gt;npm (required – pnpm is not supported)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository from Github&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/chatboxai/chatbox.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install the required dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Start the application (in development mode)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Build the application, package the installer for current platform&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Build the application, package the installer for all platforms&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package:all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#chatboxai/chatbox&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=chatboxai/chatbox&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://x.com/ChatboxAI_HQ"&gt;Twitter&lt;/a&gt; | &lt;a href="mailto:hi@chatboxai.com"&gt;Email&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>janhq/jan</title>
      <link>https://github.com/janhq/jan</link>
      <description>&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Open-source ChatGPT replacement&lt;/h1&gt; 
&lt;img width="2048" height="280" alt="github jan banner" src="https://github.com/user-attachments/assets/f3f87889-c133-433b-b250-236218150d3f" /&gt; 
&lt;p align="center"&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/janhq/jan" /&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/janhq/jan" /&gt; &lt;img alt="Github Contributors" src="https://img.shields.io/github/contributors/janhq/jan" /&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/janhq/jan" /&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.jan.ai/docs/desktop"&gt;Getting Started&lt;/a&gt; - &lt;a href="https://discord.gg/Exe46xPMbK"&gt;Community&lt;/a&gt; - &lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - &lt;a href="https://github.com/janhq/jan/issues"&gt;Bug reports&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jan is bringing the best of open-source AI in an easy-to-use product. Download and run LLMs with &lt;strong&gt;full control&lt;/strong&gt; and &lt;strong&gt;privacy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started is by downloading one of the following versions for your respective operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Download&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;macOS&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (deb)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (AppImage)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Download from &lt;a href="https://jan.ai/"&gt;jan.ai&lt;/a&gt; or &lt;a href="https://github.com/janhq/jan/releases"&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local AI Models&lt;/strong&gt;: Download and run LLMs (Llama, Gemma, Qwen, GPT-oss etc.) from HuggingFace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Integration&lt;/strong&gt;: Connect to GPT models via OpenAI, Claude models via Anthropic, Mistral, Groq, and others&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Assistants&lt;/strong&gt;: Create specialized AI assistants for your tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI-Compatible API&lt;/strong&gt;: Local server at &lt;code&gt;localhost:1337&lt;/code&gt; for other applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: MCP integration for agentic capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt;: Everything runs locally when you want it to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;For those who enjoy the scenic route:&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js ≥ 20.0.0&lt;/li&gt; 
 &lt;li&gt;Yarn ≥ 1.22.0&lt;/li&gt; 
 &lt;li&gt;Make ≥ 3.81&lt;/li&gt; 
 &lt;li&gt;Rust (for Tauri)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/janhq/jan
cd jan
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This handles everything: installs dependencies, builds core components, and launches the app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available make targets:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn build:tauri:plugin:api
yarn build:core
yarn build:extensions
yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Minimum specs for a decent experience:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 13.6+ (8GB RAM for 3B models, 16GB for 7B, 32GB for 13B)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 10+ with GPU support for NVIDIA/AMD/Intel Arc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Most distributions work, GPU acceleration available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed compatibility, check our &lt;a href="https://jan.ai/docs/desktop/mac"&gt;installation guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If things go sideways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check our &lt;a href="https://jan.ai/docs/troubleshooting"&gt;troubleshooting docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy your error logs and system specs&lt;/li&gt; 
 &lt;li&gt;Ask for help in our &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; &lt;code&gt;#🆘|jan-help&lt;/code&gt; channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions welcome. See &lt;a href="https://raw.githubusercontent.com/janhq/jan/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for the full spiel.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/docs"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/api-reference"&gt;API Reference&lt;/a&gt; - For the technically inclined&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/janhq/jan/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@jan.ai"&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:hr@jan.ai"&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 - Because sharing is caring.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Built on the shoulders of giants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scalar/scalar"&gt;Scalar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>plasmicapp/plasmic</title>
      <link>https://github.com/plasmicapp/plasmic</link>
      <description>&lt;p&gt;Visual builder for React. Build apps, websites, and content. Integrate with your codebase.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.plasmic.app"&gt; &lt;img alt="Plasmic" role="img" src="https://static1.plasmic.app/brand/2023/logo-cropped.png" width="120" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt; Plasmic &lt;/h1&gt; 
&lt;h3 align="center"&gt; The open-source visual builder for your codebase. &lt;/h3&gt; 
&lt;p align="center"&gt; Build beautiful apps and websites incredibly fast. &lt;/p&gt; 
&lt;p align="center"&gt; Drag and drop your own components, integrate with your codebase. &lt;/p&gt; 
&lt;p align="center"&gt; Break through the low-code ceiling. &lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.plasmic.app"&gt; &lt;img src="https://user-images.githubusercontent.com/7129/146098801-0691ff13-e302-40fb-827e-90488a7a28b4.gif" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://docs.plasmic.app/learn/quickstart"&gt; &lt;img src="https://user-images.githubusercontent.com/7129/139351025-8acd6f6d-8e32-4486-982e-a6f26a53d865.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/plasmicapp/plasmic"&gt;&lt;img alt="License" src="https://img.shields.io/github/license/plasmicapp/plasmic" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@plasmicapp/loader-react"&gt;&lt;img alt="Types" src="https://img.shields.io/npm/types/@plasmicapp/loader-react" /&gt;&lt;/a&gt; &lt;a href="https://github.com/prettier/prettier"&gt;&lt;img alt="code style: prettier" src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/plasmicapp/plasmic/pulls"&gt;&lt;img alt="PRs Welcome" src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Quick links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.plasmic.app/"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.plasmic.app/learn/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.plasmic.app/learn/quickstart/"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://forum.plasmic.app/"&gt;Plasmic Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.plasmic.app/slack"&gt;Slack Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;See Plasmic in action&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Vercel marketing page: &lt;a href="https://youtu.be/itvbmgLZvcM"&gt;https://youtu.be/itvbmgLZvcM&lt;/a&gt; (live app: &lt;a href="https://vercel-workflow.vercel.app"&gt;https://vercel-workflow.vercel.app&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Apple.com: &lt;a href="https://apple.plasmic.run"&gt;https://apple.plasmic.run&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Shopify headless storefront: &lt;a href="https://commerce.plasmic.run"&gt;https://commerce.plasmic.run&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Twitter clone: &lt;a href="https://youtu.be/rpdjrFuVMog"&gt;https://youtu.be/rpdjrFuVMog&lt;/a&gt; (live app: &lt;a href="https://twitter.plasmic.run"&gt;https://twitter.plasmic.run&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Service desk app: &lt;a href="https://youtu.be/rYqSpUEJSTw"&gt;https://youtu.be/rYqSpUEJSTw&lt;/a&gt; (live app: &lt;a href="https://tickets.plasmic.run"&gt;https://tickets.plasmic.run&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Interview with Lee Robinson, Plasmic as a visual CMS: &lt;a href="https://www.youtube.com/watch?v=pcVzNR6FBAQ"&gt;https://www.youtube.com/watch?v=pcVzNR6FBAQ&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Emails with React.Email: coming soon&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is Plasmic?&lt;/h2&gt; 
&lt;p&gt;Plasmic is a visual builder for the web.&lt;/p&gt; 
&lt;p&gt;It enables rapidly designing and building applications and websites--code optional.&lt;/p&gt; 
&lt;p&gt;Main use cases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Content management: let marketing drag/drop your React components to build landing pages in your Next.js website, with design guardrails&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Applications: let developers and technical users quickly build internal tools, client portals, and business software&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Website builder and design tool that doesn’t limit you to some built-in ecommerce platform, CMS, or hosting&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Plasmic is powerful, with a deep feature set that scales to complex projects. And with codebase integration, it removes the ceiling typically associated with low-code tools.&lt;/p&gt; 
&lt;h2&gt;What makes Plasmic special?&lt;/h2&gt; 
&lt;p&gt;Plasmic combines some seemingly disparate genres:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Webflow, Wordpress and other site builders&lt;/li&gt; 
 &lt;li&gt;Retool and other tool builders&lt;/li&gt; 
 &lt;li&gt;Glide and no-code app builders&lt;/li&gt; 
 &lt;li&gt;Contentful and other CMSes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Today these are different tools to specialize in, but the line between, say, a website and an application is blurry (consider an ecommerce storefront with user logins). With the right foundations, we think these can be unified—Plasmic’s UI can adapt to different levels of control for different personas/tasks.&lt;/p&gt; 
&lt;p&gt;But more importantly, unlike existing tools, Plasmic integrates with codebases. This is critical to making low-code scale past the complexity ceiling that all such tools (including Plasmic) have. You can drag and drop existing complex React components, and you can visually create new UIs/components within traditionally-coded applications, seamlessly weaving code and no-code.&lt;/p&gt; 
&lt;p&gt;Some feature highlights:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Full design freedom&lt;/strong&gt; and speedy modern design tool UX.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integrate with codebases&lt;/strong&gt; to drag/drop existing React components, publish screens into existing applications, and extend/customize Plasmic Studio.&lt;/li&gt; 
 &lt;li&gt;Create &lt;strong&gt;rich stateful interactions and behavior&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Connect with &lt;strong&gt;arbitrary data source and backend integrations&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful abstractions&lt;/strong&gt; like components, variants, slots, composable state management, and more that promote composition and let you build and maintain at scale.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable headless design system components&lt;/strong&gt; powered by &lt;a href="https://react-spectrum.adobe.com/react-aria/"&gt;react-aria&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Content creator mode&lt;/strong&gt;: give specific collaborators a more simplified editing experience with design guardrails.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open integrations&lt;/strong&gt;: choose your own CMS, ecommerce platform, hosting provider, and more.&lt;/li&gt; 
 &lt;li&gt;Deep collaboration with multiplayer, branching, cross-project imports, and multi-workspace organizations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Import designs from Figma&lt;/strong&gt;, translating its proprietary vector document format into DOM/CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Page performance and high-quality codegen&lt;/strong&gt;. Supports static site generation, automatic image optimization, layout shift reduction, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deploy/host/export anywhere&lt;/strong&gt;, including Vercel, Netlify, or any hosting provider.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-user auth and permissions&lt;/strong&gt;, including RBAC and user-scoped permissions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open-source platform&lt;/strong&gt; that you can always fork and control.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more on &lt;a href="https://www.plasmic.app"&gt;our website&lt;/a&gt; and &lt;a href="https://www.plasmic.app/learn/"&gt;our docs&lt;/a&gt;. Or check out &lt;a href="https://docs.plasmic.app/learn/comparisons/"&gt;comparisons of Plasmic vs other tools&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How do I integrate Plasmic as a CMS?&lt;/h2&gt; 
&lt;p&gt;This is one popular use case of Plasmic.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Step 1.&lt;/strong&gt; Install Plasmic into your codebase (exact package &lt;a href="https://www.plasmic.app/learn/quickstart/"&gt;depends on your framework&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install @plasmicapp/loader-nextjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 2 (optional).&lt;/strong&gt; Make components from your app or design system available for drag-and-drop in the visual editor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-tsx"&gt;// Take any component from your app or design system...
export default function HeroSection({ children }) {
  return &amp;lt;div className="hero-section"&amp;gt;{children}&amp;lt;/div&amp;gt;;
}

// ...and make it available for drag-and-drop, along with any props you want to
// expose.
PLASMIC.registerComponent(HeroSection, {
  props: {
    children: "slot",
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 3.&lt;/strong&gt; Add placeholders that render pages/components made in the visual editor anywhere in your app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-tsx"&gt;// pages/index.tsx

import {
  PlasmicComponent,
  PlasmicRootProvider,
} from "@plasmicapp/loader-nextjs";
import { PLASMIC } from "../plasmic-init";

// Here we fetch dynamically on the client, but you can also fetch and render
// components server-side in SSG/SSR frameworks, such as via getStaticProps
// in Next.js.
export default function IndexPage() {
  return (
    &amp;lt;PlasmicRootProvider plasmic={PLASMIC}&amp;gt;
      &amp;lt;PlasmicComponent component="Summer22LandingPage" /&amp;gt;
    &amp;lt;/PlasmicRootProvider&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Step 4.&lt;/strong&gt; Non-developers (or developers!) can now create new pages, sections, or components that ship directly into the app/website.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Step 5.&lt;/strong&gt; When you hit Publish, changes get picked up via webhooks that trigger rebuilds, or more specific mechanisms such as incremental static revalidation or dynamic fetching from the Plasmic CDN.&lt;/p&gt; 
&lt;h2&gt;Who uses Plasmic?&lt;/h2&gt; 
&lt;p&gt;Plasmic is used by companies ranging from Fortune 500s to boutique brands to solo makers. It's used for websites ranging from headless commerce storefronts to marketing websites to logged-in app content.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://www.plasmic.app/casestudies"&gt;Case Studies and Community Showcase&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.plasmic.app/casestudies"&gt; &lt;img alt="Customer logos" width="1106" src="https://github.com/plasmicapp/plasmic/assets/7129/2c682d45-6b72-4571-895a-e48b0c588647" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.plasmic.app/casestudies"&gt; &lt;img alt="Showcase" src="https://user-images.githubusercontent.com/7129/139349675-a807ad9d-aaaf-411b-ab4b-8247a09be676.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;How does Plasmic work?&lt;/h2&gt; 
&lt;h3&gt;How codebase integration works&lt;/h3&gt; 
&lt;p&gt;Note: you do not need to integrate Plasmic with a codebase. This is core to using Plasmic as a CMS, but you can build complete apps and websites without this, entirely within Plasmic.&lt;/p&gt; 
&lt;p&gt;Read &lt;a href="https://docs.plasmic.app/learn/technical-overview/"&gt;the full technical overview&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Bring your own React components&lt;/h3&gt; 
&lt;p&gt;You can register your own arbitrary custom React components for use as building blocks within Plasmic Studio. &lt;a href="https://code-components.plasmic.site"&gt;Learn more about code components&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Codegen&lt;/h3&gt; 
&lt;p&gt;Besides the Headless API, you can also &lt;a href="https://docs.plasmic.app/learn/codegen-guide"&gt;generate React code&lt;/a&gt; into your codebase. This is a powerful way to use Plasmic as a UI builder for creating rich interactive web applications—one example of this is Plasmic Studio itself. See the &lt;a href="https://docs.plasmic.app/learn/minitwitter-tutorial"&gt;application development tutorials&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;h2&gt;Note on versioning&lt;/h2&gt; 
&lt;p&gt;One common issue we see is mismatched or duplicate versions of packages.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;@plasmicapp&lt;/code&gt; packages can depend on each other. Each package always has an &lt;em&gt;exact&lt;/em&gt; version of its @plasmicapp dependencies. This is because we want to ensure that all packages are always in sync, and that we don't end up with a mismatched set of packages.&lt;/p&gt; 
&lt;p&gt;Packages like &lt;code&gt;@plasmicapp/host&lt;/code&gt; must also be deduped, since functionality such as &lt;code&gt;registerComponent&lt;/code&gt; make use of globals and side effects, so with multiple versions you could end up using the wrong "instance" of this package. Additionally, types can be tightly coupled across multiple packages.&lt;/p&gt; 
&lt;p&gt;Unfortunately, npm and yarn make it easy for you to end up with mismatched versions and duplicate versions of packages. Use the &lt;code&gt;npm list&lt;/code&gt; command to ensure that you have unique deduped versions of packages. Furthermore, issues can be "sticky," since npm/yarn are stateful. At times, you may need to rely on &lt;code&gt;npm dedupe&lt;/code&gt;, or removing and reinstalling Plasmic packages (including &lt;code&gt;@plasmicpkgs&lt;/code&gt; packages), resetting package-lock.json/yarn.lock, in order to unwedge npm/yarn.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;@plasmicpkgs&lt;/code&gt; (the built-in code component packages) have &lt;code&gt;@plasmicapp&lt;/code&gt; packages as peer dependencies, and these specify ranges rather than exact versions--this is to offer some flexibility for developers to use the core package versions they need, while still using &lt;code&gt;@plasmicpkgs&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note: exact versioning does not imply that every package increments versions for every release. Packages are only incremented if they or their dependencies have changed. Incrementing versions, including those referenced in &lt;code&gt;dependencies&lt;/code&gt; and &lt;code&gt;devDependencies&lt;/code&gt;, is done automatically when our deployment scripts run &lt;code&gt;lerna version patch --exact...&lt;/code&gt;, which detects whether a package has changed since its last git-tagged release.&lt;/p&gt; 
&lt;h2&gt;Contributing 🚀&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/plasmicapp/plasmic/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Get help and join our community&lt;/h2&gt; 
&lt;p&gt;Our &lt;a href="https://www.plasmic.app/learn/"&gt;docs&lt;/a&gt; and our community &lt;a href="https://forum.plasmic.app/"&gt;forum&lt;/a&gt; and &lt;a href="https://www.plasmic.app/slack"&gt;Slack&lt;/a&gt; with 3000+ members are the best places to get help with Plasmic.&lt;/p&gt; 
&lt;p&gt;For support from the Plasmic team, please use the forum. The forum is also easily searchable for all previously asked questions and discussions.&lt;/p&gt; 
&lt;p&gt;Both the docs and forum are indexed by search engines! Search both by including “plasmic” in your query.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All content outside of &lt;code&gt;platform/&lt;/code&gt; is licensed under the MIT license--see LICENSE.md.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;platform/&lt;/code&gt; is licensed under the AGPL--see LICENSE.platform.md.&lt;/p&gt; 
&lt;h2&gt;Contributors ❤️&lt;/h2&gt; 
&lt;p&gt;Thanks to all the people who make Plasmic!&lt;/p&gt; 
&lt;a href="https://github.com/plasmicapp/plasmic/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=plasmicapp/plasmic" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>kamranahmedse/developer-roadmap</title>
      <link>https://github.com/kamranahmedse/developer-roadmap</link>
      <description>&lt;p&gt;Interactive roadmaps, guides and other educational content to help developers grow in their careers.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/"&gt;&lt;img src="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/public/img/brand.png" height="128" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt;&lt;/h2&gt; 
&lt;p align="center"&gt;Community driven roadmaps, articles and resources for developers&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/roadmaps"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Roadmaps%20-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/best-practices"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Best%20Practices-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="best practices" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/questions"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Questions-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="videos" /&gt; &lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-YouTube%20Channel-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Roadmaps are now interactive, you can click the nodes to read more about the topics.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://roadmap.sh"&gt;View all Roadmaps&lt;/a&gt; &amp;nbsp;·&amp;nbsp; &lt;a href="https://roadmap.sh/best-practices"&gt;Best Practices&lt;/a&gt; &amp;nbsp;·&amp;nbsp; &lt;a href="https://roadmap.sh/questions"&gt;Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Here is the list of available roadmaps with more being actively worked upon.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href="https://roadmap.sh/get-started"&gt;get started&lt;/a&gt; page that might help you pick up a path.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/frontend"&gt;Frontend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/frontend?r=frontend-beginner"&gt;Frontend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/backend"&gt;Backend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/backend?r=backend-beginner"&gt;Backend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devops"&gt;DevOps Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/devops?r=devops-beginner"&gt;DevOps Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/full-stack"&gt;Full Stack Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/html"&gt;HTML Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/css"&gt;CSS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/javascript"&gt;JavaScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/typescript"&gt;TypeScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/git-github"&gt;Git and GitHub&lt;/a&gt; / &lt;a href="https://roadmap.sh/git-github?r=git-github-beginner"&gt;Git and GitHub Beginner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/api-design"&gt;API Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/computer-science"&gt;Computer Science Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/datastructures-and-algorithms"&gt;Data Structures and Algorithms Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-data-scientist"&gt;AI and Data Scientist Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-engineer"&gt;AI Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aws"&gt;AWS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cloudflare"&gt;Cloudflare Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/linux"&gt;Linux Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/terraform"&gt;Terraform Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-analyst"&gt;Data Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/bi-analyst"&gt;BI Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-engineer"&gt;Data Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/machine-learning"&gt;Machine Learning Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mlops"&gt;MLOps Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/product-manager"&gt;Product Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/engineering-manager"&gt;Engineering Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/qa"&gt;QA Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/python"&gt;Python Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-architect"&gt;Software Architect Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/game-developer"&gt;Game Developer Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/server-side-game-developer"&gt;Server Side Game Developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-design-architecture"&gt;Software Design and Architecture Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cpp"&gt;C++ Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react"&gt;React Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nextjs"&gt;Next.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react-native"&gt;React Native Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/vue"&gt;Vue Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/angular"&gt;Angular Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nodejs"&gt;Node.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/php"&gt;PHP Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/graphql"&gt;GraphQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/android"&gt;Android Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ios"&gt;iOS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/flutter"&gt;Flutter Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/golang"&gt;Go Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/rust"&gt;Rust Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/java"&gt;Java Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kotlin"&gt;Kotlin Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/spring-boot"&gt;Spring Boot Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/design-system"&gt;Design System Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/postgresql-dba"&gt;PostgreSQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/sql"&gt;SQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/redis"&gt;Redis Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/blockchain"&gt;Blockchain Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aspnet-core"&gt;ASP.NET Core Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/system-design"&gt;System Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kubernetes"&gt;Kubernetes Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cyber-security"&gt;Cyber Security Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mongodb"&gt;MongoDB Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ux-design"&gt;UX Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/docker"&gt;Docker Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/prompt-engineering"&gt;Prompt Engineering Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/technical-writer"&gt;Technical Writer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devrel"&gt;DevRel Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-red-teaming"&gt;AI Red Teaming Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-agents"&gt;AI Agents Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are also interactive best practices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/backend-performance"&gt;Backend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/frontend-performance"&gt;Frontend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/code-review"&gt;Code Review Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/api-security"&gt;API Security Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/aws"&gt;AWS Best Practices&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;..and questions to help you test, rate and improve your knowledge&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/javascript"&gt;JavaScript Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/nodejs"&gt;Node.js Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/react"&gt;React Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/backend"&gt;Backend Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/frontend"&gt;Frontend Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Share with the community&lt;/h2&gt; 
&lt;p&gt;Please consider sharing a post about &lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt; and the value it provides. It really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://reddit.com/submit?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-reddit-red?logo=reddit" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/submitlink?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-hacker%20news-orange?logo=ycombinator" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?url=https://roadmap.sh&amp;amp;text=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-twitter-03A9F4?logo=twitter" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.facebook.com/sharer/sharer.php?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-facebook-1976D2?logo=facebook" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/shareArticle?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-linkedin-3949AB?logo=linkedin" alt="GitHub Repo stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Clone the repository, install the dependencies and start the application&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:kamranahmedse/developer-roadmap.git
cd developer-roadmap
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: use the &lt;code&gt;depth&lt;/code&gt; parameter to reduce the clone size and speed up the clone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth=1 https://github.com/kamranahmedse/developer-roadmap.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/contributing.md"&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add content to roadmaps&lt;/li&gt; 
 &lt;li&gt;Add new roadmaps&lt;/li&gt; 
 &lt;li&gt;Suggest changes to existing roadmaps&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks to all contributors ❤&lt;/h2&gt; 
&lt;a href="https://github.com/kamranahmedse/developer-roadmap/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=kamranahmedse/developer-roadmap" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Have a look at the &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/license"&gt;license file&lt;/a&gt; for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nashaofu/shell360</title>
      <link>https://github.com/nashaofu/shell360</link>
      <description>&lt;p&gt;Shell360 is a cross-platform SSH and SFTP client.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Shell360&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/gallary.jpg" alt="gallary" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;span&gt;English&lt;/span&gt; | &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/README-zh_cn.md"&gt;简体中文&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Shell360 is a cross-platform SSH &amp;amp; SFTP client supporting Windows, macOS, Linux, Android, and iOS. Whether it's remote development, server management, or secure file transfer, Shell360 provides you with a consistent, smooth, and secure user experience. &lt;/p&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;Download the latest version of Shell360 for your platform:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://apps.apple.com/app/shell360/id6502880351"&gt; &lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/app-store.svg?sanitize=true" width="123" alt="Download on the App Store" /&gt; &lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=com.nashaofu.shell360"&gt; &lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/GooglePlay.png" width="140" alt="Download on Google Play" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20Windows-blue?style=for-the-badge" alt="Download for Windows" /&gt; &lt;/a&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20macOS-blue?style=for-the-badge" alt="Download for macOS" /&gt; &lt;/a&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20Linux-blue?style=for-the-badge" alt="Download for Linux" /&gt; &lt;/a&gt; &lt;a href="https://github.com/nashaofu/shell360/releases"&gt; &lt;img src="https://img.shields.io/badge/Download%20for%20Android-blue?style=for-the-badge" alt="Download for Android" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Join our &lt;a href="https://testflight.apple.com/join/teqJZCRm"&gt;TestFlight&lt;/a&gt; Or &lt;a href="https://play.google.com/apps/testing/com.nashaofu.shell360"&gt;Google Play&lt;/a&gt; testing program for early access to new features.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;🔐 Secure Connection&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Advanced SSH client with support for password, public key, and certificate authentication methods&lt;/li&gt; 
 &lt;li&gt;Support for ED25519, RSA, and ECDSA SSH keys&lt;/li&gt; 
 &lt;li&gt;Application data encryption for enhanced security&lt;/li&gt; 
 &lt;li&gt;Support for jump host connection, convenient cross-server management&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📁 File Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Powerful SFTP client for file transfer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔄 Port Forwarding&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local port forwarding&lt;/li&gt; 
 &lt;li&gt;Remote port forwarding&lt;/li&gt; 
 &lt;li&gt;Dynamic port forwarding (SOCKS proxy)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🎨 Customizable Themes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Light and dark theme support&lt;/li&gt; 
 &lt;li&gt;6 built-in terminal themes&lt;/li&gt; 
 &lt;li&gt;Support for custom terminal fonts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💻 Cross-Platform Compatibility&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Consistent experience across Windows, macOS, Linux, Android, and iOS&lt;/li&gt; 
 &lt;li&gt;Support for importing/exporting app configurations for easy synchronization between devices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technology Stack&lt;/h2&gt; 
&lt;p&gt;Shell360 is built with modern technologies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: TypeScript, React&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Rust&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt;: Tauri (for cross-platform support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Implementation&lt;/strong&gt;: Custom Rust SSH plugin&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Storage&lt;/strong&gt;: Encrypted local storage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/mobile-gallary.jpg" alt="Mobile Gallery" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/pad-gallary.jpg" alt="Pad Gallery" /&gt;&lt;/p&gt; 
&lt;h3&gt;Terminal Themes&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/nashaofu/shell360/master/resources/screenshots/terminal-themes.jpg" alt="Terminal Themes" /&gt;&lt;/p&gt; 
&lt;h2&gt;Privacy Policy&lt;/h2&gt; 
&lt;p&gt;Your privacy is important to us. Please review our &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/docs/Privacy-Policy.md"&gt;Privacy Policy&lt;/a&gt; to understand how we handle your data.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! Please read our &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/docs/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the GNU General Public License v3.0 (GPLv3). See the &lt;a href="https://raw.githubusercontent.com/nashaofu/shell360/master/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;SPDX-License-Identifier: GPL-3.0-or-later&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>firebase/firebase-tools</title>
      <link>https://github.com/firebase/firebase-tools</link>
      <description>&lt;p&gt;The Firebase Command Line Tools&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Firebase CLI and MCP Server &lt;a href="https://github.com/firebase/firebase-tools/actions"&gt;&lt;img src="https://github.com/firebase/firebase-tools/workflows/CI%20Tests/badge.svg?sanitize=true" alt="Actions Status" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/firebase-tools"&gt;&lt;img src="https://img.shields.io/node/v/firebase-tools.svg?sanitize=true" alt="Node Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/firebase-tools"&gt;&lt;img src="https://img.shields.io/npm/v/firebase-tools.svg?sanitize=true" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://cursor.com/en/install-mcp?name=firebase&amp;amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsImZpcmViYXNlLXRvb2xzIiwiZXhwZXBpbWVudGFsOm1jcCIsIi0tZGlyIiwiLiJdfQ=="&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Install MCP Server" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;The Firebase Command Line Interface (CLI) Tools can be used to test, manage, and deploy your Firebase project from the command line. This repository is also the home of the official Firebase MCP Server. For more information, please see the &lt;a href="https://raw.githubusercontent.com/firebase/firebase-tools/master/src/mcp"&gt;Firebase MCP Server documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Deploy code and assets to your Firebase projects&lt;/li&gt; 
 &lt;li&gt;Run a local web server for your Firebase Hosting site&lt;/li&gt; 
 &lt;li&gt;Interact with data in your Firebase database&lt;/li&gt; 
 &lt;li&gt;Import/Export users into/from Firebase Auth&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get started with the Firebase CLI, read the full list of commands below or check out the &lt;a href="https://firebase.google.com/docs/cli"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Node Package&lt;/h3&gt; 
&lt;p&gt;You can install the Firebase CLI using npm (the Node Package Manager). Note that you will need to install &lt;a href="http://nodejs.org/"&gt;Node.js&lt;/a&gt; and &lt;a href="https://npmjs.org/"&gt;npm&lt;/a&gt;. Installing Node.js should install npm as well.&lt;/p&gt; 
&lt;p&gt;To download and install the Firebase CLI run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g firebase-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will provide you with the globally accessible &lt;code&gt;firebase&lt;/code&gt; command.&lt;/p&gt; 
&lt;h3&gt;Standalone Binary&lt;/h3&gt; 
&lt;p&gt;The standalone binary distribution of the Firebase CLI allows you to download a &lt;code&gt;firebase&lt;/code&gt; executable without any dependencies.&lt;/p&gt; 
&lt;p&gt;To download and install the CLI run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sL firebase.tools | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;The command &lt;code&gt;firebase --help&lt;/code&gt; lists the available commands and &lt;code&gt;firebase &amp;lt;command&amp;gt; --help&lt;/code&gt; shows more details for an individual command.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If a command is project-specific, you must either be inside a project directory with an active project alias or specify the Firebase project id with the &lt;code&gt;-P &amp;lt;project_id&amp;gt;&lt;/code&gt; flag.&lt;/p&gt; 
&lt;p&gt;Below is a brief list of the available commands and their function:&lt;/p&gt; 
&lt;h3&gt;Configuration Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;login&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Authenticate to your Firebase account. Requires access to a web browser.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;logout&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Sign out of the Firebase CLI.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;login:ci&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Generate an authentication token for use in non-interactive environments.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;login:add&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Authorize the CLI for an additional account.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;login:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List authorized CLI accounts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;login:use&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Set the default account to use for this project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;use&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Set active Firebase project, manage project aliases.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;open&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quickly open a browser to relevant project resources.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;init&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Setup a new Firebase project in the current directory. This command will create a &lt;code&gt;firebase.json&lt;/code&gt; configuration file in your current directory.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;help&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Display help information about the CLI or specific commands.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Append &lt;code&gt;--no-localhost&lt;/code&gt; to login (i.e., &lt;code&gt;firebase login --no-localhost&lt;/code&gt;) to copy and paste code instead of starting a local server for authentication. A use case might be if you SSH into an instance somewhere and you need to authenticate to Firebase on that machine.&lt;/p&gt; 
&lt;h3&gt;Project Management Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;apps:create&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create a new Firebase app in a project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;apps:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List the registered apps of a Firebase project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;apps:sdkconfig&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Print the configuration of a Firebase app.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;projects:addfirebase&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Add Firebase resources to a Google Cloud Platform project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;projects:create&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create a new Firebase project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;projects:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Print a list of all of your Firebase projects.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Deployment and Local Emulation&lt;/h3&gt; 
&lt;p&gt;These commands let you deploy and interact with your Firebase services.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;emulators:exec&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Start the local Firebase emulators, run a test script, then shut down the emulators.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;emulators:start&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Start the local Firebase emulators.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;deploy&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Deploys your Firebase project. Relies on &lt;code&gt;firebase.json&lt;/code&gt; configuration and your local project folder.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;serve&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Start a local server with your Firebase Hosting configuration and HTTPS-triggered Cloud Functions. Relies on &lt;code&gt;firebase.json&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;setup:emulators:database&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Downloads the database emulator.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;setup:emulators:firestore&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Downloads the firestore emulator.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;App Distribution Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:distribute&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Upload a release binary and optionally distribute it to testers and run automated tests.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:testers:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List testers in project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:testers:add&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Add testers to project (and group, if specified via flag).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:testers:remove&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Remove testers from a project (or group, if specified via flag).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:groups:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List groups (of testers).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:groups:create&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create a group (of testers).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:groups:delete&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Delete a group (of testers).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:testcases:export&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Export test cases as a YAML file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;appdistribution:testcases:import&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Import test cases from YAML file.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Auth Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;auth:import&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Batch importing accounts into Firebase from data file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;auth:export&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Batch exporting accounts from Firebase into data file.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Detailed doc is &lt;a href="https://firebase.google.com/docs/cli/auth"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Realtime Database Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:get&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Fetch data from the current project's database and display it as JSON. Supports querying on indexed data.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:set&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Replace all data at a specified location in the current project's database. Takes input from file, STDIN, or command-line argument.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:push&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Push new data to a list at a specified location in the current project's database. Takes input from file, STDIN, or command-line argument.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:remove&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Delete all data at a specified location in the current project's database.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:update&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Perform a partial update at a specified location in the current project's database. Takes input from file, STDIN, or command-line argument.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:profile&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Profile database usage and generate a report.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:instances:create&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create a realtime database instance.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:instances:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List realtime database instances.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:settings:get&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Read the realtime database setting at path&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;database:settings:set&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Set the realtime database setting at path.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Extensions Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Display information on how to use ext commands and extensions installed to your project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext:configure&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Configure an existing extension instance.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext:info&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Display information about an extension by name (&lt;a href="mailto:extensionName@x.y.z"&gt;extensionName@x.y.z&lt;/a&gt; for a specific version)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext:install&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Install an extension.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext:sdk:install&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Install and SDK for an extension so you can define the extension in a functions codebase.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List all the extensions that are installed in your Firebase project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext:uninstall&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Uninstall an extension that is installed in your Firebase project by Instance ID.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ext:update&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Update an existing extension instance to the latest version.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Cloud Firestore Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;firestore:delete&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Delete documents or collections from the current project's database. Supports recursive deletion of subcollections.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;firestore:indexes&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List all deployed indexes from the current project.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Cloud Functions Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:log&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Read logs from deployed Cloud Functions.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;List all deployed functions in your Firebase project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:config:set&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Store runtime configuration values for the current project's Cloud Functions.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:config:get&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Retrieve existing configuration values for the current project's Cloud Functions.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:config:unset&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Remove values from the current project's runtime configuration.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:config:clone&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Copy runtime configuration from one project environment to another.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:secrets:set&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create or update a secret for use in Cloud Functions for Firebase.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:secrets:get&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Get metadata for secret and its versions.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:secrets:access&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Access secret value given secret and its version. Defaults to accessing the latest version.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:secrets:prune&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Destroys unused secrets.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:secrets:destroy&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Destroy a secret. Defaults to destroying the latest version.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:delete&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Delete one or more Cloud Functions by name or group name.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;functions:shell&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Locally emulate functions and start Node.js shell where these local functions can be invoked with test data.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Hosting Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;hosting:disable&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Stop serving Firebase Hosting traffic for the active project. A "Site Not Found" message will be displayed at your project's Hosting URL after running this command.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Remote Config Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:get&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Get a Firebase project's Remote Config template.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:versions:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Get a list of the most recent Firebase Remote Config template versions that have been published.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:rollback&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Roll back a project's published Remote Config template to the version provided by &lt;code&gt;--version_number&lt;/code&gt; flag.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:experiments:get&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Get a Remote Config experiment.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:experiments:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Get a list of Remote Config experiments&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:experiments:delete&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Delete a Remote Config experiment.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:rollouts:get&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Get a Remote Config rollout.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:rollouts:list&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Get a list of Remote Config rollouts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;remoteconfig:rollouts:delete&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Delete a Remote Config rollout.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Use &lt;code&gt;firebase:deploy --only remoteconfig&lt;/code&gt; to update and publish a project's Firebase Remote Config template.&lt;/p&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;h3&gt;General&lt;/h3&gt; 
&lt;p&gt;The Firebase CLI can use one of four authentication methods listed in descending priority:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;User Token&lt;/strong&gt; - &lt;strong&gt;DEPRECATED: this authentication method will be removed in a future major version of &lt;code&gt;firebase-tools&lt;/code&gt;; use a service account to authenticate instead&lt;/strong&gt; - provide an explicit long-lived Firebase user token generated from &lt;code&gt;firebase login:ci&lt;/code&gt;. Note that these tokens are extremely sensitive long-lived credentials and are not the right option for most cases. Consider using service account authorization instead. The token can be set in one of two ways: 
  &lt;ul&gt; 
   &lt;li&gt;Set the &lt;code&gt;--token&lt;/code&gt; flag on any command, for example &lt;code&gt;firebase --token="&amp;lt;token&amp;gt;" projects:list&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Set the &lt;code&gt;FIREBASE_TOKEN&lt;/code&gt; environment variable.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Local Login&lt;/strong&gt; - run &lt;code&gt;firebase login&lt;/code&gt; to log in to the CLI directly as yourself. The CLI will cache an authorized user credential on your machine.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Service Account&lt;/strong&gt; - set the &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable to point to the path of a JSON service account key file. For more details, see Google Cloud's &lt;a href="https://cloud.google.com/docs/authentication/getting-started"&gt;Getting started with authentication&lt;/a&gt; guide.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Application Default Credentials&lt;/strong&gt; - if you use the &lt;code&gt;gcloud&lt;/code&gt; CLI and log in with &lt;code&gt;gcloud auth application-default login&lt;/code&gt;, the Firebase CLI will use them if none of the above credentials are present.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Multiple Accounts&lt;/h3&gt; 
&lt;p&gt;By default &lt;code&gt;firebase login&lt;/code&gt; sets a single global account for use on all projects. If you have multiple Google accounts which you use for Firebase projects you can authorize multiple accounts and use them on a per-project or per-command basis.&lt;/p&gt; 
&lt;p&gt;To authorize an additonal account for use with the CLI, run &lt;code&gt;firebase login:add&lt;/code&gt;. You can view the list of authorized accounts with &lt;code&gt;firebase login:list&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To set the default account for a specific Firebase project directory, run &lt;code&gt;firebase login:use&lt;/code&gt; from within the directory and select the desired account. To check the default account for a directory, run &lt;code&gt;firebase login:list&lt;/code&gt; and the default account for the current context will be listed first.&lt;/p&gt; 
&lt;p&gt;To set the account for a specific command invocation, use the &lt;code&gt;--account&lt;/code&gt; flag with any command. For example &lt;code&gt;firebase --account=user@domain.com deploy&lt;/code&gt;. The specified account must have already been added to the Firebase CLI using &lt;code&gt;firebase login:add&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloud Functions Emulator&lt;/h3&gt; 
&lt;p&gt;The Cloud Functions emulator is exposed through commands like &lt;code&gt;emulators:start&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;functions:shell&lt;/code&gt;. Emulated Cloud Functions run as independent &lt;code&gt;node&lt;/code&gt; processes on your development machine which means they have their own credential discovery mechanism.&lt;/p&gt; 
&lt;p&gt;By default these &lt;code&gt;node&lt;/code&gt; processes are not able to discover credentials from &lt;code&gt;firebase login&lt;/code&gt;. In order to provide a better development experience, when you are logged in to the CLI through &lt;code&gt;firebase login&lt;/code&gt; we take the user credentials and construct a temporary credential that we pass into the emulator through &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt;. We &lt;strong&gt;only&lt;/strong&gt; do this if you have not already set the &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt; environment variable yourself.&lt;/p&gt; 
&lt;h2&gt;Using behind a proxy&lt;/h2&gt; 
&lt;p&gt;The CLI supports HTTP(S) proxies via environment variables. To use a proxy, set the &lt;code&gt;HTTPS_PROXY&lt;/code&gt; or &lt;code&gt;HTTP_PROXY&lt;/code&gt; value in your environment to the URL of your proxy (e.g. &lt;code&gt;HTTP_PROXY=http://127.0.0.1:12345&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;Using with CI Systems&lt;/h2&gt; 
&lt;p&gt;The Firebase CLI requires a browser to complete authentication, but is fully compatible with CI and other headless environments.&lt;/p&gt; 
&lt;p&gt;Complete the following steps to run Firebase commands in a CI environment. Find detailed instructions for each step in Google Cloud's &lt;a href="https://cloud.google.com/docs/authentication/getting-started"&gt;Getting started with authentication&lt;/a&gt; guide.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a service account and grant it the appropriate level of access to your project.&lt;/li&gt; 
 &lt;li&gt;Create a service account key (JSON file) for that service account.&lt;/li&gt; 
 &lt;li&gt;Store the key file in a secure, accessible way in your CI system.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS=/path/to/key.json&lt;/code&gt; in your CI system when running Firebase commands.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To disable access for the service account, &lt;a href="https://console.cloud.google.com/projectselector/iam-admin/serviceaccounts"&gt;find the service account&lt;/a&gt; for your project in the Google Cloud Console, and then either remove the key, or disable or delete the service account.&lt;/p&gt; 
&lt;h2&gt;Using as a Module&lt;/h2&gt; 
&lt;p&gt;The Firebase CLI can also be used programmatically as a standard Node module. Each command is exposed as a function that takes positional arguments followed by an options object and returns a Promise.&lt;/p&gt; 
&lt;p&gt;So if we run this command at our command line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ firebase --project="foo" apps:list ANDROID
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That translates to the following in Node:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const client = require("firebase-tools");
client.apps
  .list("ANDROID", { project: "foo" })
  .then((data) =&amp;gt; {
    // ...
  })
  .catch((err) =&amp;gt; {
    // ...
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The options object must be the very last argument and any unspecified positional argument will get the default value of &lt;code&gt;""&lt;/code&gt;. The following two invocations are equivalent:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const client = require("firebase-tools");

// #1 - No arguments or options, defaults will be inferred
client.apps.list();

// #2 - Explicitly provide "" for all arguments and {} for options
client.apps.list("", {});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: when used in a limited environment like Cloud Functions, not all &lt;code&gt;firebase-tools&lt;/code&gt; commands will work programatically because they require access to a local filesystem.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>toeverything/AFFiNE</title>
      <link>https://github.com/toeverything/AFFiNE</link>
      <description>&lt;p&gt;There can be more than Notion and Miro. AFFiNE(pronounced [ə‘fain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1 style="border-bottom: none"&gt; &lt;b&gt;&lt;a href="https://affine.pro"&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt; Write, Draw and Plan All at Once &lt;br /&gt; &lt;/h1&gt; 
 &lt;a href="https://affine.pro/download"&gt; &lt;img alt="affine logo" src="https://cdn.affine.pro/Github_hero_image2.png" style="width: 100%" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp;amp; Miro. &lt;br /&gt; One hyper-fused platform for wildly creative minds. &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-affine-3" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;amp;theme=light" alt="AFFiNE - One app for all - Where Notion meets Miro | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="left" valign="middle"&gt; 
  &lt;a href="https://runblaze.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://www.runblaze.dev/logo_dark.png" /&gt; 
    &lt;img align="right" src="https://www.runblaze.dev/logo_light.png" height="102px" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
  &lt;br style="display: none;" /&gt; 
  &lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://runblaze.dev"&gt;Blaze&lt;/a&gt; for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp;amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times.&lt;/em&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://affine.pro"&gt;Home Page&lt;/a&gt; | 
  &lt;a href="https://affine.pro/redirect/discord"&gt;Discord&lt;/a&gt; | 
  &lt;a href="https://app.affine.pro"&gt;Live Demo&lt;/a&gt; | 
  &lt;a href="https://affine.pro/blog/"&gt;Blog&lt;/a&gt; | 
  &lt;a href="https://docs.affine.pro/"&gt;Documentation&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/toeverything/AFFiNE/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/toeverything/AFFiNE/total" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/#contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/toeverything/AFFiNE" alt="All Contributors" /&gt;&lt;/a&gt; &lt;a href="https://www.typescriptlang.org/"&gt;&lt;img src="https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript" alt="TypeScript-version-icon" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (əˈfʌɪn | a-fine).&lt;/em&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253" style="width: 100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting started &amp;amp; staying tuned with us.&lt;/h2&gt; 
&lt;p&gt;Star us, and you will receive all release notifications from GitHub without any delay!&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif" style="width: 100%" /&gt; 
&lt;h2&gt;What is AFFiNE&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://affine.pro"&gt;AFFiNE&lt;/a&gt; is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It's a better alternative to Notion and Miro.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A true canvas for blocks in any form. Docs and whiteboard are now fully merged.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Multimodal AI partner ready to kick in any work&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, &lt;a href="https://affine.pro/ai"&gt;AFFiNE AI&lt;/a&gt; pushes your creativity to the edge of your imagination, just like &lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;Canvas AI&lt;/a&gt; to generate mind map for brainstorming.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Local-first &amp;amp; Real-time collaborative&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Self-host &amp;amp; Shape your own AFFiNE&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on &lt;a href="https://blocksuite.io"&gt;Blocksuite&lt;/a&gt;. Check there to learn how to &lt;a href="https://docs.affine.pro/self-host-affine"&gt;self-host AFFiNE&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;“We shape our tools and thereafter our tools shape us”. A lot of pioneers have inspired us along the way, e.g.:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quip &amp;amp; Notion with their great concept of “everything is a block”&lt;/li&gt; 
 &lt;li&gt;Trello with their Kanban&lt;/li&gt; 
 &lt;li&gt;Airtable &amp;amp; Miro with their no-code programmable datasheets&lt;/li&gt; 
 &lt;li&gt;Miro &amp;amp; Whimiscal with their edgeless visual whiteboard&lt;/li&gt; 
 &lt;li&gt;Remote &amp;amp; Capacities with their object-based tag system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There is a large overlap of their atomic “building blocks” between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.&lt;/p&gt; 
&lt;p&gt;Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! 🎵 Checking &lt;a href="https://affine.pro/"&gt;https://affine.pro/&lt;/a&gt; for more details ions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Bug Reports&lt;/th&gt; 
   &lt;th&gt;Feature Requests&lt;/th&gt; 
   &lt;th&gt;Questions/Discussions&lt;/th&gt; 
   &lt;th&gt;AFFiNE Community&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=bug%2Cproduct-review&amp;amp;template=BUG-REPORT.yml&amp;amp;title=TITLE"&gt;Create a bug report&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=feat%2Cproduct-review&amp;amp;template=FEATURE-REQUEST.yml&amp;amp;title=TITLE"&gt;Submit a feature request&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/discussions"&gt;Check GitHub Discussion&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://community.affine.pro"&gt;Vist the AFFiNE Community&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Something isn't working as expected&lt;/td&gt; 
   &lt;td&gt;An idea for a new feature, or improvements&lt;/td&gt; 
   &lt;td&gt;Discuss and ask questions&lt;/td&gt; 
   &lt;td&gt;A place to ask, learn and engage with others&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/types-of-contributions.md"&gt;docs/types-of-contributions.md&lt;/a&gt;. If you are interested in contributing code, read our &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/CONTRIBUTING.md"&gt;docs/CONTRIBUTING.md&lt;/a&gt; and feel free to check out our GitHub issues to get stuck in to show us what you’re made of.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before you start contributing, please make sure you have read and accepted our &lt;a href="https://github.com/toeverything/affine/edit/canary/.github/CLA.md"&gt;Contributor License Agreement&lt;/a&gt;. To indicate your agreement, simply edit this file and submit a pull request.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;bug reports&lt;/strong&gt;, &lt;strong&gt;feature requests&lt;/strong&gt; and other &lt;strong&gt;suggestions&lt;/strong&gt; you can also &lt;a href="https://github.com/toeverything/AFFiNE/issues/new/choose"&gt;create a new issue&lt;/a&gt; and choose the most appropriate template for your feedback.&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;translation&lt;/strong&gt; and &lt;strong&gt;language support&lt;/strong&gt; you can visit our &lt;a href="https://community.affine.pro/c/i18n-general"&gt;i18n General Space&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Looking for &lt;strong&gt;other ways to contribute&lt;/strong&gt; and wondering where to start? Check out the &lt;a href="https://community.affine.pro/c/start-here/affine-ambassador"&gt;AFFiNE Ambassador program&lt;/a&gt;, we work closely with passionate community members and provide them with a wide range of support and resources.&lt;/p&gt; 
&lt;p&gt;If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the &lt;a href="https://community.affine.pro"&gt;AFFiNE Community&lt;/a&gt; where you can engage with other like-minded individuals.&lt;/p&gt; 
&lt;h2&gt;Templates&lt;/h2&gt; 
&lt;p&gt;AFFiNE now provides pre-built &lt;a href="https://affine.pro/templates"&gt;templates&lt;/a&gt; from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-vision-board-template"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-one-pager-template-free"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/sample-lesson-plan-math-template"&gt;sample lesson plan math template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/grr-lesson-plan-template-free"&gt;grr lesson plan template free&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k"&gt;free editable lesson plan template for pre k&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/high-note-collection-planners"&gt;high note collection planners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-digital-planner"&gt;digital planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/adhd-planner"&gt;ADHD Planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/reading-log"&gt;Reading Log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-cornell-notes-template"&gt;Cornell Notes Template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;p&gt;Welcome to the AFFiNE blog section! Here, you’ll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/ai-homework-helper"&gt;ai homework helper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/vision-board-maker"&gt;vision board maker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/free-customized-travel-itinerary-planner-templates"&gt;itinerary template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips"&gt;cornell notes template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples"&gt;swot chart template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/apps-like-luna-task"&gt;apps like luna task&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/dynamic-AI-notes"&gt;note taking ai from rough notes to mind map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;canvas ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates"&gt;SOP Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults"&gt;Chore Chart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/frontend/component"&gt;@affine/component&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE Component Resources&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/common/theme"&gt;@toeverything/theme&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE theme&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@toeverything/theme"&gt;&lt;img src="https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;amp;color=eee" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Upstreams&lt;/h2&gt; 
&lt;p&gt;We would also like to give thanks to open-source projects that make AFFiNE possible:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/BlockSuite"&gt;Blocksuite&lt;/a&gt; - 💠 BlockSuite is the open-source collaborative editor project behind AFFiNE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/OctoBase"&gt;OctoBase&lt;/a&gt; - 🐙 OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs/yjs"&gt;yjs&lt;/a&gt; - Fundamental support of CRDTs for our implementation on state management and data sync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron/electron"&gt;electron&lt;/a&gt; - Build cross-platform desktop apps with JavaScript, HTML, and CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; - The library for web and native user interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/napi-rs/napi-rs"&gt;napi-rs&lt;/a&gt; - A framework for building compiled Node.js add-ons in Rust via Node-API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmndrs/jotai"&gt;Jotai&lt;/a&gt; - Primitive and flexible state management for React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jack-Works/async-call-rpc"&gt;async-call-rpc&lt;/a&gt; - A lightweight JSON RPC client &amp;amp; server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;Vite&lt;/a&gt; - Next generation frontend tooling.&lt;/li&gt; 
 &lt;li&gt;Other upstream &lt;a href="https://github.com/toeverything/AFFiNE/network/dependencies"&gt;dependencies&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: &lt;a href="https://github.com/toeverything/awesome-affine"&gt;awesome-affine&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://github.com/toeverything/affine/graphs/contributors"&gt; &lt;img alt="contributors" src="https://opencollective.com/affine/contributors.svg?width=890&amp;amp;button=false" /&gt; &lt;/a&gt; 
&lt;h2&gt;Self-Host&lt;/h2&gt; 
&lt;p&gt;Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our &lt;a href="https://docs.affine.pro/self-host-affine"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hiring&lt;/h2&gt; 
&lt;p&gt;Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our &lt;a href="https://affine.pro/redirect/discord"&gt;Discord channel&lt;/a&gt; for some of the latest jobs available.&lt;/p&gt; 
&lt;h2&gt;Feature Request&lt;/h2&gt; 
&lt;p&gt;For feature requests, please see &lt;a href="https://community.affine.pro/c/feature-requests/"&gt;community.affine.pro&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;h3&gt;Codespaces&lt;/h3&gt; 
&lt;p&gt;From the GitHub repo main page, click the green "Code" button and select "Create codespace on master". This will open a new Codespace with the (supposedly auto-forked AFFiNE repo cloned, built, and ready to go.&lt;/p&gt; 
&lt;h3&gt;Local&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build AFFiNE from source code.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from everyone. See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/contributing/tutorial.md"&gt;docs/contributing/tutorial.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png" width="153" height="30" alt="Chromatic" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href="https://www.chromatic.com/"&gt;Chromatic&lt;/a&gt; for providing the visual testing platform that helps us review UI changes and catch visual regressions.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;h3&gt;Editions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Community Edition (CE) is the current available version, it's free for self-host under the MIT license.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to &lt;a href="https://affine.pro/pricing"&gt;https://affine.pro/pricing&lt;/a&gt; for more information&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UfoMiao/zcf</title>
      <link>https://github.com/UfoMiao/zcf</link>
      <description>&lt;p&gt;Zero-Config Code Flow for Claude code &amp; Codex&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://npmjs.com/package/zcf"&gt;&lt;img src="https://img.shields.io/npm/v/zcf?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/zcf"&gt;&lt;img src="https://img.shields.io/npm/dm/zcf?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ufomiao/zcf/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/ufomiao/zcf.svg?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://claude.ai/code"&gt;&lt;img src="https://img.shields.io/badge/Claude-Code-1fa669?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/UfoMiao/zcf"&gt;&lt;img src="https://codecov.io/gh/UfoMiao/zcf/graph/badge.svg?token=HZI6K4Y7D7&amp;amp;style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://www.jsdocs.io/package/zcf"&gt;&lt;img src="https://img.shields.io/badge/jsdocs-reference-1fa669?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="JSDocs" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/UfoMiao/zcf"&gt;&lt;img src="https://img.shields.io/badge/Ask-DeepWiki-1fa669?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/banner.webp" alt="Banner" /&gt; 
 &lt;h1&gt; ZCF - Zero-Config Code Flow &lt;/h1&gt; 
 &lt;p align="center"&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/README_zh-CN.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/README_ja-JP.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/CHANGELOG.md"&gt;Changelog&lt;/a&gt; &lt;/p&gt;
 &lt;p&gt;&lt;strong&gt;✨ Quick Links&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-codex-support-v300-new"&gt;Codex Support&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-bmad-workflow-v27-new-feature"&gt;BMad Workflow&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-spec-workflow-v2124-new-feature"&gt;Spec Workflow&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-open-web-search-v2129-new-feature"&gt;Open Web Search&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-ccr-claude-code-router-support-v28-enhanced"&gt;CCR Router&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-ccometixline-support-status-bar-tool-v299-new"&gt;CCometixLine&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-ai-output-styles-v212-new-feature"&gt;Output Styles&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-multi-configuration-management-v320-new"&gt;Multi-Configuration Management&lt;/a&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Zero-config, one-click setup for Claude Code &amp;amp; Codex with bilingual support, intelligent agent system and personalized AI assistant&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;♥️ Sponsor AI API&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://share.302.ai/gAT9VG"&gt;&lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/302.ai-en.jpg" alt="Sponsor AI API" /&gt;&lt;/a&gt; &lt;a href="https://share.302.ai/gAT9VG"&gt;302.AI&lt;/a&gt; is a pay-as-you-go enterprise AI resource hub that offers the latest and most comprehensive AI models and APIs on the market, along with a variety of ready-to-use online AI applications.&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;🎯 Recommended: Use Interactive Menu (v2.0 New)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf          # Open interactive menu and choose operations based on your needs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Menu options include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1&lt;/code&gt; Full initialization (equivalent to &lt;code&gt;zcf i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2&lt;/code&gt; Import workflows (equivalent to &lt;code&gt;zcf u&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;3&lt;/code&gt; Configure API or CCR - API configuration or CCR proxy setup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;4&lt;/code&gt; Configure MCP - MCP service configuration and management&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;5&lt;/code&gt; Configure default model - Set default model (opus/sonnet/sonnet 1m/custom)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;6&lt;/code&gt; Configure AI memory - Configure AI output language and global output style&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;7&lt;/code&gt; Configure environment permissions - Import environment variables and permissions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;R&lt;/code&gt; Claude Code Router management (enhanced in v2.8.1)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;U&lt;/code&gt; ccusage - Claude Code usage analysis&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;L&lt;/code&gt; CCometixLine - High-performance statusline tool with Git integration and real-time usage tracking (v2.9.9+ new)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; Check updates - Check and update Claude Code, CCR and CCometixLine versions (v2.9.9+ enhanced)&lt;/li&gt; 
 &lt;li&gt;More features...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🎯 Key Configuration Features&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Model Configuration (Option 5)&lt;/strong&gt;: Configure your default Claude model with flexible options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Default&lt;/strong&gt;: Let Claude Code automatically choose the best model for each task&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Opus&lt;/strong&gt;: Use Claude-4.1-Opus exclusively (high token consumption, use with caution)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sonnet 1M&lt;/strong&gt;: Use Sonnet with 1M context window for larger context tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom&lt;/strong&gt;: Specify your own model names for both primary and fast tasks (supports any custom model)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;AI Memory Configuration (Option 6)&lt;/strong&gt;: Personalize your AI assistant:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI Output Language&lt;/strong&gt;: Set the language for AI responses (Chinese, English, or custom)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Global Output Style&lt;/strong&gt;: Configure AI personality and response style&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Or, use direct commands:&lt;/h3&gt; 
&lt;h4&gt;🆕 First time using Claude Code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf i        # Execute full initialization directly: Install Claude Code + Import workflows + Configure API + Set up MCP services
# or
npx zcf → select 1  # Execute full initialization via menu
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🔄 Already have Claude Code installed&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf u        # Update workflows only: Quick add AI workflows and command system
# or
npx zcf → select 2  # Execute workflow update via menu
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Since v2.0, &lt;code&gt;zcf&lt;/code&gt; opens the interactive menu by default, providing a visual operation interface&lt;/li&gt; 
  &lt;li&gt;You can choose operations through the menu or use commands directly for quick execution&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;zcf i&lt;/code&gt; = full initialization, &lt;code&gt;zcf u&lt;/code&gt; = update workflows only&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🌐 Language Support&lt;/h4&gt; 
&lt;p&gt;ZCF supports bilingual operation with automatic language switching for all commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Use Chinese for all operations
npx zcf --lang zh-CN          # Interactive menu in Chinese
npx zcf init --lang zh-CN      # Initialize with Chinese interface  
npx zcf ccr --all-lang zh-CN    # Configure CCR in Chinese

# Language parameter priority (highest to lowest):
# --all-lang &amp;gt; --lang &amp;gt; saved user preference &amp;gt; interactive prompt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Language Parameters:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--lang, -l&lt;/code&gt;: ZCF interface language (applies to all commands)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--all-lang, -g&lt;/code&gt;: Set all language parameters at once (most convenient)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--config-lang, -c&lt;/code&gt;: Template files language (init/update commands only)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ai-output-lang, -a&lt;/code&gt;: AI assistant output language (init command only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🤖 Non-interactive Mode&lt;/h4&gt; 
&lt;p&gt;For CI/CD and automated setups, use &lt;code&gt;--skip-prompt&lt;/code&gt; with parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using API provider preset (v3.3.0+ New - Simplified)
npx zcf i -s -p 302ai -k "sk-xxx"

# Shorthand version (traditional)
npx zcf i -s -g zh-CN -t api_key -k "sk-xxx" -u "https://xxx.xxx"

# Complete version (traditional)
npx zcf i --skip-prompt --all-lang zh-CN --api-type api_key --api-key "sk-xxx" --api-url "https://xxx.xxx"

# Using provider preset with custom models
npx zcf i -s -p 302ai -k "sk-xxx" -M "claude-sonnet-4-5" -F "claude-haiku-4-5"

# Complete version (with custom models)
npx zcf i --skip-prompt \
  --api-type api_key \
  --api-key "sk-xxx" \
  --api-url "https://xxx.xxx" \
  --api-model "claude-sonnet-4-5" \
  --api-fast-model "claude-haiku-4-5"

# Multiple API configurations (JSON string)
npx zcf i -s --api-configs '[
  {"provider":"302ai","key":"sk-xxx"},
  {"provider":"glm","key":"sk-yyy"},
  {"name":"custom","type":"api_key","key":"sk-zzz","url":"https://custom.api.com","primaryModel":"claude-sonnet-4-5","fastModel":"claude-haiku-4-5","default":true}
]'

# Multiple API configurations (JSON file)
npx zcf i -s --api-configs-file ./api-configs.json

# For Codex with multiple providers
npx zcf i -s -T cx --api-configs '[
  {"provider":"302ai","key":"sk-xxx"},
  {"name":"custom","type":"api_key","key":"sk-yyy","url":"https://custom.api.com","primaryModel":"gpt-5","default":true}
]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🎯 API Provider Presets (v3.3.0+ New)&lt;/h4&gt; 
&lt;p&gt;ZCF now supports API provider presets that automatically configure baseUrl and models, simplifying configuration from 5+ parameters to just 2:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Supported Providers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;302ai&lt;/code&gt; - &lt;a href="https://share.302.ai/gAT9VG"&gt;302.AI&lt;/a&gt; API Service&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;glm&lt;/code&gt; - GLM (z.ai)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;minimax&lt;/code&gt; - MiniMax API Service&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;kimi&lt;/code&gt; - Kimi (Moonshot AI)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom&lt;/code&gt; - Custom API endpoint (requires manual URL configuration)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Usage Examples:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using 302.AI provider
npx zcf i --skip-prompt --provider 302ai --api-key "sk-xxx"
# or shorthand
npx zcf i -s -p 302ai -k "sk-xxx"

# Using GLM provider
npx zcf i -s -p glm -k "sk-xxx"

# Using MiniMax provider
npx zcf i -s -p minimax -k "sk-xxx"

# Using Kimi provider
npx zcf i -s -p kimi -k "sk-xxx"

# Using custom provider (requires URL)
npx zcf i -s -p custom -k "sk-xxx" -u "https://api.example.com"

# For Codex
npx zcf i -s -T cx -p 302ai -k "sk-xxx"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Automatic baseUrl configuration&lt;/li&gt; 
 &lt;li&gt;✅ Automatic authType selection&lt;/li&gt; 
 &lt;li&gt;✅ Automatic model configuration (if available)&lt;/li&gt; 
 &lt;li&gt;✅ Reduces configuration from 5+ parameters to 2&lt;/li&gt; 
 &lt;li&gt;✅ Supports both Claude Code and Codex&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Non-interactive Mode Parameters&lt;/h4&gt; 
&lt;p&gt;When using &lt;code&gt;--skip-prompt&lt;/code&gt;, the following parameters are available:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Values&lt;/th&gt; 
   &lt;th&gt;Required&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--skip-prompt, -s&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Skip all interactive prompts&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Yes (for non-interactive mode)&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--provider, -p&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API provider preset (v3.3.0+ New)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;302ai&lt;/code&gt;, &lt;code&gt;glm&lt;/code&gt;, &lt;code&gt;minimax&lt;/code&gt;, &lt;code&gt;kimi&lt;/code&gt;, &lt;code&gt;custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Simplifies configuration by auto-filling baseUrl and models)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--lang, -l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ZCF display language (applies to all commands)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt; or user's saved preference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--config-lang, -c&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configuration language (template files language)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--ai-output-lang, -a&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AI output language&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;, custom string&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--all-lang, -g&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set all language parameters (applies to all commands)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;, custom string&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Priority: &lt;code&gt;--all-lang&lt;/code&gt; &amp;gt; &lt;code&gt;--lang&lt;/code&gt; &amp;gt; saved user preference &amp;gt; interactive prompt. Custom string sets AI output language to custom while interaction and config languages remain 'en')&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--config-action, -r&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Config handling&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;new&lt;/code&gt;, &lt;code&gt;backup&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, &lt;code&gt;docs-only&lt;/code&gt;, &lt;code&gt;skip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;backup&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-type, -t&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API configuration type&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;auth_token&lt;/code&gt;, &lt;code&gt;api_key&lt;/code&gt;, &lt;code&gt;ccr_proxy&lt;/code&gt;, &lt;code&gt;skip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;skip&lt;/code&gt; (auto-set to &lt;code&gt;api_key&lt;/code&gt; when &lt;code&gt;--provider&lt;/code&gt; is specified)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-key, -k&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API key (for both API key and auth token types)&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;Required when &lt;code&gt;api-type&lt;/code&gt; is not &lt;code&gt;skip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-url, -u&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Custom API URL&lt;/td&gt; 
   &lt;td&gt;URL string&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;official API (auto-filled when using &lt;code&gt;--provider&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-model, -M&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Primary API model&lt;/td&gt; 
   &lt;td&gt;string (e.g., &lt;code&gt;claude-sonnet-4-5&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (auto-filled when using &lt;code&gt;--provider&lt;/code&gt; if available)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-fast-model, -F&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Fast API model (Claude Code only)&lt;/td&gt; 
   &lt;td&gt;string (e.g., &lt;code&gt;claude-haiku-4-5&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (auto-filled when using &lt;code&gt;--provider&lt;/code&gt; if available)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--mcp-services, -m&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;MCP services to install (multi-select, comma-separated)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;context7&lt;/code&gt;, &lt;code&gt;open-websearch&lt;/code&gt;, &lt;code&gt;spec-workflow&lt;/code&gt;, &lt;code&gt;mcp-deepwiki&lt;/code&gt;, &lt;code&gt;Playwright&lt;/code&gt;, &lt;code&gt;exa&lt;/code&gt;, &lt;code&gt;serena&lt;/code&gt;, or &lt;code&gt;skip&lt;/code&gt; for none&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--workflows, -w&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Workflows to install (multi-select, comma-separated)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;commonTools&lt;/code&gt;, &lt;code&gt;sixStepsWorkflow&lt;/code&gt;, &lt;code&gt;featPlanUx&lt;/code&gt;, &lt;code&gt;gitWorkflow&lt;/code&gt;, &lt;code&gt;bmadWorkflow&lt;/code&gt;, or &lt;code&gt;skip&lt;/code&gt; for none&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--output-styles, -o&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Output styles to install (multi-select, comma-separated)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;engineer-professional&lt;/code&gt;, &lt;code&gt;nekomata-engineer&lt;/code&gt;, &lt;code&gt;laowang-engineer&lt;/code&gt;, &lt;code&gt;ojousama-engineer&lt;/code&gt;, or &lt;code&gt;skip&lt;/code&gt; for none&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--default-output-style, -d&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Default output style&lt;/td&gt; 
   &lt;td&gt;Same as output styles plus built-in: &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;explanatory&lt;/code&gt;, &lt;code&gt;learning&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;engineer-professional&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--install-cometix-line, -x&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Install CCometixLine statusline tool&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--code-type, -T&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Target code tool type&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;claude-code&lt;/code&gt;, &lt;code&gt;codex&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;cx&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Current active tool type from ZCF config&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-configs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Multiple API configurations (JSON string)&lt;/td&gt; 
   &lt;td&gt;JSON array string of API configuration objects&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Mutually exclusive with &lt;code&gt;--api-configs-file&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-configs-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Multiple API configurations (JSON file path)&lt;/td&gt; 
   &lt;td&gt;Path to JSON file containing API configuration array&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Mutually exclusive with &lt;code&gt;--api-configs&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;🤖 Codex Support (v3.0.0+ New)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@openai/codex"&gt;Codex&lt;/a&gt; is OpenAI's official code generation CLI tool. ZCF now supports complete Codex integration with the same configuration convenience as Claude Code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Unified Tool Management&lt;/strong&gt;: Switch between Claude Code and Codex seamlessly through ZCF menu&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Configuration&lt;/strong&gt;: Automatic Codex CLI installation, API provider setup, and MCP service integration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Backup System&lt;/strong&gt;: All configuration changes include timestamped backups with recovery capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Provider Support&lt;/strong&gt;: Configure multiple API providers (OpenAI, custom endpoints) with easy switching&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Prompt Integration&lt;/strong&gt;: Install professional AI personalities (Engineer, Nekomata Engineer, Laowang Engineer)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Templates&lt;/strong&gt;: Import structured development workflows optimized for code generation tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Uninstaller&lt;/strong&gt;: Selective removal of Codex components with conflict resolution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Getting Started with Codex:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Switch to Codex mode in ZCF main menu:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf → Select S  # Switch between Claude Code and Codex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or access Codex features directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Full Codex initialization
npx zcf → Select 1 (after switching to Codex mode)

# Individual Codex configuration
npx zcf → Select 3  # Configure Codex API providers
npx zcf → Select 4  # Configure Codex MCP services
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;API Provider Configuration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Official Login&lt;/strong&gt;: Use OpenAI's official authentication system&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Providers&lt;/strong&gt;: Configure multiple API endpoints with provider switching&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Incremental Management&lt;/strong&gt;: Add, edit, or remove providers without affecting existing configuration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;System Prompt Styles&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Engineer Professional&lt;/strong&gt;: SOLID, KISS, DRY, YAGNI principles for robust code&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Nekomata Engineer&lt;/strong&gt;: Cute catgirl engineer with rigorous technical standards&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Laowang Engineer&lt;/strong&gt;: Grumpy tech style that never tolerates substandard code&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Workflow Integration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Six-Step Workflow&lt;/strong&gt;: Structured development process from research to optimization&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Workflows&lt;/strong&gt;: Import and configure task-specific development templates&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;⚠️ Important&lt;/strong&gt;: Due to Codex prompt limitations, &lt;code&gt;/workflow&lt;/code&gt; commands cannot pass parameters directly. Use &lt;code&gt;/workflow&lt;/code&gt; first, then provide task description in follow-up message&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP Services&lt;/strong&gt;: Full compatibility with existing MCP services including:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Context7, Open WebSearch, Spec Workflow&lt;/li&gt; 
   &lt;li&gt;DeepWiki, Playwright, EXA search&lt;/li&gt; 
   &lt;li&gt;Serena Assistant for semantic code retrieval and editing&lt;/li&gt; 
   &lt;li&gt;Automatic service configuration with API key management&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;File Locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configuration: &lt;code&gt;~/.codex/config.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Authentication: &lt;code&gt;~/.codex/auth.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;System Prompts: &lt;code&gt;~/.codex/AGENTS.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Workflows: &lt;code&gt;~/.codex/prompts/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Backups: &lt;code&gt;~/.codex/backup/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Migration Between Tools:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ZCF allows seamless switching between Claude Code and Codex while preserving your preferences and workflow configurations. Both tools share the same MCP services and workflow templates for consistent development experience.&lt;/p&gt; 
&lt;h4&gt;🎨 AI Output Styles (v2.12+ New Feature)&lt;/h4&gt; 
&lt;p&gt;ZCF now supports customizable AI output styles to personalize your Claude Code experience:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/Haleclipse"&gt; &lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/Haleclipse.gif" alt="Halley-chan" width="200" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;div align="center"&gt;
 Tsundere 
 &lt;a href="https://github.com/Haleclipse"&gt;Halley-chan&lt;/a&gt; Ojou-sama (￣▽￣)ゞ
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available Output Styles:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;engineer-professional&lt;/code&gt;: Professional software engineer following SOLID, KISS, DRY, YAGNI principles&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nekomata-engineer&lt;/code&gt;: Professional catgirl engineer UFO Nya, combining rigorous engineering with cute catgirl traits&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;laowang-engineer&lt;/code&gt;: Laowang grumpy tech style, never tolerates code errors and non-standard code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ojousama-engineer&lt;/code&gt;: Tsundere blonde ojou-sama programmer Halley-chan, combining rigorous engineering excellence with tsundere ojou-sama traits&lt;/li&gt; 
 &lt;li&gt;Built-in styles: &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;explanatory&lt;/code&gt;, &lt;code&gt;learning&lt;/code&gt; (always available)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install multiple styles and switch between them&lt;/li&gt; 
 &lt;li&gt;Set global default style for all projects&lt;/li&gt; 
 &lt;li&gt;Automatic cleanup of legacy personality files&lt;/li&gt; 
 &lt;li&gt;Template-based customization system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Usage Tips:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;/output-style&lt;/code&gt; command to switch project-level output styles anytime&lt;/li&gt; 
 &lt;li&gt;Or modify global output styles in ZCF menu option 6&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Claude Code version must be greater than 1.0.81 to support output-style. Use &lt;code&gt;npx zcf check&lt;/code&gt; to update.&lt;/li&gt; 
 &lt;li&gt;Legacy global memory rules have been migrated to the &lt;code&gt;engineer-professional&lt;/code&gt; output style, solving issues with excessive token usage and AI forgetting global memory.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🎯 BMad Workflow (v2.7 New Feature)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/bmad-code-org/BMAD-METHOD"&gt;BMad&lt;/a&gt; (BMad-Method: Universal AI Agent Framework) is an enterprise-grade workflow system that provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Complete team of specialized AI agents (PO, PM, Architect, Dev, QA, etc.)&lt;/li&gt; 
 &lt;li&gt;Structured development process with quality gates&lt;/li&gt; 
 &lt;li&gt;Automatic documentation generation&lt;/li&gt; 
 &lt;li&gt;Support for both greenfield and brownfield projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After installation, use &lt;code&gt;/bmad-init&lt;/code&gt; to initialize the BMad workflow in your project.&lt;/p&gt; 
&lt;h4&gt;📋 Spec Workflow (v2.12.4+ New Feature)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/Pimzino/spec-workflow-mcp"&gt;Spec Workflow&lt;/a&gt; is a comprehensive MCP service that provides structured feature development workflow from requirements to implementation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Requirements Analysis&lt;/strong&gt;: Structured requirements gathering and documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Design Phase&lt;/strong&gt;: Detailed technical design and architecture planning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Management&lt;/strong&gt;: Automatic task breakdown and progress tracking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Implementation Workflow&lt;/strong&gt;: Systematic approach from requirements to implementation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interactive Dashboard&lt;/strong&gt;: Built-in dashboard for workflow visualization and management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Approval System&lt;/strong&gt;: Review and approval process for each development phase&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Spec Workflow MCP provides an optional dashboard for workflow visualization. Users can manually launch the dashboard using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx -y @pimzino/spec-workflow-mcp@latest --dashboard
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Pimzino.spec-workflow-mcp"&gt;VS Code extension&lt;/a&gt; for integrated workflow management.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Usage Guide&lt;/strong&gt;: For detailed usage instructions and best practices, see the &lt;a href="https://github.com/Pimzino/spec-workflow-mcp/raw/main/README.md#quick-start"&gt;official Spec Workflow documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;🔍 Open Web Search (v2.12.9+ New Feature)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/Aas-ee/open-webSearch"&gt;Open Web Search&lt;/a&gt; is a versatile web search MCP service that provides access to multiple search engines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Engine Support&lt;/strong&gt;: Search across DuckDuckGo, Bing, and Brave search engines&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy-Focused&lt;/strong&gt;: Uses privacy-respecting search engines as defaults&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Configuration&lt;/strong&gt;: Customizable search engine preferences&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No API Key Required&lt;/strong&gt;: Ready to use without additional authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Search Aggregation&lt;/strong&gt;: Ability to combine results from multiple engines&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🚀 CCR (Claude Code Router) Support (v2.8+ Enhanced)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/musistudio/claude-code-router/raw/main/README.md"&gt;CCR&lt;/a&gt; is a powerful proxy router that enables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free Model Access&lt;/strong&gt;: Use free AI models (like Gemini, DeepSeek) through Claude Code interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Routing&lt;/strong&gt;: Route different types of requests to different models based on your rules&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost Optimization&lt;/strong&gt;: Significantly reduce API costs by using appropriate models for different tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Management&lt;/strong&gt;: Interactive menu for CCR configuration and service control&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto Updates&lt;/strong&gt;: Automatic version checking and updates for CCR and Claude Code (v2.8.1+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To access CCR features:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf ccr      # Open CCR management menu
# or
npx zcf → select R
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CCR menu options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Initialize CCR - Install and configure CCR with preset providers&lt;/li&gt; 
 &lt;li&gt;Start UI - Launch CCR web interface for advanced configuration&lt;/li&gt; 
 &lt;li&gt;Service Control - Start/stop/restart CCR service&lt;/li&gt; 
 &lt;li&gt;Check Status - View current CCR service status&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After CCR setup, ZCF automatically configures Claude Code to use CCR as the API proxy.&lt;/p&gt; 
&lt;h4&gt;📊 CCometixLine Support (Status Bar Tool) (v2.9.9+ New)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/Haleclipse/CCometixLine"&gt;CCometixLine&lt;/a&gt; is a high-performance Rust-based statusline tool that provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Usage Tracking&lt;/strong&gt;: Monitor Claude Code API usage in real-time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Git Integration&lt;/strong&gt;: Display Git status and branch information&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Status Line Display&lt;/strong&gt;: Native integration with your terminal statusline&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Optimized&lt;/strong&gt;: Built with Rust for minimal resource usage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TUI Configuration&lt;/strong&gt;: Interactive terminal UI for customizing themes, segments, and display options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto Updates&lt;/strong&gt;: Included in ZCF's update checking system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CCometixLine menu options (accessible via &lt;code&gt;npx zcf&lt;/code&gt; → &lt;code&gt;L&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1&lt;/code&gt; Install or Update - Install or update CCometixLine using npm&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2&lt;/code&gt; Print Default Configuration - Display current CCometixLine configuration&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;3&lt;/code&gt; Custom Config - TUI Configuration Mode - Interactive terminal UI for customizing settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Important Note for v2.9.9 Users&lt;/strong&gt;: If you have previously used ZCF v2.9.9 to set up your environment, please re-run the initialization process to ensure CCometixLine configuration is properly added. Run &lt;code&gt;npx zcf&lt;/code&gt; and select the appropriate setup option to update your configuration with CCometixLine support.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🚀 Check for updates (v2.8.1+, CCometixLine support v2.9.9+):&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf check-updates  # Check and update Claude Code, CCR and CCometixLine to latest versions
# or
npx zcf → select +
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setup Process&lt;/h3&gt; 
&lt;p&gt;Full initialization (&lt;code&gt;npx zcf&lt;/code&gt;) will automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Detect and install Claude Code&lt;/li&gt; 
 &lt;li&gt;✅ Select AI output language (new feature)&lt;/li&gt; 
 &lt;li&gt;✅ Configure API keys or CCR proxy&lt;/li&gt; 
 &lt;li&gt;✅ Select and configure MCP services&lt;/li&gt; 
 &lt;li&gt;✅ Set up all necessary configuration files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;After configuration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;For first-time project use, strongly recommend running &lt;code&gt;/init-project&lt;/code&gt; to generate CLAUDE.md for better AI understanding of project architecture&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;task description&amp;gt;&lt;/code&gt; - Execute directly without workflow, following SOLID, KISS, DRY, and YAGNI principles, suitable for small tasks like bug fixes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/feat &amp;lt;task description&amp;gt;&lt;/code&gt; - Start new feature development, divided into plan and UI phases&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/workflow &amp;lt;task description&amp;gt;&lt;/code&gt; - Execute complete development workflow, not automated, starts with multiple solution options, asks for user feedback at each step, allows plan modifications, maximum control&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Both feat and workflow have their advantages, try both to compare&lt;/li&gt; 
  &lt;li&gt;Generated documents are located by default at &lt;code&gt;.claude/xxx.md&lt;/code&gt; in project root, you can add &lt;code&gt;.claude/&lt;/code&gt; to your project's &lt;code&gt;.gitignore&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;✨ ZCF Tool Features&lt;/h2&gt; 
&lt;h3&gt;🌏 Multi-language Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Script interaction language: Controls installation prompts language&lt;/li&gt; 
 &lt;li&gt;Configuration file language: Determines which configuration set to install (zh-CN/en)&lt;/li&gt; 
 &lt;li&gt;AI output language: Choose the language for AI responses (supports Chinese, English, and custom languages)&lt;/li&gt; 
 &lt;li&gt;AI output styles: Support multiple preset styles (Professional Engineer, Nekomata Engineer, Laowang Engineer, Ojou-sama Engineer) for customized experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 Smart Installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Auto-detects Claude Code installation status&lt;/li&gt; 
 &lt;li&gt;Uses npm for automatic installation (ensures compatibility)&lt;/li&gt; 
 &lt;li&gt;Cross-platform support (Windows/macOS/Linux/WSL/Termux)&lt;/li&gt; 
 &lt;li&gt;Automatic MCP service configuration&lt;/li&gt; 
 &lt;li&gt;Smart configuration merging and partial modification support (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;Enhanced command detection mechanism (v2.1 new)&lt;/li&gt; 
 &lt;li&gt;Dangerous operation confirmation mechanism (v2.3 new)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📦 Complete Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CLAUDE.md system instructions&lt;/li&gt; 
 &lt;li&gt;settings.json configuration file&lt;/li&gt; 
 &lt;li&gt;commands custom commands&lt;/li&gt; 
 &lt;li&gt;agents AI agent configurations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔐 API Configuration&lt;/h3&gt; 
&lt;p&gt;ZCF provides flexible API configuration options for both Claude Code and Codex:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Quick Setup with API Provider Presets (v3.3.0+ New):&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Choose from popular API providers with pre-configured settings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;302.AI&lt;/strong&gt; - Pay-as-you-go AI service with comprehensive model support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GLM (智谱AI)&lt;/strong&gt; - Zhipu AI's GLM models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MiniMax&lt;/strong&gt; - MiniMax AI service&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kimi (Moonshot AI)&lt;/strong&gt; - Moonshot's Kimi models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Configuration&lt;/strong&gt; - Full manual configuration for any provider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When using a preset provider, you only need to:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Select the provider from the list&lt;/li&gt; 
 &lt;li&gt;Enter your API key&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The system automatically configures:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;API base URL&lt;/li&gt; 
 &lt;li&gt;Authentication type (API Key or Auth Token)&lt;/li&gt; 
 &lt;li&gt;Default models (if applicable)&lt;/li&gt; 
 &lt;li&gt;Wire API protocol (for Codex)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Traditional Configuration Methods:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Official Login&lt;/strong&gt;: Use official authentication system (no API configuration needed)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auth Token&lt;/strong&gt;: For tokens obtained via OAuth or browser login&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API Key&lt;/strong&gt;: For API keys from Anthropic Console or custom providers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CCR Proxy&lt;/strong&gt;: Configure Claude Code Router proxy&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom API URL&lt;/strong&gt;: Support for any compatible API endpoint&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Partial Modification&lt;/strong&gt;: Update only needed configuration items (v2.0+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💾 Configuration Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Smart backup of existing configurations (all backups saved in ~/.claude/backup/)&lt;/li&gt; 
 &lt;li&gt;Configuration merge option (v2.0 enhanced: supports deep merge)&lt;/li&gt; 
 &lt;li&gt;Safe overwrite mechanism&lt;/li&gt; 
 &lt;li&gt;Automatic backup before MCP configuration changes&lt;/li&gt; 
 &lt;li&gt;Default model configuration (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;AI memory management (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;ZCF cache cleanup (v2.0 new)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 Multi-Configuration Management (v3.2.0 New)&lt;/h3&gt; 
&lt;p&gt;Unified, incremental, interactive management for both Claude Code and Codex:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Claude Code: Manage API profiles (add/edit/delete, default profile, duplicate detection)&lt;/li&gt; 
 &lt;li&gt;Codex: Manage model providers (list/switch, official login via interactive)&lt;/li&gt; 
 &lt;li&gt;Safe backups; prevents deleting the last profile (Claude Code)&lt;/li&gt; 
 &lt;li&gt;Applies environment to &lt;code&gt;~/.claude/settings.json&lt;/code&gt; and restarts CCR when needed&lt;/li&gt; 
 &lt;li&gt;Config storage: &lt;code&gt;~/.ufomiao/zcf/config.toml&lt;/code&gt; (backups &lt;code&gt;config.backup.YYYY-MM-DD_HH-mm-ss.toml&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose tool type explicitly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# -T accepts: claude-code|codex or short aliases cc|cx
npx zcf cs --list -T cc    # List Claude Code profiles
npx zcf cs --list -T cx    # List Codex providers
npx zcf cs -l -T cc        # Short option for --list
npx zcf cs -l -T cx        # Short option for --list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Claude Code usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Quick switch
npx zcf cs official -T cc  # Switch to official login
npx zcf cs ccr -T cc       # Switch to CCR proxy
npx zcf cs my-profile -T cc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Codex usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# List and switch providers
npx zcf cs --list -T cx
npx zcf cs my-provider -T cx

# Switch to official login (interactive selection)
npx zcf config-switch -T cx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ENV mapping (Claude Code): API Key → &lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;, Auth Token → &lt;code&gt;ANTHROPIC_AUTH_TOKEN&lt;/code&gt;, Base URL → &lt;code&gt;ANTHROPIC_BASE_URL&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Active code tool type is stored in ZCF config; use &lt;code&gt;-T cc/cx&lt;/code&gt; only when targeting a different tool than the current one.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📖 Usage Instructions&lt;/h2&gt; 
&lt;h3&gt;Interactive Menu (v2.0)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ npx zcf

 ZCF - Zero-Config Code Flow

? Select ZCF display language / 选择ZCF显示语言:
  ❯ 简体中文
    English

Select function:
  -------- Claude Code --------
  1. Full initialization - Install Claude Code + Import workflow + Configure API or CCR proxy + Configure MCP services
  2. Import workflow - Import/update workflow-related files only
  3. Configure API - Configure API URL and authentication (supports CCR proxy)
  4. Configure MCP - Configure MCP services (includes Windows fix)
  5. Configure default model - Set default model (opus/sonnet/sonnet 1m/custom)
  6. Configure Claude global memory - Configure AI output language and output styles
  7. Import recommended environment variables and permissions - Import privacy protection environment variables and system permissions

  --------- Other Tools ----------
  R. CCR - Claude Code Router management
  U. ccusage - Claude Code usage analysis
  L. CCometixLine - High-performance statusline tool with Git integration and real-time usage tracking

  ------------ ZCF ------------
  0. Select display language / 更改显示语言 - Change ZCF interface language
  -. Uninstall - Remove Claude Code configurations and tools from system
  +. Check updates - Check and update Claude Code, CCR and CCometixLine versions
  Q. Exit

Enter your choice: _
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Full Initialization Flow (Select 1 or use &lt;code&gt;zcf i&lt;/code&gt;)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;? Select Claude Code configuration language:
  ❯ English (en) - English (recommended, lower token consumption)
    简体中文 (zh-CN) - Chinese (easier for Chinese users to customize)
    日本語 (ja) - Japanese (日本のユーザー向け)

? Select AI output language:
  AI will respond to you in this language
  ❯ English
    简体中文
    日本語
    Custom
    (Supports French, German, and more)

? Claude Code not found. Install automatically? (Y/n)

✔ Claude Code installed successfully

? Existing config detected. How to proceed?
  ❯ Backup and overwrite - Backup existing config to ~/.claude/backup/
    Update docs only - Only update workflows and docs, keep existing API config
    Merge config - Merge with existing config, preserve user customizations
    Skip - Skip configuration update

? Select API authentication method
  ❯ Use Official Login
    Use official authentication system without API configuration
    Use Auth Token (OAuth authentication)
    For tokens obtained via OAuth or browser login
    Use API Key (Key authentication)
    For API keys from Anthropic Console
    Configure CCR Proxy (Claude Code Router)
    Use multiple AI models via proxy routing to reduce costs and explore possibilities
    Skip (configure manually later)

? Enter API URL: https://api.anthropic.com
? Enter Auth Token or API Key: xxx

? Select output styles to install:
  ❯ Engineer Professional - Professional software engineer following SOLID, KISS, DRY, YAGNI principles
    Nekomata Engineer - Professional catgirl engineer UFO Nya, combining rigorous engineering with cute catgirl traits
    Laowang Grumpy Tech - Laowang grumpy tech style, never tolerates code errors and non-standard code
    Ojou-sama Engineer - Tsundere blonde ojou-sama programmer Halley-chan, combining rigorous engineering excellence with tsundere ojou-sama traits

? Select global default output style:
  ❯ Engineer Professional

? Select workflows to install (space to select, enter to confirm):
❯ ◉ Common Tools (init-project + init-architect + get-current-datetime) - Essential project initialization and utility commands
◉ Six Steps Workflow (workflow) - Complete 6-phase development process
◉ Feature Planning and UX Design (feat + planner + ui-ux-designer) - Structured feature development
◉ Git Commands (commit + rollback + cleanBranches + worktree) - Streamlined Git operations
◉ BMAD-Method Extension Installer - Enterprise agile development workflow

✔ Installing workflows...
✔ Installed command: zcf/workflow.md
✔ Installed command: zcf/feat.md
✔ Installed agent: zcf/plan/planner.md
✔ Installed agent: zcf/plan/ui-ux-designer.md
✔ Installed command: zcf/git/git-commit.md
✔ Installed command: zcf/git/git-rollback.md
✔ Installed command: zcf/git/git-cleanBranches.md
✔ Installed command: zcf/git/git-worktree.md
✔ Installed command: zcf/bmad-init.md
✔ Workflow installation successful

? Configure MCP services? (Y/n)

? Select MCP services to install (space to select, enter to confirm):
❯ ◉ Context7 Documentation Query - Query latest library docs and code examples
◉ DeepWiki - Query GitHub repository docs and examples
◉ Playwright Browser Control - Direct browser automation control
◉ Exa AI Search - Web search using Exa AI
◉ Serena Assistant - Semantic code retrieval and editing akin to an IDE
◯ Install all services

✔ MCP services configured

? Install CCometixLine statusline tool? (Y/n)

✔ Setup complete! Claude Code environment is ready

🎉 Setup complete! Use 'claude' command to start.

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Command Line Options&lt;/h3&gt; 
&lt;h4&gt;Commands Quick Reference&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Show interactive menu (v2.0 default command)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf init&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zcf i&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Initialize Claude Code configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf update&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zcf u&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Update workflow-related md files with backup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf ccu&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Run Claude Code usage analysis tool - &lt;a href="https://github.com/ryoppippi/ccusage"&gt;ccusage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf ccr&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Open CCR (Claude Code Router) management menu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf config-switch&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zcf cs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API provider/config switching for Claude Code and Codex (&lt;code&gt;-T cc&lt;/code&gt; / &lt;code&gt;-T cx&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf uninstall&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Interactive uninstall tool for Claude Code configurations and tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf check-updates&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Check and update Claude Code, CCR and CCometixLine versions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Common Options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Specify configuration language
npx zcf --config-lang zh-CN
npx zcf -c zh-CN            # Using short option

# Force overwrite existing configuration
npx zcf --force
npx zcf -f                 # Using short option

# Update workflow-related md files with backup (preserve API and MCP configs)
npx zcf u                  # Using update command
npx zcf update             # Full command

# Show help information
npx zcf --help
npx zcf -h

# Show version
npx zcf --version
npx zcf -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Usage Examples&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Show interactive menu (default)
npx zcf

# First-time installation, complete initialization
npx zcf i
npx zcf init              # Full command

# Update workflow-related md files with backup, keep API and MCP configs
npx zcf u
npx zcf update            # Full command

# Force reinitialize with Chinese config
npx zcf i --config-lang zh-CN --force
npx zcf i -c zh-CN -f      # Using short options

# Update to English prompts (lower token consumption)
npx zcf u --config-lang en
npx zcf u -c en            # Using short option

# Run Claude Code usage analysis tool (powered by ccusage)
npx zcf ccu               # Daily usage (default), or use: monthly, session, blocks

# Codex API provider switching (v3.0.0+ New)
npx zcf config-switch     # Interactive provider selection
npx zcf cs                # Using alias
npx zcf cs provider-name  # Direct switch to specified provider
npx zcf cs --list         # List all available providers
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📁 Project Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;zcf/
├── README.md              # Documentation
├── package.json           # npm package configuration
├── bin/
│   └── zcf.mjs           # CLI entry point
├── src/                  # Source code
│   ├── cli.ts           # CLI main logic
│   ├── commands/        # Command implementations
│   ├── utils/           # Utility functions
│   └── constants.ts     # Constant definitions
├── templates/            # Configuration templates
│   ├── CLAUDE.md        # Project level config (v2.0 new)
│   ├── settings.json    # Base configuration (with privacy env vars)
│   ├── en/              # English version
│   │   ├── rules.md     # Core principles (formerly CLAUDE.md)
│   │   ├── output-styles/ # AI output styles (v2.12+ new)
│   │   ├── mcp.md       # MCP services guide (v2.0 new)
│   │   ├── agents/      # AI agents
│   │   └── commands/    # Command definitions
│   └── zh-CN/           # Chinese version
│       └── ... (same structure)
└── dist/                # Build output
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;✨ Core Features (v2.0 Enhanced)&lt;/h2&gt; 
&lt;h3&gt;🤖 Professional Agents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Task Planner&lt;/strong&gt;: Breaks down complex tasks into executable steps&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI/UX Designer&lt;/strong&gt;: Provides professional interface design guidance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Personality&lt;/strong&gt;: Support multiple preset personalities and custom (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;BMad Team&lt;/strong&gt; (New): Complete agile development team including: 
  &lt;ul&gt; 
   &lt;li&gt;Product Owner (PO): Requirements elicitation and prioritization&lt;/li&gt; 
   &lt;li&gt;Project Manager (PM): Planning and coordination&lt;/li&gt; 
   &lt;li&gt;System Architect: Technical design and architecture&lt;/li&gt; 
   &lt;li&gt;Developer: Implementation and coding&lt;/li&gt; 
   &lt;li&gt;QA Engineer: Testing and quality assurance&lt;/li&gt; 
   &lt;li&gt;Scrum Master (SM): Process facilitation&lt;/li&gt; 
   &lt;li&gt;Business Analyst: Requirements analysis&lt;/li&gt; 
   &lt;li&gt;UX Expert: User experience design&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚡ Command System&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Feature Development&lt;/strong&gt; (&lt;code&gt;/feat&lt;/code&gt;): Structured new feature development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow&lt;/strong&gt; (&lt;code&gt;/workflow&lt;/code&gt;): Complete six-phase development workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Git Commands&lt;/strong&gt;: Streamlined Git operations 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;/git-commit&lt;/code&gt;: Smart commit with automatic staging and message generation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/git-rollback&lt;/code&gt;: Safely rollback to previous commits with backup&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/git-cleanBranches&lt;/code&gt;: Clean up merged branches and maintain repository hygiene&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/git-worktree&lt;/code&gt;: Manage Git worktrees with IDE integration and content migration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;BMad Workflow&lt;/strong&gt; (&lt;code&gt;/bmad-init&lt;/code&gt;): Initialize BMad workflow for enterprise development 
  &lt;ul&gt; 
   &lt;li&gt;Supports both greenfield (new projects) and brownfield (existing projects)&lt;/li&gt; 
   &lt;li&gt;Provides comprehensive templates for PRDs, architecture docs, and user stories&lt;/li&gt; 
   &lt;li&gt;Integrated quality gates and checklist system&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 Smart Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;API key management (supports partial modification)&lt;/li&gt; 
 &lt;li&gt;Fine-grained permission control&lt;/li&gt; 
 &lt;li&gt;Multiple Claude model support (configurable default model)&lt;/li&gt; 
 &lt;li&gt;Interactive menu system (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;AI memory management (v2.0 new)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 Development Workflow&lt;/h2&gt; 
&lt;h3&gt;Six-Phase Workflow&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;[Mode: Research] - Understand requirements&lt;/li&gt; 
 &lt;li&gt;[Mode: Ideate] - Design solutions&lt;/li&gt; 
 &lt;li&gt;[Mode: Plan] - Create detailed plan&lt;/li&gt; 
 &lt;li&gt;[Mode: Execute] - Implement development&lt;/li&gt; 
 &lt;li&gt;[Mode: Optimize] - Improve quality&lt;/li&gt; 
 &lt;li&gt;[Mode: Review] - Final assessment&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🛠️ Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the project
git clone https://github.com/UfoMiao/zcf.git
cd zcf

# Install dependencies (using pnpm)
pnpm install

# Build project
pnpm build

# Local testing
node bin/zcf.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💡 Best Practices&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Task Breakdown&lt;/strong&gt;: Keep tasks independent and testable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Quality&lt;/strong&gt;: Follow SOLID, KISS, DRY, and YAGNI principles&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation Management&lt;/strong&gt;: The plan will be stored in the &lt;code&gt;.claude/plan/&lt;/code&gt; directory at the project root&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🔧 Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter issues:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Re-run &lt;code&gt;npx zcf&lt;/code&gt; to reconfigure&lt;/li&gt; 
 &lt;li&gt;Check configuration files in &lt;code&gt;~/.claude/&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;Ensure Claude Code is properly installed&lt;/li&gt; 
 &lt;li&gt;If paths contain spaces, ZCF will automatically handle quote wrapping&lt;/li&gt; 
 &lt;li&gt;Use ripgrep (&lt;code&gt;rg&lt;/code&gt;) preferentially for file searching for better performance&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Cross-Platform Support&lt;/h3&gt; 
&lt;h4&gt;Windows Platform&lt;/h4&gt; 
&lt;p&gt;ZCF fully supports Windows platform:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-detection&lt;/strong&gt;: Automatically uses compatible &lt;code&gt;cmd /c npx&lt;/code&gt; format on Windows systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Config repair&lt;/strong&gt;: Existing incorrect configurations are automatically fixed during updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zero-config&lt;/strong&gt;: Windows users don't need any extra steps, same experience as macOS/Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you encounter MCP connection issues on Windows, running &lt;code&gt;npx zcf&lt;/code&gt; will automatically fix the configuration format.&lt;/p&gt; 
&lt;h4&gt;WSL Support (v2.12.12+ new)&lt;/h4&gt; 
&lt;p&gt;ZCF now provides comprehensive support for Windows Subsystem for Linux (WSL):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Detection&lt;/strong&gt;: Multi-layered WSL environment detection using environment variables, system files, and mount points&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distribution Recognition&lt;/strong&gt;: Automatically identifies WSL distribution (Ubuntu, Debian, etc.) for optimized configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Installation&lt;/strong&gt;: Native Linux-style installation experience within WSL environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Path Management&lt;/strong&gt;: Intelligent handling of WSL-specific configuration paths and file locations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If running in WSL, ZCF will automatically detect the environment and display appropriate installation messages.&lt;/p&gt; 
&lt;h4&gt;Termux Support (v2.1 new)&lt;/h4&gt; 
&lt;p&gt;ZCF now supports running in Android Termux environment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-adaptation&lt;/strong&gt;: Automatically detects Termux environment and uses compatible configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced detection&lt;/strong&gt;: Intelligently identifies available commands, ensuring normal operation in restricted environments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full functionality&lt;/strong&gt;: Enjoy the same complete features in Termux as on desktop systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security Features (v2.3 new)&lt;/h3&gt; 
&lt;h4&gt;Dangerous Operation Confirmation Mechanism&lt;/h4&gt; 
&lt;p&gt;To protect user data security, the following operations require explicit confirmation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;File System&lt;/strong&gt;: Delete files/directories, bulk modifications, move system files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Commits&lt;/strong&gt;: &lt;code&gt;git commit&lt;/code&gt;, &lt;code&gt;git push&lt;/code&gt;, &lt;code&gt;git reset --hard&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Config&lt;/strong&gt;: Modify environment variables, system settings, permissions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Operations&lt;/strong&gt;: Database deletions, schema changes, bulk updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Network Requests&lt;/strong&gt;: Send sensitive data, call production APIs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Package Management&lt;/strong&gt;: Global install/uninstall, update core dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙏 Acknowledgments&lt;/h2&gt; 
&lt;p&gt;This project is inspired by and incorporates the following open source projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://linux.do"&gt;LINUX DO - The New Ideal Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/musistudio/claude-code-router"&gt;CCR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Haleclipse/CCometixLine"&gt;CCometixLine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryoppippi/ccusage"&gt;ccusage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmad-code-org/BMAD-METHOD"&gt;BMad Method&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks to these community contributors for sharing!&lt;/p&gt; 
&lt;h2&gt;❤️ Support &amp;amp; Sponsorship&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, please consider sponsoring its development. Your support is greatly appreciated!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/UfoMiao"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/alipay.webp" width="200" alt="Alipay" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/wechat.webp" width="200" alt="WeChat Pay" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Our Sponsors&lt;/h3&gt; 
&lt;p&gt;A huge thank you to all our sponsors for their generous support!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://share.302.ai/gAT9VG"&gt;302.AI&lt;/a&gt; (first corporate sponsorship 🤠)&lt;/li&gt; 
 &lt;li&gt;Tc (first sponsor)&lt;/li&gt; 
 &lt;li&gt;Argolinhas (first ko-fi sponsor ٩(•̤̀ᵕ•̤́๑))&lt;/li&gt; 
 &lt;li&gt;r*r (first anonymous sponsor 🤣)&lt;/li&gt; 
 &lt;li&gt;**康 (first KFC sponsor 🍗)&lt;/li&gt; 
 &lt;li&gt;*东 (first coffee sponsor ☕️)&lt;/li&gt; 
 &lt;li&gt;炼*3 (first Termux user sponsor 📱)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chamo101"&gt;chamo101&lt;/a&gt; (first GitHub issue sponsor 🎉)&lt;/li&gt; 
 &lt;li&gt;初屿贤 (first Codex user sponsor 🙅🏻‍♂️)&lt;/li&gt; 
 &lt;li&gt;Protein (first 1688 sponsor 😏)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BeatSeat"&gt;BeatSeat&lt;/a&gt; (community expert 😎, provided $1000 Claude credits)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wenwen12345"&gt;wenwen&lt;/a&gt; (community expert 🤓, provided daily $100 Claude&amp;amp;GPT credits)&lt;/li&gt; 
 &lt;li&gt;16°C coffee (My best friend 🤪, offered ChatGPT Pro $200 package)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Promotion Thanks&lt;/h3&gt; 
&lt;p&gt;Thanks to the following authors for promoting this project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;逛逛 GitHub, article: &lt;a href="https://mp.weixin.qq.com/s/phqwSRb16MKCHHVozTFeiQ"&gt;https://mp.weixin.qq.com/s/phqwSRb16MKCHHVozTFeiQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Geek, tweet: &lt;a href="https://x.com/geekbb/status/1955174718618866076"&gt;https://x.com/geekbb/status/1955174718618866076&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/UfoMiao/zcf/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=UfoMiao/zcf" /&gt; &lt;/a&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;h2&gt;⭐️ Star History&lt;/h2&gt; 
&lt;p&gt;If this project helps you, please give me a ⭐️ Star!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#UfoMiao/zcf&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=UfoMiao/zcf&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Badges --&gt;</description>
    </item>
    
    <item>
      <title>sst/opencode</title>
      <link>https://github.com/sst/opencode</link>
      <description>&lt;p&gt;The AI coding agent built for the terminal.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://opencode.ai"&gt; 
  &lt;picture&gt; 
   &lt;source srcset="packages/console/app/src/asset/logo-ornate-dark.svg" media="(prefers-color-scheme: dark)" /&gt; 
   &lt;source srcset="packages/console/app/src/asset/logo-ornate-light.svg" media="(prefers-color-scheme: light)" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/sst/opencode/dev/packages/console/app/src/asset/logo-ornate-light.svg?sanitize=true" alt="OpenCode logo" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;The AI coding agent built for the terminal.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://opencode.ai/discord"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/1391832426048651334?style=flat-square&amp;amp;label=discord" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/opencode-ai"&gt;&lt;img alt="npm" src="https://img.shields.io/npm/v/opencode-ai?style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sst/opencode/actions/workflows/publish.yml"&gt;&lt;img alt="Build status" src="https://img.shields.io/github/actions/workflow/status/sst/opencode/publish.yml?style=flat-square&amp;amp;branch=dev" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencode.ai"&gt;&lt;img src="https://raw.githubusercontent.com/sst/opencode/dev/packages/web/src/assets/lander/screenshot.png" alt="OpenCode Terminal UI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# YOLO
curl -fsSL https://opencode.ai/install | bash

# Package managers
npm i -g opencode-ai@latest        # or bun/pnpm/yarn
scoop bucket add extras; scoop install extras/opencode  # Windows
choco install opencode             # Windows
brew install sst/tap/opencode      # macOS and Linux
paru -S opencode-bin               # Arch Linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Remove versions older than 0.1.x before installing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Installation Directory&lt;/h4&gt; 
&lt;p&gt;The install script respects the following priority order for the installation path:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;$OPENCODE_INSTALL_DIR&lt;/code&gt; - Custom installation directory&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$XDG_BIN_DIR&lt;/code&gt; - XDG Base Directory Specification compliant path&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/bin&lt;/code&gt; - Standard user binary directory (if exists or can be created)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.opencode/bin&lt;/code&gt; - Default fallback&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Examples
OPENCODE_INSTALL_DIR=/usr/local/bin curl -fsSL https://opencode.ai/install | bash
XDG_BIN_DIR=$HOME/.local/bin curl -fsSL https://opencode.ai/install | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;For more info on how to configure OpenCode &lt;a href="https://opencode.ai/docs"&gt;&lt;strong&gt;head over to our docs&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;If you're interested in contributing to OpenCode, please read our &lt;a href="https://raw.githubusercontent.com/sst/opencode/dev/CONTRIBUTING.md"&gt;contributing docs&lt;/a&gt; before submitting a pull request.&lt;/p&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;h4&gt;How is this different than Claude Code?&lt;/h4&gt; 
&lt;p&gt;It's very similar to Claude Code in terms of capability. Here are the key differences:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;100% open source&lt;/li&gt; 
 &lt;li&gt;Not coupled to any provider. Although Anthropic is recommended, OpenCode can be used with OpenAI, Google or even local models. As models evolve the gaps between them will close and pricing will drop so being provider-agnostic is important.&lt;/li&gt; 
 &lt;li&gt;Out of the box LSP support&lt;/li&gt; 
 &lt;li&gt;A focus on TUI. OpenCode is built by neovim users and the creators of &lt;a href="https://terminal.shop"&gt;terminal.shop&lt;/a&gt;; we are going to push the limits of what's possible in the terminal.&lt;/li&gt; 
 &lt;li&gt;A client/server architecture. This for example can allow OpenCode to run on your computer, while you can drive it remotely from a mobile app. Meaning that the TUI frontend is just one of the possible clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What's the other repo?&lt;/h4&gt; 
&lt;p&gt;The other confusingly named repo has no relation to this one. You can &lt;a href="https://x.com/thdxr/status/1933561254481666466"&gt;read the story behind it here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Join our community&lt;/strong&gt; &lt;a href="https://discord.gg/opencode"&gt;Discord&lt;/a&gt; | &lt;a href="https://x.com/opencode"&gt;X.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>storybookjs/storybook</title>
      <link>https://github.com/storybookjs/storybook</link>
      <description>&lt;p&gt;Storybook is the industry standard workshop for building, documenting, and testing UI components in isolation&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://storybook.js.org/?ref=readme"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/263385/199832481-bbbf5961-6a26-481d-8224-51258cce9b33.png" /&gt; 
   &lt;img src="https://user-images.githubusercontent.com/321738/63501763-88dbf600-c4cc-11e9-96cd-94adadc2fd72.png" alt="Storybook" width="400" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;Build bulletproof UI components faster&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://circleci.com/gh/storybookjs/storybook"&gt; &lt;img src="https://circleci.com/gh/storybookjs/storybook.svg?style=shield" alt="Build Status on CircleCI" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/storybookjs/storybook"&gt; &lt;img src="https://codecov.io/gh/storybookjs/storybook/branch/main/graph/badge.svg?sanitize=true" alt="codecov" /&gt; &lt;/a&gt; &lt;a href="https://github.com/storybookjs/storybook/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/storybookjs/storybook.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://discord.gg/storybook"&gt; &lt;img src="https://img.shields.io/badge/discord-join-7289DA.svg?logo=discord&amp;amp;longCache=true&amp;amp;style=flat" /&gt; &lt;/a&gt; &lt;a href="https://storybook.js.org/community/?ref=readme"&gt; &lt;img src="https://img.shields.io/badge/community-join-4BC424.svg?sanitize=true" alt="Storybook Community" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#backers"&gt; &lt;img src="https://opencollective.com/storybook/backers/badge.svg?sanitize=true" alt="Backers on Open Collective" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#sponsors"&gt; &lt;img src="https://opencollective.com/storybook/tiers/sponsors/badge.svg?sanitize=true" alt="Sponsors on Open Collective" /&gt; &lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=storybookjs"&gt; &lt;img src="https://img.shields.io/twitter/follow/storybookjs?color=blue&amp;amp;logo=twitter" alt="Official Twitter Handle" /&gt; &lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook"&gt; &lt;img src="https://api.securityscorecards.dev/projects/github.com/storybookjs/storybook/badge" alt="OpenSSF Scorecard" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Storybook is a frontend workshop for building UI components and pages in isolation. Thousands of teams use it for UI development, testing, and documentation. Find out more at &lt;a href="https://storybook.js.org/?ref=readme"&gt;storybook.js.org&lt;/a&gt;! &lt;/p&gt; 
&lt;center&gt; 
 &lt;img src="https://raw.githubusercontent.com/storybookjs/storybook/refs/heads/release-6-5/media/storybook-intro.gif" width="100%" /&gt; 
&lt;/center&gt; 
&lt;p align="center"&gt; View README for:&lt;br /&gt; &lt;a href="https://github.com/storybookjs/storybook/raw/main/README.md" title="latest"&gt;&lt;img alt="latest" src="https://img.shields.io/npm/v/@storybook/react/latest?style=for-the-badge&amp;amp;logo=storybook&amp;amp;logoColor=ffffff&amp;amp;color=66BF3C" /&gt;&lt;/a&gt; &lt;a href="https://github.com/storybookjs/storybook/raw/next/README.md" title="next"&gt;&lt;img alt="next" src="https://img.shields.io/npm/v/@storybook/react/next?style=for-the-badge&amp;amp;logo=storybook&amp;amp;logoColor=ffffff&amp;amp;color=1EA7FD" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📒 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#projects"&gt;Projects&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;🛠 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#supported-frameworks"&gt;Supported Frameworks &amp;amp; Examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;🔗&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#addons"&gt;Addons&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🏅 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#badges--presentation-materials"&gt;Badges &amp;amp; Presentation materials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👏 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;👨‍💻 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#development-scripts"&gt;Development scripts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;💸 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;💵 &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#backers"&gt;Backers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;📝&lt;/span&gt; &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://storybook.js.org/?ref=readme"&gt;Storybook's website&lt;/a&gt; to learn more about Storybook and to get started.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Documentation can be found on &lt;a href="https://storybook.js.org/docs?ref=readme"&gt;Storybook's docs site&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Examples&lt;/h3&gt; 
&lt;p&gt;View &lt;a href="https://storybook.js.org/showcase?ref=readme"&gt;Component Encyclopedia&lt;/a&gt; to see how leading teams use Storybook.&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://storybook.new"&gt;storybook.new&lt;/a&gt; to quickly create an example project in Stackblitz.&lt;/p&gt; 
&lt;p&gt;Storybook comes with a lot of &lt;a href="https://storybook.js.org/docs/configure/user-interface/storybook-addons?ref=readme"&gt;addons&lt;/a&gt; for component design, documentation, testing, interactivity, and so on. Storybook's API makes it possible to configure and extend in various ways. It has even been extended to support React Native, Android, iOS, and Flutter development for mobile.&lt;/p&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;For additional help, share your issue in &lt;a href="https://github.com/storybookjs/storybook/discussions/new?category=help"&gt;the repo's GitHub Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Projects&lt;/h2&gt; 
&lt;h3&gt;Supported Frameworks&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Renderer&lt;/th&gt; 
   &lt;th&gt;Demo&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/react"&gt;React&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--630511d655df72125520f051.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/react/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/react"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/react?style=flat-square&amp;amp;color=eee" alt="React" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/angular/"&gt;Angular&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--6322ce6af69825592bbb28fc.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/angular/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/angular/"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/angular?style=flat-square&amp;amp;color=eee" alt="Angular" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/vue3"&gt;Vue 3&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--630513346a8e284ae244d415.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/vue3/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/vue3/"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/vue3?style=flat-square&amp;amp;color=eee" alt="Vue 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/web-components"&gt;Web components&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--638db5bf49adfdfe8cf545e0.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/web-components/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/web-components"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/web-components?style=flat-square&amp;amp;color=eee" alt="Svelte" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/react-native"&gt;React Native&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/react-native/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/react-native"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/react-native?style=flat-square&amp;amp;color=eee" alt="React Native" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/html"&gt;HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--63dd39a158cf6fc05199b4bb.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/html/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/html"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/html?style=flat-square&amp;amp;color=eee" alt="HTML" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/ember/"&gt;Ember&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/ember/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/frameworks/ember/"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/ember?style=flat-square&amp;amp;color=eee" alt="Ember" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/svelte"&gt;Svelte&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--630873996e4e3557791c069c.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/svelte/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/svelte"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/svelte?style=flat-square&amp;amp;color=eee" alt="Svelte" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/preact"&gt;Preact&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://next--63b588a512565bfaace15e7c.chromatic.com/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/preact/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="Storybook demo" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/renderers/preact"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/preact?style=flat-square&amp;amp;color=eee" alt="Preact" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/literalpie/storybook-framework-qwik"&gt;Qwik&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/storybook-framework-qwik/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/literalpie/storybook-framework-qwik"&gt;&lt;img src="https://img.shields.io/npm/dm/storybook-framework-qwik?style=flat-square&amp;amp;color=eee" alt="Qwik" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/solidjs-community/storybook"&gt;SolidJS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/storybook-solidjs-vite/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/solidjs-community/storybook"&gt;&lt;img src="https://img.shields.io/npm/dm/storybook-solidjs-vite?style=flat-square&amp;amp;color=eee" alt="SolidJS" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/native"&gt;Android, iOS, Flutter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="/"&gt;&lt;img src="https://img.shields.io/npm/v/@storybook/native/latest?style=flat-square&amp;amp;color=blue&amp;amp;label" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/native"&gt;&lt;img src="https://img.shields.io/npm/dm/@storybook/native?style=flat-square&amp;amp;color=eee" alt="Native" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Addons&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Addons&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/a11y/"&gt;a11y&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Test components for user accessibility in Storybook&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/actions/"&gt;actions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Log actions as users interact with components in the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/backgrounds"&gt;backgrounds&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Let users choose backgrounds in the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-cssresources"&gt;cssresources&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Dynamically add/remove CSS resources to the component iframe&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-design-assets"&gt;design assets&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;View images, videos, and weblinks alongside your story&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/docs/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add high quality documentation to your components&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-events"&gt;events&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Interactively fire events to components that respond to EventEmitter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-google-analytics"&gt;google-analytics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Reports google analytics on stories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-graphql"&gt;graphql&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Query a GraphQL server within Storybook stories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-jest"&gt;jest&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;View the results of components' unit tests in Storybook&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/links/"&gt;links&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Create links between stories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/measure/"&gt;measure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Visually inspect the layout and box model within the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/outline/"&gt;outline&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Visually debug the CSS layout and alignment within the Storybook UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/storybookjs/addon-queryparams"&gt;query params&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mock query params&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/core/src/viewport/"&gt;viewport&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Change display sizes and layouts for responsive components using Storybook&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://storybook.js.org/docs/configure/integration/frameworks-feature-support?ref=readme"&gt;Addon / Framework Support Table&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To continue improving your experience, we have to eventually deprecate or remove certain addons in favor of new and better tools.&lt;/p&gt; 
&lt;p&gt;If you're using info/notes, we highly recommend you migrate to &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/docs/"&gt;docs&lt;/a&gt; instead, and &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/code/addons/docs/docs/recipes.md#migrating-from-notesinfo-addons"&gt;here is a guide&lt;/a&gt; to help you.&lt;/p&gt; 
&lt;p&gt;If you're using contexts, we highly recommend you migrate to &lt;a href="https://github.com/storybookjs/storybook/tree/next/code/addons/toolbars"&gt;toolbars&lt;/a&gt; and &lt;a href="https://github.com/storybookjs/storybook/raw/next/MIGRATION.md#deprecated-addon-contexts"&gt;here is a guide&lt;/a&gt; to help you.&lt;/p&gt; 
&lt;p&gt;If you're using addon-storyshots, we highly recommend you migrate to the Storybook &lt;a href="https://github.com/storybookjs/test-runner"&gt;test-runner&lt;/a&gt; and &lt;a href="https://storybook.js.org/docs/writing-tests/storyshots-migration-guide?ref=readme"&gt;here is a guide&lt;/a&gt; to help you.&lt;/p&gt; 
&lt;h2&gt;Badges &amp;amp; Presentation materials&lt;/h2&gt; 
&lt;p&gt;We have a badge! Link it to your live Storybook example.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg?sanitize=true" alt="Storybook" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Storybook](https://cdn.jsdelivr.net/gh/storybookjs/brand@main/badge/badge-storybook.svg)](link to site)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're looking for material to use in your Storybook presentation, such as logos, video material, and the colors we use, you can find it all on our &lt;a href="https://github.com/storybookjs/brand"&gt;brand repo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tweeting via &lt;a href="https://x.com/storybookjs"&gt;@storybookjs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blogging at &lt;a href="https://storybook.js.org/blog/?ref=readme"&gt;storybook.js.org&lt;/a&gt; and &lt;a href="https://medium.com/storybookjs"&gt;Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chatting on &lt;a href="https://discord.gg/storybook"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Videos and streams at &lt;a href="https://www.youtube.com/channel/UCr7Quur3eIyA_oe8FNYexfg"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Storybook are always welcome!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📥 Pull requests and 🌟 Stars are always welcome.&lt;/li&gt; 
 &lt;li&gt;Read our &lt;a href="https://raw.githubusercontent.com/storybookjs/storybook/next/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started, or find us on &lt;a href="https://discord.gg/storybook"&gt;Discord&lt;/a&gt;, we will take the time to guide you.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Looking for a first issue to tackle?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We tag issues with &lt;a href="https://github.com/storybookjs/storybook/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22"&gt;&lt;img src="https://img.shields.io/github/issues/storybookjs/storybook/good%20first%20issue.svg?sanitize=true" alt="Good First Issue" /&gt;&lt;/a&gt; when we think they are well suited for people who are new to the codebase or OSS in general.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/storybook"&gt;Talk to us&lt;/a&gt;, we'll find something that suits your skills and learning interest.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development scripts&lt;/h3&gt; 
&lt;p&gt;Storybook is organized as a monorepo. Useful scripts include:&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;yarn start&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Runs a sandbox template storybook with test stories&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;yarn task&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;As above, but gives you options to customize the sandbox (e.g. selecting other frameworks)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;&lt;code&gt;yarn lint&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;boolean check if code conforms to linting rules - uses remark &amp;amp; eslint&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint:js&lt;/code&gt; - will check js&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint:md&lt;/code&gt; - will check markdown + code samples&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yarn lint:js --fix&lt;/code&gt; - will automatically fix js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;code&gt;yarn test&lt;/code&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;boolean check if unit tests all pass - uses jest&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn run test --core --watch&lt;/code&gt; - will run core tests in watch-mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Sponsors&lt;/h3&gt; 
&lt;p&gt;Become a sponsor to have your logo and website URL on our README on Github. [&lt;a href="https://opencollective.com/storybook#sponsor"&gt;Become a sponsor&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/storybook/tiers/sponsors/0/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/0/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/1/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/1/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/2/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/2/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/3/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/3/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/4/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/4/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/5/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/5/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/6/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/6/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/7/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/7/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/8/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/8/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/9/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/9/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/10/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/10/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/11/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/11/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/12/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/12/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/13/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/13/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/14/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/14/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/15/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/15/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/16/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/16/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/17/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/17/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/18/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/18/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/19/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/19/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/20/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/20/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/21/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/21/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/22/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/22/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/23/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/23/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/24/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/24/avatar.svg?requireActive=true" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/storybook/tiers/sponsors/25/website?requireActive=true" target="_blank"&gt;&lt;img src="https://opencollective.com/storybook/tiers/sponsors/25/avatar.svg?requireActive=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Backers&lt;/h3&gt; 
&lt;p&gt;By making a recurring donation, you can support us and our work. [&lt;a href="https://opencollective.com/storybook#backer"&gt;Become a backer&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/storybook"&gt;&lt;img src="https://opencollective.com/storybook/tiers/backers.svg?limit=80&amp;amp;button=false&amp;amp;avatarHeight=46&amp;amp;width=750" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/storybookjs/storybook/raw/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;-the end-&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MetaMask/metamask-extension</title>
      <link>https://github.com/MetaMask/metamask-extension</link>
      <description>&lt;p&gt;🌐 🔌 The MetaMask browser extension enables browsing Ethereum blockchain enabled websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MetaMask Browser Extension&lt;/h1&gt; 
&lt;p&gt;You can find the latest version of MetaMask on &lt;a href="https://metamask.io/"&gt;our official website&lt;/a&gt;. For help using MetaMask, visit our &lt;a href="https://support.metamask.io/"&gt;User Support Site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For &lt;a href="https://community.metamask.io/c/learn/26"&gt;general questions&lt;/a&gt;, &lt;a href="https://community.metamask.io/c/feature-requests-ideas/13"&gt;feature requests&lt;/a&gt;, or &lt;a href="https://community.metamask.io/c/developer-questions/11"&gt;developer questions&lt;/a&gt;, visit our &lt;a href="https://community.metamask.io/"&gt;Community Forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MetaMask supports Firefox, Google Chrome, and Chromium-based browsers. We recommend using the latest available browser version.&lt;/p&gt; 
&lt;p&gt;For up to the minute news, follow us on &lt;a href="https://x.com/MetaMask"&gt;X&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to develop MetaMask-compatible applications, visit our &lt;a href="https://docs.metamask.io/"&gt;Developer Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask codebase, visit our &lt;a href="https://github.com/MetaMask/contributor-docs"&gt;Contributor Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to contribute to the MetaMask Extension project itself, visit our &lt;a href="https://github.com/MetaMask/metamask-extension/tree/main/docs"&gt;Extension Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;GitHub Codespaces quickstart&lt;/h2&gt; 
&lt;p&gt;As an alternative to building on your local machine, there is a new option to get a development environment up and running in less than 5 minutes by using GitHub Codespaces. Please note that there is a &lt;a href="https://docs.github.com/en/billing/managing-billing-for-github-codespaces/about-billing-for-github-codespaces"&gt;Limited Free Monthly Quota&lt;/a&gt;, and after that GitHub will start charging you.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: You are billed for both time spent running, and for storage used&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://codespaces.new/MetaMask/metamask-extension?quickstart=1"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start by clicking the button above&lt;/li&gt; 
 &lt;li&gt;A new browser tab will open with a remote version of Visual Studio Code (this will take a few minutes to load)&lt;/li&gt; 
 &lt;li&gt;A "Simple Browser" will open inside the browser with noVNC -- click Connect 
  &lt;ul&gt; 
   &lt;li&gt;Optional steps: 
    &lt;ul&gt; 
     &lt;li&gt;Click the button at the upper-right of the Simple Browser tab to open the noVNC window in its own tab&lt;/li&gt; 
     &lt;li&gt;Open the noVNC sidebar on the left, click the gear icon, change the Scaling Mode to Remote Resizing&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Wait about 20 extra seconds on the first launch, for the scripts to finish&lt;/li&gt; 
 &lt;li&gt;Right-click on the noVNC desktop to launch Chrome or Firefox with MetaMask pre-installed&lt;/li&gt; 
 &lt;li&gt;Change some code, then run &lt;code&gt;yarn start&lt;/code&gt; to build in dev mode&lt;/li&gt; 
 &lt;li&gt;After a minute or two, it will finish building, and you can see your changes in the noVNC desktop&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Tips to keep your Codespaces usage lower&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You are billed for both time spent running, and for storage used&lt;/li&gt; 
 &lt;li&gt;Codespaces pause after 30 minutes of inactivity, and auto-delete after 30 days of inactivity&lt;/li&gt; 
 &lt;li&gt;You can manage your Codespaces here: &lt;a href="https://github.com/codespaces"&gt;https://github.com/codespaces&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You may want to manually pause them before the 30 minute timeout&lt;/li&gt; 
   &lt;li&gt;If you have several idle Codespaces hanging around for several days, you can quickly run out of storage quota. You should delete the ones you do not plan to use anymore, and probably keep only 1 or 2 in the long-term. It's also possible to re-use old Codespaces and switch the branch, instead of creating new ones and deleting the old ones.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Codespaces on a fork&lt;/h3&gt; 
&lt;p&gt;If you are not a MetaMask Internal Developer, or are otherwise developing on a fork, the default Infura key will be on the Free Plan and have very limited requests per second. If you want to use your own Infura key, follow the &lt;code&gt;.metamaskrc&lt;/code&gt; and &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; instructions in the section &lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/#building-on-your-local-machine"&gt;Building on your local machine&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building on your local machine&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;a href="https://nodejs.org"&gt;Node.js&lt;/a&gt; version 22&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you are using &lt;a href="https://github.com/nvm-sh/nvm#installing-and-updating"&gt;nvm&lt;/a&gt; (recommended) running &lt;code&gt;nvm use&lt;/code&gt; will automatically choose the right node version for you.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable Corepack by executing the command &lt;code&gt;corepack enable&lt;/code&gt; within the metamask-extension project. Corepack is a utility included with Node.js by default. It manages Yarn on a per-project basis, using the version specified by the &lt;code&gt;packageManager&lt;/code&gt; property in the project's package.json file. Please note that modern releases of &lt;a href="https://yarnpkg.com/getting-started/install"&gt;Yarn&lt;/a&gt; are not intended to be installed globally or via npm.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Duplicate &lt;code&gt;.metamaskrc.dist&lt;/code&gt; within the root and rename it to &lt;code&gt;.metamaskrc&lt;/code&gt; by running &lt;code&gt;cp .metamaskrc{.dist,}&lt;/code&gt;.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Replace the &lt;code&gt;INFURA_PROJECT_ID&lt;/code&gt; value with your own personal &lt;a href="https://docs.infura.io/networks/ethereum/how-to/secure-a-project/project-id"&gt;Infura API Key&lt;/a&gt;. 
    &lt;ul&gt; 
     &lt;li&gt;If you don't have an Infura account, you can create one for free on the &lt;a href="https://app.infura.io/register"&gt;Infura website&lt;/a&gt;.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;If debugging MetaMetrics, you'll need to add a value for &lt;code&gt;SEGMENT_WRITE_KEY&lt;/code&gt; &lt;a href="https://segment.com/docs/connections/find-writekey/"&gt;Segment write key&lt;/a&gt;, see &lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/development/README.md#segment"&gt;Developing on MetaMask - Segment&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;If debugging unhandled exceptions, you'll need to add a value for &lt;code&gt;SENTRY_DSN&lt;/code&gt; &lt;a href="https://docs.sentry.io/product/sentry-basics/dsn-explainer/"&gt;Sentry Dsn&lt;/a&gt;, see &lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/development/README.md#sentry"&gt;Developing on MetaMask - Sentry&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Optionally, replace the &lt;code&gt;PASSWORD&lt;/code&gt; value with your development wallet password to avoid entering it each time you open the app.&lt;/li&gt; 
   &lt;li&gt;If developing with remote feature flags, and you want to override the flags in the build process, you can add a &lt;code&gt;.manifest-overrides.json&lt;/code&gt; file to the root of the project and set &lt;code&gt;MANIFEST_OVERRIDES=.manifest-overrides.json&lt;/code&gt; in &lt;code&gt;.metamaskrc&lt;/code&gt; to the path of the file. This file is used to add flags to &lt;code&gt;manifest.json&lt;/code&gt; build files for the extension. You can also modify the &lt;code&gt;_flags.remoteFeatureFlags&lt;/code&gt; in the built version of &lt;code&gt;manifest.json&lt;/code&gt; in the &lt;code&gt;dist/browser&lt;/code&gt; folder to tweak the flags after the build process (these changes will get overwritten when you build again). An example of this remote feature flag overwrite could be:&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "_flags": {
    "remoteFeatureFlags": { "testBooleanFlag": false }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run &lt;code&gt;yarn install&lt;/code&gt; to install the dependencies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build the project to the &lt;code&gt;./dist/&lt;/code&gt; folder with &lt;code&gt;yarn dist&lt;/code&gt; (for Chromium-based browsers) or &lt;code&gt;yarn dist:mv2&lt;/code&gt; (for Firefox)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Optionally, to create a development build you can instead run &lt;code&gt;yarn start&lt;/code&gt; (for Chromium-based browsers) or &lt;code&gt;yarn start:mv2&lt;/code&gt; (for Firefox)&lt;/li&gt; 
   &lt;li&gt;Uncompressed builds can be found in &lt;code&gt;/dist&lt;/code&gt;, compressed builds can be found in &lt;code&gt;/builds&lt;/code&gt; once they're built.&lt;/li&gt; 
   &lt;li&gt;See the &lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/development/build/README.md"&gt;build system readme&lt;/a&gt; for build system usage information.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Follow these instructions to verify that your local build runs correctly:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/add-to-chrome.md"&gt;How to add custom build to Chrome&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/add-to-firefox.md"&gt;How to add custom build to Firefox&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Git Hooks&lt;/h2&gt; 
&lt;p&gt;To get quick feedback from our shared code quality fitness functions before committing the code, you can install our git hooks with Husky.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;$ yarn githooks:install&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;You can read more about them in our &lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/testing.md#fitness-functions-measuring-progress-in-code-quality-and-preventing-regressions-using-custom-git-hooks"&gt;testing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you are using VS Code and are unable to make commits from the source control sidebar due to a "command not found" error, try these steps from the &lt;a href="https://typicode.github.io/husky/troubleshooting.html#command-not-found"&gt;Husky docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Development builds&lt;/h3&gt; 
&lt;p&gt;To start a development build (e.g. with logging and file watching) run &lt;code&gt;yarn start&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Development build with wallet state&lt;/h4&gt; 
&lt;p&gt;You can start a development build with a preloaded wallet state, by adding &lt;code&gt;TEST_SRP='&amp;lt;insert SRP here&amp;gt;'&lt;/code&gt; and &lt;code&gt;PASSWORD='&amp;lt;insert wallet password here&amp;gt;'&lt;/code&gt; to the &lt;code&gt;.metamaskrc&lt;/code&gt; file. Then you have the following options:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start the wallet with the default fixture flags, by running &lt;code&gt;yarn start:with-state&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Check the list of available fixture flags, by running &lt;code&gt;yarn start:with-state --help&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Start the wallet with custom fixture flags, by running &lt;code&gt;yarn start:with-state --FIXTURE_NAME=VALUE&lt;/code&gt; for example &lt;code&gt;yarn start:with-state --withAccounts=100&lt;/code&gt;. You can pass as many flags as you want. The rest of the fixtures will take the default values.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Development build with Webpack&lt;/h4&gt; 
&lt;p&gt;You can also start a development build using the &lt;code&gt;yarn webpack&lt;/code&gt; command, or &lt;code&gt;yarn webpack --watch&lt;/code&gt;. This uses an alternative build system that is much faster, but not yet production ready. See the &lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/development/webpack/README.md"&gt;Webpack README&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h4&gt;React and Redux DevTools&lt;/h4&gt; 
&lt;p&gt;To use React or Redux DevTools you'll first need to set &lt;code&gt;METAMASK_REACT_REDUX_DEVTOOLS&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;.metamaskrc&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To start the &lt;a href="https://github.com/facebook/react-devtools"&gt;React DevTools&lt;/a&gt;, run &lt;code&gt;yarn devtools:react&lt;/code&gt; with a development build installed in a browser. This will open in a separate window; no browser extension is required.&lt;/p&gt; 
&lt;p&gt;To start the &lt;a href="https://github.com/reduxjs/redux-devtools/tree/main/extension"&gt;Redux DevTools Extension&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the package &lt;code&gt;remotedev-server&lt;/code&gt; globally (e.g. &lt;code&gt;yarn global add remotedev-server&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the Redux Devtools extension.&lt;/li&gt; 
 &lt;li&gt;Open the Redux DevTools extension and check the "Use custom (local) server" checkbox in the Remote DevTools Settings, using the default server configuration (host &lt;code&gt;localhost&lt;/code&gt;, port &lt;code&gt;8000&lt;/code&gt;, secure connection checkbox unchecked).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then run the command &lt;code&gt;yarn devtools:redux&lt;/code&gt; with a development build installed in a browser. This will enable you to use the Redux DevTools extension to inspect MetaMask.&lt;/p&gt; 
&lt;p&gt;To create a development build and run both of these tools simultaneously, run &lt;code&gt;yarn start:dev&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Test Dapp&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://metamask.github.io/test-dapp/"&gt;This test site&lt;/a&gt; can be used to execute different user flows.&lt;/p&gt; 
&lt;h3&gt;Running Unit Tests and Linting&lt;/h3&gt; 
&lt;p&gt;Run unit tests and the linter with &lt;code&gt;yarn test&lt;/code&gt;. To run just unit tests, run &lt;code&gt;yarn test:unit&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can run the linter by itself with &lt;code&gt;yarn lint&lt;/code&gt;, and you can automatically fix some lint problems with &lt;code&gt;yarn lint:fix&lt;/code&gt;. You can also run these two commands just on your local changes to save time with &lt;code&gt;yarn lint:changed&lt;/code&gt; and &lt;code&gt;yarn lint:changed:fix&lt;/code&gt; respectively.&lt;/p&gt; 
&lt;p&gt;For Jest debugging guide using Node.js, see &lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/tests/jest.md"&gt;docs/tests/jest.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running E2E Tests&lt;/h3&gt; 
&lt;p&gt;Our e2e test suite can be run on either Firefox or Chrome. Here's how to get started with e2e testing:&lt;/p&gt; 
&lt;h4&gt;Preparing a Test Build&lt;/h4&gt; 
&lt;p&gt;Before running e2e tests, ensure you've run &lt;code&gt;yarn install&lt;/code&gt; to download dependencies. Next, you'll need a test build. You have 3 options:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use &lt;code&gt;yarn download-builds --build-type test&lt;/code&gt; to quickly download and unzip test builds for Chrome and Firefox into the &lt;code&gt;./dist/&lt;/code&gt; folder. This method is fast and convenient for standard testing.&lt;/li&gt; 
 &lt;li&gt;Create a custom test build: for testing against different build types, use &lt;code&gt;yarn build:test&lt;/code&gt;. This command allows you to generate test builds for various types, including: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;yarn build:test&lt;/code&gt; for main build&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;yarn build:test:flask&lt;/code&gt; for flask build&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;yarn build:test:mv2&lt;/code&gt; for mv2 build&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Start a test build with live changes: &lt;code&gt;yarn start:test&lt;/code&gt; is particularly useful for development. It starts a test build that automatically recompiles application code upon changes. This option is ideal for iterative testing and development. This command also allows you to generate test builds for various types, including: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;yarn start:test&lt;/code&gt; for main build&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;yarn start:test:flask&lt;/code&gt; for flask build&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;yarn start:test:mv2&lt;/code&gt; for mv2 build&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note: The &lt;code&gt;yarn start:test&lt;/code&gt; command (which initiates the testDev build type) has LavaMoat disabled for both the build system and the application, offering a streamlined testing experience during development. On the other hand, &lt;code&gt;yarn build:test&lt;/code&gt; enables LavaMoat for enhanced security in both the build system and application, mirroring production environments more closely.&lt;/p&gt; 
&lt;h4&gt;Running Tests&lt;/h4&gt; 
&lt;p&gt;Once you have your test build ready, choose the browser for your e2e tests:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For Firefox, run &lt;code&gt;yarn test:e2e:firefox&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Note: If you are running Firefox as a snap package on Linux, ensure you enable the appropriate environment variable: &lt;code&gt;FIREFOX_SNAP=true yarn test:e2e:firefox&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;For Chrome, run &lt;code&gt;yarn test:e2e:chrome&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These scripts support additional options for debugging. Use &lt;code&gt;--help&lt;/code&gt;to see all available options.&lt;/p&gt; 
&lt;h4&gt;Running a single e2e test&lt;/h4&gt; 
&lt;p&gt;Single e2e tests can be run with &lt;code&gt;yarn test:e2e:single test/e2e/tests/TEST_NAME.spec.js&lt;/code&gt; along with the options below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;  --browser           Set the browser to be used; specify 'chrome', 'firefox', 'all'
                      or leave unset to run on 'all' by default.
                                                          [string] [default: 'all']
  --debug             Run tests in debug mode, logging each driver interaction
                                                         [boolean] [default: true]
  --retries           Set how many times the test should be retried upon failure.
                                                              [number] [default: 0]
  --leave-running     Leaves the browser running after a test fails, along with
                      anything else that the test used (ganache, the test dapp,
                      etc.)                              [boolean] [default: false]
  --update-snapshot   Update E2E test snapshots
                                             [alias: -u] [boolean] [default: false]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to run the &lt;code&gt;account-details&lt;/code&gt; tests using Chrome, with debug logging and with the browser set to remain open upon failure, you would use: &lt;code&gt;yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome --leave-running&lt;/code&gt;&lt;/p&gt; 
&lt;h4&gt;Running e2e tests against specific feature flag&lt;/h4&gt; 
&lt;p&gt;While developing new features, we often use feature flags. As we prepare to make these features generally available (GA), we remove the feature flags. Existing feature flags are listed in the &lt;code&gt;.metamaskrc.dist&lt;/code&gt; file. To execute e2e tests with a particular feature flag enabled, it's necessary to first generate a test build with that feature flag activated. There are two ways to achieve this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To enable a feature flag in your local configuration, you should first ensure you have a &lt;code&gt;.metamaskrc&lt;/code&gt; file copied from &lt;code&gt;.metamaskrc.dist&lt;/code&gt;. Then, within your local &lt;code&gt;.metamaskrc&lt;/code&gt; file, you can set the desired feature flag to true. Following this, a test build with the feature flag enabled can be created by executing &lt;code&gt;yarn build:test&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Alternatively, for enabling a feature flag directly during the test build creation, you can pass the parameter as true via the command line. For instance, activating the MULTICHAIN feature flag can be done by running &lt;code&gt;MULTICHAIN=1 yarn build:test&lt;/code&gt; or &lt;code&gt;MULTICHAIN=1 yarn start:test&lt;/code&gt; . This method allows for quick adjustments to feature flags without altering the &lt;code&gt;.metamaskrc&lt;/code&gt; file.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once you've created a test build with the desired feature flag enabled, proceed to run your tests as usual. Your tests will now run against the version of the extension with the specific feature flag activated. For example: &lt;code&gt;yarn test:e2e:single test/e2e/tests/account-menu/account-details.spec.js --browser=chrome&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This approach ensures that your e2e tests accurately reflect the user experience for the upcoming GA features.&lt;/p&gt; 
&lt;h4&gt;Running specific builds types e2e test&lt;/h4&gt; 
&lt;p&gt;Different build types have different e2e tests sets. In order to run them look in the &lt;code&gt;package.json&lt;/code&gt; file. You will find:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;    "test:e2e:chrome:snaps": "SELENIUM_BROWSER=chrome node test/e2e/run-all.js --snaps",
    "test:e2e:firefox": "SELENIUM_BROWSER=firefox node test/e2e/run-all.js",
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Changing dependencies&lt;/h3&gt; 
&lt;p&gt;Whenever you change dependencies (adding, removing, or updating, either in &lt;code&gt;package.json&lt;/code&gt; or &lt;code&gt;yarn.lock&lt;/code&gt;), there are various files that must be kept up-to-date.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yarn.lock&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn&lt;/code&gt; again after your changes to ensure &lt;code&gt;yarn.lock&lt;/code&gt; has been properly updated.&lt;/li&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn lint:lockfile:dedupe:fix&lt;/code&gt; to remove duplicate dependencies from the lockfile.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;allow-scripts&lt;/code&gt; configuration in &lt;code&gt;package.json&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Run &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; to update the &lt;code&gt;allow-scripts&lt;/code&gt; configuration automatically. This config determines whether the package's install/postinstall scripts are allowed to run. Review each new package to determine whether the install script needs to run or not, testing if necessary.&lt;/li&gt; 
   &lt;li&gt;Unfortunately, &lt;code&gt;yarn allow-scripts auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The LavaMoat policy files 
  &lt;ul&gt; 
   &lt;li&gt;If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command &lt;code&gt;@metamaskbot update-policies&lt;/code&gt; to ask the MetaMask bot to automatically update the policies for you.&lt;/li&gt; 
   &lt;li&gt;If your PR is from a fork, you can ask a MetaMask team member to help with updating the policy files.&lt;/li&gt; 
   &lt;li&gt;Manual update instructions: The &lt;em&gt;tl;dr&lt;/em&gt; is to run &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; to update these files, but there can be devils in the details: 
    &lt;ul&gt; 
     &lt;li&gt;There are two sets of LavaMoat policy files: 
      &lt;ul&gt; 
       &lt;li&gt;The production LavaMoat policy files (&lt;code&gt;lavamoat/browserify/*/policy.json&lt;/code&gt;), which are re-generated using &lt;code&gt;yarn lavamoat:webapp:auto&lt;/code&gt;. Add &lt;code&gt;--help&lt;/code&gt; for usage. 
        &lt;ul&gt; 
         &lt;li&gt;These should be regenerated whenever the production dependencies for the webapp change.&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;The build system LavaMoat policy file (&lt;code&gt;lavamoat/build-system/policy.json&lt;/code&gt;), which is re-generated using &lt;code&gt;yarn lavamoat:build:auto&lt;/code&gt;. 
        &lt;ul&gt; 
         &lt;li&gt;This should be regenerated whenever the dependencies used by the build system itself change.&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;Whenever you regenerate a policy file, review the changes to determine whether the access granted to each package seems appropriate.&lt;/li&gt; 
     &lt;li&gt;Unfortunately, &lt;code&gt;yarn lavamoat:auto&lt;/code&gt; will behave inconsistently on different platforms. macOS and Windows users may see extraneous changes relating to optional dependencies.&lt;/li&gt; 
     &lt;li&gt;If you keep getting policy failures even after regenerating the policy files, try regenerating the policies after a clean install by doing: 
      &lt;ul&gt; 
       &lt;li&gt;&lt;code&gt;rm -rf node_modules/ &amp;amp;&amp;amp; yarn &amp;amp;&amp;amp; yarn lavamoat:auto&lt;/code&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;Keep in mind that any kind of dynamic import or dynamic use of globals may elude LavaMoat's static analysis. Refer to the LavaMoat documentation or ask for help if you run into any issues.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The Attributions file 
  &lt;ul&gt; 
   &lt;li&gt;If you are a MetaMask team member and your PR is on a repository branch, you can use the bot command &lt;code&gt;@metamaskbot update-attributions&lt;/code&gt; to ask the MetaMask bot to automatically update the attributions file for you.&lt;/li&gt; 
   &lt;li&gt;Manual update: run &lt;code&gt;yarn attributions:generate&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/rekmarks/8dba6306695dcd44967cce4b6a94ae33"&gt;Visual of the controller hierarchy and dependencies as of summer 2022.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mango-dune-07a8b7110.1.azurestaticapps.net/?repo=metamask%2Fmetamask-extension"&gt;Visual of the entire codebase.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="http://www.nomnoml.com/#view/%5B%3Cactor%3Euser%5D%0A%0A%5Bmetamask-ui%7C%0A%20%20%20%5Btools%7C%0A%20%20%20%20%20react%0A%20%20%20%20%20redux%0A%20%20%20%20%20thunk%0A%20%20%20%20%20ethUtils%0A%20%20%20%20%20jazzicon%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20account-detail%0A%20%20%20%20%20accounts%0A%20%20%20%20%20locked-screen%0A%20%20%20%20%20restore-vault%0A%20%20%20%20%20identicon%0A%20%20%20%20%20config%0A%20%20%20%20%20info%0A%20%20%20%5D%0A%20%20%20%5Breducers%7C%0A%20%20%20%20%20app%0A%20%20%20%20%20metamask%0A%20%20%20%20%20identities%0A%20%20%20%5D%0A%20%20%20%5Bactions%7C%0A%20%20%20%20%20%5BbackgroundConnection%5D%0A%20%20%20%5D%0A%20%20%20%5Bcomponents%5D%3A-%3E%5Bactions%5D%0A%20%20%20%5Bactions%5D%3A-%3E%5Breducers%5D%0A%20%20%20%5Breducers%5D%3A-%3E%5Bcomponents%5D%0A%5D%0A%0A%5Bweb%20dapp%7C%0A%20%20%5Bui%20code%5D%0A%20%20%5Bweb3%5D%0A%20%20%5Bmetamask-inpage%5D%0A%20%20%0A%20%20%5B%3Cactor%3Eui%20developer%5D%0A%20%20%5Bui%20developer%5D-%3E%5Bui%20code%5D%0A%20%20%5Bui%20code%5D%3C-%3E%5Bweb3%5D%0A%20%20%5Bweb3%5D%3C-%3E%5Bmetamask-inpage%5D%0A%5D%0A%0A%5Bmetamask-background%7C%0A%20%20%5Bprovider-engine%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bid%20store%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%3E%5Bhooked%20wallet%20subprovider%5D%0A%20%20%5Bhooked%20wallet%20subprovider%5D%3C-%3E%5Bid%20store%5D%0A%20%20%5Bconfig%20manager%7C%0A%20%20%20%20%5Brpc%20configuration%5D%0A%20%20%20%20%5Bencrypted%20keys%5D%0A%20%20%20%20%5Bwallet%20nicknames%5D%0A%20%20%5D%0A%20%20%0A%20%20%5Bprovider-engine%5D%3C-%5Bconfig%20manager%5D%0A%20%20%5Bid%20store%5D%3C-%3E%5Bconfig%20manager%5D%0A%5D%0A%0A%5Buser%5D%3C-%3E%5Bmetamask-ui%5D%0A%0A%5Buser%5D%3C%3A--%3A%3E%5Bweb%20dapp%5D%0A%0A%5Bmetamask-contentscript%7C%0A%20%20%5Bplugin%20restart%20detector%5D%0A%20%20%5Brpc%20passthrough%5D%0A%5D%0A%0A%5Brpc%20%7C%0A%20%20%5Bethereum%20blockchain%20%7C%0A%20%20%20%20%5Bcontracts%5D%0A%20%20%20%20%5Baccounts%5D%0A%20%20%5D%0A%5D%0A%0A%5Bweb%20dapp%5D%3C%3A--%3A%3E%5Bmetamask-contentscript%5D%0A%5Bmetamask-contentscript%5D%3C-%3E%5Bmetamask-background%5D%0A%5Bmetamask-background%5D%3C-%3E%5Bmetamask-ui%5D%0A%5Bmetamask-background%5D%3C-%3E%5Brpc%5D%0A"&gt;&lt;img src="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/architecture.png" alt="Architecture Diagram" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Other Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/translating-guide.md"&gt;How to add a new translation to MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/publishing.md"&gt;Publishing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/trezor-emulator.md"&gt;How to use the TREZOR emulator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/development/README.md"&gt;Developing on MetaMask&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/development/gource-viz.sh"&gt;How to generate a visualization of this repository's development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/confirmations.md"&gt;How to add new confirmations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/MetaMask/metamask-extension/main/docs/browser-support.md"&gt;Browser support guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dapp Developer Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.metamask.io/snaps/"&gt;Extend MetaMask's features w/ MetaMask Snaps.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.metamask.io/wallet/how-to/add-network/"&gt;Prompt your users to add and switch to a new network.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.metamask.io/wallet/how-to/display/icon/"&gt;Change the logo that appears when your dapp connects to MetaMask.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>truffle-ai/dexto</title>
      <link>https://github.com/truffle-ai/dexto</link>
      <description>&lt;p&gt;The Intelligence Layer for AI agents. Connect your models, tools, and data to create agentic apps that can think, act and talk to you.&lt;/p&gt;&lt;hr&gt;&lt;a href="https://dexto.ai"&gt; &lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/dexto-logo.svg?sanitize=true" alt="Dexto" width="100%" style="max-width: 1000px" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;img src="https://img.shields.io/badge/Status-Beta-yellow" /&gt; &lt;img src="https://img.shields.io/badge/License-Elastic%202.0-blue.svg?sanitize=true" /&gt; &lt;a href="https://discord.gg/GFzWFAAZcm"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Chat-7289da?logo=discord&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/truffle-ai/dexto"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;An all-in-one toolkit to build agentic applications that turn natural language into real-world actions.&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/89d30349-0cb1-4160-85db-d99a80a71d7a" alt="Dexto Demo" width="700" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Dexto?&lt;/h2&gt; 
&lt;p&gt;Dexto is a universal intelligence layer for building collaborative, context-aware AI Agents &amp;amp; agentic apps. It orchestrates LLMs, tools, and data into persistent, stateful systems with memory, so you can rapidly create AI assistants, digital companions &amp;amp; copilots that think, act and feel alive.&lt;/p&gt; 
&lt;p&gt;Dexto combines a configuration-driven framework, robust runtime, and seamless developer experience so you can build, deploy, and iterate on your agents easily.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Framework&lt;/strong&gt; – Define agent behavior in YAML. Instantly swap models and tools without touching code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runtime&lt;/strong&gt; – Execution with orchestration, session management, conversation memory, and multimodal support.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interfaces &amp;amp; Tooling&lt;/strong&gt; – Native support for CLI, Web, APIs, and a TypeScript SDK.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;With Dexto, you can build:&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Autonomous Agents&lt;/strong&gt; - Agents that plan, execute, and adapt to user goals.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Digital Companions&lt;/strong&gt; - AI assistants &amp;amp; copilots that remember context and anticipate needs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Clients&lt;/strong&gt; - Connect multiple tools, files, APIs, and data via MCP Servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Servers&lt;/strong&gt; - Dexto Web UI and MCP playground help you to easily test your own MCP servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Agent Systems&lt;/strong&gt; - Architect agents that collaborate, delegate, and solve complex tasks together.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent-as-a-Service&lt;/strong&gt; – Transform your existing SaaS products and APIs into dynamic, conversational experiences.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agentic Applications&lt;/strong&gt; – Integrate Dexto as a reasoning engine to power interactive, multimodal, AI-native applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;What You Get&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Batteries Included&lt;/strong&gt; – Session management, tool orchestration, multimodal support, and production-ready observability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;50+ LLMs&lt;/strong&gt; – Instantly switch between OpenAI, Anthropic, Google, Groq, local models or bring your own.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run Anywhere&lt;/strong&gt; – Local for privacy, cloud for reach, or hybrid. &lt;em&gt;Same agent, any deployment.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Native Multimodal&lt;/strong&gt; – Text, images, files, and tools in a single conversation. &lt;em&gt;Upload screenshots, ask questions, take actions.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent Sessions&lt;/strong&gt; – Conversations, context, and memory are saved and can be exported, imported, or shared across environments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Interfaces&lt;/strong&gt; – One agent, endless ways to interact: Ready-to-use CLI, WebUI, APIs, or integrate with your own UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;30+ Tools &amp;amp; MCP&lt;/strong&gt; – Integrate tools and connect to external servers via the Model Context Protocol (MCP) or use our internal tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pluggable Storage&lt;/strong&gt; – Use Redis, PostgreSQL, SQLite, in-memory, S3 and more for cache, database &amp;amp; blob backends.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Human in the loop&lt;/strong&gt; - Configure approval policies for tool execution, agents can also remember which tools are safe per session.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt; – Built-in OpenTelemetry distributed tracing, token usage monitoring, and error handling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# NPM global
npm install -g dexto

# —or— build from source
# this sets up dexto CLI from the cloned code
git clone https://github.com/truffle-ai/dexto.git
cd dexto &amp;amp;&amp;amp; pnpm install &amp;amp;&amp;amp; pnpm install-cli

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Run setup workflow - this prompts for your preferred LLM and API keys and opens the Web UI
dexto

# 2. Try a multi-step task in the web UI:
"create a snake game in HTML/CSS/JS, then open it in the browser"

# 3. Start interactive CLI mode instead of web UI
dexto --mode cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In 2 -&amp;gt; Dexto will use filesystem tools to write code and browser tools to open it — all from a single prompt. The Web UI (default mode) allows you to navigate previous conversations and experiment with different models, tools and more.&lt;/p&gt; 
&lt;p&gt;The interactive CLI (3) allows you to interact with agents in the terminal.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://docs.dexto.ai/docs/guides/cli/overview"&gt;CLI Guide&lt;/a&gt; for full details.&lt;/p&gt; 
&lt;h3&gt;Skip Tool Prompts While Prototyping&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dexto --auto-approve "refactor my project using the filesystem and browser tools"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the &lt;code&gt;--auto-approve&lt;/code&gt; flag to bypass confirmation prompts when you trust the tools being invoked—perfect for fast local iteration. Remove the flag when you want explicit approval again.&lt;/p&gt; 
&lt;h3&gt;Logs&lt;/h3&gt; 
&lt;p&gt;Logs are stored in &lt;code&gt;~/.dexto/logs&lt;/code&gt; directory by default.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;DEXTO_LOG_TO_CONSOLE=true&lt;/code&gt; to log to console when running dexto.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;DEXTO_LOG_LEVEL=debug&lt;/code&gt; for debug logs.&lt;/p&gt; 
&lt;h2&gt;Agent Recipes&lt;/h2&gt; 
&lt;p&gt;Dexto comes with pre-built agent recipes for common use cases. Install and use them instantly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# List available agents
dexto list-agents

# Install specific agents
dexto install nano-banana-agent podcast-agent coding-agent

# Use an agent with one shot prompt
dexto --agent nano-banana-agent --mode cli "create a futuristic cityscape with flying cars"
dexto --agent podcast-agent --mode cli "generate a podcast intro with two hosts discussing AI"
dexto --agent coding-agent --mode cli "create a landing page for a coffee brand inspired by star wars"

# Alternatively, start the agent in web UI and put in the prompt yourself
dexto --agent nano-banana-agent
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available Agents:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Coding Agent&lt;/strong&gt; – Code generation, refactoring, debugging&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nano Banana Agent&lt;/strong&gt; – Advanced image generation and editing using Google's Nano Banana (Gemini 2.5 Flash Image)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Podcast Agent&lt;/strong&gt; – Advanced podcast generation using Google Gemini TTS for multi-speaker audio content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sora Video Agent&lt;/strong&gt; – AI video generation using OpenAI's Sora with custom settings, remixing, and reference support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database Agent&lt;/strong&gt; – Demo agent for SQL queries and database operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Agent&lt;/strong&gt; – GitHub operations, PR analysis, and repository management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Editor Agent&lt;/strong&gt; – Image editing and manipulation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Music Agent&lt;/strong&gt; – Music creation and audio processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Talk2PDF Agent&lt;/strong&gt; – Document analysis and conversation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Product Researcher&lt;/strong&gt; – Product naming and branding research&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Triage Agent&lt;/strong&gt; – Demo multi-agent customer support routing system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each agent is pre-configured with the right tools, prompts, and LLM settings for its domain. No setup required—just install and start building.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;📚 See the full &lt;a href="https://docs.dexto.ai/docs/guides/agent-registry"&gt;Agent Registry&lt;/a&gt; for detailed information about all agents, their capabilities, use cases, and requirements.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;More ready-to-run recipes live in &lt;a href="https://raw.githubusercontent.com/truffle-ai/dexto/main/agents/"&gt;&lt;code&gt;agents/&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples &amp;amp; Demos&lt;/h2&gt; 
&lt;h3&gt;🎙️ Podcast Agent: Generate AI Podcasts&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Task:&lt;/strong&gt; &lt;code&gt;Generate an intro for a podcast about the latest in AI.&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dexto --agent podcast-agent
&lt;/code&gt;&lt;/pre&gt; 
&lt;img src="https://github.com/user-attachments/assets/cfd59751-3daa-4ccd-97b2-1b2862c96af1" alt="Podcast Agent Demo" width="600" /&gt; 
&lt;h3&gt;👁️ Computer Vision Agent: Face Detection &amp;amp; Annotation Using OpenCV&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Task:&lt;/strong&gt; &lt;code&gt;Detect all faces in this image and draw bounding boxes around them.&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dexto --agent image-editor-agent
&lt;/code&gt;&lt;/pre&gt; 
&lt;img src="https://github.com/user-attachments/assets/7e4b2043-c39a-47c7-a403-a9665ee762ce" alt="Face Detection Demo" width="600" /&gt; 
&lt;h3&gt;🎮 Coding Agents: Create apps on demand&lt;/h3&gt; 
&lt;p&gt;Build full-stack applications, websites, and interactive games with AI-powered coding agents. Customize them to create your own coding agents.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Task:&lt;/strong&gt; &lt;code&gt;Can you create a snake game in a new folder and open it when done?&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dexto --agent coding-agent
&lt;/code&gt;&lt;/pre&gt; 
&lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/coding_agent_demo.gif" alt="Snake Game Development Demo" width="600" /&gt; 
&lt;h3&gt;📧 Portable Agents: Use your agents from Cursor&lt;/h3&gt; 
&lt;p&gt;Dexto agents are designed to be modular, composable and portable, allowing you to run them from anywhere. In this example, we connect to dexto as an MCP server via Cursor to use our podcast agent from above.&lt;/p&gt; 
&lt;img src="https://github.com/user-attachments/assets/fd75a63f-4d29-447a-be24-6943e34c387f" alt="Email to Slack Demo" width="600" /&gt; 
&lt;h3&gt;🎯 Triage Agent: Multi-Agent Customer Support&lt;/h3&gt; 
&lt;p&gt;Create multi-agent systems that can intelligently coordinate and delegate tasks among themselves based on the user query.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dexto --agent triage-agent
&lt;/code&gt;&lt;/pre&gt; 
&lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/triage_agent_demo.gif" alt="Triage Agent Demo" width="600" /&gt; 
&lt;h3&gt;🛠️ Adding Custom MCP Servers&lt;/h3&gt; 
&lt;p&gt;You can add your own Model Context Protocol (MCP) servers to extend Dexto's capabilities with new tools or data sources. Just edit your agent YAML or add it directly in the WebUI.&lt;/p&gt; 
&lt;img src="https://github.com/user-attachments/assets/1a3ca1fd-31a0-4e1d-ba93-23e1772b1e79" alt="Add MCP Server Example" width="600" /&gt; 
&lt;h3&gt;🧠 Memory: Persistent Context &amp;amp; Learning&lt;/h3&gt; 
&lt;p&gt;Create and save memories. Your agent automatically uses it to create personalized experiences.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/memory_demo.gif" alt="Memory Demo" width="600" /&gt; 
&lt;h3&gt;🛒 MCP Store: Tool Discovery &amp;amp; Integration&lt;/h3&gt; 
&lt;p&gt;Equip your agents from 20+ MCP Servers and start using them via chat - instantly.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bring your own keys&lt;/li&gt; 
 &lt;li&gt;Can't find an MCP? &lt;a href="https://github.com/truffle-ai/dexto/raw/main/CONTRIBUTING.md"&gt;Contribute here!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/mcp_store_demo.gif" alt="MCP Store Demo" width="600" /&gt; 
&lt;h3&gt;📝 Human In The Loop: Dynamic Form Generation&lt;/h3&gt; 
&lt;p&gt;Agents can generate structured forms when they need additional data to make it easier to collect extra info &amp;amp; approvals from users.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/user_form_demo.gif" alt="User Form Demo" width="600" /&gt; 
&lt;h4&gt;More Examples:&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;🛒 Browser Agent: Amazon Shopping Assistant&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Task:&lt;/strong&gt; &lt;code&gt;Can you go to amazon and add some snacks to my cart? I like trail mix, cheetos and maybe surprise me with something else?&lt;/code&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Default agent has browser tools
dexto
&lt;/code&gt;&lt;/pre&gt; 
 &lt;a href="https://youtu.be/C-Z0aVbl4Ik"&gt; &lt;img src="https://github.com/user-attachments/assets/3f5be5e2-7a55-4093-a071-8c52f1a83ba3" alt="Dexto: Amazon shopping agent demo" width="600" /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;🎮 Playground: Interactive Development Environment&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;A testing playground to view the tools in your MCP servers before connecting them to LLMs to see the detailed response structures.&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/.github/assets/playground_demo.gif" alt="Playground Demo" width="600" /&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📧 Email to Slack: Automated Email Summaries&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Task:&lt;/strong&gt; &lt;code&gt;Summarize emails and send highlights to Slack&lt;/code&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;dexto --agent ./agents/examples/email_slack.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;img src="https://raw.githubusercontent.com/truffle-ai/dexto/main/assets/email_slack_demo.gif" alt="Email to Slack Demo" width="600" /&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;🖼️ Hugging Face: Image Generation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Task:&lt;/strong&gt; &lt;code&gt;Generate a photo of a baby panda.&lt;/code&gt;&lt;/p&gt; 
 &lt;img src="https://github.com/user-attachments/assets/570cbd3a-6990-43c5-b355-2b549a4ee6b3" alt="Hugging Face Image Generation Demo" width="600" /&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Run Modes&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Mode&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Best for&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Web UI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;dexto&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Friendly chat interface w/ image support (default)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Interactive CLI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;dexto --mode cli&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Everyday automation &amp;amp; quick tasks&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Headless Server&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;dexto --mode server&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;REST &amp;amp; WebSocket APIs for agent interaction&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MCP Server (Agent)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;dexto --mode mcp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Exposing your agent as a tool for others via stdio&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MCP Server (Aggregator)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;dexto mcp --group-servers&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Re-exposing tools from multiple MCP servers via stdio&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Discord Bot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;dexto --mode discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Community servers &amp;amp; channels (&lt;a href="https://raw.githubusercontent.com/truffle-ai/dexto/main/packages/cli/src/discord/README.md"&gt;Requires Setup&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Telegram Bot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;dexto --mode telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Mobile chat (&lt;a href="https://raw.githubusercontent.com/truffle-ai/dexto/main/packages/cli/src/telegram/README.md"&gt;Requires Setup&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Run &lt;code&gt;dexto --help&lt;/code&gt; for &lt;strong&gt;all flags, sub-commands, and environment variables&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;h3&gt;Agent Configuration&lt;/h3&gt; 
&lt;p&gt;Dexto treats each configuration as a unique agent allowing you to define and save combinations of LLMs, servers, storage options, etc. based on your needs for easy portability. Define agents in version-controlled YAML. Change the file, reload, and chat—state, memory, and tools update automatically.&lt;/p&gt; 
&lt;p&gt;Example configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# agents/my-agent.yml
llm:
  provider: openai
  model: gpt-5-mini
  apiKey: $OPENAI_API_KEY

mcpServers:
  filesystem:
    type: stdio
    command: npx
    args: ['-y', '@modelcontextprotocol/server-filesystem', '.']
  web:
    type: stdio
    command: npx
    args: ['-y', '@modelcontextprotocol/server-brave-search']

systemPrompt: |
  You are a helpful AI assistant with access to files and web search.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LLM Providers&lt;/h3&gt; 
&lt;p&gt;Switch between providers instantly—no code changes required.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
   &lt;th&gt;Models&lt;/th&gt; 
   &lt;th&gt;Setup&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;OpenAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;gpt-5&lt;/code&gt;, &lt;code&gt;gpt-5-mini&lt;/code&gt;, &lt;code&gt;gpt-5-nano&lt;/code&gt;, &lt;code&gt;gpt-4.1&lt;/code&gt;, &lt;code&gt;gpt-4.1-mini&lt;/code&gt;, &lt;code&gt;gpt-4.1-nano&lt;/code&gt;, &lt;code&gt;gpt-4o&lt;/code&gt;, &lt;code&gt;gpt-4o-mini&lt;/code&gt;, &lt;code&gt;gpt-4o-audio-preview&lt;/code&gt;, &lt;code&gt;o4-mini&lt;/code&gt;, &lt;code&gt;o3&lt;/code&gt;, &lt;code&gt;o3-mini&lt;/code&gt;, &lt;code&gt;o1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;change model in UI and add api key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Anthropic&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;claude-haiku-4-5-20251001&lt;/code&gt;, &lt;code&gt;claude-sonnet-4-5-20250929&lt;/code&gt;, &lt;code&gt;claude-opus-4-1-20250805&lt;/code&gt;, &lt;code&gt;claude-4-opus-20250514&lt;/code&gt;, &lt;code&gt;claude-4-sonnet-20250514&lt;/code&gt;, &lt;code&gt;claude-3-7-sonnet-20250219&lt;/code&gt;, &lt;code&gt;claude-3-5-sonnet-20240620&lt;/code&gt;, &lt;code&gt;claude-3-5-haiku-20241022&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;change model in UI and add api key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Google&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;gemini-2.5-pro&lt;/code&gt;, &lt;code&gt;gemini-2.5-flash&lt;/code&gt;, &lt;code&gt;gemini-2.5-flash-lite&lt;/code&gt;, &lt;code&gt;gemini-2.0-flash&lt;/code&gt;, &lt;code&gt;gemini-2.0-flash-lite&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;change model in UI and add api key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Groq&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;llama-3.3-70b-versatile&lt;/code&gt;, &lt;code&gt;meta-llama/llama-4-scout-17b-16e-instruct&lt;/code&gt;, &lt;code&gt;meta-llama/llama-4-maverick-17b-128e-instruct&lt;/code&gt;, &lt;code&gt;qwen/qwen3-32b&lt;/code&gt;, &lt;code&gt;gemma-2-9b-it&lt;/code&gt;, &lt;code&gt;openai/gpt-oss-20b&lt;/code&gt;, &lt;code&gt;openai/gpt-oss-120b&lt;/code&gt;, &lt;code&gt;moonshotai/kimi-k2-instruct&lt;/code&gt;, &lt;code&gt;deepseek-r1-distill-llama-70b&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;change model in UI and add api key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;xAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;grok-4&lt;/code&gt;, &lt;code&gt;grok-3&lt;/code&gt;, &lt;code&gt;grok-3-mini&lt;/code&gt;, &lt;code&gt;grok-code-fast-1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;change model in UI and add api key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cohere&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;command-a-03-2025&lt;/code&gt;, &lt;code&gt;command-r-plus&lt;/code&gt;, &lt;code&gt;command-r&lt;/code&gt;, &lt;code&gt;command-r7b&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;change model in UI and add api key&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Switch models via CLI
dexto -m claude-sonnet-4-5-20250929
dexto -m gemini-2.5-pro
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can configure things like LLM, system prompt, MCP servers, storage, sessions, human-in-the loop, telemetry and more!&lt;/p&gt; 
&lt;p&gt;See our &lt;a href="https://docs.dexto.ai/docs/category/agent-configuration-guide"&gt;Configuration Guide&lt;/a&gt; for complete setup instructions.&lt;/p&gt; 
&lt;h2&gt;Programmatic API&lt;/h2&gt; 
&lt;p&gt;Install the &lt;code&gt;@dexto/core&lt;/code&gt; library, and build applications with the &lt;code&gt;DextoAgent&lt;/code&gt; class. Everything the CLI can do, your code can too.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @dexto/core
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { DextoAgent } from '@dexto/core';

// Create and start agent
const agent = new DextoAgent({
  llm: {
    provider: 'openai',
    model: 'gpt-5-mini',
    apiKey: process.env.OPENAI_API_KEY
  }
});
await agent.start();

// Run tasks
const response = await agent.run('List the 5 largest files in this repo');
console.log(response);

// Hold conversations
await agent.run('Write a haiku about TypeScript');
await agent.run('Make it funnier');

await agent.stop();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See our &lt;a href="https://docs.dexto.ai/api/category/dexto-sdk/"&gt;TypeScript SDK docs&lt;/a&gt; for complete examples with MCP tools, sessions, and advanced features.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Session Management&lt;/h3&gt; 
&lt;p&gt;Create and manage multiple conversation sessions with persistent storage.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const agent = new DextoAgent(config);
await agent.start();

// Create and manage sessions
const session = await agent.createSession('user-123');
await agent.run('Hello, how can you help me?', undefined, 'user-123');

// List and manage sessions
const sessions = await agent.listSessions();
const sessionHistory = await agent.getSessionHistory('user-123');
await agent.deleteSession('user-123');

// Search across conversations
const results = await agent.searchMessages('bug fix', { limit: 10 });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LLM Management&lt;/h3&gt; 
&lt;p&gt;Switch between models and providers dynamically.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Get current configuration
const currentLLM = agent.getCurrentLLMConfig();

// Switch models (provider inferred automatically)
await agent.switchLLM({ model: 'gpt-5-mini' });
await agent.switchLLM({ model: 'claude-sonnet-4-5-20250929' });

// Switch model for a specific session id 1234
await agent.switchLLM({ model: 'gpt-5-mini' }, '1234')

// Get supported providers and models
const providers = agent.getSupportedProviders();
const models = agent.getSupportedModels();
const openaiModels = agent.getSupportedModelsForProvider('openai');
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MCP Manager&lt;/h3&gt; 
&lt;p&gt;For advanced MCP server management, use the MCPManager directly. See the &lt;a href="https://docs.dexto.ai/api/sdk/mcp-manager"&gt;MCP Manager SDK docs&lt;/a&gt; for full details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { MCPManager } from '@dexto/core';

const manager = new MCPManager();

// Connect to MCP servers
await manager.connectServer('filesystem', {
  type: 'stdio',
  command: 'npx',
  args: ['-y', '@modelcontextprotocol/server-filesystem', '.']
});

// Access tools, prompts, and resources
const tools = await manager.getAllTools();
const prompts = await manager.getAllPrompts();
const resources = await manager.getAllResources();

// Execute tools
const result = await manager.executeTool('readFile', { path: './README.md' });

await manager.disconnectAll();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Storage &amp;amp; Persistence&lt;/h3&gt; 
&lt;p&gt;Configure storage backends for production-ready persistence and caching. See the &lt;a href="https://docs.dexto.ai/docs/guides/configuring-dexto/storage"&gt;Storage Configuration guide&lt;/a&gt; for full details.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# agents/production-agent.yml
storage:
  cache:
    type: redis
    url: $REDIS_URL
    maxConnections: 100
  database:
    type: postgres
    connectionString: $POSTGRES_CONNECTION_STRING
    maxConnections: 25

sessions:
  maxSessions: 1000
  sessionTTL: 86400000 # 24 hours
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Supported Backends:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cache&lt;/strong&gt;: Redis, In-Memory (fast, ephemeral)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt;: PostgreSQL, SQLite, In-Memory (persistent, reliable)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Use Cases:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Development&lt;/strong&gt;: In-memory for quick testing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Production&lt;/strong&gt;: Redis + PostgreSQL for scale&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: SQLite for single-instance persistence&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://docs.dexto.ai/api/sdk/dexto-agent"&gt;DextoAgent API Documentation&lt;/a&gt; for complete method references.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click to expand for full CLI reference (`dexto --help`)&lt;/summary&gt; 
 &lt;pre&gt;&lt;code&gt;Usage: dexto [options] [command] [prompt...]

Dexto CLI - AI-powered assistant with session management

Basic Usage:
  dexto                    Start web UI (default)
  dexto "query"            Run one-shot query (auto-uses CLI mode)
  dexto -p "query"         Run one-shot query, then exit
  cat file | dexto -p "query"  Process piped content

CLI Mode:
  dexto --mode cli         Start interactive CLI REPL

Session Management:
  dexto -c                 Continue most recent conversation
  dexto -c -p "query"      Continue with one-shot query, then exit
  dexto -r "&amp;lt;session-id&amp;gt;" "query"  Resume with one-shot query

Tool Confirmation:
  dexto --auto-approve     Auto-approve all tool executions

Agent Selection:
  dexto --agent coding-agent       Use installed agent by name
  dexto --agent ./my-agent.yml     Use agent from file path
  dexto -a agents/custom.yml       Short form with relative path

Advanced Modes:
  dexto --mode server      Run as API server
  dexto --mode discord     Run as Discord bot
  dexto --mode telegram    Run as Telegram bot
  dexto --mode mcp         Run as MCP server

Session Commands: dexto session list|history|delete • search
Search: dexto search &amp;lt;query&amp;gt; [--session &amp;lt;id&amp;gt;] [--role &amp;lt;role&amp;gt;]

See https://docs.dexto.ai for documentation and examples

Arguments:
  prompt                           Natural-language prompt to run once. If not
                                   passed, dexto will start as an interactive
                                   CLI

Options:
  -v, --version                    output the current version
  -a, --agent &amp;lt;id|path&amp;gt;            Agent ID or path to agent config file
  -p, --prompt &amp;lt;text&amp;gt;              Run prompt and exit. Alternatively provide a
                                   single quoted string as positional argument.
  -s, --strict                     Require all server connections to succeed
  --no-verbose                     Disable verbose output
  --no-interactive                 Disable interactive prompts and API key
                                   setup
  --skip-setup                     Skip global setup validation (useful for MCP
                                   mode, automation)
  -m, --model &amp;lt;model&amp;gt;              Specify the LLM model to use
  --router &amp;lt;router&amp;gt;                Specify the LLM router to use (vercel or
                                   in-built)
  --auto-approve                   Always approve tool executions without
                                   confirmation prompts
  -c, --continue                   Continue most recent conversation
  -r, --resume &amp;lt;sessionId&amp;gt;         Resume session by ID
  --mode &amp;lt;mode&amp;gt;                    The application in which dexto should talk
                                   to you - web | cli | server | discord |
                                   telegram | mcp (default: "web")
  --web-port &amp;lt;port&amp;gt;                port for the web UI (default: 3000)
                                   (default: "3000")
  --api-port &amp;lt;port&amp;gt;                port for the API server (default: web-port +
                                   1)
  --no-auto-install                Disable automatic installation of missing
                                   agents from registry
  -h, --help                       display help for command

Commands:
  create-app                       Scaffold a new Dexto Typescript app
  init-app                         Initialize an existing Typescript app with
                                   Dexto
  setup [options]                  Configure global Dexto preferences
  install [options] [agents...]    Install agents from registry or custom YAML
                                   files/directories
  uninstall [options] [agents...]  Uninstall agents from the local installation
  list-agents [options]            List available and installed agents
  which &amp;lt;agent&amp;gt;                    Show the path to an agent
  session                          Manage chat sessions
  search [options] &amp;lt;query&amp;gt;         Search session history
  mcp [options]                    Start Dexto as an MCP server. Use
                                   --group-servers to aggregate and re-expose
                                   tools from configured MCP servers.
                                   In the future, this command will expose the
                                   agent as an MCP server by default.
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;See the &lt;a href="https://docs.dexto.ai/docs/guides/cli/overview"&gt;CLI Guide&lt;/a&gt; for full details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Next Steps&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.dexto.ai/docs/getting-started/intro/"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; – Get up and running in minutes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.dexto.ai/docs/category/guides/"&gt;Configuration Guide&lt;/a&gt;&lt;/strong&gt; – Configure agents, LLMs, and tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.dexto.ai/docs/category/tutorials/"&gt;Building with Dexto&lt;/a&gt;&lt;/strong&gt; – Developer guides and patterns.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.dexto.ai/api/"&gt;API Reference&lt;/a&gt;&lt;/strong&gt; – REST APIs, WebSocket, and SDKs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Telemetry&lt;/h2&gt; 
&lt;p&gt;We collect anonymous usage data (no personal/sensitive info) to help improve Dexto. This includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Commands used&lt;/li&gt; 
 &lt;li&gt;Command execution time&lt;/li&gt; 
 &lt;li&gt;Error occurrences&lt;/li&gt; 
 &lt;li&gt;System information (OS, Node version)&lt;/li&gt; 
 &lt;li&gt;LLM Models used&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To opt-out:&lt;/p&gt; 
&lt;p&gt;Set env variable &lt;code&gt;DEXTO_ANALYTICS_DISABLED=1&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Refer to our &lt;a href="https://raw.githubusercontent.com/truffle-ai/dexto/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; 
&lt;p&gt;Dexto is built by the team at &lt;a href="https://www.trytruffle.ai"&gt;Truffle AI&lt;/a&gt;.&lt;br /&gt; Join our Discord to share projects, ask questions, or just say hi!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GFzWFAAZcm"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Chat-7289da?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you enjoy Dexto, please give us a ⭐ on GitHub—it helps a lot!&lt;/p&gt; 
&lt;div align="left"&gt;&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://x.com/intent/user?screen_name=Road_Kill11"&gt;&lt;img src="https://img.shields.io/twitter/follow/Rahul?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/user?screen_name=shaun5k_"&gt;&lt;img src="https://img.shields.io/twitter/follow/Shaunak?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt;  
&lt;hr /&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to all these amazing people for contributing to Dexto!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/truffle-ai/dexto/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=truffle-ai/dexto" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Elastic License 2.0. See &lt;a href="https://raw.githubusercontent.com/truffle-ai/dexto/main/LICENSE"&gt;LICENSE&lt;/a&gt; for full terms.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google-gemini/gemini-cli</title>
      <link>https://github.com/google-gemini/gemini-cli</link>
      <description>&lt;p&gt;An open-source AI agent that brings the power of Gemini directly into your terminal.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gemini CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Gemini CLI CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml"&gt;&lt;img src="https://github.com/google-gemini/gemini-cli/actions/workflows/e2e.yml/badge.svg?sanitize=true" alt="Gemini CLI E2E" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;&lt;img src="https://img.shields.io/npm/v/@google/gemini-cli" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/google-gemini/gemini-cli/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/google-gemini/gemini-cli" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/assets/gemini-screenshot.png" alt="Gemini CLI Screenshot" /&gt;&lt;/p&gt; 
&lt;p&gt;Gemini CLI is an open-source AI agent that brings the power of Gemini directly into your terminal. It provides lightweight access to Gemini, giving you the most direct path from your prompt to our model.&lt;/p&gt; 
&lt;p&gt;Learn all about Gemini CLI in our &lt;a href="https://geminicli.com/docs/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Why Gemini CLI?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day with personal Google account.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Powerful Gemini 2.5 Pro&lt;/strong&gt;: Access to 1M token context window.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 Built-in tools&lt;/strong&gt;: Google Search grounding, file operations, shell commands, web fetching.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔌 Extensible&lt;/strong&gt;: MCP (Model Context Protocol) support for custom integrations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💻 Terminal-first&lt;/strong&gt;: Designed for developers who live in the command line.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Open source&lt;/strong&gt;: Apache 2.0 licensed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Installation&lt;/h2&gt; 
&lt;h3&gt;Pre-requisites before installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js version 20 or higher&lt;/li&gt; 
 &lt;li&gt;macOS, Linux, or Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Install&lt;/h3&gt; 
&lt;h4&gt;Run instantly with npx&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using npx (no installation required)
npx https://github.com/google-gemini/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with npm&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Install globally with Homebrew (macOS/Linux)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install gemini-cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Release Cadence and Tags&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/releases.md"&gt;Releases&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;New preview releases will be published each week at UTC 2359 on Tuesdays. These releases will not have been fully vetted and may contain regressions or other outstanding issues. Please help us test and install with &lt;code&gt;preview&lt;/code&gt; tag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stable&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New stable releases will be published each week at UTC 2000 on Tuesdays, this will be the full promotion of last week's &lt;code&gt;preview&lt;/code&gt; release + any bug fixes and validations. Use &lt;code&gt;latest&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nightly&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;New releases will be published each week at UTC 0000 each day, This will be all changes from the main branch as represented at time of release. It should be assumed there are pending validations and issues. Use &lt;code&gt;nightly&lt;/code&gt; tag.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @google/gemini-cli@nightly
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📋 Key Features&lt;/h2&gt; 
&lt;h3&gt;Code Understanding &amp;amp; Generation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Query and edit large codebases&lt;/li&gt; 
 &lt;li&gt;Generate new apps from PDFs, images, or sketches using multimodal capabilities&lt;/li&gt; 
 &lt;li&gt;Debug issues and troubleshoot with natural language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Automation &amp;amp; Integration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automate operational tasks like querying pull requests or handling complex rebases&lt;/li&gt; 
 &lt;li&gt;Use MCP servers to connect new capabilities, including &lt;a href="https://github.com/GoogleCloudPlatform/vertex-ai-creative-studio/tree/main/experiments/mcp-genmedia"&gt;media generation with Imagen, Veo or Lyria&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run non-interactively in scripts for workflow automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ground your queries with built-in &lt;a href="https://ai.google.dev/gemini-api/docs/grounding"&gt;Google Search&lt;/a&gt; for real-time information&lt;/li&gt; 
 &lt;li&gt;Conversation checkpointing to save and resume complex sessions&lt;/li&gt; 
 &lt;li&gt;Custom context files (GEMINI.md) to tailor behavior for your projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;GitHub Integration&lt;/h3&gt; 
&lt;p&gt;Integrate Gemini CLI directly into your GitHub workflows with &lt;a href="https://github.com/google-github-actions/run-gemini-cli"&gt;&lt;strong&gt;Gemini CLI GitHub Action&lt;/strong&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pull Request Reviews&lt;/strong&gt;: Automated code review with contextual feedback and suggestions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Issue Triage&lt;/strong&gt;: Automated labeling and prioritization of GitHub issues based on content analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;On-demand Assistance&lt;/strong&gt;: Mention &lt;code&gt;@gemini-cli&lt;/code&gt; in issues and pull requests for help with debugging, explanations, or task delegation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Workflows&lt;/strong&gt;: Build automated, scheduled and on-demand workflows tailored to your team's needs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔐 Authentication Options&lt;/h2&gt; 
&lt;p&gt;Choose the authentication method that best fits your needs:&lt;/p&gt; 
&lt;h3&gt;Option 1: Login with Google (OAuth login using your Google Account)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;✨ Best for:&lt;/strong&gt; Individual developers as well as anyone who has a Gemini Code Assist License. (see &lt;a href="https://cloud.google.com/gemini/docs/quotas"&gt;quota limits and terms of service&lt;/a&gt; for details)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 60 requests/min and 1,000 requests/day&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; with 1M token context window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No API key management&lt;/strong&gt; - just sign in with your Google account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic updates&lt;/strong&gt; to latest models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Start Gemini CLI, then choose &lt;em&gt;Login with Google&lt;/em&gt; and follow the browser authentication flow when prompted&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;If you are using a paid Code Assist License from your organization, remember to set the Google Cloud Project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Set your Google Cloud Project
export GOOGLE_CLOUD_PROJECT="YOUR_PROJECT_ID"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 2: Gemini API Key&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;✨ Best for:&lt;/strong&gt; Developers who need specific model control or paid tier access&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free tier&lt;/strong&gt;: 100 requests/day with Gemini 2.5 Pro&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model selection&lt;/strong&gt;: Choose specific Gemini models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Usage-based billing&lt;/strong&gt;: Upgrade for higher limits when needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from https://aistudio.google.com/apikey
export GEMINI_API_KEY="YOUR_API_KEY"
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Option 3: Vertex AI&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;✨ Best for:&lt;/strong&gt; Enterprise teams and production workloads&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise features&lt;/strong&gt;: Advanced security and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable&lt;/strong&gt;: Higher rate limits with billing account&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integration&lt;/strong&gt;: Works with existing Google Cloud infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get your key from Google Cloud Console
export GOOGLE_API_KEY="YOUR_API_KEY"
export GOOGLE_GENAI_USE_VERTEXAI=true
gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For Google Workspace accounts and other authentication methods, see the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/authentication.md"&gt;authentication guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;h3&gt;Basic Usage&lt;/h3&gt; 
&lt;h4&gt;Start in current directory&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Include multiple directories&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini --include-directories ../lib,../docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Use specific model&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -m gemini-2.5-flash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Non-interactive mode for scripts&lt;/h4&gt; 
&lt;p&gt;Get a simple text response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced scripting, including how to parse JSON and handle errors, use the &lt;code&gt;--output-format json&lt;/code&gt; flag to get structured output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Explain the architecture of this codebase" --output-format json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For real-time event streaming (useful for monitoring long-running operations), use &lt;code&gt;--output-format stream-json&lt;/code&gt; to get newline-delimited JSON events:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gemini -p "Run tests and deploy" --output-format stream-json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Quick Examples&lt;/h3&gt; 
&lt;h4&gt;Start a new project&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd new-project/
gemini
&amp;gt; Write me a Discord bot that answers questions using a FAQ.md file I will provide
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Analyze existing code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/google-gemini/gemini-cli
cd gemini-cli
gemini
&amp;gt; Give me a summary of all of the changes that went in yesterday
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/index.md"&gt;&lt;strong&gt;Quickstart Guide&lt;/strong&gt;&lt;/a&gt; - Get up and running quickly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/authentication.md"&gt;&lt;strong&gt;Authentication Setup&lt;/strong&gt;&lt;/a&gt; - Detailed auth configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/get-started/configuration.md"&gt;&lt;strong&gt;Configuration Guide&lt;/strong&gt;&lt;/a&gt; - Settings and customization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/keyboard-shortcuts.md"&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;/a&gt; - Productivity tips.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/commands.md"&gt;&lt;strong&gt;Commands Reference&lt;/strong&gt;&lt;/a&gt; - All slash commands (&lt;code&gt;/help&lt;/code&gt;, &lt;code&gt;/chat&lt;/code&gt;, etc).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/custom-commands.md"&gt;&lt;strong&gt;Custom Commands&lt;/strong&gt;&lt;/a&gt; - Create your own reusable commands.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/gemini-md.md"&gt;&lt;strong&gt;Context Files (GEMINI.md)&lt;/strong&gt;&lt;/a&gt; - Provide persistent context to Gemini CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/checkpointing.md"&gt;&lt;strong&gt;Checkpointing&lt;/strong&gt;&lt;/a&gt; - Save and resume conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/token-caching.md"&gt;&lt;strong&gt;Token Caching&lt;/strong&gt;&lt;/a&gt; - Optimize token usage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tools &amp;amp; Extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/index.md"&gt;&lt;strong&gt;Built-in Tools Overview&lt;/strong&gt;&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/file-system.md"&gt;File System Operations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/shell.md"&gt;Shell Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/web-fetch.md"&gt;Web Fetch &amp;amp; Search&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;&lt;strong&gt;MCP Server Integration&lt;/strong&gt;&lt;/a&gt; - Extend with custom tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/extensions/index.md"&gt;&lt;strong&gt;Custom Extensions&lt;/strong&gt;&lt;/a&gt; - Build and share your own commands.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/headless.md"&gt;&lt;strong&gt;Headless Mode (Scripting)&lt;/strong&gt;&lt;/a&gt; - Use Gemini CLI in automated workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/architecture.md"&gt;&lt;strong&gt;Architecture Overview&lt;/strong&gt;&lt;/a&gt; - How Gemini CLI works.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/ide-integration/index.md"&gt;&lt;strong&gt;IDE Integration&lt;/strong&gt;&lt;/a&gt; - VS Code companion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/sandbox.md"&gt;&lt;strong&gt;Sandboxing &amp;amp; Security&lt;/strong&gt;&lt;/a&gt; - Safe execution environments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/trusted-folders.md"&gt;&lt;strong&gt;Trusted Folders&lt;/strong&gt;&lt;/a&gt; - Control execution policies by folder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/enterprise.md"&gt;&lt;strong&gt;Enterprise Guide&lt;/strong&gt;&lt;/a&gt; - Deploy and manage in a corporate environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/telemetry.md"&gt;&lt;strong&gt;Telemetry &amp;amp; Monitoring&lt;/strong&gt;&lt;/a&gt; - Usage tracking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/core/tools-api.md"&gt;&lt;strong&gt;Tools API Development&lt;/strong&gt;&lt;/a&gt; - Create custom tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/local-development.md"&gt;&lt;strong&gt;Local development&lt;/strong&gt;&lt;/a&gt; - Local development tooling.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Troubleshooting &amp;amp; Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/troubleshooting.md"&gt;&lt;strong&gt;Troubleshooting Guide&lt;/strong&gt;&lt;/a&gt; - Common issues and solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/faq.md"&gt;&lt;strong&gt;FAQ&lt;/strong&gt;&lt;/a&gt; - Frequently asked questions.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;/bug&lt;/code&gt; command to report issues directly from the CLI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using MCP Servers&lt;/h3&gt; 
&lt;p&gt;Configure MCP servers in &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; to extend Gemini CLI with custom tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;&amp;gt; @github List my open pull requests
&amp;gt; @slack Send a summary of today's commits to #dev channel
&amp;gt; @database Run a query to find inactive users
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tools/mcp-server.md"&gt;MCP Server Integration guide&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Gemini CLI is fully open source (Apache 2.0), and we encourage the community to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and suggest features.&lt;/li&gt; 
 &lt;li&gt;Improve documentation.&lt;/li&gt; 
 &lt;li&gt;Submit code improvements.&lt;/li&gt; 
 &lt;li&gt;Share your MCP servers and extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for development setup, coding standards, and how to submit pull requests.&lt;/p&gt; 
&lt;p&gt;Check our &lt;a href="https://github.com/orgs/google-gemini/projects/11"&gt;Official Roadmap&lt;/a&gt; for planned features and priorities.&lt;/p&gt; 
&lt;h2&gt;📖 Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/ROADMAP.md"&gt;Official Roadmap&lt;/a&gt;&lt;/strong&gt; - See what's coming next.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/changelogs/index.md"&gt;Changelog&lt;/a&gt;&lt;/strong&gt; - See recent notable updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.npmjs.com/package/@google/gemini-cli"&gt;NPM Package&lt;/a&gt;&lt;/strong&gt; - Package registry.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs or request features.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/google-gemini/gemini-cli/security/advisories"&gt;Security Advisories&lt;/a&gt;&lt;/strong&gt; - Security updates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uninstall&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/cli/uninstall.md"&gt;Uninstall Guide&lt;/a&gt; for removal instructions.&lt;/p&gt; 
&lt;h2&gt;📄 Legal&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;License&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terms of Service&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/docs/tos-privacy.md"&gt;Terms &amp;amp; Privacy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/google-gemini/gemini-cli/main/SECURITY.md"&gt;Security Policy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; Built with ❤️ by Google and the open source community &lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>