<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Fri, 31 Oct 2025 01:48:39 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>cjpais/Handy</title>
      <link>https://github.com/cjpais/Handy</link>
      <description>&lt;p&gt;A free, open source, and extensible speech-to-text application that works completely offline.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Handy&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://discord.com/invite/WVBeWsNXK4"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A free, open source, and extensible speech-to-text application that works completely offline.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Handy is a cross-platform desktop application built with Tauri (Rust + React/TypeScript) that provides simple, privacy-focused speech transcription. Press a shortcut, speak, and have your words appear in any text field—all without sending your voice to the cloud.&lt;/p&gt; 
&lt;h2&gt;Why Handy?&lt;/h2&gt; 
&lt;p&gt;Handy was created to fill the gap for a truly open source, extensible speech-to-text tool. As stated on &lt;a href="https://handy.computer"&gt;handy.computer&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free&lt;/strong&gt;: Accessibility tooling belongs in everyone's hands, not behind a paywall&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Open Source&lt;/strong&gt;: Together we can build further. Extend Handy for yourself and contribute to something bigger&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Private&lt;/strong&gt;: Your voice stays on your computer. Get transcriptions without sending audio to the cloud&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple&lt;/strong&gt;: One tool, one job. Transcribe what you say and put it into a text box&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Handy isn't trying to be the best speech-to-text app—it's trying to be the most forkable one.&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Press&lt;/strong&gt; a configurable keyboard shortcut to start/stop recording (or use push-to-talk mode)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Speak&lt;/strong&gt; your words while the shortcut is active&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Release&lt;/strong&gt; and Handy processes your speech using Whisper&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Get&lt;/strong&gt; your transcribed text pasted directly into whatever app you're using&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The process is entirely local:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Silence is filtered using VAD (Voice Activity Detection) with Silero&lt;/li&gt; 
 &lt;li&gt;Transcription uses your choice of models: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Whisper models&lt;/strong&gt; (Small/Medium/Turbo/Large) with GPU acceleration when available&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Parakeet V3&lt;/strong&gt; - CPU-optimized model with excellent performance and automatic language detection&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Works on Windows, macOS, and Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the latest release from the &lt;a href="https://github.com/cjpais/Handy/releases"&gt;releases page&lt;/a&gt; or the &lt;a href="https://handy.computer"&gt;website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install the application following platform-specific instructions&lt;/li&gt; 
 &lt;li&gt;Launch Handy and grant necessary system permissions (microphone, accessibility)&lt;/li&gt; 
 &lt;li&gt;Configure your preferred keyboard shortcuts in Settings&lt;/li&gt; 
 &lt;li&gt;Start transcribing!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Development Setup&lt;/h3&gt; 
&lt;p&gt;For detailed build instructions including platform-specific requirements, see &lt;a href="https://raw.githubusercontent.com/cjpais/Handy/main/BUILD.md"&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Handy is built as a Tauri application combining:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: React + TypeScript with Tailwind CSS for the settings UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: Rust for system integration, audio processing, and ML inference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Core Libraries&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;whisper-rs&lt;/code&gt;: Local speech recognition with Whisper models&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;transcription-rs&lt;/code&gt;: CPU-optimized speech recognition with Parakeet models&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;cpal&lt;/code&gt;: Cross-platform audio I/O&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;vad-rs&lt;/code&gt;: Voice Activity Detection&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;rdev&lt;/code&gt;: Global keyboard shortcuts and system events&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;rubato&lt;/code&gt;: Audio resampling&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debug Mode&lt;/h3&gt; 
&lt;p&gt;Handy includes an advanced debug mode for development and troubleshooting. Access it by pressing:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;Cmd+Shift+D&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows/Linux&lt;/strong&gt;: &lt;code&gt;Ctrl+Shift+D&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues &amp;amp; Current Limitations&lt;/h2&gt; 
&lt;p&gt;This project is actively being developed and has some &lt;a href="https://github.com/cjpais/Handy/issues"&gt;known issues&lt;/a&gt;. We believe in transparency about the current state:&lt;/p&gt; 
&lt;h3&gt;Platform Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS (both Intel and Apple Silicon)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;x64 Windows&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;x64 Linux&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Requirements/Recommendations&lt;/h3&gt; 
&lt;p&gt;The following are recommendations for running Handy on your own machine. If you don't meet the system requirements, the performance of the application may be degraded. We are working on improving the performance across all kinds of computers and hardware.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For Whisper Models:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: M series Mac, Intel Mac&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Intel, AMD, or NVIDIA GPU&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Intel, AMD, or NVIDIA GPU 
  &lt;ul&gt; 
   &lt;li&gt;Ubuntu 22.04, 24.04&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;For Parakeet V3 Model:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CPU-only operation&lt;/strong&gt; - runs on a wide variety of hardware&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Minimum&lt;/strong&gt;: Intel Skylake (6th gen) or equivalent AMD processors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: ~5x real-time speed on mid-range hardware (tested on i5)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic language detection&lt;/strong&gt; - no manual language selection required&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How to Contribute&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Check existing issues&lt;/strong&gt; at &lt;a href="https://github.com/cjpais/Handy/issues"&gt;github.com/cjpais/Handy/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the repository&lt;/strong&gt; and create a feature branch&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test thoroughly&lt;/strong&gt; on your target platform&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Submit a pull request&lt;/strong&gt; with clear description of changes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join the discussion&lt;/strong&gt; - reach out at &lt;a href="mailto:contact@handy.computer"&gt;contact@handy.computer&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The goal is to create both a useful tool and a foundation for others to build upon—a well-patterned, simple codebase that serves the community.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;div align="center"&gt;
  We're grateful for the support of our sponsors who help make Handy possible: 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;a href="https://wordcab.com"&gt; &lt;img src="https://raw.githubusercontent.com/cjpais/Handy/main/sponsor-images/wordcab.png" alt="Wordcab" width="120" height="120" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://github.com/epicenter-so/epicenter"&gt; &lt;img src="https://raw.githubusercontent.com/cjpais/Handy/main/sponsor-images/epicenter.png" alt="Epicenter" width="120" height="120" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Related Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/cjpais/handy-cli"&gt;Handy CLI&lt;/a&gt;&lt;/strong&gt; - The original Python command-line version&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://handy.computer"&gt;handy.computer&lt;/a&gt;&lt;/strong&gt; - Project website with demos and documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/cjpais/Handy/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Whisper&lt;/strong&gt; by OpenAI for the speech recognition model&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;whisper.cpp and ggml&lt;/strong&gt; for amazing cross-platform whisper inference/acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Silero&lt;/strong&gt; for great lightweight VAD&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tauri&lt;/strong&gt; team for the excellent Rust-based app framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Community contributors&lt;/strong&gt; helping make Handy better&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;"Your search for the right speech-to-text tool can end here—not because Handy is perfect, but because you can make it perfect for you."&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mountain-loop/yaak</title>
      <link>https://github.com/mountain-loop/yaak</link>
      <description>&lt;p&gt;The most intuitive desktop API client. Organize and execute REST, GraphQL, WebSockets, Server Sent Events, and gRPC 🦬&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/JamesIves/github-sponsors-readme-action"&gt; &lt;img width="200px" src="https://github.com/mountain-loop/yaak/raw/main/src-tauri/icons/icon.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt; 💫 Yaak ➟ Desktop API Client 💫 &lt;/h1&gt; 
&lt;p align="center"&gt; A fast, privacy-first API client for REST, GraphQL, SSE, WebSocket, and gRPC – built with Tauri, Rust, and React. &lt;/p&gt; 
&lt;p align="center"&gt; Development is funded by community-purchased &lt;a href="https://yaak.app/pricing"&gt;licenses&lt;/a&gt;. You can also &lt;a href="https://github.com/sponsors/gschier"&gt;become a sponsor&lt;/a&gt; to have your logo appear below. 💖 &lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors-premium --&gt;&lt;a href="https://github.com/MVST-Solutions"&gt;&lt;img src="https://github.com/MVST-Solutions.png" width="80px" alt="User avatar: MVST-Solutions" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/dharsanb"&gt;&lt;img src="https://github.com/dharsanb.png" width="80px" alt="User avatar: dharsanb" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/railwayapp"&gt;&lt;img src="https://github.com/railwayapp.png" width="80px" alt="User avatar: railwayapp" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/caseyamcl"&gt;&lt;img src="https://github.com/caseyamcl.png" width="80px" alt="User avatar: caseyamcl" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/andriyor"&gt;&lt;img src="https://github.com/andriyor.png" width="80px" alt="User avatar: andriyor" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/"&gt;&lt;img src="https://raw.githubusercontent.com/JamesIves/github-sponsors-readme-action/dev/.github/assets/placeholder.png" width="80px" alt="User avatar: " /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
 &lt;!-- sponsors-premium --&gt; &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors-base --&gt;&lt;a href="https://github.com/seanwash"&gt;&lt;img src="https://github.com/seanwash.png" width="50px" alt="User avatar: seanwash" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/jerath"&gt;&lt;img src="https://github.com/jerath.png" width="50px" alt="User avatar: jerath" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/itsa-sh"&gt;&lt;img src="https://github.com/itsa-sh.png" width="50px" alt="User avatar: itsa-sh" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/dmmulroy"&gt;&lt;img src="https://github.com/dmmulroy.png" width="50px" alt="User avatar: dmmulroy" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/timcole"&gt;&lt;img src="https://github.com/timcole.png" width="50px" alt="User avatar: timcole" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/VLZH"&gt;&lt;img src="https://github.com/VLZH.png" width="50px" alt="User avatar: VLZH" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/terasaka2k"&gt;&lt;img src="https://github.com/terasaka2k.png" width="50px" alt="User avatar: terasaka2k" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/majudhu"&gt;&lt;img src="https://github.com/majudhu.png" width="50px" alt="User avatar: majudhu" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/axelrindle"&gt;&lt;img src="https://github.com/axelrindle.png" width="50px" alt="User avatar: axelrindle" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/jirizverina"&gt;&lt;img src="https://github.com/jirizverina.png" width="50px" alt="User avatar: jirizverina" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
 &lt;!-- sponsors-base --&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://yaak.app/static/screenshot.png" alt="Yaak API Client" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Yaak is an offline-first API client designed to stay out of your way while giving you everything you need when you need it. Built with &lt;a href="https://tauri.app"&gt;Tauri&lt;/a&gt;, Rust, and React, it’s fast, lightweight, and private. No telemetry, no VC funding, and no cloud lock-in.&lt;/p&gt; 
&lt;h3&gt;🌐 Work with any API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Import collections from Postman, Insomnia, OpenAPI, Swagger, or Curl.&lt;/li&gt; 
 &lt;li&gt;Send requests via REST, GraphQL, gRPC, WebSocket, or Server-Sent Events.&lt;/li&gt; 
 &lt;li&gt;Filter and inspect responses with JSONPath or XPath.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔐 Stay secure&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use OAuth 2.0, JWT, Basic Auth, or custom plugins for authentication.&lt;/li&gt; 
 &lt;li&gt;Secure sensitive values with encrypted secrets.&lt;/li&gt; 
 &lt;li&gt;Store secrets in your OS keychain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;☁️ Organize &amp;amp; collaborate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Group requests into workspaces and nested folders.&lt;/li&gt; 
 &lt;li&gt;Use environment variables to switch between dev, staging, and prod.&lt;/li&gt; 
 &lt;li&gt;Mirror workspaces to your filesystem for versioning in Git or syncing with Dropbox.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 Extend &amp;amp; customize&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Insert dynamic values like UUIDs or timestamps with template tags.&lt;/li&gt; 
 &lt;li&gt;Pick from built-in themes or build your own.&lt;/li&gt; 
 &lt;li&gt;Create plugins to extend authentication, template tags, or the UI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution Policy&lt;/h2&gt; 
&lt;p&gt;Yaak is open source but only accepting contributions for bug fixes. To get started, visit &lt;a href="https://raw.githubusercontent.com/mountain-loop/yaak/main/DEVELOPMENT.md"&gt;&lt;code&gt;DEVELOPMENT.md&lt;/code&gt;&lt;/a&gt; for tips on setting up your environment.&lt;/p&gt; 
&lt;h2&gt;Useful Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://feedback.yaak.app"&gt;Feedback and Bug Reports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://feedback.yaak.app/help"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yaak.app/alternatives/postman"&gt;Yaak vs Postman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yaak.app/alternatives/bruno"&gt;Yaak vs Bruno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yaak.app/alternatives/insomnia"&gt;Yaak vs Insomnia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>coinbase/x402</title>
      <link>https://github.com/coinbase/x402</link>
      <description>&lt;p&gt;A payments protocol for the internet. Built on HTTP.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;x402 payments protocol&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment."&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware("0xYourAddress", { "/your-endpoint": "$0.01" })
);
// That's it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don't fit into the programmatic nature of the internet. It's time for an open, internet-native form of payments. A payment rail that doesn't have high minimums + % based fee. Payments that are amazing for humans and AI agents.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open standard:&lt;/strong&gt; the x402 protocol will never force reliance on a single party&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP Native:&lt;/strong&gt; x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chain and token agnostic:&lt;/strong&gt; we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in &lt;a href="https://github.com/coinbase/x402/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trust minimizing:&lt;/strong&gt; all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;The x402 ecosystem is growing! Check out our &lt;a href="https://x402.org/ecosystem"&gt;ecosystem page&lt;/a&gt; to see projects building with x402, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client-side integrations&lt;/li&gt; 
 &lt;li&gt;Services and endpoints&lt;/li&gt; 
 &lt;li&gt;Ecosystem infrastructure and tooling&lt;/li&gt; 
 &lt;li&gt;Learning and community resources&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to add your project to the ecosystem? See our &lt;a href="https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem"&gt;demo site README&lt;/a&gt; for detailed instructions on how to submit your project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Roadmap:&lt;/strong&gt; see &lt;a href="https://github.com/coinbase/x402/raw/main/ROADMAP.md"&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Terms:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;resource&lt;/code&gt;: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: An entity wanting to pay for a resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;facilitator server&lt;/code&gt;: A server that facilitates verification and execution of on-chain payments.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource server&lt;/code&gt;: An HTTP server that provides an API or other resource for a client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical Goals:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Permissionless and secure for clients and servers&lt;/li&gt; 
 &lt;li&gt;Gasless for client and resource servers&lt;/li&gt; 
 &lt;li&gt;Minimal integration for the resource server and client (1 line for the server, 1 function for the client)&lt;/li&gt; 
 &lt;li&gt;Ability to trade off speed of response for guarantee of payment&lt;/li&gt; 
 &lt;li&gt;Extensible to different payment flows and chains&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V1 Protocol&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;x402&lt;/code&gt; protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing &lt;code&gt;402 Payment Required&lt;/code&gt; HTTP status code to indicate that a payment is required for access to the resource.&lt;/p&gt; 
&lt;p&gt;It specifies:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A schema for how servers can respond to clients to facilitate payment for a resource (&lt;code&gt;PaymentRequirements&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A standard header &lt;code&gt;X-PAYMENT&lt;/code&gt; that is set by clients paying for resources&lt;/li&gt; 
 &lt;li&gt;A standard schema and encoding method for data in the &lt;code&gt;X-PAYMENT&lt;/code&gt; header&lt;/li&gt; 
 &lt;li&gt;A recommended flow for how payments should be verified and settled by a resource server&lt;/li&gt; 
 &lt;li&gt;A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (&lt;code&gt;facilitator&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A specification for a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;V1 Protocol Sequencing&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coinbase/x402/main/static/x402-protocol-flow.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;The following outlines the flow of a payment using the &lt;code&gt;x402&lt;/code&gt; protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; makes an HTTP request to a &lt;code&gt;resource server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; responds with a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; selects one of the &lt;code&gt;paymentRequirements&lt;/code&gt; returned by the server response and creates a &lt;code&gt;Payment Payload&lt;/code&gt; based on the &lt;code&gt;scheme&lt;/code&gt; of the &lt;code&gt;paymentRequirements&lt;/code&gt; they have selected.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; sends the HTTP request with the &lt;code&gt;X-PAYMENT&lt;/code&gt; header containing the &lt;code&gt;Payment Payload&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; verifies the &lt;code&gt;Payment Payload&lt;/code&gt; is valid either via local verification or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment Requirements&lt;/code&gt; to the &lt;code&gt;/verify&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; performs verification of the object based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt; and returns a &lt;code&gt;Verification Response&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the &lt;code&gt;Verification Response&lt;/code&gt; is valid, the resource server performs the work to fulfill the request. If the &lt;code&gt;Verification Response&lt;/code&gt; is invalid, the resource server returns a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; either settles the payment by interacting with a blockchain directly, or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment PaymentRequirements&lt;/code&gt; to the &lt;code&gt;/settle&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; submits the payment to the blockchain based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; waits for the payment to be confirmed on the blockchain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; returns a &lt;code&gt;Payment Execution Response&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; returns a &lt;code&gt;200 OK&lt;/code&gt; response to the &lt;code&gt;Client&lt;/code&gt; with the resource they requested as the body of the HTTP response, and a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header containing the &lt;code&gt;Settlement Response&lt;/code&gt; as Base64 encoded JSON if the payment was executed successfully.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Type Specifications&lt;/h3&gt; 
&lt;h4&gt;Data types&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Payment Required Response&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;paymentRequirements&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Payment Payload&lt;/code&gt;&lt;/strong&gt; (included as the &lt;code&gt;X-PAYMENT&lt;/code&gt; header in base64 encoded json)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &amp;lt;scheme dependent&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Facilitator Types &amp;amp; Interface&lt;/h4&gt; 
&lt;p&gt;A &lt;code&gt;facilitator server&lt;/code&gt; is a 3rd party service that can be used by a &lt;code&gt;resource server&lt;/code&gt; to verify and settle payments, without the &lt;code&gt;resource server&lt;/code&gt; needing to have access to a blockchain node or wallet.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;POST /verify&lt;/strong&gt;. Verify a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Request body JSON: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  isValid: boolean;
  invalidReason: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;POST /settle&lt;/strong&gt;. Settle a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Request body JSON:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Response:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Whether the payment was successful
  success: boolean;

  // Error message from the facilitator server
  error: string | null;

  // Transaction hash of the settled payment
  txHash: string | null;

  // Network id of the blockchain the payment was settled on
  networkId: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;GET /supported&lt;/strong&gt;. Get supported payment schemes and networks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  kinds: [
    {
      "scheme": string,
      "network": string,
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Schemes&lt;/h3&gt; 
&lt;p&gt;A scheme is a logical way of moving money.&lt;/p&gt; 
&lt;p&gt;Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the &lt;code&gt;x402&lt;/code&gt; protocol is extensible to different ways of settling payments via its &lt;code&gt;scheme&lt;/code&gt; field.&lt;/p&gt; 
&lt;p&gt;Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment. For example &lt;code&gt;exact&lt;/code&gt;, the first scheme shipping as part of the protocol, would have different behavior than &lt;code&gt;upto&lt;/code&gt;. &lt;code&gt;exact&lt;/code&gt; transfers a specific amount (ex: pay $1 to read an article), while a theoretical &lt;code&gt;upto&lt;/code&gt; would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;specs/schemes&lt;/code&gt; for more details on schemes, and see &lt;code&gt;specs/schemes/exact/scheme_exact_evm.md&lt;/code&gt; to see the first proposed scheme for exact payment on EVM chains.&lt;/p&gt; 
&lt;h3&gt;Schemes vs Networks&lt;/h3&gt; 
&lt;p&gt;Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Ethereum is very different from the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Solana).&lt;/p&gt; 
&lt;p&gt;Clients and facilitators must explicitly support different &lt;code&gt;(scheme, network)&lt;/code&gt; pairs in order to be able to create proper payloads and verify / settle payments.&lt;/p&gt; 
&lt;h2&gt;Running example&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt; Node.js v24 or higher&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;From &lt;code&gt;examples/typescript&lt;/code&gt; run &lt;code&gt;pnpm install&lt;/code&gt; and &lt;code&gt;pnpm build&lt;/code&gt; to ensure all dependent packages and examples are setup.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a server, i.e. express, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your server's ethereum address to get paid to into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a client, i.e. axios, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your private key for the account making payments into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You should see activities in the client terminal, which will display a weather report.&lt;/p&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the typescript directory: &lt;code&gt;cd typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;pnpm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the unit tests: &lt;code&gt;pnpm test&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will run the unit tests for the x402 packages.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hoppscotch/hoppscotch</title>
      <link>https://github.com/hoppscotch/hoppscotch</link>
      <description>&lt;p&gt;Open-Source API Development Ecosystem • https://hoppscotch.io • Offline, On-Prem &amp; Cloud • Web, Desktop &amp; CLI • Open-Source Alternative to Postman, Insomnia&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://hoppscotch.io"&gt; &lt;img src="https://avatars.githubusercontent.com/u/56705483" alt="Hoppscotch" height="64" /&gt; &lt;/a&gt; 
 &lt;h3&gt; &lt;b&gt; Hoppscotch &lt;/b&gt; &lt;/h3&gt; 
 &lt;b&gt; Open Source API Development Ecosystem &lt;/b&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen?logo=github" alt="contributions welcome" /&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io"&gt;&lt;img src="https://img.shields.io/website?url=https%3A%2F%2Fhoppscotch.io&amp;amp;logo=hoppscotch" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hoppscotch/hoppscotch/actions"&gt;&lt;img src="https://github.com/hoppscotch/hoppscotch/actions/workflows/tests.yml/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?text=%F0%9F%91%BD%20Hoppscotch%20%E2%80%A2%20Open%20source%20API%20development%20ecosystem%20-%20Helps%20you%20create%20requests%20faster,%20saving%20precious%20time%20on%20development.&amp;amp;url=https://hoppscotch.io&amp;amp;hashtags=hoppscotch&amp;amp;via=hoppscotch_io"&gt;&lt;img src="https://img.shields.io/twitter/url?url=https%3A%2F%2Fhoppscotch.io%2F" alt="Tweet" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
 &lt;p&gt; &lt;sub&gt; Built with ❤︎ by &lt;a href="https://github.com/hoppscotch/hoppscotch/graphs/contributors"&gt; contributors &lt;/a&gt; &lt;/sub&gt; &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;p&gt; &lt;a href="https://hoppscotch.io"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="./packages/hoppscotch-common/public/images/banner-dark.png" /&gt; 
    &lt;source media="(prefers-color-scheme: light)" srcset="./packages/hoppscotch-common/public/images/banner-light.png" /&gt; 
    &lt;img alt="Hoppscotch" src="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/packages/hoppscotch-common/public/images/banner-dark.png" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;We highly recommend you take a look at the &lt;a href="https://docs.hoppscotch.io"&gt;&lt;strong&gt;Hoppscotch Documentation&lt;/strong&gt;&lt;/a&gt; to learn more about the app.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://hoppscotch.io/discord"&gt;&lt;img src="https://img.shields.io/badge/chat-Discord-7289DA?logo=discord" alt="Chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io/telegram"&gt;&lt;img src="https://img.shields.io/badge/chat-Telegram-2CA5E0?logo=telegram" alt="Chat on Telegram" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hoppscotch/hoppscotch/discussions"&gt;&lt;img src="https://img.shields.io/badge/discussions-GitHub-333333?logo=github" alt="Discuss on GitHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;❤️ &lt;strong&gt;Lightweight:&lt;/strong&gt; Crafted with minimalistic UI design.&lt;/p&gt; 
&lt;p&gt;⚡️ &lt;strong&gt;Fast:&lt;/strong&gt; Send requests and get responses in real time.&lt;/p&gt; 
&lt;p&gt;🗄️ &lt;strong&gt;HTTP Methods:&lt;/strong&gt; Request methods define the type of action you are requesting to be performed.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET&lt;/code&gt; - Requests retrieve resource information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST&lt;/code&gt; - The server creates a new entry in a database&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUT&lt;/code&gt; - Updates an existing resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PATCH&lt;/code&gt; - Very similar to &lt;code&gt;PUT&lt;/code&gt; but makes a partial update on a resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DELETE&lt;/code&gt; - Deletes resource or related component&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HEAD&lt;/code&gt; - Retrieve response headers identical to those of a GET request, but without the response body.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CONNECT&lt;/code&gt; - Establishes a tunnel to the server identified by the target resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPTIONS&lt;/code&gt; - Describe the communication options for the target resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TRACE&lt;/code&gt; - Performs a message loop-back test along the path to the target resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;custom&amp;gt;&lt;/code&gt; - Some APIs use custom request methods such as &lt;code&gt;LIST&lt;/code&gt;. Type in your custom methods.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌈 &lt;strong&gt;Theming:&lt;/strong&gt; Customizable combinations for background, foreground, and accent colors — &lt;a href="https://hoppscotch.io/settings"&gt;customize now&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Choose a theme: System preference, Light, Dark, and Black&lt;/li&gt; 
 &lt;li&gt;Choose accent colors: Green, Teal, Blue, Indigo, Purple, Yellow, Orange, Red, and Pink&lt;/li&gt; 
 &lt;li&gt;Distraction-free Zen mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Customized themes are synced with your cloud/local session.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;🔥 &lt;strong&gt;PWA:&lt;/strong&gt; Install as a &lt;a href="https://web.dev/progressive-web-apps"&gt;Progressive Web App&lt;/a&gt; on your device.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Instant loading with Service Workers&lt;/li&gt; 
 &lt;li&gt;Offline support&lt;/li&gt; 
 &lt;li&gt;Low RAM/memory and CPU usage&lt;/li&gt; 
 &lt;li&gt;Add to Home Screen&lt;/li&gt; 
 &lt;li&gt;Desktop PWA&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🚀 &lt;strong&gt;Request:&lt;/strong&gt; Retrieve response from endpoint instantly.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Choose &lt;code&gt;method&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Enter &lt;code&gt;URL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Send&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy/share public "Share URL"&lt;/li&gt; 
 &lt;li&gt;Generate/copy request code snippets for 10+ languages and frameworks&lt;/li&gt; 
 &lt;li&gt;Import &lt;code&gt;cURL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Label requests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🔌 &lt;strong&gt;WebSocket:&lt;/strong&gt; Establish full-duplex communication channels over a single TCP connection.&lt;/p&gt; 
&lt;p&gt;📡 &lt;strong&gt;Server-Sent Events:&lt;/strong&gt; Receive a stream of updates from a server over an HTTP connection without resorting to polling.&lt;/p&gt; 
&lt;p&gt;🌩 &lt;strong&gt;Socket.IO:&lt;/strong&gt; Send and Receive data with the SocketIO server.&lt;/p&gt; 
&lt;p&gt;🦟 &lt;strong&gt;MQTT:&lt;/strong&gt; Subscribe and Publish to topics of an MQTT Broker.&lt;/p&gt; 
&lt;p&gt;🔮 &lt;strong&gt;GraphQL:&lt;/strong&gt; GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set endpoint and get schema&lt;/li&gt; 
 &lt;li&gt;Multi-column docs&lt;/li&gt; 
 &lt;li&gt;Set custom request headers&lt;/li&gt; 
 &lt;li&gt;Query schema&lt;/li&gt; 
 &lt;li&gt;Get query response&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🔐 &lt;strong&gt;Authorization:&lt;/strong&gt; Allows to identify the end-user.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;None&lt;/li&gt; 
 &lt;li&gt;Basic&lt;/li&gt; 
 &lt;li&gt;Bearer Token&lt;/li&gt; 
 &lt;li&gt;OAuth 2.0&lt;/li&gt; 
 &lt;li&gt;OIDC Access Token/PKCE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📢 &lt;strong&gt;Headers:&lt;/strong&gt; Describes the format the body of your request is being sent in.&lt;/p&gt; 
&lt;p&gt;📫 &lt;strong&gt;Parameters:&lt;/strong&gt; Use request parameters to set varying parts in simulated requests.&lt;/p&gt; 
&lt;p&gt;📃 &lt;strong&gt;Request Body:&lt;/strong&gt; Used to send and receive data via the REST API.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set &lt;code&gt;Content Type&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;FormData, JSON, and many more&lt;/li&gt; 
 &lt;li&gt;Toggle between key-value and RAW input parameter list&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📮 &lt;strong&gt;Response:&lt;/strong&gt; Contains the status line, headers, and the message/response body.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the response to the clipboard&lt;/li&gt; 
 &lt;li&gt;Download the response as a file&lt;/li&gt; 
 &lt;li&gt;View response headers&lt;/li&gt; 
 &lt;li&gt;View raw and preview HTML, image, JSON, and XML responses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⏰ &lt;strong&gt;History:&lt;/strong&gt; Request entries are synced with your cloud/local session storage.&lt;/p&gt; 
&lt;p&gt;📁 &lt;strong&gt;Collections:&lt;/strong&gt; Keep your API requests organized with collections and folders. Reuse them with a single click.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unlimited collections, folders, and requests&lt;/li&gt; 
 &lt;li&gt;Nested folders&lt;/li&gt; 
 &lt;li&gt;Export and import as a file or GitHub gist&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Collections are synced with your cloud/local session storage.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;📜 &lt;strong&gt;Pre-Request Scripts:&lt;/strong&gt; Snippets of code associated with a request that is executed before the request is sent.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set environment variables&lt;/li&gt; 
 &lt;li&gt;Include timestamp in the request headers&lt;/li&gt; 
 &lt;li&gt;Send a random alphanumeric string in the URL parameters&lt;/li&gt; 
 &lt;li&gt;Any JavaScript functions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;👨‍👩‍👧‍👦 &lt;strong&gt;Teams:&lt;/strong&gt; Helps you collaborate across your teams to design, develop, and test APIs faster.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create unlimited teams&lt;/li&gt; 
 &lt;li&gt;Create unlimited shared collections&lt;/li&gt; 
 &lt;li&gt;Create unlimited team members&lt;/li&gt; 
 &lt;li&gt;Role-based access control&lt;/li&gt; 
 &lt;li&gt;Cloud sync&lt;/li&gt; 
 &lt;li&gt;Multiple devices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;👥 &lt;strong&gt;Workspaces:&lt;/strong&gt; Organize your personal and team collections environments into workspaces. Easily switch between workspaces to manage multiple projects.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create unlimited workspaces&lt;/li&gt; 
 &lt;li&gt;Switch between personal and team workspaces&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⌨️ &lt;strong&gt;Keyboard Shortcuts:&lt;/strong&gt; Optimized for efficiency.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.hoppscotch.io/documentation/features/shortcuts"&gt;Read our documentation on Keyboard Shortcuts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;🌐 &lt;strong&gt;Proxy:&lt;/strong&gt; Enable Proxy Mode from Settings to access blocked APIs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hide your IP address&lt;/li&gt; 
 &lt;li&gt;Fixes &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;&lt;code&gt;CORS&lt;/code&gt;&lt;/a&gt; (Cross-Origin Resource Sharing) issues&lt;/li&gt; 
 &lt;li&gt;Access APIs served in non-HTTPS (&lt;code&gt;http://&lt;/code&gt;) endpoints&lt;/li&gt; 
 &lt;li&gt;Use your Proxy URL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Official proxy server is hosted by Hoppscotch - &lt;strong&gt;&lt;a href="https://github.com/hoppscotch/proxyscotch"&gt;GitHub&lt;/a&gt;&lt;/strong&gt; - &lt;strong&gt;&lt;a href="https://docs.hoppscotch.io/support/privacy"&gt;Privacy Policy&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;🌎 &lt;strong&gt;i18n:&lt;/strong&gt; Experience the app in your language.&lt;/p&gt; 
&lt;p&gt;Help us to translate Hoppscotch. Please read &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/TRANSLATIONS.md"&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt; for details on our &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CODE_OF_CONDUCT.md"&gt;&lt;code&gt;CODE OF CONDUCT&lt;/code&gt;&lt;/a&gt; and the process for submitting pull requests to us.&lt;/p&gt; 
&lt;p&gt;☁️ &lt;strong&gt;Auth + Sync:&lt;/strong&gt; Sign in and sync your data in real-time across all your devices.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Sign in with:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub&lt;/li&gt; 
 &lt;li&gt;Google&lt;/li&gt; 
 &lt;li&gt;Microsoft&lt;/li&gt; 
 &lt;li&gt;Email&lt;/li&gt; 
 &lt;li&gt;SSO (Single Sign-On)[^EE]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🔄 Synchronize your data:&lt;/strong&gt; Handoff to continue tasks on your other devices.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Workspaces&lt;/li&gt; 
 &lt;li&gt;History&lt;/li&gt; 
 &lt;li&gt;Collections&lt;/li&gt; 
 &lt;li&gt;Environments&lt;/li&gt; 
 &lt;li&gt;Settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✅ &lt;strong&gt;Post-Request Tests:&lt;/strong&gt; Write tests associated with a request that is executed after the request's response.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check the status code as an integer&lt;/li&gt; 
 &lt;li&gt;Filter response headers&lt;/li&gt; 
 &lt;li&gt;Parse the response data&lt;/li&gt; 
 &lt;li&gt;Set environment variables&lt;/li&gt; 
 &lt;li&gt;Write JavaScript code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌱 &lt;strong&gt;Environments:&lt;/strong&gt; Environment variables allow you to store and reuse values in your requests and scripts.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unlimited environments and variables&lt;/li&gt; 
 &lt;li&gt;Initialize through the pre-request script&lt;/li&gt; 
 &lt;li&gt;Export as / import from GitHub gist&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;i&gt;Use-cases&lt;/i&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;By storing a value in a variable, you can reference it throughout your request section&lt;/li&gt; 
  &lt;li&gt;If you need to update the value, you only have to change it in one place&lt;/li&gt; 
  &lt;li&gt;Using variables increases your ability to work efficiently and minimizes the likelihood of error&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;p&gt;🚚 &lt;strong&gt;Bulk Edit:&lt;/strong&gt; Edit key-value pairs in bulk.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Entries are separated by newline&lt;/li&gt; 
 &lt;li&gt;Keys and values are separated by &lt;code&gt;:&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Prepend &lt;code&gt;#&lt;/code&gt; to any row you want to add but keep disabled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🎛️ &lt;strong&gt;Admin dashboard:&lt;/strong&gt; Manage your team and invite members.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Insights&lt;/li&gt; 
 &lt;li&gt;Manage users&lt;/li&gt; 
 &lt;li&gt;Manage teams&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📦 &lt;strong&gt;Add-ons:&lt;/strong&gt; Official add-ons for hoppscotch.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch/tree/main/packages/hoppscotch-cli"&gt;Hoppscotch CLI&lt;/a&gt;&lt;/strong&gt; - Command-line interface for Hoppscotch.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/hoppscotch/proxyscotch"&gt;Proxy&lt;/a&gt;&lt;/strong&gt; - A simple proxy server created for Hoppscotch.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch-extension"&gt;Browser Extensions&lt;/a&gt;&lt;/strong&gt; - Browser extensions that enhance your Hoppscotch experience.&lt;/p&gt; &lt;p&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/hoppscotch"&gt;&lt;img src="https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_16x16.png" alt="Firefox" /&gt; &lt;strong&gt;Firefox&lt;/strong&gt;&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://chrome.google.com/webstore/detail/hoppscotch-extension-for-c/amknoiejhlmhancpahfcfcfhllgkpbld"&gt;&lt;img src="https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_16x16.png" alt="Chrome" /&gt; &lt;strong&gt;Chrome&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Extensions fix &lt;code&gt;CORS&lt;/code&gt; issues.&lt;/strong&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Add-ons are developed and maintained under &lt;strong&gt;&lt;a href="https://github.com/hoppscotch"&gt;Hoppscotch Organization&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For a complete list of features, please read our &lt;a href="https://docs.hoppscotch.io"&gt;documentation&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web : &lt;a href="https://hoppscotch.io"&gt;hoppscotch.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Windows/Linux/macOS : &lt;a href="https://docs.hoppscotch.io/documentation/clients/desktop#download-hoppscotch-desktop-app"&gt;Desktop Apps&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Provide your API endpoint in the URL field&lt;/li&gt; 
 &lt;li&gt;Click "Send" to simulate the request&lt;/li&gt; 
 &lt;li&gt;View the response&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;Follow our &lt;a href="https://docs.hoppscotch.io/documentation/self-host/getting-started"&gt;self-hosting documentation&lt;/a&gt; to get started with the development environment.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please contribute using &lt;a href="https://guides.github.com/introduction/flow"&gt;GitHub Flow&lt;/a&gt;. Create a branch, add commits, and &lt;a href="https://github.com/hoppscotch/hoppscotch/compare"&gt;open a pull request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please read &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING&lt;/code&gt;&lt;/a&gt; for details on our &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CODE_OF_CONDUCT.md"&gt;&lt;code&gt;CODE OF CONDUCT&lt;/code&gt;&lt;/a&gt;, and the process for submitting pull requests to us.&lt;/p&gt; 
&lt;h2&gt;Continuous Integration&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; for continuous integration. Check out our &lt;a href="https://github.com/hoppscotch/hoppscotch/actions"&gt;build workflows&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CHANGELOG.md"&gt;&lt;code&gt;CHANGELOG&lt;/code&gt;&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;This project owes its existence to the collective efforts of all those who contribute — &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CONTRIBUTING.md"&gt;contribute now&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/hoppscotch/hoppscotch/graphs/contributors"&gt; &lt;img src="https://opencollective.com/hoppscotch/contributors.svg?width=840&amp;amp;button=false" alt="Contributors" width="100%" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt; — see the &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;[^EE]: Enterprise edition feature. &lt;a href="https://docs.hoppscotch.io/documentation/self-host/getting-started"&gt;Learn more&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Canner/WrenAI</title>
      <link>https://github.com/Canner/WrenAI</link>
      <description>&lt;p&gt;⚡️ GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered business intelligence in seconds.&lt;/p&gt;&lt;hr&gt;&lt;p align="center" id="top"&gt; &lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=title&amp;amp;utm_campaign=readme"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="./misc/wrenai_logo.png" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/Canner/WrenAI/main/misc/wrenai_logo_white.png" width="300px" /&gt; 
  &lt;/picture&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=title&amp;amp;utm_campaign=readme"&gt;Wren AI - Open-Source GenBI Agent&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=title&amp;amp;utm_campaign=readme"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Follow us on X" href="https://x.com/getwrenai"&gt; &lt;img alt="" src="https://img.shields.io/badge/-@getwrenai-blue?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white&amp;amp;labelColor=gray&amp;amp;logoWidth=20" /&gt; &lt;/a&gt; &lt;a aria-label="Releases" href="https://github.com/canner/WrenAI/releases"&gt; &lt;img alt="" src="https://img.shields.io/github/v/release/canner/WrenAI?logo=github&amp;amp;label=GitHub%20Release&amp;amp;color=blue&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;a aria-label="License" href="https://github.com/Canner/WrenAI/raw/main/LICENSE"&gt; &lt;img alt="" src="https://img.shields.io/github/license/canner/WrenAI?color=blue&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://docs.getwren.ai"&gt; &lt;img src="https://img.shields.io/badge/docs-online-brightgreen?style=for-the-badge" alt="Docs" /&gt; &lt;/a&gt; &lt;a aria-label="Join the community on GitHub" href="https://discord.gg/5DvshJqG8Z"&gt; &lt;img alt="" src="https://img.shields.io/badge/-JOIN%20THE%20COMMUNITY-blue?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=grey&amp;amp;logoWidth=20" /&gt; &lt;/a&gt; &lt;a aria-label="Canner" href="https://cannerdata.com/?utm_source=github&amp;amp;utm_medium=badge&amp;amp;utm_campaign=readme"&gt; &lt;img src="https://img.shields.io/badge/%F0%9F%A7%A1-Made%20by%20Canner-blue?style=for-the-badge" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/9263" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/9263" alt="Canner%2FWrenAI | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚡ GenBI (Generative BI) queries any database in natural language, generates accurate SQL (Text-to-SQL), charts (Text-to-Chart), and AI-powered business intelligence in seconds. ️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; &lt;img width="1920" height="1080" alt="1" src="https://github.com/user-attachments/assets/bba9d37a-33e3-49ab-b7cb-32fd6dddc8d1" /&gt; &lt;/p&gt; 
&lt;h2&gt;😍 Demos&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/f9c1cb34-5a95-4580-8890-ec9644da4160"&gt;https://github.com/user-attachments/assets/f9c1cb34-5a95-4580-8890-ec9644da4160&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/90ad1d35-bb1e-490b-9676-b29863ff090b"&gt;Watch GenBI Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤖 Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;What you get&lt;/th&gt; 
   &lt;th&gt;Why it matters&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Talk to Your Data&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ask in any language → precise SQL &amp;amp; answers&lt;/td&gt; 
   &lt;td&gt;Slash the SQL learning curve﻿&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;GenBI Insights&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;AI-written summaries, charts &amp;amp; reports&lt;/td&gt; 
   &lt;td&gt;Decision-ready context in one click﻿&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Semantic Layer&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;MDL models encode schema, metrics, joins&lt;/td&gt; 
   &lt;td&gt;Keeps LLM outputs accurate &amp;amp; governed﻿&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Embed via API&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Generate queries &amp;amp; charts inside your apps (&lt;a href="https://wrenai.readme.io/reference/cloud-getting-started"&gt;API Docs&lt;/a&gt;)&lt;/td&gt; 
   &lt;td&gt;Build custom agents, SaaS features, chatbots﻿ (&lt;a href="https://huggingface.co/spaces/getWrenAI/wrenai-cloud-api-demo"&gt;Streamlit Live Demo&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;🤩 &lt;a href="https://getwren.ai/genbi?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Learn more about GenBI&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;Using Wren AI is super simple, you can set it up within 3 minutes, and start to interact with your data!&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="1920" height="1080" alt="2" src="https://github.com/user-attachments/assets/6555f539-9ef2-485d-9135-0071741fda96" /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit our &lt;a href="http://docs.getwren.ai/oss/installation?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Install in your local environment&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Visit the &lt;a href="https://docs.getwren.ai/oss/guide/connect/overview?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Usage Guides&lt;/a&gt; to learn more about how to use Wren AI.&lt;/li&gt; 
 &lt;li&gt;Or just start with &lt;a href="https://getwren.ai/?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Wren AI Cloud&lt;/a&gt; our Managed Cloud Service. (&lt;a href="https://docs.getwren.ai/oss/overview/cloud_vs_self_host"&gt;OSS vs. Commercial Plans&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏗️ Architecture&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img width="1011" height="682" alt="wrenai-architecture" src="https://github.com/user-attachments/assets/e99b999f-9912-4fa7-921a-9c86b6b83354" /&gt; &lt;/p&gt; 
&lt;p&gt;👉 &lt;a href="https://getwren.ai/post/how-we-design-our-semantic-engine-for-llms-the-backbone-of-the-semantic-layer-for-llm-architecture?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Learn more about our Design&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔌 Data Sources&lt;/h2&gt; 
&lt;p&gt;If your data source is not listed here, vote for it in our &lt;a href="https://github.com/Canner/WrenAI/discussions/327"&gt;GitHub discussion thread&lt;/a&gt;. It will be a valuable input for us to decide on the next supported data sources.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Athena (Trino)&lt;/li&gt; 
 &lt;li&gt;Redshift&lt;/li&gt; 
 &lt;li&gt;BigQuery&lt;/li&gt; 
 &lt;li&gt;DuckDB&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;li&gt;MySQL&lt;/li&gt; 
 &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
 &lt;li&gt;ClickHouse&lt;/li&gt; 
 &lt;li&gt;Oracle&lt;/li&gt; 
 &lt;li&gt;Trino&lt;/li&gt; 
 &lt;li&gt;Snowflake&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤖 LLM Models&lt;/h2&gt; 
&lt;p&gt;Wren AI supports integration with various Large Language Models (LLMs), including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAI Models&lt;/li&gt; 
 &lt;li&gt;Azure OpenAI Models&lt;/li&gt; 
 &lt;li&gt;DeepSeek Models&lt;/li&gt; 
 &lt;li&gt;Google AI Studio – Gemini Models&lt;/li&gt; 
 &lt;li&gt;Vertex AI Models (Gemini + Anthropic)&lt;/li&gt; 
 &lt;li&gt;Bedrock Models&lt;/li&gt; 
 &lt;li&gt;Anthropic API Models&lt;/li&gt; 
 &lt;li&gt;Groq Models&lt;/li&gt; 
 &lt;li&gt;Ollama Models&lt;/li&gt; 
 &lt;li&gt;Databricks Models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check &lt;a href="https://github.com/Canner/WrenAI/tree/main/wren-ai-service/docs/config_examples"&gt;configuration examples here&lt;/a&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] The performance of Wren AI depends significantly on the capabilities of the LLM you choose. We strongly recommend using the most powerful model available for optimal results. Using less capable models may lead to reduced performance, slower response times, or inaccurate outputs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.getwren.ai/oss/overview/introduction?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Wren AI documentation&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;📪 Keep Posted?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.getwren.ai/blog/?utm_source=github&amp;amp;utm_medium=content&amp;amp;utm_campaign=readme"&gt;Subscribe our blog&lt;/a&gt; and &lt;a href="https://www.linkedin.com/company/wrenai"&gt;Follow our LinkedIn&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🛠️ Contribution&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Star ⭐ the repo to show support (it really helps).&lt;/li&gt; 
 &lt;li&gt;Open an issue for bugs, ideas, or discussions.&lt;/li&gt; 
 &lt;li&gt;Read &lt;a href="https://github.com/Canner/WrenAI/raw/main/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; for setup &amp;amp; PR guidelines.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;⭐️ Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join 1.3k+ developers in our &lt;a href="https://discord.gg/5DvshJqG8Z"&gt;Discord&lt;/a&gt; for real-time help and roadmap previews.&lt;/li&gt; 
 &lt;li&gt;If there are any issues, please visit &lt;a href="https://github.com/Canner/WrenAI/issues"&gt;GitHub Issues&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore our &lt;a href="https://wrenai.notion.site/"&gt;public roadmap&lt;/a&gt; to stay updated on upcoming features and improvements!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please note that our &lt;a href="https://raw.githubusercontent.com/Canner/WrenAI/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Wren AI community channels. Users are &lt;strong&gt;highly encouraged&lt;/strong&gt; to read and adhere to them to avoid repercussions.&lt;/p&gt; 
&lt;h2&gt;🎉 Our Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/canner/wrenAI/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=Canner/WrenAI" /&gt; &lt;/a&gt; 
&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/Canner/WrenAI/main/#top"&gt;⬆️ Back to Top&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chatboxai/chatbox</title>
      <link>https://github.com/chatboxai/chatbox</link>
      <description>&lt;p&gt;User-friendly Desktop Client App for AI Models/LLMs (GPT, Claude, Gemini, Ollama...)&lt;/p&gt;&lt;hr&gt;&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/README-CN.md"&gt;简体中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is the repository for the Chatbox Community Edition, open-sourced under the GPLv3 license.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/chatboxai/chatbox/issues/2266"&gt;Chatbox is going open-source Again!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We regularly sync code from the pro repo to this repo, and vice versa.&lt;/p&gt; 
&lt;h3&gt;Download for Desktop&lt;/h3&gt; 
&lt;table style="width: 100%"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Windows&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center" colspan="2"&gt; &lt;b&gt;MacOS&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Linux&lt;/b&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr style="text-align: center"&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-windows"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/windows.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Setup.exe&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-intel"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Intel&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-aarch"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b style="white-space: nowrap;"&gt;Apple Silicon&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-linux"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/linux.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;AppImage&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Download for iOS/Android&lt;/h3&gt; 
&lt;a href="https://apps.apple.com/app/chatbox-ai/id6471368056" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/app_store.webp" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://play.google.com/store/apps/details?id=xyz.chatboxapp.chatbox" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/google_play.png" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://chatboxai.app/install?download=android_apk" style="margin-right: 4px; display: inline-flex; justify-content: center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/android.png" style="height:28px; display: inline-block" /&gt; .APK &lt;/a&gt; 
&lt;p&gt;For more information: &lt;a href="https://chatboxai.app/"&gt;chatboxai.app&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/icon.png" width="30" /&gt; &lt;span&gt; Chatbox &lt;span style="font-size:8px; font-weight: normal;"&gt;(Community Edition)&lt;/span&gt; &lt;/span&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;em&gt;Your Ultimate AI Copilot on the Desktop. &lt;br /&gt;Chatbox is a desktop client for ChatGPT, Claude and other LLMs, available on Windows, Mac, Linux&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="macOS" src="https://img.shields.io/badge/-macOS-black?style=flat-square&amp;amp;logo=apple&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Windows" src="https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;amp;logo=windows&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Linux" src="https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;amp;logo=linux&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/github/downloads/chatboxai/chatbox/total.svg?style=flat" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/chatbox?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-chatbox" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=429547&amp;amp;theme=light" alt="Chatbox - Better UI &amp;amp; Desktop App for ChatGPT, Claude and other LLMs. | Product Hunt" style="width: 150px; height: 30px;" width="100" height="40" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png" width="400" /&gt; &lt;/a&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png" width="400" /&gt; &lt;/a&gt; 
&lt;!-- &lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_1.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_2.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt; --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Local Data Storage&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💾&lt;/span&gt; Your data remains on your device, ensuring it never gets lost and maintains your privacy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No-Deployment Installation Packages&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📦&lt;/span&gt; Get started quickly with downloadable installation packages. No complex setup necessary!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for Multiple LLM Providers&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⚙&lt;/span&gt; Seamlessly integrate with a variety of cutting-edge language models:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;OpenAI (ChatGPT)&lt;/li&gt; 
   &lt;li&gt;Azure OpenAI&lt;/li&gt; 
   &lt;li&gt;Claude&lt;/li&gt; 
   &lt;li&gt;Google Gemini Pro&lt;/li&gt; 
   &lt;li&gt;Ollama (enable access to local models like llama2, Mistral, Mixtral, codellama, vicuna, yi, and solar)&lt;/li&gt; 
   &lt;li&gt;ChatGLM-6B&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Image Generation with Dall-E-3&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🎨&lt;/span&gt; Create the images of your imagination with Dall-E-3.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhanced Prompting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💬&lt;/span&gt; Advanced prompting features to refine and focus your queries for better responses.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⌨&lt;/span&gt; Stay productive with shortcuts that speed up your workflow.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Markdown, Latex &amp;amp; Code Highlighting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📜&lt;/span&gt; Generate messages with the full power of Markdown and Latex formatting, coupled with syntax highlighting for various programming languages, enhancing readability and presentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Library &amp;amp; Message Quoting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📚&lt;/span&gt; Save and organize prompts for reuse, and quote messages for context in discussions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Streaming Reply&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;▶&lt;/span&gt; Provide rapid responses to your interactions with immediate, progressive replies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ergonomic UI &amp;amp; Dark Theme&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌑&lt;/span&gt; A user-friendly interface with a night mode option for reduced eye strain during extended use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Team Collaboration&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;👥&lt;/span&gt; Collaborate with ease and share OpenAI API resources among your team. &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/team-sharing/README.md"&gt;Learn More&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cross-Platform Availability&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💻&lt;/span&gt; Chatbox is ready for Windows, Mac, Linux users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access Anywhere with the Web Version&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌐&lt;/span&gt; Use the web application on any device with a browser, anywhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;iOS &amp;amp; Android&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;☎&lt;/span&gt; Use the mobile applications that will bring this power to your fingertips on the go.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌎&lt;/span&gt; Catering to a global audience by offering support in multiple languages:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;English&lt;/li&gt; 
   &lt;li&gt;简体中文 (Simplified Chinese)&lt;/li&gt; 
   &lt;li&gt;繁體中文 (Traditional Chinese)&lt;/li&gt; 
   &lt;li&gt;日本語 (Japanese)&lt;/li&gt; 
   &lt;li&gt;한국어 (Korean)&lt;/li&gt; 
   &lt;li&gt;Français (French)&lt;/li&gt; 
   &lt;li&gt;Deutsch (German)&lt;/li&gt; 
   &lt;li&gt;Русский (Russian)&lt;/li&gt; 
   &lt;li&gt;Español (Spanish)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;And More...&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;✨&lt;/span&gt; Constantly enhancing the experience with new features!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why I made Chatbox?&lt;/h2&gt; 
&lt;p&gt;I developed Chatbox initially because I was debugging some prompts and found myself in need of a simple and easy-to-use prompt and API debugging tool. I thought there might be more people who needed such a tool, so I open-sourced it.&lt;/p&gt; 
&lt;p&gt;At first, I didn't know that it would be so popular. I listened to the feedback from the open-source community and continued to develop and improve it. Now, it has become a very useful AI desktop application. There are many users who love Chatbox, and they not only use it for developing and debugging prompts, but also for daily chatting, and even to do some more interesting things like using well-designed prompts to make AI play various professional roles to assist them in everyday work...&lt;/p&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Any form of contribution is welcome, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Submitting issues&lt;/li&gt; 
 &lt;li&gt;Submitting pull requests&lt;/li&gt; 
 &lt;li&gt;Submitting feature requests&lt;/li&gt; 
 &lt;li&gt;Submitting bug reports&lt;/li&gt; 
 &lt;li&gt;Submitting documentation revisions&lt;/li&gt; 
 &lt;li&gt;Submitting translations&lt;/li&gt; 
 &lt;li&gt;Submitting any other forms of contribution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (v20.x – v22.x)&lt;/li&gt; 
 &lt;li&gt;npm (required – pnpm is not supported)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository from Github&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/chatboxai/chatbox.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install the required dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Start the application (in development mode)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Build the application, package the installer for current platform&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Build the application, package the installer for all platforms&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package:all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#chatboxai/chatbox&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=chatboxai/chatbox&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://x.com/ChatboxAI_HQ"&gt;Twitter&lt;/a&gt; | &lt;a href="mailto:hi@chatboxai.com"&gt;Email&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vitest-dev/vitest</title>
      <link>https://github.com/vitest-dev/vitest</link>
      <description>&lt;p&gt;Next generation testing framework powered by Vite.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vitest.dev"&gt; &lt;img src="https://user-images.githubusercontent.com/11247099/145112184-a9ff6727-661c-439d-9ada-963124a281f7.png" height="150" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt; Vitest &lt;/h1&gt; 
&lt;p align="center"&gt; Next generation testing framework powered by Vite. &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/vitest"&gt;&lt;img src="https://img.shields.io/npm/v/vitest?color=729B1B&amp;amp;label=" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://chat.vitest.dev"&gt;&lt;b&gt;Get involved!&lt;/b&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://vitest.dev"&gt;Documentation&lt;/a&gt; | &lt;a href="https://vitest.dev/guide/"&gt;Getting Started&lt;/a&gt; | &lt;a href="https://vitest.dev/guide/#examples"&gt;Examples&lt;/a&gt; | &lt;a href="https://vitest.dev/guide/why"&gt;Why Vitest?&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://cn.vitest.dev"&gt;中文文档&lt;/a&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;/h4&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;'s config, transformers, resolvers, and plugins. Use the same setup from your app!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jestjs.io/docs/snapshot-testing"&gt;Jest Snapshot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.chaijs.com/"&gt;Chai&lt;/a&gt; built-in for assertions, with &lt;a href="https://jestjs.io/docs/expect"&gt;Jest expect&lt;/a&gt; compatible APIs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitest.dev/guide/features.html#watch-mode"&gt;Smart &amp;amp; instant watch mode&lt;/a&gt;, like HMR for tests!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitest.dev/guide/features.html#coverage"&gt;Native code coverage&lt;/a&gt; via &lt;a href="https://v8.dev/blog/javascript-code-coverage"&gt;&lt;code&gt;v8&lt;/code&gt;&lt;/a&gt; or &lt;a href="https://istanbul.js.org/"&gt;&lt;code&gt;istanbul&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tinylibs/tinyspy"&gt;Tinyspy&lt;/a&gt; built-in for mocking, stubbing, and spies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsdom/jsdom"&gt;JSDOM&lt;/a&gt; and &lt;a href="https://github.com/capricorn86/happy-dom"&gt;happy-dom&lt;/a&gt; for DOM and browser API mocking&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitest.dev/guide/browser/"&gt;Browser Mode&lt;/a&gt; for running component tests in the browser&lt;/li&gt; 
 &lt;li&gt;Components testing (&lt;a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/vue"&gt;Vue&lt;/a&gt;, &lt;a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/react"&gt;React&lt;/a&gt;, &lt;a href="https://github.com/vitest-tests/browser-examples/tree/main/examples/svelte"&gt;Svelte&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/vitest-dev/vitest/main/examples/lit"&gt;Lit&lt;/a&gt;, &lt;a href="https://github.com/marko-js/examples/tree/master/examples/library-ts"&gt;Marko&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Benchmarking support with &lt;a href="https://github.com/tinylibs/tinybench"&gt;Tinybench&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitest.dev/guide/projects"&gt;Projects&lt;/a&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmkal/expect-type"&gt;expect-type&lt;/a&gt; for type-level testing&lt;/li&gt; 
 &lt;li&gt;ESM first, top level await&lt;/li&gt; 
 &lt;li&gt;Out-of-box TypeScript / JSX support&lt;/li&gt; 
 &lt;li&gt;Filtering, timeouts, concurrent for suite and tests&lt;/li&gt; 
 &lt;li&gt;Sharding support&lt;/li&gt; 
 &lt;li&gt;Reporting Uncaught Errors&lt;/li&gt; 
 &lt;li&gt;Run your tests in the browser natively&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Vitest requires Vite &amp;gt;=v6.0.0 and Node &amp;gt;=v20.0.0&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { assert, describe, expect, it } from 'vitest'

describe('suite name', () =&amp;gt; {
  it('foo', () =&amp;gt; {
    expect(1 + 1).toEqual(2)
    expect(true).to.be.true
  })

  it('bar', () =&amp;gt; {
    assert.equal(Math.sqrt(4), 2)
  })

  it('snapshot', () =&amp;gt; {
    expect({ foo: 'bar' }).toMatchSnapshot()
  })
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ npx vitest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;h3&gt;Vladimir Sponsors&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://cdn.jsdelivr.net/gh/sheremet-va/static/sponsors.svg"&gt; &lt;img src="https://cdn.jsdelivr.net/gh/sheremet-va/static/sponsors.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Anthony Fu Sponsors&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg"&gt; &lt;img src="https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Patak Sponsors&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://cdn.jsdelivr.net/gh/patak-dev/static/sponsors.svg"&gt; &lt;img src="https://cdn.jsdelivr.net/gh/patak-dev/static/sponsors.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Thanks to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jestjs.io/"&gt;The Jest team and community&lt;/a&gt; for creating a delightful testing API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukeed"&gt;@lukeed&lt;/a&gt; for the work on &lt;a href="https://github.com/lukeed/uvu"&gt;uvu&lt;/a&gt; where we are inspired a lot from.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pi0"&gt;@pi0&lt;/a&gt; for the idea and implementation of using Vite to transform and bundle the server code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;The Vite team&lt;/a&gt; for brainstorming the initial idea.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/patak-dev"&gt;@patak-dev&lt;/a&gt; for the awesome package name!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/vitest-dev/vitest/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/vitest-dev/vitest/main/LICENSE"&gt;MIT&lt;/a&gt; License © 2021-Present VoidZero Inc. and Vitest contributors&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chartdb/chartdb</title>
      <link>https://github.com/chartdb/chartdb</link>
      <description>&lt;p&gt;Database diagrams editor that allows you to visualize and design your DB with a single query.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://chartdb.io#gh-light-mode-only"&gt; &lt;img src="https://github.com/chartdb/chartdb/raw/main/src/assets/logo-light.png" width="400" height="70" alt="ChartDB" /&gt; &lt;/a&gt; &lt;a href="https://chartdb.io##gh-dark-mode-only"&gt; &lt;img src="https://github.com/chartdb/chartdb/raw/main/src/assets/logo-dark.png" width="400" height="70" alt="ChartDB" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;b&gt;Open-source database diagrams editor&lt;/b&gt; &lt;br /&gt; &lt;b&gt;No installations • No Database password required.&lt;/b&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt; &lt;a href="https://discord.gg/QeFwyWSKwC"&gt;Community&lt;/a&gt; • &lt;a href="https://www.chartdb.io?ref=github_readme"&gt;Website&lt;/a&gt; • &lt;a href="https://chartdb.io/templates?ref=github_readme"&gt;Examples&lt;/a&gt; • &lt;a href="https://app.chartdb.io?ref=github_readme"&gt;Demo&lt;/a&gt; &lt;/h3&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://github.com/chartdb/chartdb?tab=AGPL-3.0-1-ov-file#readme"&gt; &lt;img src="https://img.shields.io/github/license/chartdb/chartdb?color=blue" alt="ChartDB is released under the AGPL license." /&gt; &lt;/a&gt; &lt;a href="https://github.com/chartdb/chartdb/raw/main/CONTRIBUTING.md"&gt; &lt;img src="https://img.shields.io/badge/PRs-Welcome-brightgreen" alt="PRs welcome!" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/QeFwyWSKwC"&gt; &lt;img src="https://img.shields.io/discord/1277047413705670678?color=5865F2&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord community channel" /&gt; &lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=jonathanfishner"&gt; &lt;img src="https://img.shields.io/twitter/follow/jonathanfishner?style=social" /&gt; &lt;/a&gt; &lt;/h4&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img width="700px" src="https://raw.githubusercontent.com/chartdb/chartdb/main/public/chartdb.png" /&gt; &lt;/p&gt; 
&lt;h3&gt;🎉 ChartDB&lt;/h3&gt; 
&lt;p&gt;ChartDB is a powerful, web-based database diagramming editor. Instantly visualize your database schema with a single &lt;strong&gt;"Smart Query."&lt;/strong&gt; Customize diagrams, export SQL scripts, and access all features—no account required. Experience seamless database design here.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;What it does&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Instant Schema Import&lt;/strong&gt; Run a single query to instantly retrieve your database schema as JSON. This makes it incredibly fast to visualize your database schema, whether for documentation, team discussions, or simply understanding your data better.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI-Powered Export for Easy Migration&lt;/strong&gt; Our AI-driven export feature allows you to generate the DDL script in the dialect of your choice. Whether you're migrating from MySQL to PostgreSQL or from SQLite to MariaDB, ChartDB simplifies the process by providing the necessary scripts tailored to your target database.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interactive Editing&lt;/strong&gt; Fine-tune your database schema using our intuitive editor. Easily make adjustments or annotations to better visualize complex structures.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Status&lt;/h3&gt; 
&lt;p&gt;ChartDB is currently in Public Beta. Star and watch this repository to get notified of updates.&lt;/p&gt; 
&lt;h3&gt;Supported Databases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ PostgreSQL (&lt;img src="https://raw.githubusercontent.com/chartdb/chartdb/main/src/assets/postgresql_logo_2.png" width="15" /&gt; + &lt;img src="https://raw.githubusercontent.com/chartdb/chartdb/main/src/assets/supabase.png" alt="Supabase" width="15" /&gt; + &lt;img src="https://raw.githubusercontent.com/chartdb/chartdb/main/src/assets/timescale.png" alt="Timescale" width="15" /&gt; )&lt;/li&gt; 
 &lt;li&gt;✅ MySQL&lt;/li&gt; 
 &lt;li&gt;✅ SQL Server&lt;/li&gt; 
 &lt;li&gt;✅ MariaDB&lt;/li&gt; 
 &lt;li&gt;✅ SQLite (&lt;img src="https://raw.githubusercontent.com/chartdb/chartdb/main/src/assets/sqlite_logo_2.png" width="15" /&gt; + &lt;img src="https://raw.githubusercontent.com/chartdb/chartdb/main/src/assets/cloudflare_d1.png" alt="Cloudflare D1" width="15" /&gt; Cloudflare D1)&lt;/li&gt; 
 &lt;li&gt;✅ CockroachDB&lt;/li&gt; 
 &lt;li&gt;✅ ClickHouse&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Use the &lt;a href="https://app.chartdb.io?ref=github_readme_2"&gt;cloud version&lt;/a&gt; or deploy locally:&lt;/p&gt; 
&lt;h3&gt;How To Use&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or like this if you want to have AI capabilities:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
VITE_OPENAI_API_KEY=&amp;lt;YOUR_OPEN_AI_KEY&amp;gt; npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run the Docker Container&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -e OPENAI_API_KEY=&amp;lt;YOUR_OPEN_AI_KEY&amp;gt; -p 8080:80 ghcr.io/chartdb/chartdb:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Build and Run locally&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t chartdb .
docker run -e OPENAI_API_KEY=&amp;lt;YOUR_OPEN_AI_KEY&amp;gt; -p 8080:80 chartdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Using Custom Inference Server&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build
docker build \
  --build-arg VITE_OPENAI_API_ENDPOINT=&amp;lt;YOUR_ENDPOINT&amp;gt; \
  --build-arg VITE_LLM_MODEL_NAME=&amp;lt;YOUR_MODEL_NAME&amp;gt; \
  -t chartdb .

# Run
docker run \
  -e OPENAI_API_ENDPOINT=&amp;lt;YOUR_ENDPOINT&amp;gt; \
  -e LLM_MODEL_NAME=&amp;lt;YOUR_MODEL_NAME&amp;gt; \
  -p 8080:80 chartdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Privacy Note:&lt;/strong&gt; ChartDB includes privacy-focused analytics via Fathom Analytics. You can disable this by adding &lt;code&gt;-e DISABLE_ANALYTICS=true&lt;/code&gt; to the run command or &lt;code&gt;--build-arg VITE_DISABLE_ANALYTICS=true&lt;/code&gt; when building.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; You must configure either Option 1 (OpenAI API key) OR Option 2 (Custom endpoint and model name) for AI capabilities to work. Do not mix the two options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Open your browser and navigate to &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Example configuration for a local vLLM server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;VITE_OPENAI_API_ENDPOINT=http://localhost:8000/v1
VITE_LLM_MODEL_NAME=Qwen/Qwen2.5-32B-Instruct-AWQ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Try it on our website&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to &lt;a href="https://chartdb.io?ref=github_readme_2"&gt;ChartDB.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click "Go to app"&lt;/li&gt; 
 &lt;li&gt;Choose the database that you are using.&lt;/li&gt; 
 &lt;li&gt;Take the magic query and run it in your database.&lt;/li&gt; 
 &lt;li&gt;Copy and paste the resulting JSON set into ChartDB.&lt;/li&gt; 
 &lt;li&gt;Enjoy Viewing &amp;amp; Editing!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;💚 Community &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/QeFwyWSKwC"&gt;Discord&lt;/a&gt; (For live discussion with the community and the ChartDB team)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chartdb/chartdb/issues"&gt;GitHub Issues&lt;/a&gt; (For any bugs and errors you encounter using ChartDB)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/intent/follow?screen_name=jonathanfishner"&gt;Twitter&lt;/a&gt; (Get news fast)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome community contributions, big or small, and are here to guide you along the way. Message us in the &lt;a href="https://discord.gg/QeFwyWSKwC"&gt;ChartDB Community Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more information on how to contribute, please see our &lt;a href="https://raw.githubusercontent.com/chartdb/chartdb/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project is released with a &lt;a href="https://raw.githubusercontent.com/chartdb/chartdb/main/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt;. By participating in this project, you agree to follow its terms.&lt;/p&gt; 
&lt;p&gt;Thank you for helping us make ChartDB better for everyone &lt;span&gt;❤️&lt;/span&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;ChartDB is licensed under the &lt;a href="https://raw.githubusercontent.com/chartdb/chartdb/main/LICENSE"&gt;GNU Affero General Public License v3.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wevm/viem</title>
      <link>https://github.com/wevm/viem</link>
      <description>&lt;p&gt;TypeScript Interface for Ethereum&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://viem.sh"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/viem/main/.github/gh-logo-dark.svg" /&gt; 
   &lt;img alt="viem logo" src="https://raw.githubusercontent.com/wevm/viem/main/.github/gh-logo-light.svg?sanitize=true" width="auto" height="60" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; TypeScript Interface for Ethereum &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/viem"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://img.shields.io/npm/v/viem?colorA=21262d&amp;amp;colorB=21262d&amp;amp;style=flat" /&gt; 
   &lt;img src="https://img.shields.io/npm/v/viem?colorA=f6f8fa&amp;amp;colorB=f6f8fa&amp;amp;style=flat" alt="Version" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://app.codecov.io/gh/wevm/viem"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://img.shields.io/codecov/c/github/wevm/viem?colorA=21262d&amp;amp;colorB=21262d&amp;amp;style=flat" /&gt; 
   &lt;img src="https://img.shields.io/codecov/c/github/wevm/viem?colorA=f6f8fa&amp;amp;colorB=f6f8fa&amp;amp;style=flat" alt="Code coverage" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://github.com/wevm/viem/raw/main/LICENSE"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://img.shields.io/npm/l/viem?colorA=21262d&amp;amp;colorB=21262d&amp;amp;style=flat" /&gt; 
   &lt;img src="https://img.shields.io/npm/l/viem?colorA=f6f8fa&amp;amp;colorB=f6f8fa&amp;amp;style=flat" alt="MIT License" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://www.npmjs.com/package/viem"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://img.shields.io/npm/dm/viem?colorA=21262d&amp;amp;colorB=21262d&amp;amp;style=flat" /&gt; 
   &lt;img src="https://img.shields.io/npm/dm/viem?colorA=f6f8fa&amp;amp;colorB=f6f8fa&amp;amp;style=flat" alt="Downloads per month" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a href="https://bestofjs.org/projects/viem"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://img.shields.io/endpoint?colorA=21262d&amp;amp;colorB=21262d&amp;amp;style=flat&amp;amp;url=https://bestofjs-serverless.now.sh/api/project-badge?fullName=wevm%2Fviem%26since=daily" /&gt; 
   &lt;img src="https://img.shields.io/endpoint?colorA=f6f8fa&amp;amp;colorB=f6f8fa&amp;amp;style=flat&amp;amp;url=https://bestofjs-serverless.now.sh/api/project-badge?fullName=wevm%2Fviem%26since=daily" alt="Best of JS" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Abstractions over the &lt;a href="https://ethereum.org/en/developers/docs/apis/json-rpc/"&gt;JSON-RPC API&lt;/a&gt; to make your life easier&lt;/li&gt; 
 &lt;li&gt;First-class APIs for interacting with &lt;a href="https://ethereum.org/en/glossary/#smart-contract"&gt;Smart Contracts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Language closely aligned to official &lt;a href="https://ethereum.org/en/glossary/"&gt;Ethereum terminology&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Import your Browser Extension, WalletConnect or Private Key Wallet&lt;/li&gt; 
 &lt;li&gt;Browser native &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt"&gt;BigInt&lt;/a&gt;, instead of large BigNumber libraries&lt;/li&gt; 
 &lt;li&gt;Utilities for working with &lt;a href="https://ethereum.org/en/glossary/#abi"&gt;ABIs&lt;/a&gt; (encoding/decoding/inspection)&lt;/li&gt; 
 &lt;li&gt;TypeScript ready (&lt;a href="https://viem.sh/docs/typescript"&gt;infer types&lt;/a&gt; from ABIs and EIP-712 Typed Data)&lt;/li&gt; 
 &lt;li&gt;First-class support for &lt;a href="https://book.getfoundry.sh/"&gt;Anvil&lt;/a&gt;, &lt;a href="https://hardhat.org/"&gt;Hardhat&lt;/a&gt; &amp;amp; &lt;a href="https://trufflesuite.com/ganache/"&gt;Ganache&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Test suite running against &lt;a href="https://ethereum.org/en/glossary/#fork"&gt;forked&lt;/a&gt; Ethereum network&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;... and a lot more.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// 1. Import modules.
import { createPublicClient, http } from 'viem';
import { mainnet } from 'viem/chains';

// 2. Set up your client with desired chain &amp;amp; transport.
const client = createPublicClient({
  chain: mainnet,
  transport: http(),
});

// 3. Consume an action!
const blockNumber = await client.getBlockNumber();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://viem.sh/docs/getting-started"&gt;Head to the documentation&lt;/a&gt; to read and learn more about viem.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Check out the following places for more viem-related content:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow &lt;a href="https://twitter.com/wevm_dev"&gt;@wevm_dev&lt;/a&gt;, &lt;a href="https://twitter.com/_jxom"&gt;@_jxom&lt;/a&gt;, and &lt;a href="https://twitter.com/awkweb"&gt;@awkweb&lt;/a&gt; on Twitter for project updates&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href="https://github.com/wevm/viem/discussions"&gt;discussions on GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wevm/viem/discussions/104"&gt;Share your project/organization&lt;/a&gt; that uses viem&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sponsors/wevm?metadata_campaign=docs_support"&gt;GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wagmi.sh/gitcoin"&gt;Gitcoin Grant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://etherscan.io/name-lookup-search?id=wevm.eth"&gt;wevm.eth&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;a href="https://paradigm.xyz"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/paradigm-dark.svg" /&gt; 
  &lt;img alt="paradigm logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/paradigm-light.svg?sanitize=true" width="auto" height="70" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://ithaca.xyz"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/ithaca-dark.svg" /&gt; 
  &lt;img alt="ithaca logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/ithaca-light.svg?sanitize=true" width="auto" height="70" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;a href="https://twitter.com/family"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/family-dark.svg" /&gt; 
  &lt;img alt="family logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/family-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://twitter.com/context"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/context-dark.svg" /&gt; 
  &lt;img alt="context logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/context-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://walletconnect.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/walletconnect-dark.svg" /&gt; 
  &lt;img alt="WalletConnect logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/walletconnect-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://twitter.com/prtyDAO"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/partydao-dark.svg" /&gt; 
  &lt;img alt="PartyDAO logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/partydao-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://dynamic.xyz"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/dynamic-dark.svg" /&gt; 
  &lt;img alt="Dynamic logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/dynamic-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://sushi.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/sushi-dark.svg" /&gt; 
  &lt;img alt="Sushi logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/sushi-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://stripe.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/stripe-dark.svg" /&gt; 
  &lt;img alt="Stripe logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/stripe-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://privy.io"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/privy-dark.svg" /&gt; 
  &lt;img alt="Privy logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/privy-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://pancakeswap.finance"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/pancake-dark.svg" /&gt; 
  &lt;img alt="pancake logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/pancake-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://celo.org"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/celo-dark.svg" /&gt; 
  &lt;img alt="celo logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/celo-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://rainbow.me"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/rainbow-dark.svg" /&gt; 
  &lt;img alt="rainbow logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/rainbow-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://pimlico.io"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/pimlico-dark.svg" /&gt; 
  &lt;img alt="pimlico logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/pimlico-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://zora.co"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/zora-dark.svg" /&gt; 
  &lt;img alt="zora logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/zora-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://lattice.xyz"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/lattice-dark.svg" /&gt; 
  &lt;img alt="lattice logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/lattice-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://twitter.com/supafinance"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/supa-dark.svg" /&gt; 
  &lt;img alt="supa logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/supa-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://zksync.io"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/zksync-dark.svg" /&gt; 
  &lt;img alt="ZKsync logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/zksync-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://syndicate.io"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/syndicate-dark.svg" /&gt; 
  &lt;img alt="syndicate logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/syndicate-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://reservoir.tools"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/reservoir-dark.svg" /&gt; 
  &lt;img alt="reservoir logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/reservoir-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://linea.build"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/linea-dark.svg" /&gt; 
  &lt;img alt="linea logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/linea-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://uniswap.org"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/uniswap-dark.svg" /&gt; 
  &lt;img alt="uniswap logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/uniswap-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://biconomy.io"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/b0276d897be98a4c94ad1d1c72ce99a1020eeb58/content/sponsors/biconomy-dark.svg" /&gt; 
  &lt;img alt="biconomy logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/biconomy-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://thirdweb.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/thirdweb-dark.svg" /&gt; 
  &lt;img alt="thirdweb logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/thirdweb-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://polymarket.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/polymarket-dark.svg" /&gt; 
  &lt;img alt="polymarket logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/polymarket-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://routescan.io"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/routescan-dark.svg" /&gt; 
  &lt;img alt="routescan logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/routescan-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://sequence.xyz"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/sequence-dark.svg" /&gt; 
  &lt;img alt="sequence logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/sequence-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;a href="https://gemini.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/gemini-dark.svg" /&gt; 
  &lt;img alt="gemini logo" src="https://raw.githubusercontent.com/wevm/.github/main/content/sponsors/gemini-light.svg?sanitize=true" width="auto" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you're interested in contributing, please read the &lt;a href="https://raw.githubusercontent.com/wevm/viem/main/.github/CONTRIBUTING.md"&gt;contributing docs&lt;/a&gt; &lt;strong&gt;before submitting a pull request&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jxom"&gt;@jxom&lt;/a&gt; (jxom.eth, &lt;a href="https://twitter.com/_jxom"&gt;Twitter&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmm"&gt;@tmm&lt;/a&gt; (awkweb.eth, &lt;a href="https://twitter.com/awkweb"&gt;Twitter&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wevm/viem/main/LICENSE"&gt;MIT&lt;/a&gt; License&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;a href="https://vercel.com/?utm_source=wevm&amp;amp;utm_campaign=oss"&gt; &lt;img src="https://www.datocms-assets.com/31049/1618983297-powered-by-vercel.svg?sanitize=true" alt="Powered by Vercel" height="35" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>slidevjs/slidev</title>
      <link>https://github.com/slidevjs/slidev</link>
      <description>&lt;p&gt;Presentation Slides for Developers&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://sli.dev" target="_blank"&gt; &lt;img src="https://sli.dev/logo-title.png" alt="Slidev" height="250" width="250" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Presentation &lt;b&gt;slide&lt;/b&gt;s for &lt;b&gt;dev&lt;/b&gt;elopers 🧑‍💻👩‍💻👨‍💻 &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/@slidev/cli" target="__blank"&gt;&lt;img src="https://img.shields.io/npm/v/@slidev/cli?color=2B90B6&amp;amp;label=" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@slidev/cli" target="__blank"&gt;&lt;img alt="NPM Downloads" src="https://img.shields.io/npm/dm/@slidev/cli?color=349dbe&amp;amp;label=" /&gt;&lt;/a&gt; &lt;a href="https://sli.dev/" target="__blank"&gt;&lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=docs%20%26%20demos&amp;amp;color=45b8cd" alt="Docs &amp;amp; Demos" /&gt;&lt;/a&gt; &lt;a href="https://sli.dev/resources/theme-gallery" target="__blank"&gt;&lt;img src="https://img.shields.io/static/v1?label=&amp;amp;message=themes&amp;amp;color=4ec5d4" alt="Themes" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/slidevjs/slidev/stargazers" target="__blank"&gt;&lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/slidevjs/slidev?style=social" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://twitter.com/antfu7/status/1389604687502995457"&gt;Video Preview&lt;/a&gt; | &lt;a href="https://sli.dev"&gt;Documentation&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align="center"&gt; &lt;img width="2000" height="0" alt="" aria-hidden /&gt;&lt;br /&gt; &lt;sub&gt;Made possible by my &lt;a href="https://github.com/sponsors/antfu"&gt;Sponsor Program 💖&lt;/a&gt;&lt;/sub&gt;&lt;br /&gt; &lt;img width="2000" height="0" alt="" aria-hidden /&gt; &lt;/td&gt; 
   &lt;/tr&gt;
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📝 &lt;a href="https://sli.dev/guide/syntax"&gt;&lt;strong&gt;Markdown-based&lt;/strong&gt;&lt;/a&gt; - focus on content and use your favorite editor&lt;/li&gt; 
 &lt;li&gt;🧑‍💻 &lt;a href="https://sli.dev/guide/syntax#code-blocks"&gt;&lt;strong&gt;Developer Friendly&lt;/strong&gt;&lt;/a&gt; - built-in code highlighting, live coding, etc.&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;a href="https://sli.dev/resources/theme-gallery"&gt;&lt;strong&gt;Themable&lt;/strong&gt;&lt;/a&gt; - theme can be shared and used with npm packages&lt;/li&gt; 
 &lt;li&gt;🌈 &lt;a href="https://sli.dev/guide/syntax#embedded-styles"&gt;&lt;strong&gt;Stylish&lt;/strong&gt;&lt;/a&gt; - on-demand utilities via &lt;a href="https://github.com/unocss/unocss"&gt;UnoCSS&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🤹 &lt;a href="https://sli.dev/custom/directory-structure#components"&gt;&lt;strong&gt;Interactive&lt;/strong&gt;&lt;/a&gt; - embedding Vue components seamlessly&lt;/li&gt; 
 &lt;li&gt;🎙 &lt;a href="https://sli.dev/guide/ui#presenter-mode"&gt;&lt;strong&gt;Presenter Mode&lt;/strong&gt;&lt;/a&gt; - use another window, or even your phone to control your slides&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;a href="https://sli.dev/features/drawing"&gt;&lt;strong&gt;Drawing&lt;/strong&gt;&lt;/a&gt; - draw and annotate on your slides&lt;/li&gt; 
 &lt;li&gt;🧮 &lt;a href="https://sli.dev/features/latex"&gt;&lt;strong&gt;LaTeX&lt;/strong&gt;&lt;/a&gt; - built-in LaTeX math equations support&lt;/li&gt; 
 &lt;li&gt;📰 &lt;a href="https://sli.dev/guide/syntax#diagrams"&gt;&lt;strong&gt;Diagrams&lt;/strong&gt;&lt;/a&gt; - creates diagrams using textual descriptions with &lt;a href="https://mermaid.js.org/"&gt;Mermaid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌟 &lt;a href="https://sli.dev/features/icons"&gt;&lt;strong&gt;Icons&lt;/strong&gt;&lt;/a&gt; - access to icons from any icon set directly&lt;/li&gt; 
 &lt;li&gt;💻 &lt;a href="https://sli.dev/guide/index#editor"&gt;&lt;strong&gt;Editor&lt;/strong&gt;&lt;/a&gt; - integrated editor, or the &lt;a href="https://sli.dev/features/vscode-extension"&gt;VSCode extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://sli.dev/features/recording"&gt;&lt;strong&gt;Recording&lt;/strong&gt;&lt;/a&gt; - built-in recording and camera view&lt;/li&gt; 
 &lt;li&gt;📤 &lt;a href="https://sli.dev/guide/exporting"&gt;&lt;strong&gt;Portable&lt;/strong&gt;&lt;/a&gt; - export into PDF, PNGs, or PPTX&lt;/li&gt; 
 &lt;li&gt;⚡️ &lt;a href="https://vitejs.dev"&gt;&lt;strong&gt;Fast&lt;/strong&gt;&lt;/a&gt; - instant reloading powered by &lt;a href="https://vitejs.dev"&gt;Vite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🛠 &lt;a href="https://sli.dev/custom/"&gt;&lt;strong&gt;Hackable&lt;/strong&gt;&lt;/a&gt; - using Vite plugins, Vue components, or any npm packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Try it Online ⚡️&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://sli.dev/new"&gt;sli.dev/new&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://sli.dev/new"&gt;&lt;img src="https://developer.stackblitz.com/img/open_in_stackblitz.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Init Project Locally&lt;/h3&gt; 
&lt;p&gt;Install &lt;a href="https://nodejs.org/"&gt;Node.js &amp;gt;=18&lt;/a&gt; and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm init slidev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Documentation: &lt;strong&gt;&lt;a href="https://sli.dev"&gt;English&lt;/a&gt;&lt;/strong&gt; | &lt;a href="https://cn.sli.dev"&gt;中文文档&lt;/a&gt; | &lt;a href="https://fr.sli.dev"&gt;Français&lt;/a&gt; | &lt;a href="https://es.sli.dev"&gt;Español&lt;/a&gt; | &lt;a href="https://ru.sli.dev"&gt;Русский&lt;/a&gt; | &lt;a href="https://br.sli.dev"&gt;Português-BR&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Discord: &lt;a href="https://chat.sli.dev"&gt;chat.sli.dev&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For a full example, you can check the &lt;a href="https://github.com/slidevjs/slidev/raw/main/demo"&gt;demo&lt;/a&gt; folder, which is also the source file for &lt;a href="https://antfu.me/posts/composable-vue-vueday-2021"&gt;my previous talk&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vitejs.dev"&gt;Vite&lt;/a&gt; - An extremely fast frontend tooling&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v3.vuejs.org/"&gt;Vue 3&lt;/a&gt; powered &lt;a href="https://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt; - Focus on the content while having the power of HTML and Vue components whenever needed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unocss/unocss"&gt;UnoCSS&lt;/a&gt; - On-demand utility-first CSS engine, style your slides at ease&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shikijs/shiki"&gt;Shiki&lt;/a&gt;, &lt;a href="https://github.com/Microsoft/monaco-editor"&gt;Monaco Editor&lt;/a&gt; - First-class code snippets support with live coding capability&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://recordrtc.org"&gt;RecordRTC&lt;/a&gt; - Built-in recording and camera view&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vueuse.org"&gt;VueUse&lt;/a&gt; family - &lt;a href="https://github.com/vueuse/vueuse"&gt;&lt;code&gt;@vueuse/core&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/vueuse/motion"&gt;&lt;code&gt;@vueuse/motion&lt;/code&gt;&lt;/a&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iconify.design/"&gt;Iconify&lt;/a&gt; - Icon sets collection.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/drauu"&gt;Drauu&lt;/a&gt; - Drawing and annotations support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://katex.org/"&gt;KaTeX&lt;/a&gt; - LaTeX math rendering.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mermaid-js.github.io/mermaid"&gt;Mermaid&lt;/a&gt; - Textual Diagrams.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;This project is made possible by all the sponsors supporting my work:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/sponsors/antfu"&gt; &lt;img src="https://cdn.jsdelivr.net/gh/antfu/static/sponsors.svg?sanitize=true" alt="Logos from Sponsors" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT License © 2021 &lt;a href="https://github.com/antfu"&gt;Anthony Fu&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>outline/outline</title>
      <link>https://github.com/outline/outline</link>
      <description>&lt;p&gt;The fastest knowledge base for growing teams. Beautiful, realtime collaborative, feature packed, and markdown compatible.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/31465/34380645-bd67f474-eb0b-11e7-8d03-0151c1730654.png" height="29" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;i&gt;A fast, collaborative, knowledge base for your team built using React and Node.js.&lt;br /&gt;Try out Outline using our hosted version at &lt;a href="https://www.getoutline.com"&gt;www.getoutline.com&lt;/a&gt;.&lt;/i&gt; &lt;br /&gt; &lt;img width="1640" alt="screenshot" src="https://user-images.githubusercontent.com/380914/110356468-26374600-7fef-11eb-9f6a-f2cc2c8c6590.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="http://www.typescriptlang.org" rel="nofollow"&gt;&lt;img src="https://img.shields.io/badge/%3C%2F%3E-TypeScript-%230074c1.svg?sanitize=true" alt="TypeScript" /&gt;&lt;/a&gt; &lt;a href="https://github.com/prettier/prettier"&gt;&lt;img src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat" alt="Prettier" /&gt;&lt;/a&gt; &lt;a href="https://github.com/styled-components/styled-components"&gt;&lt;img src="https://img.shields.io/badge/style-%F0%9F%92%85%20styled--components-orange.svg?sanitize=true" alt="Styled Components" /&gt;&lt;/a&gt; &lt;a href="https://translate.getoutline.com/project/outline" alt="Localized"&gt;&lt;img src="https://badges.crowdin.net/outline/localized.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is the source code that runs &lt;a href="https://www.getoutline.com"&gt;&lt;strong&gt;Outline&lt;/strong&gt;&lt;/a&gt; and all the associated services. If you want to use Outline then you don't need to run this code, A hosted version of the app is offered at &lt;a href="https://www.getoutline.com"&gt;getoutline.com&lt;/a&gt;. You can also find documentation on using Outline in &lt;a href="https://docs.getoutline.com/s/guide"&gt;our guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you'd like to run your own copy of Outline or contribute to development then this is the place for you.&lt;/p&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Please see the &lt;a href="https://docs.getoutline.com/s/hosting/"&gt;documentation&lt;/a&gt; for running your own copy of Outline in a production configuration.&lt;/p&gt; 
&lt;p&gt;If you have questions or improvements for the docs please create a thread in &lt;a href="https://github.com/outline/outline/discussions"&gt;GitHub discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Development&lt;/h1&gt; 
&lt;p&gt;There is a short guide for &lt;a href="https://docs.getoutline.com/s/hosting/doc/local-development-5hEhFRXow7"&gt;setting up a development environment&lt;/a&gt; if you wish to contribute changes, fixes, and improvements to Outline.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Outline is built and maintained by a small team – we'd love your help to fix bugs and add features!&lt;/p&gt; 
&lt;p&gt;Before submitting a pull request &lt;em&gt;please&lt;/em&gt; discuss with the core team by creating or commenting in an issue on &lt;a href="https://www.github.com/outline/outline/issues"&gt;GitHub&lt;/a&gt; – we'd also love to hear from you in the &lt;a href="https://www.github.com/outline/outline/discussions"&gt;discussions&lt;/a&gt;. This way we can ensure that an approach is agreed on before code is written. This will result in a much higher likelihood of your code being accepted.&lt;/p&gt; 
&lt;p&gt;If you’re looking for ways to get started, here's a list of ways to help us improve Outline:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/outline/outline/main/docs/TRANSLATION.md"&gt;Translation&lt;/a&gt; into other languages&lt;/li&gt; 
 &lt;li&gt;Issues with &lt;a href="https://github.com/outline/outline/labels/good%20first%20issue"&gt;&lt;code&gt;good first issue&lt;/code&gt;&lt;/a&gt; label&lt;/li&gt; 
 &lt;li&gt;Performance improvements, both on server and frontend&lt;/li&gt; 
 &lt;li&gt;Developer happiness and documentation&lt;/li&gt; 
 &lt;li&gt;Bugs and other issues listed on GitHub&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;If you're interested in contributing or learning more about the Outline codebase please refer to the &lt;a href="https://raw.githubusercontent.com/outline/outline/main/docs/ARCHITECTURE.md"&gt;architecture document&lt;/a&gt; first for a high level overview of how the application is put together.&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;p&gt;In development Outline outputs simple logging to the console, prefixed by categories. In production it outputs JSON logs, these can be easily parsed by your preferred log ingestion pipeline.&lt;/p&gt; 
&lt;p&gt;HTTP logging is disabled by default, but can be enabled by setting the &lt;code&gt;DEBUG=http&lt;/code&gt; environment variable. logging can be enabled for all categories by setting &lt;code&gt;DEBUG=*&lt;/code&gt; or for specific categories such as &lt;code&gt;DEBUG=database&lt;/code&gt; and &lt;code&gt;LOG_LEVEL=debug&lt;/code&gt;, or &lt;code&gt;LOG_LEVEL=silly&lt;/code&gt; for very verbose logging.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;We aim to have sufficient test coverage for critical parts of the application and aren't aiming for 100% unit test coverage. All API endpoints and anything authentication related should be thoroughly tested.&lt;/p&gt; 
&lt;p&gt;To add new tests, write your tests with &lt;a href="https://facebook.github.io/jest/"&gt;Jest&lt;/a&gt; and add a file with &lt;code&gt;.test.ts&lt;/code&gt; extension next to the tested code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# To run all tests
make test

# To run backend tests in watch mode
make watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once the test database is created with &lt;code&gt;make test&lt;/code&gt; you may individually run frontend and backend tests directly with jest:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# To run backend tests
yarn test:server

# To run a specific backend test in watch mode
yarn test path/to/file.test.ts --watch

# To run frontend tests
yarn test:app
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Migrations&lt;/h2&gt; 
&lt;p&gt;Sequelize is used to create and run migrations, for example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;yarn db:create-migration --name my-migration
yarn db:migrate
yarn db:rollback
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, to run migrations on test database:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;yarn db:migrate --env test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Activity&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/ff2e4e6918afff1acf9deb72d1ba6b071d586178.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Outline is &lt;a href="https://raw.githubusercontent.com/outline/outline/main/LICENSE"&gt;BSL 1.1 licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>expo/expo</title>
      <link>https://github.com/expo/expo</link>
      <description>&lt;p&gt;An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://expo.dev/"&gt; &lt;img alt="Expo logo" height="128" src="https://raw.githubusercontent.com/expo/expo/main/.github/resources/banner.png" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://expo.dev/"&gt;Expo&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://expo.dev/"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="SDK version" href="https://www.npmjs.com/package/expo" target="_blank"&gt; &lt;img alt="Expo SDK version" src="https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;amp;label=SDK&amp;amp;labelColor=000000&amp;amp;color=4630EB" /&gt; &lt;/a&gt; &lt;a aria-label="Chat or ask a question" href="https://chat.expo.dev" target="_blank"&gt; &lt;img alt="Chat or ask a question" src="https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;amp;labelColor=000000&amp;amp;color=4630EB&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=Chat%20with%20us" /&gt; &lt;/a&gt; &lt;a aria-label="Expo is free to use" href="https://github.com/expo/expo/raw/main/LICENSE" target="_blank"&gt; &lt;img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;amp;color=33CC12" target="_blank" /&gt; &lt;/a&gt; &lt;a aria-label="expo downloads" href="http://www.npmtrends.com/expo" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;amp;labelColor=gray&amp;amp;color=33CC12&amp;amp;label=Downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="try expo with snack" href="https://snack.expo.dev"&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;Read the Documentation&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.dev/blog"&gt;Learn more on our blog&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.canny.io/feature-requests"&gt;Request a feature&lt;/a&gt; &lt;/p&gt; 
&lt;h6 align="center"&gt;Follow us on&lt;/h6&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Follow @expo on X" href="https://x.com/intent/follow?screen_name=expo" target="_blank"&gt; &lt;img alt="Expo on X" src="https://img.shields.io/badge/X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on GitHub" href="https://github.com/expo" target="_blank"&gt; &lt;img alt="Expo on GitHub" src="https://img.shields.io/badge/GitHub-222222?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Reddit" href="https://www.reddit.com/r/expo/" target="_blank"&gt; &lt;img alt="Expo on Reddit" src="https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&amp;amp;logo=reddit&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Bluesky" href="https://bsky.app/profile/expo.dev" target="_blank"&gt; &lt;img alt="Expo on Bluesky" src="https://img.shields.io/badge/Bluesky-1DA1F2?style=for-the-badge&amp;amp;logo=bluesky&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on LinkedIn" href="https://www.linkedin.com/company/expo-dev" target="_blank"&gt; &lt;img alt="Expo on LinkedIn" src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript.&lt;/p&gt; 
&lt;p&gt;This repository includes the Expo SDK, Modules API, Go app, CLI, Router, documentation, and various other supporting tools. &lt;a href="https://expo.dev/eas"&gt;Expo Application Services (EAS)&lt;/a&gt; is a platform of hosted services that are deeply integrated with Expo open source tools. EAS helps you build, ship, and iterate on your app as an individual or a team.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://expo.dev/guidelines"&gt;Expo Community Guidelines&lt;/a&gt; before interacting in the repository. Thank you for helping keep the Expo community open and welcoming!&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-documentation"&gt;📚 Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-project-layout"&gt;🗺 Project Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-badges"&gt;🏅 Badges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-contributing"&gt;👏 Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-faq"&gt;❓ FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-the-team"&gt;💙 The Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;in our official docs!&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/versions/latest/"&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/workflow/customizing/"&gt;Using Custom Native Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🗺 Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/packages"&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; All the source code for Expo modules, if you want to edit a library or just see how it works this is where you'll find it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps"&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; This is where you can find Expo projects which are linked to the development modules. You'll do most of your testing in here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go"&gt;&lt;code&gt;apps/expo-go&lt;/code&gt;&lt;/a&gt; This is where you can find the source code for Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go/ios"&gt;&lt;code&gt;apps/expo-go/ios/Exponent.xcworkspace&lt;/code&gt;&lt;/a&gt; is the Xcode workspace. When developing iOS, always open this instead of &lt;code&gt;Exponent.xcodeproj&lt;/code&gt; because the workspace also loads the CocoaPods dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/docs"&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; The source code for &lt;strong&gt;&lt;a href="https://docs.expo.dev"&gt;https://docs.expo.dev&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/templates"&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt; The template projects you get when you run &lt;code&gt;npx create-expo-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/react-native-lab"&gt;&lt;code&gt;react-native-lab&lt;/code&gt;&lt;/a&gt; This is our fork of &lt;code&gt;react-native&lt;/code&gt; used to build Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/guides"&gt;&lt;code&gt;guides&lt;/code&gt;&lt;/a&gt; In-depth tutorials for advanced topics like contributing to the client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/tools"&gt;&lt;code&gt;tools&lt;/code&gt;&lt;/a&gt; contain build and configuration tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files"&gt;&lt;code&gt;template-files&lt;/code&gt;&lt;/a&gt; contains templates for files that require private keys. They are populated using the keys in &lt;code&gt;template-files/keys.json&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files/ios/dependencies.json"&gt;&lt;code&gt;template-files/ios/dependencies.json&lt;/code&gt;&lt;/a&gt; specifies the CocoaPods dependencies of the app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏅 Badges&lt;/h2&gt; 
&lt;p&gt;Let everyone know your app can be run instantly in the &lt;em&gt;Expo Go&lt;/em&gt; app! &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;👏 Contributing&lt;/h2&gt; 
&lt;p&gt;If you like Expo and want to help make it better then check out our &lt;a href="https://raw.githubusercontent.com/expo/expo/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;! Check out the &lt;a href="https://github.com/expo/expo/tree/main/packages/%40expo/cli"&gt;CLI package&lt;/a&gt; to work on the Expo CLI.&lt;/p&gt; 
&lt;h2&gt;❓ FAQ&lt;/h2&gt; 
&lt;p&gt;If you have questions about Expo and want answers, then check out our &lt;a href="https://docs.expo.dev/faq/"&gt;Frequently Asked Questions&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;If you still have questions you can ask them on our &lt;a href="https://chat.expo.dev"&gt;Discord and Forums&lt;/a&gt; or X &lt;a href="https://x.com/expo"&gt;@expo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💙 The Team&lt;/h2&gt; 
&lt;p&gt;Curious about who makes Expo? Here are our &lt;a href="https://expo.dev/about"&gt;team members&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Expo source code is made available under the &lt;a href="https://raw.githubusercontent.com/expo/expo/main/LICENSE"&gt;MIT license&lt;/a&gt;. Some of the dependencies are licensed differently, with the BSD license, for example.&lt;/p&gt; 
&lt;img alt="Star the Expo repo on GitHub to support the project" src="https://user-images.githubusercontent.com/9664363/185428788-d762fd5d-97b3-4f59-8db7-f72405be9677.gif" width="50%" /&gt;</description>
    </item>
    
    <item>
      <title>microsoft/vscode-copilot-chat</title>
      <link>https://github.com/microsoft/vscode-copilot-chat</link>
      <description>&lt;p&gt;Copilot Chat extension for VS Code&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Copilot - Your AI peer programmer&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/overview"&gt;GitHub Copilot&lt;/a&gt;&lt;/strong&gt; is an AI peer programming tool that helps you write code faster and smarter.&lt;/p&gt; 
&lt;p&gt;GitHub Copilot adapts to your unique needs allowing you to select the best model for your project, customize chat responses with custom instructions, and utilize agent mode for AI-powered, seamlessly integrated peer programming sessions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Sign up for &lt;a href="https://github.com/settings/copilot?utm_source=vscode-chat-readme&amp;amp;utm_medium=first&amp;amp;utm_campaign=2025mar-em-MSFT-signup"&gt;GitHub Copilot Free&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/microsoft/vscode-copilot-release/raw/main/images/hero-dark.png?raw=true" alt="Working with GitHub Copilot agent mode to make edits to code in your workspace" /&gt;&lt;/p&gt; 
&lt;p&gt;When you install Copilot in Visual Studio Code, you get two extensions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot"&gt;GitHub Copilot&lt;/a&gt;&lt;/strong&gt; - Provides inline coding suggestions as you type.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot-chat"&gt;GitHub Copilot Chat&lt;/a&gt;&lt;/strong&gt; (this extension) - A companion extension that provides conversational AI assistance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting access to GitHub Copilot&lt;/h2&gt; 
&lt;p&gt;Sign up for &lt;a href="https://github.com/settings/copilot?utm_source=vscode-chat-readme&amp;amp;utm_medium=second&amp;amp;utm_campaign=2025mar-em-MSFT-signup"&gt;GitHub Copilot Free&lt;/a&gt;, or request access from your enterprise admin.&lt;/p&gt; 
&lt;p&gt;To access GitHub Copilot, an active GitHub Copilot subscription is required. You can read more about our business and individual offerings at &lt;a href="https://github.com/features/copilot?utm_source=vscode-chat&amp;amp;utm_medium=readme&amp;amp;utm_campaign=2025mar-em-MSFT-signup"&gt;github.com/features/copilot&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;AI-powered coding sessions&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Start an AI-powered coding session tailored to your workflow&lt;/strong&gt;. Copilot Edits allows you to quickly iterate on code changes directly in the editor, across multiple files using natural language. For a more autonomous peer programmer experience, &lt;a href="https://aka.ms/vscode-copilot-agent"&gt;agent mode&lt;/a&gt; performs multi-step coding tasks at your command. It automatically handles compile and lint errors, monitors terminal and test output, and iterates until the task is complete. &lt;a href="https://aka.ms/vscode-copilot-edit"&gt;Edit mode&lt;/a&gt; offers a conversational, step-by-step coding experience. Engage in multi-turn chat conversations while Copilot applies edits directly to your codebase, allowing you to review changes in context and maintain full control.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/microsoft/vscode-copilot-release/raw/main/images/agent-mode-readme.gif?raw=true" alt="Agent mode in Copilot Chat creating a new Vue application" /&gt;&lt;/p&gt; 
&lt;h2&gt;Inline suggestions in the editor&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Automatically receive inline suggestions in the editor&lt;/strong&gt; from &lt;a href="https://aka.ms/vscode-completions"&gt;ghost text suggestions&lt;/a&gt; and &lt;a href="https://aka.ms/vscode-nes"&gt;next edit suggestions&lt;/a&gt; to help you write code faster. Ghost text suggestions provide suggestions at the current location, tailored to your coding style and your existing code. Copilot next edit suggestions (Copilot NES) takes it a step further and predicts what and where your next logical code change will be. Use the Tab key to navigate and accept changes in quick succession.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://code.visualstudio.com/assets/docs/copilot/inline-suggestions/nes-point.gif" alt="Copilot next edit suggestions" /&gt;&lt;/p&gt; 
&lt;h2&gt;Ask and learn about your code with chat&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Ask Copilot for help with any task or question&lt;/strong&gt; in the &lt;a href="https://aka.ms/vscode-chat"&gt;Chat view&lt;/a&gt;, bringing in code from your current files. Rather than giving you a generic answer, it can give answers that are relevant for your codebase using information provided by &lt;a href="https://aka.ms/vscode-chat-participants"&gt;participants&lt;/a&gt;, &lt;a href="https://aka.ms/vscode-chat-variables"&gt;variables&lt;/a&gt;, and &lt;a href="https://aka.ms/vscode-chat-commands"&gt;slash commands&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/microsoft/vscode-copilot-release/raw/main/images/participants-workspace.gif?raw=true" alt="Using the workspace chat participant" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Apply Copilot's AI suggestions directly to your code&lt;/strong&gt; using &lt;a href="https://aka.ms/vscode-inline-chat"&gt;Inline chat&lt;/a&gt;, staying in the flow. Need help with refactoring a method, adding error handling, or explaining a complex algorithm - just launch Copilot in the editor!&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://code.visualstudio.com/assets/docs/copilot/copilot-chat/inline-chat-question-example.png" alt="Inline chat in VS Code" /&gt;&lt;/p&gt; 
&lt;h3&gt;Supported languages and frameworks&lt;/h3&gt; 
&lt;p&gt;GitHub Copilot works on any language, including Java, PHP, Python, JavaScript, Ruby, Go, C#, or C++. Because it’s been trained on languages in public repositories, it works for most popular languages, libraries and frameworks.&lt;/p&gt; 
&lt;h3&gt;Version compatibility&lt;/h3&gt; 
&lt;p&gt;As Copilot Chat releases in lockstep with VS Code due to its deep UI integration, every new version of Copilot Chat is only compatible with the latest and newest release of VS Code. This means that if you are using an older version of VS Code, you will not be able to use the latest Copilot Chat.&lt;/p&gt; 
&lt;p&gt;Only the latest Copilot Chat versions will use the latest models provided by the Copilot service, as even minor model upgrades require prompt changes and fixes in the extension.&lt;/p&gt; 
&lt;h3&gt;Privacy and preview terms&lt;/h3&gt; 
&lt;p&gt;By using Copilot Chat you agree to &lt;a href="https://docs.github.com/en/early-access/copilot/github-copilot-chat-technical-preview-license-terms"&gt;GitHub Copilot chat preview terms&lt;/a&gt;. Review the &lt;a href="https://aka.ms/CopilotChatTransparencyNote"&gt;transparency note&lt;/a&gt; to understand about usage, limitations and ways to improve Copilot Chat during the technical preview.&lt;/p&gt; 
&lt;p&gt;Your code is yours. We follow responsible practices in accordance with our &lt;a href="https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement"&gt;Privacy Statement&lt;/a&gt; to ensure that your code snippets will not be used as suggested code for other users of GitHub Copilot.&lt;/p&gt; 
&lt;p&gt;To get the latest security fixes, please use the latest version of the Copilot extension and VS Code.&lt;/p&gt; 
&lt;h3&gt;Resources &amp;amp; next steps&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Sign up for &lt;a href="https://github.com/settings/copilot?utm_source=vscode-chat-readme&amp;amp;utm_medium=third&amp;amp;utm_campaign=2025mar-em-MSFT-signup"&gt;GitHub Copilot Free&lt;/a&gt;&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you're using Copilot for your business, check out &lt;a href="https://docs.github.com/en/copilot/copilot-business/about-github-copilot-business"&gt;Copilot Business&lt;/a&gt; and &lt;a href="https://docs.github.com/en/copilot/github-copilot-enterprise/overview/about-github-copilot-enterprise"&gt;Copilot Enterprise&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/getting-started"&gt;Get started with Copilot in VS Code tutorial&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=3surPGP7_4o"&gt;Copilot Chat quickstart video&lt;/a&gt;&lt;/strong&gt; to learn Copilot Chat in less than 4 minutes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/playlist?list=PLj6YeMhvp2S5_hvBl2SE-7YCHYlLQ0bPt"&gt;VS Code Copilot Series on YouTube&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/faq"&gt;FAQ&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/microsoft/vscode-copilot-release/issues"&gt;Feedback&lt;/a&gt;&lt;/strong&gt;: We'd love to get your help in making GitHub Copilot better!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Data and telemetry&lt;/h2&gt; 
&lt;p&gt;The GitHub Copilot Extension for Visual Studio Code collects usage data and sends it to Microsoft to help improve our products and services. Read our &lt;a href="https://privacy.microsoft.com/privacystatement"&gt;privacy statement&lt;/a&gt; to learn more. This extension respects the &lt;code&gt;telemetry.telemetryLevel&lt;/code&gt; setting which you can learn more about at &lt;a href="https://code.visualstudio.com/docs/supporting/faq#_how-to-disable-telemetry-reporting"&gt;https://code.visualstudio.com/docs/supporting/faq#_how-to-disable-telemetry-reporting&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft's Trademark &amp;amp; Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright (c) Microsoft Corporation. All rights reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href="https://raw.githubusercontent.com/microsoft/vscode-copilot-chat/main/LICENSE.txt"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>onlook-dev/onlook</title>
      <link>https://github.com/onlook-dev/onlook</link>
      <description>&lt;p&gt;The Cursor for Designers • An Open-Source AI-First Design tool • Visually build, style, and edit your React App with AI&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img width="800" alt="header image" src="https://raw.githubusercontent.com/onlook-dev/onlook/main/assets/web-preview.png" /&gt; 
 &lt;h3 align="center"&gt;Onlook&lt;/h3&gt; 
 &lt;p align="center"&gt; Cursor for Designers &lt;br /&gt; &lt;a href="https://docs.onlook.com"&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
 &lt;p align="center"&gt; 👨‍💻👩‍💻👨‍💻 &lt;a href="https://www.ycombinator.com/companies/onlook/jobs/e4gHv1n-founding-engineer-fullstack"&gt;We're hiring engineers in SF!&lt;/a&gt; 👩‍💻👨‍💻👩‍💻 &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;a href="https://youtu.be/RSX_3EaO5eU?feature=shared"&gt;View Demo&lt;/a&gt; · 
 &lt;a href="https://github.com/onlook-dev/onlook/issues/new?labels=bug&amp;amp;template=bug-report---.md"&gt;Report Bug&lt;/a&gt; · 
 &lt;a href="https://github.com/onlook-dev/onlook/issues/new?labels=enhancement&amp;amp;template=feature-request---.md"&gt;Request Feature&lt;/a&gt; 
 &lt;p&gt;&lt;/p&gt; 
 &lt;!-- PROJECT SHIELDS --&gt; 
 &lt;!--
*** I'm using markdown "reference style" links for readability.
*** Reference links are enclosed in brackets [ ] instead of parentheses ( ).
*** See the bottom of this document for the declaration of the reference variables
*** for contributors-url, forks-url, etc. This is an optional, concise syntax you may use.
*** https://www.markdownguide.org/basic-syntax/#reference-style-links
--&gt; 
 &lt;!-- [![Contributors][contributors-shield]][contributors-url]
[![Forks][forks-shield]][forks-url]
[![Stargazers][stars-shield]][stars-url]
[![Issues][issues-shield]][issues-url]
[![Apache License][license-shield]][license-url] --&gt; 
 &lt;p&gt;&lt;a href="https://discord.gg/hERDfFZCsH"&gt;&lt;img src="https://img.shields.io/badge/-Discord-black?logo=discord&amp;amp;colorB=555" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/onlook-dev"&gt;&lt;img src="https://img.shields.io/badge/-LinkedIn-black.svg?logo=linkedin&amp;amp;colorB=555" alt="LinkedIn" /&gt;&lt;/a&gt; &lt;a href="https://x.com/onlookdev"&gt;&lt;img src="https://img.shields.io/badge/-Twitter-black?logo=x&amp;amp;colorB=555" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=zh"&gt;中文&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=es"&gt;Español&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=de"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=fr"&gt;français&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=pt"&gt;Português&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=ru"&gt;Русский&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=ja"&gt;日本語&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/onlook-dev/onlook?lang=ko"&gt;한국어&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;An Open-Source, Visual-First Code Editor&lt;/h1&gt; 
&lt;p&gt;Craft websites, prototypes, and designs with AI in Next.js + TailwindCSS. Make edits directly in the browser DOM with a visual editor. Design in realtime with code. An open-source alternative to Bolt.new, Lovable, V0, Replit Agent, Figma Make, Webflow, etc.&lt;/p&gt; 
&lt;h3&gt;🚧 🚧 🚧 Onlook is still under development 🚧 🚧 🚧&lt;/h3&gt; 
&lt;p&gt;We're actively looking for contributors to help make Onlook for Web an incredible prompt-to-build experience. Check the &lt;a href="https://github.com/onlook-dev/onlook/issues"&gt;open issues&lt;/a&gt; for a full list of proposed features (and known issues), and join our &lt;a href="https://discord.gg/hERDfFZCsH"&gt;Discord&lt;/a&gt; to collaborate with hundreds of other builders.&lt;/p&gt; 
&lt;h2&gt;What you can do with Onlook:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Create Next.js app in seconds 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Start from text or image&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Use prebuilt templates&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Import from Figma&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Import from GitHub repo&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Make a PR to a GitHub repo&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Visually edit your app 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Use Figma-like UI&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Preview your app in real-time&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Manage brand assets and tokens&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Create and navigate to Pages&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Browse layers&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Manage project Images&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Detect and use Components – &lt;em&gt;Previously in &lt;a href="https://github.com/onlook-dev/desktop"&gt;Onlook Desktop&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Drag-and-drop Components Panel&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Use Branching to experiment with designs&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Development Tools 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Real-time code editor&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Save and restore from checkpoints&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Run commands via CLI&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Connect with app marketplace&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Deploy your app in seconds 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Generate sharable links&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Link your custom domain&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Collaborate with your team 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Real-time editing&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Leave comments&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Advanced AI capabilities 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Queue multiple messages at once&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Use Images as references and as assets in a project&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Setup and use MCPs in projects&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Allow Onlook to use itself as a toolcall for branch creation and iteration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Advanced project support 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Support non-NextJS projects&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Support non-Tailwind projects&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/642de37a-72cc-4056-8eb7-8eb42714cdc4" alt="Onlook-GitHub-Example" /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Use our &lt;a href="https://onlook.com"&gt;hosted app&lt;/a&gt; or &lt;a href="https://docs.onlook.com/developers/running-locally"&gt;run locally&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Onlook will run on any Next.js + TailwindCSS project, import your project into Onlook or start from scratch within the editor.&lt;/p&gt; 
&lt;p&gt;Use the AI chat to create or edit a project you're working on. At any time, you can always right-click an element to open up the exact location of the element in code.&lt;/p&gt; 
&lt;img width="600" alt="image" src="https://github.com/user-attachments/assets/4ad9f411-b172-4430-81ef-650f4f314666" /&gt; 
&lt;br /&gt; 
&lt;p&gt;Draw-in new divs and re-arrange them within their parent containers by dragging-and-dropping.&lt;/p&gt; 
&lt;img width="600" alt="image" src="https://raw.githubusercontent.com/onlook-dev/onlook/main/assets/insert-div.png" /&gt; 
&lt;br /&gt; 
&lt;p&gt;Preview the code side-by-side with your site design.&lt;/p&gt; 
&lt;img width="600" alt="image" src="https://raw.githubusercontent.com/onlook-dev/onlook/main/assets/code-connect.png" /&gt; 
&lt;br /&gt; 
&lt;p&gt;Use Onlook's editor toolbar to adjust Tailwind styles, directly manipulate objects, and experiment with layouts.&lt;/p&gt; 
&lt;img width="600" alt="image" src="https://raw.githubusercontent.com/onlook-dev/onlook/main/assets/text-styling.png" /&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For full documentation, visit &lt;a href="https://docs.onlook.com"&gt;docs.onlook.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To see how to Contribute, visit &lt;a href="https://docs.onlook.com/developers"&gt;Contributing to Onlook&lt;/a&gt; in our docs.&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;img width="676" alt="architecture" src="https://raw.githubusercontent.com/onlook-dev/onlook/main/assets/architecture.png" /&gt; 
&lt;ol&gt; 
 &lt;li&gt;When you create an app, we load the code into a web container&lt;/li&gt; 
 &lt;li&gt;The container runs and serves the code&lt;/li&gt; 
 &lt;li&gt;Our editor receives the preview link and displays it in an iFrame&lt;/li&gt; 
 &lt;li&gt;Our editor reads and indexes the code from the container&lt;/li&gt; 
 &lt;li&gt;We instrument the code in order to map elements to their place in code&lt;/li&gt; 
 &lt;li&gt;When the element is edited, we edit the element in our iFrame, then in code&lt;/li&gt; 
 &lt;li&gt;Our AI chat also has code access and tools to understand and edit the code&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This architecture can theoretically scale to any language or framework that displays DOM elements declaratively (e.g. jsx/tsx/html). We are focused on making it work well with Next.js and TailwindCSS for now.&lt;/p&gt; 
&lt;p&gt;For a full walkthrough, check out our &lt;a href="https://docs.onlook.com/developers/architecture"&gt;Architecture Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Our Tech Stack&lt;/h3&gt; 
&lt;h4&gt;Front-end&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; - Full stack&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tailwindcss.com/"&gt;TailwindCSS&lt;/a&gt; - Styling&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://trpc.io/"&gt;tRPC&lt;/a&gt; - Server interface&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Database&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://supabase.com/"&gt;Supabase&lt;/a&gt; - Auth, Database, Storage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://orm.drizzle.team/"&gt;Drizzle&lt;/a&gt; - ORM&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;AI&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ai-sdk.dev/"&gt;AI SDK&lt;/a&gt; - LLM client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openrouter.ai/"&gt;OpenRouter&lt;/a&gt; - LLM model provider&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://morphllm.com"&gt;Morph Fast Apply&lt;/a&gt; - Fast apply model provider&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://relace.ai"&gt;Relace&lt;/a&gt; - Fast apply model provider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Sandbox and hosting&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codesandbox.io/docs/sdk"&gt;CodeSandboxSDK&lt;/a&gt; - Dev sandbox&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freestyle.sh/"&gt;Freestyle&lt;/a&gt; - Hosting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Runtime&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://bun.sh/"&gt;Bun&lt;/a&gt; - Monorepo, runtime, bundler&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; - Container management&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/ecc94303-df23-46ae-87dc-66b040396e0b" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;If you have a suggestion that would make this better, please fork the repo and create a pull request. You can also &lt;a href="https://github.com/onlook-dev/onlook/issues"&gt;open issues&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/onlook-dev/onlook/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for instructions and code of conduct.&lt;/p&gt; 
&lt;h4&gt;Contributors&lt;/h4&gt; 
&lt;a href="https://github.com/onlook-dev/onlook/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=onlook-dev/onlook" /&gt; &lt;/a&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/60684b68-1925-4550-8efd-51a1509fc953" alt="image" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Team: &lt;a href="https://discord.gg/hERDfFZCsH"&gt;Discord&lt;/a&gt; - &lt;a href="https://twitter.com/onlookdev"&gt;Twitter&lt;/a&gt; - &lt;a href="https://www.linkedin.com/company/onlook-dev/"&gt;LinkedIn&lt;/a&gt; - &lt;a href="mailto:contact@onlook.com"&gt;Email&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Project: &lt;a href="https://github.com/onlook-dev/onlook"&gt;https://github.com/onlook-dev/onlook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Website: &lt;a href="https://onlook.com"&gt;https://onlook.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Distributed under the Apache 2.0 License. See &lt;a href="https://raw.githubusercontent.com/onlook-dev/onlook/main/LICENSE.md"&gt;LICENSE.md&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>nuxt/nuxt</title>
      <link>https://github.com/nuxt/nuxt</link>
      <description>&lt;p&gt;The Intuitive Vue Framework.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://nuxt.com"&gt;&lt;img src="https://raw.githubusercontent.com/nuxt/nuxt/main/.github/assets/banner.svg?sanitize=true" alt="Nuxt banner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Nuxt&lt;/h1&gt; 
&lt;p&gt; &lt;a href="https://www.npmjs.com/package/nuxt"&gt;&lt;img src="https://img.shields.io/npm/v/nuxt.svg?style=flat&amp;amp;colorA=18181B&amp;amp;colorB=28CF8D" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/nuxt"&gt;&lt;img src="https://img.shields.io/npm/dm/nuxt.svg?style=flat&amp;amp;colorA=18181B&amp;amp;colorB=28CF8D" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nuxt/nuxt/tree/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/nuxt/nuxt.svg?style=flat&amp;amp;colorA=18181B&amp;amp;colorB=28CF8D" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://nuxt.com"&gt;&lt;img src="https://img.shields.io/badge/Nuxt%20Docs-18181B?logo=nuxt" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://chat.nuxt.dev"&gt;&lt;img src="https://img.shields.io/badge/Nuxt%20Discord-18181B?logo=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/nuxt/nuxt/badge" alt="Nuxt openssf scorecard score" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Nuxt is a free and open-source framework with an intuitive and extendable way to create type-safe, performant and production-grade full-stack web applications and websites with Vue.js.&lt;/p&gt; 
&lt;p&gt;It provides a number of features that make it easy to build fast, SEO-friendly, and scalable web applications, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Server-side rendering, Static Site Generation, Hybrid Rendering and Edge-Side Rendering&lt;/li&gt; 
 &lt;li&gt;Automatic routing with code-splitting and pre-fetching&lt;/li&gt; 
 &lt;li&gt;Data fetching and state management&lt;/li&gt; 
 &lt;li&gt;SEO Optimization and Meta tags definition&lt;/li&gt; 
 &lt;li&gt;Auto imports of components, composables and utils&lt;/li&gt; 
 &lt;li&gt;TypeScript with zero configuration&lt;/li&gt; 
 &lt;li&gt;Go fullstack with our server/ directory&lt;/li&gt; 
 &lt;li&gt;Extensible with &lt;a href="https://nuxt.com/modules"&gt;200+ modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Deployment to a variety of &lt;a href="https://nuxt.com/deploy"&gt;hosting platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;...&lt;a href="https://nuxt.com"&gt;and much more&lt;/a&gt; 🚀&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Table of Contents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💻 &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#vue-development"&gt; Vue Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🧩 &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#modules"&gt;Modules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;❤️ &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🏠 &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#local-development"&gt;Local Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🛟 &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#professional-support"&gt;Professional Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔗 &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#follow-us"&gt;Follow Us&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;⚖️ &lt;a href="https://raw.githubusercontent.com/nuxt/nuxt/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;a name="getting-started"&gt;🚀 Getting Started&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Use the following command to create a new starter project. This will create a starter project with all the necessary files and dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm create nuxt@latest &amp;lt;my-project&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Discover also &lt;a href="https://nuxt.new"&gt;nuxt.new&lt;/a&gt;: Open a Nuxt starter on CodeSandbox, StackBlitz or locally to get up and running in a few seconds.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;a name="vue-development"&gt;💻 Vue Development&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Simple, intuitive and powerful, Nuxt lets you write Vue components in a way that makes sense. Every repetitive task is automated, so you can focus on writing your full-stack Vue application with confidence.&lt;/p&gt; 
&lt;p&gt;Example of an &lt;code&gt;app.vue&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-vue"&gt;&amp;lt;script setup lang="ts"&amp;gt;
useSeoMeta({
  title: 'Meet Nuxt',
  description: 'The Intuitive Vue Framework.',
})
&amp;lt;/script&amp;gt;

&amp;lt;template&amp;gt;
  &amp;lt;div id="app"&amp;gt;
    &amp;lt;AppHeader /&amp;gt;
    &amp;lt;NuxtPage /&amp;gt;
    &amp;lt;AppFooter /&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;

&amp;lt;style scoped&amp;gt;
#app {
  background-color: #020420;
  color: #00DC82;
}
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;a name="documentation"&gt;📖 Documentation&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;We highly recommend you take a look at the &lt;a href="https://nuxt.com/docs"&gt;Nuxt documentation&lt;/a&gt; to level up. It’s a great resource for learning more about the framework. It covers everything from getting started to advanced topics.&lt;/p&gt; 
&lt;h2&gt;&lt;a name="modules"&gt;🧩 Modules&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Discover our &lt;a href="https://nuxt.com/modules"&gt;list of modules&lt;/a&gt; to supercharge your Nuxt project, created by the Nuxt team and community.&lt;/p&gt; 
&lt;h2&gt;&lt;a name="contribute"&gt;❤️ Contribute&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;We invite you to contribute and help improve Nuxt 💚&lt;/p&gt; 
&lt;p&gt;Here are a few ways you can get involved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reporting Bugs:&lt;/strong&gt; If you come across any bugs or issues, please check out the &lt;a href="https://nuxt.com/docs/4.x/community/reporting-bugs"&gt;reporting bugs guide&lt;/a&gt; to learn how to submit a bug report.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Suggestions:&lt;/strong&gt; Have ideas to enhance Nuxt? We'd love to hear them! Check out the &lt;a href="https://nuxt.com/docs/4.x/community/contribution"&gt;contribution guide&lt;/a&gt; to share your suggestions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Questions:&lt;/strong&gt; If you have questions or need assistance, the &lt;a href="https://nuxt.com/docs/4.x/community/getting-help"&gt;getting help guide&lt;/a&gt; provides resources to help you out.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name="local-development"&gt;🏠 Local Development&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Follow the docs to &lt;a href="https://nuxt.com/docs/4.x/community/framework-contribution#setup"&gt;Set Up Your Local Development Environment&lt;/a&gt; to contribute to the framework and documentation.&lt;/p&gt; 
&lt;h2&gt;&lt;a name="professional-support"&gt;🛟 Professional Support&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Technical audit &amp;amp; consulting: &lt;a href="https://nuxt.com/enterprise/support"&gt;Nuxt Experts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Custom development &amp;amp; more: &lt;a href="https://nuxt.com/enterprise/agencies"&gt;Nuxt Agencies Partners&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a name="follow-us"&gt;🔗 Follow Us&lt;/a&gt;&lt;/h2&gt; 
&lt;p valign="center"&gt; &lt;a href="https://go.nuxt.com/discord"&gt;&lt;img width="20px" src="https://raw.githubusercontent.com/nuxt/nuxt/main/.github/assets/discord.svg?sanitize=true" alt="Discord" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://go.nuxt.com/x"&gt;&lt;img width="20px" src="https://raw.githubusercontent.com/nuxt/nuxt/main/.github/assets/twitter.svg?sanitize=true" alt="Twitter" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://go.nuxt.com/github"&gt;&lt;img width="20px" src="https://raw.githubusercontent.com/nuxt/nuxt/main/.github/assets/github.svg?sanitize=true" alt="GitHub" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://go.nuxt.com/bluesky"&gt;&lt;img width="20px" src="https://raw.githubusercontent.com/nuxt/nuxt/main/.github/assets/bluesky.svg?sanitize=true" alt="Bluesky" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a name="license"&gt;⚖️ License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/nuxt/nuxt/tree/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Docs 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;Welcome to GitHub Docs! GitHub’s documentation is open source, meaning anyone from inside or outside the company can contribute. For full contributing guidelines, visit our &lt;a href="https://docs.github.com/en/contributing"&gt;contributing guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick links by contributor type&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hubbers (GitHub employees):&lt;/strong&gt; See &lt;a href="https://github.com/github/docs-content/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; in the &lt;code&gt;docs-content&lt;/code&gt; repository for GitHub-specific processes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open source contributors:&lt;/strong&gt; See &lt;a href="https://github.com/github/docs/raw/main/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; in the &lt;code&gt;docs&lt;/code&gt; repository for a quick-start summary.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How we sync changes across Docs repositories&lt;/h2&gt; 
&lt;p&gt;There are two GitHub Docs repositories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;github/docs&lt;/code&gt;&lt;/strong&gt; (public): Open to external contributions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;github/docs-internal&lt;/code&gt;&lt;/strong&gt; (private): For GitHub employee contributions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The two repositories sync frequently. Content changes in one are reflected in the other. Hubbers might prefer to post in &lt;code&gt;docs&lt;/code&gt; when working with a customer, but &lt;code&gt;docs&lt;/code&gt; has limitations on the types of contributions it accepts to safeguard the site and our workflows. Internal contributions should usually go to &lt;code&gt;docs-internal&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;docs&lt;/code&gt; repository accepts contributions to content files (&lt;code&gt;.md&lt;/code&gt; files in &lt;code&gt;/content&lt;/code&gt; and select &lt;code&gt;/data&lt;/code&gt; sections like reusables only). Infrastructure files, workflows, and site-building code are not open for external modification.&lt;/p&gt; 
&lt;h2&gt;New to contributing&lt;/h2&gt; 
&lt;p&gt;Here are some resources to help you get started with open source contributions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/get-started/exploring-projects-on-github/finding-ways-to-contribute-to-open-source-on-github"&gt;Finding ways to contribute to open source on GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/get-started/git-basics/set-up-git"&gt;Set up Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/get-started/using-github/github-flow"&gt;GitHub flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests"&gt;Collaborating with pull requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is dual-licensed under:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Creative Commons Attribution 4.0&lt;/strong&gt; - for documentation and content in the assets, content, and data folders (see &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE"&gt;LICENSE&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MIT License&lt;/strong&gt; - for code (see &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE"&gt;LICENSE-CODE&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>toeverything/AFFiNE</title>
      <link>https://github.com/toeverything/AFFiNE</link>
      <description>&lt;p&gt;There can be more than Notion and Miro. AFFiNE(pronounced [ə‘fain]) is a next-gen knowledge base that brings planning, sorting and creating all together. Privacy first, open-source, customizable and ready to use.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1 style="border-bottom: none"&gt; &lt;b&gt;&lt;a href="https://affine.pro"&gt;AFFiNE.Pro&lt;/a&gt;&lt;/b&gt;&lt;br /&gt; Write, Draw and Plan All at Once &lt;br /&gt; &lt;/h1&gt; 
 &lt;a href="https://affine.pro/download"&gt; &lt;img alt="affine logo" src="https://cdn.affine.pro/Github_hero_image2.png" style="width: 100%" /&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; A privacy-focused, local-first, open-source, and ready-to-use alternative for Notion &amp;amp; Miro. &lt;br /&gt; One hyper-fused platform for wildly creative minds. &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.producthunt.com/posts/affine-3?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-affine-3" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=440671&amp;amp;theme=light" alt="AFFiNE - One app for all - Where Notion meets Miro | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="left" valign="middle"&gt; 
  &lt;a href="https://runblaze.dev"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://www.runblaze.dev/logo_dark.png" /&gt; 
    &lt;img align="right" src="https://www.runblaze.dev/logo_light.png" height="102px" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
  &lt;br style="display: none;" /&gt; 
  &lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://runblaze.dev"&gt;Blaze&lt;/a&gt; for their support of this project. They provide high-performance Apple Silicon macOS and Linux (AMD64 &amp;amp; ARM64) runners for GitHub Actions, greatly reducing our automated build times.&lt;/em&gt;&lt;/p&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://affine.pro"&gt;Home Page&lt;/a&gt; | 
  &lt;a href="https://affine.pro/redirect/discord"&gt;Discord&lt;/a&gt; | 
  &lt;a href="https://app.affine.pro"&gt;Live Demo&lt;/a&gt; | 
  &lt;a href="https://affine.pro/blog/"&gt;Blog&lt;/a&gt; | 
  &lt;a href="https://docs.affine.pro/"&gt;Documentation&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/toeverything/AFFiNE/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/toeverything/AFFiNE/total" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/#contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/toeverything/AFFiNE" alt="All Contributors" /&gt;&lt;/a&gt; &lt;a href="https://www.typescriptlang.org/"&gt;&lt;img src="https://img.shields.io/github/package-json/dependency-version/toeverything/affine/dev/typescript" alt="TypeScript-version-icon" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;em&gt;Docs, canvas and tables are hyper-merged with AFFiNE - just like the word affine (əˈfʌɪn | a-fine).&lt;/em&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/toeverything/AFFiNE/assets/79301703/49a426bb-8d2b-4216-891a-fa5993642253" style="width: 100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting started &amp;amp; staying tuned with us.&lt;/h2&gt; 
&lt;p&gt;Star us, and you will receive all release notifications from GitHub without any delay!&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/79301703/230891830-0110681e-8c7e-483b-b6d9-9e42b291b9ef.gif" style="width: 100%" /&gt; 
&lt;h2&gt;What is AFFiNE&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://affine.pro"&gt;AFFiNE&lt;/a&gt; is an open-source, all-in-one workspace and an operating system for all the building blocks that assemble your knowledge base and much more -- wiki, knowledge management, presentation and digital assets. It's a better alternative to Notion and Miro.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A true canvas for blocks in any form. Docs and whiteboard are now fully merged.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Many editor apps claim to be a canvas for productivity, but AFFiNE is one of the very few which allows you to put any building block on an edgeless canvas -- rich text, sticky notes, any embedded web pages, multi-view databases, linked pages, shapes and even slides. We have it all.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Multimodal AI partner ready to kick in any work&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write up professional work report? Turn an outline into expressive and presentable slides? Summary an article into a well-structured mindmap? Sorting your job plan and backlog for tasks? Or... draw and code prototype apps and web pages directly all with one prompt? With you, &lt;a href="https://affine.pro/ai"&gt;AFFiNE AI&lt;/a&gt; pushes your creativity to the edge of your imagination, just like &lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;Canvas AI&lt;/a&gt; to generate mind map for brainstorming.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Local-first &amp;amp; Real-time collaborative&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We love the idea of local-first that you always own your data on your disk, in spite of the cloud. Furthermore, AFFiNE supports real-time sync and collaborations on web and cross-platform clients.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Self-host &amp;amp; Shape your own AFFiNE&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have the freedom to manage, self-host, fork and build your own AFFiNE. Plugin community and third-party blocks are coming soon. More tractions on &lt;a href="https://blocksuite.io"&gt;Blocksuite&lt;/a&gt;. Check there to learn how to &lt;a href="https://docs.affine.pro/self-host-affine"&gt;self-host AFFiNE&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;“We shape our tools and thereafter our tools shape us”. A lot of pioneers have inspired us along the way, e.g.:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Quip &amp;amp; Notion with their great concept of “everything is a block”&lt;/li&gt; 
 &lt;li&gt;Trello with their Kanban&lt;/li&gt; 
 &lt;li&gt;Airtable &amp;amp; Miro with their no-code programmable datasheets&lt;/li&gt; 
 &lt;li&gt;Miro &amp;amp; Whimiscal with their edgeless visual whiteboard&lt;/li&gt; 
 &lt;li&gt;Remote &amp;amp; Capacities with their object-based tag system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There is a large overlap of their atomic “building blocks” between these apps. They are not open source, nor do they have a plugin system like Vscode for contributors to customize. We want to have something that contains all the features we love and also goes one step even further.&lt;/p&gt; 
&lt;p&gt;Thanks for checking us out, we appreciate your interest and sincerely hope that AFFiNE resonates with you! 🎵 Checking &lt;a href="https://affine.pro/"&gt;https://affine.pro/&lt;/a&gt; for more details ions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Bug Reports&lt;/th&gt; 
   &lt;th&gt;Feature Requests&lt;/th&gt; 
   &lt;th&gt;Questions/Discussions&lt;/th&gt; 
   &lt;th&gt;AFFiNE Community&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=bug%2Cproduct-review&amp;amp;template=BUG-REPORT.yml&amp;amp;title=TITLE"&gt;Create a bug report&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/issues/new?assignees=&amp;amp;labels=feat%2Cproduct-review&amp;amp;template=FEATURE-REQUEST.yml&amp;amp;title=TITLE"&gt;Submit a feature request&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/toeverything/AFFiNE/discussions"&gt;Check GitHub Discussion&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://community.affine.pro"&gt;Vist the AFFiNE Community&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Something isn't working as expected&lt;/td&gt; 
   &lt;td&gt;An idea for a new feature, or improvements&lt;/td&gt; 
   &lt;td&gt;Discuss and ask questions&lt;/td&gt; 
   &lt;td&gt;A place to ask, learn and engage with others&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Calling all developers, testers, tech writers and more! Contributions of all types are more than welcome, you can read more in &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/types-of-contributions.md"&gt;docs/types-of-contributions.md&lt;/a&gt;. If you are interested in contributing code, read our &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/CONTRIBUTING.md"&gt;docs/CONTRIBUTING.md&lt;/a&gt; and feel free to check out our GitHub issues to get stuck in to show us what you’re made of.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before you start contributing, please make sure you have read and accepted our &lt;a href="https://github.com/toeverything/affine/edit/canary/.github/CLA.md"&gt;Contributor License Agreement&lt;/a&gt;. To indicate your agreement, simply edit this file and submit a pull request.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;bug reports&lt;/strong&gt;, &lt;strong&gt;feature requests&lt;/strong&gt; and other &lt;strong&gt;suggestions&lt;/strong&gt; you can also &lt;a href="https://github.com/toeverything/AFFiNE/issues/new/choose"&gt;create a new issue&lt;/a&gt; and choose the most appropriate template for your feedback.&lt;/p&gt; 
&lt;p&gt;For &lt;strong&gt;translation&lt;/strong&gt; and &lt;strong&gt;language support&lt;/strong&gt; you can visit our &lt;a href="https://community.affine.pro/c/i18n-general"&gt;i18n General Space&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Looking for &lt;strong&gt;other ways to contribute&lt;/strong&gt; and wondering where to start? Check out the &lt;a href="https://community.affine.pro/c/start-here/affine-ambassador"&gt;AFFiNE Ambassador program&lt;/a&gt;, we work closely with passionate community members and provide them with a wide range of support and resources.&lt;/p&gt; 
&lt;p&gt;If you have questions, you are welcome to contact us. One of the best places to get more info and learn more is in the &lt;a href="https://community.affine.pro"&gt;AFFiNE Community&lt;/a&gt; where you can engage with other like-minded individuals.&lt;/p&gt; 
&lt;h2&gt;Templates&lt;/h2&gt; 
&lt;p&gt;AFFiNE now provides pre-built &lt;a href="https://affine.pro/templates"&gt;templates&lt;/a&gt; from our team. Following are the Top 10 most popular templates among AFFiNE users,if you want to contribute, you can contribute your own template so other people can use it too.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-vision-board-template"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-one-pager-template-free"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/sample-lesson-plan-math-template"&gt;sample lesson plan math template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/grr-lesson-plan-template-free"&gt;grr lesson plan template free&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/free-editable-lesson-plan-template-for-pre-k"&gt;free editable lesson plan template for pre k&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/high-note-collection-planners"&gt;high note collection planners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-digital-planner"&gt;digital planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/adhd-planner"&gt;ADHD Planner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/reading-log"&gt;Reading Log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/templates/category-cornell-notes-template"&gt;Cornell Notes Template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Blog&lt;/h2&gt; 
&lt;p&gt;Welcome to the AFFiNE blog section! Here, you’ll find the latest insights, tips, and guides on how to maximize your experience with AFFiNE and AFFiNE AI, the leading Canvas AI tool for flexible note-taking and creative organization.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/8-free-printable-vision-board-templates-examples-2023"&gt;vision board template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/ai-homework-helper"&gt;ai homework helper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/vision-board-maker"&gt;vision board maker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/free-customized-travel-itinerary-planner-templates"&gt;itinerary template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/the-cornell-notes-template-and-system-learning-tips"&gt;cornell notes template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-10-free-editable-swot-analysis-template-examples"&gt;swot chart template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/apps-like-luna-task"&gt;apps like luna task&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/dynamic-AI-notes"&gt;note taking ai from rough notes to mind map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/best-canvas-ai"&gt;canvas ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/top-12-one-pager-examples-how-to-create-your-own"&gt;one pager&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/how-to-write-sop-step-by-step-guide-5-best-free-tools-templates"&gt;SOP Template&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://affine.pro/blog/10-best-free-chore-chart-templates-kids-adults"&gt;Chore Chart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/frontend/component"&gt;@affine/component&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE Component Resources&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/codecov/c/github/toeverything/affine?style=flat-square" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/packages/common/theme"&gt;@toeverything/theme&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AFFiNE theme&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.npmjs.com/package/@toeverything/theme"&gt;&lt;img src="https://img.shields.io/npm/dm/@toeverything/theme?style=flat-square&amp;amp;color=eee" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Upstreams&lt;/h2&gt; 
&lt;p&gt;We would also like to give thanks to open-source projects that make AFFiNE possible:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/BlockSuite"&gt;Blocksuite&lt;/a&gt; - 💠 BlockSuite is the open-source collaborative editor project behind AFFiNE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/toeverything/OctoBase"&gt;OctoBase&lt;/a&gt; - 🐙 OctoBase is the open-source database behind AFFiNE, local-first, yet collaborative. A light-weight, scalable, data engine written in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs/yjs"&gt;yjs&lt;/a&gt; - Fundamental support of CRDTs for our implementation on state management and data sync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron/electron"&gt;electron&lt;/a&gt; - Build cross-platform desktop apps with JavaScript, HTML, and CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; - The library for web and native user interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/napi-rs/napi-rs"&gt;napi-rs&lt;/a&gt; - A framework for building compiled Node.js add-ons in Rust via Node-API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmndrs/jotai"&gt;Jotai&lt;/a&gt; - Primitive and flexible state management for React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jack-Works/async-call-rpc"&gt;async-call-rpc&lt;/a&gt; - A lightweight JSON RPC client &amp;amp; server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;Vite&lt;/a&gt; - Next generation frontend tooling.&lt;/li&gt; 
 &lt;li&gt;Other upstream &lt;a href="https://github.com/toeverything/AFFiNE/network/dependencies"&gt;dependencies&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks a lot to the community for providing such powerful and simple libraries, so that we can focus more on the implementation of the product logic, and we hope that in the future our projects will also provide a more easy-to-use knowledge base for everyone.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;We would like to express our gratitude to all the individuals who have already contributed to AFFiNE! If you have any AFFiNE-related project, documentation, tool or template, please feel free to contribute it by submitting a pull request to our curated list on GitHub: &lt;a href="https://github.com/toeverything/awesome-affine"&gt;awesome-affine&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://github.com/toeverything/affine/graphs/contributors"&gt; &lt;img alt="contributors" src="https://opencollective.com/affine/contributors.svg?width=890&amp;amp;button=false" /&gt; &lt;/a&gt; 
&lt;h2&gt;Self-Host&lt;/h2&gt; 
&lt;p&gt;Begin with Docker to deploy your own feature-rich, unrestricted version of AFFiNE. Our team is diligently updating to the latest version. For more information on how to self-host AFFiNE, please refer to our &lt;a href="https://docs.affine.pro/self-host-affine"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://template.run.claw.cloud/?openapp=system-fastdeploy%3FtemplateName%3Daffine"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hiring&lt;/h2&gt; 
&lt;p&gt;Some amazing companies, including AFFiNE, are looking for developers! Are you interested in joining AFFiNE or its partners? Check out our &lt;a href="https://affine.pro/redirect/discord"&gt;Discord channel&lt;/a&gt; for some of the latest jobs available.&lt;/p&gt; 
&lt;h2&gt;Feature Request&lt;/h2&gt; 
&lt;p&gt;For feature requests, please see &lt;a href="https://community.affine.pro/c/feature-requests/"&gt;community.affine.pro&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;h3&gt;Codespaces&lt;/h3&gt; 
&lt;p&gt;From the GitHub repo main page, click the green "Code" button and select "Create codespace on master". This will open a new Codespace with the (supposedly auto-forked AFFiNE repo cloned, built, and ready to go.&lt;/p&gt; 
&lt;h3&gt;Local&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build AFFiNE from source code.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from everyone. See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/docs/contributing/tutorial.md"&gt;docs/contributing/tutorial.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png" width="153" height="30" alt="Chromatic" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href="https://www.chromatic.com/"&gt;Chromatic&lt;/a&gt; for providing the visual testing platform that helps us review UI changes and catch visual regressions.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;h3&gt;Editions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Community Edition (CE) is the current available version, it's free for self-host under the MIT license.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;AFFiNE Enterprise Edition (EE) is yet to be published, it will have more advanced features and enterprise-oriented offerings, including but not exclusive to rebranding and SSO, advanced admin and audit, etc., you may refer to &lt;a href="https://affine.pro/pricing"&gt;https://affine.pro/pricing&lt;/a&gt; for more information&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/toeverything/AFFiNE/canary/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mifi/lossless-cut</title>
      <link>https://github.com/mifi/lossless-cut</link>
      <description>&lt;p&gt;The swiss army knife of lossless video/audio editing&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://go.warp.dev/lossless-cut" target="_blank"&gt; &lt;sup&gt;Special thanks to:&lt;/sup&gt; &lt;br /&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/warpdotdev/brand-assets/raw/main/Github/Sponsor/Warp-Github-LG-02.png" /&gt; &lt;br /&gt; 
  &lt;h&gt;
   Warp, built for coding with multiple AI agents 
   &lt;br /&gt; 
   &lt;sup&gt;Available for macOS, Linux and Windows&lt;/sup&gt; 
  &lt;/h&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://mifi.no/losslesscut/"&gt;&lt;img src="https://raw.githubusercontent.com/mifi/lossless-cut/master/src/renderer/src/icon.svg?sanitize=true" width="120" alt="LosslessCut" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;b&gt;LosslessCut&lt;/b&gt;&lt;/p&gt; The swiss army knife of lossless video/audio editing 
 &lt;br /&gt; 
 &lt;img src="https://github.com/mifi/lossless-cut/workflows/Build/release/badge.svg?sanitize=true" /&gt; 
 &lt;a href="https://paypal.me/mifino/usd"&gt;&lt;img src="https://img.shields.io/badge/Donate-PayPal-green.svg?sanitize=true" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/mifi/lossless-cut#download"&gt;&lt;img src="https://img.shields.io/github/v/release/mifi/lossless-cut" /&gt;&lt;/a&gt; 
 &lt;a href="https://discord.gg/fhnEREfUJ3"&gt;&lt;img src="https://img.shields.io/discord/986051448385183804" /&gt;&lt;/a&gt; 
 &lt;a href="https://twitter.com/losslesscut"&gt;&lt;img src="https://img.shields.io/twitter/follow/losslesscut?label=Twitter&amp;amp;style=social" alt="Twitter" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://mifi.no/thanks/"&gt;Thanks to my supporters&lt;/a&gt; and everyone who purchased LosslessCut! 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt;&lt;img src="https://raw.githubusercontent.com/mifi/lossless-cut/master/main_screenshot.jpg" width="600" alt="screenshot" /&gt;&lt;/p&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;p&gt;LosslessCut aims to be the ultimate cross platform FFmpeg GUI for extremely fast and lossless operations on video, audio, subtitle and other related media files. The main feature is lossless trimming and cutting of video and audio files, which is great for saving space by rough-cutting your large video files taken from a video camera, GoPro, drone, etc. It lets you quickly extract the good parts from your videos and discard many gigabytes of data without doing a slow re-encode and thereby losing quality. There are also many more &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#typical-workflow"&gt;use cases&lt;/a&gt;. Everything is extremely fast because it does an almost direct data copy, fueled by the awesome FFmpeg which does all the grunt work.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#example-lossless-use-cases"&gt;Example lossless use cases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#download"&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#supported-formats"&gt;Supported formats&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#documentation"&gt;Documentation &amp;amp; getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#video-demos"&gt;Video demos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#featured"&gt;Featured&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/#attributions"&gt;Attributions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lossless cutting of most video and audio formats&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mifi/lossless-cut/issues/126"&gt;Smart cut&lt;/a&gt; (experimental)&lt;/li&gt; 
 &lt;li&gt;Losslessly cut out parts of video/audio (for cutting away commercials etc.)&lt;/li&gt; 
 &lt;li&gt;Losslessly rearrange the order of video/audio segments&lt;/li&gt; 
 &lt;li&gt;Lossless merge/concatenation of arbitrary files (with identical codecs parameters, e.g. from the same camera)&lt;/li&gt; 
 &lt;li&gt;Lossless multi track/stream editing 
  &lt;ul&gt; 
   &lt;li&gt;Combine arbitrary tracks from multiple files (ex. add music or subtitle track to a video file)&lt;/li&gt; 
   &lt;li&gt;Remove unneeded tracks&lt;/li&gt; 
   &lt;li&gt;Replace or re-encode only some tracks&lt;/li&gt; 
   &lt;li&gt;Extract all tracks from a file (extract video, audio, subtitle, attachments and other tracks from one file into separate files)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;View technical data about all tracks. Edit file metadata, per-track metadata and per-track disposition&lt;/li&gt; 
 &lt;li&gt;Select video/audio tracks for playback. Playback multiple audio tracks simultaneously.&lt;/li&gt; 
 &lt;li&gt;Fast multi-file workflow (note: no mass/batch export yet)&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcut workflow&lt;/li&gt; 
 &lt;li&gt;Losslessly remux video/audio into a different container (file) format&lt;/li&gt; 
 &lt;li&gt;Take full-resolution snapshots from videos in JPEG/PNG format (low or high quality)&lt;/li&gt; 
 &lt;li&gt;Export ranges of video frames to images (every nth frame, second, by scene change, best thumbnails) 
  &lt;ul&gt; 
   &lt;li&gt;Export only from a selected time range (segment)&lt;/li&gt; 
   &lt;li&gt;Optionally include original timestamps in image file names&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Manual input of cutpoint times&lt;/li&gt; 
 &lt;li&gt;Apply a per-file timecode offset (and auto load timecode from file)&lt;/li&gt; 
 &lt;li&gt;Change rotation/orientation metadata in videos&lt;/li&gt; 
 &lt;li&gt;Timeline zoom and frame/keyframe jumping for cutting around keyframes&lt;/li&gt; 
 &lt;li&gt;Video thumbnails and audio waveform&lt;/li&gt; 
 &lt;li&gt;Saves per project cut segments to project file&lt;/li&gt; 
 &lt;li&gt;View FFmpeg last command log so you can modify and re-run recent commands on the command line&lt;/li&gt; 
 &lt;li&gt;Undo/redo&lt;/li&gt; 
 &lt;li&gt;Advanced segment query and mutation JS-based expression language.&lt;/li&gt; 
 &lt;li&gt;Give labels to cut segments, annotate with tags&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/docs.md#import--export-projects"&gt;Import/export&lt;/a&gt; segments: MP4/MKV chapter marks, Text file, YouTube, CSV, CUE, XML (DaVinci, Final Cut Pro) and more&lt;/li&gt; 
 &lt;li&gt;MKV/MP4 embedded chapters marks editor&lt;/li&gt; 
 &lt;li&gt;View subtitles&lt;/li&gt; 
 &lt;li&gt;Customizable keyboard hotkeys&lt;/li&gt; 
 &lt;li&gt;Black scene detection, silent audio detection, and scene change detection&lt;/li&gt; 
 &lt;li&gt;Divide timeline into segments of length L, size (X MB), N number of segments or even randomized segments!&lt;/li&gt; 
 &lt;li&gt;Speed up / slow down video or audio file (&lt;a href="https://github.com/mifi/lossless-cut/issues/1712"&gt;changing FPS&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Basic &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/cli.md"&gt;CLI&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/api.md"&gt;HTTP API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Show (DJI) embedded GPS track on a map&lt;/li&gt; 
 &lt;li&gt;Losslessly Download videos over HTTP (e.g. HLS &lt;code&gt;.m3u8&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example lossless use cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cut out commercials from a recorded TV show (and re-format from TS to MP4)&lt;/li&gt; 
 &lt;li&gt;Remove audio tracks from a file&lt;/li&gt; 
 &lt;li&gt;Extract music track from a video and cut it to your needs&lt;/li&gt; 
 &lt;li&gt;Add music to a video (or replace existing audio track)&lt;/li&gt; 
 &lt;li&gt;Combine audio and video tracks from separate recordings&lt;/li&gt; 
 &lt;li&gt;Include an external subtitle into a video&lt;/li&gt; 
 &lt;li&gt;Quickly change a H264/H265 MKV video to MOV or MP4 for playback on iPhone&lt;/li&gt; 
 &lt;li&gt;Import a list of cut times from other tool as a EDL (edit decision list, CSV) and run these cuts with LosslessCut&lt;/li&gt; 
 &lt;li&gt;Export a list of cut times as a CSV EDL and process these in another tool&lt;/li&gt; 
 &lt;li&gt;Quickly cut a file by its MP4/MKV chapters&lt;/li&gt; 
 &lt;li&gt;Quickly cut a &lt;a href="https://youtube-dl.org/"&gt;YouTube video&lt;/a&gt; by its chapters (or music times from a comment)&lt;/li&gt; 
 &lt;li&gt;Change the language of a file's audio/subtitle tracks&lt;/li&gt; 
 &lt;li&gt;Attach cover art / thumbnail to videos / audio from an external JPEG file or from a frame on the timeline&lt;/li&gt; 
 &lt;li&gt;Change author, title, GPS position, recording time of a video&lt;/li&gt; 
 &lt;li&gt;Fix rotation of a video that has the wrong orientation flag set 
  &lt;ul&gt; 
   &lt;li&gt;Great for rotating phone videos that come out the wrong way without actually re-encoding the video.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Loop a video / audio clip X times quickly without re-encoding 
  &lt;ul&gt; 
   &lt;li&gt;See &lt;a href="https://github.com/mifi/lossless-cut/issues/284"&gt;#284&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Convert a video or parts of it into X image files (not lossless)&lt;/li&gt; 
 &lt;li&gt;Losslessly split a video into one file per scene (note you probably have to shift segments, see &lt;a href="https://github.com/mifi/lossless-cut/issues/330"&gt;#330&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;Cut away silent parts of an audio/video&lt;/li&gt; 
 &lt;li&gt;Split video into segments to for example respect Twitter's 140 second limit&lt;/li&gt; 
 &lt;li&gt;Annotate each segment with one or more tags, then use those tags to organize your segments or use it to create an output folder structure or hierarchy for your segments.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Export cut times as YouTube Chapters&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Export with Merge and "Create chapters from merged segments" enabled&lt;/li&gt; 
 &lt;li&gt;Open the exported file and select "Import chapters" in the dialog&lt;/li&gt; 
 &lt;li&gt;File -&amp;gt; Export project -&amp;gt; YouTube Chapters&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Re-encode only the audio track, keeping the lossless video track&lt;/h3&gt; 
&lt;p&gt;First export each track as individual files. Then use Handbrake or similar to re-encode the audio file (if mp4 file, encode as AAC.) Then open the extracted video stream in LosslessCut. The open your encoded audio file and select "Include all tracks from the new file". Then export.&lt;/p&gt; 
&lt;h3&gt;Advanced multi-step workflows&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; you can use LosslessCut in multiple passes in order to achieve separate trimming of individual tracks:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open a file an export all tracks as individual files&lt;/li&gt; 
 &lt;li&gt;Open the exported track files independently and cut them as desired&lt;/li&gt; 
 &lt;li&gt;Add the track back to the video and combine them to one output video&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Download&lt;/h2&gt; 
&lt;p&gt;If you want to support my continued work on LosslessCut, and you want the advantage of a secure and simple installation process with automatic, stable updates, consider getting it from your favorite store:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://apps.apple.com/app/id1505323402"&gt;&lt;img src="https://raw.githubusercontent.com/mifi/lossless-cut/master/mac-app-store-badge.svg?sanitize=true" alt="Mac App Store" height="50" /&gt;&lt;/a&gt; &lt;a href="https://www.microsoft.com/store/apps/9P30LSR4705L?cid=storebadge&amp;amp;ocid=badge"&gt;&lt;img src="https://raw.githubusercontent.com/mifi/lossless-cut/master/ms-store-badge.svg?sanitize=true" alt="MS badge" height="50" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For Linux these are some alternatives:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://snapcraft.io/losslesscut"&gt;&lt;img src="https://github.com/mifi/lossless-cut/raw/master/snap-store-black.svg?sanitize=true" alt="Snapcraft" height="50" /&gt;&lt;/a&gt; &lt;a href="https://flathub.org/apps/details/no.mifi.losslesscut"&gt;&lt;img src="https://github.com/mifi/lossless-cut/raw/master/flathub-badge.svg?sanitize=true" alt="Flathub" height="50" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you prefer to download the executables manually, this will of course always be free (see also &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/requirements.md"&gt;supported operating systems&lt;/a&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS: &lt;a href="https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-mac-x64.dmg"&gt;Intel&lt;/a&gt; / &lt;a href="https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-mac-arm64.dmg"&gt;Apple Silicon&lt;/a&gt; DMG (note that PKG does &lt;strong&gt;not&lt;/strong&gt; work)&lt;/li&gt; 
 &lt;li&gt;Windows: &lt;a href="https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-win-x64.7z"&gt;7zip&lt;/a&gt; (Windows 7, 8 and 8.1 is &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/requirements.md"&gt;no longer supported after v3.50.0&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Linux: &lt;a href="https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x64.tar.bz2"&gt;x64 tar.bz2&lt;/a&gt; / &lt;a href="https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-x86_64.AppImage"&gt;x64 AppImage&lt;/a&gt; / &lt;a href="https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-arm64.tar.bz2"&gt;arm64 tar.bz2&lt;/a&gt; / &lt;a href="https://github.com/mifi/lossless-cut/releases/latest/download/LosslessCut-linux-armv7l.tar.bz2"&gt;Raspberry Pi armv7l&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mifi/lossless-cut/releases"&gt;More releases&lt;/a&gt; - Note that APPX (Windows) and PKG (macOS) do &lt;strong&gt;not&lt;/strong&gt; work)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mifi.no/llc/nightly/"&gt;Latest nightly builds 🧪&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Difference between App Stores and GitHub download? &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/issues.md#app-stores-and-github-difference"&gt;Please see FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mifi.no/thanks"&gt;&lt;img src="https://raw.githubusercontent.com/mifi/lossless-cut/master/donate.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;LosslessCut is maintained by me alone and will always remain free and open source. If it's useful to you, consider supporting my work. Alternatively &lt;a href="https://www.ffmpeg.org/donations.html"&gt;donate to FFmpeg&lt;/a&gt; because they are doing the world a huge favor.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://paypal.me/mifino/usd"&gt;Paypal&lt;/a&gt; | &lt;a href="https://mifi.no/thanks"&gt;crypto&lt;/a&gt; | &lt;a href="https://mifi.no/thanks"&gt;more&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Supported formats&lt;/h2&gt; 
&lt;p&gt;LosslessCut uses the Chromium browser's HTML5 video player, and not all formats/codecs are &lt;a href="https://www.chromium.org/audio-video"&gt;natively supported&lt;/a&gt;. Generally, the following file formats work: &lt;code&gt;MP4&lt;/code&gt;, &lt;code&gt;MOV&lt;/code&gt;, &lt;code&gt;WebM&lt;/code&gt;, &lt;code&gt;Matroska&lt;/code&gt;, &lt;code&gt;OGG&lt;/code&gt; and &lt;code&gt;WAV&lt;/code&gt;. Audio codecs: &lt;code&gt;FLAC&lt;/code&gt;, &lt;code&gt;MP3&lt;/code&gt;, &lt;code&gt;Opus&lt;/code&gt;, &lt;code&gt;PCM&lt;/code&gt;, &lt;code&gt;Vorbis&lt;/code&gt; and &lt;code&gt;AAC&lt;/code&gt;. Video codecs: &lt;code&gt;H264&lt;/code&gt;, &lt;code&gt;AV1&lt;/code&gt;, &lt;code&gt;Theora&lt;/code&gt;, &lt;code&gt;VP8&lt;/code&gt;, &lt;code&gt;VP9&lt;/code&gt; and &lt;code&gt;H265&lt;/code&gt; (with hardware decoder). Learn the &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/docs.md#primer-video--audio-formats-vs-codecs"&gt;difference between a codec and a format&lt;/a&gt;. Codecs and formats not listed above can still be converted to a supported format/codec from the &lt;code&gt;File&lt;/code&gt; menu (try the option &lt;em&gt;Fastest: FFmpeg-assisted playback&lt;/em&gt; first). A low quality version of the file will then be created and opened in the player. Note that the actual cut/export operation will still be performed on the original file, so it will be lossless. This allows for potentially opening any file that FFmpeg is able to decode.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/docs.md"&gt;Getting started and documentation&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/issues.md"&gt;FAQ, known issues, limitations and troubleshooting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Video demos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=pYHMxXy05Jg"&gt;Common features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4pYJ93cn80E"&gt;How to add a thumbnail / cover art to an MP4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MRBGDsuw_WU"&gt;How to add multi-language audio to a video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Your video here?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Featured&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://console.substack.com/p/console-93"&gt;Console newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hacker News &lt;a href="https://news.ycombinator.com/item?id=40829494"&gt;2024&lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=33969490"&gt;2022&lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=24883030"&gt;2020-10&lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=22026412"&gt;2020-01&lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=12885585"&gt;2016&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.m.wikipedia.org/wiki/LosslessCut"&gt;Wikipedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Your link here?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://api.star-history.com/svg?repos=mifi/lossless-cut&amp;amp;type=Date" alt="Star History Chart" width="400px" /&gt; 
&lt;h2&gt;Attributions&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;App icon made by &lt;a href="http://www.flaticon.com/authors/dimi-kazak" title="Dimi Kazak"&gt;Dimi Kazak&lt;/a&gt; from &lt;a href="http://www.flaticon.com" title="Flaticon"&gt;www.flaticon.com&lt;/a&gt; is licensed by &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0"&gt;CC 3.0 BY&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lottiefiles.com/7077-magic-flow"&gt;Lottie animation by Chris Gannon&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Thanks to Adi Abinun for UI work.&lt;/li&gt; 
 &lt;li&gt;Thanks to translators who helped translate the app. &lt;a href="https://raw.githubusercontent.com/mifi/lossless-cut/master/translation.md"&gt;You can too!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mifi.no/thanks/"&gt;Thanks to everyone for supporting&lt;/a&gt; my open source work 🙌&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;Made with ❤️ in &lt;a href="https://www.youtube.com/watch?v=uQIv8Vo9_Jc"&gt;🇳🇴&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mifi.no/"&gt;More apps by mifi.no&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Follow me on &lt;a href="https://github.com/mifi/"&gt;GitHub&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UC6XlvVH63g0H54HSJubURQA"&gt;YouTube&lt;/a&gt;, &lt;a href="https://www.instagram.com/mifi.no/"&gt;IG&lt;/a&gt;, &lt;a href="https://twitter.com/mifi_no"&gt;Twitter&lt;/a&gt; for more awesome content!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>UfoMiao/zcf</title>
      <link>https://github.com/UfoMiao/zcf</link>
      <description>&lt;p&gt;Zero-Config Code Flow for Claude code &amp; Codex&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://npmjs.com/package/zcf"&gt;&lt;img src="https://img.shields.io/npm/v/zcf?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.com/package/zcf"&gt;&lt;img src="https://img.shields.io/npm/dm/zcf?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ufomiao/zcf/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/ufomiao/zcf.svg?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://claude.ai/code"&gt;&lt;img src="https://img.shields.io/badge/Claude-Code-1fa669?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/UfoMiao/zcf"&gt;&lt;img src="https://codecov.io/gh/UfoMiao/zcf/graph/badge.svg?token=HZI6K4Y7D7&amp;amp;style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://www.jsdocs.io/package/zcf"&gt;&lt;img src="https://img.shields.io/badge/jsdocs-reference-1fa669?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="JSDocs" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/UfoMiao/zcf"&gt;&lt;img src="https://img.shields.io/badge/Ask-DeepWiki-1fa669?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/banner.webp" alt="Banner" /&gt; 
 &lt;h1&gt; ZCF - Zero-Config Code Flow &lt;/h1&gt; 
 &lt;p align="center"&gt; &lt;b&gt;English&lt;/b&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/README_zh-CN.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/README_ja-JP.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/CHANGELOG.md"&gt;Changelog&lt;/a&gt; &lt;/p&gt;
 &lt;p&gt;&lt;strong&gt;✨ Quick Links&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-codex-support-v300-new"&gt;Codex Support&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-bmad-workflow-v27-new-feature"&gt;BMad Workflow&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-spec-workflow-v2124-new-feature"&gt;Spec Workflow&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-open-web-search-v2129-new-feature"&gt;Open Web Search&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-ccr-claude-code-router-support-v28-enhanced"&gt;CCR Router&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-ccometixline-support-status-bar-tool-v299-new"&gt;CCometixLine&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-ai-output-styles-v212-new-feature"&gt;Output Styles&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/#-multi-configuration-management-v320-new"&gt;Multi-Configuration Management&lt;/a&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Zero-config, one-click setup for Claude Code &amp;amp; Codex with bilingual support, intelligent agent system and personalized AI assistant&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;♥️ Sponsor AI API&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://share.302.ai/gAT9VG"&gt;&lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/302.ai-en.jpg" alt="Sponsor AI API" /&gt;&lt;/a&gt; &lt;a href="https://share.302.ai/gAT9VG"&gt;302.AI&lt;/a&gt; is a pay-as-you-go enterprise AI resource hub that offers the latest and most comprehensive AI models and APIs on the market, along with a variety of ready-to-use online AI applications.&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;🎯 Recommended: Use Interactive Menu (v2.0 New)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf          # Open interactive menu and choose operations based on your needs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Menu options include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1&lt;/code&gt; Full initialization (equivalent to &lt;code&gt;zcf i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2&lt;/code&gt; Import workflows (equivalent to &lt;code&gt;zcf u&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;3&lt;/code&gt; Configure API or CCR - API configuration or CCR proxy setup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;4&lt;/code&gt; Configure MCP - MCP service configuration and management&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;5&lt;/code&gt; Configure default model - Set default model (opus/sonnet/sonnet 1m/custom)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;6&lt;/code&gt; Configure AI memory - Configure AI output language and global output style&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;7&lt;/code&gt; Configure environment permissions - Import environment variables and permissions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;R&lt;/code&gt; Claude Code Router management (enhanced in v2.8.1)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;U&lt;/code&gt; ccusage - Claude Code usage analysis&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;L&lt;/code&gt; CCometixLine - High-performance statusline tool with Git integration and real-time usage tracking (v2.9.9+ new)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;+&lt;/code&gt; Check updates - Check and update Claude Code, CCR and CCometixLine versions (v2.9.9+ enhanced)&lt;/li&gt; 
 &lt;li&gt;More features...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🎯 Key Configuration Features&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Model Configuration (Option 5)&lt;/strong&gt;: Configure your default Claude model with flexible options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Default&lt;/strong&gt;: Let Claude Code automatically choose the best model for each task&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Opus&lt;/strong&gt;: Use Claude-4.1-Opus exclusively (high token consumption, use with caution)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sonnet 1M&lt;/strong&gt;: Use Sonnet with 1M context window for larger context tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom&lt;/strong&gt;: Specify your own model names for both primary and fast tasks (supports any custom model)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;AI Memory Configuration (Option 6)&lt;/strong&gt;: Personalize your AI assistant:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI Output Language&lt;/strong&gt;: Set the language for AI responses (Chinese, English, or custom)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Global Output Style&lt;/strong&gt;: Configure AI personality and response style&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Or, use direct commands:&lt;/h3&gt; 
&lt;h4&gt;🆕 First time using Claude Code&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf i        # Execute full initialization directly: Install Claude Code + Import workflows + Configure API + Set up MCP services
# or
npx zcf → select 1  # Execute full initialization via menu
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🔄 Already have Claude Code installed&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf u        # Update workflows only: Quick add AI workflows and command system
# or
npx zcf → select 2  # Execute workflow update via menu
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Since v2.0, &lt;code&gt;zcf&lt;/code&gt; opens the interactive menu by default, providing a visual operation interface&lt;/li&gt; 
  &lt;li&gt;You can choose operations through the menu or use commands directly for quick execution&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;zcf i&lt;/code&gt; = full initialization, &lt;code&gt;zcf u&lt;/code&gt; = update workflows only&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🌐 Language Support&lt;/h4&gt; 
&lt;p&gt;ZCF supports bilingual operation with automatic language switching for all commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Use Chinese for all operations
npx zcf --lang zh-CN          # Interactive menu in Chinese
npx zcf init --lang zh-CN      # Initialize with Chinese interface  
npx zcf ccr --all-lang zh-CN    # Configure CCR in Chinese

# Language parameter priority (highest to lowest):
# --all-lang &amp;gt; --lang &amp;gt; saved user preference &amp;gt; interactive prompt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Language Parameters:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--lang, -l&lt;/code&gt;: ZCF interface language (applies to all commands)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--all-lang, -g&lt;/code&gt;: Set all language parameters at once (most convenient)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--config-lang, -c&lt;/code&gt;: Template files language (init/update commands only)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ai-output-lang, -a&lt;/code&gt;: AI assistant output language (init command only)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🤖 Non-interactive Mode&lt;/h4&gt; 
&lt;p&gt;For CI/CD and automated setups, use &lt;code&gt;--skip-prompt&lt;/code&gt; with parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using API provider preset (v3.3.0+ New - Simplified)
npx zcf i -s -p 302ai -k "sk-xxx"

# Shorthand version (traditional)
npx zcf i -s -g zh-CN -t api_key -k "sk-xxx" -u "https://xxx.xxx"

# Complete version (traditional)
npx zcf i --skip-prompt --all-lang zh-CN --api-type api_key --api-key "sk-xxx" --api-url "https://xxx.xxx"

# Using provider preset with custom models
npx zcf i -s -p 302ai -k "sk-xxx" -M "claude-sonnet-4-5" -F "claude-haiku-4-5"

# Complete version (with custom models)
npx zcf i --skip-prompt \
  --api-type api_key \
  --api-key "sk-xxx" \
  --api-url "https://xxx.xxx" \
  --api-model "claude-sonnet-4-5" \
  --api-fast-model "claude-haiku-4-5"

# Multiple API configurations (JSON string)
npx zcf i -s --api-configs '[
  {"provider":"302ai","key":"sk-xxx"},
  {"provider":"glm","key":"sk-yyy"},
  {"name":"custom","type":"api_key","key":"sk-zzz","url":"https://custom.api.com","primaryModel":"claude-sonnet-4-5","fastModel":"claude-haiku-4-5","default":true}
]'

# Multiple API configurations (JSON file)
npx zcf i -s --api-configs-file ./api-configs.json

# For Codex with multiple providers
npx zcf i -s -T cx --api-configs '[
  {"provider":"302ai","key":"sk-xxx"},
  {"name":"custom","type":"api_key","key":"sk-yyy","url":"https://custom.api.com","primaryModel":"gpt-5","default":true}
]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🎯 API Provider Presets (v3.3.0+ New)&lt;/h4&gt; 
&lt;p&gt;ZCF now supports API provider presets that automatically configure baseUrl and models, simplifying configuration from 5+ parameters to just 2:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Supported Providers:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;302ai&lt;/code&gt; - &lt;a href="https://share.302.ai/gAT9VG"&gt;302.AI&lt;/a&gt; API Service&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;glm&lt;/code&gt; - GLM (z.ai)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;minimax&lt;/code&gt; - MiniMax API Service&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;kimi&lt;/code&gt; - Kimi (Moonshot AI)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;custom&lt;/code&gt; - Custom API endpoint (requires manual URL configuration)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Usage Examples:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using 302.AI provider
npx zcf i --skip-prompt --provider 302ai --api-key "sk-xxx"
# or shorthand
npx zcf i -s -p 302ai -k "sk-xxx"

# Using GLM provider
npx zcf i -s -p glm -k "sk-xxx"

# Using MiniMax provider
npx zcf i -s -p minimax -k "sk-xxx"

# Using Kimi provider
npx zcf i -s -p kimi -k "sk-xxx"

# Using custom provider (requires URL)
npx zcf i -s -p custom -k "sk-xxx" -u "https://api.example.com"

# For Codex
npx zcf i -s -T cx -p 302ai -k "sk-xxx"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Automatic baseUrl configuration&lt;/li&gt; 
 &lt;li&gt;✅ Automatic authType selection&lt;/li&gt; 
 &lt;li&gt;✅ Automatic model configuration (if available)&lt;/li&gt; 
 &lt;li&gt;✅ Reduces configuration from 5+ parameters to 2&lt;/li&gt; 
 &lt;li&gt;✅ Supports both Claude Code and Codex&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Non-interactive Mode Parameters&lt;/h4&gt; 
&lt;p&gt;When using &lt;code&gt;--skip-prompt&lt;/code&gt;, the following parameters are available:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Values&lt;/th&gt; 
   &lt;th&gt;Required&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--skip-prompt, -s&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Skip all interactive prompts&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Yes (for non-interactive mode)&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--provider, -p&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API provider preset (v3.3.0+ New)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;302ai&lt;/code&gt;, &lt;code&gt;glm&lt;/code&gt;, &lt;code&gt;minimax&lt;/code&gt;, &lt;code&gt;kimi&lt;/code&gt;, &lt;code&gt;custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Simplifies configuration by auto-filling baseUrl and models)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--lang, -l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ZCF display language (applies to all commands)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt; or user's saved preference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--config-lang, -c&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configuration language (template files language)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--ai-output-lang, -a&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AI output language&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;, custom string&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--all-lang, -g&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set all language parameters (applies to all commands)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zh-CN&lt;/code&gt;, &lt;code&gt;en&lt;/code&gt;, custom string&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Priority: &lt;code&gt;--all-lang&lt;/code&gt; &amp;gt; &lt;code&gt;--lang&lt;/code&gt; &amp;gt; saved user preference &amp;gt; interactive prompt. Custom string sets AI output language to custom while interaction and config languages remain 'en')&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--config-action, -r&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Config handling&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;new&lt;/code&gt;, &lt;code&gt;backup&lt;/code&gt;, &lt;code&gt;merge&lt;/code&gt;, &lt;code&gt;docs-only&lt;/code&gt;, &lt;code&gt;skip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;backup&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-type, -t&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API configuration type&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;auth_token&lt;/code&gt;, &lt;code&gt;api_key&lt;/code&gt;, &lt;code&gt;ccr_proxy&lt;/code&gt;, &lt;code&gt;skip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;skip&lt;/code&gt; (auto-set to &lt;code&gt;api_key&lt;/code&gt; when &lt;code&gt;--provider&lt;/code&gt; is specified)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-key, -k&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API key (for both API key and auth token types)&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;Required when &lt;code&gt;api-type&lt;/code&gt; is not &lt;code&gt;skip&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-url, -u&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Custom API URL&lt;/td&gt; 
   &lt;td&gt;URL string&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;official API (auto-filled when using &lt;code&gt;--provider&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-model, -M&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Primary API model&lt;/td&gt; 
   &lt;td&gt;string (e.g., &lt;code&gt;claude-sonnet-4-5&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (auto-filled when using &lt;code&gt;--provider&lt;/code&gt; if available)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-fast-model, -F&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Fast API model (Claude Code only)&lt;/td&gt; 
   &lt;td&gt;string (e.g., &lt;code&gt;claude-haiku-4-5&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (auto-filled when using &lt;code&gt;--provider&lt;/code&gt; if available)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--mcp-services, -m&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;MCP services to install (multi-select, comma-separated)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;context7&lt;/code&gt;, &lt;code&gt;open-websearch&lt;/code&gt;, &lt;code&gt;spec-workflow&lt;/code&gt;, &lt;code&gt;mcp-deepwiki&lt;/code&gt;, &lt;code&gt;Playwright&lt;/code&gt;, &lt;code&gt;exa&lt;/code&gt;, &lt;code&gt;serena&lt;/code&gt;, or &lt;code&gt;skip&lt;/code&gt; for none&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--workflows, -w&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Workflows to install (multi-select, comma-separated)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;commonTools&lt;/code&gt;, &lt;code&gt;sixStepsWorkflow&lt;/code&gt;, &lt;code&gt;featPlanUx&lt;/code&gt;, &lt;code&gt;gitWorkflow&lt;/code&gt;, &lt;code&gt;bmadWorkflow&lt;/code&gt;, or &lt;code&gt;skip&lt;/code&gt; for none&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--output-styles, -o&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Output styles to install (multi-select, comma-separated)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;engineer-professional&lt;/code&gt;, &lt;code&gt;nekomata-engineer&lt;/code&gt;, &lt;code&gt;laowang-engineer&lt;/code&gt;, &lt;code&gt;ojousama-engineer&lt;/code&gt;, or &lt;code&gt;skip&lt;/code&gt; for none&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;all&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--default-output-style, -d&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Default output style&lt;/td&gt; 
   &lt;td&gt;Same as output styles plus built-in: &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;explanatory&lt;/code&gt;, &lt;code&gt;learning&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;engineer-professional&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--install-cometix-line, -x&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Install CCometixLine statusline tool&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--code-type, -T&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Target code tool type&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;claude-code&lt;/code&gt;, &lt;code&gt;codex&lt;/code&gt;, &lt;code&gt;cc&lt;/code&gt;, &lt;code&gt;cx&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Current active tool type from ZCF config&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-configs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Multiple API configurations (JSON string)&lt;/td&gt; 
   &lt;td&gt;JSON array string of API configuration objects&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Mutually exclusive with &lt;code&gt;--api-configs-file&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--api-configs-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Multiple API configurations (JSON file path)&lt;/td&gt; 
   &lt;td&gt;Path to JSON file containing API configuration array&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;- (Mutually exclusive with &lt;code&gt;--api-configs&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;🤖 Codex Support (v3.0.0+ New)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@openai/codex"&gt;Codex&lt;/a&gt; is OpenAI's official code generation CLI tool. ZCF now supports complete Codex integration with the same configuration convenience as Claude Code.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Unified Tool Management&lt;/strong&gt;: Switch between Claude Code and Codex seamlessly through ZCF menu&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Configuration&lt;/strong&gt;: Automatic Codex CLI installation, API provider setup, and MCP service integration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Backup System&lt;/strong&gt;: All configuration changes include timestamped backups with recovery capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Provider Support&lt;/strong&gt;: Configure multiple API providers (OpenAI, custom endpoints) with easy switching&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Prompt Integration&lt;/strong&gt;: Install professional AI personalities (Engineer, Nekomata Engineer, Laowang Engineer)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Templates&lt;/strong&gt;: Import structured development workflows optimized for code generation tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Uninstaller&lt;/strong&gt;: Selective removal of Codex components with conflict resolution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Getting Started with Codex:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Switch to Codex mode in ZCF main menu:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf → Select S  # Switch between Claude Code and Codex
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or access Codex features directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Full Codex initialization
npx zcf → Select 1 (after switching to Codex mode)

# Individual Codex configuration
npx zcf → Select 3  # Configure Codex API providers
npx zcf → Select 4  # Configure Codex MCP services
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Configuration Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;API Provider Configuration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Official Login&lt;/strong&gt;: Use OpenAI's official authentication system&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Providers&lt;/strong&gt;: Configure multiple API endpoints with provider switching&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Incremental Management&lt;/strong&gt;: Add, edit, or remove providers without affecting existing configuration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;System Prompt Styles&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Engineer Professional&lt;/strong&gt;: SOLID, KISS, DRY, YAGNI principles for robust code&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Nekomata Engineer&lt;/strong&gt;: Cute catgirl engineer with rigorous technical standards&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Laowang Engineer&lt;/strong&gt;: Grumpy tech style that never tolerates substandard code&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Workflow Integration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Six-Step Workflow&lt;/strong&gt;: Structured development process from research to optimization&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Workflows&lt;/strong&gt;: Import and configure task-specific development templates&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;⚠️ Important&lt;/strong&gt;: Due to Codex prompt limitations, &lt;code&gt;/workflow&lt;/code&gt; commands cannot pass parameters directly. Use &lt;code&gt;/workflow&lt;/code&gt; first, then provide task description in follow-up message&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP Services&lt;/strong&gt;: Full compatibility with existing MCP services including:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Context7, Open WebSearch, Spec Workflow&lt;/li&gt; 
   &lt;li&gt;DeepWiki, Playwright, EXA search&lt;/li&gt; 
   &lt;li&gt;Serena Assistant for semantic code retrieval and editing&lt;/li&gt; 
   &lt;li&gt;Automatic service configuration with API key management&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;File Locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configuration: &lt;code&gt;~/.codex/config.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Authentication: &lt;code&gt;~/.codex/auth.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;System Prompts: &lt;code&gt;~/.codex/AGENTS.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Workflows: &lt;code&gt;~/.codex/prompts/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Backups: &lt;code&gt;~/.codex/backup/&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Migration Between Tools:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ZCF allows seamless switching between Claude Code and Codex while preserving your preferences and workflow configurations. Both tools share the same MCP services and workflow templates for consistent development experience.&lt;/p&gt; 
&lt;h4&gt;🎨 AI Output Styles (v2.12+ New Feature)&lt;/h4&gt; 
&lt;p&gt;ZCF now supports customizable AI output styles to personalize your Claude Code experience:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/Haleclipse"&gt; &lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/Haleclipse.gif" alt="Halley-chan" width="200" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;div align="center"&gt;
 Tsundere 
 &lt;a href="https://github.com/Haleclipse"&gt;Halley-chan&lt;/a&gt; Ojou-sama (￣▽￣)ゞ
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available Output Styles:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;engineer-professional&lt;/code&gt;: Professional software engineer following SOLID, KISS, DRY, YAGNI principles&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;nekomata-engineer&lt;/code&gt;: Professional catgirl engineer UFO Nya, combining rigorous engineering with cute catgirl traits&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;laowang-engineer&lt;/code&gt;: Laowang grumpy tech style, never tolerates code errors and non-standard code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ojousama-engineer&lt;/code&gt;: Tsundere blonde ojou-sama programmer Halley-chan, combining rigorous engineering excellence with tsundere ojou-sama traits&lt;/li&gt; 
 &lt;li&gt;Built-in styles: &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;explanatory&lt;/code&gt;, &lt;code&gt;learning&lt;/code&gt; (always available)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install multiple styles and switch between them&lt;/li&gt; 
 &lt;li&gt;Set global default style for all projects&lt;/li&gt; 
 &lt;li&gt;Automatic cleanup of legacy personality files&lt;/li&gt; 
 &lt;li&gt;Template-based customization system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Usage Tips:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;/output-style&lt;/code&gt; command to switch project-level output styles anytime&lt;/li&gt; 
 &lt;li&gt;Or modify global output styles in ZCF menu option 6&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Claude Code version must be greater than 1.0.81 to support output-style. Use &lt;code&gt;npx zcf check&lt;/code&gt; to update.&lt;/li&gt; 
 &lt;li&gt;Legacy global memory rules have been migrated to the &lt;code&gt;engineer-professional&lt;/code&gt; output style, solving issues with excessive token usage and AI forgetting global memory.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🎯 BMad Workflow (v2.7 New Feature)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/bmad-code-org/BMAD-METHOD"&gt;BMad&lt;/a&gt; (BMad-Method: Universal AI Agent Framework) is an enterprise-grade workflow system that provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Complete team of specialized AI agents (PO, PM, Architect, Dev, QA, etc.)&lt;/li&gt; 
 &lt;li&gt;Structured development process with quality gates&lt;/li&gt; 
 &lt;li&gt;Automatic documentation generation&lt;/li&gt; 
 &lt;li&gt;Support for both greenfield and brownfield projects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After installation, use &lt;code&gt;/bmad-init&lt;/code&gt; to initialize the BMad workflow in your project.&lt;/p&gt; 
&lt;h4&gt;📋 Spec Workflow (v2.12.4+ New Feature)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/Pimzino/spec-workflow-mcp"&gt;Spec Workflow&lt;/a&gt; is a comprehensive MCP service that provides structured feature development workflow from requirements to implementation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Requirements Analysis&lt;/strong&gt;: Structured requirements gathering and documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Design Phase&lt;/strong&gt;: Detailed technical design and architecture planning&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Management&lt;/strong&gt;: Automatic task breakdown and progress tracking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Implementation Workflow&lt;/strong&gt;: Systematic approach from requirements to implementation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interactive Dashboard&lt;/strong&gt;: Built-in dashboard for workflow visualization and management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Approval System&lt;/strong&gt;: Review and approval process for each development phase&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Spec Workflow MCP provides an optional dashboard for workflow visualization. Users can manually launch the dashboard using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx -y @pimzino/spec-workflow-mcp@latest --dashboard
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can install the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Pimzino.spec-workflow-mcp"&gt;VS Code extension&lt;/a&gt; for integrated workflow management.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Usage Guide&lt;/strong&gt;: For detailed usage instructions and best practices, see the &lt;a href="https://github.com/Pimzino/spec-workflow-mcp/raw/main/README.md#quick-start"&gt;official Spec Workflow documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;🔍 Open Web Search (v2.12.9+ New Feature)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/Aas-ee/open-webSearch"&gt;Open Web Search&lt;/a&gt; is a versatile web search MCP service that provides access to multiple search engines:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Engine Support&lt;/strong&gt;: Search across DuckDuckGo, Bing, and Brave search engines&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy-Focused&lt;/strong&gt;: Uses privacy-respecting search engines as defaults&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Configuration&lt;/strong&gt;: Customizable search engine preferences&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No API Key Required&lt;/strong&gt;: Ready to use without additional authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Search Aggregation&lt;/strong&gt;: Ability to combine results from multiple engines&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🚀 CCR (Claude Code Router) Support (v2.8+ Enhanced)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/musistudio/claude-code-router/raw/main/README.md"&gt;CCR&lt;/a&gt; is a powerful proxy router that enables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Free Model Access&lt;/strong&gt;: Use free AI models (like Gemini, DeepSeek) through Claude Code interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Routing&lt;/strong&gt;: Route different types of requests to different models based on your rules&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cost Optimization&lt;/strong&gt;: Significantly reduce API costs by using appropriate models for different tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Management&lt;/strong&gt;: Interactive menu for CCR configuration and service control&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto Updates&lt;/strong&gt;: Automatic version checking and updates for CCR and Claude Code (v2.8.1+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To access CCR features:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf ccr      # Open CCR management menu
# or
npx zcf → select R
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;CCR menu options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Initialize CCR - Install and configure CCR with preset providers&lt;/li&gt; 
 &lt;li&gt;Start UI - Launch CCR web interface for advanced configuration&lt;/li&gt; 
 &lt;li&gt;Service Control - Start/stop/restart CCR service&lt;/li&gt; 
 &lt;li&gt;Check Status - View current CCR service status&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;After CCR setup, ZCF automatically configures Claude Code to use CCR as the API proxy.&lt;/p&gt; 
&lt;h4&gt;📊 CCometixLine Support (Status Bar Tool) (v2.9.9+ New)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/Haleclipse/CCometixLine"&gt;CCometixLine&lt;/a&gt; is a high-performance Rust-based statusline tool that provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Usage Tracking&lt;/strong&gt;: Monitor Claude Code API usage in real-time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Git Integration&lt;/strong&gt;: Display Git status and branch information&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Status Line Display&lt;/strong&gt;: Native integration with your terminal statusline&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Optimized&lt;/strong&gt;: Built with Rust for minimal resource usage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TUI Configuration&lt;/strong&gt;: Interactive terminal UI for customizing themes, segments, and display options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto Updates&lt;/strong&gt;: Included in ZCF's update checking system&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CCometixLine menu options (accessible via &lt;code&gt;npx zcf&lt;/code&gt; → &lt;code&gt;L&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;1&lt;/code&gt; Install or Update - Install or update CCometixLine using npm&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2&lt;/code&gt; Print Default Configuration - Display current CCometixLine configuration&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;3&lt;/code&gt; Custom Config - TUI Configuration Mode - Interactive terminal UI for customizing settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Important Note for v2.9.9 Users&lt;/strong&gt;: If you have previously used ZCF v2.9.9 to set up your environment, please re-run the initialization process to ensure CCometixLine configuration is properly added. Run &lt;code&gt;npx zcf&lt;/code&gt; and select the appropriate setup option to update your configuration with CCometixLine support.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🚀 Check for updates (v2.8.1+, CCometixLine support v2.9.9+):&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx zcf check-updates  # Check and update Claude Code, CCR and CCometixLine to latest versions
# or
npx zcf → select +
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setup Process&lt;/h3&gt; 
&lt;p&gt;Full initialization (&lt;code&gt;npx zcf&lt;/code&gt;) will automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Detect and install Claude Code&lt;/li&gt; 
 &lt;li&gt;✅ Select AI output language (new feature)&lt;/li&gt; 
 &lt;li&gt;✅ Configure API keys or CCR proxy&lt;/li&gt; 
 &lt;li&gt;✅ Select and configure MCP services&lt;/li&gt; 
 &lt;li&gt;✅ Set up all necessary configuration files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;After configuration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;For first-time project use, strongly recommend running &lt;code&gt;/init-project&lt;/code&gt; to generate CLAUDE.md for better AI understanding of project architecture&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;task description&amp;gt;&lt;/code&gt; - Execute directly without workflow, following SOLID, KISS, DRY, and YAGNI principles, suitable for small tasks like bug fixes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/feat &amp;lt;task description&amp;gt;&lt;/code&gt; - Start new feature development, divided into plan and UI phases&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/workflow &amp;lt;task description&amp;gt;&lt;/code&gt; - Execute complete development workflow, not automated, starts with multiple solution options, asks for user feedback at each step, allows plan modifications, maximum control&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;PS&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Both feat and workflow have their advantages, try both to compare&lt;/li&gt; 
  &lt;li&gt;Generated documents are located by default at &lt;code&gt;.claude/xxx.md&lt;/code&gt; in project root, you can add &lt;code&gt;.claude/&lt;/code&gt; to your project's &lt;code&gt;.gitignore&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;✨ ZCF Tool Features&lt;/h2&gt; 
&lt;h3&gt;🌏 Multi-language Support&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Script interaction language: Controls installation prompts language&lt;/li&gt; 
 &lt;li&gt;Configuration file language: Determines which configuration set to install (zh-CN/en)&lt;/li&gt; 
 &lt;li&gt;AI output language: Choose the language for AI responses (supports Chinese, English, and custom languages)&lt;/li&gt; 
 &lt;li&gt;AI output styles: Support multiple preset styles (Professional Engineer, Nekomata Engineer, Laowang Engineer, Ojou-sama Engineer) for customized experience&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 Smart Installation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Auto-detects Claude Code installation status&lt;/li&gt; 
 &lt;li&gt;Uses npm for automatic installation (ensures compatibility)&lt;/li&gt; 
 &lt;li&gt;Cross-platform support (Windows/macOS/Linux/WSL/Termux)&lt;/li&gt; 
 &lt;li&gt;Automatic MCP service configuration&lt;/li&gt; 
 &lt;li&gt;Smart configuration merging and partial modification support (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;Enhanced command detection mechanism (v2.1 new)&lt;/li&gt; 
 &lt;li&gt;Dangerous operation confirmation mechanism (v2.3 new)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📦 Complete Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CLAUDE.md system instructions&lt;/li&gt; 
 &lt;li&gt;settings.json configuration file&lt;/li&gt; 
 &lt;li&gt;commands custom commands&lt;/li&gt; 
 &lt;li&gt;agents AI agent configurations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔐 API Configuration&lt;/h3&gt; 
&lt;p&gt;ZCF provides flexible API configuration options for both Claude Code and Codex:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Quick Setup with API Provider Presets (v3.3.0+ New):&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Choose from popular API providers with pre-configured settings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;302.AI&lt;/strong&gt; - Pay-as-you-go AI service with comprehensive model support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GLM (智谱AI)&lt;/strong&gt; - Zhipu AI's GLM models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MiniMax&lt;/strong&gt; - MiniMax AI service&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kimi (Moonshot AI)&lt;/strong&gt; - Moonshot's Kimi models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Configuration&lt;/strong&gt; - Full manual configuration for any provider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When using a preset provider, you only need to:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Select the provider from the list&lt;/li&gt; 
 &lt;li&gt;Enter your API key&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The system automatically configures:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;API base URL&lt;/li&gt; 
 &lt;li&gt;Authentication type (API Key or Auth Token)&lt;/li&gt; 
 &lt;li&gt;Default models (if applicable)&lt;/li&gt; 
 &lt;li&gt;Wire API protocol (for Codex)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Traditional Configuration Methods:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Official Login&lt;/strong&gt;: Use official authentication system (no API configuration needed)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auth Token&lt;/strong&gt;: For tokens obtained via OAuth or browser login&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API Key&lt;/strong&gt;: For API keys from Anthropic Console or custom providers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CCR Proxy&lt;/strong&gt;: Configure Claude Code Router proxy&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom API URL&lt;/strong&gt;: Support for any compatible API endpoint&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Partial Modification&lt;/strong&gt;: Update only needed configuration items (v2.0+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💾 Configuration Management&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Smart backup of existing configurations (all backups saved in ~/.claude/backup/)&lt;/li&gt; 
 &lt;li&gt;Configuration merge option (v2.0 enhanced: supports deep merge)&lt;/li&gt; 
 &lt;li&gt;Safe overwrite mechanism&lt;/li&gt; 
 &lt;li&gt;Automatic backup before MCP configuration changes&lt;/li&gt; 
 &lt;li&gt;Default model configuration (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;AI memory management (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;ZCF cache cleanup (v2.0 new)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 Multi-Configuration Management (v3.2.0 New)&lt;/h3&gt; 
&lt;p&gt;Unified, incremental, interactive management for both Claude Code and Codex:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Claude Code: Manage API profiles (add/edit/delete, default profile, duplicate detection)&lt;/li&gt; 
 &lt;li&gt;Codex: Manage model providers (list/switch, official login via interactive)&lt;/li&gt; 
 &lt;li&gt;Safe backups; prevents deleting the last profile (Claude Code)&lt;/li&gt; 
 &lt;li&gt;Applies environment to &lt;code&gt;~/.claude/settings.json&lt;/code&gt; and restarts CCR when needed&lt;/li&gt; 
 &lt;li&gt;Config storage: &lt;code&gt;~/.ufomiao/zcf/config.toml&lt;/code&gt; (backups &lt;code&gt;config.backup.YYYY-MM-DD_HH-mm-ss.toml&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose tool type explicitly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# -T accepts: claude-code|codex or short aliases cc|cx
npx zcf cs --list -T cc    # List Claude Code profiles
npx zcf cs --list -T cx    # List Codex providers
npx zcf cs -l -T cc        # Short option for --list
npx zcf cs -l -T cx        # Short option for --list
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Claude Code usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Quick switch
npx zcf cs official -T cc  # Switch to official login
npx zcf cs ccr -T cc       # Switch to CCR proxy
npx zcf cs my-profile -T cc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Codex usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# List and switch providers
npx zcf cs --list -T cx
npx zcf cs my-provider -T cx

# Switch to official login (interactive selection)
npx zcf config-switch -T cx
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ENV mapping (Claude Code): API Key → &lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;, Auth Token → &lt;code&gt;ANTHROPIC_AUTH_TOKEN&lt;/code&gt;, Base URL → &lt;code&gt;ANTHROPIC_BASE_URL&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Active code tool type is stored in ZCF config; use &lt;code&gt;-T cc/cx&lt;/code&gt; only when targeting a different tool than the current one.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📖 Usage Instructions&lt;/h2&gt; 
&lt;h3&gt;Interactive Menu (v2.0)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ npx zcf

 ZCF - Zero-Config Code Flow

? Select ZCF display language / 选择ZCF显示语言:
  ❯ 简体中文
    English

Select function:
  -------- Claude Code --------
  1. Full initialization - Install Claude Code + Import workflow + Configure API or CCR proxy + Configure MCP services
  2. Import workflow - Import/update workflow-related files only
  3. Configure API - Configure API URL and authentication (supports CCR proxy)
  4. Configure MCP - Configure MCP services (includes Windows fix)
  5. Configure default model - Set default model (opus/sonnet/sonnet 1m/custom)
  6. Configure Claude global memory - Configure AI output language and output styles
  7. Import recommended environment variables and permissions - Import privacy protection environment variables and system permissions

  --------- Other Tools ----------
  R. CCR - Claude Code Router management
  U. ccusage - Claude Code usage analysis
  L. CCometixLine - High-performance statusline tool with Git integration and real-time usage tracking

  ------------ ZCF ------------
  0. Select display language / 更改显示语言 - Change ZCF interface language
  -. Uninstall - Remove Claude Code configurations and tools from system
  +. Check updates - Check and update Claude Code, CCR and CCometixLine versions
  Q. Exit

Enter your choice: _
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Full Initialization Flow (Select 1 or use &lt;code&gt;zcf i&lt;/code&gt;)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;? Select Claude Code configuration language:
  ❯ English (en) - English (recommended, lower token consumption)
    简体中文 (zh-CN) - Chinese (easier for Chinese users to customize)
    日本語 (ja) - Japanese (日本のユーザー向け)

? Select AI output language:
  AI will respond to you in this language
  ❯ English
    简体中文
    日本語
    Custom
    (Supports French, German, and more)

? Claude Code not found. Install automatically? (Y/n)

✔ Claude Code installed successfully

? Existing config detected. How to proceed?
  ❯ Backup and overwrite - Backup existing config to ~/.claude/backup/
    Update docs only - Only update workflows and docs, keep existing API config
    Merge config - Merge with existing config, preserve user customizations
    Skip - Skip configuration update

? Select API authentication method
  ❯ Use Official Login
    Use official authentication system without API configuration
    Use Auth Token (OAuth authentication)
    For tokens obtained via OAuth or browser login
    Use API Key (Key authentication)
    For API keys from Anthropic Console
    Configure CCR Proxy (Claude Code Router)
    Use multiple AI models via proxy routing to reduce costs and explore possibilities
    Skip (configure manually later)

? Enter API URL: https://api.anthropic.com
? Enter Auth Token or API Key: xxx

? Select output styles to install:
  ❯ Engineer Professional - Professional software engineer following SOLID, KISS, DRY, YAGNI principles
    Nekomata Engineer - Professional catgirl engineer UFO Nya, combining rigorous engineering with cute catgirl traits
    Laowang Grumpy Tech - Laowang grumpy tech style, never tolerates code errors and non-standard code
    Ojou-sama Engineer - Tsundere blonde ojou-sama programmer Halley-chan, combining rigorous engineering excellence with tsundere ojou-sama traits

? Select global default output style:
  ❯ Engineer Professional

? Select workflows to install (space to select, enter to confirm):
❯ ◉ Common Tools (init-project + init-architect + get-current-datetime) - Essential project initialization and utility commands
◉ Six Steps Workflow (workflow) - Complete 6-phase development process
◉ Feature Planning and UX Design (feat + planner + ui-ux-designer) - Structured feature development
◉ Git Commands (commit + rollback + cleanBranches + worktree) - Streamlined Git operations
◉ BMAD-Method Extension Installer - Enterprise agile development workflow

✔ Installing workflows...
✔ Installed command: zcf/workflow.md
✔ Installed command: zcf/feat.md
✔ Installed agent: zcf/plan/planner.md
✔ Installed agent: zcf/plan/ui-ux-designer.md
✔ Installed command: zcf/git/git-commit.md
✔ Installed command: zcf/git/git-rollback.md
✔ Installed command: zcf/git/git-cleanBranches.md
✔ Installed command: zcf/git/git-worktree.md
✔ Installed command: zcf/bmad-init.md
✔ Workflow installation successful

? Configure MCP services? (Y/n)

? Select MCP services to install (space to select, enter to confirm):
❯ ◉ Context7 Documentation Query - Query latest library docs and code examples
◉ DeepWiki - Query GitHub repository docs and examples
◉ Playwright Browser Control - Direct browser automation control
◉ Exa AI Search - Web search using Exa AI
◉ Serena Assistant - Semantic code retrieval and editing akin to an IDE
◯ Install all services

✔ MCP services configured

? Install CCometixLine statusline tool? (Y/n)

✔ Setup complete! Claude Code environment is ready

🎉 Setup complete! Use 'claude' command to start.

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Command Line Options&lt;/h3&gt; 
&lt;h4&gt;Commands Quick Reference&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Show interactive menu (v2.0 default command)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf init&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zcf i&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Initialize Claude Code configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf update&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zcf u&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Update workflow-related md files with backup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf ccu&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Run Claude Code usage analysis tool - &lt;a href="https://github.com/ryoppippi/ccusage"&gt;ccusage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf ccr&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Open CCR (Claude Code Router) management menu&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf config-switch&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;zcf cs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;API provider/config switching for Claude Code and Codex (&lt;code&gt;-T cc&lt;/code&gt; / &lt;code&gt;-T cx&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf uninstall&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Interactive uninstall tool for Claude Code configurations and tools&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;zcf check-updates&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Check and update Claude Code, CCR and CCometixLine versions&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Common Options&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Specify configuration language
npx zcf --config-lang zh-CN
npx zcf -c zh-CN            # Using short option

# Force overwrite existing configuration
npx zcf --force
npx zcf -f                 # Using short option

# Update workflow-related md files with backup (preserve API and MCP configs)
npx zcf u                  # Using update command
npx zcf update             # Full command

# Show help information
npx zcf --help
npx zcf -h

# Show version
npx zcf --version
npx zcf -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Usage Examples&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Show interactive menu (default)
npx zcf

# First-time installation, complete initialization
npx zcf i
npx zcf init              # Full command

# Update workflow-related md files with backup, keep API and MCP configs
npx zcf u
npx zcf update            # Full command

# Force reinitialize with Chinese config
npx zcf i --config-lang zh-CN --force
npx zcf i -c zh-CN -f      # Using short options

# Update to English prompts (lower token consumption)
npx zcf u --config-lang en
npx zcf u -c en            # Using short option

# Run Claude Code usage analysis tool (powered by ccusage)
npx zcf ccu               # Daily usage (default), or use: monthly, session, blocks

# Codex API provider switching (v3.0.0+ New)
npx zcf config-switch     # Interactive provider selection
npx zcf cs                # Using alias
npx zcf cs provider-name  # Direct switch to specified provider
npx zcf cs --list         # List all available providers
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📁 Project Structure&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;zcf/
├── README.md              # Documentation
├── package.json           # npm package configuration
├── bin/
│   └── zcf.mjs           # CLI entry point
├── src/                  # Source code
│   ├── cli.ts           # CLI main logic
│   ├── commands/        # Command implementations
│   ├── utils/           # Utility functions
│   └── constants.ts     # Constant definitions
├── templates/            # Configuration templates
│   ├── CLAUDE.md        # Project level config (v2.0 new)
│   ├── settings.json    # Base configuration (with privacy env vars)
│   ├── en/              # English version
│   │   ├── rules.md     # Core principles (formerly CLAUDE.md)
│   │   ├── output-styles/ # AI output styles (v2.12+ new)
│   │   ├── mcp.md       # MCP services guide (v2.0 new)
│   │   ├── agents/      # AI agents
│   │   └── commands/    # Command definitions
│   └── zh-CN/           # Chinese version
│       └── ... (same structure)
└── dist/                # Build output
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;✨ Core Features (v2.0 Enhanced)&lt;/h2&gt; 
&lt;h3&gt;🤖 Professional Agents&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Task Planner&lt;/strong&gt;: Breaks down complex tasks into executable steps&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI/UX Designer&lt;/strong&gt;: Provides professional interface design guidance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Personality&lt;/strong&gt;: Support multiple preset personalities and custom (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;BMad Team&lt;/strong&gt; (New): Complete agile development team including: 
  &lt;ul&gt; 
   &lt;li&gt;Product Owner (PO): Requirements elicitation and prioritization&lt;/li&gt; 
   &lt;li&gt;Project Manager (PM): Planning and coordination&lt;/li&gt; 
   &lt;li&gt;System Architect: Technical design and architecture&lt;/li&gt; 
   &lt;li&gt;Developer: Implementation and coding&lt;/li&gt; 
   &lt;li&gt;QA Engineer: Testing and quality assurance&lt;/li&gt; 
   &lt;li&gt;Scrum Master (SM): Process facilitation&lt;/li&gt; 
   &lt;li&gt;Business Analyst: Requirements analysis&lt;/li&gt; 
   &lt;li&gt;UX Expert: User experience design&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚡ Command System&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Feature Development&lt;/strong&gt; (&lt;code&gt;/feat&lt;/code&gt;): Structured new feature development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow&lt;/strong&gt; (&lt;code&gt;/workflow&lt;/code&gt;): Complete six-phase development workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Git Commands&lt;/strong&gt;: Streamlined Git operations 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;/git-commit&lt;/code&gt;: Smart commit with automatic staging and message generation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/git-rollback&lt;/code&gt;: Safely rollback to previous commits with backup&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/git-cleanBranches&lt;/code&gt;: Clean up merged branches and maintain repository hygiene&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/git-worktree&lt;/code&gt;: Manage Git worktrees with IDE integration and content migration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;BMad Workflow&lt;/strong&gt; (&lt;code&gt;/bmad-init&lt;/code&gt;): Initialize BMad workflow for enterprise development 
  &lt;ul&gt; 
   &lt;li&gt;Supports both greenfield (new projects) and brownfield (existing projects)&lt;/li&gt; 
   &lt;li&gt;Provides comprehensive templates for PRDs, architecture docs, and user stories&lt;/li&gt; 
   &lt;li&gt;Integrated quality gates and checklist system&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔧 Smart Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;API key management (supports partial modification)&lt;/li&gt; 
 &lt;li&gt;Fine-grained permission control&lt;/li&gt; 
 &lt;li&gt;Multiple Claude model support (configurable default model)&lt;/li&gt; 
 &lt;li&gt;Interactive menu system (v2.0 new)&lt;/li&gt; 
 &lt;li&gt;AI memory management (v2.0 new)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎯 Development Workflow&lt;/h2&gt; 
&lt;h3&gt;Six-Phase Workflow&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;[Mode: Research] - Understand requirements&lt;/li&gt; 
 &lt;li&gt;[Mode: Ideate] - Design solutions&lt;/li&gt; 
 &lt;li&gt;[Mode: Plan] - Create detailed plan&lt;/li&gt; 
 &lt;li&gt;[Mode: Execute] - Implement development&lt;/li&gt; 
 &lt;li&gt;[Mode: Optimize] - Improve quality&lt;/li&gt; 
 &lt;li&gt;[Mode: Review] - Final assessment&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🛠️ Development&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the project
git clone https://github.com/UfoMiao/zcf.git
cd zcf

# Install dependencies (using pnpm)
pnpm install

# Build project
pnpm build

# Local testing
node bin/zcf.mjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💡 Best Practices&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Task Breakdown&lt;/strong&gt;: Keep tasks independent and testable&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Quality&lt;/strong&gt;: Follow SOLID, KISS, DRY, and YAGNI principles&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation Management&lt;/strong&gt;: The plan will be stored in the &lt;code&gt;.claude/plan/&lt;/code&gt; directory at the project root&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🔧 Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter issues:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Re-run &lt;code&gt;npx zcf&lt;/code&gt; to reconfigure&lt;/li&gt; 
 &lt;li&gt;Check configuration files in &lt;code&gt;~/.claude/&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;Ensure Claude Code is properly installed&lt;/li&gt; 
 &lt;li&gt;If paths contain spaces, ZCF will automatically handle quote wrapping&lt;/li&gt; 
 &lt;li&gt;Use ripgrep (&lt;code&gt;rg&lt;/code&gt;) preferentially for file searching for better performance&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Cross-Platform Support&lt;/h3&gt; 
&lt;h4&gt;Windows Platform&lt;/h4&gt; 
&lt;p&gt;ZCF fully supports Windows platform:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-detection&lt;/strong&gt;: Automatically uses compatible &lt;code&gt;cmd /c npx&lt;/code&gt; format on Windows systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Config repair&lt;/strong&gt;: Existing incorrect configurations are automatically fixed during updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zero-config&lt;/strong&gt;: Windows users don't need any extra steps, same experience as macOS/Linux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you encounter MCP connection issues on Windows, running &lt;code&gt;npx zcf&lt;/code&gt; will automatically fix the configuration format.&lt;/p&gt; 
&lt;h4&gt;WSL Support (v2.12.12+ new)&lt;/h4&gt; 
&lt;p&gt;ZCF now provides comprehensive support for Windows Subsystem for Linux (WSL):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Detection&lt;/strong&gt;: Multi-layered WSL environment detection using environment variables, system files, and mount points&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distribution Recognition&lt;/strong&gt;: Automatically identifies WSL distribution (Ubuntu, Debian, etc.) for optimized configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Installation&lt;/strong&gt;: Native Linux-style installation experience within WSL environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Path Management&lt;/strong&gt;: Intelligent handling of WSL-specific configuration paths and file locations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If running in WSL, ZCF will automatically detect the environment and display appropriate installation messages.&lt;/p&gt; 
&lt;h4&gt;Termux Support (v2.1 new)&lt;/h4&gt; 
&lt;p&gt;ZCF now supports running in Android Termux environment:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-adaptation&lt;/strong&gt;: Automatically detects Termux environment and uses compatible configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced detection&lt;/strong&gt;: Intelligently identifies available commands, ensuring normal operation in restricted environments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full functionality&lt;/strong&gt;: Enjoy the same complete features in Termux as on desktop systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Security Features (v2.3 new)&lt;/h3&gt; 
&lt;h4&gt;Dangerous Operation Confirmation Mechanism&lt;/h4&gt; 
&lt;p&gt;To protect user data security, the following operations require explicit confirmation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;File System&lt;/strong&gt;: Delete files/directories, bulk modifications, move system files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Commits&lt;/strong&gt;: &lt;code&gt;git commit&lt;/code&gt;, &lt;code&gt;git push&lt;/code&gt;, &lt;code&gt;git reset --hard&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Config&lt;/strong&gt;: Modify environment variables, system settings, permissions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Operations&lt;/strong&gt;: Database deletions, schema changes, bulk updates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Network Requests&lt;/strong&gt;: Send sensitive data, call production APIs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Package Management&lt;/strong&gt;: Global install/uninstall, update core dependencies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙏 Acknowledgments&lt;/h2&gt; 
&lt;p&gt;This project is inspired by and incorporates the following open source projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://linux.do"&gt;LINUX DO - The New Ideal Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/musistudio/claude-code-router"&gt;CCR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Haleclipse/CCometixLine"&gt;CCometixLine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryoppippi/ccusage"&gt;ccusage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmad-code-org/BMAD-METHOD"&gt;BMad Method&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks to these community contributors for sharing!&lt;/p&gt; 
&lt;h2&gt;❤️ Support &amp;amp; Sponsorship&lt;/h2&gt; 
&lt;p&gt;If you find this project helpful, please consider sponsoring its development. Your support is greatly appreciated!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/UfoMiao"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/alipay.webp" width="200" alt="Alipay" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/UfoMiao/zcf/main/src/assets/wechat.webp" width="200" alt="WeChat Pay" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Our Sponsors&lt;/h3&gt; 
&lt;p&gt;A huge thank you to all our sponsors for their generous support!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://share.302.ai/gAT9VG"&gt;302.AI&lt;/a&gt; (first corporate sponsorship 🤠)&lt;/li&gt; 
 &lt;li&gt;Tc (first sponsor)&lt;/li&gt; 
 &lt;li&gt;Argolinhas (first ko-fi sponsor ٩(•̤̀ᵕ•̤́๑))&lt;/li&gt; 
 &lt;li&gt;r*r (first anonymous sponsor 🤣)&lt;/li&gt; 
 &lt;li&gt;**康 (first KFC sponsor 🍗)&lt;/li&gt; 
 &lt;li&gt;*东 (first coffee sponsor ☕️)&lt;/li&gt; 
 &lt;li&gt;炼*3 (first Termux user sponsor 📱)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chamo101"&gt;chamo101&lt;/a&gt; (first GitHub issue sponsor 🎉)&lt;/li&gt; 
 &lt;li&gt;初屿贤 (first Codex user sponsor 🙅🏻‍♂️)&lt;/li&gt; 
 &lt;li&gt;Protein (first 1688 sponsor 😏)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BeatSeat"&gt;BeatSeat&lt;/a&gt; (community expert 😎, provided $1000 Claude credits)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wenwen12345"&gt;wenwen&lt;/a&gt; (community expert 🤓, provided daily $100 Claude&amp;amp;GPT credits)&lt;/li&gt; 
 &lt;li&gt;16°C coffee (My best friend 🤪, offered ChatGPT Pro $200 package)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Promotion Thanks&lt;/h3&gt; 
&lt;p&gt;Thanks to the following authors for promoting this project:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;逛逛 GitHub, article: &lt;a href="https://mp.weixin.qq.com/s/phqwSRb16MKCHHVozTFeiQ"&gt;https://mp.weixin.qq.com/s/phqwSRb16MKCHHVozTFeiQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Geek, tweet: &lt;a href="https://x.com/geekbb/status/1955174718618866076"&gt;https://x.com/geekbb/status/1955174718618866076&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/UfoMiao/zcf/main/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/UfoMiao/zcf/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=UfoMiao/zcf" /&gt; &lt;/a&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;h2&gt;⭐️ Star History&lt;/h2&gt; 
&lt;p&gt;If this project helps you, please give me a ⭐️ Star!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#UfoMiao/zcf&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=UfoMiao/zcf&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Badges --&gt;</description>
    </item>
    
    <item>
      <title>lfnovo/open-notebook</title>
      <link>https://github.com/lfnovo/open-notebook</link>
      <description>&lt;p&gt;An Open Source implementation of Notebook LM with more flexibility and features&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a id="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Contributors][contributors-shield]][contributors-url] --&gt; 
&lt;p&gt;&lt;a href="https://github.com/lfnovo/open-notebook/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/lfnovo/open-notebook.svg?style=for-the-badge" alt="Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lfnovo/open-notebook/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/lfnovo/open-notebook.svg?style=for-the-badge" alt="Stargazers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;&lt;img src="https://img.shields.io/github/issues/lfnovo/open-notebook.svg?style=for-the-badge" alt="Issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lfnovo/open-notebook/raw/master/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/lfnovo/open-notebook.svg?style=for-the-badge" alt="MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![LinkedIn][linkedin-shield]][linkedin-url] --&gt; 
&lt;!-- PROJECT LOGO --&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/lfnovo/open-notebook"&gt; &lt;img src="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/assets/hero.svg?sanitize=true" alt="Logo" /&gt; &lt;/a&gt; 
 &lt;h3 align="center"&gt;Open Notebook&lt;/h3&gt; 
 &lt;p align="center"&gt; An open source, privacy-focused alternative to Google's Notebook LM! &lt;br /&gt;&lt;strong&gt;Join our &lt;a href="https://discord.gg/37XJPXfz2w"&gt;Discord server&lt;/a&gt; for help, to share workflow ideas, and suggest features!&lt;/strong&gt; &lt;br /&gt; &lt;a href="https://www.open-notebook.ai"&gt;&lt;strong&gt;Checkout our website »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/index.md"&gt;📚 Get Started&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/index.md"&gt;📖 User Guide&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/index.md"&gt;✨ Features&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/index.md"&gt;🚀 Deploy&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; 
 &lt;a href="https://zdoc.app/de/lfnovo/open-notebook"&gt;Deutsch&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/es/lfnovo/open-notebook"&gt;Español&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/fr/lfnovo/open-notebook"&gt;français&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/ja/lfnovo/open-notebook"&gt;日本語&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/ko/lfnovo/open-notebook"&gt;한국어&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/pt/lfnovo/open-notebook"&gt;Português&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/ru/lfnovo/open-notebook"&gt;Русский&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/zh/lfnovo/open-notebook"&gt;中文&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;A private, multi-model, 100% local, full-featured alternative to Notebook LM&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/assets/asset_list.png" alt="New Notebook" /&gt;&lt;/p&gt; 
&lt;p&gt;In a world dominated by Artificial Intelligence, having the ability to think 🧠 and acquire new knowledge 💡, is a skill that should not be a privilege for a few, nor restricted to a single provider.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Open Notebook empowers you to:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Control your data&lt;/strong&gt; - Keep your research private and secure&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Choose your AI models&lt;/strong&gt; - Support for 16+ providers including OpenAI, Anthropic, Ollama, LM Studio, and more&lt;/li&gt; 
 &lt;li&gt;📚 &lt;strong&gt;Organize multi-modal content&lt;/strong&gt; - PDFs, videos, audio, web pages, and more&lt;/li&gt; 
 &lt;li&gt;🎙️ &lt;strong&gt;Generate professional podcasts&lt;/strong&gt; - Advanced multi-speaker podcast generation&lt;/li&gt; 
 &lt;li&gt;🔍 &lt;strong&gt;Search intelligently&lt;/strong&gt; - Full-text and vector search across all your content&lt;/li&gt; 
 &lt;li&gt;💬 &lt;strong&gt;Chat with context&lt;/strong&gt; - AI conversations powered by your research&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more about our project at &lt;a href="https://www.open-notebook.ai"&gt;https://www.open-notebook.ai&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚠️ IMPORTANT: v1.0 Breaking Changes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If you're upgrading from a previous version&lt;/strong&gt;, please note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏷️ &lt;strong&gt;Docker tags have changed&lt;/strong&gt;: The &lt;code&gt;latest&lt;/code&gt; tag is now &lt;strong&gt;frozen&lt;/strong&gt; at the last Streamlit version&lt;/li&gt; 
 &lt;li&gt;🆕 &lt;strong&gt;Use &lt;code&gt;v1-latest&lt;/code&gt; tag&lt;/strong&gt; for the new React/Next.js version (recommended)&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;strong&gt;Port 5055 required&lt;/strong&gt;: You must expose port 5055 for the API to work&lt;/li&gt; 
 &lt;li&gt;📖 &lt;strong&gt;Read the migration guide&lt;/strong&gt;: See &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/MIGRATION.md"&gt;MIGRATION.md&lt;/a&gt; for detailed upgrade instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;New users&lt;/strong&gt;: You can ignore this notice and proceed with the Quick Start below using the &lt;code&gt;v1-latest-single&lt;/code&gt; tag.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🆚 Open Notebook vs Google Notebook LM&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Open Notebook&lt;/th&gt; 
   &lt;th&gt;Google Notebook LM&lt;/th&gt; 
   &lt;th&gt;Advantage&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Privacy &amp;amp; Control&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Self-hosted, your data&lt;/td&gt; 
   &lt;td&gt;Google cloud only&lt;/td&gt; 
   &lt;td&gt;Complete data sovereignty&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AI Provider Choice&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;16+ providers (OpenAI, Anthropic, Ollama, LM Studio, etc.)&lt;/td&gt; 
   &lt;td&gt;Google models only&lt;/td&gt; 
   &lt;td&gt;Flexibility and cost optimization&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Podcast Speakers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1-4 speakers with custom profiles&lt;/td&gt; 
   &lt;td&gt;2 speakers only&lt;/td&gt; 
   &lt;td&gt;Extreme flexibility&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Context Control&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3 granular levels&lt;/td&gt; 
   &lt;td&gt;All-or-nothing&lt;/td&gt; 
   &lt;td&gt;Privacy and performance tuning&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Content Transformations&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Custom and built-in&lt;/td&gt; 
   &lt;td&gt;Limited options&lt;/td&gt; 
   &lt;td&gt;Unlimited processing power&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;API Access&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Full REST API&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;Complete automation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Deployment&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Docker, cloud, or local&lt;/td&gt; 
   &lt;td&gt;Google hosted only&lt;/td&gt; 
   &lt;td&gt;Deploy anywhere&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Citations&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Comprehensive with sources&lt;/td&gt; 
   &lt;td&gt;Basic references&lt;/td&gt; 
   &lt;td&gt;Research integrity&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Customization&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Open source, fully customizable&lt;/td&gt; 
   &lt;td&gt;Closed system&lt;/td&gt; 
   &lt;td&gt;Unlimited extensibility&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cost&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Pay only for AI usage&lt;/td&gt; 
   &lt;td&gt;Monthly subscription + usage&lt;/td&gt; 
   &lt;td&gt;Transparent and controllable&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Why Choose Open Notebook?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Privacy First&lt;/strong&gt;: Your sensitive research stays completely private&lt;/li&gt; 
 &lt;li&gt;💰 &lt;strong&gt;Cost Control&lt;/strong&gt;: Choose cheaper AI providers or run locally with Ollama&lt;/li&gt; 
 &lt;li&gt;🎙️ &lt;strong&gt;Better Podcasts&lt;/strong&gt;: Full script control and multi-speaker flexibility vs limited 2-speaker deep-dive format&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Unlimited Customization&lt;/strong&gt;: Modify, extend, and integrate as needed&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;No Vendor Lock-in&lt;/strong&gt;: Switch providers, deploy anywhere, own your data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Built With&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.python.org/"&gt;&lt;img src="https://img.shields.io/badge/Python-3776AB?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=white" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://nextjs.org/"&gt;&lt;img src="https://img.shields.io/badge/Next.js-000000?style=for-the-badge&amp;amp;logo=next.js&amp;amp;logoColor=white" alt="Next.js" /&gt;&lt;/a&gt; &lt;a href="https://reactjs.org/"&gt;&lt;img src="https://img.shields.io/badge/React-61DAFB?style=for-the-badge&amp;amp;logo=react&amp;amp;logoColor=black" alt="React" /&gt;&lt;/a&gt; &lt;a href="https://surrealdb.com/"&gt;&lt;img src="https://img.shields.io/badge/SurrealDB-FF5E00?style=for-the-badge&amp;amp;logo=databricks&amp;amp;logoColor=white" alt="SurrealDB" /&gt;&lt;/a&gt; &lt;a href="https://www.langchain.com/"&gt;&lt;img src="https://img.shields.io/badge/LangChain-3A3A3A?style=for-the-badge&amp;amp;logo=chainlink&amp;amp;logoColor=white" alt="LangChain" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Docker Images Available:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Hub&lt;/strong&gt;: &lt;code&gt;lfnovo/open_notebook:v1-latest-single&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Container Registry&lt;/strong&gt;: &lt;code&gt;ghcr.io/lfnovo/open-notebook:v1-latest-single&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both registries contain identical images - choose whichever you prefer!&lt;/p&gt; 
&lt;h3&gt;Choose Your Setup:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%"&gt; &lt;h4&gt;🏠 &lt;strong&gt;Local Machine Setup&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;Perfect if Docker runs on the &lt;strong&gt;same computer&lt;/strong&gt; where you'll access Open Notebook.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir open-notebook &amp;amp;&amp;amp; cd open-notebook

docker run -d \
  --name open-notebook \
  -p 8502:8502 -p 5055:5055 \
  -v ./notebook_data:/app/data \
  -v ./surreal_data:/mydata \
  -e OPENAI_API_KEY=your_key_here \
  -e SURREAL_URL="ws://localhost:8000/rpc" \
  -e SURREAL_USER="root" \
  -e SURREAL_PASSWORD="root" \
  -e SURREAL_NAMESPACE="open_notebook" \
  -e SURREAL_DATABASE="production" \
  lfnovo/open_notebook:v1-latest-single
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Access at:&lt;/strong&gt; &lt;a href="http://localhost:8502"&gt;http://localhost:8502&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="50%"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Remote Server Setup&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;Use this for servers, Raspberry Pi, NAS, Proxmox, or any remote machine.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir open-notebook &amp;amp;&amp;amp; cd open-notebook

docker run -d \
  --name open-notebook \
  -p 8502:8502 -p 5055:5055 \
  -v ./notebook_data:/app/data \
  -v ./surreal_data:/mydata \
  -e OPENAI_API_KEY=your_key_here \
  -e API_URL=http://YOUR_SERVER_IP:5055 \
  -e SURREAL_URL="ws://localhost:8000/rpc" \
  -e SURREAL_USER="root" \
  -e SURREAL_PASSWORD="root" \
  -e SURREAL_NAMESPACE="open_notebook" \
  -e SURREAL_DATABASE="production" \
  lfnovo/open_notebook:v1-latest-single
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Replace &lt;code&gt;YOUR_SERVER_IP&lt;/code&gt;&lt;/strong&gt; with your server's IP (e.g., &lt;code&gt;192.168.1.100&lt;/code&gt;) or domain&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Access at:&lt;/strong&gt; http://YOUR_SERVER_IP:8502&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Critical Setup Notes:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Both ports are required:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Port 8502&lt;/strong&gt;: Web interface (what you see in your browser)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Port 5055&lt;/strong&gt;: API backend (required for the app to function)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;API_URL must match how YOU access the server:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Access via &lt;code&gt;http://192.168.1.100:8502&lt;/code&gt; → set &lt;code&gt;API_URL=http://192.168.1.100:5055&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;✅ Access via &lt;code&gt;http://myserver.local:8502&lt;/code&gt; → set &lt;code&gt;API_URL=http://myserver.local:5055&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;❌ Don't use &lt;code&gt;localhost&lt;/code&gt; for remote servers - it won't work from other devices!&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Using Docker Compose (Recommended for Easy Management)&lt;/h3&gt; 
&lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  open_notebook:
    image: lfnovo/open_notebook:v1-latest-single
    # Or use: ghcr.io/lfnovo/open-notebook:v1-latest-single
    ports:
      - "8502:8502"  # Web UI
      - "5055:5055"  # API (required!)
    environment:
      - OPENAI_API_KEY=your_key_here
      # For remote access, uncomment and set your server IP/domain:
      # - API_URL=http://192.168.1.100:5055
      # Database connection (required for single-container)
      - SURREAL_URL=ws://localhost:8000/rpc
      - SURREAL_USER=root
      - SURREAL_PASSWORD=root
      - SURREAL_NAMESPACE=open_notebook
      - SURREAL_DATABASE=production
    volumes:
      - ./notebook_data:/app/data
      - ./surreal_data:/mydata
    restart: always
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start with: &lt;code&gt;docker compose up -d&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;What gets created:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;open-notebook/
├── docker-compose.yml # Your configuration
├── notebook_data/     # Your notebooks and research content
└── surreal_data/      # Database files
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🆘 Quick Troubleshooting&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Problem&lt;/th&gt; 
   &lt;th&gt;Solution&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;"Unable to connect to server"&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Set &lt;code&gt;API_URL&lt;/code&gt; environment variable to match how you access the server (see remote setup above)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Blank page or errors&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ensure BOTH ports (8502 and 5055) are exposed in your docker command&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Works on server but not from other computers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Don't use &lt;code&gt;localhost&lt;/code&gt; in &lt;code&gt;API_URL&lt;/code&gt; - use your server's actual IP address&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;"404" or "config endpoint" errors&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Don't add &lt;code&gt;/api&lt;/code&gt; to &lt;code&gt;API_URL&lt;/code&gt; - use just &lt;code&gt;http://your-ip:5055&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Still having issues?&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Check our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/troubleshooting/quick-fixes.md"&gt;5-minute troubleshooting guide&lt;/a&gt; or &lt;a href="https://discord.gg/37XJPXfz2w"&gt;join Discord&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;How Open Notebook Works&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;┌─────────────────────────────────────────────────────────┐
│  Your Browser                                           │
│  Access: http://your-server-ip:8502                     │
└────────────────┬────────────────────────────────────────┘
                 │
                 ▼
         ┌───────────────┐
         │   Port 8502   │  ← Next.js Frontend (what you see)
         │   Frontend    │    Also proxies API requests internally!
         └───────┬───────┘
                 │ proxies /api/* requests ↓
                 ▼
         ┌───────────────┐
         │   Port 5055   │  ← FastAPI Backend (handles requests)
         │     API       │
         └───────┬───────┘
                 │
                 ▼
         ┌───────────────┐
         │   SurrealDB   │  ← Database (internal, auto-configured)
         │   (Port 8000) │
         └───────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Points:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;v1.1+&lt;/strong&gt;: Next.js automatically proxies &lt;code&gt;/api/*&lt;/code&gt; requests to the backend, simplifying reverse proxy setup&lt;/li&gt; 
 &lt;li&gt;Your browser loads the frontend from port 8502&lt;/li&gt; 
 &lt;li&gt;The frontend needs to know where to find the API - when accessing remotely, set: &lt;code&gt;API_URL=http://your-server-ip:5055&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Behind reverse proxy?&lt;/strong&gt; You only need to proxy to port 8502 now! See &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/reverse-proxy.md"&gt;Reverse Proxy Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#lfnovo/open-notebook&amp;amp;type=date&amp;amp;legend=top-left"&gt;&lt;img src="https://api.star-history.com/svg?repos=lfnovo/open-notebook&amp;amp;type=date&amp;amp;legend=top-left" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🛠️ Full Installation&lt;/h3&gt; 
&lt;p&gt;For development or customization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/lfnovo/open-notebook
cd open-notebook
make start-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📖 Need Help?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 AI Installation Assistant&lt;/strong&gt;: We have a &lt;a href="https://chatgpt.com/g/g-68776e2765b48191bd1bae3f30212631-open-notebook-installation-assistant"&gt;CustomGPT built to help you install Open Notebook&lt;/a&gt; - it will guide you through each step!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New to Open Notebook?&lt;/strong&gt; Start with our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/index.md"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need installation help?&lt;/strong&gt; Check our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/installation.md"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Want to see it in action?&lt;/strong&gt; Try our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/quick-start.md"&gt;Quick Start Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Provider Support Matrix&lt;/h2&gt; 
&lt;p&gt;Thanks to the &lt;a href="https://github.com/lfnovo/esperanto"&gt;Esperanto&lt;/a&gt; library, we support this providers out of the box!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
   &lt;th&gt;LLM Support&lt;/th&gt; 
   &lt;th&gt;Embedding Support&lt;/th&gt; 
   &lt;th&gt;Speech-to-Text&lt;/th&gt; 
   &lt;th&gt;Text-to-Speech&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Anthropic&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Groq&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Google (GenAI)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vertex AI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ollama&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Perplexity&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ElevenLabs&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Azure OpenAI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Voyage&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xAI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI Compatible*&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;*Supports LM Studio and any OpenAI-compatible endpoint&lt;/p&gt; 
&lt;h2&gt;✨ Key Features&lt;/h2&gt; 
&lt;h3&gt;Core Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔒 Privacy-First&lt;/strong&gt;: Your data stays under your control - no cloud dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Multi-Notebook Organization&lt;/strong&gt;: Manage multiple research projects seamlessly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📚 Universal Content Support&lt;/strong&gt;: PDFs, videos, audio, web pages, Office docs, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 Multi-Model AI Support&lt;/strong&gt;: 16+ providers including OpenAI, Anthropic, Ollama, Google, LM Studio, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎙️ Professional Podcast Generation&lt;/strong&gt;: Advanced multi-speaker podcasts with Episode Profiles&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Intelligent Search&lt;/strong&gt;: Full-text and vector search across all your content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💬 Context-Aware Chat&lt;/strong&gt;: AI conversations powered by your research materials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📝 AI-Assisted Notes&lt;/strong&gt;: Generate insights or write notes manually&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Reasoning Model Support&lt;/strong&gt;: Full support for thinking models like DeepSeek-R1 and Qwen3&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 Content Transformations&lt;/strong&gt;: Powerful customizable actions to summarize and extract insights&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Comprehensive REST API&lt;/strong&gt;: Full programmatic access for custom integrations &lt;a href="http://localhost:5055/docs"&gt;&lt;img src="https://img.shields.io/badge/API-Documentation-blue?style=flat-square" alt="API Docs" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔐 Optional Password Protection&lt;/strong&gt;: Secure public deployments with authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Fine-Grained Context Control&lt;/strong&gt;: Choose exactly what to share with AI models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📎 Citations&lt;/strong&gt;: Get answers with proper source citations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Three-Column Interface&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Sources&lt;/strong&gt;: Manage all your research materials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notes&lt;/strong&gt;: Create manual or AI-generated notes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Converse with AI using your content as context&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=D-760MlGwaI"&gt;&lt;img src="https://img.youtube.com/vi/D-760MlGwaI/0.jpg" alt="Check out our podcast sample" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/introduction.md"&gt;📖 Introduction&lt;/a&gt;&lt;/strong&gt; - Learn what Open Notebook offers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/quick-start.md"&gt;⚡ Quick Start&lt;/a&gt;&lt;/strong&gt; - Get up and running in 5 minutes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/installation.md"&gt;🔧 Installation&lt;/a&gt;&lt;/strong&gt; - Comprehensive setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/first-notebook.md"&gt;🎯 Your First Notebook&lt;/a&gt;&lt;/strong&gt; - Step-by-step tutorial&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;User Guide&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/interface-overview.md"&gt;📱 Interface Overview&lt;/a&gt;&lt;/strong&gt; - Understanding the layout&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/notebooks.md"&gt;📚 Notebooks&lt;/a&gt;&lt;/strong&gt; - Organizing your research&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/sources.md"&gt;📄 Sources&lt;/a&gt;&lt;/strong&gt; - Managing content types&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/notes.md"&gt;📝 Notes&lt;/a&gt;&lt;/strong&gt; - Creating and managing notes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/chat.md"&gt;💬 Chat&lt;/a&gt;&lt;/strong&gt; - AI conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/search.md"&gt;🔍 Search&lt;/a&gt;&lt;/strong&gt; - Finding information&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/podcasts.md"&gt;🎙️ Podcast Generation&lt;/a&gt;&lt;/strong&gt; - Create professional podcasts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/transformations.md"&gt;🔧 Content Transformations&lt;/a&gt;&lt;/strong&gt; - Customize content processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/ai-models.md"&gt;🤖 AI Models&lt;/a&gt;&lt;/strong&gt; - AI model configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/development/api-reference.md"&gt;🔧 REST API Reference&lt;/a&gt;&lt;/strong&gt; - Complete API documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/security.md"&gt;🔐 Security&lt;/a&gt;&lt;/strong&gt; - Password protection and privacy&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/index.md"&gt;🚀 Deployment&lt;/a&gt;&lt;/strong&gt; - Complete deployment guides for all scenarios&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;🗺️ Roadmap&lt;/h2&gt; 
&lt;h3&gt;Upcoming Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Live Front-End Updates&lt;/strong&gt;: Real-time UI updates for smoother experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Async Processing&lt;/strong&gt;: Faster UI through asynchronous content processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-Notebook Sources&lt;/strong&gt;: Reuse research materials across projects&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bookmark Integration&lt;/strong&gt;: Connect with your favorite bookmarking apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Recently Completed ✅&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Next.js Frontend&lt;/strong&gt;: Modern React-based frontend with improved performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive REST API&lt;/strong&gt;: Full programmatic access to all functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Model Support&lt;/strong&gt;: 16+ AI providers including OpenAI, Anthropic, Ollama, LM Studio&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Podcast Generator&lt;/strong&gt;: Professional multi-speaker podcasts with Episode Profiles&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Content Transformations&lt;/strong&gt;: Powerful customizable actions for content processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Citations&lt;/strong&gt;: Improved layout and finer control for source citations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Chat Sessions&lt;/strong&gt;: Manage different conversations within notebooks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;open issues&lt;/a&gt; for a full list of proposed features and known issues.&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;🤝 Community &amp;amp; Contributing&lt;/h2&gt; 
&lt;h3&gt;Join the Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;💬 &lt;strong&gt;&lt;a href="https://discord.gg/37XJPXfz2w"&gt;Discord Server&lt;/a&gt;&lt;/strong&gt; - Get help, share ideas, and connect with other users&lt;/li&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;&lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs and request features&lt;/li&gt; 
 &lt;li&gt;⭐ &lt;strong&gt;Star this repo&lt;/strong&gt; - Show your support and help others discover Open Notebook&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome contributions! We're especially looking for help with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend Development&lt;/strong&gt;: Help improve our modern Next.js/React UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Testing &amp;amp; Bug Fixes&lt;/strong&gt;: Make Open Notebook more robust&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feature Development&lt;/strong&gt;: Build the coolest research tool together&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Improve guides and tutorials&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Current Tech Stack&lt;/strong&gt;: Python, FastAPI, Next.js, React, SurrealDB &lt;strong&gt;Future Roadmap&lt;/strong&gt;: Real-time updates, enhanced async processing&lt;/p&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for detailed information on how to get started.&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Open Notebook is MIT licensed. See the &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;📞 Contact&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Luis Novo&lt;/strong&gt; - &lt;a href="https://twitter.com/lfnovo"&gt;@lfnovo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Community Support&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;💬 &lt;a href="https://discord.gg/37XJPXfz2w"&gt;Discord Server&lt;/a&gt; - Get help, share ideas, and connect with users&lt;/li&gt; 
 &lt;li&gt;🐛 &lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;GitHub Issues&lt;/a&gt; - Report bugs and request features&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;a href="https://www.open-notebook.ai"&gt;Website&lt;/a&gt; - Learn more about the project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙏 Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Open Notebook is built on the shoulders of amazing open-source projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/podcast-creator"&gt;Podcast Creator&lt;/a&gt;&lt;/strong&gt; - Advanced podcast generation capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/surreal-commands"&gt;Surreal Commands&lt;/a&gt;&lt;/strong&gt; - Background job processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/content-core"&gt;Content Core&lt;/a&gt;&lt;/strong&gt; - Content processing and management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/esperanto"&gt;Esperanto&lt;/a&gt;&lt;/strong&gt; - Multi-provider AI model abstraction&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/docling-project/docling"&gt;Docling&lt;/a&gt;&lt;/strong&gt; - Document processing and parsing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
  </channel>
</rss>