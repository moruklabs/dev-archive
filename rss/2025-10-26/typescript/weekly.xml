<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Sat, 25 Oct 2025 01:52:53 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>huggingface/chat-ui</title>
      <link>https://github.com/huggingface/chat-ui</link>
      <description>&lt;p&gt;Open source codebase powering the HuggingChat app&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Chat UI&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/chat-ui/chat-ui-2026.png" alt="Chat UI repository thumbnail" /&gt;&lt;/p&gt; 
&lt;p&gt;A chat interface for LLMs. It is a SvelteKit app and it powers the &lt;a href="https://huggingface.co/chat"&gt;HuggingChat app on hf.co/chat&lt;/a&gt;.&lt;/p&gt; 
&lt;ol start="0"&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/#quickstart"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/#database-options"&gt;Database Options&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/#launch"&gt;Launch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/#optional-docker-image"&gt;Optional Docker Image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/#extra-parameters"&gt;Extra parameters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Chat UI only supports OpenAI-compatible APIs via &lt;code&gt;OPENAI_BASE_URL&lt;/code&gt; and the &lt;code&gt;/models&lt;/code&gt; endpoint. Provider-specific integrations (legacy &lt;code&gt;MODELS&lt;/code&gt; env var, GGUF discovery, embeddings, web-search helpers, etc.) are removed, but any service that speaks the OpenAI protocol (llama.cpp server, Ollama, OpenRouter, etc. will work by default).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] The old version is still available on the &lt;a href="https://github.com/huggingface/chat-ui/tree/legacy"&gt;legacy branch&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;Chat UI speaks to OpenAI-compatible APIs only. The fastest way to get running is with the Hugging Face Inference Providers router plus your personal Hugging Face access token.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Step 1 – Create &lt;code&gt;.env.local&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;OPENAI_BASE_URL=https://router.huggingface.co/v1
OPENAI_API_KEY=hf_************************
# Fill in once you pick a database option below
MONGODB_URL=
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt; can come from any OpenAI-compatible endpoint you plan to call. Pick the combo that matches your setup and drop the values into &lt;code&gt;.env.local&lt;/code&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
   &lt;th&gt;Example &lt;code&gt;OPENAI_BASE_URL&lt;/code&gt;&lt;/th&gt; 
   &lt;th&gt;Example key env&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hugging Face Inference Providers router&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;https://router.huggingface.co/v1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY=hf_xxx&lt;/code&gt; (or &lt;code&gt;HF_TOKEN&lt;/code&gt; legacy alias)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;llama.cpp server (&lt;code&gt;llama.cpp --server --api&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://127.0.0.1:8080/v1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY=sk-local-demo&lt;/code&gt; (any string works; llama.cpp ignores it)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ollama (with OpenAI-compatible bridge)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;http://127.0.0.1:11434/v1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY=ollama&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;https://openrouter.ai/api/v1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY=sk-or-v1-...&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Poe&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;https://api.poe.com/v1&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY=pk_...&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Check the root &lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/.env"&gt;&lt;code&gt;.env&lt;/code&gt; template&lt;/a&gt; for the full list of optional variables you can override.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Step 2 – Choose where MongoDB lives:&lt;/strong&gt; Either provision a managed cluster (for example MongoDB Atlas) or run a local container. Both approaches are described in &lt;a href="https://raw.githubusercontent.com/huggingface/chat-ui/main/#database-options"&gt;Database Options&lt;/a&gt;. After you have the URI, drop it into &lt;code&gt;MONGODB_URL&lt;/code&gt; (and, if desired, set &lt;code&gt;MONGODB_DB_NAME&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Step 3 – Install and launch the dev server:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/huggingface/chat-ui
cd chat-ui
npm install
npm run dev -- --open
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You now have Chat UI running against the Hugging Face router without needing to host MongoDB yourself.&lt;/p&gt; 
&lt;h2&gt;Database Options&lt;/h2&gt; 
&lt;p&gt;Chat history, users, settings, files, and stats all live in MongoDB. You can point Chat UI at any MongoDB 6/7 deployment.&lt;/p&gt; 
&lt;h3&gt;MongoDB Atlas (managed)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a free cluster at &lt;a href="https://www.mongodb.com/pricing"&gt;mongodb.com&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add your IP (or &lt;code&gt;0.0.0.0/0&lt;/code&gt; for development) to the network access list.&lt;/li&gt; 
 &lt;li&gt;Create a database user and copy the connection string.&lt;/li&gt; 
 &lt;li&gt;Paste that string into &lt;code&gt;MONGODB_URL&lt;/code&gt; in &lt;code&gt;.env.local&lt;/code&gt;. Keep the default &lt;code&gt;MONGODB_DB_NAME=chat-ui&lt;/code&gt; or change it per environment.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Atlas keeps MongoDB off your laptop, which is ideal for teams or cloud deployments.&lt;/p&gt; 
&lt;h3&gt;Local MongoDB (container)&lt;/h3&gt; 
&lt;p&gt;If you prefer to run MongoDB locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 27017:27017 --name mongo-chatui mongo:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then set &lt;code&gt;MONGODB_URL=mongodb://localhost:27017&lt;/code&gt; in &lt;code&gt;.env.local&lt;/code&gt;. You can also supply &lt;code&gt;MONGO_STORAGE_PATH&lt;/code&gt; if you want Chat UI’s fallback in-memory server to persist under a specific folder.&lt;/p&gt; 
&lt;h2&gt;Launch&lt;/h2&gt; 
&lt;p&gt;After configuring your environment variables, start Chat UI with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The dev server listens on &lt;code&gt;http://localhost:5173&lt;/code&gt; by default. Use &lt;code&gt;npm run build&lt;/code&gt; / &lt;code&gt;npm run preview&lt;/code&gt; for production builds.&lt;/p&gt; 
&lt;h2&gt;Optional Docker Image&lt;/h2&gt; 
&lt;p&gt;Prefer containerized setup? You can run everything in one container as long as you supply a MongoDB URI (local or hosted):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run \
  -p 3000 \
  -e MONGODB_URL=mongodb://host.docker.internal:27017 \
  -e OPENAI_BASE_URL=https://router.huggingface.co/v1 \
  -e OPENAI_API_KEY=hf_*** \
  -v db:/data \
  ghcr.io/huggingface/chat-ui-db:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;host.docker.internal&lt;/code&gt; lets the container reach a MongoDB instance on your host machine; swap it for your Atlas URI if you use the hosted option. All environment variables accepted in &lt;code&gt;.env.local&lt;/code&gt; can be provided as &lt;code&gt;-e&lt;/code&gt; flags.&lt;/p&gt; 
&lt;h2&gt;Extra parameters&lt;/h2&gt; 
&lt;h3&gt;Theming&lt;/h3&gt; 
&lt;p&gt;You can use a few environment variables to customize the look and feel of chat-ui. These are by default:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;PUBLIC_APP_NAME=ChatUI
PUBLIC_APP_ASSETS=chatui
PUBLIC_APP_DESCRIPTION="Making the community's best AI chat models available to everyone."
PUBLIC_APP_DATA_SHARING=
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;PUBLIC_APP_NAME&lt;/code&gt; The name used as a title throughout the app.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUBLIC_APP_ASSETS&lt;/code&gt; Is used to find logos &amp;amp; favicons in &lt;code&gt;static/$PUBLIC_APP_ASSETS&lt;/code&gt;, current options are &lt;code&gt;chatui&lt;/code&gt; and &lt;code&gt;huggingchat&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUBLIC_APP_DATA_SHARING&lt;/code&gt; Can be set to 1 to add a toggle in the user settings that lets your users opt-in to data sharing with models creator.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Models&lt;/h3&gt; 
&lt;p&gt;This build does not use the &lt;code&gt;MODELS&lt;/code&gt; env var or GGUF discovery. Configure models via &lt;code&gt;OPENAI_BASE_URL&lt;/code&gt; only; Chat UI will fetch &lt;code&gt;${OPENAI_BASE_URL}/models&lt;/code&gt; and populate the list automatically. Authorization uses &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; (preferred). &lt;code&gt;HF_TOKEN&lt;/code&gt; remains a legacy alias.&lt;/p&gt; 
&lt;h3&gt;LLM Router (Optional)&lt;/h3&gt; 
&lt;p&gt;Chat UI can perform client-side routing &lt;a href="https://huggingface.co/katanemo/Arch-Router-1.5B"&gt;katanemo/Arch-Router-1.5B&lt;/a&gt; as the routing model without running a separate router service. The UI exposes a virtual model alias called "Omni" (configurable) that, when selected, chooses the best route/model for each message.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide a routes policy JSON via &lt;code&gt;LLM_ROUTER_ROUTES_PATH&lt;/code&gt;. No sample file ships with this branch, so you must point the variable to a JSON array you create yourself (for example, commit one in your project like &lt;code&gt;config/routes.chat.json&lt;/code&gt;). Each route entry needs &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;primary_model&lt;/code&gt;, and optional &lt;code&gt;fallback_models&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Configure the Arch router selection endpoint with &lt;code&gt;LLM_ROUTER_ARCH_BASE_URL&lt;/code&gt; (OpenAI-compatible &lt;code&gt;/chat/completions&lt;/code&gt;) and &lt;code&gt;LLM_ROUTER_ARCH_MODEL&lt;/code&gt; (e.g. &lt;code&gt;router/omni&lt;/code&gt;). The Arch call reuses &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; for auth.&lt;/li&gt; 
 &lt;li&gt;Map &lt;code&gt;other&lt;/code&gt; to a concrete route via &lt;code&gt;LLM_ROUTER_OTHER_ROUTE&lt;/code&gt; (default: &lt;code&gt;casual_conversation&lt;/code&gt;). If Arch selection fails, calls fall back to &lt;code&gt;LLM_ROUTER_FALLBACK_MODEL&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Selection timeout can be tuned via &lt;code&gt;LLM_ROUTER_ARCH_TIMEOUT_MS&lt;/code&gt; (default 10000).&lt;/li&gt; 
 &lt;li&gt;Omni alias configuration: &lt;code&gt;PUBLIC_LLM_ROUTER_ALIAS_ID&lt;/code&gt; (default &lt;code&gt;omni&lt;/code&gt;), &lt;code&gt;PUBLIC_LLM_ROUTER_DISPLAY_NAME&lt;/code&gt; (default &lt;code&gt;Omni&lt;/code&gt;), and optional &lt;code&gt;PUBLIC_LLM_ROUTER_LOGO_URL&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When you select Omni in the UI, Chat UI will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Call the Arch endpoint once (non-streaming) to pick the best route for the last turns.&lt;/li&gt; 
 &lt;li&gt;Emit RouterMetadata immediately (route and actual model used) so the UI can display it.&lt;/li&gt; 
 &lt;li&gt;Stream from the selected model via your configured &lt;code&gt;OPENAI_BASE_URL&lt;/code&gt;. On errors, it tries route fallbacks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;To create a production version of your app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can preview the production build with &lt;code&gt;npm run preview&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To deploy your app, you may need to install an &lt;a href="https://kit.svelte.dev/docs/adapters"&gt;adapter&lt;/a&gt; for your target environment.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>supermemoryai/supermemory</title>
      <link>https://github.com/supermemoryai/supermemory</link>
      <description>&lt;p&gt;Memory engine and app that is extremely fast, scalable. The Memory API for the AI era.&lt;/p&gt;&lt;hr&gt;&lt;div align="center" style="padding-bottom:20px;padding-top:20px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/logo.svg?sanitize=true" alt="supermemory Logo" width="400" /&gt; 
&lt;/div&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/landing-page.jpeg" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Core Functionality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#add-memory"&gt;Add Memories from Any Content&lt;/a&gt;&lt;/strong&gt;: Easily add memories from URLs, PDFs, and plain text—just paste, upload, or link.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#chat-memories"&gt;Chat with Your Memories&lt;/a&gt;&lt;/strong&gt;: Converse with your stored content using natural language chat.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/#mcp-integration"&gt;Supermemory MCP Integration&lt;/a&gt;&lt;/strong&gt;: Seamlessly connect with all major AI tools (Claude, Cursor, etc.) via Supermemory MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How do i use this?&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://app.supermemory.ai"&gt;app.supermemory.ai&lt;/a&gt; and sign into with your account&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a id="add-memory"&gt;&lt;/a&gt;Start Adding Memory with your choice of format (Note, Link, File)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-memory.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;You can also Connect to your favourite services (Notion, Google Drive, OneDrive)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/add-connections.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;a id="chat-memories"&gt;&lt;/a&gt;Once Memories are added, you can chat with Supermemory by clicking on "Open Chat" and retrieve info from your saved memories&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/chat.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;&lt;a id="mcp-integration"&gt;&lt;/a&gt;Add MCP to your AI Tools (by clicking on "Connect to your AI" and select the AI tool you are trying to integrate)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center" style="padding-bottom:10px;padding-top:10px"&gt; 
 &lt;img src="https://raw.githubusercontent.com/supermemoryai/supermemory/main/apps/web/public/mcp.png" alt="supermemory" width="100%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Have questions or feedback? We're here to help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="mailto:support@supermemory.com"&gt;support@supermemory.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.supermemory.ai"&gt;docs.supermemory.ai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from developers of all skill levels! Whether you're fixing bugs, adding features, or improving documentation, your help makes supermemory better for everyone.&lt;/p&gt; 
&lt;h3&gt;Quick Start for Contributors&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork and clone&lt;/strong&gt; the repository&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt; with &lt;code&gt;bun install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Set up your environment&lt;/strong&gt; by copying &lt;code&gt;.env.example&lt;/code&gt; to &lt;code&gt;.env.local&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Start developing&lt;/strong&gt; with &lt;code&gt;bun run dev&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For detailed guidelines, development setup, coding standards, and the complete contribution workflow, please see our &lt;a href="https://raw.githubusercontent.com/supermemoryai/supermemory/main/CONTRIBUTING.md"&gt;&lt;strong&gt;Contributing Guide&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to Contribute&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Bug fixes&lt;/strong&gt; - Help us squash those pesky issues&lt;/li&gt; 
 &lt;li&gt;✨ &lt;strong&gt;New features&lt;/strong&gt; - Add functionality that users will love&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;UI/UX improvements&lt;/strong&gt; - Make the interface more intuitive&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Performance optimizations&lt;/strong&gt; - Help us make supermemory faster&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our &lt;a href="https://github.com/supermemoryai/supermemory/issues"&gt;Issues&lt;/a&gt; page for &lt;code&gt;good first issue&lt;/code&gt; and &lt;code&gt;help wanted&lt;/code&gt; labels to get started!&lt;/p&gt; 
&lt;h2&gt;Updates &amp;amp; Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with the latest improvements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.supermemory.ai/changelog/overview"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/supermemoryai"&gt;X&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ThinkInAIXYZ/deepchat</title>
      <link>https://github.com/ThinkInAIXYZ/deepchat</link>
      <description>&lt;p&gt;🐬DeepChat - A smart assistant that connects powerful AI to your personal world&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/build/icon.png" width="150" height="150" alt="DeepChat AI Assistant Icon" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;DeepChat - Powerful Open-Source Multi-Model AI Chat Platform&lt;/h1&gt; 
&lt;p align="center"&gt;DeepChat is a feature-rich open-source AI chat platform supporting multiple cloud and local large language models with powerful search enhancement and tool calling capabilities.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/ThinkInAIXYZ/deepchat" alt="Stars Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/ThinkInAIXYZ/deepchat" alt="Forks Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/ThinkInAIXYZ/deepchat" alt="Pull Requests Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/issues"&gt;&lt;img src="https://img.shields.io/github/issues/ThinkInAIXYZ/deepchat" alt="Issues Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/ThinkInAIXYZ/deepchat" alt="License Badge" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/ThinkInAIXYZ/deepchat"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/README.zh.md"&gt;中文&lt;/a&gt; / 
 &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/README.md"&gt;English&lt;/a&gt; / 
 &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/README.jp.md"&gt;日本語&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;📑 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-table-of-contents"&gt;📑 Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-project-introduction"&gt;🚀 Project Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-why-choose-deepchat"&gt;💡 Why Choose DeepChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-main-features"&gt;🔥 Main Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-supported-model-providers"&gt;🤖 Supported Model Providers&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#compatible-with-any-model-provider-in-openaigeminianthropic-api-format"&gt;Compatible with any model provider in OpenAI/Gemini/Anthropic API format&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-use-cases"&gt;🔍 Use Cases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-quick-start"&gt;📦 Quick Start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#download-and-install"&gt;Download and Install&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#configure-models"&gt;Configure Models&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#start-conversations"&gt;Start Conversations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-development-guide"&gt;💻 Development Guide&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#install-dependencies"&gt;Install Dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#start-development"&gt;Start Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#build"&gt;Build&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-community--contribution"&gt;👥 Community &amp;amp; Contribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-star-history"&gt;⭐ Star History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-contributors"&gt;👨‍💻 Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/#-license"&gt;📃 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Project Introduction&lt;/h2&gt; 
&lt;p&gt;DeepChat is a powerful open-source AI chat platform providing a unified interface for interacting with various large language models. Whether you're using cloud APIs like OpenAI, Gemini, Anthropic, or locally deployed Ollama models, DeepChat delivers a smooth user experience.&lt;/p&gt; 
&lt;p&gt;As a cross-platform AI assistant application, DeepChat not only supports basic chat functionality but also offers advanced features such as search enhancement, tool calling, and multimodal interaction, making AI capabilities more accessible and efficient.&lt;/p&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center" style="padding: 10px;"&gt; &lt;img src="https://github.com/user-attachments/assets/6e932a65-78e0-4d2e-9654-ccc010f78bf7" alt="DeepChat Light Mode" width="400" /&gt; &lt;br /&gt; &lt;/td&gt; 
   &lt;td align="center" style="padding: 10px;"&gt; &lt;img src="https://github.com/user-attachments/assets/ea6ccf60-32af-4bc1-91cc-e72703bdc1ff" alt="DeepChat Dark Mode" width="400" /&gt; &lt;br /&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;💡 Why Choose DeepChat&lt;/h2&gt; 
&lt;p&gt;Compared to other AI tools, DeepChat offers the following unique advantages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Unified Multi-Model Management&lt;/strong&gt;: One application supports almost all mainstream LLMs, eliminating the need to switch between multiple apps&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Local Model Integration&lt;/strong&gt;: Built-in Ollama support allows you to manage and use local models without command-line operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Tool Calling&lt;/strong&gt;: Built-in MCP support enables code execution, web access, and other tools without additional configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful Search Enhancement&lt;/strong&gt;: Support for multiple search engines makes AI responses more accurate and timely, providing non-standard web search paradigms that can be quickly customized&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy-Focused&lt;/strong&gt;: Local data storage and network proxy support reduce the risk of information leakage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business-Friendly&lt;/strong&gt;: Embraces open source under the Apache License 2.0, suitable for both commercial and personal use&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔥 Main Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Multiple Cloud LLM Provider Support&lt;/strong&gt;: DeepSeek, OpenAI, SiliconFlow, Grok, Gemini, Anthropic, and more&lt;/li&gt; 
 &lt;li&gt;🏠 &lt;strong&gt;Local Model Deployment Support&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Integrated Ollama with comprehensive management capabilities&lt;/li&gt; 
   &lt;li&gt;Control and manage Ollama model downloads, deployments, and runs without command-line operations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Rich and Easy-to-Use Chat Capabilities&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Complete Markdown rendering with code block rendering based on industry-leading &lt;a href="https://codemirror.net/"&gt;CodeMirror&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Multi-window + multi-tab architecture supporting parallel multi-session operations across all dimensions, use large models like using a browser, non-blocking experience brings excellent efficiency&lt;/li&gt; 
   &lt;li&gt;Supports Artifacts rendering for diverse result presentation, significantly saving token consumption after MCP integration&lt;/li&gt; 
   &lt;li&gt;Messages support retry to generate multiple variations; conversations can be forked freely, ensuring there's always a suitable line of thought&lt;/li&gt; 
   &lt;li&gt;Supports rendering images, Mermaid diagrams, and other multi-modal content; supports GPT-4o, Gemini, Grok text-to-image capabilities&lt;/li&gt; 
   &lt;li&gt;Supports highlighting external information sources like search results within the content&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🔍 &lt;strong&gt;Robust Search Extension Capabilities&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Built-in integration with leading search APIs like BoSearch, Brave Search via MCP mode, allowing the model to intelligently decide when to search&lt;/li&gt; 
   &lt;li&gt;Supports mainstream search engines like Google, Bing, Baidu, and Sogou Official Accounts search by simulating user web browsing, enabling the LLM to read search engines like a human&lt;/li&gt; 
   &lt;li&gt;Supports reading any search engine; simply configure a search assistant model to connect various search sources, whether internal networks, API-less engines, or vertical domain search engines, as information sources for the model&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Excellent MCP (Model Context Protocol) Support&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Complete support for the three core capabilities of Resources/Prompts/Tools in the MCP protocol&lt;/li&gt; 
   &lt;li&gt;Supports semantic workflows, enabling more complex and intelligent automation by understanding the meaning and context of tasks.&lt;/li&gt; 
   &lt;li&gt;Extremely user-friendly configuration interface&lt;/li&gt; 
   &lt;li&gt;Aesthetically pleasing and clear tool call display&lt;/li&gt; 
   &lt;li&gt;Detailed tool call debugging window with automatic formatting of tool parameters and return data&lt;/li&gt; 
   &lt;li&gt;Built-in Node.js runtime environment; npx/node-like services require no extra configuration and work out-of-the-box&lt;/li&gt; 
   &lt;li&gt;Supports StreamableHTTP/SSE/Stdio protocol Transports&lt;/li&gt; 
   &lt;li&gt;Supports inMemory services with built-in utilities like code execution, web information retrieval, and file operations; ready for most common use cases out-of-the-box without secondary installation&lt;/li&gt; 
   &lt;li&gt;Converts visual model capabilities into universally usable functions for any model via the built-in MCP service&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;💻 &lt;strong&gt;Multi-Platform Support&lt;/strong&gt;: Windows, macOS, Linux&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;Beautiful and User-Friendly Interface&lt;/strong&gt;, user-oriented design, meticulously themed light and dark modes&lt;/li&gt; 
 &lt;li&gt;🔗 &lt;strong&gt;Rich DeepLink Support&lt;/strong&gt;: Initiate conversations via links for seamless integration with other applications. Also supports one-click installation of MCP services for simplicity and speed&lt;/li&gt; 
 &lt;li&gt;🚑 &lt;strong&gt;Security-First Design&lt;/strong&gt;: Chat data and configuration data have reserved encryption interfaces and code obfuscation capabilities&lt;/li&gt; 
 &lt;li&gt;🛡️ &lt;strong&gt;Privacy Protection&lt;/strong&gt;: Supports screen projection hiding, network proxies, and other privacy protection methods to reduce the risk of information leakage&lt;/li&gt; 
 &lt;li&gt;💰 &lt;strong&gt;Business-Friendly&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Embraces open source, based on the Apache License 2.0 protocol, enterprise use without worry&lt;/li&gt; 
   &lt;li&gt;Enterprise integration requires only minimal configuration code changes to use reserved encrypted obfuscation security capabilities&lt;/li&gt; 
   &lt;li&gt;Clear code structure, both model providers and MCP services are highly decoupled, can be freely customized with minimal cost&lt;/li&gt; 
   &lt;li&gt;Reasonable architecture, data interaction and UI behavior separation, fully utilizing Electron's capabilities, rejecting simple web wrappers, excellent performance&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details on how to use these features, see the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/docs/user-guide.md"&gt;User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤖 Supported Model Providers&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/ollama.svg?sanitize=true" width="50" height="50" alt="Ollama Icon" /&gt;&lt;br /&gt; &lt;a href="https://ollama.com"&gt;Ollama&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/deepseek-color.svg?sanitize=true" width="50" height="50" alt="Deepseek Icon" /&gt;&lt;br /&gt; &lt;a href="https://deepseek.com/"&gt;Deepseek&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/ppio-color.svg?sanitize=true" width="50" height="50" alt="PPIO Icon" /&gt;&lt;br /&gt; &lt;a href="https://ppinfra.com/"&gt;PPIO&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/alibabacloud-color.svg?sanitize=true" width="50" height="50" alt="DashScope Icon" /&gt;&lt;br /&gt; &lt;a href="https://www.aliyun.com/product/bailian"&gt;DashScope&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/doubao-color.svg?sanitize=true" width="50" height="50" alt="Doubao Icon" /&gt;&lt;br /&gt; &lt;a href="https://console.volcengine.com/ark/"&gt;Doubao&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/minimax-color.svg?sanitize=true" width="50" height="50" alt="MiniMax Icon" /&gt;&lt;br /&gt; &lt;a href="https://platform.minimaxi.com/"&gt;MiniMax&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/fireworks-color.svg?sanitize=true" width="50" height="50" alt="Fireworks Icon" /&gt;&lt;br /&gt; &lt;a href="https://fireworks.ai/"&gt;Fireworks&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/302ai.svg?sanitize=true" width="50" height="50" alt="302.AI Icon" /&gt;&lt;br /&gt; &lt;a href="https://302.ai/"&gt;302.AI&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/openai.svg?sanitize=true" width="50" height="50" alt="OpenAI Icon" /&gt;&lt;br /&gt; &lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/gemini-color.svg?sanitize=true" width="50" height="50" alt="Gemini Icon" /&gt;&lt;br /&gt; &lt;a href="https://gemini.google.com/"&gt;Gemini&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/github.svg?sanitize=true" width="50" height="50" alt="GitHub Models Icon" /&gt;&lt;br /&gt; &lt;a href="https://github.com/marketplace/models"&gt;GitHub Models&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/moonshot.svg?sanitize=true" width="50" height="50" alt="Moonshot Icon" /&gt;&lt;br /&gt; &lt;a href="https://moonshot.ai/"&gt;Moonshot&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/openrouter.svg?sanitize=true" width="50" height="50" alt="OpenRouter Icon" /&gt;&lt;br /&gt; &lt;a href="https://openrouter.ai/"&gt;OpenRouter&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/azure-color.svg?sanitize=true" width="50" height="50" alt="Azure OpenAI Icon" /&gt;&lt;br /&gt; &lt;a href="https://azure.microsoft.com/en-us/products/ai-services/openai-service"&gt;Azure OpenAI&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/qiniu.svg?sanitize=true" width="50" height="50" alt="Qiniu Icon" /&gt;&lt;br /&gt; &lt;a href="https://www.qiniu.com/products/ai-token-api"&gt;Qiniu&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/grok.svg?sanitize=true" width="50" height="50" alt="Grok Icon" /&gt;&lt;br /&gt; &lt;a href="https://x.ai/"&gt;Grok&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/zhipu-color.svg?sanitize=true" width="50" height="50" alt="Zhipu Icon" /&gt;&lt;br /&gt; &lt;a href="https://open.bigmodel.cn/"&gt;Zhipu&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/siliconcloud.svg?sanitize=true" width="50" height="50" alt="SiliconFlow Icon" /&gt;&lt;br /&gt; &lt;a href="https://www.siliconflow.cn/"&gt;SiliconFlow&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/aihubmix.png" width="50" height="50" alt="AIHubMix Icon" /&gt;&lt;br /&gt; &lt;a href="https://aihubmix.com/"&gt;AIHubMix&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/hunyuan-color.svg?sanitize=true" width="50" height="50" alt="Hunyuan Icon" /&gt;&lt;br /&gt; &lt;a href="https://cloud.tencent.com/product/hunyuan"&gt;Hunyuan&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr align="center"&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/lmstudio.svg?sanitize=true" width="50" height="50" alt="LM Studio Icon" /&gt;&lt;br /&gt; &lt;a href="https://lmstudio.ai/"&gt;LM Studio&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/src/renderer/src/assets/llm-icons/groq.svg?sanitize=true" width="50" height="50" alt="Groq Icon" /&gt;&lt;br /&gt; &lt;a href="https://groq.com/"&gt;Groq&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Compatible with any model provider in OpenAI/Gemini/Anthropic API format&lt;/h3&gt; 
&lt;h2&gt;🔍 Use Cases&lt;/h2&gt; 
&lt;p&gt;DeepChat is suitable for various AI application scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Daily Assistant&lt;/strong&gt;: Answering questions, providing suggestions, assisting with writing and creation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Development Aid&lt;/strong&gt;: Code generation, debugging, technical problem solving&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learning Tool&lt;/strong&gt;: Concept explanation, knowledge exploration, learning guidance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Content Creation&lt;/strong&gt;: Copywriting, creative inspiration, content optimization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Analysis&lt;/strong&gt;: Data interpretation, chart generation, report writing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Download and Install&lt;/h3&gt; 
&lt;p&gt;Download the latest version for your system from the &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/releases"&gt;GitHub Releases&lt;/a&gt; page:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows: &lt;code&gt;.exe&lt;/code&gt; installation file&lt;/li&gt; 
 &lt;li&gt;macOS: &lt;code&gt;.dmg&lt;/code&gt; installation file&lt;/li&gt; 
 &lt;li&gt;Linux: &lt;code&gt;.AppImage&lt;/code&gt; or &lt;code&gt;.deb&lt;/code&gt; installation file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configure Models&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Launch the DeepChat application&lt;/li&gt; 
 &lt;li&gt;Click the settings icon&lt;/li&gt; 
 &lt;li&gt;Select the "Model Providers" tab&lt;/li&gt; 
 &lt;li&gt;Add your API keys or configure local Ollama&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Start Conversations&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "+" button to create a new conversation&lt;/li&gt; 
 &lt;li&gt;Select the model you want to use&lt;/li&gt; 
 &lt;li&gt;Start communicating with your AI assistant&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For a comprehensive guide on getting started and using all features, please refer to the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/docs/user-guide.md"&gt;User Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💻 Development Guide&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Windows and Linux are packaged by GitHub Action. For Mac-related signing and packaging, please refer to the &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/wiki/Mac-Release-Guide"&gt;Mac Release Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Install Dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pnpm install
$ pnpm run installRuntime
# if got err: No module named 'distutils'
$ pip install setuptools
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;For Windows: To allow non-admin users to create symlinks and hardlinks, enable &lt;code&gt;Developer Mode&lt;/code&gt; in Settings or use an administrator account. Otherwise &lt;code&gt;pnpm&lt;/code&gt; ops will fail.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Start Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pnpm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For Windows
$ pnpm run build:win

# For macOS
$ pnpm run build:mac

# For Linux
$ pnpm run build:linux

# Specify architecture packaging
$ pnpm run build:win:x64
$ pnpm run build:win:arm64
$ pnpm run build:mac:x64
$ pnpm run build:mac:arm64
$ pnpm run build:linux:x64
$ pnpm run build:linux:arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For a more detailed guide on development, project structure, and architecture, please see the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/docs/developer-guide.md"&gt;Developer Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👥 Community &amp;amp; Contribution&lt;/h2&gt; 
&lt;p&gt;DeepChat is an active open-source community project, and we welcome various forms of contribution:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/issues"&gt;Report issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/issues"&gt;Submit feature suggestions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/pulls"&gt;Submit code improvements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📚 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/wiki"&gt;Improve documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🌍 &lt;a href="https://github.com/ThinkInAIXYZ/deepchat/tree/main/locales"&gt;Help with translation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; to learn more about ways to participate in the project.&lt;/p&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#ThinkInAIXYZ/deepchat&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=ThinkInAIXYZ/deepchat&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;👨‍💻 Contributors&lt;/h2&gt; 
&lt;p&gt;Thank you for considering contributing to deepchat! The contribution guide can be found in the &lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://openomy.com/thinkinaixyz/deepchat" target="_blank" style="display: block; width: 100%;" align="center"&gt; &lt;img src="https://openomy.com/svg?repo=thinkinaixyz/deepchat&amp;amp;chart=bubble&amp;amp;latestMonth=3" target="_blank" alt="Contribution Leaderboard" style="display: block; width: 100%;" /&gt; &lt;/a&gt; 
&lt;h2&gt;🙏🏻 Thanks&lt;/h2&gt; 
&lt;p&gt;This project is built with the help of these awesome libraries:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://electron-vite.org/"&gt;Electron-Vite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxc-project/oxc"&gt;oxlint&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📃 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ThinkInAIXYZ/deepchat/dev/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>infiniflow/ragflow</title>
      <link>https://github.com/infiniflow/ragflow</link>
      <description>&lt;p&gt;RAGFlow is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://demo.ragflow.io/"&gt; &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow/main/web/src/assets/logo-with-text.svg?sanitize=true" width="520" alt="ragflow logo" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README.md"&gt;&lt;img alt="README in English" src="https://img.shields.io/badge/English-DBEDFA" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_zh.md"&gt;&lt;img alt="简体中文版自述文件" src="https://img.shields.io/badge/简体中文-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_tzh.md"&gt;&lt;img alt="繁體版中文自述文件" src="https://img.shields.io/badge/繁體中文-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ja.md"&gt;&lt;img alt="日本語のREADME" src="https://img.shields.io/badge/日本語-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ko.md"&gt;&lt;img alt="한국어" src="https://img.shields.io/badge/한국어-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_id.md"&gt;&lt;img alt="Bahasa Indonesia" src="https://img.shields.io/badge/Bahasa Indonesia-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_pt_br.md"&gt;&lt;img alt="Português(Brasil)" src="https://img.shields.io/badge/Português(Brasil)-DFE0E5" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://x.com/intent/follow?screen_name=infiniflowai" target="_blank"&gt; &lt;img src="https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;amp;color=%20%23f5f5f5" alt="follow on X(Twitter)" /&gt; &lt;/a&gt; &lt;a href="https://demo.ragflow.io" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/Online-Demo-4e6b99" /&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/infiniflow/ragflow" target="_blank"&gt; &lt;img src="https://img.shields.io/docker/pulls/infiniflow/ragflow?label=Docker%20Pulls&amp;amp;color=0db7ed&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="docker pull infiniflow/ragflow:v0.21.1" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/releases/latest"&gt; &lt;img src="https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;amp;label=Latest%20Release" alt="Latest Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/raw/main/LICENSE"&gt; &lt;img height="21" src="https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://deepwiki.com/infiniflow/ragflow"&gt; &lt;img alt="Ask DeepWiki" src="https://deepwiki.com/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://ragflow.io/docs/dev/"&gt;Document&lt;/a&gt; | &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt; | &lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt; | &lt;a href="https://demo.ragflow.io"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/9064" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/9064" alt="infiniflow%2Fragflow | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;📕 Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;💡 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-what-is-ragflow"&gt;What is RAGFlow?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🎮 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📌 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-latest-updates"&gt;Latest Updates&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🌟 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-key-features"&gt;Key Features&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔎 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-system-architecture"&gt;System Architecture&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🎬 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-get-started"&gt;Get Started&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-configurations"&gt;Configurations&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-without-embedding-models"&gt;Build a docker image without embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-including-embedding-models"&gt;Build a docker image including embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔨 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-launch-service-from-source-for-development"&gt;Launch service from source for development&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📚 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📜 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🏄 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🙌 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;💡 What is RAGFlow?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ragflow.io/"&gt;RAGFlow&lt;/a&gt; is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs. It offers a streamlined RAG workflow adaptable to enterprises of any scale. Powered by a converged context engine and pre-built agent templates, RAGFlow enables developers to transform complex data into high-fidelity, production-ready AI systems with exceptional efficiency and precision.&lt;/p&gt; 
&lt;h2&gt;🎮 Demo&lt;/h2&gt; 
&lt;p&gt;Try our demo at &lt;a href="https://demo.ragflow.io"&gt;https://demo.ragflow.io&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/chunking.gif" width="1200" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/agentic-dark.gif" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🔥 Latest Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025-10-15 Supports orchestrable ingestion pipeline.&lt;/li&gt; 
 &lt;li&gt;2025-08-08 Supports OpenAI's latest GPT-5 series models.&lt;/li&gt; 
 &lt;li&gt;2025-08-01 Supports agentic workflow and MCP.&lt;/li&gt; 
 &lt;li&gt;2025-05-23 Adds a Python/JavaScript code executor component to Agent.&lt;/li&gt; 
 &lt;li&gt;2025-05-05 Supports cross-language query.&lt;/li&gt; 
 &lt;li&gt;2025-03-19 Supports using a multi-modal model to make sense of images within PDF or DOCX files.&lt;/li&gt; 
 &lt;li&gt;2025-02-28 Combined with Internet search (Tavily), supports reasoning like Deep Research for any LLMs.&lt;/li&gt; 
 &lt;li&gt;2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.&lt;/li&gt; 
 &lt;li&gt;2024-08-22 Support text to SQL statements through RAG.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎉 Stay Tuned&lt;/h2&gt; 
&lt;p&gt;⭐️ Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new releases! 🌟&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🌟 Key Features&lt;/h2&gt; 
&lt;h3&gt;🍭 &lt;strong&gt;"Quality in, quality out"&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/deepdoc/README.md"&gt;Deep document understanding&lt;/a&gt;-based knowledge extraction from unstructured data with complicated formats.&lt;/li&gt; 
 &lt;li&gt;Finds "needle in a data haystack" of literally unlimited tokens.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🍱 &lt;strong&gt;Template-based chunking&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Intelligent and explainable.&lt;/li&gt; 
 &lt;li&gt;Plenty of template options to choose from.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌱 &lt;strong&gt;Grounded citations with reduced hallucinations&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visualization of text chunking to allow human intervention.&lt;/li&gt; 
 &lt;li&gt;Quick view of the key references and traceable citations to support grounded answers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🍔 &lt;strong&gt;Compatibility with heterogeneous data sources&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛀 &lt;strong&gt;Automated and effortless RAG workflow&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Streamlined RAG orchestration catered to both personal and large businesses.&lt;/li&gt; 
 &lt;li&gt;Configurable LLMs as well as embedding models.&lt;/li&gt; 
 &lt;li&gt;Multiple recall paired with fused re-ranking.&lt;/li&gt; 
 &lt;li&gt;Intuitive APIs for seamless integration with business.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔎 System Architecture&lt;/h2&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/31b0dd6f-ca4f-445a-9457-70cb44a381b2" width="1000" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🎬 Get Started&lt;/h2&gt; 
&lt;h3&gt;📝 Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU &amp;gt;= 4 cores&lt;/li&gt; 
 &lt;li&gt;RAM &amp;gt;= 16 GB&lt;/li&gt; 
 &lt;li&gt;Disk &amp;gt;= 50 GB&lt;/li&gt; 
 &lt;li&gt;Docker &amp;gt;= 24.0.0 &amp;amp; Docker Compose &amp;gt;= v2.26.1&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gvisor.dev/docs/user_guide/install/"&gt;gVisor&lt;/a&gt;: Required only if you intend to use the code executor (sandbox) feature of RAGFlow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you have not installed Docker on your local machine (Windows, Mac, or Linux), see &lt;a href="https://docs.docker.com/engine/install/"&gt;Install Docker Engine&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🚀 Start up the server&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure &lt;code&gt;vm.max_map_count&lt;/code&gt; &amp;gt;= 262144:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;To check the value of &lt;code&gt;vm.max_map_count&lt;/code&gt;:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;$ sysctl vm.max_map_count
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Reset &lt;code&gt;vm.max_map_count&lt;/code&gt; to a value at least 262144 if it is not.&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;# In this case, we set it to 262144:
$ sudo sysctl -w vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;This change will be reset after a system reboot. To ensure your change remains permanent, add or update the &lt;code&gt;vm.max_map_count&lt;/code&gt; value in &lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt; accordingly:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone https://github.com/infiniflow/ragflow.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start up the server using the pre-built Docker images:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] All Docker images are built for x86 platforms. We don't currently offer Docker images for ARM64. If you are on an ARM64 platform, follow &lt;a href="https://ragflow.io/docs/dev/build_docker_image"&gt;this guide&lt;/a&gt; to build a Docker image compatible with your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The command below downloads the &lt;code&gt;v0.21.1-slim&lt;/code&gt; edition of the RAGFlow Docker image. See the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from &lt;code&gt;v0.21.1-slim&lt;/code&gt;, update the &lt;code&gt;RAGFLOW_IMAGE&lt;/code&gt; variable accordingly in &lt;strong&gt;docker/.env&lt;/strong&gt; before using &lt;code&gt;docker compose&lt;/code&gt; to start the server.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ cd ragflow/docker
# Use CPU for embedding and DeepDoc tasks:
$ docker compose -f docker-compose.yml up -d

# To use GPU to accelerate embedding and DeepDoc tasks:
# sed -i '1i DEVICE=gpu' .env
# docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;RAGFlow image tag&lt;/th&gt; 
   &lt;th&gt;Image size (GB)&lt;/th&gt; 
   &lt;th&gt;Has embedding models?&lt;/th&gt; 
   &lt;th&gt;Stable?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.21.1&lt;/td&gt; 
   &lt;td&gt;≈9&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.21.1-slim&lt;/td&gt; 
   &lt;td&gt;≈2&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nightly&lt;/td&gt; 
   &lt;td&gt;≈2&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Starting with &lt;code&gt;v0.22.0&lt;/code&gt;, we ship only the slim edition and no longer append the &lt;strong&gt;-slim&lt;/strong&gt; suffix to the image tag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt; &lt;p&gt;Check the server status after having the server up and running:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker logs -f docker-ragflow-cpu-1
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;
      ____   ___    ______ ______ __
     / __ \ /   |  / ____// ____// /____  _      __
    / /_/ // /| | / / __ / /_   / // __ \| | /| / /
   / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /
  /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/

 * Running on all addresses (0.0.0.0)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a &lt;code&gt;network anormal&lt;/code&gt; error because, at that moment, your RAGFlow may not be fully initialized.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In your web browser, enter the IP address of your server and log in to RAGFlow.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;With the default settings, you only need to enter &lt;code&gt;http://IP_OF_YOUR_MACHINE&lt;/code&gt; (&lt;strong&gt;sans&lt;/strong&gt; port number) as the default HTTP serving port &lt;code&gt;80&lt;/code&gt; can be omitted when using the default configurations.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;, select the desired LLM factory in &lt;code&gt;user_default_llm&lt;/code&gt; and update the &lt;code&gt;API_KEY&lt;/code&gt; field with the corresponding API key.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;See &lt;a href="https://ragflow.io/docs/dev/llm_api_key_setup"&gt;llm_api_key_setup&lt;/a&gt; for more information.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;The show is on!&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🔧 Configurations&lt;/h2&gt; 
&lt;p&gt;When it comes to system configurations, you will need to manage the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/.env"&gt;.env&lt;/a&gt;: Keeps the fundamental setups for the system, such as &lt;code&gt;SVR_HTTP_PORT&lt;/code&gt;, &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;, and &lt;code&gt;MINIO_PASSWORD&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;: Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;: The system relies on &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; to start up.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/README.md"&gt;./docker/README&lt;/a&gt; file provides a detailed description of the environment settings and service configurations which can be used as &lt;code&gt;${ENV_VARS}&lt;/code&gt; in the &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt; file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To update the default HTTP serving port (80), go to &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; and change &lt;code&gt;80:80&lt;/code&gt; to &lt;code&gt;&amp;lt;YOUR_SERVING_PORT&amp;gt;:80&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Updates to the above configurations require a reboot of all containers to take effect:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Switch doc engine from Elasticsearch to Infinity&lt;/h3&gt; 
&lt;p&gt;RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to &lt;a href="https://github.com/infiniflow/infinity/"&gt;Infinity&lt;/a&gt;, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Stop all running containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker/docker-compose.yml down -v
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;code&gt;-v&lt;/code&gt; will delete the docker container volumes, and the existing data will be cleared.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Set &lt;code&gt;DOC_ENGINE&lt;/code&gt; in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;infinity&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Switching to Infinity on a Linux/arm64 machine is not yet officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🔧 Build a Docker image without embedding models&lt;/h2&gt; 
&lt;p&gt;This image is approximately 2 GB in size and relies on external LLM and embedding services.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 -f Dockerfile -t infiniflow/ragflow:nightly .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔨 Launch service from source for development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;uv&lt;/code&gt; and &lt;code&gt;pre-commit&lt;/code&gt;, or skip this step if they are already installed:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pipx install uv pre-commit
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the source code and install Python dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
uv sync --python 3.10 # install RAGFlow dependent python modules
uv run download_deps.py
pre-commit install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose -f docker/docker-compose-base.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Add the following line to &lt;code&gt;/etc/hosts&lt;/code&gt; to resolve all hosts specified in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;127.0.0.1&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;127.0.0.1       es01 infinity mysql minio redis sandbox-executor-manager
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you cannot access HuggingFace, set the &lt;code&gt;HF_ENDPOINT&lt;/code&gt; environment variable to use a mirror site:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export HF_ENDPOINT=https://hf-mirror.com
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your operating system does not have jemalloc, please install it as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ubuntu
sudo apt-get install libjemalloc-dev
# CentOS
sudo yum install jemalloc
# OpenSUSE
sudo zypper install jemalloc
# macOS
sudo brew install jemalloc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch backend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;source .venv/bin/activate
export PYTHONPATH=$(pwd)
bash docker/launch_backend_service.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install frontend dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd web
npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch frontend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187" alt="" /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Stop RAGFlow front-end and back-end service after development is complete:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pkill -f "ragflow_server.py|task_executor.py"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/configurations"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/release_notes"&gt;Release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/guides"&gt;User guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/developers"&gt;Developer guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/references"&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/faq"&gt;FAQs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📜 Roadmap&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;RAGFlow Roadmap 2025&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🏄 Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/infiniflow/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙌 Contributing&lt;/h2&gt; 
&lt;p&gt;RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community. If you would like to be a part, review our &lt;a href="https://ragflow.io/docs/dev/contributing"&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>honojs/hono</title>
      <link>https://github.com/honojs/hono</link>
      <description>&lt;p&gt;Web framework built on Web Standards&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://hono.dev"&gt; &lt;img src="https://raw.githubusercontent.com/honojs/hono/main/docs/images/hono-title.png" width="500" height="auto" alt="Hono" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://github.com/honojs/hono/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/honojs/hono/ci.yml?branch=main" alt="GitHub Workflow Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/honojs/hono/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/honojs/hono" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/hono"&gt;&lt;img src="https://img.shields.io/npm/v/hono" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/hono"&gt;&lt;img src="https://img.shields.io/npm/dm/hono" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://jsr.io/@hono/hono"&gt;&lt;img src="https://jsr.io/badges/@hono/hono" alt="JSR" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=hono"&gt;&lt;img src="https://img.shields.io/bundlephobia/min/hono" alt="Bundle Size" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=hono"&gt;&lt;img src="https://img.shields.io/bundlephobia/minzip/hono" alt="Bundle Size" /&gt;&lt;/a&gt; &lt;a href="https://github.com/honojs/hono/pulse"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/honojs/hono" alt="GitHub commit activity" /&gt;&lt;/a&gt; &lt;a href="https://github.com/honojs/hono/commits/main"&gt;&lt;img src="https://img.shields.io/github/last-commit/honojs/hono" alt="GitHub last commit" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/github/honojs/hono"&gt;&lt;img src="https://codecov.io/github/honojs/hono/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/KMh2eNSdxV"&gt;&lt;img src="https://img.shields.io/discord/1011308539819597844?label=Discord&amp;amp;logo=Discord" alt="Discord badge" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/honojs/hono"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hono - &lt;em&gt;&lt;strong&gt;means flame🔥 in Japanese&lt;/strong&gt;&lt;/em&gt; - is a small, simple, and ultrafast web framework built on Web Standards. It works on any JavaScript runtime: Cloudflare Workers, Fastly Compute, Deno, Bun, Vercel, AWS Lambda, Lambda@Edge, and Node.js.&lt;/p&gt; 
&lt;p&gt;Fast, but not only fast.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { Hono } from 'hono'
const app = new Hono()

app.get('/', (c) =&amp;gt; c.text('Hono!'))

export default app
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm create hono@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Ultrafast&lt;/strong&gt; 🚀 - The router &lt;code&gt;RegExpRouter&lt;/code&gt; is really fast. Not using linear loops. Fast.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lightweight&lt;/strong&gt; 🪶 - The &lt;code&gt;hono/tiny&lt;/code&gt; preset is under 12kB. Hono has zero dependencies and uses only the Web Standard API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-runtime&lt;/strong&gt; 🌍 - Works on Cloudflare Workers, Fastly Compute, Deno, Bun, AWS Lambda, Lambda@Edge, or Node.js. The same code runs on all platforms.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Batteries Included&lt;/strong&gt; 🔋 - Hono has built-in middleware, custom middleware, and third-party middleware. Batteries included.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Delightful DX&lt;/strong&gt; 😃 - Super clean APIs. First-class TypeScript support. Now, we've got "Types".&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The documentation is available on &lt;a href="https://hono.dev"&gt;hono.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Migration&lt;/h2&gt; 
&lt;p&gt;The migration guide is available on &lt;a href="https://raw.githubusercontent.com/honojs/hono/main/docs/MIGRATION.md"&gt;docs/MIGRATION.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Communication&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://x.com/honojs"&gt;X&lt;/a&gt; and &lt;a href="https://discord.gg/KMh2eNSdxV"&gt;Discord channel&lt;/a&gt; are available.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions Welcome! You can contribute in the following ways.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create an Issue - Propose a new feature. Report a bug.&lt;/li&gt; 
 &lt;li&gt;Pull Request - Fix a bug and typo. Refactor the code.&lt;/li&gt; 
 &lt;li&gt;Create third-party middleware - Instruct below.&lt;/li&gt; 
 &lt;li&gt;Share - Share your thoughts on the Blog, X, and others.&lt;/li&gt; 
 &lt;li&gt;Make your application - Please try to use Hono.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details, see &lt;a href="https://raw.githubusercontent.com/honojs/hono/main/docs/CONTRIBUTING.md"&gt;docs/CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to &lt;a href="https://github.com/honojs/hono/graphs/contributors"&gt;all contributors&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;Yusuke Wada &lt;a href="https://github.com/yusukebe"&gt;https://github.com/yusukebe&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;RegExpRouter&lt;/em&gt;, &lt;em&gt;SmartRouter&lt;/em&gt;, &lt;em&gt;LinearRouter&lt;/em&gt;, and &lt;em&gt;PatternRouter&lt;/em&gt; are created by Taku Amano &lt;a href="https://github.com/usualoma"&gt;https://github.com/usualoma&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Distributed under the MIT License. See &lt;a href="https://raw.githubusercontent.com/honojs/hono/main/LICENSE"&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>browserless/browserless</title>
      <link>https://github.com/browserless/browserless</link>
      <description>&lt;p&gt;Deploy headless browsers in Docker. Run on our cloud or bring your own. Free for non-commercial uses.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://browserless.io" align="center"&gt; 
  &lt;center align="center"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/logo-white.svg" width="600" /&gt; 
    &lt;source media="(prefers-color-scheme: light)" srcset="./assets/logo.svg" width="600" /&gt; 
    &lt;img src="https://raw.githubusercontent.com/browserless/browserless/main/assets/logo.svg?sanitize=true" alt="Browserless logo" width="600" /&gt; 
   &lt;/picture&gt; 
  &lt;/center&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;h3 align="center"&gt;
  &lt;center&gt;
   Deploy headless browsers in Docker. Run on our cloud or bring your own.
  &lt;/center&gt;&lt;/h3&gt; 
 &lt;br /&gt; 
 &lt;center&gt; 
  &lt;a href="https://hub.docker.com/r/browserless/chrome"&gt; &lt;img src="https://img.shields.io/docker/pulls/browserless/chrome" alt="Docker pulls" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/browserless/browserless/tags"&gt; &lt;img src="https://img.shields.io/github/package-json/v/browserless/chrome" alt="Version" /&gt; &lt;/a&gt; 
 &lt;/center&gt; 
 &lt;br /&gt; 
 &lt;center&gt; 
  &lt;img src="https://github.com/browserless/chrome/actions/workflows/docker-chromium.yml/badge.svg?sanitize=true" alt="Chromium build" /&gt; 
  &lt;img src="https://github.com/browserless/chrome/actions/workflows/docker-firefox.yml/badge.svg?sanitize=true" alt="Firefox build" /&gt; 
  &lt;img src="https://github.com/browserless/chrome/actions/workflows/docker-webkit.yml/badge.svg?sanitize=true" alt="Webkit build" /&gt; 
  &lt;img src="https://github.com/browserless/chrome/actions/workflows/docker-edge.yml/badge.svg?sanitize=true" alt="Edge build" /&gt; 
  &lt;img src="https://github.com/browserless/chrome/actions/workflows/docker-multi.yml/badge.svg?sanitize=true" alt="Mulltibrowser build" /&gt; 
 &lt;/center&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Looking to bypass bot detectors and solve captchas? &lt;a href="https://www.browserless.io/feature/browserql"&gt;We would recommend using BrowserQL as our stealthiest option&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Browserless allows remote clients to connect and execute headless work, all inside of docker. It supports the standard, unforked Puppeteer and Playwright libraries, as well offering REST-based APIs for common actions like data collection, PDF generation and more.&lt;/p&gt; 
&lt;p&gt;We take care of common issues such as missing system-fonts, missing external libraries, and performance improvements, along with edge-cases like downloading files and managing sessions. For details, check out the documentation site built into the project which includes Open API docs.&lt;/p&gt; 
&lt;p&gt;If you've been struggling to deploy headless browsers without running into issues or bloated resource requirements, then Browserless was built for you. Run the browsers in &lt;a href="https://browserless.io/"&gt;our cloud&lt;/a&gt; or your own, &lt;a href="https://github.com/browserless/browserless#licensing"&gt;free for non-commercial uses&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#external-links"&gt;External links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#how-it-works"&gt;How it works&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#hosting-providers"&gt;Hosting Providers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#puppeteer"&gt;Puppeteer&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#playwright"&gt;Playwright&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#extending-nodejs-sdk"&gt;Extending (NodeJS SDK)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#debugger"&gt;Debugger&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#install-debugger"&gt;Install debugger&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#usage-with-other-libraries"&gt;Usage with other libraries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#motivations"&gt;Motivations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/#licensing"&gt;Licensing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;External links&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://docs.browserless.io/"&gt;Full documentation site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chrome.browserless.io/"&gt;Live Debugger (using browserless.io)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/browserless/browserless/pkgs/container/base"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;General&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Parallelism and request-queueing are built-in + configurable.&lt;/li&gt; 
 &lt;li&gt;Fonts and emoji's working out-of-the-box.&lt;/li&gt; 
 &lt;li&gt;Debug Viewer for actively viewing/debugging running sessions.&lt;/li&gt; 
 &lt;li&gt;An interactive puppeteer debugger, so you can see what the headless browser is doing and use its DevTools.&lt;/li&gt; 
 &lt;li&gt;Works with unforked Puppeteer and Playwright.&lt;/li&gt; 
 &lt;li&gt;Configurable session timers and health-checks to keep things running smoothly.&lt;/li&gt; 
 &lt;li&gt;Error tolerant: if Chrome dies it won't.&lt;/li&gt; 
 &lt;li&gt;Support for running and development on Apple's M1 machines&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud-only&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href="https://www.browserless.io/pricing/"&gt;cloud accounts&lt;/a&gt; include all the general features plus extras, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.browserless.io/feature/browserql"&gt;BrowserQL&lt;/a&gt; for avoiding detectors and solving captchas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.browserless.io/blog/hybrid-automations-for-puppeteer/"&gt;Hybrid automations&lt;/a&gt; for streaming login windows during scripts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.browserless.io/blog/reconnect-api"&gt;/reconnect API&lt;/a&gt; for keeping browsers alive for reuse&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.browserless.io/feature/rest-apis"&gt;REST APIs&lt;/a&gt; for tasks such as retrieving HTML, PDFs or Lighthouse metrics&lt;/li&gt; 
 &lt;li&gt;Inbuilt &lt;a href="https://www.browserless.io/blog/residential-proxying/"&gt;residential proxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SSO, tokens and user roles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;Browserless listens for both incoming websocket requests, generally issued by most libraries, as well as pre-build REST APIs to do common functions (PDF generation, images and so on). When a websocket connects to Browserless it starts Chrome and proxies your request into it. Once the session is done then it closes and awaits for more connections. Some libraries use Chrome's HTTP endpoints, like &lt;code&gt;/json&lt;/code&gt; to inspect debug-able targets, which Browserless also supports.&lt;/p&gt; 
&lt;p&gt;You still execute the script itself which gives you total control over what library you want to choose and when to do upgrades. This also comes with the benefit of keep your code proprietary and able to run on numerous platforms. We simply take care of all the browser-aspects and offer a management layer on top of the browser.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] See more options on our &lt;a href="https://docs.browserless.io/baas/docker/quickstart"&gt;full documentation site&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;docker run -p 3000:3000 ghcr.io/browserless/chromium&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Visit &lt;code&gt;http://localhost:3000/docs&lt;/code&gt; to see the documentation site.&lt;/li&gt; 
 &lt;li&gt;See more at our &lt;a href="https://github.com/browserless/browserless/pkgs/container/base"&gt;docker package&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Hosting Providers&lt;/h3&gt; 
&lt;p&gt;We offer a first-class hosted product located &lt;a href="https://browserless.io"&gt;here&lt;/a&gt;. Alternatively you can host this image on just about any major platform that offers hosting for docker. Our hosted service takes care of all the machine provisioning, notifications, dashboards and monitoring plus more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Easily upgrade and toggle between versions at the press of a button. No managing repositories and other code artifacts.&lt;/li&gt; 
 &lt;li&gt;Never need to update or pull anything from docker. There's literally zero software to install to get started.&lt;/li&gt; 
 &lt;li&gt;Scale your consumption up or down with different plans. We support up to thousands of concurrent sessions at a given time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're interested in using this image for commercial aspects, then please read the below section on licensing.&lt;/p&gt; 
&lt;h3&gt;Puppeteer&lt;/h3&gt; 
&lt;p&gt;Puppeteer allows you to specify a remote location for chrome via the &lt;code&gt;browserWSEndpoint&lt;/code&gt; option. Setting this for Browserless is a single line of code change.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const browser = await puppeteer.launch();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const browser = await puppeteer.connect({
  browserWSEndpoint: 'ws://localhost:3000',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Playwright&lt;/h3&gt; 
&lt;p&gt;We support running with playwright via their browser's remote connection protocols interface out of the box. Just make sure that your Docker image, playwright browser type &lt;em&gt;and&lt;/em&gt; endpoint match:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Before&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import pw from 'playwright';
const browser = await pw.firefox.launch();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;After&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run -p 3000:3000 ghcr.io/browserless/firefox
# or ghcr.io/browserless/multi for all the browsers
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import pw from 'playwright-core';

const browser = await pw.firefox.connect(
  'ws://localhost:3000/firefox/playwright',
);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After that, the rest of your code remains the same with no other changes required.&lt;/p&gt; 
&lt;h2&gt;Extending (NodeJS SDK)&lt;/h2&gt; 
&lt;p&gt;Browserless comes with built-in extension capabilities, and allows for extending nearly any aspect of the system (for Version 2+). For more details on how to write your own routes, build docker images, and more, &lt;a href="https://raw.githubusercontent.com/browserless/browserless/main/bin/scaffold/README.md"&gt;see our SDK README.md&lt;/a&gt; or simply run "npx @browserless.io/browserless create" in a terminal and follow the onscreen prompts.&lt;/p&gt; 
&lt;h2&gt;Debugger&lt;/h2&gt; 
&lt;p&gt;You can install a first-party interactive debugger for Browserless, that makes writing scripts faster and interactive. You can take advantage of things like &lt;code&gt;debugger;&lt;/code&gt; calls and the page's console output to see what's happening on the page while your script is running. All of the Chrome devtools are there at your disposal.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/browserless/browserless/main/assets/debugger.png" alt="browserless.io logo" /&gt;&lt;/p&gt; 
&lt;p&gt;A small list of features includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Running &lt;code&gt;debugger;&lt;/code&gt; and &lt;code&gt;console.log&lt;/code&gt; calls&lt;/li&gt; 
 &lt;li&gt;Errors in the script are caught and show up in the console tab&lt;/li&gt; 
 &lt;li&gt;DOM inspection, watch network requests, and even see how the page is rendering&lt;/li&gt; 
 &lt;li&gt;Exporting you debugging script as a Node project&lt;/li&gt; 
 &lt;li&gt;Everything included in Chrome DevTools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install debugger&lt;/h3&gt; 
&lt;p&gt;Installing the debugger is as simple as running the &lt;code&gt;install:debugger&lt;/code&gt; script &lt;em&gt;after&lt;/em&gt; the project has been built. This way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ npm run build
$ npm run install:debugger #or npm install:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will then see the debugger url during the startup process.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-log"&gt;---------------------------------------------------------
| browserless.io
| To read documentation and more, load in your browser:
|
| OpenAPI: http://localhost:3000/docs
| Full Documentation: https://docs.browserless.io/
| Debbuger: http://localhost:3000/debugger/?token=6R0W53R135510
---------------------------------------------------------
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage with other libraries&lt;/h2&gt; 
&lt;p&gt;Most libraries allow you to specify a remote instance of Chrome to interact with. They are either looking for a websocket endpoint, a host and port, or some address. Browserless supports these by default, however if you're having issues please make an issue in this project and we'll try and work with the library authors to get them integrated with browserless. Please note that in V2 we no longer support selenium or webdriver integrations.&lt;/p&gt; 
&lt;p&gt;You can find a much larger list of supported libraries &lt;a href="https://docs.browserless.io/libraries/puppeteer"&gt;on our documentation site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Motivations&lt;/h2&gt; 
&lt;p&gt;Running Chrome on lambda or on your own is a fantastic idea but in practice is quite challenging in production. You're met with pretty tough cloud limits, possibly building Chrome yourself, and then dealing with odd invocation issues should everything else go ok. A lot of issues in various repositories are due to just challenges of getting Chrome running smoothly in AWS (see &lt;a href="https://github.com/GoogleChrome/puppeteer/issues?q=is%3Aissue+is%3Aopen+sort%3Acomments-desc"&gt;here&lt;/a&gt;). You can see for yourself by going to nearly any library and sorting issues by most commented.&lt;/p&gt; 
&lt;p&gt;Getting Chrome running well in docker is also a challenge as there's quiet a few packages you need in order to get Chrome running. Once that's done then there's still missing fonts, getting libraries to work with it, and having limitations on service reliability. This is also ignoring CVEs, access-controls, and scaling strategies.&lt;/p&gt; 
&lt;p&gt;All of these issues prompted us to build a first-class image and workflow for interacting with Chrome in a more streamlined way. With Browserless you never have to worry about fonts, extra packages, library support, security, or anything else. It just works reliably like any other modern web service. On top of that it comes with a prescribed approach on how you interact with Chrome, which is through socket connections (similar to a database or any other external appliance). What this means is that you get the ability to drive Chrome remotely without having to do updates/releases to the thing that runs Chrome since it's divorced from your application.&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;SPDX-License-Identifier: SSPL-1.0 OR Browserless Commercial License.&lt;/p&gt; 
&lt;p&gt;If you want to use Browserless to build commercial sites, applications, or in a continuous-integration system that's closed-source then you'll need to purchase a commercial license. This allows you to keep your software proprietary whilst still using browserless. &lt;a href="https://www.browserless.io/contact"&gt;You can purchase a commercial license here&lt;/a&gt;. A commercial license grants you:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Priority support on issues and features.&lt;/li&gt; 
 &lt;li&gt;On-premise running as well as running on public cloud providers for commercial/CI purposes for proprietary systems.&lt;/li&gt; 
 &lt;li&gt;Ability to modify the source (forking) for your own purposes.&lt;/li&gt; 
 &lt;li&gt;A new admin user-interface.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Not only does it grant you a license to run such a critical piece of infrastructure, but you are also supporting further innovation in this space and our ability to contribute to it.&lt;/p&gt; 
&lt;p&gt;If you are creating an open source application under a license compatible with the Server Side License 1.0, you may use Browserless under those terms.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sindresorhus/ky</title>
      <link>https://github.com/sindresorhus/ky</link>
      <description>&lt;p&gt;🌳 Tiny &amp; elegant JavaScript HTTP client based on the Fetch API&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;div&gt; 
  &lt;img width="600" height="600" src="https://raw.githubusercontent.com/sindresorhus/ky/main/media/logo.svg?sanitize=true" alt="ky" /&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Ky is a tiny and elegant HTTP client based on the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch"&gt;Fetch API&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://codecov.io/gh/sindresorhus/ky"&gt;&lt;img src="https://codecov.io/gh/sindresorhus/ky/branch/main/graph/badge.svg?sanitize=true" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=ky"&gt;&lt;img src="https://badgen.net/bundlephobia/minzip/ky" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Ky targets &lt;a href="https://raw.githubusercontent.com/sindresorhus/ky/main/#browser-support"&gt;modern browsers&lt;/a&gt;, Node.js, Bun, and Deno.&lt;/p&gt; 
&lt;p&gt;It's just a tiny package with no dependencies.&lt;/p&gt; 
&lt;h2&gt;Benefits over plain &lt;code&gt;fetch&lt;/code&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simpler API&lt;/li&gt; 
 &lt;li&gt;Method shortcuts (&lt;code&gt;ky.post()&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Treats non-2xx status codes as errors (after redirects)&lt;/li&gt; 
 &lt;li&gt;Retries failed requests&lt;/li&gt; 
 &lt;li&gt;JSON option&lt;/li&gt; 
 &lt;li&gt;Timeout support&lt;/li&gt; 
 &lt;li&gt;URL prefix option&lt;/li&gt; 
 &lt;li&gt;Instances with custom defaults&lt;/li&gt; 
 &lt;li&gt;Hooks&lt;/li&gt; 
 &lt;li&gt;TypeScript niceties (e.g. &lt;code&gt;.json()&lt;/code&gt; supports generics and defaults to &lt;code&gt;unknown&lt;/code&gt;, not &lt;code&gt;any&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install ky
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;CDN&lt;/h6&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://cdn.jsdelivr.net/npm/ky/+esm"&gt;jsdelivr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://unpkg.com/ky"&gt;unpkg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://esm.sh/ky"&gt;esm.sh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const json = await ky.post('https://example.com', {json: {foo: true}}).json();

console.log(json);
//=&amp;gt; {data: '🦄'}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With plain &lt;code&gt;fetch&lt;/code&gt;, it would be:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class HTTPError extends Error {}

const response = await fetch('https://example.com', {
	method: 'POST',
	body: JSON.stringify({foo: true}),
	headers: {
		'content-type': 'application/json'
	}
});

if (!response.ok) {
	throw new HTTPError(`Fetch error: ${response.statusText}`);
}

const json = await response.json();

console.log(json);
//=&amp;gt; {data: '🦄'}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using &lt;a href="https://github.com/denoland/deno"&gt;Deno&lt;/a&gt;, import Ky from a URL. For example, using a CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'https://esm.sh/ky';
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;ky(input, options?)&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;input&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; are the same as &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch"&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;, with additional &lt;code&gt;options&lt;/code&gt; available (see below).&lt;/p&gt; 
&lt;p&gt;Returns a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Response"&gt;&lt;code&gt;Response&lt;/code&gt; object&lt;/a&gt; with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#body"&gt;&lt;code&gt;Body&lt;/code&gt; methods&lt;/a&gt; added for convenience. So you can, for example, call &lt;code&gt;ky.get(input).json()&lt;/code&gt; directly without having to await the &lt;code&gt;Response&lt;/code&gt; first. When called like that, an appropriate &lt;code&gt;Accept&lt;/code&gt; header will be set depending on the body method used. Unlike the &lt;code&gt;Body&lt;/code&gt; methods of &lt;code&gt;window.Fetch&lt;/code&gt;, these will throw an &lt;code&gt;HTTPError&lt;/code&gt; if the response status is not in the range of &lt;code&gt;200...299&lt;/code&gt;. Also, &lt;code&gt;.json()&lt;/code&gt; will return an empty string if body is empty or the response status is &lt;code&gt;204&lt;/code&gt; instead of throwing a parse error due to an empty body.&lt;/p&gt; 
&lt;p&gt;Available body shortcuts: &lt;code&gt;.json()&lt;/code&gt;, &lt;code&gt;.text()&lt;/code&gt;, &lt;code&gt;.formData()&lt;/code&gt;, &lt;code&gt;.arrayBuffer()&lt;/code&gt;, &lt;code&gt;.blob()&lt;/code&gt;, and &lt;code&gt;.bytes()&lt;/code&gt;. The &lt;code&gt;.bytes()&lt;/code&gt; shortcut is only present when the runtime supports &lt;code&gt;Response.prototype.bytes()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const user = await ky('/api/user').json();

console.log(user);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;⌨️ &lt;strong&gt;TypeScript:&lt;/strong&gt; Accepts an optional &lt;a href="https://www.typescriptlang.org/docs/handbook/2/generics.html"&gt;type parameter&lt;/a&gt;, which defaults to &lt;a href="https://www.typescriptlang.org/docs/handbook/2/functions.html#unknown"&gt;&lt;code&gt;unknown&lt;/code&gt;&lt;/a&gt;, and is passed through to the return type of &lt;code&gt;.json()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import ky from 'ky';

// user1 is unknown
const user1 = await ky('/api/users/1').json();
// user2 is a User
const user2 = await ky&amp;lt;User&amp;gt;('/api/users/2').json();
// user3 is a User
const user3 = await ky('/api/users/3').json&amp;lt;User&amp;gt;();

console.log([user1, user2, user3]);

// Get raw bytes (when supported by the runtime)
const bytes = await ky('/api/file').bytes();
console.log(bytes instanceof Uint8Array);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ky.get(input, options?)&lt;/h3&gt; 
&lt;h3&gt;ky.post(input, options?)&lt;/h3&gt; 
&lt;h3&gt;ky.put(input, options?)&lt;/h3&gt; 
&lt;h3&gt;ky.patch(input, options?)&lt;/h3&gt; 
&lt;h3&gt;ky.head(input, options?)&lt;/h3&gt; 
&lt;h3&gt;ky.delete(input, options?)&lt;/h3&gt; 
&lt;p&gt;Sets &lt;code&gt;options.method&lt;/code&gt; to the method name and makes a request.&lt;/p&gt; 
&lt;p&gt;⌨️ &lt;strong&gt;TypeScript:&lt;/strong&gt; Accepts an optional type parameter for use with JSON responses (see &lt;a href="https://raw.githubusercontent.com/sindresorhus/ky/main/#kyinput-options"&gt;&lt;code&gt;ky()&lt;/code&gt;&lt;/a&gt;).&lt;/p&gt; 
&lt;h4&gt;input&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt; | &lt;code&gt;URL&lt;/code&gt; | &lt;code&gt;Request&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Same as &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Request/Request#input"&gt;&lt;code&gt;fetch&lt;/code&gt; input&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Request"&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; instance as &lt;code&gt;input&lt;/code&gt;, any URL altering options (such as &lt;code&gt;prefixUrl&lt;/code&gt;) will be ignored.&lt;/p&gt; 
&lt;h4&gt;options&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Same as &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch#options"&gt;&lt;code&gt;fetch&lt;/code&gt; options&lt;/a&gt;, plus the following additional options:&lt;/p&gt; 
&lt;h5&gt;method&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;string&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;'get'&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;HTTP method used to make the request.&lt;/p&gt; 
&lt;p&gt;Internally, the standard methods (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt; and &lt;code&gt;DELETE&lt;/code&gt;) are uppercased in order to avoid server errors due to case sensitivity.&lt;/p&gt; 
&lt;h5&gt;json&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;object&lt;/code&gt; and any other value accepted by &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify"&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Shortcut for sending JSON. Use this instead of the &lt;code&gt;body&lt;/code&gt; option. Accepts any plain object or value, which will be &lt;code&gt;JSON.stringify()&lt;/code&gt;'d and sent in the body with the correct header set.&lt;/p&gt; 
&lt;h5&gt;searchParams&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;string | object&amp;lt;string, string | number | boolean | undefined&amp;gt; | Array&amp;lt;Array&amp;lt;string | number | boolean&amp;gt;&amp;gt; | URLSearchParams&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;''&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Search parameters to include in the request URL. Setting this will override all existing search parameters in the input URL.&lt;/p&gt; 
&lt;p&gt;Accepts any value supported by &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams/URLSearchParams"&gt;&lt;code&gt;URLSearchParams()&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When passing an object, &lt;code&gt;undefined&lt;/code&gt; values are automatically filtered out, while &lt;code&gt;null&lt;/code&gt; values are preserved and converted to the string &lt;code&gt;'null'&lt;/code&gt;.&lt;/p&gt; 
&lt;h5&gt;prefixUrl&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;string | URL&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;A prefix to prepend to the &lt;code&gt;input&lt;/code&gt; URL when making the request. It can be any valid URL, either relative or absolute. A trailing slash &lt;code&gt;/&lt;/code&gt; is optional and will be added automatically, if needed, when it is joined with &lt;code&gt;input&lt;/code&gt;. Only takes effect when &lt;code&gt;input&lt;/code&gt; is a string. The &lt;code&gt;input&lt;/code&gt; argument cannot start with a slash &lt;code&gt;/&lt;/code&gt; when using this option.&lt;/p&gt; 
&lt;p&gt;Useful when used with &lt;a href="https://raw.githubusercontent.com/sindresorhus/ky/main/#kyextenddefaultoptions"&gt;&lt;code&gt;ky.extend()&lt;/code&gt;&lt;/a&gt; to create niche-specific Ky-instances.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

// On https://example.com

const response = await ky('unicorn', {prefixUrl: '/api'});
//=&amp;gt; 'https://example.com/api/unicorn'

const response2 = await ky('unicorn', {prefixUrl: 'https://cats.com'});
//=&amp;gt; 'https://cats.com/unicorn'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;After &lt;code&gt;prefixUrl&lt;/code&gt; and &lt;code&gt;input&lt;/code&gt; are joined, the result is resolved against the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Node/baseURI"&gt;base URL&lt;/a&gt; of the page (if any).&lt;/li&gt; 
 &lt;li&gt;Leading slashes in &lt;code&gt;input&lt;/code&gt; are disallowed when using this option to enforce consistency and avoid confusion about how the &lt;code&gt;input&lt;/code&gt; URL is handled, given that &lt;code&gt;input&lt;/code&gt; will not follow the normal URL resolution rules when &lt;code&gt;prefixUrl&lt;/code&gt; is being used, which changes the meaning of a leading slash.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;retry&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;object | number&lt;/code&gt;&lt;br /&gt; Default:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;limit&lt;/code&gt;: &lt;code&gt;2&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;methods&lt;/code&gt;: &lt;code&gt;get&lt;/code&gt; &lt;code&gt;put&lt;/code&gt; &lt;code&gt;head&lt;/code&gt; &lt;code&gt;delete&lt;/code&gt; &lt;code&gt;options&lt;/code&gt; &lt;code&gt;trace&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;statusCodes&lt;/code&gt;: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/408"&gt;&lt;code&gt;408&lt;/code&gt;&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/413"&gt;&lt;code&gt;413&lt;/code&gt;&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"&gt;&lt;code&gt;429&lt;/code&gt;&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500"&gt;&lt;code&gt;500&lt;/code&gt;&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502"&gt;&lt;code&gt;502&lt;/code&gt;&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503"&gt;&lt;code&gt;503&lt;/code&gt;&lt;/a&gt; &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504"&gt;&lt;code&gt;504&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;afterStatusCodes&lt;/code&gt;: &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/413"&gt;&lt;code&gt;413&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/429"&gt;&lt;code&gt;429&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503"&gt;&lt;code&gt;503&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;maxRetryAfter&lt;/code&gt;: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;backoffLimit&lt;/code&gt;: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;delay&lt;/code&gt;: &lt;code&gt;attemptCount =&amp;gt; 0.3 * (2 ** (attemptCount - 1)) * 1000&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jitter&lt;/code&gt;: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;retryOnTimeout&lt;/code&gt;: &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;shouldRetry&lt;/code&gt;: &lt;code&gt;undefined&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;An object representing &lt;code&gt;limit&lt;/code&gt;, &lt;code&gt;methods&lt;/code&gt;, &lt;code&gt;statusCodes&lt;/code&gt;, &lt;code&gt;afterStatusCodes&lt;/code&gt;, &lt;code&gt;maxRetryAfter&lt;/code&gt;, &lt;code&gt;backoffLimit&lt;/code&gt;, &lt;code&gt;delay&lt;/code&gt;, &lt;code&gt;jitter&lt;/code&gt;, &lt;code&gt;retryOnTimeout&lt;/code&gt;, and &lt;code&gt;shouldRetry&lt;/code&gt; fields for maximum retry count, allowed methods, allowed status codes, status codes allowed to use the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After"&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; time, maximum &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After"&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; time, backoff limit, delay calculation function, retry jitter, timeout retry behavior, and custom retry logic.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;retry&lt;/code&gt; is a number, it will be used as &lt;code&gt;limit&lt;/code&gt; and other defaults will remain in place.&lt;/p&gt; 
&lt;p&gt;If the response provides an HTTP status contained in &lt;code&gt;afterStatusCodes&lt;/code&gt;, Ky will wait until the date, timeout, or timestamp given in the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After"&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; header has passed to retry the request. If &lt;code&gt;Retry-After&lt;/code&gt; is missing, the non-standard &lt;a href="https://www.ietf.org/archive/id/draft-polli-ratelimit-headers-05.html#section-3.3"&gt;&lt;code&gt;RateLimit-Reset&lt;/code&gt;&lt;/a&gt; header is used in its place as a fallback. If the provided status code is not in the list, the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After"&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; header will be ignored.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;maxRetryAfter&lt;/code&gt; is set to &lt;code&gt;undefined&lt;/code&gt;, it will use &lt;code&gt;options.timeout&lt;/code&gt;. If &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After"&gt;&lt;code&gt;Retry-After&lt;/code&gt;&lt;/a&gt; header is greater than &lt;code&gt;maxRetryAfter&lt;/code&gt;, it will use &lt;code&gt;maxRetryAfter&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;backoffLimit&lt;/code&gt; option is the upper limit of the delay per retry in milliseconds. To clamp the delay, set &lt;code&gt;backoffLimit&lt;/code&gt; to 1000, for example. By default, the delay is calculated with &lt;code&gt;0.3 * (2 ** (attemptCount - 1)) * 1000&lt;/code&gt;. The delay increases exponentially.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;delay&lt;/code&gt; option can be used to change how the delay between retries is calculated. The function receives one parameter, the attempt count, starting at &lt;code&gt;1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;jitter&lt;/code&gt; option adds random jitter to retry delays to prevent thundering herd problems. When many clients retry simultaneously (e.g., after hitting a rate limit), they can overwhelm the server again. Jitter adds randomness to break this synchronization. Set to &lt;code&gt;true&lt;/code&gt; to use full jitter, which randomizes the delay between 0 and the computed delay. Alternatively, pass a function to implement custom jitter strategies.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Jitter is not applied when the server provides a &lt;code&gt;Retry-After&lt;/code&gt; header, as the server's explicit timing should be respected.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;retryOnTimeout&lt;/code&gt; option determines whether to retry when a request times out. By default, retries are not triggered following a &lt;a href="https://raw.githubusercontent.com/sindresorhus/ky/main/#timeout"&gt;timeout&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;shouldRetry&lt;/code&gt; option provides custom retry logic that &lt;strong&gt;takes precedence over all other retry checks&lt;/strong&gt;. This function is called first, before any other retry validation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This is different from the &lt;code&gt;beforeRetry&lt;/code&gt; hook:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;shouldRetry&lt;/code&gt;: Controls WHETHER to retry (called before the retry decision is made)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;beforeRetry&lt;/code&gt;: Called AFTER retry is confirmed, allowing you to modify the request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The function receives a state object with the error and retry count (starts at 1 for the first retry), and should return:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;true&lt;/code&gt; to force a retry (bypasses &lt;code&gt;retryOnTimeout&lt;/code&gt;, status code checks, and other validations)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;false&lt;/code&gt; to prevent a retry (no retry will occur)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt; to use the default retry logic (&lt;code&gt;retryOnTimeout&lt;/code&gt;, status codes, etc.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;General example&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const json = await ky('https://example.com', {
	retry: {
		limit: 10,
		methods: ['get'],
		statusCodes: [413],
		backoffLimit: 3000
	}
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Retrying on timeout:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const json = await ky('https://example.com', {
	timeout: 5000,
	retry: {
		limit: 3,
		retryOnTimeout: true
	}
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Using jitter to prevent thundering herd:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const json = await ky('https://example.com', {
	retry: {
		limit: 5,

		// Full jitter (randomizes delay between 0 and computed value)
		jitter: true

		// Percentage jitter (80-120% of delay)
		// jitter: delay =&amp;gt; delay * (0.8 + Math.random() * 0.4)

		// Absolute jitter (±100ms)
		// jitter: delay =&amp;gt; delay + (Math.random() * 200 - 100)
	}
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Custom retry logic:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky, {HTTPError} from 'ky';

const json = await ky('https://example.com', {
	retry: {
		limit: 3,
		shouldRetry: ({error, retryCount}) =&amp;gt; {
			// Retry on specific business logic errors from API
			if (error instanceof HTTPError) {
				const status = error.response.status;

				// Retry on 429 (rate limit) but only for first 2 attempts
				if (status === 429 &amp;amp;&amp;amp; retryCount &amp;lt;= 2) {
					return true;
				}

				// Don't retry on 4xx errors except rate limits
				if (status &amp;gt;= 400 &amp;amp;&amp;amp; status &amp;lt; 500) {
					return false;
				}
			}

			// Use default retry logic for other errors
			return undefined;
		}
	}
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Chromium-based browsers automatically retry &lt;code&gt;408 Request Timeout&lt;/code&gt; responses at the network layer for keep-alive connections. This means requests may be retried by both the browser and ky. If you want to avoid duplicate retries, you can either set &lt;code&gt;keepalive: false&lt;/code&gt; in your request options (though this may impact performance for multiple requests) or remove &lt;code&gt;408&lt;/code&gt; from the retry status codes.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;timeout&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;number | false&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;10000&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Timeout in milliseconds for getting a response, including any retries. Can not be greater than 2147483647. If set to &lt;code&gt;false&lt;/code&gt;, there will be no timeout.&lt;/p&gt; 
&lt;h5&gt;hooks&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;object&amp;lt;string, Function[]&amp;gt;&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;{beforeRequest: [], beforeRetry: [], afterResponse: []}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Hooks allow modifications during the request lifecycle. Hook functions may be async and are run serially.&lt;/p&gt; 
&lt;h6&gt;hooks.beforeRequest&lt;/h6&gt; 
&lt;p&gt;Type: &lt;code&gt;Function[]&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This hook enables you to modify the request right before it is sent. Ky will make no further changes to the request after this. The hook function receives the normalized request, options, and a state object. You could, for example, modify the &lt;code&gt;request.headers&lt;/code&gt; here.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;state.retryCount&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; for the initial request and increments with each retry. This allows you to distinguish between initial requests and retries, which is useful when you need different behavior for retries (e.g., avoiding overwriting headers set in &lt;code&gt;beforeRetry&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;The hook can return a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Request"&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; to replace the outgoing request, or return a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Response"&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; to completely avoid making an HTTP request. This can be used to mock a request, check an internal cache, etc. An &lt;strong&gt;important&lt;/strong&gt; consideration when returning a request or response from this hook is that any remaining &lt;code&gt;beforeRequest&lt;/code&gt; hooks will be skipped, so you may want to only return them from the last hook.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const api = ky.extend({
	hooks: {
		beforeRequest: [
			(request, options, {retryCount}) =&amp;gt; {
				// Only set default auth header on initial request, not on retries
				// (retries may have refreshed token set by beforeRetry)
				if (retryCount === 0) {
					request.headers.set('Authorization', 'token initial-token');
				}
			}
		]
	}
});

const response = await api.get('https://example.com/api/users');
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;hooks.beforeRetry&lt;/h6&gt; 
&lt;p&gt;Type: &lt;code&gt;Function[]&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This hook enables you to modify the request right before retry. Ky will make no further changes to the request after this. The hook function receives an object with the normalized request and options, an error instance, and the retry count. You could, for example, modify &lt;code&gt;request.headers&lt;/code&gt; here.&lt;/p&gt; 
&lt;p&gt;The hook can return a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Request"&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; to replace the outgoing retry request, or return a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Response"&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; to skip the retry and use that response instead. &lt;strong&gt;Note:&lt;/strong&gt; Returning a request or response skips remaining &lt;code&gt;beforeRetry&lt;/code&gt; hooks.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;retryCount&lt;/code&gt; is always &lt;code&gt;&amp;gt;= 1&lt;/code&gt; since this hook is only called during retries, not on the initial request.&lt;/p&gt; 
&lt;p&gt;If the request received a response, the error will be of type &lt;code&gt;HTTPError&lt;/code&gt; and the &lt;code&gt;Response&lt;/code&gt; object will be available at &lt;code&gt;error.response&lt;/code&gt;. Be aware that some types of errors, such as network errors, inherently mean that a response was not received. In that case, the error will not be an instance of &lt;code&gt;HTTPError&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can prevent Ky from retrying the request by throwing an error. Ky will not handle it in any way and the error will be propagated to the request initiator. The rest of the &lt;code&gt;beforeRetry&lt;/code&gt; hooks will not be called in this case. Alternatively, you can return the &lt;a href="https://raw.githubusercontent.com/sindresorhus/ky/main/#kystop"&gt;&lt;code&gt;ky.stop&lt;/code&gt;&lt;/a&gt; symbol to do the same thing but without propagating an error (this has some limitations, see &lt;code&gt;ky.stop&lt;/code&gt; docs for details).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Modifying headers:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const response = await ky('https://example.com', {
	hooks: {
		beforeRetry: [
			async ({request, options, error, retryCount}) =&amp;gt; {
				const token = await ky('https://example.com/refresh-token');
				request.headers.set('Authorization', `token ${token}`);
			}
		]
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Modifying the request URL:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const response = await ky('https://example.com/api', {
	hooks: {
		beforeRetry: [
			async ({request, error}) =&amp;gt; {
				// Add query parameters based on error response
				if (error.response) {
					const body = await error.response.json();
					const url = new URL(request.url);
					url.searchParams.set('processId', body.processId);
					return new Request(url, request);
				}
			}
		]
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Returning a cached response:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const response = await ky('https://example.com/api', {
	hooks: {
		beforeRetry: [
			({error, retryCount}) =&amp;gt; {
				// Use cached response instead of retrying
				if (retryCount &amp;gt; 1 &amp;amp;&amp;amp; cachedResponse) {
					return cachedResponse;
				}
			}
		]
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;hooks.beforeError&lt;/h6&gt; 
&lt;p&gt;Type: &lt;code&gt;Function[]&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This hook enables you to modify the &lt;code&gt;HTTPError&lt;/code&gt; right before it is thrown. The hook function receives a &lt;code&gt;HTTPError&lt;/code&gt; and a state object as arguments and should return an instance of &lt;code&gt;HTTPError&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;state.retryCount&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; for the initial request and increments with each retry. This allows you to distinguish between the initial request and retries, which is useful when you need different error handling based on retry attempts (e.g., showing different error messages on the final attempt).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

await ky('https://example.com', {
	hooks: {
		beforeError: [
			async error =&amp;gt; {
				const {response} = error;
				if (response) {
					const body = await response.json();
					error.name = 'GitHubError';
					error.message = `${body.message} (${response.status})`;
				}

				return error;
			},

			// Or show different message based on retry count
			(error, state) =&amp;gt; {
				if (state.retryCount === error.options.retry.limit) {
					error.message = `${error.message} (failed after ${state.retryCount} retries)`;
				}

				return error;
			}
		]
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h6&gt;hooks.afterResponse&lt;/h6&gt; 
&lt;p&gt;Type: &lt;code&gt;Function[]&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;[]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This hook enables you to read and optionally modify the response. The hook function receives normalized request, options, a clone of the response, and a state object. The return value of the hook function will be used by Ky as the response object if it's an instance of &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Response"&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;state.retryCount&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt; for the initial request and increments with each retry. This allows you to distinguish between initial requests and retries, which is useful when you need different behavior for retries (e.g., showing a notification only on the final retry).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const response = await ky('https://example.com', {
	hooks: {
		afterResponse: [
			(_request, _options, response) =&amp;gt; {
				// You could do something with the response, for example, logging.
				log(response);

				// Or return a `Response` instance to overwrite the response.
				return new Response('A different response', {status: 200});
			},

			// Or retry with a fresh token on a 403 error
			async (request, options, response) =&amp;gt; {
				if (response.status === 403) {
					// Get a fresh token
					const token = await ky('https://example.com/token').text();

					// Retry with the token
					request.headers.set('Authorization', `token ${token}`);

					return ky(request, options);
				}
			},

			// Or show a notification only on the last retry for 5xx errors
			(request, options, response, {retryCount}) =&amp;gt; {
				if (response.status &amp;gt;= 500 &amp;amp;&amp;amp; response.status &amp;lt;= 599) {
					if (retryCount === options.retry.limit) {
						showNotification('Request failed after all retries');
					}
				}
			}
		]
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;throwHttpErrors&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;boolean&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;true&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Throw an &lt;code&gt;HTTPError&lt;/code&gt; when, after following redirects, the response has a non-2xx status code. To also throw for redirects instead of following them, set the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters"&gt;&lt;code&gt;redirect&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;'manual'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Setting this to &lt;code&gt;false&lt;/code&gt; may be useful if you are checking for resource availability and are expecting error responses.&lt;/p&gt; 
&lt;p&gt;Note: If &lt;code&gt;false&lt;/code&gt;, error responses are considered successful and the request will not be retried.&lt;/p&gt; 
&lt;h5&gt;onDownloadProgress&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Download progress event handler.&lt;/p&gt; 
&lt;p&gt;The function receives these arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;progress&lt;/code&gt; is an object with the these properties:&lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;percent&lt;/code&gt; is a number between 0 and 1 representing the progress percentage.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;transferredBytes&lt;/code&gt; is the number of bytes transferred so far.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;totalBytes&lt;/code&gt; is the total number of bytes to be transferred. This is an estimate and may be 0 if the total size cannot be determined.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;chunk&lt;/code&gt; is an instance of &lt;code&gt;Uint8Array&lt;/code&gt; containing the data that was sent. Note: It's empty for the first call.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const response = await ky('https://example.com', {
	onDownloadProgress: (progress, chunk) =&amp;gt; {
		// Example output:
		// `0% - 0 of 1271 bytes`
		// `100% - 1271 of 1271 bytes`
		console.log(`${progress.percent * 100}% - ${progress.transferredBytes} of ${progress.totalBytes} bytes`);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;onUploadProgress&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Upload progress event handler.&lt;/p&gt; 
&lt;p&gt;The function receives these arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;progress&lt;/code&gt; is an object with the these properties:&lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;percent&lt;/code&gt; is a number between 0 and 1 representing the progress percentage.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;transferredBytes&lt;/code&gt; is the number of bytes transferred so far.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;totalBytes&lt;/code&gt; is the total number of bytes to be transferred. This is an estimate and may be 0 if the total size cannot be determined.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;chunk&lt;/code&gt; is an instance of &lt;code&gt;Uint8Array&lt;/code&gt; containing the data that was sent. Note: It's empty for the last call.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const response = await ky.post('https://example.com/upload', {
	body: largeFile,
	onUploadProgress: (progress, chunk) =&amp;gt; {
		// Example output:
		// `0% - 0 of 1271 bytes`
		// `100% - 1271 of 1271 bytes`
		console.log(`${progress.percent * 100}% - ${progress.transferredBytes} of ${progress.totalBytes} bytes`);
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;parseJson&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;User-defined JSON-parsing function.&lt;/p&gt; 
&lt;p&gt;Use-cases:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Parse JSON via the &lt;a href="https://github.com/hapijs/bourne"&gt;&lt;code&gt;bourne&lt;/code&gt; package&lt;/a&gt; to protect from prototype pollution.&lt;/li&gt; 
 &lt;li&gt;Parse JSON with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse"&gt;&lt;code&gt;reviver&lt;/code&gt; option of &lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';
import bourne from '@hapijs/bourne';

const json = await ky('https://example.com', {
	parseJson: text =&amp;gt; bourne(text)
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;stringifyJson&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;User-defined JSON-stringifying function.&lt;/p&gt; 
&lt;p&gt;Use-cases:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Stringify JSON with a custom &lt;code&gt;replacer&lt;/code&gt; function.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';
import {DateTime} from 'luxon';

const json = await ky('https://example.com', {
	stringifyJson: data =&amp;gt; JSON.stringify(data, (key, value) =&amp;gt; {
		if (key.endsWith('_at')) {
			return DateTime.fromISO(value).toSeconds();
		}

		return value;
	})
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;fetch&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;Function&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;fetch&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;User-defined &lt;code&gt;fetch&lt;/code&gt; function. Has to be fully compatible with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"&gt;Fetch API&lt;/a&gt; standard.&lt;/p&gt; 
&lt;p&gt;Use-cases:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Use custom &lt;code&gt;fetch&lt;/code&gt; implementations like &lt;a href="https://www.npmjs.com/package/isomorphic-unfetch"&gt;&lt;code&gt;isomorphic-unfetch&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Use the &lt;code&gt;fetch&lt;/code&gt; wrapper function provided by some frameworks that use server-side rendering (SSR).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';
import fetch from 'isomorphic-unfetch';

const json = await ky('https://example.com', {fetch}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;context&lt;/h5&gt; 
&lt;p&gt;Type: &lt;code&gt;object&amp;lt;string, unknown&amp;gt;&lt;/code&gt;&lt;br /&gt; Default: &lt;code&gt;{}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;User-defined data passed to hooks.&lt;/p&gt; 
&lt;p&gt;This option allows you to pass arbitrary contextual data to hooks without polluting the request itself. The context is available in all hooks and is &lt;strong&gt;guaranteed to always be an object&lt;/strong&gt; (never &lt;code&gt;undefined&lt;/code&gt;), so you can safely access properties without optional chaining.&lt;/p&gt; 
&lt;p&gt;Use cases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pass authentication tokens or API keys to hooks&lt;/li&gt; 
 &lt;li&gt;Attach request metadata for logging or debugging&lt;/li&gt; 
 &lt;li&gt;Implement conditional logic in hooks based on the request context&lt;/li&gt; 
 &lt;li&gt;Pass serverless environment bindings (e.g., Cloudflare Workers)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Context is shallow merged. Top-level properties are merged, but nested objects are replaced. Only enumerable properties are copied.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

// Pass data to hooks
const api = ky.create({
	hooks: {
		beforeRequest: [
			(request, options) =&amp;gt; {
				const {token} = options.context;
				if (token) {
					request.headers.set('Authorization', `Bearer ${token}`);
				}
			}
		]
	}
});

await api('https://example.com', {
	context: {
		token: 'secret123'
	}
}).json();

// Shallow merge: only top-level properties are merged
const instance = ky.create({
	context: {
		a: 1,
		b: {
			nested: true
		}
	}
});

const extended = instance.extend({
	context: {
		b: {
			updated: true
		},
		c: 3
	}
});
// Result: {a: 1, b: {updated: true}, c: 3}
// Note: The original `b.nested` is gone (shallow merge)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ky.extend(defaultOptions)&lt;/h3&gt; 
&lt;p&gt;Create a new &lt;code&gt;ky&lt;/code&gt; instance with some defaults overridden with your own.&lt;/p&gt; 
&lt;p&gt;In contrast to &lt;code&gt;ky.create()&lt;/code&gt;, &lt;code&gt;ky.extend()&lt;/code&gt; inherits defaults from its parent.&lt;/p&gt; 
&lt;p&gt;You can pass headers as a &lt;code&gt;Headers&lt;/code&gt; instance or a plain object.&lt;/p&gt; 
&lt;p&gt;You can remove a header with &lt;code&gt;.extend()&lt;/code&gt; by passing the header with an &lt;code&gt;undefined&lt;/code&gt; value. Passing &lt;code&gt;undefined&lt;/code&gt; as a string removes the header only if it comes from a &lt;code&gt;Headers&lt;/code&gt; instance.&lt;/p&gt; 
&lt;p&gt;Similarly, you can remove existing &lt;code&gt;hooks&lt;/code&gt; entries by extending the hook with an explicit &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const url = 'https://sindresorhus.com';

const original = ky.create({
	headers: {
		rainbow: 'rainbow',
		unicorn: 'unicorn'
	},
	hooks: {
		beforeRequest: [ () =&amp;gt; console.log('before 1') ],
		afterResponse: [ () =&amp;gt; console.log('after 1') ],
	},
});

const extended = original.extend({
	headers: {
		rainbow: undefined
	},
	hooks: {
		beforeRequest: undefined,
		afterResponse: [ () =&amp;gt; console.log('after 2') ],
	}
});

const response = await extended(url).json();
//=&amp;gt; after 1
//=&amp;gt; after 2

console.log('rainbow' in response);
//=&amp;gt; false

console.log('unicorn' in response);
//=&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also refer to parent defaults by providing a function to &lt;code&gt;.extend()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const api = ky.create({prefixUrl: 'https://example.com/api'});

const usersApi = api.extend((options) =&amp;gt; ({prefixUrl: `${options.prefixUrl}/users`}));

const response = await usersApi.get('123');
//=&amp;gt; 'https://example.com/api/users/123'

const response = await api.get('version');
//=&amp;gt; 'https://example.com/api/version'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ky.create(defaultOptions)&lt;/h3&gt; 
&lt;p&gt;Create a new Ky instance with complete new defaults.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

// On https://my-site.com

const api = ky.create({prefixUrl: 'https://example.com/api'});

const response = await api.get('users/123');
//=&amp;gt; 'https://example.com/api/users/123'

const response = await api.get('/status', {prefixUrl: ''});
//=&amp;gt; 'https://my-site.com/status'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;defaultOptions&lt;/h4&gt; 
&lt;p&gt;Type: &lt;code&gt;object&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;ky.stop&lt;/h3&gt; 
&lt;p&gt;A &lt;code&gt;Symbol&lt;/code&gt; that can be returned by a &lt;code&gt;beforeRetry&lt;/code&gt; hook to stop the retry. This will also short circuit the remaining &lt;code&gt;beforeRetry&lt;/code&gt; hooks.&lt;/p&gt; 
&lt;p&gt;Note: Returning this symbol makes Ky abort and return with an &lt;code&gt;undefined&lt;/code&gt; response. Be sure to check for a response before accessing any properties on it or use &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining"&gt;optional chaining&lt;/a&gt;. It is also incompatible with body methods, such as &lt;code&gt;.json()&lt;/code&gt; or &lt;code&gt;.text()&lt;/code&gt;, because there is no response to parse. In general, we recommend throwing an error instead of returning this symbol, as that will cause Ky to abort and then throw, which avoids these limitations.&lt;/p&gt; 
&lt;p&gt;A valid use-case for &lt;code&gt;ky.stop&lt;/code&gt; is to prevent retries when making requests for side effects, where the returned data is not important. For example, logging client activity to the server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const options = {
	hooks: {
		beforeRetry: [
			async ({request, options, error, retryCount}) =&amp;gt; {
				const shouldStopRetry = await ky('https://example.com/api');
				if (shouldStopRetry) {
					return ky.stop;
				}
			}
		]
	}
};

// Note that response will be `undefined` in case `ky.stop` is returned.
const response = await ky.post('https://example.com', options);

// Using `.text()` or other body methods is not supported.
const text = await ky('https://example.com', options).text();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTPError&lt;/h3&gt; 
&lt;p&gt;Exposed for &lt;code&gt;instanceof&lt;/code&gt; checks. The error has a &lt;code&gt;response&lt;/code&gt; property with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Response"&gt;&lt;code&gt;Response&lt;/code&gt; object&lt;/a&gt;, &lt;code&gt;request&lt;/code&gt; property with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Request"&gt;&lt;code&gt;Request&lt;/code&gt; object&lt;/a&gt;, and &lt;code&gt;options&lt;/code&gt; property with normalized options (either passed to &lt;code&gt;ky&lt;/code&gt; when creating an instance with &lt;code&gt;ky.create()&lt;/code&gt; or directly when performing the request).&lt;/p&gt; 
&lt;p&gt;Be aware that some types of errors, such as network errors, inherently mean that a response was not received. In that case, the error will not be an instance of HTTPError and will not contain a &lt;code&gt;response&lt;/code&gt; property.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] When catching an &lt;code&gt;HTTPError&lt;/code&gt;, you must consume or cancel the &lt;code&gt;error.response&lt;/code&gt; body to prevent resource leaks (especially in Deno and Bun).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import {isHTTPError} from 'ky';

try {
	await ky('https://example.com').json();
} catch (error) {
	if (isHTTPError(error)) {
		// Option 1: Read the error response body
		const errorJson = await error.response.json();

		// Option 2: Cancel the body if you don't need it
		// await error.response.body?.cancel();
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use the &lt;code&gt;beforeError&lt;/code&gt; hook:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;await ky('https://example.com', {
	hooks: {
		beforeError: [
			async error =&amp;gt; {
				const {response} = error;
				if (response) {
					error.message = `${error.message}: ${await response.text()}`;
				}

				return error;
			}
		]
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;⌨️ &lt;strong&gt;TypeScript:&lt;/strong&gt; Accepts an optional &lt;a href="https://www.typescriptlang.org/docs/handbook/2/generics.html"&gt;type parameter&lt;/a&gt;, which defaults to &lt;a href="https://www.typescriptlang.org/docs/handbook/2/functions.html#unknown"&gt;&lt;code&gt;unknown&lt;/code&gt;&lt;/a&gt;, and is passed through to the return type of &lt;code&gt;error.response.json()&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;TimeoutError&lt;/h3&gt; 
&lt;p&gt;The error thrown when the request times out. It has a &lt;code&gt;request&lt;/code&gt; property with the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Request"&gt;&lt;code&gt;Request&lt;/code&gt; object&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tips&lt;/h2&gt; 
&lt;h3&gt;Sending form data&lt;/h3&gt; 
&lt;p&gt;Sending form data in Ky is identical to &lt;code&gt;fetch&lt;/code&gt;. Just pass a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/FormData"&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; instance to the &lt;code&gt;body&lt;/code&gt; option. The &lt;code&gt;Content-Type&lt;/code&gt; header will be automatically set to &lt;code&gt;multipart/form-data&lt;/code&gt;, overriding any existing &lt;code&gt;Content-Type&lt;/code&gt; header.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

// `multipart/form-data`
const formData = new FormData();
formData.append('food', 'fries');
formData.append('drink', 'icetea');

const response = await ky.post(url, {body: formData});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to send the data in &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; format, you will need to encode the data with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams"&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt;. Like &lt;code&gt;FormData&lt;/code&gt;, this will override any existing &lt;code&gt;Content-Type&lt;/code&gt; headers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

// `application/x-www-form-urlencoded`
const searchParams = new URLSearchParams();
searchParams.set('food', 'fries');
searchParams.set('drink', 'icetea');

const response = await ky.post(url, {body: searchParams});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Modifying FormData in hooks&lt;/h4&gt; 
&lt;p&gt;If you need to modify FormData in a &lt;code&gt;beforeRequest&lt;/code&gt; hook (for example, to transform field names), delete the &lt;code&gt;Content-Type&lt;/code&gt; header before creating a new &lt;code&gt;Request&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const response = await ky.post(url, {
	body: formData,
	hooks: {
		beforeRequest: [
			request =&amp;gt; {
				const newFormData = new FormData();

				// Modify FormData as needed
				for (const [key, value] of formData) {
					newFormData.set(key.toLowerCase(), value);
				}

				// Delete `Content-Type` to let Request regenerate it with correct boundary
				request.headers.delete('content-type');

				return new Request(request, {body: newFormData});
			}
		]
	}
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setting a custom &lt;code&gt;Content-Type&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Ky automatically sets an appropriate &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type"&gt;&lt;code&gt;Content-Type&lt;/code&gt;&lt;/a&gt; header for each request based on the data in the request body. However, some APIs require custom, non-standard content types, such as &lt;code&gt;application/x-amz-json-1.1&lt;/code&gt;. Using the &lt;code&gt;headers&lt;/code&gt; option, you can manually override the content type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const json = await ky.post('https://example.com', {
	headers: {
		'content-type': 'application/json'
	},
	json: {
		foo: true
	},
}).json();

console.log(json);
//=&amp;gt; {data: '🦄'}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Cancellation&lt;/h3&gt; 
&lt;p&gt;Fetch (and hence Ky) has built-in support for request cancellation through the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/AbortController"&gt;&lt;code&gt;AbortController&lt;/code&gt; API&lt;/a&gt;. &lt;a href="https://developers.google.com/web/updates/2017/09/abortable-fetch"&gt;Read more.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';

const controller = new AbortController();
const {signal} = controller;

setTimeout(() =&amp;gt; {
	controller.abort();
}, 5000);

try {
	console.log(await ky(url, {signal}).text());
} catch (error) {
	if (error.name === 'AbortError') {
		console.log('Fetch aborted');
	} else {
		console.error('Fetch error:', error);
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Proxy support (Node.js)&lt;/h3&gt; 
&lt;h4&gt;Native proxy support&lt;/h4&gt; 
&lt;p&gt;Node.js 24.5+ supports automatic proxy configuration via environment variables. Set &lt;code&gt;NODE_USE_ENV_PROXY=1&lt;/code&gt; or use the &lt;code&gt;--use-env-proxy&lt;/code&gt; CLI flag.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;NODE_USE_ENV_PROXY=1 HTTP_PROXY=http://proxy.example.com:8080 node app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node --use-env-proxy app.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;HTTP_PROXY&lt;/code&gt; / &lt;code&gt;http_proxy&lt;/code&gt;: Proxy URL for HTTP requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HTTPS_PROXY&lt;/code&gt; / &lt;code&gt;https_proxy&lt;/code&gt;: Proxy URL for HTTPS requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;NO_PROXY&lt;/code&gt; / &lt;code&gt;no_proxy&lt;/code&gt;: Comma-separated list of hosts to bypass the proxy&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using ProxyAgent&lt;/h4&gt; 
&lt;p&gt;For more control, use &lt;code&gt;ProxyAgent&lt;/code&gt; or &lt;code&gt;EnvHttpProxyAgent&lt;/code&gt; with the &lt;code&gt;dispatcher&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';
import {ProxyAgent} from 'undici';

const proxyAgent = new ProxyAgent('http://proxy.example.com:8080');

const response = await ky('https://example.com', {
	// @ts-expect-error - dispatcher is not in the type definition, but it's passed through to fetch.
	dispatcher: proxyAgent
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;code&gt;EnvHttpProxyAgent&lt;/code&gt; to automatically read proxy settings from environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';
import {EnvHttpProxyAgent} from 'undici';

const proxyAgent = new EnvHttpProxyAgent();

const api = ky.extend({
	// @ts-expect-error - dispatcher is not in the type definition, but it's passed through to fetch.
	dispatcher: proxyAgent
});

const response = await api('https://example.com').json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HTTP/2 support (Node.js)&lt;/h3&gt; 
&lt;p&gt;Undici supports HTTP/2, but it's not enabled by default. Create a custom dispatcher with the &lt;code&gt;allowH2&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';
import {Agent, Pool} from 'undici';

const agent = new Agent({
	factory(origin, options) {
		return new Pool(origin, {
			...options,
			allowH2: true
		});
	}
});

const response = await ky('https://example.com', {
	// @ts-expect-error - dispatcher is not in the type definition, but it's passed through to fetch.
	dispatcher: agent
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Combine proxy and HTTP/2:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import ky from 'ky';
import {ProxyAgent} from 'undici';

const proxyAgent = new ProxyAgent({
	uri: 'http://proxy.example.com:8080',
	allowH2: true
});

const response = await ky('https://example.com', {
	// @ts-expect-error - dispatcher is not in the type definition, but it's passed through to fetch.
	dispatcher: proxyAgent
}).json();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h4&gt;How do I use this in Node.js?&lt;/h4&gt; 
&lt;p&gt;Node.js 18 and later supports &lt;code&gt;fetch&lt;/code&gt; natively, so you can just use this package directly.&lt;/p&gt; 
&lt;h4&gt;How do I use this with a web app (React, Vue.js, etc.) that uses server-side rendering (SSR)?&lt;/h4&gt; 
&lt;p&gt;Same as above.&lt;/p&gt; 
&lt;h4&gt;How do I test a browser library that uses this?&lt;/h4&gt; 
&lt;p&gt;Either use a test runner that can run in the browser, like Mocha, or use &lt;a href="https://avajs.dev"&gt;AVA&lt;/a&gt; with &lt;code&gt;ky-universal&lt;/code&gt;. &lt;a href="https://github.com/sindresorhus/ky-universal#faq"&gt;Read more.&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;How do I use this without a bundler like Webpack?&lt;/h4&gt; 
&lt;p&gt;Make sure your code is running as a JavaScript module (ESM), for example by using a &lt;code&gt;&amp;lt;script type="module"&amp;gt;&lt;/code&gt; tag in your HTML document. Then Ky can be imported directly by that module without a bundler or other tools.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script type="module"&amp;gt;
import ky from 'https://unpkg.com/ky/distribution/index.js';

const json = await ky('https://jsonplaceholder.typicode.com/todos/1').json();

console.log(json.title);
//=&amp;gt; 'delectus aut autem'
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;How is it different from &lt;a href="https://github.com/sindresorhus/got"&gt;&lt;code&gt;got&lt;/code&gt;&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Got is maintained by the same people as Ky, so you probably want Ky instead. It's smaller, works in the browser too, and is more stable since it's built on Fetch.&lt;/p&gt; 
&lt;h4&gt;How is it different from &lt;a href="https://github.com/axios/axios"&gt;&lt;code&gt;axios&lt;/code&gt;&lt;/a&gt;?&lt;/h4&gt; 
&lt;p&gt;See my answer &lt;a href="https://twitter.com/sindresorhus/status/1037763588826398720"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;How is it different from &lt;a href="https://github.com/mikeal/r2"&gt;&lt;code&gt;r2&lt;/code&gt;&lt;/a&gt;?&lt;/h4&gt; 
&lt;p&gt;See my answer in &lt;a href="https://github.com/sindresorhus/ky/issues/10"&gt;#10&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;What does &lt;code&gt;ky&lt;/code&gt; mean?&lt;/h4&gt; 
&lt;p&gt;It's just a random short npm package name I managed to get. It does, however, have a meaning in Japanese:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A form of text-able slang, KY is an abbreviation for 空気読めない (kuuki yomenai), which literally translates into “cannot read the air.” It's a phrase applied to someone who misses the implied meaning.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Browser support&lt;/h2&gt; 
&lt;p&gt;The latest version of Chrome, Firefox, and Safari.&lt;/p&gt; 
&lt;h2&gt;Node.js support&lt;/h2&gt; 
&lt;p&gt;Node.js 18 and later.&lt;/p&gt; 
&lt;h2&gt;Related&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus/fetch-extras"&gt;fetch-extras&lt;/a&gt; - Useful utilities for working with Fetch&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alice-health/ky-hooks-change-case"&gt;ky-hooks-change-case&lt;/a&gt; - Ky hooks to modify cases on requests and responses of objects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sindresorhus"&gt;Sindre Sorhus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sholladay"&gt;Seth Holladay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szmarczak"&gt;Szymon Marczak&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>gitroomhq/postiz-app</title>
      <link>https://github.com/gitroomhq/postiz-app</link>
      <description>&lt;p&gt;📨 The ultimate social media scheduling tool, with a bunch of AI 🤖&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/growchief/growchief"&gt; &lt;img alt="automate" src="https://github.com/user-attachments/assets/d760188d-8d56-4b05-a6c1-c57e67ef25cd" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://postiz.com/" target="_blank"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/user-attachments/assets/765e9d72-3ee7-4a56-9d59-a2c9befe2311" /&gt; 
   &lt;img alt="Postiz Logo" src="https://github.com/user-attachments/assets/f0d30d70-dddb-4142-8876-e9aa6ed1cb99" width="280" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://opensource.org/license/agpl-v3"&gt; &lt;img src="https://img.shields.io/badge/License-AGPL%203.0-blue.svg?sanitize=true" alt="License" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt; &lt;h2&gt;Your ultimate AI social media scheduling tool&lt;/h2&gt;&lt;br /&gt; &lt;a href="https://postiz.com"&gt;Postiz&lt;/a&gt;: An alternative to: Buffer.com, Hypefury, Twitter Hunter, etc...&lt;br /&gt;&lt;br /&gt; &lt;/strong&gt; Postiz offers everything you need to manage your social media posts,
 &lt;br /&gt;build an audience, capture leads, and grow your business. 
&lt;/div&gt; 
&lt;div class="flex" align="center"&gt; 
 &lt;br /&gt; 
 &lt;img alt="Instagram" src="https://postiz.com/svgs/socials/Instagram.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Youtube" src="https://postiz.com/svgs/socials/Youtube.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Dribbble" src="https://postiz.com/svgs/socials/Dribbble.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Linkedin" src="https://postiz.com/svgs/socials/Linkedin.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Reddit" src="https://postiz.com/svgs/socials/Reddit.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="TikTok" src="https://postiz.com/svgs/socials/TikTok.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Facebook" src="https://postiz.com/svgs/socials/Facebook.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Pinterest" src="https://postiz.com/svgs/socials/Pinterest.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Threads" src="https://postiz.com/svgs/socials/Threads.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="X" src="https://postiz.com/svgs/socials/X.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Slack" src="https://postiz.com/svgs/socials/Slack.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Discord" src="https://postiz.com/svgs/socials/Discord.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Mastodon" src="https://postiz.com/svgs/socials/Mastodon.svg?sanitize=true" width="32" /&gt; 
 &lt;img alt="Bluesky" src="https://postiz.com/svgs/socials/Bluesky.svg?sanitize=true" width="32" /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://docs.postiz.com" rel="dofollow"&gt;&lt;strong&gt;Explore the docs »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://youtube.com/@postizofficial" rel="dofollow"&gt;&lt;strong&gt;Watch the YouTube Tutorials»&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://platform.postiz.com"&gt;Register&lt;/a&gt; · &lt;a href="https://discord.postiz.com"&gt;Join Our Discord (devs only)&lt;/a&gt; · &lt;a href="https://docs.postiz.com/public-api"&gt;Public API&lt;/a&gt;&lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/@postiz/node"&gt;NodeJS SDK&lt;/a&gt; · &lt;a href="https://www.npmjs.com/package/n8n-nodes-postiz"&gt;N8N custom node&lt;/a&gt; · &lt;a href="https://apps.make.com/postiz"&gt;Make.com integration&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; 
 &lt;video src="https://github.com/user-attachments/assets/05436a01-19c8-4827-b57f-05a5e7637a67" width="100%"&gt;&lt;/video&gt; &lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;img src="https://github.com/user-attachments/assets/a27ee220-beb7-4c7e-8c1b-2c44301f82ef" alt="Image 1" /&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;img src="https://github.com/user-attachments/assets/eb5f5f15-ed90-47fc-811c-03ccba6fa8a2" alt="Image 2" /&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://github.com/user-attachments/assets/d51786ee-ddd8-4ef8-8138-5192e9cfe7c3" alt="Image 3" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://github.com/user-attachments/assets/91f83c89-22f6-43d6-b7aa-d2d3378289fb" alt="Image 4" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Intro&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Schedule all your social media posts (many AI features)&lt;/li&gt; 
 &lt;li&gt;Measure your work with analytics.&lt;/li&gt; 
 &lt;li&gt;Collaborate with other team members to exchange or buy posts.&lt;/li&gt; 
 &lt;li&gt;Invite your team members to collaborate, comment, and schedule posts.&lt;/li&gt; 
 &lt;li&gt;At the moment there is no difference between the hosted version to the self-hosted version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;NX (Monorepo)&lt;/li&gt; 
 &lt;li&gt;NextJS (React)&lt;/li&gt; 
 &lt;li&gt;NestJS&lt;/li&gt; 
 &lt;li&gt;Prisma (Default to PostgreSQL)&lt;/li&gt; 
 &lt;li&gt;Redis (BullMQ)&lt;/li&gt; 
 &lt;li&gt;Resend (email notifications)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;To have the project up and running, please follow the &lt;a href="https://docs.postiz.com/quickstart"&gt;Quick Start Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsor Postiz&lt;/h2&gt; 
&lt;p&gt;We now give a few options to Sponsor Postiz:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Just a donation: You like what we are building, and want to buy us some coffees so we can build faster.&lt;/li&gt; 
 &lt;li&gt;Main Repository: Get your logo with a backlink from the main Postiz repository. Postiz has almost 3m downloads and 20k views per month.&lt;/li&gt; 
 &lt;li&gt;Main Repository + Website: Get your logo on the central repository and the main website. Here are some metrics: - Website has 20k hits per month + 65 DR (strong backlink) - Repository has 20k hits per month + Almost 3m docker downloads.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Link: &lt;a href="https://opencollective.com/postiz"&gt;https://opencollective.com/postiz&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Postiz Compliance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Postiz is an open-source, self-hosted social media scheduling tool that supports platforms like X (formerly Twitter), Bluesky, Mastodon, Discord, and others.&lt;/li&gt; 
 &lt;li&gt;Postiz hosted service uses official, platform-approved OAuth flows.&lt;/li&gt; 
 &lt;li&gt;Postiz does not automate or scrape content from social media platforms.&lt;/li&gt; 
 &lt;li&gt;Postiz does not collect, store, or proxy API keys or access tokens from users.&lt;/li&gt; 
 &lt;li&gt;Postiz never ask users to paste API keys into our hosted product.&lt;/li&gt; 
 &lt;li&gt;Postiz Users always authenticate directly with the social platform (e.g., X, Discord, etc.), ensuring platform compliance and data privacy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#gitroomhq/postiz-app&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=gitroomhq/postiz-app&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository's source code is available under the &lt;a href="https://raw.githubusercontent.com/gitroomhq/postiz-app/main/LICENSE"&gt;AGPL-3.0 license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.g2.com/products/postiz/take_survey" target="blank"&gt;&lt;img alt="g2" src="https://github.com/user-attachments/assets/892cb74c-0b49-4589-b2f5-fbdbf7a98f66" /&gt;&lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>signalapp/Signal-Desktop</title>
      <link>https://github.com/signalapp/Signal-Desktop</link>
      <description>&lt;p&gt;A private messenger for Windows, macOS, and Linux.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Signal Desktop&lt;/h1&gt; 
&lt;p&gt;Signal Desktop links with Signal on &lt;a href="https://github.com/signalapp/Signal-Android"&gt;Android&lt;/a&gt; or &lt;a href="https://github.com/signalapp/Signal-iOS"&gt;iOS&lt;/a&gt; and lets you message from your Windows, macOS, and Linux computers.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://signal.org/download/"&gt;Install the production version&lt;/a&gt; or help us out by &lt;a href="https://support.signal.org/hc/articles/360007318471-Signal-Beta"&gt;installing the beta version&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Got a question?&lt;/h2&gt; 
&lt;p&gt;You can find answers to a number of frequently asked questions on our &lt;a href="https://support.signal.org/"&gt;support site&lt;/a&gt;. The &lt;a href="https://community.signalusers.org/"&gt;community forum&lt;/a&gt; is another good place for questions.&lt;/p&gt; 
&lt;h2&gt;Found a Bug?&lt;/h2&gt; 
&lt;p&gt;Please search for any &lt;a href="https://github.com/signalapp/Signal-Desktop/issues"&gt;existing issues&lt;/a&gt; that describe your bug in order to avoid duplicate submissions.&lt;/p&gt; 
&lt;h2&gt;Have a feature request, question, comment?&lt;/h2&gt; 
&lt;p&gt;Please use our community forum: &lt;a href="https://community.signalusers.org/"&gt;https://community.signalusers.org/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing Code&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://github.com/signalapp/Signal-Desktop/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions and guidelines for new contributors. Don't forget to sign the &lt;a href="https://signal.org/cla/"&gt;CLA&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing Funds&lt;/h2&gt; 
&lt;p&gt;You can donate to Signal development through the &lt;a href="https://signal.org/donate"&gt;Signal Technology Foundation&lt;/a&gt;, an independent 501c3 nonprofit.&lt;/p&gt; 
&lt;h2&gt;Cryptography Notice&lt;/h2&gt; 
&lt;p&gt;This distribution includes cryptographic software. The country in which you currently reside may have restrictions on the import, possession, use, and/or re-export to another country, of encryption software. BEFORE using any encryption software, please check your country's laws, regulations and policies concerning the import, possession, or use, and re-export of encryption software, to see if this is permitted. See &lt;a href="http://www.wassenaar.org/"&gt;http://www.wassenaar.org/&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;The U.S. Government Department of Commerce, Bureau of Industry and Security (BIS), has classified this software as Export Commodity Control Number (ECCN) 5D002.C.1, which includes information security software using or performing cryptographic functions with asymmetric algorithms. The form and manner of this distribution makes it eligible for export under the License Exception ENC Technology Software Unrestricted (TSU) exception (see the BIS Export Administration Regulations, Section 740.13) for both object code and source code.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2013-2024 Signal Messenger, LLC&lt;/p&gt; 
&lt;p&gt;Licensed under the GNU AGPLv3: &lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;https://www.gnu.org/licenses/agpl-3.0.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>twentyhq/twenty</title>
      <link>https://github.com/twentyhq/twenty</link>
      <description>&lt;p&gt;Building a modern alternative to Salesforce, powered by the community.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://twentycrm.notion.site/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/hacktoberfest2025.png" alt="Hacktoberfest 2025" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.twenty.com"&gt; &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/core/logo.svg?sanitize=true" width="100px" alt="Twenty logo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2 align="center"&gt;The #1 Open-Source CRM &lt;/h2&gt; 
&lt;p align="center"&gt;&lt;a href="https://twenty.com"&gt;🌐 Website&lt;/a&gt; · &lt;a href="https://twenty.com/developers"&gt;📚 Documentation&lt;/a&gt; · &lt;a href="https://github.com/orgs/twentyhq/projects/1"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/planner-icon.svg?sanitize=true" width="12" height="12" /&gt; Roadmap &lt;/a&gt; · &lt;a href="https://discord.gg/cx5n4Jzs57"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/discord-icon.svg?sanitize=true" width="12" height="12" /&gt; Discord&lt;/a&gt; · &lt;a href="https://www.figma.com/file/xt8O9mFeLl46C5InWwoMrN/Twenty"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/figma-icon.png" width="12" height="12" /&gt; Figma&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.twenty.com"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-dark.png" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/github-cover-light.png" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/github-cover-light.png" alt="Cover" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;See:&lt;br /&gt; 🚀 &lt;a href="https://twenty.com/developers/section/self-hosting"&gt;Self-hosting&lt;/a&gt;&lt;br /&gt; 🖥️ &lt;a href="https://twenty.com/developers/local-setup"&gt;Local Setup&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Does the world need another CRM?&lt;/h1&gt; 
&lt;p&gt;We built Twenty for three reasons:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;CRMs are too expensive, and users are trapped.&lt;/strong&gt; Companies use locked-in customer data to hike prices. It shouldn't be that way.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A fresh start is required to build a better experience.&lt;/strong&gt; We can learn from past mistakes and craft a cohesive experience inspired by new UX patterns from tools like Notion, Airtable or Linear.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We believe in Open-source and community.&lt;/strong&gt; Hundreds of developers are already building Twenty together. Once we have plugin capabilities, a whole ecosystem will grow around it.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h1&gt;What You Can Do With Twenty&lt;/h1&gt; 
&lt;p&gt;Please feel free to flag any specific needs you have by creating an issue.&lt;/p&gt; 
&lt;p&gt;Below are a few features we have implemented to date:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#personalize-layouts-with-filters-sort-group-by-kanban-and-table-views"&gt;Personalize layouts with filters, sort, group by, kanban and table views&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#customize-your-objects-and-fields"&gt;Customize your objects and fields&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#create-and-manage-permissions-with-custom-roles"&gt;Create and manage permissions with custom roles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#automate-workflow-with-triggers-and-actions"&gt;Automate workflow with triggers and actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/twentyhq/twenty/main/#emails-calendar-events-files-and-more"&gt;Emails, calendar events, files, and more&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Personalize layouts with filters, sort, group by, kanban and table views&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/views-light.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/views-light.png" alt="Companies Kanban Views" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Customize your objects and fields&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/data-model-light.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/data-model-light.png" alt="Setting Custom Objects" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Create and manage permissions with custom roles&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/permissions-light.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/permissions-light.png" alt="Permissions" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Automate workflow with triggers and actions&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/workflows-light.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/workflows-light.png" alt="Workflows" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h2&gt;Emails, calendar events, files, and more&lt;/h2&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-dark.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/twentyhq/twenty/refs/heads/main/packages/twenty-website/public/images/readme/plus-other-features-light.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/plus-other-features-light.png" alt="Other Features" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;h1&gt;Stack&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.typescriptlang.org/"&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nx.dev/"&gt;Nx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nestjs.com/"&gt;NestJS&lt;/a&gt;, with &lt;a href="https://bullmq.io/"&gt;BullMQ&lt;/a&gt;, &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://redis.io/"&gt;Redis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt;, with &lt;a href="https://recoiljs.org/"&gt;Recoil&lt;/a&gt;, &lt;a href="https://emotion.sh/"&gt;Emotion&lt;/a&gt; and &lt;a href="https://lingui.dev/"&gt;Lingui&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Thanks&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/chromatic.png" height="30" alt="Chromatic" /&gt;&lt;/a&gt; &lt;a href="https://greptile.com"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/greptile.png" height="30" alt="Greptile" /&gt;&lt;/a&gt; &lt;a href="https://sentry.io/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/sentry.png" height="30" alt="Sentry" /&gt;&lt;/a&gt; &lt;a href="https://crowdin.com/"&gt;&lt;img src="https://raw.githubusercontent.com/twentyhq/twenty/main/packages/twenty-website/public/images/readme/crowdin.png" height="30" alt="Crowdin" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Thanks to these amazing services that we use and recommend for UI testing (Chromatic), code review (Greptile), catching bugs (Sentry) and translating (Crowdin).&lt;/p&gt; 
&lt;h1&gt;Join the Community&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Star the repo&lt;/li&gt; 
 &lt;li&gt;Subscribe to releases (watch -&amp;gt; custom -&amp;gt; releases)&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://twitter.com/twentycrm"&gt;Twitter&lt;/a&gt; or &lt;a href="https://www.linkedin.com/company/twenty/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://discord.gg/cx5n4Jzs57"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Improve translations on &lt;a href="https://twenty.crowdin.com/twenty"&gt;Crowdin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twentyhq/twenty/contribute"&gt;Contributions&lt;/a&gt; are, of course, most welcome!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mountain-loop/yaak</title>
      <link>https://github.com/mountain-loop/yaak</link>
      <description>&lt;p&gt;The most intuitive desktop API client. Organize and execute REST, GraphQL, WebSockets, Server Sent Events, and gRPC 🦬&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/JamesIves/github-sponsors-readme-action"&gt; &lt;img width="200px" src="https://github.com/mountain-loop/yaak/raw/main/src-tauri/icons/icon.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt; 💫 Yaak ➟ Desktop API Client 💫 &lt;/h1&gt; 
&lt;p align="center"&gt; A fast, privacy-first API client for REST, GraphQL, SSE, WebSocket, and gRPC – built with Tauri, Rust, and React. &lt;/p&gt; 
&lt;p align="center"&gt; Development is funded by community-purchased &lt;a href="https://yaak.app/pricing"&gt;licenses&lt;/a&gt;. You can also &lt;a href="https://github.com/sponsors/gschier"&gt;become a sponsor&lt;/a&gt; to have your logo appear below. 💖 &lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors-premium --&gt;&lt;a href="https://github.com/MVST-Solutions"&gt;&lt;img src="https://github.com/MVST-Solutions.png" width="80px" alt="User avatar: MVST-Solutions" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/dharsanb"&gt;&lt;img src="https://github.com/dharsanb.png" width="80px" alt="User avatar: dharsanb" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/railwayapp"&gt;&lt;img src="https://github.com/railwayapp.png" width="80px" alt="User avatar: railwayapp" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/caseyamcl"&gt;&lt;img src="https://github.com/caseyamcl.png" width="80px" alt="User avatar: caseyamcl" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/andriyor"&gt;&lt;img src="https://github.com/andriyor.png" width="80px" alt="User avatar: andriyor" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/"&gt;&lt;img src="https://raw.githubusercontent.com/JamesIves/github-sponsors-readme-action/dev/.github/assets/placeholder.png" width="80px" alt="User avatar: " /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
 &lt;!-- sponsors-premium --&gt; &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors-base --&gt;&lt;a href="https://github.com/seanwash"&gt;&lt;img src="https://github.com/seanwash.png" width="50px" alt="User avatar: seanwash" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/jerath"&gt;&lt;img src="https://github.com/jerath.png" width="50px" alt="User avatar: jerath" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/itsa-sh"&gt;&lt;img src="https://github.com/itsa-sh.png" width="50px" alt="User avatar: itsa-sh" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/dmmulroy"&gt;&lt;img src="https://github.com/dmmulroy.png" width="50px" alt="User avatar: dmmulroy" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/timcole"&gt;&lt;img src="https://github.com/timcole.png" width="50px" alt="User avatar: timcole" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/VLZH"&gt;&lt;img src="https://github.com/VLZH.png" width="50px" alt="User avatar: VLZH" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/terasaka2k"&gt;&lt;img src="https://github.com/terasaka2k.png" width="50px" alt="User avatar: terasaka2k" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/majudhu"&gt;&lt;img src="https://github.com/majudhu.png" width="50px" alt="User avatar: majudhu" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://github.com/axelrindle"&gt;&lt;img src="https://github.com/axelrindle.png" width="50px" alt="User avatar: axelrindle" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
 &lt;!-- sponsors-base --&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://yaak.app/static/screenshot.png" alt="Yaak API Client" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Yaak is an offline-first API client designed to stay out of your way while giving you everything you need when you need it. Built with &lt;a href="https://tauri.app"&gt;Tauri&lt;/a&gt;, Rust, and React, it’s fast, lightweight, and private. No telemetry, no VC funding, and no cloud lock-in.&lt;/p&gt; 
&lt;h3&gt;🌐 Work with any API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Import collections from Postman, Insomnia, OpenAPI, Swagger, or Curl.&lt;/li&gt; 
 &lt;li&gt;Send requests via REST, GraphQL, gRPC, WebSocket, or Server-Sent Events.&lt;/li&gt; 
 &lt;li&gt;Filter and inspect responses with JSONPath or XPath.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔐 Stay secure&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use OAuth 2.0, JWT, Basic Auth, or custom plugins for authentication.&lt;/li&gt; 
 &lt;li&gt;Secure sensitive values with encrypted secrets.&lt;/li&gt; 
 &lt;li&gt;Store secrets in your OS keychain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;☁️ Organize &amp;amp; collaborate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Group requests into workspaces and nested folders.&lt;/li&gt; 
 &lt;li&gt;Use environment variables to switch between dev, staging, and prod.&lt;/li&gt; 
 &lt;li&gt;Mirror workspaces to your filesystem for versioning in Git or syncing with Dropbox.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🧩 Extend &amp;amp; customize&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Insert dynamic values like UUIDs or timestamps with template tags.&lt;/li&gt; 
 &lt;li&gt;Pick from built-in themes or build your own.&lt;/li&gt; 
 &lt;li&gt;Create plugins to extend authentication, template tags, or the UI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribution Policy&lt;/h2&gt; 
&lt;p&gt;Yaak is open source but only accepting contributions for bug fixes. To get started, visit &lt;a href="https://raw.githubusercontent.com/mountain-loop/yaak/main/DEVELOPMENT.md"&gt;&lt;code&gt;DEVELOPMENT.md&lt;/code&gt;&lt;/a&gt; for tips on setting up your environment.&lt;/p&gt; 
&lt;h2&gt;Useful Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://feedback.yaak.app"&gt;Feedback and Bug Reports&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://feedback.yaak.app/help"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yaak.app/alternatives/postman"&gt;Yaak vs Postman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yaak.app/alternatives/bruno"&gt;Yaak vs Bruno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yaak.app/alternatives/insomnia"&gt;Yaak vs Insomnia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>blakeblackshear/frigate</title>
      <link>https://github.com/blakeblackshear/frigate</link>
      <description>&lt;p&gt;NVR with realtime local object detection for IP cameras&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img align="center" alt="logo" src="https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/frigate.png" /&gt; &lt;/p&gt; 
&lt;h1&gt;Frigate - NVR With Realtime Object Detection for IP Cameras&lt;/h1&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/language-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;[English] | &lt;a href="https://github.com/blakeblackshear/frigate/raw/dev/README_CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A complete and local NVR designed for &lt;a href="https://www.home-assistant.io"&gt;Home Assistant&lt;/a&gt; with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.&lt;/p&gt; 
&lt;p&gt;Use of a GPU or AI accelerator such as a &lt;a href="https://coral.ai/products/"&gt;Google Coral&lt;/a&gt; or &lt;a href="https://hailo.ai/"&gt;Hailo&lt;/a&gt; is highly recommended. AI accelerators will outperform even the best CPUs with very little overhead.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tight integration with Home Assistant via a &lt;a href="https://github.com/blakeblackshear/frigate-hass-integration"&gt;custom component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary&lt;/li&gt; 
 &lt;li&gt;Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&lt;/li&gt; 
 &lt;li&gt;Uses a very low overhead motion detection to determine where to run object detection&lt;/li&gt; 
 &lt;li&gt;Object detection with TensorFlow runs in separate processes for maximum FPS&lt;/li&gt; 
 &lt;li&gt;Communicates over MQTT for easy integration into other systems&lt;/li&gt; 
 &lt;li&gt;Records video with retention settings based on detected objects&lt;/li&gt; 
 &lt;li&gt;24/7 recording&lt;/li&gt; 
 &lt;li&gt;Re-streaming via RTSP to reduce the number of connections to your camera&lt;/li&gt; 
 &lt;li&gt;WebRTC &amp;amp; MSE support for low-latency live view&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;View the documentation at &lt;a href="https://docs.frigate.video"&gt;https://docs.frigate.video&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you would like to make a donation to support development, please use &lt;a href="https://github.com/sponsors/blakeblackshear"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Live dashboard&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Live dashboard" src="https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Streamlined review workflow&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Streamlined review workflow" src="https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Multi-camera scrubbing&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Built-in mask and zone editor&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://hosted.weblate.org/projects/frigate-nvr/"&gt;Weblate&lt;/a&gt; to support language translations. Contributions are always welcome.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Docs 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;Welcome to GitHub Docs! GitHub’s documentation is open source, meaning anyone from inside or outside the company can contribute. For full contributing guidelines, visit our &lt;a href="https://docs.github.com/en/contributing"&gt;contributing guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick links by contributor type&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hubbers (GitHub employees):&lt;/strong&gt; See &lt;a href="https://github.com/github/docs-content/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; in the &lt;code&gt;docs-content&lt;/code&gt; repository for GitHub-specific processes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Open source contributors:&lt;/strong&gt; See &lt;a href="https://github.com/github/docs/raw/main/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; in the &lt;code&gt;docs&lt;/code&gt; repository for a quick-start summary.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How we sync changes across Docs repositories&lt;/h2&gt; 
&lt;p&gt;There are two GitHub Docs repositories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;github/docs&lt;/code&gt;&lt;/strong&gt; (public): Open to external contributions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;code&gt;github/docs-internal&lt;/code&gt;&lt;/strong&gt; (private): For GitHub employee contributions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The two repositories sync frequently. Content changes in one are reflected in the other. Hubbers might prefer to post in &lt;code&gt;docs&lt;/code&gt; when working with a customer, but &lt;code&gt;docs&lt;/code&gt; has limitations on the types of contributions it accepts to safeguard the site and our workflows. Internal contributions should usually go to &lt;code&gt;docs-internal&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;docs&lt;/code&gt; repository accepts contributions to content files (&lt;code&gt;.md&lt;/code&gt; files in &lt;code&gt;/content&lt;/code&gt; and select &lt;code&gt;/data&lt;/code&gt; sections like reusables only). Infrastructure files, workflows, and site-building code are not open for external modification.&lt;/p&gt; 
&lt;h2&gt;New to contributing&lt;/h2&gt; 
&lt;p&gt;Here are some resources to help you get started with open source contributions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/get-started/exploring-projects-on-github/finding-ways-to-contribute-to-open-source-on-github"&gt;Finding ways to contribute to open source on GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/get-started/git-basics/set-up-git"&gt;Set up Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/get-started/using-github/github-flow"&gt;GitHub flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/github/collaborating-with-pull-requests"&gt;Collaborating with pull requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is dual-licensed under:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Creative Commons Attribution 4.0&lt;/strong&gt; - for documentation and content in the assets, content, and data folders (see &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE"&gt;LICENSE&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MIT License&lt;/strong&gt; - for code (see &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE"&gt;LICENSE-CODE&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>daytonaio/daytona</title>
      <link>https://github.com/daytonaio/daytona</link>
      <description>&lt;p&gt;Daytona is a Secure and Elastic Infrastructure for Running AI-Generated Code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.daytona.io/docs"&gt;&lt;img src="https://img.shields.io/github/v/release/daytonaio/docs?label=Docs&amp;amp;color=23cc71" alt="Documentation" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/License-AGPL--3-blue" alt="License" /&gt; &lt;a href="https://goreportcard.com/report/github.com/daytonaio/daytona"&gt;&lt;img src="https://goreportcard.com/badge/github.com/daytonaio/daytona" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/daytonaio/daytona/issues"&gt;&lt;img src="https://img.shields.io/github/issues/daytonaio/daytona" alt="Issues - daytona" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/daytonaio/daytona" alt="GitHub Release" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-white.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" /&gt; 
  &lt;img alt="Daytona logo" src="https://github.com/daytonaio/daytona/raw/main/assets/images/Daytona-logotype-black.png" width="50%" /&gt; 
 &lt;/picture&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; Run AI Code. &lt;br /&gt; Secure and Elastic Infrastructure for Running Your AI-Generated Code. &lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.daytona.io/docs"&gt; Documentation &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.md&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+"&gt; Report Bug &lt;/a&gt;· &lt;a href="https://github.com/daytonaio/daytona/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.md&amp;amp;title=%F0%9F%9A%80+Feature%3A+"&gt; Request Feature &lt;/a&gt;· &lt;a href="https://go.daytona.io/slack"&gt; Join our Slack &lt;/a&gt;· &lt;a href="https://x.com/daytonaio"&gt; Connect on X &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=daily&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/daytona-2?embed=true&amp;amp;utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-daytona-2" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=957617&amp;amp;theme=neutral&amp;amp;period=monthly&amp;amp;topic_id=237&amp;amp;t=1746176740150" alt="Daytona  - Secure and elastic infra for running your AI-generated code. | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install daytona
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @daytonaio/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Lightning-Fast Infrastructure&lt;/strong&gt;: Sub-90ms Sandbox creation from code to execution.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Separated &amp;amp; Isolated Runtime&lt;/strong&gt;: Execute AI-generated code with zero risk to your infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Massive Parallelization for Concurrent AI Workflows&lt;/strong&gt;: Fork Sandbox filesystem and memory state (Coming soon!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Programmatic Control&lt;/strong&gt;: File, Git, LSP, and Execute API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unlimited Persistence&lt;/strong&gt;: Your Sandboxes can live forever&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OCI/Docker Compatibility&lt;/strong&gt;: Use any OCI/Docker image to create a Sandbox&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create an account at &lt;a href="https://app.daytona.io"&gt;https://app.daytona.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Generate a &lt;a href="https://app.daytona.io/dashboard/keys"&gt;new API key&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the &lt;a href="https://www.daytona.io/docs/getting-started/"&gt;Getting Started docs&lt;/a&gt; to start using the Daytona SDK&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Creating your first Sandbox&lt;/h2&gt; 
&lt;h3&gt;Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-py"&gt;from daytona import Daytona, DaytonaConfig, CreateSandboxBaseParams

# Initialize the Daytona client
daytona = Daytona(DaytonaConfig(api_key="YOUR_API_KEY"))

# Create the Sandbox instance
sandbox = daytona.create(CreateSandboxBaseParams(language="python"))

# Run code securely inside the Sandbox
response = sandbox.process.code_run('print("Sum of 3 and 4 is " + str(3 + 4))')
if response.exit_code != 0:
    print(f"Error running code: {response.exit_code} {response.result}")
else:
    print(response.result)

# Clean up the Sandbox
daytona.delete(sandbox)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Typescript SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Daytona } from '@daytonaio/sdk'

async function main() {
  // Initialize the Daytona client
  const daytona = new Daytona({
    apiKey: 'YOUR_API_KEY',
  })

  let sandbox
  try {
    // Create the Sandbox instance
    sandbox = await daytona.create({
      language: 'typescript',
    })
    // Run code securely inside the Sandbox
    const response = await sandbox.process.codeRun('console.log("Sum of 3 and 4 is " + (3 + 4))')
    if (response.exitCode !== 0) {
      console.error('Error running code:', response.exitCode, response.result)
    } else {
      console.log(response.result)
    }
  } catch (error) {
    console.error('Sandbox flow error:', error)
  } finally {
    if (sandbox) await daytona.delete(sandbox)
  }
}

main().catch(console.error)
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Daytona is Open Source under the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/LICENSE"&gt;GNU AFFERO GENERAL PUBLIC LICENSE&lt;/a&gt;, and is the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/NOTICE"&gt;copyright of its contributors&lt;/a&gt;. If you would like to contribute to the software, read the Developer Certificate of Origin Version 1.1 (&lt;a href="https://developercertificate.org/"&gt;https://developercertificate.org/&lt;/a&gt;). Afterwards, navigate to the &lt;a href="https://raw.githubusercontent.com/daytonaio/daytona/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>elie222/inbox-zero</title>
      <link>https://github.com/elie222/inbox-zero</link>
      <description>&lt;p&gt;The world's best AI personal assistant for email. Open source app to help you reach inbox zero fast.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://www.getinboxzero.com"&gt;&lt;img src="https://raw.githubusercontent.com/elie222/inbox-zero/main/apps/web/app/opengraph-image.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.getinboxzero.com"&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://www.getinboxzero.com"&gt;Inbox Zero - your 24/7 AI email assistant&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://www.getinboxzero.com"&gt; &lt;/a&gt; 
&lt;p align="center"&gt; Organizes your inbox, pre-drafts replies, and tracks follow‑ups - so you reach inbox zero faster. Open source alternative to Fyxer, but more customisable and secure. &lt;br /&gt; &lt;a href="https://www.getinboxzero.com"&gt;Website&lt;/a&gt; · &lt;a href="https://www.getinboxzero.com/discord"&gt;Discord&lt;/a&gt; · &lt;a href="https://github.com/elie222/inbox-zero/issues"&gt;Issues&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;img src="https://img.shields.io/github/stars/elie222/inbox-zero?labelColor=black&amp;amp;style=for-the-badge&amp;amp;color=2563EB" alt="Stars" /&gt; &lt;img src="https://img.shields.io/github/forks/elie222/inbox-zero?labelColor=black&amp;amp;style=for-the-badge&amp;amp;color=2563EB" alt="Forks" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/6400" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/6400" alt="elie222%2Finbox-zero | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://vercel.com/oss"&gt;&lt;img src="https://vercel.com/oss/program-badge.svg?sanitize=true" alt="Vercel OSS Program" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Mission&lt;/h2&gt; 
&lt;p&gt;To help you spend less time in your inbox, so you can focus on what matters.&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Felie222%2Finbox-zero&amp;amp;env=AUTH_SECRET,GOOGLE_CLIENT_ID,GOOGLE_CLIENT_SECRET,MICROSOFT_CLIENT_ID,MICROSOFT_CLIENT_SECRET,EMAIL_ENCRYPT_SECRET,EMAIL_ENCRYPT_SALT,UPSTASH_REDIS_URL,UPSTASH_REDIS_TOKEN,GOOGLE_PUBSUB_TOPIC_NAME,DATABASE_URL,NEXT_PUBLIC_BASE_URL"&gt;&lt;img src="https://vercel.com/button" alt="Deploy with Vercel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AI Personal Assistant:&lt;/strong&gt; Organizes your inbox and pre-drafts replies in your tone and style.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cursor Rules for email:&lt;/strong&gt; Explain in plain English how your AI should handle your inbox.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reply Zero:&lt;/strong&gt; Track emails to reply to and those awaiting responses.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Categories:&lt;/strong&gt; Automatically categorize every sender.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bulk Unsubscriber:&lt;/strong&gt; One-click unsubscribe and archive emails you never read.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cold Email Blocker:&lt;/strong&gt; Auto‑block cold emails.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Email Analytics:&lt;/strong&gt; Track your activity and trends over time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more in our &lt;a href="https://docs.getinboxzero.com"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feature Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;img src="https://raw.githubusercontent.com/elie222/inbox-zero/main/.github/screenshots/email-assistant.png" alt="AI Assistant" /&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;img src="https://raw.githubusercontent.com/elie222/inbox-zero/main/.github/screenshots/reply-zero.png" alt="Reply Zero" /&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;em&gt;AI Assistant&lt;/em&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;em&gt;Reply Zero&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;img src="https://raw.githubusercontent.com/elie222/inbox-zero/main/.github/screenshots/email-client.png" alt="Gmail Client" /&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://raw.githubusercontent.com/elie222/inbox-zero/main/.github/screenshots/bulk-unsubscriber.png" alt="Bulk Unsubscriber" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;em&gt;Gmail client&lt;/em&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;em&gt;Bulk Unsubscriber&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Demo Video&lt;/h2&gt; 
&lt;p&gt;&lt;a href="http://www.youtube.com/watch?v=hfvKvTHBjG0"&gt;&lt;img src="https://raw.githubusercontent.com/elie222/inbox-zero/main/video-thumbnail.png" alt="Inbox Zero demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Built with&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ui.shadcn.com/"&gt;shadcn/ui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/"&gt;Prisma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://upstash.com/"&gt;Upstash&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://turbo.build/"&gt;Turborepo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#elie222/inbox-zero&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=elie222/inbox-zero&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Feature Requests&lt;/h2&gt; 
&lt;p&gt;To request a feature open a &lt;a href="https://github.com/elie222/inbox-zero/issues"&gt;GitHub issue&lt;/a&gt;, or join our &lt;a href="https://www.getinboxzero.com/discord"&gt;Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started for Developers&lt;/h2&gt; 
&lt;p&gt;We offer a hosted version of Inbox Zero at &lt;a href="https://getinboxzero.com"&gt;https://getinboxzero.com&lt;/a&gt;. To self-host follow the steps below.&lt;/p&gt; 
&lt;h3&gt;Self-Hosting with Docker on VPS&lt;/h3&gt; 
&lt;p&gt;For a complete guide on deploying Inbox Zero to a VPS using Docker, see our &lt;a href="https://raw.githubusercontent.com/elie222/inbox-zero/main/docs/hosting/docker.md"&gt;Docker Self-Hosting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/hVQENQ4WT2Y"&gt;Here's a video&lt;/a&gt; on how to set up the project. It covers the same steps mentioned in this document. But goes into greater detail on setting up the external services.&lt;/p&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; &amp;gt;= 18.0.0&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt; &amp;gt;= 8.6.12&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker desktop&lt;/a&gt; (recommended but optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Make sure you have the above installed before starting.&lt;/p&gt; 
&lt;p&gt;The external services that are required are (detailed setup instructions below):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://console.cloud.google.com/apis/credentials"&gt;Google OAuth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://console.cloud.google.com/cloudpubsub/topic/list"&gt;Google PubSub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Updating .env file: secrets&lt;/h3&gt; 
&lt;p&gt;Create your own &lt;code&gt;.env&lt;/code&gt; file from the example supplied:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp apps/web/.env.example apps/web/.env
cd apps/web
pnpm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Set the environment variables in the newly created &lt;code&gt;.env&lt;/code&gt;. You can see a list of required variables in: &lt;code&gt;apps/web/env.ts&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The required environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;AUTH_SECRET&lt;/code&gt; -- can be any random string (try using &lt;code&gt;openssl rand -hex 32&lt;/code&gt; for a quick secure random string)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;EMAIL_ENCRYPT_SECRET&lt;/code&gt; -- Secret key for encrypting OAuth tokens (try using &lt;code&gt;openssl rand -hex 32&lt;/code&gt; for a secure key)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;EMAIL_ENCRYPT_SALT&lt;/code&gt; -- Salt for encrypting OAuth tokens (try using &lt;code&gt;openssl rand -hex 16&lt;/code&gt; for a secure salt)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NEXT_PUBLIC_BASE_URL&lt;/code&gt; -- The URL where your app is hosted (e.g., &lt;code&gt;http://localhost:3000&lt;/code&gt; for local development or &lt;code&gt;https://yourdomain.com&lt;/code&gt; for production).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;INTERNAL_API_KEY&lt;/code&gt; -- A secret key for internal API calls (try using &lt;code&gt;openssl rand -hex 32&lt;/code&gt; for a secure key)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;UPSTASH_REDIS_URL&lt;/code&gt; -- Redis URL from Upstash. (can be empty if you are using Docker Compose)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;UPSTASH_REDIS_TOKEN&lt;/code&gt; -- Redis token from Upstash. (or specify your own random string if you are using Docker Compose)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When using Vercel with Fluid Compute turned off, you should set &lt;code&gt;MAX_DURATION=300&lt;/code&gt; or lower. See Vercel limits for different plans &lt;a href="https://vercel.com/docs/functions/configuring-functions/duration#duration-limits"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Updating .env file with Google OAuth credentials:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GOOGLE_CLIENT_ID&lt;/code&gt; -- Google OAuth client ID. More info &lt;a href="https://next-auth.js.org/providers/google"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GOOGLE_CLIENT_SECRET&lt;/code&gt; -- Google OAuth client secret. More info &lt;a href="https://next-auth.js.org/providers/google"&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Go to &lt;a href="https://console.cloud.google.com/"&gt;Google Cloud&lt;/a&gt;. Create a new project if necessary.&lt;/p&gt; 
&lt;p&gt;Create &lt;a href="https://console.cloud.google.com/apis/credentials"&gt;new credentials&lt;/a&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;If the banner shows up, configure &lt;strong&gt;consent screen&lt;/strong&gt; (if not, you can do this later)&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Click the banner, then Click &lt;code&gt;Get Started&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Choose a name for your app, and enter your email.&lt;/li&gt; 
   &lt;li&gt;In Audience, choose &lt;code&gt;External&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Enter your contact information&lt;/li&gt; 
   &lt;li&gt;Agree to the User Data policy and then click &lt;code&gt;Create&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Return to APIs and Services using the left sidebar.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create new &lt;a href="https://console.cloud.google.com/apis/credentials"&gt;credentials&lt;/a&gt;:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Click the &lt;code&gt;+Create Credentials&lt;/code&gt; button. Choose OAuth Client ID.&lt;/li&gt; 
   &lt;li&gt;In &lt;code&gt;Application Type&lt;/code&gt;, Choose &lt;code&gt;Web application&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Choose a name for your web client&lt;/li&gt; 
   &lt;li&gt;In Authorized JavaScript origins, add a URI and enter &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;In &lt;code&gt;Authorized redirect URIs&lt;/code&gt; enter:&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;http://localhost:3000/api/auth/callback/google&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;http://localhost:3000/api/google/linking/callback&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;ol start="6"&gt; 
   &lt;li&gt;Click &lt;code&gt;Create&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;A popup will show up with the new credentials, including the Client ID and secret.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update .env file:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Copy the Client ID to &lt;code&gt;GOOGLE_CLIENT_ID&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Copy the Client secret to &lt;code&gt;GOOGLE_CLIENT_SECRET&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update &lt;a href="https://console.cloud.google.com/auth/scopes"&gt;scopes&lt;/a&gt;&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Go to &lt;code&gt;Data Access&lt;/code&gt; in the left sidebar (or click link above)&lt;/li&gt; 
   &lt;li&gt;Click &lt;code&gt;Add or remove scopes&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Copy paste the below into the &lt;code&gt;Manually add scopes&lt;/code&gt; box:&lt;/li&gt; 
  &lt;/ol&gt; &lt;pre&gt;&lt;code class="language-plaintext"&gt;https://www.googleapis.com/auth/userinfo.profile
https://www.googleapis.com/auth/userinfo.email
https://www.googleapis.com/auth/gmail.modify
https://www.googleapis.com/auth/gmail.settings.basic
https://www.googleapis.com/auth/contacts
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ol start="4"&gt; 
   &lt;li&gt;Click &lt;code&gt;Update&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; in the Data Access page.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add yourself as a test user&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Go to &lt;a href="https://console.cloud.google.com/auth/audience"&gt;Audience&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;In the &lt;code&gt;Test users&lt;/code&gt; section, click &lt;code&gt;+Add users&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Enter your email and press &lt;code&gt;Save&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enable Google People API in &lt;a href="https://console.cloud.google.com/marketplace/product/google/people.googleapis.com"&gt;Google Cloud Console&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Updating .env file with Microsoft OAuth credentials:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;MICROSOFT_CLIENT_ID&lt;/code&gt; -- Microsoft OAuth client ID&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;MICROSOFT_CLIENT_SECRET&lt;/code&gt; -- Microsoft OAuth client secret&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Go to &lt;a href="https://portal.azure.com/"&gt;Microsoft Azure Portal&lt;/a&gt;. Create a new Azure Active Directory app registration:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Navigate to Azure Active Directory&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to "App registrations" in the left sidebar or search it in the searchbar&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click "New registration"&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Choose a name for your application&lt;/li&gt; 
   &lt;li&gt;Under "Supported account types" select "Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal Microsoft accounts (e.g. Skype, Xbox)"&lt;/li&gt; 
   &lt;li&gt;Set the Redirect URI: 
    &lt;ul&gt; 
     &lt;li&gt;Platform: Web&lt;/li&gt; 
     &lt;li&gt;URL: &lt;code&gt;http://localhost:3000/api/auth/callback/microsoft&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Click "Register"&lt;/li&gt; 
   &lt;li&gt;In the "Manage" menu click "Authentication (Preview)"&lt;/li&gt; 
   &lt;li&gt;Add the Redirect URI: &lt;code&gt;http://localhost:3000/api/outlook/linking/callback&lt;/code&gt;&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Get your credentials:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt;The "Application (client) ID" shown is your &lt;code&gt;MICROSOFT_CLIENT_ID&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;To get your client secret: 
    &lt;ul&gt; 
     &lt;li&gt;Click "Certificates &amp;amp; secrets" in the left sidebar&lt;/li&gt; 
     &lt;li&gt;Click "New client secret"&lt;/li&gt; 
     &lt;li&gt;Add a description and choose an expiry&lt;/li&gt; 
     &lt;li&gt;Click "Add"&lt;/li&gt; 
     &lt;li&gt;Copy the secret Value (not the ID) - this is your &lt;code&gt;MICROSOFT_CLIENT_SECRET&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Configure API permissions:&lt;/p&gt; 
  &lt;ol&gt; 
   &lt;li&gt; &lt;p&gt;In the "Manage" menu click "API permissions" in the left sidebar&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Click "Add a permission"&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Select "Microsoft Graph"&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Select "Delegated permissions"&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Add the following permissions:&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;openid&lt;/li&gt; 
     &lt;li&gt;profile&lt;/li&gt; 
     &lt;li&gt;email&lt;/li&gt; 
     &lt;li&gt;User.Read&lt;/li&gt; 
     &lt;li&gt;offline_access&lt;/li&gt; 
     &lt;li&gt;Mail.ReadWrite&lt;/li&gt; 
     &lt;li&gt;Mail.Send&lt;/li&gt; 
     &lt;li&gt;Mail.ReadBasic&lt;/li&gt; 
     &lt;li&gt;Mail.Read&lt;/li&gt; 
     &lt;li&gt;Mail.Read.Shared&lt;/li&gt; 
     &lt;li&gt;MailboxSettings.ReadWrite&lt;/li&gt; 
     &lt;li&gt;Contacts.ReadWrite&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Click "Add permissions"&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Click "Grant admin consent" if you're an admin&lt;/p&gt; &lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update your .env file with the credentials:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-plaintext"&gt;MICROSOFT_CLIENT_ID=your_client_id_here
MICROSOFT_CLIENT_SECRET=your_client_secret_here
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Updating .env file with LLM parameters&lt;/h3&gt; 
&lt;p&gt;You need to set an LLM, but you can use a local one too:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://console.anthropic.com/settings/keys"&gt;Anthropic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platform.openai.com/api-keys"&gt;OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AWS Bedrock Anthropic&lt;/li&gt; 
 &lt;li&gt;Google Gemini&lt;/li&gt; 
 &lt;li&gt;Groq Llama 3.3 70B&lt;/li&gt; 
 &lt;li&gt;Ollama (local)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For the LLM, you can use Anthropic, OpenAI, or Anthropic on AWS Bedrock. You can also use Ollama by setting the following enviroment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;OLLAMA_BASE_URL=http://localhost:11434/api
NEXT_PUBLIC_OLLAMA_MODEL=phi3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: If you need to access Ollama hosted locally and the application is running on Docker setup, you can use &lt;code&gt;http://host.docker.internal:11434/api&lt;/code&gt; as the base URL. You might also need to set &lt;code&gt;OLLAMA_HOST&lt;/code&gt; to &lt;code&gt;0.0.0.0&lt;/code&gt; in the Ollama configuration file.&lt;/p&gt; 
&lt;p&gt;You can select the model you wish to use in the app on the &lt;code&gt;/settings&lt;/code&gt; page of the app.&lt;/p&gt; 
&lt;p&gt;If you are using local ollama, you can set it to be default:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;DEFAULT_LLM_PROVIDER=ollama
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If this is the case you must also set the &lt;code&gt;ECONOMY_LLM_PROVIDER&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h3&gt;Redis and Postgres&lt;/h3&gt; 
&lt;p&gt;We use Postgres for the database. For Redis, you can use &lt;a href="https://upstash.com/"&gt;Upstash Redis&lt;/a&gt; or set up your own Redis instance.&lt;/p&gt; 
&lt;p&gt;You can run Postgres &amp;amp; Redis locally using &lt;code&gt;docker-compose&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up -d # -d will run the services in the background
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running the app&lt;/h3&gt; 
&lt;p&gt;To run the migrations:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm prisma migrate dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run the app locally for development (slower):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or from the project root:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;turbo dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build and run the app locally in production mode (faster):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run build
pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; to view the app in your browser.&lt;/p&gt; 
&lt;h3&gt;Premium&lt;/h3&gt; 
&lt;p&gt;Many features are available only to premium users. To upgrade yourself, make yourself an admin in the &lt;code&gt;.env&lt;/code&gt;: &lt;code&gt;ADMINS=hello@gmail.com&lt;/code&gt; Then upgrade yourself at: &lt;a href="http://localhost:3000/admin"&gt;http://localhost:3000/admin&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Set up push notifications via Google PubSub to handle emails in real time&lt;/h3&gt; 
&lt;p&gt;Follow instructions &lt;a href="https://developers.google.com/gmail/api/guides/push"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/gmail/api/guides/push#create_a_topic"&gt;Create a topic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/gmail/api/guides/push#create_a_subscription"&gt;Create a subscription&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/gmail/api/guides/push#grant_publish_rights_on_your_topic"&gt;Grant publish rights on your topic&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Set env var &lt;code&gt;GOOGLE_PUBSUB_TOPIC_NAME&lt;/code&gt;. When creating the subscription select Push and the url should look something like: &lt;code&gt;https://www.getinboxzero.com/api/google/webhook?token=TOKEN&lt;/code&gt; or &lt;code&gt;https://abc.ngrok-free.app/api/google/webhook?token=TOKEN&lt;/code&gt; where the domain is your domain. Set &lt;code&gt;GOOGLE_PUBSUB_VERIFICATION_TOKEN&lt;/code&gt; in your &lt;code&gt;.env&lt;/code&gt; file to be the value of &lt;code&gt;TOKEN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To run in development ngrok can be helpful:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ngrok http 3000
# or with an ngrok domain to keep your endpoint stable (set `XYZ`):
ngrok http --domain=XYZ.ngrok-free.app 3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And then update the webhook endpoint in the &lt;a href="https://console.cloud.google.com/cloudpubsub/subscription/list"&gt;Google PubSub subscriptions dashboard&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To start watching emails visit: &lt;code&gt;/api/watch/all&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Watching for email updates&lt;/h3&gt; 
&lt;p&gt;Set a cron job to run these: The Google watch is necessary. Others are optional.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;  "crons": [
    {
      "path": "/api/watch/all",
      "schedule": "0 1 * * *"
    },
    {
      "path": "/api/resend/summary/all",
      "schedule": "0 16 * * 1"
    },
    {
      "path": "/api/reply-tracker/disable-unused-auto-draft",
      "schedule": "0 3 * * *"
    }
  ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/guides/how-to-setup-cron-jobs-on-vercel#alternative-cron-providers"&gt;Here&lt;/a&gt; are some easy ways to run cron jobs. Upstash is a free, easy option. I could never get the Vercel &lt;code&gt;vercel.json&lt;/code&gt;. Open to PRs if you find a fix for that.&lt;/p&gt; 
&lt;h3&gt;Docker Build Instructions&lt;/h3&gt; 
&lt;p&gt;When building the Docker image, you &lt;strong&gt;must&lt;/strong&gt; specify your &lt;code&gt;NEXT_PUBLIC_BASE_URL&lt;/code&gt; as a build argument. This is because Next.js embeds &lt;code&gt;NEXT_PUBLIC_*&lt;/code&gt; variables at build time, not runtime.&lt;/p&gt; 
&lt;h3&gt;Building the Docker image&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# For production with your custom domain
docker build \
  --build-arg NEXT_PUBLIC_BASE_URL="https://your-domain.com" \
  -t inbox-zero \
  -f docker/Dockerfile.prod .

# For local development (default)
docker build -t inbox-zero -f docker/Dockerfile.prod .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running the container&lt;/h3&gt; 
&lt;p&gt;After building, run the container with your runtime secrets:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -p 3000:3000 \
  -e DATABASE_URL="your-database-url" \
  -e AUTH_SECRET="your-auth-secret" \
  -e GOOGLE_CLIENT_ID="your-google-client-id" \
  -e GOOGLE_CLIENT_SECRET="your-google-client-secret" \
  # ... other runtime environment variables
  inbox-zero
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; If you need to change &lt;code&gt;NEXT_PUBLIC_BASE_URL&lt;/code&gt;, you must rebuild the Docker image. It cannot be changed at runtime.&lt;/p&gt; 
&lt;p&gt;For more detailed Docker build instructions and security considerations, see &lt;a href="https://raw.githubusercontent.com/elie222/inbox-zero/main/docker/DOCKER_BUILD_GUIDE.md"&gt;docker/DOCKER_BUILD_GUIDE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Calendar integrations&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; The calendar integration feature is a work in progress.&lt;/p&gt; 
&lt;h4&gt;Google Calendar&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Visit: &lt;a href="https://console.cloud.google.com/apis/library"&gt;https://console.cloud.google.com/apis/library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Search for "Google Calendar API"&lt;/li&gt; 
 &lt;li&gt;Click on it and then click "Enable"&lt;/li&gt; 
 &lt;li&gt;Visit: &lt;a href="https://console.cloud.google.com/apis/credentials"&gt;credentials&lt;/a&gt;: 
  &lt;ol&gt; 
   &lt;li&gt;Click on your project&lt;/li&gt; 
   &lt;li&gt;In &lt;code&gt;Authorized redirect URIs&lt;/code&gt; add:&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;http://localhost:3000/api/google/calendar/callback&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing to the project&lt;/h2&gt; 
&lt;p&gt;You can view open tasks in our &lt;a href="https://github.com/elie222/inbox-zero/issues"&gt;GitHub Issues&lt;/a&gt;. Join our &lt;a href="https://www.getinboxzero.com/discord"&gt;Discord&lt;/a&gt; to discuss tasks and check what's being worked on.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/elie222/inbox-zero/main/ARCHITECTURE.md"&gt;ARCHITECTURE.md&lt;/a&gt; explains the architecture of the project (LLM generated).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dyad-sh/dyad</title>
      <link>https://github.com/dyad-sh/dyad</link>
      <description>&lt;p&gt;Free, local, open-source AI app builder ✨ v0 / lovable / Bolt alternative 🌟 Star if you like it!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Dyad&lt;/h1&gt; 
&lt;p&gt;Dyad is a local, open-source AI app builder. It's fast, private, and fully under your control — like Lovable, v0, or Bolt, but running right on your machine.&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://dyad.sh/"&gt;&lt;img src="https://github.com/user-attachments/assets/f6c83dfc-6ffd-4d32-93dd-4b9c46d17790" alt="Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More info at: &lt;a href="http://dyad.sh/"&gt;http://dyad.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡️ &lt;strong&gt;Local&lt;/strong&gt;: Fast, private and no lock-in.&lt;/li&gt; 
 &lt;li&gt;🛠 &lt;strong&gt;Bring your own keys&lt;/strong&gt;: Use your own AI API keys — no vendor lock-in.&lt;/li&gt; 
 &lt;li&gt;🖥️ &lt;strong&gt;Cross-platform&lt;/strong&gt;: Easy to run on Mac or Windows.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📦 Download&lt;/h2&gt; 
&lt;p&gt;No sign-up required. Just download and go.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://www.dyad.sh/#download"&gt;👉 Download for your platform&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;🤝 Community&lt;/h2&gt; 
&lt;p&gt;Join our growing community of AI app builders on &lt;strong&gt;Reddit&lt;/strong&gt;: &lt;a href="https://www.reddit.com/r/dyadbuilders/"&gt;r/dyadbuilders&lt;/a&gt; - share your projects and get help from the community!&lt;/p&gt; 
&lt;h2&gt;🛠️ Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Dyad&lt;/strong&gt; is open-source (Apache 2.0 licensed).&lt;/p&gt; 
&lt;p&gt;If you're interested in contributing to dyad, please read our &lt;a href="https://raw.githubusercontent.com/dyad-sh/dyad/main/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; doc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lfnovo/open-notebook</title>
      <link>https://github.com/lfnovo/open-notebook</link>
      <description>&lt;p&gt;An Open Source implementation of Notebook LM with more flexibility and features&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a id="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Contributors][contributors-shield]][contributors-url] --&gt; 
&lt;p&gt;&lt;a href="https://github.com/lfnovo/open-notebook/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/lfnovo/open-notebook.svg?style=for-the-badge" alt="Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lfnovo/open-notebook/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/lfnovo/open-notebook.svg?style=for-the-badge" alt="Stargazers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;&lt;img src="https://img.shields.io/github/issues/lfnovo/open-notebook.svg?style=for-the-badge" alt="Issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lfnovo/open-notebook/raw/master/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/lfnovo/open-notebook.svg?style=for-the-badge" alt="MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![LinkedIn][linkedin-shield]][linkedin-url] --&gt; 
&lt;!-- PROJECT LOGO --&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/lfnovo/open-notebook"&gt; &lt;img src="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/assets/hero.svg?sanitize=true" alt="Logo" /&gt; &lt;/a&gt; 
 &lt;h3 align="center"&gt;Open Notebook&lt;/h3&gt; 
 &lt;p align="center"&gt; An open source, privacy-focused alternative to Google's Notebook LM! &lt;br /&gt;&lt;strong&gt;Join our &lt;a href="https://discord.gg/37XJPXfz2w"&gt;Discord server&lt;/a&gt; for help, to share workflow ideas, and suggest features!&lt;/strong&gt; &lt;br /&gt; &lt;a href="https://www.open-notebook.ai"&gt;&lt;strong&gt;Checkout our website »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/index.md"&gt;📚 Get Started&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/index.md"&gt;📖 User Guide&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/index.md"&gt;✨ Features&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/index.md"&gt;🚀 Deploy&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; 
 &lt;a href="https://zdoc.app/de/lfnovo/open-notebook"&gt;Deutsch&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/es/lfnovo/open-notebook"&gt;Español&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/fr/lfnovo/open-notebook"&gt;français&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/ja/lfnovo/open-notebook"&gt;日本語&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/ko/lfnovo/open-notebook"&gt;한국어&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/pt/lfnovo/open-notebook"&gt;Português&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/ru/lfnovo/open-notebook"&gt;Русский&lt;/a&gt; | 
 &lt;a href="https://zdoc.app/zh/lfnovo/open-notebook"&gt;中文&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;A private, multi-model, 100% local, full-featured alternative to Notebook LM&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/assets/asset_list.png" alt="New Notebook" /&gt;&lt;/p&gt; 
&lt;p&gt;In a world dominated by Artificial Intelligence, having the ability to think 🧠 and acquire new knowledge 💡, is a skill that should not be a privilege for a few, nor restricted to a single provider.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Open Notebook empowers you to:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Control your data&lt;/strong&gt; - Keep your research private and secure&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Choose your AI models&lt;/strong&gt; - Support for 16+ providers including OpenAI, Anthropic, Ollama, LM Studio, and more&lt;/li&gt; 
 &lt;li&gt;📚 &lt;strong&gt;Organize multi-modal content&lt;/strong&gt; - PDFs, videos, audio, web pages, and more&lt;/li&gt; 
 &lt;li&gt;🎙️ &lt;strong&gt;Generate professional podcasts&lt;/strong&gt; - Advanced multi-speaker podcast generation&lt;/li&gt; 
 &lt;li&gt;🔍 &lt;strong&gt;Search intelligently&lt;/strong&gt; - Full-text and vector search across all your content&lt;/li&gt; 
 &lt;li&gt;💬 &lt;strong&gt;Chat with context&lt;/strong&gt; - AI conversations powered by your research&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn more about our project at &lt;a href="https://www.open-notebook.ai"&gt;https://www.open-notebook.ai&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚠️ IMPORTANT: v1.0 Breaking Changes&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If you're upgrading from a previous version&lt;/strong&gt;, please note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏷️ &lt;strong&gt;Docker tags have changed&lt;/strong&gt;: The &lt;code&gt;latest&lt;/code&gt; tag is now &lt;strong&gt;frozen&lt;/strong&gt; at the last Streamlit version&lt;/li&gt; 
 &lt;li&gt;🆕 &lt;strong&gt;Use &lt;code&gt;v1-latest&lt;/code&gt; tag&lt;/strong&gt; for the new React/Next.js version (recommended)&lt;/li&gt; 
 &lt;li&gt;🔌 &lt;strong&gt;Port 5055 required&lt;/strong&gt;: You must expose port 5055 for the API to work&lt;/li&gt; 
 &lt;li&gt;📖 &lt;strong&gt;Read the migration guide&lt;/strong&gt;: See &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/MIGRATION.md"&gt;MIGRATION.md&lt;/a&gt; for detailed upgrade instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;New users&lt;/strong&gt;: You can ignore this notice and proceed with the Quick Start below using the &lt;code&gt;v1-latest-single&lt;/code&gt; tag.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🆚 Open Notebook vs Google Notebook LM&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Open Notebook&lt;/th&gt; 
   &lt;th&gt;Google Notebook LM&lt;/th&gt; 
   &lt;th&gt;Advantage&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Privacy &amp;amp; Control&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Self-hosted, your data&lt;/td&gt; 
   &lt;td&gt;Google cloud only&lt;/td&gt; 
   &lt;td&gt;Complete data sovereignty&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AI Provider Choice&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;16+ providers (OpenAI, Anthropic, Ollama, LM Studio, etc.)&lt;/td&gt; 
   &lt;td&gt;Google models only&lt;/td&gt; 
   &lt;td&gt;Flexibility and cost optimization&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Podcast Speakers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;1-4 speakers with custom profiles&lt;/td&gt; 
   &lt;td&gt;2 speakers only&lt;/td&gt; 
   &lt;td&gt;Extreme flexibility&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Context Control&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;3 granular levels&lt;/td&gt; 
   &lt;td&gt;All-or-nothing&lt;/td&gt; 
   &lt;td&gt;Privacy and performance tuning&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Content Transformations&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Custom and built-in&lt;/td&gt; 
   &lt;td&gt;Limited options&lt;/td&gt; 
   &lt;td&gt;Unlimited processing power&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;API Access&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Full REST API&lt;/td&gt; 
   &lt;td&gt;No API&lt;/td&gt; 
   &lt;td&gt;Complete automation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Deployment&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Docker, cloud, or local&lt;/td&gt; 
   &lt;td&gt;Google hosted only&lt;/td&gt; 
   &lt;td&gt;Deploy anywhere&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Citations&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Comprehensive with sources&lt;/td&gt; 
   &lt;td&gt;Basic references&lt;/td&gt; 
   &lt;td&gt;Research integrity&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Customization&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Open source, fully customizable&lt;/td&gt; 
   &lt;td&gt;Closed system&lt;/td&gt; 
   &lt;td&gt;Unlimited extensibility&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cost&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Pay only for AI usage&lt;/td&gt; 
   &lt;td&gt;Monthly subscription + usage&lt;/td&gt; 
   &lt;td&gt;Transparent and controllable&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Why Choose Open Notebook?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Privacy First&lt;/strong&gt;: Your sensitive research stays completely private&lt;/li&gt; 
 &lt;li&gt;💰 &lt;strong&gt;Cost Control&lt;/strong&gt;: Choose cheaper AI providers or run locally with Ollama&lt;/li&gt; 
 &lt;li&gt;🎙️ &lt;strong&gt;Better Podcasts&lt;/strong&gt;: Full script control and multi-speaker flexibility vs limited 2-speaker deep-dive format&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Unlimited Customization&lt;/strong&gt;: Modify, extend, and integrate as needed&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;No Vendor Lock-in&lt;/strong&gt;: Switch providers, deploy anywhere, own your data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Built With&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.python.org/"&gt;&lt;img src="https://img.shields.io/badge/Python-3776AB?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=white" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://nextjs.org/"&gt;&lt;img src="https://img.shields.io/badge/Next.js-000000?style=for-the-badge&amp;amp;logo=next.js&amp;amp;logoColor=white" alt="Next.js" /&gt;&lt;/a&gt; &lt;a href="https://reactjs.org/"&gt;&lt;img src="https://img.shields.io/badge/React-61DAFB?style=for-the-badge&amp;amp;logo=react&amp;amp;logoColor=black" alt="React" /&gt;&lt;/a&gt; &lt;a href="https://surrealdb.com/"&gt;&lt;img src="https://img.shields.io/badge/SurrealDB-FF5E00?style=for-the-badge&amp;amp;logo=databricks&amp;amp;logoColor=white" alt="SurrealDB" /&gt;&lt;/a&gt; &lt;a href="https://www.langchain.com/"&gt;&lt;img src="https://img.shields.io/badge/LangChain-3A3A3A?style=for-the-badge&amp;amp;logo=chainlink&amp;amp;logoColor=white" alt="LangChain" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Docker Images Available:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Hub&lt;/strong&gt;: &lt;code&gt;lfnovo/open_notebook:v1-latest-single&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Container Registry&lt;/strong&gt;: &lt;code&gt;ghcr.io/lfnovo/open-notebook:v1-latest-single&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both registries contain identical images - choose whichever you prefer!&lt;/p&gt; 
&lt;h3&gt;Choose Your Setup:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%"&gt; &lt;h4&gt;🏠 &lt;strong&gt;Local Machine Setup&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;Perfect if Docker runs on the &lt;strong&gt;same computer&lt;/strong&gt; where you'll access Open Notebook.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir open-notebook &amp;amp;&amp;amp; cd open-notebook

docker run -d \
  --name open-notebook \
  -p 8502:8502 -p 5055:5055 \
  -v ./notebook_data:/app/data \
  -v ./surreal_data:/mydata \
  -e OPENAI_API_KEY=your_key_here \
  -e SURREAL_URL="ws://localhost:8000/rpc" \
  -e SURREAL_USER="root" \
  -e SURREAL_PASSWORD="root" \
  -e SURREAL_NAMESPACE="open_notebook" \
  -e SURREAL_DATABASE="production" \
  lfnovo/open_notebook:v1-latest-single
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Access at:&lt;/strong&gt; &lt;a href="http://localhost:8502"&gt;http://localhost:8502&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="50%"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Remote Server Setup&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;Use this for servers, Raspberry Pi, NAS, Proxmox, or any remote machine.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir open-notebook &amp;amp;&amp;amp; cd open-notebook

docker run -d \
  --name open-notebook \
  -p 8502:8502 -p 5055:5055 \
  -v ./notebook_data:/app/data \
  -v ./surreal_data:/mydata \
  -e OPENAI_API_KEY=your_key_here \
  -e API_URL=http://YOUR_SERVER_IP:5055 \
  -e SURREAL_URL="ws://localhost:8000/rpc" \
  -e SURREAL_USER="root" \
  -e SURREAL_PASSWORD="root" \
  -e SURREAL_NAMESPACE="open_notebook" \
  -e SURREAL_DATABASE="production" \
  lfnovo/open_notebook:v1-latest-single
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Replace &lt;code&gt;YOUR_SERVER_IP&lt;/code&gt;&lt;/strong&gt; with your server's IP (e.g., &lt;code&gt;192.168.1.100&lt;/code&gt;) or domain&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Access at:&lt;/strong&gt; http://YOUR_SERVER_IP:8502&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Critical Setup Notes:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Both ports are required:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Port 8502&lt;/strong&gt;: Web interface (what you see in your browser)&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Port 5055&lt;/strong&gt;: API backend (required for the app to function)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;API_URL must match how YOU access the server:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;✅ Access via &lt;code&gt;http://192.168.1.100:8502&lt;/code&gt; → set &lt;code&gt;API_URL=http://192.168.1.100:5055&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;✅ Access via &lt;code&gt;http://myserver.local:8502&lt;/code&gt; → set &lt;code&gt;API_URL=http://myserver.local:5055&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;❌ Don't use &lt;code&gt;localhost&lt;/code&gt; for remote servers - it won't work from other devices!&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Using Docker Compose (Recommended for Easy Management)&lt;/h3&gt; 
&lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  open_notebook:
    image: lfnovo/open_notebook:v1-latest-single
    # Or use: ghcr.io/lfnovo/open-notebook:v1-latest-single
    ports:
      - "8502:8502"  # Web UI
      - "5055:5055"  # API (required!)
    environment:
      - OPENAI_API_KEY=your_key_here
      # For remote access, uncomment and set your server IP/domain:
      # - API_URL=http://192.168.1.100:5055
      # Database connection (required for single-container)
      - SURREAL_URL=ws://localhost:8000/rpc
      - SURREAL_USER=root
      - SURREAL_PASSWORD=root
      - SURREAL_NAMESPACE=open_notebook
      - SURREAL_DATABASE=production
    volumes:
      - ./notebook_data:/app/data
      - ./surreal_data:/mydata
    restart: always
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start with: &lt;code&gt;docker compose up -d&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;What gets created:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;open-notebook/
├── docker-compose.yml # Your configuration
├── notebook_data/     # Your notebooks and research content
└── surreal_data/      # Database files
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🆘 Quick Troubleshooting&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Problem&lt;/th&gt; 
   &lt;th&gt;Solution&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;"Unable to connect to server"&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Set &lt;code&gt;API_URL&lt;/code&gt; environment variable to match how you access the server (see remote setup above)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Blank page or errors&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ensure BOTH ports (8502 and 5055) are exposed in your docker command&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Works on server but not from other computers&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Don't use &lt;code&gt;localhost&lt;/code&gt; in &lt;code&gt;API_URL&lt;/code&gt; - use your server's actual IP address&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;"404" or "config endpoint" errors&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Don't add &lt;code&gt;/api&lt;/code&gt; to &lt;code&gt;API_URL&lt;/code&gt; - use just &lt;code&gt;http://your-ip:5055&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Still having issues?&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Check our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/troubleshooting/quick-fixes.md"&gt;5-minute troubleshooting guide&lt;/a&gt; or &lt;a href="https://discord.gg/37XJPXfz2w"&gt;join Discord&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;How Open Notebook Works&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;┌─────────────────────────────────────────────────────────┐
│  Your Browser                                           │
│  Access: http://your-server-ip:8502                     │
└────────────────┬────────────────────────────────────────┘
                 │
                 ▼
         ┌───────────────┐
         │   Port 8502   │  ← Next.js Frontend (what you see)
         │   Frontend    │    Also proxies API requests internally!
         └───────┬───────┘
                 │ proxies /api/* requests ↓
                 ▼
         ┌───────────────┐
         │   Port 5055   │  ← FastAPI Backend (handles requests)
         │     API       │
         └───────┬───────┘
                 │
                 ▼
         ┌───────────────┐
         │   SurrealDB   │  ← Database (internal, auto-configured)
         │   (Port 8000) │
         └───────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Points:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;v1.1+&lt;/strong&gt;: Next.js automatically proxies &lt;code&gt;/api/*&lt;/code&gt; requests to the backend, simplifying reverse proxy setup&lt;/li&gt; 
 &lt;li&gt;Your browser loads the frontend from port 8502&lt;/li&gt; 
 &lt;li&gt;The frontend needs to know where to find the API - when accessing remotely, set: &lt;code&gt;API_URL=http://your-server-ip:5055&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Behind reverse proxy?&lt;/strong&gt; You only need to proxy to port 8502 now! See &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/reverse-proxy.md"&gt;Reverse Proxy Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#lfnovo/open-notebook&amp;amp;type=date&amp;amp;legend=top-left"&gt;&lt;img src="https://api.star-history.com/svg?repos=lfnovo/open-notebook&amp;amp;type=date&amp;amp;legend=top-left" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🛠️ Full Installation&lt;/h3&gt; 
&lt;p&gt;For development or customization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/lfnovo/open-notebook
cd open-notebook
make start-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;📖 Need Help?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 AI Installation Assistant&lt;/strong&gt;: We have a &lt;a href="https://chatgpt.com/g/g-68776e2765b48191bd1bae3f30212631-open-notebook-installation-assistant"&gt;CustomGPT built to help you install Open Notebook&lt;/a&gt; - it will guide you through each step!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New to Open Notebook?&lt;/strong&gt; Start with our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/index.md"&gt;Getting Started Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Need installation help?&lt;/strong&gt; Check our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/installation.md"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Want to see it in action?&lt;/strong&gt; Try our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/quick-start.md"&gt;Quick Start Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Provider Support Matrix&lt;/h2&gt; 
&lt;p&gt;Thanks to the &lt;a href="https://github.com/lfnovo/esperanto"&gt;Esperanto&lt;/a&gt; library, we support this providers out of the box!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
   &lt;th&gt;LLM Support&lt;/th&gt; 
   &lt;th&gt;Embedding Support&lt;/th&gt; 
   &lt;th&gt;Speech-to-Text&lt;/th&gt; 
   &lt;th&gt;Text-to-Speech&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Anthropic&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Groq&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Google (GenAI)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vertex AI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ollama&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Perplexity&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ElevenLabs&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Azure OpenAI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Voyage&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;xAI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI Compatible*&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;*Supports LM Studio and any OpenAI-compatible endpoint&lt;/p&gt; 
&lt;h2&gt;✨ Key Features&lt;/h2&gt; 
&lt;h3&gt;Core Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔒 Privacy-First&lt;/strong&gt;: Your data stays under your control - no cloud dependencies&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Multi-Notebook Organization&lt;/strong&gt;: Manage multiple research projects seamlessly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📚 Universal Content Support&lt;/strong&gt;: PDFs, videos, audio, web pages, Office docs, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 Multi-Model AI Support&lt;/strong&gt;: 16+ providers including OpenAI, Anthropic, Ollama, Google, LM Studio, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎙️ Professional Podcast Generation&lt;/strong&gt;: Advanced multi-speaker podcasts with Episode Profiles&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Intelligent Search&lt;/strong&gt;: Full-text and vector search across all your content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💬 Context-Aware Chat&lt;/strong&gt;: AI conversations powered by your research materials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📝 AI-Assisted Notes&lt;/strong&gt;: Generate insights or write notes manually&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Reasoning Model Support&lt;/strong&gt;: Full support for thinking models like DeepSeek-R1 and Qwen3&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 Content Transformations&lt;/strong&gt;: Powerful customizable actions to summarize and extract insights&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Comprehensive REST API&lt;/strong&gt;: Full programmatic access for custom integrations &lt;a href="http://localhost:5055/docs"&gt;&lt;img src="https://img.shields.io/badge/API-Documentation-blue?style=flat-square" alt="API Docs" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔐 Optional Password Protection&lt;/strong&gt;: Secure public deployments with authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Fine-Grained Context Control&lt;/strong&gt;: Choose exactly what to share with AI models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📎 Citations&lt;/strong&gt;: Get answers with proper source citations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Three-Column Interface&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Sources&lt;/strong&gt;: Manage all your research materials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Notes&lt;/strong&gt;: Create manual or AI-generated notes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chat&lt;/strong&gt;: Converse with AI using your content as context&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=D-760MlGwaI"&gt;&lt;img src="https://img.youtube.com/vi/D-760MlGwaI/0.jpg" alt="Check out our podcast sample" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;h3&gt;Getting Started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/introduction.md"&gt;📖 Introduction&lt;/a&gt;&lt;/strong&gt; - Learn what Open Notebook offers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/quick-start.md"&gt;⚡ Quick Start&lt;/a&gt;&lt;/strong&gt; - Get up and running in 5 minutes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/installation.md"&gt;🔧 Installation&lt;/a&gt;&lt;/strong&gt; - Comprehensive setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/getting-started/first-notebook.md"&gt;🎯 Your First Notebook&lt;/a&gt;&lt;/strong&gt; - Step-by-step tutorial&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;User Guide&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/interface-overview.md"&gt;📱 Interface Overview&lt;/a&gt;&lt;/strong&gt; - Understanding the layout&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/notebooks.md"&gt;📚 Notebooks&lt;/a&gt;&lt;/strong&gt; - Organizing your research&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/sources.md"&gt;📄 Sources&lt;/a&gt;&lt;/strong&gt; - Managing content types&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/notes.md"&gt;📝 Notes&lt;/a&gt;&lt;/strong&gt; - Creating and managing notes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/chat.md"&gt;💬 Chat&lt;/a&gt;&lt;/strong&gt; - AI conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/user-guide/search.md"&gt;🔍 Search&lt;/a&gt;&lt;/strong&gt; - Finding information&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Topics&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/podcasts.md"&gt;🎙️ Podcast Generation&lt;/a&gt;&lt;/strong&gt; - Create professional podcasts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/transformations.md"&gt;🔧 Content Transformations&lt;/a&gt;&lt;/strong&gt; - Customize content processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/features/ai-models.md"&gt;🤖 AI Models&lt;/a&gt;&lt;/strong&gt; - AI model configuration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/development/api-reference.md"&gt;🔧 REST API Reference&lt;/a&gt;&lt;/strong&gt; - Complete API documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/security.md"&gt;🔐 Security&lt;/a&gt;&lt;/strong&gt; - Password protection and privacy&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/docs/deployment/index.md"&gt;🚀 Deployment&lt;/a&gt;&lt;/strong&gt; - Complete deployment guides for all scenarios&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;🗺️ Roadmap&lt;/h2&gt; 
&lt;h3&gt;Upcoming Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Live Front-End Updates&lt;/strong&gt;: Real-time UI updates for smoother experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Async Processing&lt;/strong&gt;: Faster UI through asynchronous content processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-Notebook Sources&lt;/strong&gt;: Reuse research materials across projects&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bookmark Integration&lt;/strong&gt;: Connect with your favorite bookmarking apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Recently Completed ✅&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Next.js Frontend&lt;/strong&gt;: Modern React-based frontend with improved performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive REST API&lt;/strong&gt;: Full programmatic access to all functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Model Support&lt;/strong&gt;: 16+ AI providers including OpenAI, Anthropic, Ollama, LM Studio&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Podcast Generator&lt;/strong&gt;: Professional multi-speaker podcasts with Episode Profiles&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Content Transformations&lt;/strong&gt;: Powerful customizable actions for content processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Citations&lt;/strong&gt;: Improved layout and finer control for source citations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Chat Sessions&lt;/strong&gt;: Manage different conversations within notebooks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;open issues&lt;/a&gt; for a full list of proposed features and known issues.&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;🤝 Community &amp;amp; Contributing&lt;/h2&gt; 
&lt;h3&gt;Join the Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;💬 &lt;strong&gt;&lt;a href="https://discord.gg/37XJPXfz2w"&gt;Discord Server&lt;/a&gt;&lt;/strong&gt; - Get help, share ideas, and connect with other users&lt;/li&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;&lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs and request features&lt;/li&gt; 
 &lt;li&gt;⭐ &lt;strong&gt;Star this repo&lt;/strong&gt; - Show your support and help others discover Open Notebook&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributing&lt;/h3&gt; 
&lt;p&gt;We welcome contributions! We're especially looking for help with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend Development&lt;/strong&gt;: Help improve our modern Next.js/React UI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Testing &amp;amp; Bug Fixes&lt;/strong&gt;: Make Open Notebook more robust&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Feature Development&lt;/strong&gt;: Build the coolest research tool together&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Improve guides and tutorials&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Current Tech Stack&lt;/strong&gt;: Python, FastAPI, Next.js, React, SurrealDB &lt;strong&gt;Future Roadmap&lt;/strong&gt;: Real-time updates, enhanced async processing&lt;/p&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for detailed information on how to get started.&lt;/p&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Open Notebook is MIT licensed. See the &lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;📞 Contact&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Luis Novo&lt;/strong&gt; - &lt;a href="https://twitter.com/lfnovo"&gt;@lfnovo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Community Support&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;💬 &lt;a href="https://discord.gg/37XJPXfz2w"&gt;Discord Server&lt;/a&gt; - Get help, share ideas, and connect with users&lt;/li&gt; 
 &lt;li&gt;🐛 &lt;a href="https://github.com/lfnovo/open-notebook/issues"&gt;GitHub Issues&lt;/a&gt; - Report bugs and request features&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;a href="https://www.open-notebook.ai"&gt;Website&lt;/a&gt; - Learn more about the project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙏 Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Open Notebook is built on the shoulders of amazing open-source projects:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/podcast-creator"&gt;Podcast Creator&lt;/a&gt;&lt;/strong&gt; - Advanced podcast generation capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/surreal-commands"&gt;Surreal Commands&lt;/a&gt;&lt;/strong&gt; - Background job processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/content-core"&gt;Content Core&lt;/a&gt;&lt;/strong&gt; - Content processing and management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/lfnovo/esperanto"&gt;Esperanto&lt;/a&gt;&lt;/strong&gt; - Multi-provider AI model abstraction&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/docling-project/docling"&gt;Docling&lt;/a&gt;&lt;/strong&gt; - Document processing and parsing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="right"&gt;(&lt;a href="https://raw.githubusercontent.com/lfnovo/open-notebook/main/#readme-top"&gt;back to top&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>umami-software/umami</title>
      <link>https://github.com/umami-software/umami</link>
      <description>&lt;p&gt;Umami is a modern, privacy-focused alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://content.umami.is/website/images/umami-logo.png" alt="Umami Logo" width="100" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Umami&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;i&gt;Umami is a simple, fast, privacy-focused alternative to Google Analytics.&lt;/i&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami/releases"&gt; &lt;img src="https://img.shields.io/github/release/umami-software/umami.svg?sanitize=true" alt="GitHub Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/raw/master/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/umami-software/umami.svg?sanitize=true" alt="MIT License" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/actions"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/umami-software/umami/ci.yml" alt="Build Status" /&gt; &lt;/a&gt; &lt;a href="https://analytics.umami.is/share/LGazGOecbDtaIwDr/umami.is" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Try%20Demo%20Now-Click%20Here-brightgreen" alt="Umami Demo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href="https://umami.is/docs/"&gt;umami.is/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠 Installing from Source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js version 18.18 or newer&lt;/li&gt; 
 &lt;li&gt;A database. Umami supports &lt;a href="https://www.mariadb.org/"&gt;MariaDB&lt;/a&gt; (minimum v10.5), &lt;a href="https://www.mysql.com/"&gt;MySQL&lt;/a&gt; (minimum v8.0) and &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; (minimum v12.14) databases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the Source Code and Install Packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/umami-software/umami.git
cd umami
pnpm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure Umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DATABASE_URL=connection-url
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection URL format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;postgresql://username:mypassword@localhost:5432/mydb
mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;The build step will create tables in your database if you are installing for the first time. It will also create a login user with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Start the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;By default, this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/"&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href="https://nextjs.org/docs/api-reference/cli#production"&gt;port&lt;/a&gt; to serve the application directly.&lt;/em&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐳 Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the Umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔄 Getting Updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull
pnpm install
pnpm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update the Docker image, simply pull the new images and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose pull
docker compose up --force-recreate -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛟 Support&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami"&gt; &lt;img src="https://img.shields.io/badge/GitHub--blue?style=social&amp;amp;logo=github" alt="GitHub" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/umami_software"&gt; &lt;img src="https://img.shields.io/badge/Twitter--blue?style=social&amp;amp;logo=twitter" alt="Twitter" /&gt; &lt;/a&gt; &lt;a href="https://linkedin.com/company/umami-software"&gt; &lt;img src="https://img.shields.io/badge/LinkedIn--blue?style=social&amp;amp;logo=linkedin" alt="LinkedIn" /&gt; &lt;/a&gt; &lt;a href="https://umami.is/discord"&gt; &lt;img src="https://img.shields.io/badge/Discord--blue?style=social&amp;amp;logo=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>