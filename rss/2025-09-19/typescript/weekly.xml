<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Thu, 18 Sep 2025 01:49:46 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ZuodaoTech/everyone-can-use-english</title>
      <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
      <description>&lt;p&gt;人人都能用英语&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/assets/icon.png" alt="Clash" width="128" /&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; AI 是当今世界上最好的外语老师，Enjoy 做 AI 最好的助教。 &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg?sanitize=true" alt="Deploy 1000h website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg?sanitize=true" alt="Test Enjoy App" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg?sanitize=true" alt="Release Enjoy App" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;amp;query=%24.version&amp;amp;label=Latest&amp;amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html" alt="Latest Version" /&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings" alt="Recording Duration" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;网页版&lt;/h2&gt; 
&lt;p&gt;Enjoy 网页版已经上线，可访问 &lt;a href="https://enjoy.bot"&gt;https://enjoy.bot&lt;/a&gt; 直接使用。&lt;/p&gt; 
&lt;div align="center" style="display:flex;overflow:auto;gap:10px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audios.jpg" alt="Audios" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-add-audio.jpg" alt="Add Audio" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-shadow.jpg" alt="Shadow" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-assessment.jpg" alt="Assessment" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-new-chat.jpg" alt="New Chat" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-chat.jpg" alt="Chat" width="300" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;桌面版安装及使用&lt;/h2&gt; 
&lt;p&gt;下载及使用相关说明，请参阅 &lt;a href="https://1000h.org/enjoy-app/"&gt;文档&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;预览&lt;/h2&gt; 
&lt;div align="center" style="display:flex;overflow:auto;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/home.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/shadow.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/assessment.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/document.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/chat.png" alt="Home" width="800" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;桌面版开发&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn enjoy:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;相关阅读&lt;/h2&gt; 
&lt;h3&gt;一千小时（2024）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/intro.html"&gt;简要说明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/training-tasks/kick-off.html"&gt;训练任务&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/sounds-of-american-english/0-intro.html"&gt;语音塑造&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/in-the-brain/01-inifinite.html"&gt;大脑内部&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/self-training/00-intro.html"&gt;自我训练&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;人人都能用英语（2010）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/README.md"&gt;简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter1.md"&gt;第一章：起点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter2.md"&gt;第二章：口语&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter3.md"&gt;第三章：语音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter4.md"&gt;第四章：朗读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter5.md"&gt;第五章：词典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter6.md"&gt;第六章：语法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter7.md"&gt;第七章：精读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter8.md"&gt;第八章：叮嘱&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/end.md"&gt;后记&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;p&gt;请查询 &lt;a href="https://1000h.org/enjoy-app/faq.html"&gt;文档 FAQ&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/examples</title>
      <link>https://github.com/vercel/examples</link>
      <description>&lt;p&gt;Enjoy our curated collection of examples and solutions. Use these patterns to build your own robust and scalable applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vercel.com"&gt; &lt;img src="https://assets.vercel.com/image/upload/v1588805858/repositories/vercel/logo.png" height="96" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a href="https://vercel.com"&gt;Vercel Examples&lt;/a&gt;&lt;/h3&gt;
&lt;a href="https://vercel.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions"&gt;Solutions&lt;/a&gt; – Demos, reference architecture, and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/starter"&gt;Starter&lt;/a&gt; – Functional applications which can act as a starting point&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vercel Templates&lt;/h2&gt; 
&lt;p&gt;Multiple examples are being featured in &lt;a href="https://vercel.com/templates"&gt;Vercel's Templates&lt;/a&gt;, visit that page for more advanced filtering options.&lt;/p&gt; 
&lt;h3&gt;For Vercelians&lt;/h3&gt; 
&lt;p&gt;Examples that have front matter metadata will create a new Draft template in &lt;a href="https://app.contentful.com"&gt;Contentful&lt;/a&gt;, for more steps on how to publish a template, read &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/publishing-templates.md"&gt;Publishing Templates&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adding a new example&lt;/h2&gt; 
&lt;p&gt;To quickly start contributing with a new example, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm new-example
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the script above isn't used, make sure the example complies with the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It must have a &lt;code&gt;.gitignore&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.gitignore"&gt;plop-templates/example/.gitignore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;package.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/package.json"&gt;plop-templates/example/package.json&lt;/a&gt; (usage of Next.js is optional). The license should be &lt;code&gt;MIT&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;README.md&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/README.md"&gt;plop-templates/example/README.md&lt;/a&gt;. The example has to be able to include a demo URL (the Vercel team will deploy it!) and if it requires environment variables, it must have a &lt;code&gt;.env.example&lt;/code&gt; file and instructions on how to set them up. Take &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt; as an example. 
  &lt;ul&gt; 
   &lt;li&gt;To customize the Vercel Deploy Button take a look at the &lt;a href="https://vercel.com/docs/deploy-button"&gt;docs&lt;/a&gt;, useful if the deployment has required environment variables.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If using Next.js, it must have a &lt;code&gt;.eslintrc.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.eslintrc.json"&gt;plop-templates/example/.eslintrc.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;All Next.js examples should be using the same styling and layout provided by &lt;code&gt;@vercel/examples-ui&lt;/code&gt;, its usage can be seen in the &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example"&gt;plop template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adding a template&lt;/h3&gt; 
&lt;p&gt;If you would like the example to be featured in &lt;a href="https://vercel.com/templates"&gt;vercel.com/templates&lt;/a&gt; then also add the front matter metadata to the top of the readme, like in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt;. To know all the possible values for each metadata take a look at &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/fields.json"&gt;&lt;code&gt;internal/fields.json&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to add related templates to your template, copy the &lt;code&gt;slug&lt;/code&gt; from the other template into the &lt;code&gt;relatedTemplates&lt;/code&gt; field, for example for &lt;a href="https://vercel.com/templates/next.js/monorepo-turborepo"&gt;vercel.com/templates/next.js/monorepo-turborepo&lt;/a&gt; the slug is &lt;code&gt;monorepo-turborepo&lt;/code&gt;, as written in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions/monorepo/README.md"&gt;solutions/monorepo/README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;The pre-commit hook&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt; to manage the pre-commit &lt;a href="https://git-scm.com/docs/githooks"&gt;Git hook&lt;/a&gt; in this repo. Husky configures hooks automatically during install, so you don't need to do anything special to get them working, but if it fails to install, you can run the following command to install it manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run prepare
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Code changes automatically go through Prettier and ESLint when you make a commit, &lt;strong&gt;please do not skip these steps&lt;/strong&gt; unless they're broken and in that case let us known by creating an issue.&lt;/p&gt; 
&lt;h2&gt;Read the Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vercel.com/docs"&gt;Vercel Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/docs"&gt;Next.js Docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have any questions or suggestions about the docs, feel free to &lt;a href="https://github.com/vercel/examples/discussions"&gt;open a discussion&lt;/a&gt;, or &lt;a href="https://github.com/vercel/examples/pulls"&gt;submit a PR&lt;/a&gt; with your suggestions!&lt;/p&gt; 
&lt;h2&gt;Provide Feedback&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/discussions"&gt;Start a Discussion&lt;/a&gt; with a question, piece of feedback, or idea you want to share with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/issues"&gt;Open an Issue&lt;/a&gt; if you believe you've encountered a bug that you want to flag for the team.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Vanilagy/mediabunny</title>
      <link>https://github.com/Vanilagy/mediabunny</link>
      <description>&lt;p&gt;Pure TypeScript media toolkit for reading, writing, and converting video and audio files, directly in the browser.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mediabunny - JavaScript media toolkit&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/mediabunny"&gt;&lt;img src="https://img.shields.io/npm/v/mediabunny" alt="" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/package/mediabunny"&gt;&lt;img src="https://img.shields.io/bundlephobia/minzip/mediabunny" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/mediabunny"&gt;&lt;img src="https://img.shields.io/npm/dm/mediabunny" alt="" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/hmpkyYuS4U"&gt;&lt;img src="https://img.shields.io/discord/1390044844285497344?logo=discord&amp;amp;label=Discord" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/mediabunny-logo.svg?sanitize=true" width="180" height="180" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Mediabunny is a JavaScript library for reading, writing, and converting media files (like MP4, WebM, MP3), directly in the browser. It aims to be a complete toolkit for high-performance media operations on the web. It's written from scratch in pure TypeScript, has zero dependencies, is very performant, and is extremely tree-shakable, meaning you only include what you use. You can think of it a bit like &lt;a href="https://ffmpeg.org/"&gt;FFmpeg&lt;/a&gt;, but built from the ground up for the web.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev"&gt;Documentation&lt;/a&gt; | &lt;a href="https://mediabunny.dev/examples"&gt;Examples&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/#sponsoring"&gt;Sponsoring&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/#license"&gt;License&lt;/a&gt; | &lt;a href="https://discord.gg/hmpkyYuS4U"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Gold sponsors&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://remotion.dev/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/remotion.png" width="60" height="60" alt="Remotion" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://www.gling.ai/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/gling.svg?sanitize=true" width="60" height="60" alt="Gling AI" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://diffusion.studio/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/diffusionstudio.png" width="60" height="60" alt="Diffusion Studio" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://kino.ai/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/kino.jpg" width="60" height="60" alt="Kino" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3&gt;Bronze sponsors&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.reactvideoeditor.com/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/rve.svg?sanitize=true" width="40" height="40" alt="React Video Editor" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 
 &lt;a href="https://www.mux.com/" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/Vanilagy/mediabunny/main/docs/public/sponsors/mux.jpg" width="40" height="40" alt="Mux" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/Vanilagy"&gt;Sponsor Mediabunny's development&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Core features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Wide format support&lt;/strong&gt;: Read and write MP4, MOV, WebM, MKV, WAVE, MP3, Ogg, ADTS&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Built-in encoding &amp;amp; decoding&lt;/strong&gt;: Supports 25+ video, audio, and subtitle codecs, hardware-accelerated using the WebCodecs API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High precision&lt;/strong&gt;: Fine-grained, microsecond-accurate reading and writing operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conversion API&lt;/strong&gt;: Easy-to-use API with features such as transmuxing, transcoding, resizing, rotation, cropping, resampling, trimming, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Streaming I/O&lt;/strong&gt;: Handle reading &amp;amp; writing files of any size with memory-efficient streaming&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tree-shakable&lt;/strong&gt;: Only bundle what you use (as small as 5 kB gzipped)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zero dependencies&lt;/strong&gt;: Implemented in highly performant TypeScript&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;: Works in browsers and Node.js&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev/guide/introduction#features"&gt;See full feature list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Install it via npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install mediabunny
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, include it directly with a script tag using one of the &lt;a href="https://github.com/Vanilagy/mediabunny/releases"&gt;builds&lt;/a&gt;. Doing so exposes a global &lt;code&gt;Mediabunny&lt;/code&gt; object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="mediabunny.cjs"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Requires any JavaScript environment that can run ECMAScript 2021 or later. Mediabunny is expected to be run in modern browsers. For types, TypeScript 5.7 or later is required.&lt;/p&gt; 
&lt;h3&gt;Read file metadata&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { Input, ALL_FORMATS, BlobSource } from 'mediabunny';

const input = new Input({
    source: new BlobSource(file), // Reading from disk
    formats: ALL_FORMATS,
});

const duration = await input.computeDuration(); // in seconds
const videoTrack = await input.getPrimaryVideoTrack();
const audioTrack = await input.getPrimaryAudioTrack();
const { displayWidth, displayHeight, rotation } = videoTrack;
const { sampleRate, numberOfChannels } = audioTrack;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Create new media files&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { Output, Mp4OutputFormat, BufferTarget, CanvasSource, QUALITY_HIGH } from 'mediabunny';

const output = new Output({
    format: new Mp4OutputFormat(),
    target: new BufferTarget(), // Writing to memory
});

// Add a video track backed by a canvas element
const videoSource = new CanvasSource(canvas, {
    codec: 'avc',
    bitrate: QUALITY_HIGH,
});
output.addVideoTrack(videoSource);

await output.start();
// Add frames...
await output.finalize();

const buffer = output.target.buffer; // Final MP4 file
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Convert files&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { Input, Output, Conversion, ALL_FORMATS, BlobSource, WebMOutputFormat } from 'mediabunny';

const input = new Input({
    source: new BlobSource(file),
    formats: ALL_FORMATS,
});

const output = new Output({
    format: new WebMOutputFormat(), // Convert to WebM
    target: new BufferTarget(),
});

const conversion = await Conversion.init({ input, output });
await conversion.execute();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev/guide/quick-start"&gt;See more code snippets&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit the &lt;a href="https://mediabunny.dev/guide/introduction"&gt;Docs&lt;/a&gt; for comprehensive guides, examples and API documentation.&lt;/p&gt; 
&lt;h2&gt;Sponsoring&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://mediabunny.dev/#sponsors"&gt;See all sponsors&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Mediabunny is an open-source project released under the &lt;a href="https://choosealicense.com/licenses/mpl-2.0/" target="_blank"&gt;MPL-2.0&lt;/a&gt; and is therefore free to use for any purpose, including closed-source commercial use. A permissive license is essential for a foundational library like this to truly thrive. That said, this project requires an immense amount of work and care to maintain and expand. This is made possible by the generous financial backing of the sponsors of this project.&lt;/p&gt; 
&lt;p&gt;If you have derived considerable value from this project, please consider &lt;a href="https://github.com/sponsors/Vanilagy"&gt;sponsoring it&lt;/a&gt; or providing a one-time donation. Thank you! 🩷&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://choosealicense.com/licenses/mpl-2.0/"&gt;Mozilla Public License 2.0&lt;/a&gt;. This is a very permissive weak copyleft license, not much different from the MIT License, allowing you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use Mediabunny for any purpose, commercial or non-commercial, without royalties&lt;/li&gt; 
 &lt;li&gt;Use Mediabunny in open- and closed-source projects&lt;/li&gt; 
 &lt;li&gt;Freely distribute projects built with Mediabunny&lt;/li&gt; 
 &lt;li&gt;Inspect and modify Mediabunny's source code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, you have the following obligation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you modify Mediabunny's licensed source code (e.g. in a fork) and then distribute it, you must publicly publish your modifications under the Mozilla Public License 2.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This ensures that library usage remains permissive for everybody, while any improvements to Mediabunny remain in the open, benefiting everyone.&lt;/p&gt; 
&lt;p&gt;You are not allowed to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remove the license and copyright headers from any Mediabunny source file&lt;/li&gt; 
 &lt;li&gt;Claim the "Mediabunny" trademark&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And finally, Mediabunny - like any other library - comes with no warranty of any kind and is not liable for any direct or indirect damages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is not legal advice. Refer to the full text of the &lt;a href="https://choosealicense.com/licenses/mpl-2.0/"&gt;Mozilla Public License 2.0&lt;/a&gt; for the binding license agreement.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Implementation &amp;amp; development&lt;/h2&gt; 
&lt;p&gt;Mediabunny is implemented from scratch in pure TypeScript with zero dependencies. At its core, the library is a collection of multiplexers and demultiplexers (one for every container format), which are then connected together via abstractions around the WebCodecs API. The logic is heavily pipelined and lazy, keeping performance high and memory usage low. If this stuff interests you, refer to the &lt;a href="https://mediabunny.dev/guide/introduction#technical-overview"&gt;Technical overview&lt;/a&gt; for more.&lt;/p&gt; 
&lt;p&gt;For development, clone this repository and install it using a modern version of Node.js and npm. The build system uses TypeScript, esbuild, API Extractor, Vite, and VitePress.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install # Install dependencies
npm run watch # Build bundles on watch mode

npm run build # Production build with type definitions

npm run check # Type checking
npm run lint # ESLint

npm run docs:generate # Generates API docs
npm run docs:dev # Start docs development server
npm run dev # Start examples development server

npm run docs:build # Build docs and examples
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>kamranahmedse/developer-roadmap</title>
      <link>https://github.com/kamranahmedse/developer-roadmap</link>
      <description>&lt;p&gt;Interactive roadmaps, guides and other educational content to help developers grow in their careers.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/"&gt;&lt;img src="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/public/img/brand.png" height="128" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;&lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt;&lt;/h2&gt; 
&lt;p align="center"&gt;Community driven roadmaps, articles and resources for developers&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;a href="https://roadmap.sh/roadmaps"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Roadmaps%20-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/best-practices"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Best%20Practices-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="best practices" /&gt; &lt;/a&gt; &lt;a href="https://roadmap.sh/questions"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-Questions-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="videos" /&gt; &lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCA0H2KIWgWTwpTFjSxp0now?sub_confirmation=1"&gt; &lt;img src="https://img.shields.io/badge/%E2%9C%A8-YouTube%20Channel-0a0a0a.svg?style=flat&amp;amp;colorA=0a0a0a" alt="roadmaps" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Roadmaps are now interactive, you can click the nodes to read more about the topics.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://roadmap.sh"&gt;View all Roadmaps&lt;/a&gt; &amp;nbsp;·&amp;nbsp; &lt;a href="https://roadmap.sh/best-practices"&gt;Best Practices&lt;/a&gt; &amp;nbsp;·&amp;nbsp; &lt;a href="https://roadmap.sh/questions"&gt;Questions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Here is the list of available roadmaps with more being actively worked upon.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at the &lt;a href="https://roadmap.sh/get-started"&gt;get started&lt;/a&gt; page that might help you pick up a path.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/frontend"&gt;Frontend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/frontend?r=frontend-beginner"&gt;Frontend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/backend"&gt;Backend Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/backend?r=backend-beginner"&gt;Backend Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devops"&gt;DevOps Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/devops?r=devops-beginner"&gt;DevOps Beginner Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/full-stack"&gt;Full Stack Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/git-github"&gt;Git and GitHub&lt;/a&gt; / &lt;a href="https://roadmap.sh/git-github?r=git-github-beginner"&gt;Git and GitHub Beginner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/api-design"&gt;API Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/computer-science"&gt;Computer Science Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/datastructures-and-algorithms"&gt;Data Structures and Algorithms Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-data-scientist"&gt;AI and Data Scientist Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-engineer"&gt;AI Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aws"&gt;AWS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cloudflare"&gt;Cloudflare Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/linux"&gt;Linux Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/terraform"&gt;Terraform Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-analyst"&gt;Data Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/bi-analyst"&gt;BI Analyst Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/data-engineer"&gt;Data Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/machine-learning"&gt;Machine Learning Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mlops"&gt;MLOps Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/product-manager"&gt;Product Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/engineering-manager"&gt;Engineering Manager Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/qa"&gt;QA Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/python"&gt;Python Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-architect"&gt;Software Architect Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/game-developer"&gt;Game Developer Roadmap&lt;/a&gt; / &lt;a href="https://roadmap.sh/server-side-game-developer"&gt;Server Side Game Developer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/software-design-architecture"&gt;Software Design and Architecture Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/javascript"&gt;JavaScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/typescript"&gt;TypeScript Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cpp"&gt;C++ Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react"&gt;React Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nextjs"&gt;Next.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/react-native"&gt;React Native Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/vue"&gt;Vue Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/angular"&gt;Angular Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/nodejs"&gt;Node.js Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/php"&gt;PHP Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/graphql"&gt;GraphQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/android"&gt;Android Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ios"&gt;iOS Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/flutter"&gt;Flutter Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/golang"&gt;Go Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/rust"&gt;Rust Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/java"&gt;Java Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kotlin"&gt;Kotlin Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/spring-boot"&gt;Spring Boot Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/design-system"&gt;Design System Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/postgresql-dba"&gt;PostgreSQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/sql"&gt;SQL Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/redis"&gt;Redis Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/blockchain"&gt;Blockchain Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/aspnet-core"&gt;ASP.NET Core Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/system-design"&gt;System Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/kubernetes"&gt;Kubernetes Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/cyber-security"&gt;Cyber Security Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/mongodb"&gt;MongoDB Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ux-design"&gt;UX Design Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/docker"&gt;Docker Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/prompt-engineering"&gt;Prompt Engineering Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/technical-writer"&gt;Technical Writer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/devrel"&gt;DevRel Engineer Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-red-teaming"&gt;AI Red Teaming Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/ai-agents"&gt;AI Agents Roadmap&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are also interactive best practices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/backend-performance"&gt;Backend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/frontend-performance"&gt;Frontend Performance Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/code-review"&gt;Code Review Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/api-security"&gt;API Security Best Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/best-practices/aws"&gt;AWS Best Practices&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;..and questions to help you test, rate and improve your knowledge&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/javascript"&gt;JavaScript Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/nodejs"&gt;Node.js Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/react"&gt;React Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/backend"&gt;Backend Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://roadmap.sh/questions/frontend"&gt;Frontend Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://i.imgur.com/waxVImv.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Share with the community&lt;/h2&gt; 
&lt;p&gt;Please consider sharing a post about &lt;a href="https://roadmap.sh"&gt;roadmap.sh&lt;/a&gt; and the value it provides. It really does help!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://reddit.com/submit?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-reddit-red?logo=reddit" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://news.ycombinator.com/submitlink?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-hacker%20news-orange?logo=ycombinator" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?url=https://roadmap.sh&amp;amp;text=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-twitter-03A9F4?logo=twitter" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.facebook.com/sharer/sharer.php?u=https://roadmap.sh"&gt;&lt;img src="https://img.shields.io/badge/share%20on-facebook-1976D2?logo=facebook" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/shareArticle?url=https://roadmap.sh&amp;amp;title=Interactive%20roadmaps,%20guides%20and%20other%20educational%20content%20for%20Developers"&gt;&lt;img src="https://img.shields.io/badge/share%20on-linkedin-3949AB?logo=linkedin" alt="GitHub Repo stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Clone the repository, install the dependencies and start the application&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:kamranahmedse/developer-roadmap.git
cd developer-roadmap
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: use the &lt;code&gt;depth&lt;/code&gt; parameter to reduce the clone size and speed up the clone.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth=1 https://github.com/kamranahmedse/developer-roadmap.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Have a look at &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/contributing.md"&gt;contribution docs&lt;/a&gt; for how to update any of the roadmaps&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add content to roadmaps&lt;/li&gt; 
 &lt;li&gt;Add new roadmaps&lt;/li&gt; 
 &lt;li&gt;Suggest changes to existing roadmaps&lt;/li&gt; 
 &lt;li&gt;Discuss ideas in issues&lt;/li&gt; 
 &lt;li&gt;Spread the word&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks to all contributors ❤&lt;/h2&gt; 
&lt;a href="https://github.com/kamranahmedse/developer-roadmap/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=kamranahmedse/developer-roadmap" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Have a look at the &lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/license"&gt;license file&lt;/a&gt; for details&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>freelensapp/freelens</title>
      <link>https://github.com/freelensapp/freelens</link>
      <description>&lt;p&gt;Free IDE for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Freelens&lt;/h1&gt; 
&lt;!-- markdownlint-disable MD013 --&gt; 
&lt;p&gt;&lt;a href="https://freelens.app"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%8F%A0-freelens.app-02a7a0" alt="Home" /&gt;&lt;/a&gt; &lt;a href="https://github.com/freelensapp/freelens"&gt;&lt;img src="https://img.shields.io/github/stars/freelensapp/freelens?style=flat&amp;amp;label=GitHub%20%E2%AD%90&amp;amp;logo=github" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/NjKZERK95Y"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=Discord&amp;amp;style=flat&amp;amp;query=approximate_member_count&amp;amp;url=https%3A%2F%2Fdiscordapp.com%2Fapi%2Finvites%2F%2FNjKZERK95Y%3Fwith_counts%3Dtrue&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/freelens/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/freelens?style=flat&amp;amp;label=r%2Ffreelens&amp;amp;logo=reddit" alt="Subreddit" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/freelensapp/freelens"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/freelens"&gt;&lt;img src="https://insights.linuxfoundation.org/api/badge/health-score?project=freelens" alt="LFX Health Score" /&gt;&lt;/a&gt; &lt;a href="https://github.com/freelensapp/freelens?tab=MIT-1-ov-file#readme"&gt;&lt;img src="https://img.shields.io/github/license/freelensapp/freelens.svg?sanitize=true" alt="license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/freelensapp/freelens/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/freelensapp/freelens?display_name=tag&amp;amp;sort=semver" alt="release" /&gt;&lt;/a&gt; &lt;a href="https://formulae.brew.sh/cask/freelens#default"&gt;&lt;img src="https://img.shields.io/homebrew/cask/v/freelens?label=homebrew" alt="Homebrew Cask Version" /&gt;&lt;/a&gt; &lt;a href="https://winstall.app/apps/Freelensapp.Freelens"&gt;&lt;img src="https://img.shields.io/winget/v/Freelensapp.Freelens" alt="WinGet Package Version" /&gt;&lt;/a&gt; &lt;a href="https://scoop.sh/#/apps?q=freelens&amp;amp;s=1&amp;amp;d=0"&gt;&lt;img src="https://img.shields.io/scoop/v/freelens?bucket=extras" alt="Scoop Package Version" /&gt;&lt;/a&gt; &lt;a href="https://flathub.org/apps/app.freelens.Freelens"&gt;&lt;img src="https://img.shields.io/flathub/v/app.freelens.Freelens" alt="Flathub Version" /&gt;&lt;/a&gt; &lt;a href="https://snapcraft.io/freelens"&gt;&lt;img src="https://img.shields.io/snapcraft/v/freelens/latest/stable" alt="Snap Store Version" /&gt;&lt;/a&gt; &lt;a href="https://aur.archlinux.org/packages/freelens-bin"&gt;&lt;img src="https://img.shields.io/aur/version/freelens-bin" alt="AUR Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@freelensapp/core"&gt;&lt;img src="https://img.shields.io/npm/v/%40freelensapp%2Fcore" alt="NPM Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/freelensapp/freelens/actions/workflows/unit-tests.yaml"&gt;&lt;img src="https://github.com/freelensapp/freelens/actions/workflows/unit-tests.yaml/badge.svg?branch=main" alt="Unit tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/freelensapp/freelens/actions/workflows/integration-tests.yaml"&gt;&lt;img src="https://github.com/freelensapp/freelens/actions/workflows/integration-tests.yaml/badge.svg?branch=main" alt="Integration tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/freelensapp/freelens/actions/workflows/trunk-check.yaml"&gt;&lt;img src="https://github.com/freelensapp/freelens/actions/workflows/trunk-check.yaml/badge.svg?branch=main" alt="Trunk Check" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- markdownlint-enable MD013 --&gt; 
&lt;p&gt;&lt;a href="https://freelens.app"&gt;Freelens&lt;/a&gt; is a free and open-source user interface designed for managing Kubernetes clusters. It provides a standalone application compatible with macOS, Windows, and Linux operating systems, making it accessible to a wide range of users. The application aims to simplify the complexities of Kubernetes management by offering an intuitive and user-friendly interface.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/freelensapp/freelens/main/freelens/build/screenshots/main.png" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/freelensapp/freelens/releases"&gt;releases&lt;/a&gt; page and download the right package for your system.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;macOS 11 or later is required.&lt;/p&gt; 
&lt;p&gt;Download either the PKG (installer) or DMG (image) package from the &lt;a href="https://github.com/freelensapp/freelens/releases"&gt;releases&lt;/a&gt; page. Both arm64 (M1 chip or newer) and amd64 (Intel) variants are available.&lt;/p&gt; 
&lt;p&gt;All binary packages are built on macOS 14 and should be compatible with newer systems.&lt;/p&gt; 
&lt;h4&gt;Homebrew&lt;/h4&gt; 
&lt;p&gt;Run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install --cask freelens
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;Linux with GNU C Library 2.34 or later is required. It is provided ie. by Debian 12, Fedora 35, Mint 21, openSUSE Leap 15.4, Ubuntu 22.04 and by rolling release distributions like Arch, Manjaro or Tumbleweed.&lt;/p&gt; 
&lt;p&gt;Download DEB or RPM (package) or AppImage (executable) from the &lt;a href="https://github.com/freelensapp/freelens/releases"&gt;releases&lt;/a&gt; page. Both arm64 (aarch64) and amd64 (x86_64) variants are available.&lt;/p&gt; 
&lt;p&gt;All binary packages are built on Ubuntu 22.04 and should be compatible with new systems.&lt;/p&gt; 
&lt;h4&gt;AppImage&lt;/h4&gt; 
&lt;p&gt;The Linux AppImage file requires libz.so and libfuse.so.2. You can add them by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo apt install libfuse2 zlib1g-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the application with additional arguments:&lt;/p&gt; 
&lt;!-- markdownlint-disable MD013 --&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./Freelens*.AppImage --no-sandbox --ozone-platform-hint=auto --enable-features=WebRTCPipeWireCapturer --enable-features=WaylandWindowDecorations --disable-gpu-compositing
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- markdownlint-enable MD013 --&gt; 
&lt;h4&gt;Flatpak&lt;/h4&gt; 
&lt;p&gt;The package is available on the &lt;a href="https://flathub.org/apps/app.freelens.Freelens"&gt;Flathub&lt;/a&gt; App Store for Linux.&lt;/p&gt; 
&lt;p&gt;Use GNOME Software application or run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;flatpak install flathub app.freelens.Freelens
flatpak run app.freelens.Freelens
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The application is sandboxed. It includes bundled &lt;code&gt;kubectl&lt;/code&gt; and &lt;code&gt;helm&lt;/code&gt; commands and uses the &lt;code&gt;~/.kube/config&lt;/code&gt; file by default.&lt;/p&gt; 
&lt;p&gt;Flatpak adds wrappers for the &lt;code&gt;aws&lt;/code&gt;, &lt;code&gt;doctl&lt;/code&gt;, &lt;code&gt;gke-gcloud-auth-plugin&lt;/code&gt;, and &lt;code&gt;kubelogin&lt;/code&gt; tools, running them as commands from the host system.&lt;/p&gt; 
&lt;p&gt;The terminal uses &lt;code&gt;/bin/sh&lt;/code&gt; by default, but it can be switched to, for example, &lt;code&gt;/bin/bash&lt;/code&gt; for a sandboxed environment or &lt;code&gt;/app/bin/host-spawn&lt;/code&gt; for a host environment.&lt;/p&gt; 
&lt;h4&gt;Snap&lt;/h4&gt; 
&lt;p&gt;The package is available on the &lt;a href="https://snapcraft.io/freelens"&gt;Snap&lt;/a&gt; Store for Linux.&lt;/p&gt; 
&lt;p&gt;Use App Center application or run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;snap install freelens --classic
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;APT repository&lt;/h4&gt; 
&lt;p&gt;Run the following commands:&lt;/p&gt; 
&lt;!-- markdownlint-disable MD013 --&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -L https://raw.githubusercontent.com/freelensapp/freelens/refs/heads/main/freelens/build/apt/freelens.asc | sudo tee /etc/apt/keyrings/freelens.asc
curl -L https://raw.githubusercontent.com/freelensapp/freelens/refs/heads/main/freelens/build/apt/freelens.sources | sudo tee /etc/apt/sources.list.d/freelens.sources
sudo apt update
sudo apt install freelens
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Arch User Repository&lt;/h4&gt; 
&lt;p&gt;The package is available on the &lt;a href="https://wiki.archlinux.org/title/Arch_User_Repository"&gt;Arch User Repository (AUR)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check the &lt;a href="https://aur.archlinux.org/packages/freelens-bin"&gt;freelens-bin&lt;/a&gt; package page.&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Windows 10 or later is required.&lt;/p&gt; 
&lt;p&gt;Download the EXE (NSIS) or MSI installers from the &lt;a href="https://github.com/freelensapp/freelens/releases"&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Both the x64 (amd64) and arm64 versions of the Windows binaries are provided. However, an EXE installer (NSIS) itself is x86 binary only even if it installs arm64 application and then installs to &lt;code&gt;C:\Program Files (x86)\Freelens&lt;/code&gt; path by default.&lt;/p&gt; 
&lt;p&gt;The version of the MSI package has the last 4th digit always &lt;code&gt;0&lt;/code&gt; and this is a limitation of this package format.&lt;/p&gt; 
&lt;h4&gt;WinGet&lt;/h4&gt; 
&lt;p&gt;The package is available in &lt;a href="https://winstall.app/apps/Freelensapp.Freelens"&gt;WinGet&lt;/a&gt; Community &lt;a href="https://github.com/microsoft/winget-pkgs"&gt;repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install Freelensapp.Freelens
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;--silent&lt;/code&gt; option is supported to suppress all UI.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;--scope user&lt;/code&gt; or &lt;code&gt;--scope machine&lt;/code&gt; option can be used to install it either to local user directory or to &lt;code&gt;C:\Program Files&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;WinGet installs the application from EXE installer (NSIS).&lt;/p&gt; 
&lt;h4&gt;Scoop&lt;/h4&gt; 
&lt;p&gt;The package is available in the &lt;a href="https://scoop.sh/#/apps?q=freelens&amp;amp;s=1&amp;amp;d=0"&gt;Scoop&lt;/a&gt; command-line installer for Windows.&lt;/p&gt; 
&lt;p&gt;Run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;scoop bucket add extras
scoop install freelens
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Scoop uses MSI package to install the application.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://github.com/freelensapp/freelens/wiki/Development"&gt;Development&lt;/a&gt; wiki page to see how to build the application from source.&lt;br /&gt; Check out the &lt;a href="https://freelensapp.github.io/docs/"&gt;Freelens Docs&lt;/a&gt; to contribute to development or create your own extension.&lt;/p&gt; 
&lt;h2&gt;Extensions&lt;/h2&gt; 
&lt;p&gt;Anyone can develop extensions for Freelens and many extensions previously used with Open Lens have already been converted.&lt;br /&gt; Visit &lt;a href="https://github.com/freelensapp/freelens/wiki/Extensions"&gt;Extensions&lt;/a&gt; wiki page to see them and write in the &lt;a href="https://github.com/freelensapp/freelens/discussions/117"&gt;appropriate discussion&lt;/a&gt; if you also want to propose yours.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Get updates about Freelens &amp;amp; keep in touch with our community&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://www.linkedin.com/company/freelensapp/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://github.com/freelensapp/freelens/discussions"&gt;Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat on &lt;a href="https://discord.gg/NjKZERK95Y"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discuss on &lt;a href="https://www.reddit.com/r/freelens/"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watch us on &lt;a href="https://www.youtube.com/@Freelensapp"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Read our &lt;a href="https://github.com/freelensapp/freelens/wiki"&gt;Wiki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Open an &lt;a href="https://github.com/freelensapp/freelens/issues"&gt;Issue&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Anyone is welcome to collaborate to advance the Freelens project. Read &lt;a href="https://raw.githubusercontent.com/freelensapp/freelens/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to see how you can help.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://api.star-history.com/svg?repos=freelensapp/freelens&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/p&gt; 
&lt;h2&gt;Expenses and Donations&lt;/h2&gt; 
&lt;p&gt;Anyone can support the Freelens project by making donations to cover maintenance costs and invest in its development.&lt;/p&gt; 
&lt;p&gt;For more information, see our dedicated page in our Wiki: &lt;a href="https://github.com/freelensapp/freelens/wiki/Expenses-and-Donations"&gt;Expenses and Donations&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Core Team&lt;/h2&gt; 
&lt;p&gt;Each member of the core team is focused on specific roles. You can contact us at any time according to them.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/in/bandiniroberto/"&gt;Roberto Bandini&lt;/a&gt; - &lt;a href="https://github.com/robertobandini"&gt;@robertobandini&lt;/a&gt; - Founder&lt;br /&gt; General organization management, relationships, product management, community, marketing, freelens-ai extension&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/in/piotr.roszatycki"&gt;Piotr Roszatycki&lt;/a&gt; - &lt;a href="https://github.com/dex4er"&gt;@dex4er&lt;/a&gt; - Maintainer&lt;br /&gt; Development direction, architecture and release management, flux-cd extension, freelens-ai extension&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/in/mario-offertucci-703113b6/"&gt;Mario Offertucci&lt;/a&gt; - &lt;a href="https://github.com/mariomamo"&gt;@mariomamo&lt;/a&gt; - Maintainer&lt;br /&gt; UI, Docs, freelens-ai extension development management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/in/leo-capuano/"&gt;Leopoldo Capuano&lt;/a&gt; - &lt;a href="https://github.com/leo-capvano"&gt;@leo-capvano&lt;/a&gt; - Maintainer&lt;br /&gt; GenAI solutions &amp;amp; freelens-ai extension development management&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The project is growing very quickly and everyone is welcome!&lt;/p&gt; 
&lt;p&gt;If you also want to be part of it, visit the wiki page: &lt;a href="https://github.com/freelensapp/freelens/wiki/We-want-you!"&gt;We want you!&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Or contact us at &lt;a href="mailto:freelens@freelens.app"&gt;freelens@freelens.app&lt;/a&gt; for any questions or suggestions!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is a fork of &lt;a href="https://github.com/lensapp/lens/tree/master"&gt;Open Lens&lt;/a&gt;, the core of &lt;a href="https://k8slens.dev"&gt;Lens Desktop&lt;/a&gt;, with the aim of carrying forward its open-source version.&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2024-2025 Freelens Authors.&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2022 OpenLens Authors.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TibixDev/winboat</title>
      <link>https://github.com/TibixDev/winboat</link>
      <description>&lt;p&gt;Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/winboat_logo.png" alt="WinBoat Logo" width="150" /&gt; &lt;/td&gt; 
    &lt;td&gt; &lt;h1 style="color: #7C86FF; margin: 0; font-size: 32px;"&gt;WinBoat&lt;/h1&gt; &lt;p style="color: oklch(90% 0 0); font-size: 14px; margin: 5px 0;"&gt;Windows for Penguins.&lt;br /&gt; Run Windows apps on 🐧 Linux with ✨ seamless integration&lt;/p&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_dash.png" alt="WinBoat Dashboard" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_apps.png" alt="WinBoat Apps" width="45%" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/TibixDev/winboat/main/gh-assets/features/feat_native.png" alt="Native Windows" width="45%" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;⚠️ Work in Progress ⚠️&lt;/h2&gt; 
&lt;p&gt;WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🎨 Elegant Interface&lt;/strong&gt;: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📦 Automated Installs&lt;/strong&gt;: Simple installation process through our interface - pick your preferences &amp;amp; specs and let us handle the rest&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Run Any App&lt;/strong&gt;: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🖥️ Full Windows Desktop&lt;/strong&gt;: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📁 Filesystem Integration&lt;/strong&gt;: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✨ And many more&lt;/strong&gt;: Smartcard passthrough, resource monitoring, and more features being added regularly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Does It Work?&lt;/h2&gt; 
&lt;p&gt;WinBoat is an Electron app which allows you to run Windows apps on Linux using a containerized approach. Windows runs as a VM inside a Docker container, we communicate with it using the &lt;a href="https://github.com/TibixDev/winboat/tree/main/guest_server"&gt;WinBoat Guest Server&lt;/a&gt; to retrieve data we need from Windows. For compositing applications as native OS-level windows, we use FreeRDP together with Windows's RemoteApp protocol.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;p&gt;Before running WinBoat, ensure your system meets the following requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;RAM&lt;/strong&gt;: At least 4 GB of RAM&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CPU&lt;/strong&gt;: At least 2 CPU threads&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Storage&lt;/strong&gt;: At least 32 GB free space in &lt;code&gt;/var&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Virtualization&lt;/strong&gt;: KVM enabled in BIOS/UEFI 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://duckduckgo.com/?t=h_&amp;amp;q=how+to+enable+virtualization+in+%3Cmotherboard+brand%3E+bios&amp;amp;ia=web"&gt;How to enable virtualization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Required for containerization 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;⚠️ NOTE:&lt;/strong&gt; Docker Desktop is &lt;strong&gt;not&lt;/strong&gt; supported, you will run into issues if you use it&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker Compose v2&lt;/strong&gt;: Required for compatibility with docker-compose.yml files 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/#plugin-linux-only"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Docker User Group&lt;/strong&gt;: Add your user to the &lt;code&gt;docker&lt;/code&gt; group 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/linux-postinstall/#manage-docker-as-a-non-root-user"&gt;Setup Instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;FreeRDP&lt;/strong&gt;: Required for remote desktop connection (Please make sure you have &lt;strong&gt;Version 3.x.x&lt;/strong&gt; with sound support included) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/FreeRDP/FreeRDP/wiki/PreBuilds"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kernel Modules&lt;/strong&gt;: &lt;code&gt;iptables&lt;/code&gt; and &lt;code&gt;iptable_nat&lt;/code&gt; modules must be loaded 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://rentry.org/rmfq2e5e"&gt;Module loading instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloading&lt;/h2&gt; 
&lt;p&gt;You can download the latest Linux builds under the &lt;a href="https://github.com/TibixDev/winboat/releases"&gt;Releases&lt;/a&gt; tab. We currently offer four variants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AppImage:&lt;/strong&gt; A popular &amp;amp; portable app format which should run fine on most distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Unpacked:&lt;/strong&gt; The raw unpacked files, simply run the executable (&lt;code&gt;linux-unpacked/winboat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.deb:&lt;/strong&gt; The intended format for Debian based distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;.rpm:&lt;/strong&gt; The intended format for Fedora based distributions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Known Issues About Container Runtimes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Podman is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Docker Desktop is &lt;strong&gt;unsupported&lt;/strong&gt; for now&lt;/li&gt; 
 &lt;li&gt;Distros that emulate Docker through a Podman socket are &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Any rootless containerization solution is currently &lt;strong&gt;unsupported&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building WinBoat&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;For building you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the app and the guest server using &lt;code&gt;npm run build:linux-gs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;You can now find the built app under &lt;code&gt;dist&lt;/code&gt; with an AppImage and an Unpacked variant&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running WinBoat in development mode&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you meet the &lt;a href="https://raw.githubusercontent.com/TibixDev/winboat/main/#prerequisites"&gt;prerequisites&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Additionally, for development you need to have NodeJS and Go installed on your system&lt;/li&gt; 
 &lt;li&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Build the guest server (&lt;code&gt;npm run build-guest-server&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Run the app (&lt;code&gt;npm run dev&lt;/code&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Whether it's bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let's keep things focused on making great software! 🚀&lt;/p&gt; 
&lt;p&gt;Feel free to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Report bugs and issues&lt;/li&gt; 
 &lt;li&gt;Submit feature requests&lt;/li&gt; 
 &lt;li&gt;Contribute code improvements&lt;/li&gt; 
 &lt;li&gt;Help with documentation&lt;/li&gt; 
 &lt;li&gt;Share feedback and suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Check out our issues page to get started, or feel free to open a new issue if you've found something that needs attention.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;WinBoat is licensed under the &lt;a href="https://github.com/TibixDev/winboat/raw/main/LICENSE"&gt;MIT&lt;/a&gt; license&lt;/p&gt; 
&lt;h2&gt;Inspiration / Alternatives&lt;/h2&gt; 
&lt;p&gt;These past few years some cool projects have surfaced with similar concepts, some of which we've also taken inspirations from.&lt;br /&gt; They're awesome and you should check them out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/winapps-org/winapps"&gt;WinApps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/casualsnek/cassowary"&gt;Cassowary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dockur/windows"&gt;dockur/windows&lt;/a&gt; (🌟 Also used in WinBoat)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Socials &amp;amp; Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Website&lt;/strong&gt;: &lt;a href="https://www.winboat.app/"&gt;winboat.app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🐦 &lt;strong&gt;Twitter/X&lt;/strong&gt;: &lt;a href="https://x.com/winboat_app"&gt;@winboat_app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🦋 &lt;strong&gt;Bluesky&lt;/strong&gt;: &lt;a href="http://bsky.app/profile/winboat.app"&gt;winboat.app&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🗨️ &lt;strong&gt;Discord&lt;/strong&gt;: &lt;a href="http://discord.gg/MEwmpWm4tN"&gt;Join our community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📧 &lt;strong&gt;Email&lt;/strong&gt;: &lt;a href="mailto:staff@winboat.app"&gt;staff@winboat.app&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>infiniflow/ragflow</title>
      <link>https://github.com/infiniflow/ragflow</link>
      <description>&lt;p&gt;RAGFlow is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://demo.ragflow.io/"&gt; &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow/main/web/src/assets/logo-with-text.png" width="520" alt="ragflow logo" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README.md"&gt;&lt;img alt="README in English" src="https://img.shields.io/badge/English-DBEDFA" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_zh.md"&gt;&lt;img alt="简体中文版自述文件" src="https://img.shields.io/badge/简体中文-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_tzh.md"&gt;&lt;img alt="繁體版中文自述文件" src="https://img.shields.io/badge/繁體中文-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ja.md"&gt;&lt;img alt="日本語のREADME" src="https://img.shields.io/badge/日本語-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_ko.md"&gt;&lt;img alt="한국어" src="https://img.shields.io/badge/한국어-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_id.md"&gt;&lt;img alt="Bahasa Indonesia" src="https://img.shields.io/badge/Bahasa Indonesia-DFE0E5" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/README_pt_br.md"&gt;&lt;img alt="Português(Brasil)" src="https://img.shields.io/badge/Português(Brasil)-DFE0E5" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://x.com/intent/follow?screen_name=infiniflowai" target="_blank"&gt; &lt;img src="https://img.shields.io/twitter/follow/infiniflow?logo=X&amp;amp;color=%20%23f5f5f5" alt="follow on X(Twitter)" /&gt; &lt;/a&gt; &lt;a href="https://demo.ragflow.io" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/Online-Demo-4e6b99" /&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/infiniflow/ragflow" target="_blank"&gt; &lt;img src="https://img.shields.io/docker/pulls/infiniflow/ragflow?label=Docker%20Pulls&amp;amp;color=0db7ed&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="docker pull infiniflow/ragflow:v0.20.5" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/releases/latest"&gt; &lt;img src="https://img.shields.io/github/v/release/infiniflow/ragflow?color=blue&amp;amp;label=Latest%20Release" alt="Latest Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/infiniflow/ragflow/raw/main/LICENSE"&gt; &lt;img height="21" src="https://img.shields.io/badge/License-Apache--2.0-ffffff?labelColor=d4eaf7&amp;amp;color=2e6cc4" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://deepwiki.com/infiniflow/ragflow"&gt; &lt;img alt="Ask DeepWiki" src="https://deepwiki.com/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://ragflow.io/docs/dev/"&gt;Document&lt;/a&gt; | &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt; | &lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt; | &lt;a href="https://demo.ragflow.io"&gt;Demo&lt;/a&gt; &lt;/h4&gt; 
&lt;h1&gt;&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/9064" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/9064" alt="infiniflow%2Fragflow | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;details open&gt; 
 &lt;summary&gt;&lt;b&gt;📕 Table of Contents&lt;/b&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;💡 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-what-is-ragflow"&gt;What is RAGFlow?&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🎮 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📌 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-latest-updates"&gt;Latest Updates&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🌟 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-key-features"&gt;Key Features&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔎 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-system-architecture"&gt;System Architecture&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🎬 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-get-started"&gt;Get Started&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-configurations"&gt;Configurations&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-without-embedding-models"&gt;Build a docker image without embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔧 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-build-a-docker-image-including-embedding-models"&gt;Build a docker image including embedding models&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🔨 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-launch-service-from-source-for-development"&gt;Launch service from source for development&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📚 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;📜 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🏄 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;🙌 &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/#-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;💡 What is RAGFlow?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ragflow.io/"&gt;RAGFlow&lt;/a&gt; is a leading open-source Retrieval-Augmented Generation (RAG) engine that fuses cutting-edge RAG with Agent capabilities to create a superior context layer for LLMs. It offers a streamlined RAG workflow adaptable to enterprises of any scale. Powered by a converged context engine and pre-built agent templates, RAGFlow enables developers to transform complex data into high-fidelity, production-ready AI systems with exceptional efficiency and precision.&lt;/p&gt; 
&lt;h2&gt;🎮 Demo&lt;/h2&gt; 
&lt;p&gt;Try our demo at &lt;a href="https://demo.ragflow.io"&gt;https://demo.ragflow.io&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/chunking.gif" width="1200" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/infiniflow/ragflow-docs/refs/heads/image/image/agentic-dark.gif" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🔥 Latest Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025-08-08 Supports OpenAI's latest GPT-5 series models.&lt;/li&gt; 
 &lt;li&gt;2025-08-04 Supports new models, including Kimi K2 and Grok 4.&lt;/li&gt; 
 &lt;li&gt;2025-08-01 Supports agentic workflow and MCP.&lt;/li&gt; 
 &lt;li&gt;2025-05-23 Adds a Python/JavaScript code executor component to Agent.&lt;/li&gt; 
 &lt;li&gt;2025-05-05 Supports cross-language query.&lt;/li&gt; 
 &lt;li&gt;2025-03-19 Supports using a multi-modal model to make sense of images within PDF or DOCX files.&lt;/li&gt; 
 &lt;li&gt;2025-02-28 Combined with Internet search (Tavily), supports reasoning like Deep Research for any LLMs.&lt;/li&gt; 
 &lt;li&gt;2024-12-18 Upgrades Document Layout Analysis model in DeepDoc.&lt;/li&gt; 
 &lt;li&gt;2024-08-22 Support text to SQL statements through RAG.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎉 Stay Tuned&lt;/h2&gt; 
&lt;p&gt;⭐️ Star our repository to stay up-to-date with exciting new features and improvements! Get instant notifications for new releases! 🌟&lt;/p&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/user-attachments/assets/18c9707e-b8aa-4caf-a154-037089c105ba" width="1200" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🌟 Key Features&lt;/h2&gt; 
&lt;h3&gt;🍭 &lt;strong&gt;"Quality in, quality out"&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/deepdoc/README.md"&gt;Deep document understanding&lt;/a&gt;-based knowledge extraction from unstructured data with complicated formats.&lt;/li&gt; 
 &lt;li&gt;Finds "needle in a data haystack" of literally unlimited tokens.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🍱 &lt;strong&gt;Template-based chunking&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Intelligent and explainable.&lt;/li&gt; 
 &lt;li&gt;Plenty of template options to choose from.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🌱 &lt;strong&gt;Grounded citations with reduced hallucinations&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visualization of text chunking to allow human intervention.&lt;/li&gt; 
 &lt;li&gt;Quick view of the key references and traceable citations to support grounded answers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🍔 &lt;strong&gt;Compatibility with heterogeneous data sources&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Word, slides, excel, txt, images, scanned copies, structured data, web pages, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛀 &lt;strong&gt;Automated and effortless RAG workflow&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Streamlined RAG orchestration catered to both personal and large businesses.&lt;/li&gt; 
 &lt;li&gt;Configurable LLMs as well as embedding models.&lt;/li&gt; 
 &lt;li&gt;Multiple recall paired with fused re-ranking.&lt;/li&gt; 
 &lt;li&gt;Intuitive APIs for seamless integration with business.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔎 System Architecture&lt;/h2&gt; 
&lt;div align="center" style="margin-top:20px;margin-bottom:20px;"&gt; 
 &lt;img src="https://github.com/infiniflow/ragflow/assets/12318111/d6ac5664-c237-4200-a7c2-a4a00691b485" width="1000" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;🎬 Get Started&lt;/h2&gt; 
&lt;h3&gt;📝 Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU &amp;gt;= 4 cores&lt;/li&gt; 
 &lt;li&gt;RAM &amp;gt;= 16 GB&lt;/li&gt; 
 &lt;li&gt;Disk &amp;gt;= 50 GB&lt;/li&gt; 
 &lt;li&gt;Docker &amp;gt;= 24.0.0 &amp;amp; Docker Compose &amp;gt;= v2.26.1&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gvisor.dev/docs/user_guide/install/"&gt;gVisor&lt;/a&gt;: Required only if you intend to use the code executor (sandbox) feature of RAGFlow.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you have not installed Docker on your local machine (Windows, Mac, or Linux), see &lt;a href="https://docs.docker.com/engine/install/"&gt;Install Docker Engine&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;🚀 Start up the server&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure &lt;code&gt;vm.max_map_count&lt;/code&gt; &amp;gt;= 262144:&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;To check the value of &lt;code&gt;vm.max_map_count&lt;/code&gt;:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;$ sysctl vm.max_map_count
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;Reset &lt;code&gt;vm.max_map_count&lt;/code&gt; to a value at least 262144 if it is not.&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;# In this case, we set it to 262144:
$ sudo sysctl -w vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
   &lt;p&gt;This change will be reset after a system reboot. To ensure your change remains permanent, add or update the &lt;code&gt;vm.max_map_count&lt;/code&gt; value in &lt;strong&gt;/etc/sysctl.conf&lt;/strong&gt; accordingly:&lt;/p&gt; 
   &lt;pre&gt;&lt;code class="language-bash"&gt;vm.max_map_count=262144
&lt;/code&gt;&lt;/pre&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repo:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone https://github.com/infiniflow/ragflow.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start up the server using the pre-built Docker images:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] All Docker images are built for x86 platforms. We don't currently offer Docker images for ARM64. If you are on an ARM64 platform, follow &lt;a href="https://ragflow.io/docs/dev/build_docker_image"&gt;this guide&lt;/a&gt; to build a Docker image compatible with your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The command below downloads the &lt;code&gt;v0.20.5-slim&lt;/code&gt; edition of the RAGFlow Docker image. See the following table for descriptions of different RAGFlow editions. To download a RAGFlow edition different from &lt;code&gt;v0.20.5-slim&lt;/code&gt;, update the &lt;code&gt;RAGFLOW_IMAGE&lt;/code&gt; variable accordingly in &lt;strong&gt;docker/.env&lt;/strong&gt; before using &lt;code&gt;docker compose&lt;/code&gt; to start the server. For example: set &lt;code&gt;RAGFLOW_IMAGE=infiniflow/ragflow:v0.20.5&lt;/code&gt; for the full edition &lt;code&gt;v0.20.5&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ cd ragflow/docker
# Use CPU for embedding and DeepDoc tasks:
$ docker compose -f docker-compose.yml up -d

# To use GPU to accelerate embedding and DeepDoc tasks:
# docker compose -f docker-compose-gpu.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;RAGFlow image tag&lt;/th&gt; 
   &lt;th&gt;Image size (GB)&lt;/th&gt; 
   &lt;th&gt;Has embedding models?&lt;/th&gt; 
   &lt;th&gt;Stable?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.20.5&lt;/td&gt; 
   &lt;td&gt;≈9&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;v0.20.5-slim&lt;/td&gt; 
   &lt;td&gt;≈2&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;Stable release&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nightly&lt;/td&gt; 
   &lt;td&gt;≈9&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nightly-slim&lt;/td&gt; 
   &lt;td&gt;≈2&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;Unstable&lt;/em&gt; nightly build&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt; &lt;p&gt;Check the server status after having the server up and running:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker logs -f ragflow-server
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;
      ____   ___    ______ ______ __
     / __ \ /   |  / ____// ____// /____  _      __
    / /_/ // /| | / / __ / /_   / // __ \| | /| / /
   / _, _// ___ |/ /_/ // __/  / // /_/ /| |/ |/ /
  /_/ |_|/_/  |_|\____//_/    /_/ \____/ |__/|__/

 * Running on all addresses (0.0.0.0)
&lt;/code&gt;&lt;/pre&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;If you skip this confirmation step and directly log in to RAGFlow, your browser may prompt a &lt;code&gt;network anormal&lt;/code&gt; error because, at that moment, your RAGFlow may not be fully initialized.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In your web browser, enter the IP address of your server and log in to RAGFlow.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;With the default settings, you only need to enter &lt;code&gt;http://IP_OF_YOUR_MACHINE&lt;/code&gt; (&lt;strong&gt;sans&lt;/strong&gt; port number) as the default HTTP serving port &lt;code&gt;80&lt;/code&gt; can be omitted when using the default configurations.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;, select the desired LLM factory in &lt;code&gt;user_default_llm&lt;/code&gt; and update the &lt;code&gt;API_KEY&lt;/code&gt; field with the corresponding API key.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;See &lt;a href="https://ragflow.io/docs/dev/llm_api_key_setup"&gt;llm_api_key_setup&lt;/a&gt; for more information.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;p&gt;&lt;em&gt;The show is on!&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🔧 Configurations&lt;/h2&gt; 
&lt;p&gt;When it comes to system configurations, you will need to manage the following files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/.env"&gt;.env&lt;/a&gt;: Keeps the fundamental setups for the system, such as &lt;code&gt;SVR_HTTP_PORT&lt;/code&gt;, &lt;code&gt;MYSQL_PASSWORD&lt;/code&gt;, and &lt;code&gt;MINIO_PASSWORD&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt;: Configures the back-end services. The environment variables in this file will be automatically populated when the Docker container starts. Any environment variables set within the Docker container will be available for use, allowing you to customize service behavior based on the deployment environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;: The system relies on &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; to start up.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/README.md"&gt;./docker/README&lt;/a&gt; file provides a detailed description of the environment settings and service configurations which can be used as &lt;code&gt;${ENV_VARS}&lt;/code&gt; in the &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/service_conf.yaml.template"&gt;service_conf.yaml.template&lt;/a&gt; file.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To update the default HTTP serving port (80), go to &lt;a href="https://raw.githubusercontent.com/infiniflow/ragflow/main/docker/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt; and change &lt;code&gt;80:80&lt;/code&gt; to &lt;code&gt;&amp;lt;YOUR_SERVING_PORT&amp;gt;:80&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Updates to the above configurations require a reboot of all containers to take effect:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Switch doc engine from Elasticsearch to Infinity&lt;/h3&gt; 
&lt;p&gt;RAGFlow uses Elasticsearch by default for storing full text and vectors. To switch to &lt;a href="https://github.com/infiniflow/infinity/"&gt;Infinity&lt;/a&gt;, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Stop all running containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker/docker-compose.yml down -v
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;code&gt;-v&lt;/code&gt; will delete the docker container volumes, and the existing data will be cleared.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Set &lt;code&gt;DOC_ENGINE&lt;/code&gt; in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;infinity&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Start the containers:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose -f docker-compose.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Switching to Infinity on a Linux/arm64 machine is not yet officially supported.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🔧 Build a Docker image without embedding models&lt;/h2&gt; 
&lt;p&gt;This image is approximately 2 GB in size and relies on external LLM and embedding services.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 --build-arg LIGHTEN=1 -f Dockerfile -t infiniflow/ragflow:nightly-slim .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔧 Build a Docker image including embedding models&lt;/h2&gt; 
&lt;p&gt;This image is approximately 9 GB in size. As it includes embedding models, it relies on external LLM services only.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
docker build --platform linux/amd64 -f Dockerfile -t infiniflow/ragflow:nightly .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🔨 Launch service from source for development&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;code&gt;uv&lt;/code&gt; and &lt;code&gt;pre-commit&lt;/code&gt;, or skip this step if they are already installed:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pipx install uv pre-commit
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the source code and install Python dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/infiniflow/ragflow.git
cd ragflow/
uv sync --python 3.10 --all-extras # install RAGFlow dependent python modules
uv run download_deps.py
pre-commit install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch the dependent services (MinIO, Elasticsearch, Redis, and MySQL) using Docker Compose:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose -f docker/docker-compose-base.yml up -d
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Add the following line to &lt;code&gt;/etc/hosts&lt;/code&gt; to resolve all hosts specified in &lt;strong&gt;docker/.env&lt;/strong&gt; to &lt;code&gt;127.0.0.1&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;127.0.0.1       es01 infinity mysql minio redis sandbox-executor-manager
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If you cannot access HuggingFace, set the &lt;code&gt;HF_ENDPOINT&lt;/code&gt; environment variable to use a mirror site:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;export HF_ENDPOINT=https://hf-mirror.com
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If your operating system does not have jemalloc, please install it as follows:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# ubuntu
sudo apt-get install libjemalloc-dev
# centos
sudo yum install jemalloc
# mac
sudo brew install jemalloc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch backend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;source .venv/bin/activate
export PYTHONPATH=$(pwd)
bash docker/launch_backend_service.sh
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install frontend dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd web
npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Launch frontend service:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;The following output confirms a successful launch of the system:&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/0daf462c-a24d-4496-a66f-92533534e187" alt="" /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Stop RAGFlow front-end and back-end service after development is complete:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pkill -f "ragflow_server.py|task_executor.py"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/"&gt;Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/configurations"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/release_notes"&gt;Release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/guides"&gt;User guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/developers"&gt;Developer guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/category/references"&gt;References&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ragflow.io/docs/dev/faq"&gt;FAQs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📜 Roadmap&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/infiniflow/ragflow/issues/4214"&gt;RAGFlow Roadmap 2025&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🏄 Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/NjYzJD3GM3"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/infiniflowai"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/infiniflow/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🙌 Contributing&lt;/h2&gt; 
&lt;p&gt;RAGFlow flourishes via open-source collaboration. In this spirit, we embrace diverse contributions from the community. If you would like to be a part, review our &lt;a href="https://ragflow.io/docs/dev/contributing"&gt;Contribution Guidelines&lt;/a&gt; first.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>recharts/recharts</title>
      <link>https://github.com/recharts/recharts</link>
      <description>&lt;p&gt;Redefined chart library built with React and D3&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Recharts&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://recharts.org/en-US/storybook"&gt;&lt;img src="https://raw.githubusercontent.com/storybooks/brand/master/badge/badge-storybook.svg?sanitize=true" alt="storybook" /&gt;&lt;/a&gt; &lt;a href="https://github.com/recharts/recharts/actions"&gt;&lt;img src="https://github.com/recharts/recharts/workflows/Node.js%20CI/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/recharts/recharts"&gt;&lt;img src="https://codecov.io/gh/recharts/recharts/graph/badge.svg?token=Bn6L2hrl8T" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="http://badge.fury.io/js/recharts"&gt;&lt;img src="https://badge.fury.io/js/recharts.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/recharts"&gt;&lt;img src="https://img.shields.io/npm/dm/recharts.svg?style=flat-square" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/recharts/recharts/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?style=flat" alt="MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Recharts is a &lt;strong&gt;Redefined&lt;/strong&gt; chart library built with &lt;a href="https://facebook.github.io/react/"&gt;React&lt;/a&gt; and &lt;a href="http://d3js.org"&gt;D3&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The main purpose of this library is to help you to write charts in React applications without any pain. Main principles of Recharts are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Simply&lt;/strong&gt; deploy with React components.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Native&lt;/strong&gt; SVG support, lightweight with minimal dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt; components.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Documentation at &lt;a href="https://recharts.org"&gt;recharts.org&lt;/a&gt; and our &lt;a href="https://recharts.org/en-US/storybook"&gt;storybook&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Also see &lt;a href="https://github.com/recharts/recharts/wiki"&gt;the wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All development is done on the &lt;code&gt;main&lt;/code&gt; branch. The current latest release and storybook documentation reflects what is on the &lt;code&gt;release&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;LineChart width={400} height={400} data={data}&amp;gt;
  &amp;lt;XAxis dataKey="name" /&amp;gt;
  &amp;lt;Tooltip /&amp;gt;
  &amp;lt;CartesianGrid stroke="#f5f5f5" /&amp;gt;
  &amp;lt;Line type="monotone" dataKey="uv" stroke="#ff7300" /&amp;gt;
  &amp;lt;Line type="monotone" dataKey="pv" stroke="#387908" /&amp;gt;
&amp;lt;/LineChart&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;All the components of Recharts are clearly separated. The LineChart is composed of x axis, tooltip, grid, and line items, and each of them is an independent React Component. The clear separation and composition of components is one of the principle Recharts follows.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;npm&lt;/h3&gt; 
&lt;p&gt;NPM is the easiest and fastest way to get started using Recharts. It is also the recommended installation method when building single-page applications (SPAs). It pairs nicely with a CommonJS module bundler such as Webpack.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# latest stable
$ npm install recharts react-is
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;react-is&lt;/code&gt; needs to match the version of your installed &lt;code&gt;react&lt;/code&gt; package.&lt;/p&gt; 
&lt;h3&gt;umd&lt;/h3&gt; 
&lt;p&gt;The UMD build is also available on unpkg.com:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="https://unpkg.com/react/umd/react.production.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://unpkg.com/react-dom/umd/react-dom.production.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://unpkg.com/react-is/umd/react-is.production.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="https://unpkg.com/recharts/umd/Recharts.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can find the library on &lt;code&gt;window.Recharts&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Recharts is open source. If you want to contribute to the project, please read the &lt;a href="https://raw.githubusercontent.com/recharts/recharts/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to understand how to contribute to the project and &lt;a href="https://raw.githubusercontent.com/recharts/recharts/main/DEVELOPING.md"&gt;DEVELOPING.md&lt;/a&gt; to set up your development environment.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.chromatic.com/"&gt;&lt;img src="https://user-images.githubusercontent.com/321738/84662277-e3db4f80-af1b-11ea-88f5-91d67a5e59f6.png" width="153" height="30" alt="Chromatic" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to &lt;a href="https://www.chromatic.com/"&gt;Chromatic&lt;/a&gt; for providing the visual testing platform that helps us review UI changes and catch visual regressions.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://jb.gg/OpenSourceSupport"&gt;&lt;img src="https://resources.jetbrains.com/storage/products/company/brand/logos/jetbrains.svg?sanitize=true" alt="JetBrains logo." /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Thanks to JetBrains for providing OSS development license for their IDEs.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="http://opensource.org/licenses/MIT"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2015-2024 Recharts Group.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CodebuffAI/codebuff</title>
      <link>https://github.com/CodebuffAI/codebuff</link>
      <description>&lt;p&gt;Generate code from the terminal!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Codebuff&lt;/h1&gt; 
&lt;p&gt;Codebuff is an &lt;strong&gt;open-source AI coding assistant&lt;/strong&gt; that edits your codebase through natural language instructions. Instead of using one model for everything, it coordinates specialized agents that work together to understand your project and make precise changes.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/assets/codebuff-vs-claude-code.png" alt="Codebuff vs Claude Code" width="400" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Codebuff beats Claude Code at 61% vs 53% on &lt;a href="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/evals/README.md"&gt;our evals&lt;/a&gt; across 175+ coding tasks over multiple open-source repos that simulate real-world tasks.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/assets/demo.gif" alt="Codebuff Demo" /&gt;&lt;/p&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;When you ask Codebuff to "add authentication to my API," it might invoke:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A &lt;strong&gt;File Explorer Agent&lt;/strong&gt; to scan your codebase to understand the architecture and find relevant files&lt;/li&gt; 
 &lt;li&gt;A &lt;strong&gt;Planner Agent&lt;/strong&gt; to plan which files need changes and in what order&lt;/li&gt; 
 &lt;li&gt;An &lt;strong&gt;Editor Agent&lt;/strong&gt; to make precise edits&lt;/li&gt; 
 &lt;li&gt;A &lt;strong&gt;Reviewer Agent&lt;/strong&gt; to validate changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/assets/multi-agents.png" alt="Codebuff Multi-Agents" width="250" /&gt; 
&lt;/div&gt; 
&lt;p&gt;This multi-agent approach gives you better context understanding, more accurate edits, and fewer errors compared to single-model tools.&lt;/p&gt; 
&lt;h2&gt;CLI: Install and start coding&lt;/h2&gt; 
&lt;p&gt;Install:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g codebuff
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd your-project
codebuff
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then just tell Codebuff what you want and it handles the rest:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;"Fix the SQL injection vulnerability in user registration"&lt;/li&gt; 
 &lt;li&gt;"Add rate limiting to all API endpoints"&lt;/li&gt; 
 &lt;li&gt;"Refactor the database connection code for better performance"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Codebuff will find the right files, makes changes across your codebase, and runs tests to make sure nothing breaks.&lt;/p&gt; 
&lt;h2&gt;Create custom agents&lt;/h2&gt; 
&lt;p&gt;To get started building your own agents, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;codebuff init-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can write agent definition files that give you maximum control over agent behavior.&lt;/p&gt; 
&lt;p&gt;Implement your workflows by specifying tools, which agents can be spawned, and prompts. We even have TypeScript generators for more programmatic control.&lt;/p&gt; 
&lt;p&gt;For example, here's a &lt;code&gt;git-committer&lt;/code&gt; agent that creates git commits based on the current git state. Notice that it runs &lt;code&gt;git diff&lt;/code&gt; and &lt;code&gt;git log&lt;/code&gt; to analyze changes, but then hands control over to the LLM to craft a meaningful commit message and perform the actual commit.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;export default {
  id: 'git-committer',
  displayName: 'Git Committer',
  model: 'openai/gpt-5-nano',
  toolNames: ['read_files', 'run_terminal_command', 'end_turn'],

  instructionsPrompt:
    'You create meaningful git commits by analyzing changes, reading relevant files for context, and crafting clear commit messages that explain the "why" behind changes.',

  async *handleSteps() {
    // Analyze what changed
    yield { tool: 'run_terminal_command', command: 'git diff' }
    yield { tool: 'run_terminal_command', command: 'git log --oneline -5' }

    // Stage files and create commit with good message
    yield 'STEP_ALL'
  },
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SDK: Run agents in production&lt;/h2&gt; 
&lt;p&gt;Install the &lt;a href="https://www.npmjs.com/package/@codebuff/sdk"&gt;SDK package&lt;/a&gt; -- note this is different than the CLI codebuff package.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @codebuff/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Import the client and run agents!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { CodebuffClient } from '@codebuff/sdk'

// 1. Initialize the client
const client = new CodebuffClient({
  apiKey: 'your-api-key',
  cwd: '/path/to/your/project',
  onError: (error) =&amp;gt; console.error('Codebuff error:', error.message),
})

// 2. Do a coding task...
const result = await client.run({
  agent: 'base', // Codebuff's base coding agent
  prompt: 'Add comprehensive error handling to all API endpoints',
  handleEvent: (event) =&amp;gt; {
    console.log('Progress', event)
  },
})

// 3. Or, run a custom agent!
const myCustomAgent: AgentDefinition = {
  id: 'greeter',
  displayName: 'Greeter',
  model: 'openai/gpt-5',
  instructionsPrompt: 'Say hello!',
}
await client.run({
  agent: 'greeter',
  agentDefinitions: [myCustomAgent],
  prompt: 'My name is Bob.',
  customToolDefinitions: [], // Add custom tools too!
  handleEvent: (event) =&amp;gt; {
    console.log('Progress', event)
  },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more about the SDK &lt;a href="https://www.npmjs.com/package/@codebuff/sdk"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Why choose Codebuff&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Deep customizability&lt;/strong&gt;: Create sophisticated agent workflows with TypeScript generators that mix AI generation with programmatic control. Define custom agents that spawn subagents, implement conditional logic, and orchestrate complex multi-step processes that adapt to your specific use cases.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Any model on OpenRouter&lt;/strong&gt;: Unlike Claude Code which locks you into Anthropic's models, Codebuff supports any model available on &lt;a href="https://openrouter.ai/models"&gt;OpenRouter&lt;/a&gt; - from Claude and GPT to specialized models like Qwen, DeepSeek, and others. Switch models for different tasks or use the latest releases without waiting for platform updates.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Reuse any published agent&lt;/strong&gt;: Compose existing &lt;a href="https://www.codebuff.com/agents"&gt;published agents&lt;/a&gt; to get a leg up. Codebuff agents are the new MCP!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fully customizable SDK&lt;/strong&gt;: Build Codebuff's capabilities directly into your applications with a complete TypeScript SDK. Create custom tools, integrate with your CI/CD pipeline, build AI-powered development environments, or embed intelligent coding assistance into your products.&lt;/p&gt; 
&lt;h2&gt;Contributing to Codebuff&lt;/h2&gt; 
&lt;p&gt;We ❤️ contributions from the community - whether you're fixing bugs, tweaking our agents, or improving documentation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Want to contribute?&lt;/strong&gt; Check out our &lt;a href="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Some ways you can help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 &lt;strong&gt;Fix bugs&lt;/strong&gt; or add features&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Create specialized agents&lt;/strong&gt; and publish them to the Agent Store&lt;/li&gt; 
 &lt;li&gt;📚 &lt;strong&gt;Improve documentation&lt;/strong&gt; or write tutorials&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;Share ideas&lt;/strong&gt; in our &lt;a href="https://github.com/CodebuffAI/codebuff/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;h3&gt;Install&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;CLI&lt;/strong&gt;: &lt;code&gt;npm install -g codebuff&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;SDK&lt;/strong&gt;: &lt;code&gt;npm install @codebuff/sdk&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Resources&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: &lt;a href="https://codebuff.com/docs"&gt;codebuff.com/docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Community&lt;/strong&gt;: &lt;a href="https://codebuff.com/discord"&gt;Discord&lt;/a&gt; - Join our friendly community&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Issues &amp;amp; Ideas&lt;/strong&gt;: &lt;a href="https://github.com/CodebuffAI/codebuff/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Contributing&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/CodebuffAI/codebuff/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; - Start here to contribute!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Support&lt;/strong&gt;: &lt;a href="mailto:support@codebuff.com"&gt;support@codebuff.com&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#CodebuffAI/codebuff&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=CodebuffAI/codebuff&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>n8n-io/n8n</title>
      <link>https://github.com/n8n-io/n8n</link>
      <description>&lt;p&gt;Fair-code workflow automation platform with native AI capabilities. Combine visual building with custom code, self-host or cloud, 400+ integrations.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/10284570/173569848-c624317f-42b1-45a6-ab09-f0ea3c247648.png" alt="Banner image" /&gt;&lt;/p&gt; 
&lt;h1&gt;n8n - Secure Workflow Automation for Technical Teams&lt;/h1&gt; 
&lt;p&gt;n8n is a workflow automation platform that gives technical teams the flexibility of code with the speed of no-code. With 400+ integrations, native AI capabilities, and a fair-code license, n8n lets you build powerful automations while maintaining full control over your data and deployments.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/n8n-io/n8n/master/assets/n8n-screenshot-readme.png" alt="n8n.io - Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Capabilities&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code When You Need It&lt;/strong&gt;: Write JavaScript/Python, add npm packages, or use the visual interface&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Native Platform&lt;/strong&gt;: Build AI agent workflows based on LangChain with your own data and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Self-host with our fair-code license or use our &lt;a href="https://app.n8n.cloud/login"&gt;cloud offering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enterprise-Ready&lt;/strong&gt;: Advanced permissions, SSO, and air-gapped deployments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Active Community&lt;/strong&gt;: 400+ integrations and 900+ ready-to-use &lt;a href="https://n8n.io/workflows"&gt;templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Try n8n instantly with &lt;a href="https://docs.n8n.io/hosting/installation/npm/"&gt;npx&lt;/a&gt; (requires &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or deploy with &lt;a href="https://docs.n8n.io/hosting/installation/docker/"&gt;Docker&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker volume create n8n_data
docker run -it --rm --name n8n -p 5678:5678 -v n8n_data:/home/node/.n8n docker.n8n.io/n8nio/n8n
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Access the editor at &lt;a href="http://localhost:5678"&gt;http://localhost:5678&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;a href="https://docs.n8n.io"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;a href="https://n8n.io/integrations"&gt;400+ Integrations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💡 &lt;a href="https://n8n.io/workflows"&gt;Example Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;a href="https://docs.n8n.io/langchain/"&gt;AI &amp;amp; LangChain Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👥 &lt;a href="https://community.n8n.io"&gt;Community Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://community.n8n.io/c/tutorials/28"&gt;Community Tutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Need help? Our community forum is the place to get support and connect with other users: &lt;a href="https://community.n8n.io"&gt;community.n8n.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;n8n is &lt;a href="https://faircode.io"&gt;fair-code&lt;/a&gt; distributed under the &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE.md"&gt;Sustainable Use License&lt;/a&gt; and &lt;a href="https://github.com/n8n-io/n8n/raw/master/LICENSE_EE.md"&gt;n8n Enterprise License&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Source Available&lt;/strong&gt;: Always visible source code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-Hostable&lt;/strong&gt;: Deploy anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Add your own nodes and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:license@n8n.io"&gt;Enterprise licenses&lt;/a&gt; available for additional features and support.&lt;/p&gt; 
&lt;p&gt;Additional information about the license model can be found in the &lt;a href="https://docs.n8n.io/reference/license/"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Found a bug 🐛 or have a feature idea ✨? Check our &lt;a href="https://github.com/n8n-io/n8n/raw/master/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Join the Team&lt;/h2&gt; 
&lt;p&gt;Want to shape the future of automation? Check out our &lt;a href="https://n8n.io/careers"&gt;job posts&lt;/a&gt; and join our team!&lt;/p&gt; 
&lt;h2&gt;What does n8n mean?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Short answer:&lt;/strong&gt; It means "nodemation" and is pronounced as n-eight-n.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Long answer:&lt;/strong&gt; "I get that question quite often (more often than I expected) so I decided it is probably best to answer it here. While looking for a good name for the project with a free domain I realized very quickly that all the good ones I could think of were already taken. So, in the end, I chose nodemation. 'node-' in the sense that it uses a Node-View and that it uses Node.js and '-mation' for 'automation' which is what the project is supposed to help with. However, I did not like how long the name was and I could not imagine writing something that long every time in the CLI. That is when I then ended up on 'n8n'." - &lt;strong&gt;Jan Oberhauser, Founder and CEO, n8n.io&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prisma/prisma</title>
      <link>https://github.com/prisma/prisma</link>
      <description>&lt;p&gt;Next-generation ORM for Node.js &amp; TypeScript | PostgreSQL, MySQL, MariaDB, SQL Server, SQLite, MongoDB and CockroachDB&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://i.imgur.com/h6UIYTu.png" alt="Prisma" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;Prisma&lt;/h1&gt; 
 &lt;a href="https://www.npmjs.com/package/prisma"&gt;&lt;img src="https://img.shields.io/npm/v/prisma.svg?style=flat" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/prisma/prisma/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202-blue" /&gt;&lt;/a&gt; 
 &lt;a href="https://pris.ly/discord"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/937751382725886062?label=Discord" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.prisma.io/docs/getting-started/quickstart"&gt;Quickstart&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://www.prisma.io/"&gt;Website&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://www.prisma.io/docs/"&gt;Docs&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://github.com/prisma/prisma-examples/"&gt;Examples&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://www.prisma.io/blog"&gt;Blog&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://pris.ly/discord?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme"&gt;Discord&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://pris.ly/x?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme"&gt;Twitter&lt;/a&gt; 
 &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; 
 &lt;a href="https://pris.ly/youtube?utm_source=github&amp;amp;utm_medium=prisma&amp;amp;utm_content=repo_readme"&gt;Youtube&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Prisma?&lt;/h2&gt; 
&lt;p&gt;Prisma ORM is a &lt;strong&gt;next-generation ORM&lt;/strong&gt; that consists of these tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client"&gt;&lt;strong&gt;Prisma Client&lt;/strong&gt;&lt;/a&gt;: Auto-generated and type-safe query builder for Node.js &amp;amp; TypeScript&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/concepts/components/prisma-migrate"&gt;&lt;strong&gt;Prisma Migrate&lt;/strong&gt;&lt;/a&gt;: Declarative data modeling &amp;amp; migration system&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prisma/studio"&gt;&lt;strong&gt;Prisma Studio&lt;/strong&gt;&lt;/a&gt;: GUI to view and edit data in your database&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Prisma Client can be used in &lt;em&gt;any&lt;/em&gt; Node.js or TypeScript backend application (including serverless applications and microservices). This can be a &lt;a href="https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/rest"&gt;REST API&lt;/a&gt;, a &lt;a href="https://www.prisma.io/docs/concepts/overview/prisma-in-your-stack/graphql"&gt;GraphQL API&lt;/a&gt;, a gRPC API, or anything else that needs a database.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you need a database to use with Prisma ORM, check out &lt;a href="https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres?utm_source=github&amp;amp;utm_medium=prisma-readme"&gt;Prisma Postgres&lt;/a&gt; or if you are looking for our MCP Server, head &lt;a href="https://github.com/prisma/mcp"&gt;here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Quickstart (5min)&lt;/h3&gt; 
&lt;p&gt;The fastest way to get started with Prisma is by following the quickstart guides. You can choose either of two databases:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/quickstart-prismaPostgres"&gt;Prisma Postgres&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/quickstart-sqlite"&gt;SQLite&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bring your own database&lt;/h3&gt; 
&lt;p&gt;If you already have your own database, you can follow these guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/setup-prisma/add-to-existing-project/relational-databases-typescript-postgresql"&gt;Add Prisma to an existing project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.prisma.io/docs/getting-started/setup-prisma/start-from-scratch/relational-databases-typescript-postgresql"&gt;Set up a new project with Prisma from scratch&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How Prisma ORM works&lt;/h2&gt; 
&lt;p&gt;This section provides a high-level overview of how Prisma ORM works and its most important technical components. For a more thorough introduction, visit the &lt;a href="https://www.prisma.io/docs/"&gt;Prisma documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;The Prisma schema&lt;/h3&gt; 
&lt;p&gt;Every project that uses a tool from the Prisma toolkit starts with a &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema"&gt;Prisma schema file&lt;/a&gt;. The Prisma schema allows developers to define their &lt;em&gt;application models&lt;/em&gt; in an intuitive data modeling language. It also contains the connection to a database and defines a &lt;em&gt;generator&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-prisma"&gt;// Data source
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generator
generator client {
  provider = "prisma-client-js"
}

// Data model
model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author    User?   @relation(fields:  [authorId], references: [id])
  authorId  Int?
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In this schema, you configure three things:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data source&lt;/strong&gt;: Specifies your database connection (via an environment variable)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generator&lt;/strong&gt;: Indicates that you want to generate Prisma Client&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data model&lt;/strong&gt;: Defines your application models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;The Prisma data model&lt;/h3&gt; 
&lt;p&gt;On this page, the focus is on the data model. You can learn more about &lt;a href="https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/data-sources"&gt;Data sources&lt;/a&gt; and &lt;a href="https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-schema/generators"&gt;Generators&lt;/a&gt; on the respective docs pages.&lt;/p&gt; 
&lt;h4&gt;Functions of Prisma models&lt;/h4&gt; 
&lt;p&gt;The data model is a collection of &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#defining-models"&gt;models&lt;/a&gt;. A model has two major functions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Represent a table in the underlying database&lt;/li&gt; 
 &lt;li&gt;Provide the foundation for the queries in the Prisma Client API&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Getting a data model&lt;/h4&gt; 
&lt;p&gt;There are two major workflows for "getting" a data model into your Prisma schema:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generate the data model from &lt;a href="https://www.prisma.io/docs/concepts/components/introspection"&gt;introspecting&lt;/a&gt; a database&lt;/li&gt; 
 &lt;li&gt;Manually writing the data model and mapping it to the database with &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-migrate"&gt;Prisma Migrate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Once the data model is defined, you can &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client"&gt;generate Prisma Client&lt;/a&gt; which will expose CRUD and more queries for the defined models. If you're using TypeScript, you'll get full type-safety for all queries (even when only retrieving the subsets of a model's fields).&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Accessing your database with Prisma Client&lt;/h3&gt; 
&lt;h4&gt;Generating Prisma Client&lt;/h4&gt; 
&lt;p&gt;The first step when using Prisma Client is installing its npm package:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install @prisma/client
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that the installation of this package invokes the &lt;code&gt;prisma generate&lt;/code&gt; command which reads your Prisma schema and &lt;em&gt;generates&lt;/em&gt; the Prisma Client code. The code will be located in &lt;code&gt;node_modules/.prisma/client&lt;/code&gt;, which is exported by &lt;code&gt;node_modules/@prisma/client/index.d.ts&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;After you change your data model, you'll need to manually re-generate Prisma Client to ensure the code inside &lt;code&gt;node_modules/.prisma/client&lt;/code&gt; gets updated:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx prisma generate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to the documentation for more information about &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client/generating-prisma-client"&gt;"generating the Prisma client"&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Using Prisma Client to send queries to your database&lt;/h4&gt; 
&lt;p&gt;Once the Prisma Client is generated, you can import it in your code and send queries to your database. This is what the setup code looks like.&lt;/p&gt; 
&lt;h5&gt;Import and instantiate Prisma Client&lt;/h5&gt; 
&lt;p&gt;You can import and instantiate Prisma Client as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can start sending queries via the generated Prisma Client API, here are a few sample queries. Note that all Prisma Client queries return &lt;em&gt;plain old JavaScript objects&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;Learn more about the available operations in the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client"&gt;Prisma Client docs&lt;/a&gt; or watch this &lt;a href="https://www.youtube.com/watch?v=LggrE5kJ75I&amp;amp;list=PLn2e1F9Rfr6k9PnR_figWOcSHgc_erDr5&amp;amp;index=4"&gt;demo video&lt;/a&gt; (2 min).&lt;/p&gt; 
&lt;h5&gt;Retrieve all &lt;code&gt;User&lt;/code&gt; records from the database&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const allUsers = await prisma.user.findMany()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Include the &lt;code&gt;posts&lt;/code&gt; relation on each returned &lt;code&gt;User&lt;/code&gt; object&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const allUsers = await prisma.user.findMany({
  include: { posts: true },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Filter all &lt;code&gt;Post&lt;/code&gt; records that contain &lt;code&gt;"prisma"&lt;/code&gt;&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const filteredPosts = await prisma.post.findMany({
  where: {
    OR: [{ title: { contains: 'prisma' } }, { content: { contains: 'prisma' } }],
  },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Create a new &lt;code&gt;User&lt;/code&gt; and a new &lt;code&gt;Post&lt;/code&gt; record in the same query&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const user = await prisma.user.create({
  data: {
    name: 'Alice',
    email: 'alice@prisma.io',
    posts: {
      create: { title: 'Join us for Prisma Day 2021' },
    },
  },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Update an existing &lt;code&gt;Post&lt;/code&gt; record&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const post = await prisma.post.update({
  where: { id: 42 },
  data: { published: true },
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Usage with TypeScript&lt;/h4&gt; 
&lt;p&gt;Note that when using TypeScript, the result of this query will be &lt;em&gt;statically typed&lt;/em&gt; so that you can't accidentally access a property that doesn't exist (and any typos are caught at compile-time). Learn more about leveraging Prisma Client's generated types on the &lt;a href="https://www.prisma.io/docs/concepts/components/prisma-client/advanced-usage-of-generated-types"&gt;Advanced usage of generated types&lt;/a&gt; page in the docs.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Prisma has a large and supportive &lt;a href="https://www.prisma.io/community"&gt;community&lt;/a&gt; of enthusiastic application developers. You can join us on &lt;a href="https://pris.ly/discord"&gt;Discord&lt;/a&gt; and here on &lt;a href="https://github.com/prisma/prisma/discussions"&gt;GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://prisma.io"&gt;&lt;img src="http://made-with.prisma.io/dark.svg?sanitize=true" alt="Made with Prisma" /&gt;&lt;/a&gt; &lt;a href="https://prisma.io"&gt;&lt;img src="http://made-with.prisma.io/indigo.svg?sanitize=true" alt="Made with Prisma" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Built something awesome with Prisma? 🌟 Show it off with these &lt;a href="https://github.com/prisma/presskit?tab=readme-ov-file#badges"&gt;badges&lt;/a&gt;, perfect for your readme or website.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Made with Prisma](http://made-with.prisma.io/dark.svg)](https://prisma.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;[![Made with Prisma](http://made-with.prisma.io/indigo.svg)](https://prisma.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you have a security issue to report, please contact us at &lt;a href="mailto:security@prisma.io?subject=%5BGitHub%5D%20Prisma%202%20Security%20Report%20"&gt;security@prisma.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;h3&gt;Ask a question about Prisma&lt;/h3&gt; 
&lt;p&gt;You can ask questions and initiate &lt;a href="https://github.com/prisma/prisma/discussions/"&gt;discussions&lt;/a&gt; about Prisma-related topics in the &lt;code&gt;prisma&lt;/code&gt; repository on GitHub.&lt;/p&gt; 
&lt;p&gt;👉 &lt;a href="https://github.com/prisma/prisma/discussions/new"&gt;&lt;strong&gt;Ask a question&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create a bug report for Prisma&lt;/h3&gt; 
&lt;p&gt;If you see an error message or run into an issue, please make sure to create a bug report! You can find &lt;a href="https://www.prisma.io/docs/guides/other/troubleshooting-orm/creating-bug-reports"&gt;best practices for creating bug reports&lt;/a&gt; (like including additional debugging output) in the docs.&lt;/p&gt; 
&lt;p&gt;👉 &lt;a href="https://pris.ly/prisma-prisma-bug-report"&gt;&lt;strong&gt;Create bug report&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Submit a feature request&lt;/h3&gt; 
&lt;p&gt;If Prisma currently doesn't have a certain feature, be sure to check out the &lt;a href="https://www.prisma.io/docs/more/roadmap"&gt;roadmap&lt;/a&gt; to see if this is already planned for the future.&lt;/p&gt; 
&lt;p&gt;If the feature on the roadmap is linked to a GitHub issue, please make sure to leave a 👍 reaction on the issue and ideally a comment with your thoughts about the feature!&lt;/p&gt; 
&lt;p&gt;👉 &lt;a href="https://github.com/prisma/prisma/issues/new?assignees=&amp;amp;labels=&amp;amp;template=feature_request.md&amp;amp;title="&gt;&lt;strong&gt;Submit feature request&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Refer to our &lt;a href="https://github.com/prisma/prisma/raw/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; and &lt;a href="https://github.com/prisma/prisma/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct for contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tests Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prisma Tests Status: &lt;a href="https://github.com/prisma/prisma/actions/workflows/test.yml?query=branch%3Amain"&gt;&lt;img src="https://github.com/prisma/prisma/workflows/CI/badge.svg?sanitize=true" alt="Prisma Tests Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ecosystem Tests Status: &lt;a href="https://github.com/prisma/ecosystem-tests/actions/workflows/test.yaml?query=branch%3Adev"&gt;&lt;img src="https://github.com/prisma/ecosystem-tests/workflows/test/badge.svg?sanitize=true" alt="Ecosystem Tests Status" /&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>ruvnet/claude-flow</title>
      <link>https://github.com/ruvnet/claude-flow</link>
      <description>&lt;p&gt;🌊 The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌊 Claude-Flow v2.0.0 Alpha: AI Orchestration Platform&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;amp;logo=github&amp;amp;color=gold" alt="🌟 Star on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=blue&amp;amp;label=Downloads" alt="📈 Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/v/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=green&amp;amp;label=v2.0.0" alt="📦 Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Claude%20Code-Optimized-green?style=for-the-badge&amp;amp;logo=anthropic" alt="⚡ Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;amp;logo=openai" alt="🏛️ Agentics Foundation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Hive--Mind-AI%20Coordination-purple?style=for-the-badge&amp;amp;logo=swarm" alt="🐝 Hive-Mind" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Neural-87%20MCP%20Tools-blue?style=for-the-badge&amp;amp;logo=pytorch" alt="🧠 Neural" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;amp;logo=opensourceinitiative" alt="🛡️ MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌟 &lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Claude-Flow v2 Alpha&lt;/strong&gt; is an enterprise-grade AI orchestration platform that reimagines how developers build with AI. By combining &lt;strong&gt;hive-mind swarm intelligence&lt;/strong&gt;, &lt;strong&gt;neural pattern recognition&lt;/strong&gt;, and &lt;strong&gt;87 advanced MCP tools&lt;/strong&gt;, Claude-Flow enables unprecedented AI-powered development workflows.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🐝 Hive-Mind Intelligence&lt;/strong&gt;: Queen-led AI coordination with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Neural Networks&lt;/strong&gt;: 27+ cognitive models with WASM SIMD acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 87 MCP Tools&lt;/strong&gt;: Comprehensive toolkit for swarm orchestration, memory, and automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Dynamic Agent Architecture (DAA)&lt;/strong&gt;: Self-organizing agents with fault tolerance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 SQLite Memory System&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🪝 Advanced Hooks System&lt;/strong&gt;: Automated workflows with pre/post operation hooks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 GitHub Integration&lt;/strong&gt;: 6 specialized modes for repository management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Flow Nexus Cloud Platform&lt;/strong&gt;: E2B sandboxes, AI swarms, challenges, and marketplace integration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔥 &lt;strong&gt;Revolutionary AI Coordination&lt;/strong&gt;: Build faster, smarter, and more efficiently with AI-powered development orchestration&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🌐 &lt;strong&gt;Flow Nexus Cloud Platform&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;: Claude-Flow v2.0.0 now includes &lt;strong&gt;Flow Nexus integration&lt;/strong&gt; - a cloud-powered AI development platform featuring:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;E2B Sandboxes&lt;/strong&gt;: Secure isolated environments for Node.js, Python, React, Next.js&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Swarms&lt;/strong&gt;: Deploy multi-agent systems in cloud infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural Training&lt;/strong&gt;: Distributed machine learning with custom model deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Challenges &amp;amp; Marketplace&lt;/strong&gt;: Coding challenges with rUv credit rewards and template marketplace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Automation&lt;/strong&gt;: Event-driven automation with message queue processing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;Complete documentation&lt;/strong&gt;: Visit &lt;a href="https://flow-nexus.ruv.io"&gt;flow-nexus.ruv.io&lt;/a&gt; for comprehensive guides, tutorials, and API reference. Also see issue # &lt;a href="https://github.com/ruvnet/claude-flow/issues/732"&gt;https://github.com/ruvnet/claude-flow/issues/732&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;⚡ &lt;strong&gt;Try v2.0.0 Alpha in 4 Commands&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;📋 &lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js 18+&lt;/strong&gt; (LTS recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm 9+&lt;/strong&gt; or equivalent package manager&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows users&lt;/strong&gt;: See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows Installation Guide&lt;/a&gt; for special instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;IMPORTANT&lt;/strong&gt;: Claude Code must be installed first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
# Only use if you understand the security implications
claude --dangerously-skip-permissions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;💡 &lt;strong&gt;Windows Note&lt;/strong&gt;: If you encounter SQLite errors, Claude Flow will automatically use in-memory storage. For persistent storage options, see our &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Instant Alpha Testing&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Claude Flow with enhanced MCP setup (auto-configures permissions!)
npx claude-flow@alpha init --force

# 2. Explore all revolutionary capabilities  
npx claude-flow@alpha --help

# 3a. Quick AI coordination (recommended for most tasks)
npx claude-flow@alpha swarm "build me a REST API" --claude

# 3b. OR launch the full hive-mind system (for complex projects)
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn "build enterprise system" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Quick Start with Flow Nexus&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Flow Nexus only (minimal setup)
npx claude-flow init --flow-nexus

# 2. Register and login (use MCP tools in Claude Code)
mcp__flow-nexus__user_register({ email: "your@email.com", password: "secure" })
mcp__flow-nexus__user_login({ email: "your@email.com", password: "secure" })

# 3. Deploy your first cloud swarm
mcp__flow-nexus__swarm_init({ topology: "mesh", maxAgents: 5 })
mcp__flow-nexus__sandbox_create({ template: "node", name: "api-dev" })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🤔 &lt;strong&gt;Swarm vs Hive-Mind: Which to Use?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;swarm&lt;/code&gt; Command&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;hive-mind&lt;/code&gt; Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Best For&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quick tasks, single objectives&lt;/td&gt; 
   &lt;td&gt;Complex projects, persistent sessions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Instant - no configuration needed&lt;/td&gt; 
   &lt;td&gt;Interactive wizard setup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Session&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary coordination&lt;/td&gt; 
   &lt;td&gt;Persistent with resume capability&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Task-scoped&lt;/td&gt; 
   &lt;td&gt;Project-wide with SQLite storage&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-spawned for task&lt;/td&gt; 
   &lt;td&gt;Manual control with specializations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Use When&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;"Build X", "Fix Y", "Analyze Z"&lt;/td&gt; 
   &lt;td&gt;Multi-feature projects, team coordination&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Quick Rule:&lt;/strong&gt; Start with &lt;code&gt;swarm&lt;/code&gt; for most tasks. Use &lt;code&gt;hive-mind&lt;/code&gt; when you need persistent sessions or complex multi-agent coordination.&lt;/p&gt; 
&lt;h2&gt;🎯 &lt;strong&gt;Typical Workflows - Your "Happy Path" Guide&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;New to Claude-Flow? Start Here!&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Confused about &lt;code&gt;.hive-mind&lt;/code&gt; and &lt;code&gt;.swarm&lt;/code&gt; directories? Not sure when to create new hives? Here are the most common workflow patterns:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;🚀 Pattern 1: Single Feature Development&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize once per feature/task
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn "Implement user authentication" --claude

# Continue working on SAME feature (reuse existing hive)
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query "authentication" --recent
npx claude-flow@alpha swarm "Add password reset functionality" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🏗️ Pattern 2: Multi-Feature Project&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Project-level initialization (once per project)
npx claude-flow@alpha init --force --project-name "my-app"

# Feature 1: Authentication (new hive)
npx claude-flow@alpha hive-mind spawn "auth-system" --namespace auth --claude

# Feature 2: User management (separate hive)  
npx claude-flow@alpha hive-mind spawn "user-management" --namespace users --claude

# Resume Feature 1 later (use session ID from spawn output)
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🔍 Pattern 3: Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start research session
npx claude-flow@alpha hive-mind spawn "Research microservices patterns" --agents researcher,analyst --claude

# Continue research in SAME session
npx claude-flow@alpha memory stats  # See what's been learned
npx claude-flow@alpha swarm "Deep dive into API gateway patterns" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🤔 When Should I Create a New Hive?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Situation&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Same objective/feature&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Continue existing hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind resume &amp;lt;session-id&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;New feature in same project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create new hive with namespace&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "new-feature" --namespace feature-name&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completely different project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;New directory + init&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mkdir new-project &amp;amp;&amp;amp; cd new-project &amp;amp;&amp;amp; npx claude-flow@alpha init&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Experimenting/testing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "experiment" --temp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;📁 Understanding "Empty" Directories&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Don't panic if directories seem empty!&lt;/strong&gt; Claude-Flow uses SQLite databases that may not show files in directory listings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check what's actually stored (even if directories look empty)
npx claude-flow@alpha memory stats        # See memory data
npx claude-flow@alpha memory list         # List all namespaces  
npx claude-flow@alpha hive-mind status    # See active hives

# Your project structure after initialization:
# .hive-mind/     &amp;lt;- Contains config.json + SQLite session data
# .swarm/         &amp;lt;- Contains memory.db (SQLite database)
# memory/         &amp;lt;- Agent-specific memories (created when agents spawn)
# coordination/   &amp;lt;- Active workflow files (created during tasks)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Continuing Previous Work&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# See what you were working on
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query --recent --limit 5

# List all sessions to find the one you want
npx claude-flow@alpha hive-mind sessions

# Resume specific session by ID
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🪝 &lt;strong&gt;Advanced Hooks System&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Automated Workflow Enhancement&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces a powerful hooks system that automates coordination and enhances every operation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Hooks automatically trigger on operations
npx claude-flow@alpha init --force  # Auto-configures MCP servers &amp;amp; hooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Available Hooks&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;Pre-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-task&lt;/code&gt;&lt;/strong&gt;: Auto-assigns agents based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-search&lt;/code&gt;&lt;/strong&gt;: Caches searches for improved performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-edit&lt;/code&gt;&lt;/strong&gt;: Validates files and prepares resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-command&lt;/code&gt;&lt;/strong&gt;: Security validation before execution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Post-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-edit&lt;/code&gt;&lt;/strong&gt;: Auto-formats code using language-specific tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-task&lt;/code&gt;&lt;/strong&gt;: Trains neural patterns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-command&lt;/code&gt;&lt;/strong&gt;: Updates memory with operation context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/strong&gt;: Real-time progress updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Session Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-start&lt;/code&gt;&lt;/strong&gt;: Restores previous context automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-end&lt;/code&gt;&lt;/strong&gt;: Generates summaries and persists state&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-restore&lt;/code&gt;&lt;/strong&gt;: Loads memory from previous sessions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// .claude/settings.json (auto-configured)
{
  "hooks": {
    "preEditHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "pre-edit", "--file", "${file}", "--auto-assign-agents", "true"],
      "alwaysRun": false
    },
    "postEditHook": {
      "command": "npx", 
      "args": ["claude-flow", "hooks", "post-edit", "--file", "${file}", "--format", "true"],
      "alwaysRun": true
    },
    "sessionEndHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "session-end", "--generate-summary", "true"],
      "alwaysRun": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Using Hooks in Claude Code&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Hooks integrate seamlessly with Claude Code's workflow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Triggering&lt;/strong&gt;: Hooks fire automatically during Claude Code operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Awareness&lt;/strong&gt;: Each hook receives relevant context (file paths, commands, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Non-Blocking&lt;/strong&gt;: Hooks run asynchronously to maintain performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable&lt;/strong&gt;: Enable/disable specific hooks as needed&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Manual hook execution
npx claude-flow hooks pre-task --description "Build REST API" --auto-spawn-agents

# Post-edit with formatting
npx claude-flow hooks post-edit --file "src/api.js" --format --train-neural

# Session management
npx claude-flow hooks session-end --generate-summary --persist-state
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Fixing Hook Variable Interpolation&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;If you're experiencing issues with &lt;code&gt;${file}&lt;/code&gt; or &lt;code&gt;${command}&lt;/code&gt; variables not working in your hooks (common with Claude Code 1.0.51+), use the &lt;code&gt;fix-hook-variables&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Fix all found settings.json files
npx claude-flow@alpha fix-hook-variables

# Fix specific file
npx claude-flow@alpha fix-hook-variables .claude/settings.json

# Create test configuration
npx claude-flow@alpha fix-hook-variables --test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command automatically transforms legacy variable syntax to working environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;${file}&lt;/code&gt; → &lt;code&gt;$CLAUDE_EDITED_FILE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${command}&lt;/code&gt; → &lt;code&gt;$CLAUDE_COMMAND&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;${tool}&lt;/code&gt; → &lt;code&gt;$CLAUDE_TOOL&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐝 &lt;strong&gt;Revolutionary Hive-Mind Intelligence&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Queen-Led AI Coordination&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces groundbreaking hive-mind architecture where a &lt;strong&gt;Queen AI&lt;/strong&gt; coordinates specialized worker agents in perfect harmony.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy intelligent swarm coordination
npx claude-flow@alpha swarm "Build a full-stack application" --strategy development

# Launch hive-mind with specific specializations
npx claude-flow@alpha hive-mind spawn "Create microservices architecture" --agents 8 --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🤖 Intelligent Agent Types&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;👑 Queen Agent&lt;/strong&gt;: Master coordinator and decision maker&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🏗️ Architect Agents&lt;/strong&gt;: System design and technical architecture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💻 Coder Agents&lt;/strong&gt;: Implementation and development&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧪 Tester Agents&lt;/strong&gt;: Quality assurance and validation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 Analyst Agents&lt;/strong&gt;: Data analysis and insights&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Researcher Agents&lt;/strong&gt;: Information gathering and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Security Agents&lt;/strong&gt;: Security auditing and compliance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 DevOps Agents&lt;/strong&gt;: Deployment and infrastructure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⚡ &lt;strong&gt;87 Advanced MCP Tools&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🧠 Neural &amp;amp; Cognitive Tools&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Neural pattern recognition and training
npx claude-flow@alpha neural train --pattern coordination --epochs 50
npx claude-flow@alpha neural predict --model cognitive-analysis
npx claude-flow@alpha cognitive analyze --behavior "development workflow"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;💾 SQLite Memory Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Cross-session memory management with SQLite persistence
npx claude-flow@alpha memory store "project-context" "Full-stack app requirements"
npx claude-flow@alpha memory query "authentication" --namespace sparc
npx claude-flow@alpha memory stats  # Shows 12 specialized tables
npx claude-flow@alpha memory export backup.json --namespace default
npx claude-flow@alpha memory import project-memory.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🪟 &lt;strong&gt;Windows Users&lt;/strong&gt;: SQLite will automatically fallback to in-memory storage if native modules fail. All features work normally, but data won't persist between sessions. See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt; for persistent storage options.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Workflow Orchestration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced workflow automation
npx claude-flow@alpha workflow create --name "CI/CD Pipeline" --parallel
npx claude-flow@alpha batch process --items "test,build,deploy" --concurrent
npx claude-flow@alpha pipeline create --config advanced-deployment.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🧠 &lt;strong&gt;Neural Network Capabilities&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Cognitive Computing Engine&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Powered by 27+ neural models optimized with WASM SIMD acceleration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Train coordination patterns
npx claude-flow@alpha neural train --pattern coordination --data "workflow.json"

# Real-time predictions
npx claude-flow@alpha neural predict --model task-optimizer --input "current-state.json"

# Analyze cognitive behavior
npx claude-flow@alpha cognitive analyze --behavior "development-patterns"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Neural Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Recognition&lt;/strong&gt;: Learns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive Learning&lt;/strong&gt;: Improves performance over time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transfer Learning&lt;/strong&gt;: Apply knowledge across domains&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Compression&lt;/strong&gt;: Efficient storage and execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ensemble Models&lt;/strong&gt;: Combine multiple neural networks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explainable AI&lt;/strong&gt;: Understand decision-making process&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 &lt;strong&gt;DAA MCP Endpoints&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Dynamic Agent Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Complete programmatic control over agent lifecycle and coordination:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create specialized agents
npx claude-flow@alpha daa agent-create --type "specialized-researcher" \
  --capabilities "[\"deep-analysis\", \"pattern-recognition\"]" \
  --resources "{\"memory\": 2048, \"compute\": \"high\"}"

# Match capabilities to tasks
npx claude-flow@alpha daa capability-match \
  --task-requirements "[\"security-analysis\", \"performance-optimization\"]"

# Manage agent lifecycle
npx claude-flow@alpha daa lifecycle-manage --agentId "agent-123" --action "scale-up"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;DAA Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Resource Allocation&lt;/strong&gt;: Dynamic CPU/memory management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inter-Agent Communication&lt;/strong&gt;: Message passing and coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consensus Mechanisms&lt;/strong&gt;: Democratic decision making&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fault Tolerance&lt;/strong&gt;: Self-healing with automatic recovery&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Optimization&lt;/strong&gt;: Real-time bottleneck resolution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;MCP Tool Categories&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;🐝 Swarm Orchestration&lt;/strong&gt; (15 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;swarm_init&lt;/code&gt;, &lt;code&gt;agent_spawn&lt;/code&gt;, &lt;code&gt;task_orchestrate&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;swarm_monitor&lt;/code&gt;, &lt;code&gt;topology_optimize&lt;/code&gt;, &lt;code&gt;load_balance&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;coordination_sync&lt;/code&gt;, &lt;code&gt;swarm_scale&lt;/code&gt;, &lt;code&gt;swarm_destroy&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🧠 Neural &amp;amp; Cognitive&lt;/strong&gt; (12 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;neural_train&lt;/code&gt;, &lt;code&gt;neural_predict&lt;/code&gt;, &lt;code&gt;pattern_recognize&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cognitive_analyze&lt;/code&gt;, &lt;code&gt;learning_adapt&lt;/code&gt;, &lt;code&gt;neural_compress&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ensemble_create&lt;/code&gt;, &lt;code&gt;transfer_learn&lt;/code&gt;, &lt;code&gt;neural_explain&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;💾 Memory Management&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;memory_usage&lt;/code&gt;, &lt;code&gt;memory_search&lt;/code&gt;, &lt;code&gt;memory_persist&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_namespace&lt;/code&gt;, &lt;code&gt;memory_backup&lt;/code&gt;, &lt;code&gt;memory_restore&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;memory_compress&lt;/code&gt;, &lt;code&gt;memory_sync&lt;/code&gt;, &lt;code&gt;memory_analytics&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Backend&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;📊 Performance &amp;amp; Monitoring&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;performance_report&lt;/code&gt;, &lt;code&gt;bottleneck_analyze&lt;/code&gt;, &lt;code&gt;token_usage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;benchmark_run&lt;/code&gt;, &lt;code&gt;metrics_collect&lt;/code&gt;, &lt;code&gt;trend_analysis&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;health_check&lt;/code&gt;, &lt;code&gt;diagnostic_run&lt;/code&gt;, &lt;code&gt;usage_stats&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🔄 Workflow Automation&lt;/strong&gt; (10 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;workflow_create&lt;/code&gt;, &lt;code&gt;workflow_execute&lt;/code&gt;, &lt;code&gt;workflow_export&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;automation_setup&lt;/code&gt;, &lt;code&gt;pipeline_create&lt;/code&gt;, &lt;code&gt;scheduler_manage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;trigger_setup&lt;/code&gt;, &lt;code&gt;batch_process&lt;/code&gt;, &lt;code&gt;parallel_execute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;📦 GitHub Integration&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;github_repo_analyze&lt;/code&gt;, &lt;code&gt;github_pr_manage&lt;/code&gt;, &lt;code&gt;github_issue_track&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;github_release_coord&lt;/code&gt;, &lt;code&gt;github_workflow_auto&lt;/code&gt;, &lt;code&gt;github_code_review&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🤖 Dynamic Agents&lt;/strong&gt; (6 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;daa_agent_create&lt;/code&gt;, &lt;code&gt;daa_capability_match&lt;/code&gt;, &lt;code&gt;daa_resource_alloc&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;daa_lifecycle_manage&lt;/code&gt;, &lt;code&gt;daa_communication&lt;/code&gt;, &lt;code&gt;daa_consensus&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;🛡️ System &amp;amp; Security&lt;/strong&gt; (8 tools)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;security_scan&lt;/code&gt;, &lt;code&gt;backup_create&lt;/code&gt;, &lt;code&gt;restore_system&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;config_manage&lt;/code&gt;, &lt;code&gt;features_detect&lt;/code&gt;, &lt;code&gt;log_analysis&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;📊 GitHub Integration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# GitHub workflow orchestration and coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security
npx claude-flow@alpha github pr-manager review --multi-reviewer --ai-powered
npx claude-flow@alpha github release-manager coord --version 2.0.0 --auto-changelog
npx claude-flow@alpha github repo-architect optimize --structure-analysis
npx claude-flow@alpha github issue-tracker manage --project-coordination
npx claude-flow@alpha github sync-coordinator align --multi-package
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛡️ &lt;strong&gt;Seamless Claude Code Integration&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Auto-MCP Server Setup&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;v2.0.0 Alpha automatically configures MCP servers for seamless Claude Code integration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic MCP integration (happens during init)
✅ claude-flow MCP server configured
✅ ruv-swarm MCP server configured  
✅ 87 tools available in Claude Code
✅ --dangerously-skip-permissions set as default
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Enhanced SPARC Workflows&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Advanced SPARC development with neural enhancement
npx claude-flow@alpha sparc mode --type "neural-tdd" --auto-learn
npx claude-flow@alpha sparc workflow --phases "all" --ai-guided --memory-enhanced
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧠 &lt;strong&gt;Cognitive Computing Features&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🎯 Neural Pattern Recognition&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;27+ Cognitive Models&lt;/strong&gt;: Adaptive learning from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pattern Analysis&lt;/strong&gt;: Real-time behavior analysis and optimization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Decision Tracking&lt;/strong&gt;: Complete audit trail of AI decisions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Learning&lt;/strong&gt;: Continuous improvement from past executions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Self-Healing Systems&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automatic error recovery and optimization
npx claude-flow@alpha health check --components all --auto-heal
npx claude-flow@alpha fault tolerance --strategy retry-with-learning
npx claude-flow@alpha bottleneck analyze --auto-optimize
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;💾 Advanced Memory Architecture&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SQLite Persistence&lt;/strong&gt;: Robust &lt;code&gt;.swarm/memory.db&lt;/code&gt; storage with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-Session Persistence&lt;/strong&gt;: Remember context across Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespace Management&lt;/strong&gt;: Organized memory with hierarchical access&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Schema&lt;/strong&gt;: Agent interactions, training data, performance metrics, and more&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory Compression&lt;/strong&gt;: Efficient storage of large coordination contexts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Distributed Sync&lt;/strong&gt;: Share memory across multiple AI instances&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📊 &lt;strong&gt;Performance Metrics&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🏆 Industry-Leading Results&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 84.8% SWE-Bench Solve Rate&lt;/strong&gt;: Superior problem-solving through hive-mind coordination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 32.3% Token Reduction&lt;/strong&gt;: Efficient task breakdown reduces costs significantly&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 2.8-4.4x Speed Improvement&lt;/strong&gt;: Parallel coordination maximizes throughput&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ 87 MCP Tools&lt;/strong&gt;: Most comprehensive AI tool suite available&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ Zero-Config Setup&lt;/strong&gt;: Automatic MCP integration with Claude Code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;🚀 Available Capabilities&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check memory system performance
npx claude-flow@alpha memory stats
npx claude-flow@alpha memory list

# Test GitHub coordination modes
npx claude-flow@alpha github gh-coordinator --help
npx claude-flow@alpha github pr-manager --help

# Workflow orchestration
npx claude-flow@alpha workflow create --name "Development Pipeline" --parallel
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎮 &lt;strong&gt;Advanced Usage Examples&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🏗️ Full-Stack Development&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy complete development swarm
npx claude-flow@alpha hive-mind spawn "Build e-commerce platform with React, Node.js, and PostgreSQL" \
  --agents 10 \
  --strategy parallel \
  --memory-namespace ecommerce

# Monitor progress in real-time
npx claude-flow@alpha swarm monitor --dashboard --real-time
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔬 Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Deploy research swarm with neural enhancement
npx claude-flow@alpha swarm "Research AI safety in autonomous systems" \
  --strategy research \
  --neural-patterns enabled \
  --memory-compression high

# Analyze results with cognitive computing
npx claude-flow@alpha cognitive analyze --target research-results
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🛡️ Security &amp;amp; Compliance&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Automated security analysis with AI coordination
npx claude-flow@alpha github gh-coordinator analyze --analysis-type security --target ./src
npx claude-flow@alpha github repo-architect optimize --security-focused --compliance SOC2
npx claude-flow@alpha hive-mind spawn "security audit and compliance review" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏗️ &lt;strong&gt;Alpha Architecture Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🐝 Hive-Mind Coordination Layer&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;┌─────────────────────────────────────────────────────────┐
│                    👑 Queen Agent                       │
│              (Master Coordinator)                      │
├─────────────────────────────────────────────────────────┤
│  🏗️ Architect │ 💻 Coder │ 🧪 Tester │ 🔍 Research │ 🛡️ Security │
│      Agent    │   Agent  │   Agent   │    Agent    │    Agent    │
├─────────────────────────────────────────────────────────┤
│           🧠 Neural Pattern Recognition Layer           │
├─────────────────────────────────────────────────────────┤
│              💾 Distributed Memory System               │
├─────────────────────────────────────────────────────────┤
│            ⚡ 87 MCP Tools Integration Layer            │
├─────────────────────────────────────────────────────────┤
│              🛡️ Claude Code Integration                 │
└─────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Coordination Strategies&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hierarchical&lt;/strong&gt;: Queen-led with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mesh&lt;/strong&gt;: Peer-to-peer coordination for complex tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hybrid&lt;/strong&gt;: Dynamic strategy selection based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural-Enhanced&lt;/strong&gt;: AI-optimized coordination patterns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠️ &lt;strong&gt;Alpha Installation &amp;amp; Setup&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;🚀 Quick Alpha Installation&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Global installation (recommended for testing)
npm install -g claude-flow@alpha

# Or use NPX for instant testing
npx claude-flow@alpha init --force

# Verify installation
claude-flow --version  # Should show 2.0.0-alpha.53
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔧 Enhanced Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize with full alpha features
npx claude-flow@alpha init --force --hive-mind --neural-enhanced

# Configure Claude Code integration
npx claude-flow@alpha mcp setup --auto-permissions --87-tools

# Test hive-mind coordination
npx claude-flow@alpha hive-mind test --agents 5 --coordination-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📋 &lt;strong&gt;Alpha Command Reference&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;For complete command documentation, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha --help          # Main help
npx claude-flow@alpha help &amp;lt;command&amp;gt;  # Detailed command help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key Commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Hive-Mind&lt;/strong&gt;: &lt;code&gt;hive-mind wizard&lt;/code&gt;, &lt;code&gt;hive-mind spawn&lt;/code&gt;, &lt;code&gt;hive-mind status&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural&lt;/strong&gt;: &lt;code&gt;neural train&lt;/code&gt;, &lt;code&gt;neural predict&lt;/code&gt;, &lt;code&gt;cognitive analyze&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: &lt;code&gt;memory store&lt;/code&gt;, &lt;code&gt;memory query&lt;/code&gt;, &lt;code&gt;memory stats&lt;/code&gt;, &lt;code&gt;memory export/import&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;code&gt;github &amp;lt;mode&amp;gt;&lt;/code&gt; (6 specialized modes available)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflows&lt;/strong&gt;: &lt;code&gt;workflow create&lt;/code&gt;, &lt;code&gt;batch process&lt;/code&gt;, &lt;code&gt;pipeline create&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 &lt;strong&gt;Additional Documentation&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;Core Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/API.md"&gt;Complete API Reference&lt;/a&gt; - Comprehensive API documentation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/CLI.md"&gt;CLI Commands Guide&lt;/a&gt; - All command-line options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/ARCHITECTURE.md"&gt;Architecture Overview&lt;/a&gt; - System design and internals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/examples/"&gt;Examples Directory&lt;/a&gt; - Code examples and demos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;New Features (v2.0.0)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/GIT_CHECKPOINT_HOOKS.md"&gt;🔒 Git Checkpoint System&lt;/a&gt; - Automatic Git checkpoints for Claude Code sessions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/REAL_PERFORMANCE_TRACKING.md"&gt;📊 Real Performance Tracking&lt;/a&gt; - Actual metrics collection and analysis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/windows-installation.md"&gt;🪟 Windows Installation&lt;/a&gt; - Special instructions for Windows users&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Integration Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/mcp-setup.md"&gt;MCP Server Setup&lt;/a&gt; - Model Context Protocol configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/claude-code-integration.md"&gt;Claude Code Integration&lt;/a&gt; - Enhanced AI workflows&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/docs/github-workflows.md"&gt;GitHub Workflows&lt;/a&gt; - Repository automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📄 &lt;strong&gt;License&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/ruvnet/claude-flow/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Alpha Disclaimer&lt;/strong&gt;: This is an alpha release intended for testing and feedback. Use in production environments is not recommended.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎉 &lt;strong&gt;Alpha Credits&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Hive-Mind Architecture&lt;/strong&gt;: Inspired by natural swarm intelligence&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Neural Computing&lt;/strong&gt;: Advanced AI coordination patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🛡️ Claude Code Integration&lt;/strong&gt;: Seamless AI development workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🚀 Performance Optimization&lt;/strong&gt;: 2.8-4.4x speed improvements through parallel coordination&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;&lt;strong&gt;🚀 Ready to experience the future of AI development?&lt;/strong&gt;&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx claude-flow@alpha init --force
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Join the alpha testing revolution!&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow/tree/claude-flow-v2.0.0"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Alpha%20Branch-blue?style=for-the-badge&amp;amp;logo=github" alt="GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow/v/alpha"&gt;&lt;img src="https://img.shields.io/badge/NPM-Alpha%20Release-orange?style=for-the-badge&amp;amp;logo=npm" alt="NPM Alpha" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Discord-Agentics%20Community-purple?style=for-the-badge&amp;amp;logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h2&gt;Star History&lt;/h2&gt; 
 &lt;a href="https://www.star-history.com/#ruvnet/claude-flow&amp;amp;Date"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
   &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;p&gt;&lt;strong&gt;Built with ❤️ by &lt;a href="https://github.com/ruvnet"&gt;rUv&lt;/a&gt; | Powered by Revolutionary AI&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;v2.0.0 Alpha - The Future of AI Orchestration&lt;/em&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>firebase/genkit</title>
      <link>https://github.com/firebase/genkit</link>
      <description>&lt;p&gt;Open-source framework for building AI-powered apps in JavaScript, Go, and Python, built and used in production by Google&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo-dark.png#gh-dark-mode-only" alt="Genkit logo" title="Genkit" /&gt; &lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/genkit-logo.png#gh-light-mode-only" alt="Genkit logo" title="Genkit" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://genkit.dev"&gt;Genkit&lt;/a&gt; is an open-source framework for building full-stack AI-powered applications, built and used in production by Google's Firebase. It provides SDKs for multiple programming languages with varying levels of stability:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;JavaScript/TypeScript&lt;/strong&gt;: Production-ready with full feature support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Go&lt;/strong&gt;: Production-ready with full feature support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Python (Alpha)&lt;/strong&gt;: Early development with core functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It offers a unified interface for integrating AI models from providers like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/openai"&gt;OpenAI&lt;/a&gt;, &lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt;Anthropic&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/ollama/"&gt;Ollama&lt;/a&gt;, and more. Rapidly build and deploy production-ready chatbots, automations, and recommendation systems using streamlined APIs for multimodal content, structured outputs, tool calling, and agentic workflows.&lt;/p&gt; 
&lt;p&gt;Get started with just a few lines of code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { genkit } from 'genkit';
import { googleAI } from '@genkit-ai/google-genai';

const ai = genkit({ plugins: [googleAI()] });

const { text } = await ai.generate({
    model: googleAI.model('gemini-2.5-flash'),
    prompt: 'Why is Firebase awesome?'
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Explore &amp;amp; build with Genkit&lt;/h2&gt; 
&lt;p&gt;Play with AI sample apps, with visualizations of the Genkit code that powers them, at no cost to you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://examples.genkit.dev"&gt;Explore Genkit by Example&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key capabilities&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Broad AI model support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Use a unified interface to integrate with hundreds of models from providers like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/openai"&gt; OpenAI&lt;/a&gt;, &lt;a href="https://thefireco.github.io/genkit-plugins/docs/plugins/genkitx-anthropic"&gt; Anthropic&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/plugins/ollama"&gt;Ollama&lt;/a&gt;, and more. Explore, compare, and use the best models for your needs.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Simplified AI development&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Use streamlined APIs to build AI features with &lt;a href="https://genkit.dev/docs/models#structured-output"&gt; structured output&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/tool-calling"&gt;agentic tool calling&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/rag"&gt;context-aware generation&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/models#multimodal"&gt;multi-modal input/output&lt;/a&gt;, and more. Genkit handles the complexity of AI development, so you can build and iterate faster.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Web and mobile ready&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Integrate seamlessly with frameworks and platforms including Next.js, React, Angular, iOS, Android, using purpose-built &lt;a href="https://genkit.dev/docs/firebase"&gt;client SDKs&lt;/a&gt; and helpers.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Cross-language support&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Build with the language that best fits your project. Genkit provides SDKs for JavaScript/TypeScript, Go, and Python (Alpha) with consistent APIs and capabilities across all supported languages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Deploy anywhere&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Deploy AI logic to any environment that supports your chosen programming language, such as &lt;a href="https://genkit.dev/docs/firebase"&gt;Cloud Functions for Firebase&lt;/a&gt;, &lt;a href="https://genkit.dev/docs/cloud-run"&gt;Google Cloud Run&lt;/a&gt;, or &lt;a href="https://genkit.dev/docs/deploy-node"&gt;third-party platforms&lt;/a&gt;, with or without Google services.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Developer tools&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Accelerate AI development with a purpose-built, local &lt;a href="https://genkit.dev/docs/devtools"&gt;CLI and Developer UI&lt;/a&gt;. Test prompts and flows against individual inputs or datasets, compare outputs from different models, debug with detailed execution traces, and use immediate visual feedback to iterate rapidly on prompts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Production monitoring&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ship AI features with confidence using comprehensive production monitoring. Track model performance, and request volumes, latency, and error rates in a &lt;a href="https://genkit.dev/docs/observability/getting-started"&gt; purpose-built dashboard&lt;/a&gt;. Identify issues quickly with detailed observability metrics, and ensure your AI features meet quality and performance targets in real-world usage.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;Genkit simplifies AI integration with an open-source SDK and unified APIs that work across various model providers and programming languages. It abstracts away complexity so you can focus on delivering great user experiences.&lt;/p&gt; 
&lt;p&gt;Some key features offered by Genkit include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/models"&gt;Text and image generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/models#structured-output"&gt;Type-safe, structured data generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/tool-calling"&gt;Tool calling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/dotprompt"&gt;Prompt templating&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/chat"&gt;Persisted chat interfaces&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/flows"&gt;AI workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/rag"&gt;AI-powered data retrieval (RAG)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Genkit is designed for server-side deployment in multiple language environments, and also provides seamless client-side integration through dedicated helpers and &lt;a href="https://genkit.dev/docs/firebase"&gt;client SDKs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Implementation path&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;1&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Choose your language and model provider&lt;/td&gt; 
   &lt;td&gt;Select the Genkit SDK for your preferred language (JavaScript/TypeScript, Go, or Python (Alpha)). Choose a model provider like &lt;a href="https://genkit.dev/docs/plugins/google-genai"&gt;Google Gemini&lt;/a&gt; or Anthropic, and get an API key. Some providers, like &lt;a href="https://genkit.dev/docs/plugins/vertex-ai"&gt;Vertex AI&lt;/a&gt;, may rely on a different means of authentication.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;2&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Install the SDK and initialize&lt;/td&gt; 
   &lt;td&gt;Install the Genkit SDK, model-provider package of your choice, and the Genkit CLI. Import the Genkit and provider packages and initialize Genkit with the provider API key.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;3&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Write and test AI features&lt;/td&gt; 
   &lt;td&gt;Use the Genkit SDK to build AI features for your use case, from basic text generation to complex multi-step workflows and agents. Use the CLI and Developer UI to help you rapidly test and iterate.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;span&gt;4&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;Deploy and monitor&lt;/td&gt; 
   &lt;td&gt;Deploy your AI features to Firebase, Google Cloud Run, or any environment that supports your chosen programming language. Integrate them into your app, and monitor them in production in the Firebase console.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/docs/get-started"&gt;JavaScript/TypeScript quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/go/docs/get-started-go"&gt;Go quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://genkit.dev/python/docs/get-started/"&gt;Python quickstart&lt;/a&gt; (Alpha)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development tools&lt;/h2&gt; 
&lt;p&gt;Genkit provides a CLI and a local UI to streamline your AI development workflow.&lt;/p&gt; 
&lt;h3&gt;CLI&lt;/h3&gt; 
&lt;p&gt;The Genkit CLI includes commands for running and evaluating your Genkit functions (flows) and collecting telemetry and logs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Install:&lt;/strong&gt; &lt;code&gt;npm install -g genkit-cli&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run a command, wrapped with telemetry, a interactive developer UI, etc:&lt;/strong&gt; &lt;code&gt;genkit start -- &amp;lt;command to run your code&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Developer UI&lt;/h3&gt; 
&lt;p&gt;The Genkit developer UI is a local interface for testing, debugging, and iterating on your AI application.&lt;/p&gt; 
&lt;p&gt;Key features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Run:&lt;/strong&gt; Execute and experiment with Genkit flows, prompts, queries, and more in dedicated playgrounds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inspect:&lt;/strong&gt; Analyze detailed traces of past executions, including step-by-step breakdowns of complex flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evaluate:&lt;/strong&gt; Review the results of evaluations run against your flows, including performance metrics and links to relevant traces.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/firebase/genkit/main/docs/resources/readme-ui-traces-screenshot.png" width="700" alt="Screenshot of Genkit Developer UI showing traces" /&gt; 
&lt;h2&gt;Try Genkit in Firebase Studio&lt;/h2&gt; 
&lt;p&gt;Want to skip the local setup? Click below to try out Genkit using &lt;a href="https://firebase.studio"&gt;Firebase Studio&lt;/a&gt;, Google's AI-assisted workspace for full-stack app development in the cloud.&lt;/p&gt; 
&lt;a href="https://studio.firebase.google.com/new/genkit"&gt; &lt;img height="32" alt="Open in Firebase Studio" src="https://cdn.firebasestudio.dev/btn/open_bright_32.svg?sanitize=true" /&gt; &lt;/a&gt; 
&lt;h2&gt;Connect with us&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/qXt5zzQKpc"&gt;&lt;strong&gt;Join us on Discord&lt;/strong&gt;&lt;/a&gt; – Get help, share ideas, and chat with other developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firebase/genkit/issues"&gt;&lt;strong&gt;Contribute on GitHub&lt;/strong&gt;&lt;/a&gt; – Report bugs, suggest features, or explore the source code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/genkit-ai/"&gt;&lt;strong&gt;Contribute to Documentation and Samples&lt;/strong&gt;&lt;/a&gt; – Report issues in Genkit's &lt;a href="https://github.com/genkit-ai/docsite"&gt;documentation&lt;/a&gt;, or contribute to the &lt;a href="https://github.com/genkit-ai/samples"&gt;samples&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Genkit are welcome and highly appreciated! See our &lt;a href="https://raw.githubusercontent.com/firebase/genkit/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;Genkit is built by &lt;a href="https://firebase.google.com/"&gt;Firebase&lt;/a&gt; with contributions from the &lt;a href="https://github.com/firebase/genkit/graphs/contributors"&gt;Open Source Community&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>expo/expo</title>
      <link>https://github.com/expo/expo</link>
      <description>&lt;p&gt;An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://expo.dev/"&gt; &lt;img alt="Expo logo" height="128" src="https://raw.githubusercontent.com/expo/expo/main/.github/resources/banner.png" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://expo.dev/"&gt;Expo&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://expo.dev/"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="SDK version" href="https://www.npmjs.com/package/expo" target="_blank"&gt; &lt;img alt="Expo SDK version" src="https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;amp;label=SDK&amp;amp;labelColor=000000&amp;amp;color=4630EB" /&gt; &lt;/a&gt; &lt;a aria-label="Chat or ask a question" href="https://chat.expo.dev" target="_blank"&gt; &lt;img alt="Chat or ask a question" src="https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;amp;labelColor=000000&amp;amp;color=4630EB&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=Chat%20with%20us" /&gt; &lt;/a&gt; &lt;a aria-label="Expo is free to use" href="https://github.com/expo/expo/raw/main/LICENSE" target="_blank"&gt; &lt;img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;amp;color=33CC12" target="_blank" /&gt; &lt;/a&gt; &lt;a aria-label="expo downloads" href="http://www.npmtrends.com/expo" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;amp;labelColor=gray&amp;amp;color=33CC12&amp;amp;label=Downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="try expo with snack" href="https://snack.expo.dev"&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;Read the Documentation&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.dev/blog"&gt;Learn more on our blog&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.canny.io/feature-requests"&gt;Request a feature&lt;/a&gt; &lt;/p&gt; 
&lt;h6 align="center"&gt;Follow us on&lt;/h6&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Follow @expo on X" href="https://x.com/intent/follow?screen_name=expo" target="_blank"&gt; &lt;img alt="Expo on X" src="https://img.shields.io/badge/X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on GitHub" href="https://github.com/expo" target="_blank"&gt; &lt;img alt="Expo on GitHub" src="https://img.shields.io/badge/GitHub-222222?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Reddit" href="https://www.reddit.com/r/expo/" target="_blank"&gt; &lt;img alt="Expo on Reddit" src="https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&amp;amp;logo=reddit&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Bluesky" href="https://bsky.app/profile/expo.dev" target="_blank"&gt; &lt;img alt="Expo on Bluesky" src="https://img.shields.io/badge/Bluesky-1DA1F2?style=for-the-badge&amp;amp;logo=bluesky&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on LinkedIn" href="https://www.linkedin.com/company/expo-dev" target="_blank"&gt; &lt;img alt="Expo on LinkedIn" src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript.&lt;/p&gt; 
&lt;p&gt;This repository includes the Expo SDK, Modules API, Go app, CLI, Router, documentation, and various other supporting tools. &lt;a href="https://expo.dev/eas"&gt;Expo Application Services (EAS)&lt;/a&gt; is a platform of hosted services that are deeply integrated with Expo open source tools. EAS helps you build, ship, and iterate on your app as an individual or a team.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://expo.dev/guidelines"&gt;Expo Community Guidelines&lt;/a&gt; before interacting in the repository. Thank you for helping keep the Expo community open and welcoming!&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-documentation"&gt;📚 Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-project-layout"&gt;🗺 Project Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-badges"&gt;🏅 Badges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-contributing"&gt;👏 Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-faq"&gt;❓ FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-the-team"&gt;💙 The Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;in our official docs!&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/versions/latest/"&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/workflow/customizing/"&gt;Using Custom Native Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🗺 Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/packages"&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; All the source code for Expo modules, if you want to edit a library or just see how it works this is where you'll find it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps"&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; This is where you can find Expo projects which are linked to the development modules. You'll do most of your testing in here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go"&gt;&lt;code&gt;apps/expo-go&lt;/code&gt;&lt;/a&gt; This is where you can find the source code for Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go/ios"&gt;&lt;code&gt;apps/expo-go/ios/Exponent.xcworkspace&lt;/code&gt;&lt;/a&gt; is the Xcode workspace. When developing iOS, always open this instead of &lt;code&gt;Exponent.xcodeproj&lt;/code&gt; because the workspace also loads the CocoaPods dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/docs"&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; The source code for &lt;strong&gt;&lt;a href="https://docs.expo.dev"&gt;https://docs.expo.dev&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/templates"&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt; The template projects you get when you run &lt;code&gt;npx create-expo-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/react-native-lab"&gt;&lt;code&gt;react-native-lab&lt;/code&gt;&lt;/a&gt; This is our fork of &lt;code&gt;react-native&lt;/code&gt; used to build Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/guides"&gt;&lt;code&gt;guides&lt;/code&gt;&lt;/a&gt; In-depth tutorials for advanced topics like contributing to the client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/tools"&gt;&lt;code&gt;tools&lt;/code&gt;&lt;/a&gt; contain build and configuration tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files"&gt;&lt;code&gt;template-files&lt;/code&gt;&lt;/a&gt; contains templates for files that require private keys. They are populated using the keys in &lt;code&gt;template-files/keys.json&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files/ios/dependencies.json"&gt;&lt;code&gt;template-files/ios/dependencies.json&lt;/code&gt;&lt;/a&gt; specifies the CocoaPods dependencies of the app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏅 Badges&lt;/h2&gt; 
&lt;p&gt;Let everyone know your app can be run instantly in the &lt;em&gt;Expo Go&lt;/em&gt; app! &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;👏 Contributing&lt;/h2&gt; 
&lt;p&gt;If you like Expo and want to help make it better then check out our &lt;a href="https://raw.githubusercontent.com/expo/expo/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;! Check out the &lt;a href="https://github.com/expo/expo/tree/main/packages/%40expo/cli"&gt;CLI package&lt;/a&gt; to work on the Expo CLI.&lt;/p&gt; 
&lt;h2&gt;❓ FAQ&lt;/h2&gt; 
&lt;p&gt;If you have questions about Expo and want answers, then check out our &lt;a href="https://docs.expo.dev/faq/"&gt;Frequently Asked Questions&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;If you still have questions you can ask them on our &lt;a href="https://chat.expo.dev"&gt;Discord and Forums&lt;/a&gt; or X &lt;a href="https://x.com/expo"&gt;@expo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💙 The Team&lt;/h2&gt; 
&lt;p&gt;Curious about who makes Expo? Here are our &lt;a href="https://expo.dev/about"&gt;team members&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Expo source code is made available under the &lt;a href="https://raw.githubusercontent.com/expo/expo/main/LICENSE"&gt;MIT license&lt;/a&gt;. Some of the dependencies are licensed differently, with the BSD license, for example.&lt;/p&gt; 
&lt;img alt="Star the Expo repo on GitHub to support the project" src="https://user-images.githubusercontent.com/9664363/185428788-d762fd5d-97b3-4f59-8db7-f72405be9677.gif" width="50%" /&gt;</description>
    </item>
    
    <item>
      <title>chatboxai/chatbox</title>
      <link>https://github.com/chatboxai/chatbox</link>
      <description>&lt;p&gt;User-friendly Desktop Client App for AI Models/LLMs (GPT, Claude, Gemini, Ollama...)&lt;/p&gt;&lt;hr&gt;&lt;p align="right"&gt; &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/README-CN.md"&gt;简体中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;This is the repository for the Chatbox Community Edition, open-sourced under the GPLv3 license.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/chatboxai/chatbox/issues/2266"&gt;Chatbox is going open-source Again!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We regularly sync code from the pro repo to this repo, and vice versa.&lt;/p&gt; 
&lt;h3&gt;Download for Desktop&lt;/h3&gt; 
&lt;table style="width: 100%"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Windows&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center" colspan="2"&gt; &lt;b&gt;MacOS&lt;/b&gt; &lt;/td&gt; 
   &lt;td width="25%" align="center"&gt; &lt;b&gt;Linux&lt;/b&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr style="text-align: center"&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-windows"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/windows.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Setup.exe&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-intel"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;Intel&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-mac-aarch"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/mac.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b style="white-space: nowrap;"&gt;Apple Silicon&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="center" valign="middle"&gt; &lt;a href="https://chatboxai.app/?c=download-linux"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/linux.png" style="height:24px; width: 24px" /&gt; &lt;br /&gt; &lt;b&gt;AppImage&lt;/b&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Download for iOS/Android&lt;/h3&gt; 
&lt;a href="https://apps.apple.com/app/chatbox-ai/id6471368056" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/app_store.webp" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://play.google.com/store/apps/details?id=xyz.chatboxapp.chatbox" style="margin-right: 4px"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/google_play.png" style="height:38px;" /&gt; &lt;/a&gt; 
&lt;a href="https://chatboxai.app/install?download=android_apk" style="margin-right: 4px; display: inline-flex; justify-content: center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/android.png" style="height:28px; display: inline-block" /&gt; .APK &lt;/a&gt; 
&lt;p&gt;For more information: &lt;a href="https://chatboxai.app/"&gt;chatboxai.app&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/icon.png" width="30" /&gt; &lt;span&gt; Chatbox &lt;span style="font-size:8px; font-weight: normal;"&gt;(Community Edition)&lt;/span&gt; &lt;/span&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;em&gt;Your Ultimate AI Copilot on the Desktop. &lt;br /&gt;Chatbox is a desktop client for ChatGPT, Claude and other LLMs, available on Windows, Mac, Linux&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="macOS" src="https://img.shields.io/badge/-macOS-black?style=flat-square&amp;amp;logo=apple&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Windows" src="https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;amp;logo=windows&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Linux" src="https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;amp;logo=linux&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/chatboxai/chatbox/releases" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/github/downloads/chatboxai/chatbox/total.svg?style=flat" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.producthunt.com/posts/chatbox?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-chatbox" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=429547&amp;amp;theme=light" alt="Chatbox - Better UI &amp;amp; Desktop App for ChatGPT, Claude and other LLMs. | Product Hunt" style="width: 150px; height: 30px;" width="100" height="40" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_light.png" width="400" /&gt; &lt;/a&gt; 
&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png"&gt; &lt;img src="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/statics/snapshot_dark.png" width="400" /&gt; &lt;/a&gt; 
&lt;!-- &lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_1.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;img src="./dec/../doc/demo_mobile_2.png" alt="App Screenshot" style="box-shadow: 2px 2px 10px rgba(0,0,0,0.1); border: 1px solid #ddd; border-radius: 8px; height: 300px" /&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt; --&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Local Data Storage&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💾&lt;/span&gt; Your data remains on your device, ensuring it never gets lost and maintains your privacy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;No-Deployment Installation Packages&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📦&lt;/span&gt; Get started quickly with downloadable installation packages. No complex setup necessary!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Support for Multiple LLM Providers&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⚙&lt;/span&gt; Seamlessly integrate with a variety of cutting-edge language models:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;OpenAI (ChatGPT)&lt;/li&gt; 
   &lt;li&gt;Azure OpenAI&lt;/li&gt; 
   &lt;li&gt;Claude&lt;/li&gt; 
   &lt;li&gt;Google Gemini Pro&lt;/li&gt; 
   &lt;li&gt;Ollama (enable access to local models like llama2, Mistral, Mixtral, codellama, vicuna, yi, and solar)&lt;/li&gt; 
   &lt;li&gt;ChatGLM-6B&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Image Generation with Dall-E-3&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🎨&lt;/span&gt; Create the images of your imagination with Dall-E-3.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhanced Prompting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💬&lt;/span&gt; Advanced prompting features to refine and focus your queries for better responses.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Keyboard Shortcuts&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;⌨&lt;/span&gt; Stay productive with shortcuts that speed up your workflow.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Markdown, Latex &amp;amp; Code Highlighting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📜&lt;/span&gt; Generate messages with the full power of Markdown and Latex formatting, coupled with syntax highlighting for various programming languages, enhancing readability and presentation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Prompt Library &amp;amp; Message Quoting&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;📚&lt;/span&gt; Save and organize prompts for reuse, and quote messages for context in discussions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Streaming Reply&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;▶&lt;/span&gt; Provide rapid responses to your interactions with immediate, progressive replies.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ergonomic UI &amp;amp; Dark Theme&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌑&lt;/span&gt; A user-friendly interface with a night mode option for reduced eye strain during extended use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Team Collaboration&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;👥&lt;/span&gt; Collaborate with ease and share OpenAI API resources among your team. &lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/team-sharing/README.md"&gt;Learn More&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cross-Platform Availability&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;💻&lt;/span&gt; Chatbox is ready for Windows, Mac, Linux users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Access Anywhere with the Web Version&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌐&lt;/span&gt; Use the web application on any device with a browser, anywhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;iOS &amp;amp; Android&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;☎&lt;/span&gt; Use the mobile applications that will bring this power to your fingertips on the go.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multilingual Support&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;🌎&lt;/span&gt; Catering to a global audience by offering support in multiple languages:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;English&lt;/li&gt; 
   &lt;li&gt;简体中文 (Simplified Chinese)&lt;/li&gt; 
   &lt;li&gt;繁體中文 (Traditional Chinese)&lt;/li&gt; 
   &lt;li&gt;日本語 (Japanese)&lt;/li&gt; 
   &lt;li&gt;한국어 (Korean)&lt;/li&gt; 
   &lt;li&gt;Français (French)&lt;/li&gt; 
   &lt;li&gt;Deutsch (German)&lt;/li&gt; 
   &lt;li&gt;Русский (Russian)&lt;/li&gt; 
   &lt;li&gt;Español (Spanish)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;And More...&lt;/strong&gt;&lt;br /&gt; &lt;span&gt;✨&lt;/span&gt; Constantly enhancing the experience with new features!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/doc/FAQ.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why I made Chatbox?&lt;/h2&gt; 
&lt;p&gt;I developed Chatbox initially because I was debugging some prompts and found myself in need of a simple and easy-to-use prompt and API debugging tool. I thought there might be more people who needed such a tool, so I open-sourced it.&lt;/p&gt; 
&lt;p&gt;At first, I didn't know that it would be so popular. I listened to the feedback from the open-source community and continued to develop and improve it. Now, it has become a very useful AI desktop application. There are many users who love Chatbox, and they not only use it for developing and debugging prompts, but also for daily chatting, and even to do some more interesting things like using well-designed prompts to make AI play various professional roles to assist them in everyday work...&lt;/p&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Any form of contribution is welcome, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Submitting issues&lt;/li&gt; 
 &lt;li&gt;Submitting pull requests&lt;/li&gt; 
 &lt;li&gt;Submitting feature requests&lt;/li&gt; 
 &lt;li&gt;Submitting bug reports&lt;/li&gt; 
 &lt;li&gt;Submitting documentation revisions&lt;/li&gt; 
 &lt;li&gt;Submitting translations&lt;/li&gt; 
 &lt;li&gt;Submitting any other forms of contribution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (v20.x – v22.x)&lt;/li&gt; 
 &lt;li&gt;npm (required – pnpm is not supported)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build Instructions&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository from Github&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/chatboxai/chatbox.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install the required dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Start the application (in development mode)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Build the application, package the installer for current platform&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Build the application, package the installer for all platforms&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run package:all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#chatboxai/chatbox&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=chatboxai/chatbox&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://x.com/ChatboxAI_HQ"&gt;Twitter&lt;/a&gt; | &lt;a href="mailto:hi@chatboxai.com"&gt;Email&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chatboxai/chatbox/main/LICENSE"&gt;LICENSE&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ItzCrazyKns/Perplexica</title>
      <link>https://github.com/ItzCrazyKns/Perplexica</link>
      <description>&lt;p&gt;Perplexica is an AI-powered search engine. It is an Open source alternative to Perplexity AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🚀 Perplexica - An AI-powered search engine 🔎 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/perplexica"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/775dd593-9b5f-40f1-bf48-479faff4c27b" /&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Warp, the AI Devtool that lives in your terminal&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/perplexica"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/26aArMy8tT"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/26aArMy8tT?style=flat" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-screenshot.png?" alt="preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents 
 &lt;!-- omit in toc --&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#preview"&gt;Preview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#getting-started-with-docker-recommended"&gt;Getting Started with Docker (Recommended)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#non-docker-installation"&gt;Non-Docker Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#ollama-connection-errors"&gt;Ollama Connection Errors&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-as-a-search-engine"&gt;Using as a Search Engine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#using-perplexicas-api"&gt;Using Perplexica's API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#expose-perplexica-to-network"&gt;Expose Perplexica to a network&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#one-click-deployment"&gt;One-Click Deployment&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;Upcoming Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#support-us"&gt;Support Us&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#donations"&gt;Donations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#contribution"&gt;Contribution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#help-and-support"&gt;Help and Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Perplexica is an open-source AI-powered searching tool or an AI-powered search engine that goes deep into the internet to find answers. Inspired by Perplexity AI, it's an open-source option that not just searches the web but understands your questions. It uses advanced machine learning algorithms like similarity searching and embeddings to refine results and provides clear answers with sources cited.&lt;/p&gt; 
&lt;p&gt;Using SearxNG to stay current and fully open source, Perplexica ensures you always get the most up-to-date information without compromising your privacy.&lt;/p&gt; 
&lt;p&gt;Want to know more about its architecture and how it works? You can read it &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/architecture/README.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/.assets/perplexica-preview.gif" alt="video-preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local LLMs&lt;/strong&gt;: You can utilize local LLMs such as Qwen, DeepSeek, Llama, and Mistral.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Two Main Modes:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Copilot Mode:&lt;/strong&gt; (In development) Boosts search by generating different queries to find more relevant internet sources. Like normal search instead of just using the context by SearxNG, it visits the top matches and tries to find relevant sources to the user's query directly from the page.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Normal Mode:&lt;/strong&gt; Processes your query and performs a web search.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Focus Modes:&lt;/strong&gt; Special modes to better answer specific types of questions. Perplexica currently has 6 focus modes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;All Mode:&lt;/strong&gt; Searches the entire web to find the best results.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Writing Assistant Mode:&lt;/strong&gt; Helpful for writing tasks that do not require searching the web.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Academic Search Mode:&lt;/strong&gt; Finds articles and papers, ideal for academic research.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;YouTube Search Mode:&lt;/strong&gt; Finds YouTube videos based on the search query.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Wolfram Alpha Search Mode:&lt;/strong&gt; Answers queries that need calculations or data analysis using Wolfram Alpha.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Reddit Search Mode:&lt;/strong&gt; Searches Reddit for discussions and opinions related to the query.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Current Information:&lt;/strong&gt; Some search tools might give you outdated info because they use data from crawling bots and convert them into embeddings and store them in a index. Unlike them, Perplexica uses SearxNG, a metasearch engine to get the results and rerank and get the most relevant source out of it, ensuring you always get the latest information without the overhead of daily data updates.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;: Integrate Perplexica into your existing applications and make use of its capibilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;It has many more features like image and video search. Some of the planned features are mentioned in &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/#upcoming-features"&gt;upcoming features&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;There are mainly 2 ways of installing Perplexica - With Docker, Without Docker. Using Docker is highly recommended.&lt;/p&gt; 
&lt;h3&gt;Getting Started with Docker (Recommended)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Ensure Docker is installed and running on your system.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Clone the Perplexica repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/ItzCrazyKns/Perplexica.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;After cloning, navigate to the directory containing the project files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt;. For Docker setups, you need only fill in the following fields:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OPENAI&lt;/code&gt;: Your OpenAI API key. &lt;strong&gt;You only need to fill this if you wish to use OpenAI's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;CUSTOM_OPENAI&lt;/code&gt;: Your OpenAI-API-compliant local server URL, model name, and API key. You should run your local server with host set to &lt;code&gt;0.0.0.0&lt;/code&gt;, take note of which port number it is running on, and then use that port number to set &lt;code&gt;API_URL = http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. You must specify the model name, such as &lt;code&gt;MODEL_NAME = "unsloth/DeepSeek-R1-0528-Qwen3-8B-GGUF:Q4_K_XL"&lt;/code&gt;. Finally, set &lt;code&gt;API_KEY&lt;/code&gt; to the appropriate value. If you have not defined an API key, just put anything you want in-between the quotation marks: &lt;code&gt;API_KEY = "whatever-you-want-but-not-blank"&lt;/code&gt; &lt;strong&gt;You only need to configure these settings if you want to use a local OpenAI-compliant server, such as Llama.cpp's &lt;a href="https://github.com/ggml-org/llama.cpp/raw/master/tools/server/README.md"&gt;&lt;code&gt;llama-server&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;OLLAMA&lt;/code&gt;: Your Ollama API URL. You should enter it as &lt;code&gt;http://host.docker.internal:PORT_NUMBER&lt;/code&gt;. If you installed Ollama on port 11434, use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;. For other ports, adjust accordingly. &lt;strong&gt;You need to fill this if you wish to use Ollama's models instead of OpenAI's&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;GROQ&lt;/code&gt;: Your Groq API key. &lt;strong&gt;You only need to fill this if you wish to use Groq's hosted models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;ANTHROPIC&lt;/code&gt;: Your Anthropic API key. &lt;strong&gt;You only need to fill this if you wish to use Anthropic models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;Gemini&lt;/code&gt;: Your Gemini API key. &lt;strong&gt;You only need to fill this if you wish to use Google's models&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;DEEPSEEK&lt;/code&gt;: Your Deepseek API key. &lt;strong&gt;Only needed if you want Deepseek models.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;AIMLAPI&lt;/code&gt;: Your AI/ML API key. &lt;strong&gt;Only needed if you want to use AI/ML API models and embeddings.&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: You can change these after starting Perplexica from the settings dialog.&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;code&gt;SIMILARITY_MEASURE&lt;/code&gt;: The similarity measure to use (This is filled by default; you can leave it as is if you are unsure about it.)&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ensure you are in the directory containing the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file and execute:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Wait a few minutes for the setup to complete. You can access Perplexica at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your web browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: After the containers are built, you can start Perplexica directly from Docker without having to open a terminal.&lt;/p&gt; 
&lt;h3&gt;Non-Docker Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install SearXNG and allow &lt;code&gt;JSON&lt;/code&gt; format in the SearXNG settings.&lt;/li&gt; 
 &lt;li&gt;Clone the repository and rename the &lt;code&gt;sample.config.toml&lt;/code&gt; file to &lt;code&gt;config.toml&lt;/code&gt; in the root directory. Ensure you complete all required fields in this file.&lt;/li&gt; 
 &lt;li&gt;After populating the configuration run &lt;code&gt;npm i&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Install the dependencies and then execute &lt;code&gt;npm run build&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Finally, start the app by running &lt;code&gt;npm run start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Using Docker is recommended as it simplifies the setup process, especially for managing environment variables and dependencies.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/installation"&gt;installation documentation&lt;/a&gt; for more information like updating, etc.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;h4&gt;Local OpenAI-API-Compliant Servers&lt;/h4&gt; 
&lt;p&gt;If Perplexica tells you that you haven't configured any chat model providers, ensure that:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Your server is running on &lt;code&gt;0.0.0.0&lt;/code&gt; (not &lt;code&gt;127.0.0.1&lt;/code&gt;) and on the same port you put in the API URL.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct model name loaded by your local LLM server.&lt;/li&gt; 
 &lt;li&gt;You have specified the correct API key, or if one is not defined, you have put &lt;em&gt;something&lt;/em&gt; in the API key field and not left it empty.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Ollama Connection Errors&lt;/h4&gt; 
&lt;p&gt;If you're encountering an Ollama connection error, it is likely due to the backend being unable to connect to Ollama's API. To fix this issue you can:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Check your Ollama API URL:&lt;/strong&gt; Ensure that the API URL is correctly set in the settings menu.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Update API URL Based on OS:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Mac:&lt;/strong&gt; Use &lt;code&gt;http://host.docker.internal:11434&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; Use &lt;code&gt;http://&amp;lt;private_ip_of_host&amp;gt;:11434&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;Adjust the port number if you're using a different one.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Linux Users - Expose Ollama to Network:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Inside &lt;code&gt;/etc/systemd/system/ollama.service&lt;/code&gt;, you need to add &lt;code&gt;Environment="OLLAMA_HOST=0.0.0.0:11434"&lt;/code&gt;. (Change the port number if you are using a different one.) Then reload the systemd manager configuration with &lt;code&gt;systemctl daemon-reload&lt;/code&gt;, and restart Ollama by &lt;code&gt;systemctl restart ollama&lt;/code&gt;. For more information see &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#setting-environment-variables-on-linux"&gt;Ollama docs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Ensure that the port (default is 11434) is not blocked by your firewall.&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using as a Search Engine&lt;/h2&gt; 
&lt;p&gt;If you wish to use Perplexica as an alternative to traditional search engines like Google or Bing, or if you want to add a shortcut for quick access from your browser's search bar, follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your browser's settings.&lt;/li&gt; 
 &lt;li&gt;Navigate to the 'Search Engines' section.&lt;/li&gt; 
 &lt;li&gt;Add a new site search with the following URL: &lt;code&gt;http://localhost:3000/?q=%s&lt;/code&gt;. Replace &lt;code&gt;localhost&lt;/code&gt; with your IP address or domain name, and &lt;code&gt;3000&lt;/code&gt; with the port number if Perplexica is not hosted locally.&lt;/li&gt; 
 &lt;li&gt;Click the add button. Now, you can use Perplexica directly from your browser's search bar.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using Perplexica's API&lt;/h2&gt; 
&lt;p&gt;Perplexica also provides an API for developers looking to integrate its powerful search engine into their own applications. You can run searches, use multiple models and get answers to your queries.&lt;/p&gt; 
&lt;p&gt;For more details, check out the full documentation &lt;a href="https://github.com/ItzCrazyKns/Perplexica/tree/master/docs/API/SEARCH.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Expose Perplexica to network&lt;/h2&gt; 
&lt;p&gt;Perplexica runs on Next.js and handles all API requests. It works right away on the same network and stays accessible even with port forwarding.&lt;/p&gt; 
&lt;h2&gt;One-Click Deployment&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://usw.sealos.io/?openapp=system-template%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/labring-actions/templates/main/Deploy-on-Sealos.svg?sanitize=true" alt="Deploy to Sealos" /&gt;&lt;/a&gt; &lt;a href="https://repocloud.io/details/?app_id=267"&gt;&lt;img src="https://d16t0pc4846x52.cloudfront.net/deploylobe.svg?sanitize=true" alt="Deploy to RepoCloud" /&gt;&lt;/a&gt; &lt;a href="https://template.run.claw.cloud/?referralCode=U11MRQ8U9RM4&amp;amp;openapp=system-fastdeploy%3FtemplateName%3Dperplexica"&gt;&lt;img src="https://raw.githubusercontent.com/ClawCloud/Run-Template/refs/heads/main/Run-on-ClawCloud.svg?sanitize=true" alt="Run on ClawCloud" /&gt;&lt;/a&gt; &lt;a href="https://www.hostinger.com/vps/docker-hosting?compose_url=https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/refs/heads/master/docker-compose.yaml"&gt;&lt;img src="https://assets.hostinger.com/vps/deploy.svg?sanitize=true" alt="Deploy on Hostinger" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Upcoming Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Add settings page&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding support for local LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; History Saving features&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Introducing various Focus Modes&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding API support&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Adding Discover&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Finalizing Copilot Mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Us&lt;/h2&gt; 
&lt;p&gt;If you find Perplexica useful, consider giving us a star on GitHub. This helps more people discover Perplexica and supports the development of new features. Your support is greatly appreciated.&lt;/p&gt; 
&lt;h3&gt;Donations&lt;/h3&gt; 
&lt;p&gt;We also accept donations to help sustain our project. If you would like to contribute, you can use the following options to donate. Thank you for your support!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Ethereum&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Address: &lt;code&gt;0xB025a84b2F269570Eb8D4b05DEdaA41D8525B6DD&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;p&gt;Perplexica is built on the idea that AI and large language models should be easy for everyone to use. If you find bugs or have ideas, please share them in via GitHub Issues. For more information on contributing to Perplexica you can read the &lt;a href="https://raw.githubusercontent.com/ItzCrazyKns/Perplexica/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file to learn more about Perplexica and how you can contribute to it.&lt;/p&gt; 
&lt;h2&gt;Help and Support&lt;/h2&gt; 
&lt;p&gt;If you have any questions or feedback, please feel free to reach out to us. You can create an issue on GitHub or join our Discord server. There, you can connect with other users, share your experiences and reviews, and receive more personalized help. &lt;a href="https://discord.gg/EFwsmQDgAu"&gt;Click here&lt;/a&gt; to join the Discord server. To discuss matters outside of regular support, feel free to contact me on Discord at &lt;code&gt;itzcrazykns&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Thank you for exploring Perplexica, the AI-powered search engine designed to enhance your search experience. We are constantly working to improve Perplexica and expand its capabilities. We value your feedback and contributions which help us make Perplexica even better. Don't forget to check back for updates and new features!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coinbase/x402</title>
      <link>https://github.com/coinbase/x402</link>
      <description>&lt;p&gt;A payments protocol for the internet. Built on HTTP.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;x402 payments protocol&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"1 line of code to accept digital dollars. No fee, 2 second settlement, $0.001 minimum payment."&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;app.use(
  // How much you want to charge, and where you want the funds to land
  paymentMiddleware("0xYourAddress", { "/your-endpoint": "$0.01" })
);
// That's it! See examples/typescript/servers/express.ts for a complete example. Instruction below for running on base-sepolia.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;Payments on the internet are fundamentally flawed. Credit Cards are high friction, hard to accept, have minimum payments that are far too high, and don't fit into the programmatic nature of the internet. It's time for an open, internet-native form of payments. A payment rail that doesn't have high minimums + % based fee. Payments that are amazing for humans and AI agents.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Open standard:&lt;/strong&gt; the x402 protocol will never force reliance on a single party&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;HTTP Native:&lt;/strong&gt; x402 is meant to seamlessly complement the existing HTTP request made by traditional web services, it should not mandate additional requests outside the scope of a typical client / server flow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chain and token agnostic:&lt;/strong&gt; we welcome contributions that add support for new chains, signing standards, or schemes, so long as they meet our acceptance criteria laid out in &lt;a href="https://github.com/coinbase/x402/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trust minimizing:&lt;/strong&gt; all payment schemes must not allow for the facilitator or resource server to move funds, other than in accordance with client intentions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to use:&lt;/strong&gt; x402 needs to be 10x better than existing ways to pay on the internet. This means abstracting as many details of crypto as possible away from the client and resource server, and into the facilitator. This means the client/server should not need to think about gas, rpc, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;The x402 ecosystem is growing! Check out our &lt;a href="https://x402.org/ecosystem"&gt;ecosystem page&lt;/a&gt; to see projects building with x402, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Client-side integrations&lt;/li&gt; 
 &lt;li&gt;Services and endpoints&lt;/li&gt; 
 &lt;li&gt;Ecosystem infrastructure and tooling&lt;/li&gt; 
 &lt;li&gt;Learning and community resources&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to add your project to the ecosystem? See our &lt;a href="https://github.com/coinbase/x402/tree/main/typescript/site#adding-your-project-to-the-ecosystem"&gt;demo site README&lt;/a&gt; for detailed instructions on how to submit your project.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Roadmap:&lt;/strong&gt; see &lt;a href="https://github.com/coinbase/x402/raw/main/ROADMAP.md"&gt;ROADMAP.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Terms:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;resource&lt;/code&gt;: Something on the internet. This could be a webpage, file server, RPC service, API, any resource on the internet that accepts HTTP / HTTPS requests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: An entity wanting to pay for a resource.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;facilitator server&lt;/code&gt;: A server that facilitates verification and execution of on-chain payments.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resource server&lt;/code&gt;: An HTTP server that provides an API or other resource for a client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technical Goals:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Permissionless and secure for clients and servers&lt;/li&gt; 
 &lt;li&gt;Gasless for client and resource servers&lt;/li&gt; 
 &lt;li&gt;Minimal integration for the resource server and client (1 line for the server, 1 function for the client)&lt;/li&gt; 
 &lt;li&gt;Ability to trade off speed of response for guarantee of payment&lt;/li&gt; 
 &lt;li&gt;Extensible to different payment flows and chains&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;V1 Protocol&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;x402&lt;/code&gt; protocol is a chain agnostic standard for payments on top of HTTP, leverage the existing &lt;code&gt;402 Payment Required&lt;/code&gt; HTTP status code to indicate that a payment is required for access to the resource.&lt;/p&gt; 
&lt;p&gt;It specifies:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;A schema for how servers can respond to clients to facilitate payment for a resource (&lt;code&gt;PaymentRequirements&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A standard header &lt;code&gt;X-PAYMENT&lt;/code&gt; that is set by clients paying for resources&lt;/li&gt; 
 &lt;li&gt;A standard schema and encoding method for data in the &lt;code&gt;X-PAYMENT&lt;/code&gt; header&lt;/li&gt; 
 &lt;li&gt;A recommended flow for how payments should be verified and settled by a resource server&lt;/li&gt; 
 &lt;li&gt;A REST specification for how a resource server can perform verification and settlement against a remote 3rd party server (&lt;code&gt;facilitator&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;A specification for a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header that can be used by resource servers to communicate blockchain transactions details to the client in their HTTP response&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;V1 Protocol Sequencing&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/coinbase/x402/main/static/x402-protocol-flow.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;The following outlines the flow of a payment using the &lt;code&gt;x402&lt;/code&gt; protocol. Note that steps (1) and (2) are optional if the client already knows the payment details accepted for a resource.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; makes an HTTP request to a &lt;code&gt;resource server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; responds with a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; selects one of the &lt;code&gt;paymentRequirements&lt;/code&gt; returned by the server response and creates a &lt;code&gt;Payment Payload&lt;/code&gt; based on the &lt;code&gt;scheme&lt;/code&gt; of the &lt;code&gt;paymentRequirements&lt;/code&gt; they have selected.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Client&lt;/code&gt; sends the HTTP request with the &lt;code&gt;X-PAYMENT&lt;/code&gt; header containing the &lt;code&gt;Payment Payload&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; verifies the &lt;code&gt;Payment Payload&lt;/code&gt; is valid either via local verification or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment Requirements&lt;/code&gt; to the &lt;code&gt;/verify&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; performs verification of the object based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt; and returns a &lt;code&gt;Verification Response&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;If the &lt;code&gt;Verification Response&lt;/code&gt; is valid, the resource server performs the work to fulfill the request. If the &lt;code&gt;Verification Response&lt;/code&gt; is invalid, the resource server returns a &lt;code&gt;402 Payment Required&lt;/code&gt; status and a &lt;code&gt;Payment Required Response&lt;/code&gt; JSON object in the response body.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; either settles the payment by interacting with a blockchain directly, or by POSTing the &lt;code&gt;Payment Payload&lt;/code&gt; and &lt;code&gt;Payment PaymentRequirements&lt;/code&gt; to the &lt;code&gt;/settle&lt;/code&gt; endpoint of a &lt;code&gt;facilitator server&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; submits the payment to the blockchain based on the &lt;code&gt;scheme&lt;/code&gt; and &lt;code&gt;network&lt;/code&gt; of the &lt;code&gt;Payment Payload&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; waits for the payment to be confirmed on the blockchain.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Facilitator server&lt;/code&gt; returns a &lt;code&gt;Payment Execution Response&lt;/code&gt; to the resource server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;Resource server&lt;/code&gt; returns a &lt;code&gt;200 OK&lt;/code&gt; response to the &lt;code&gt;Client&lt;/code&gt; with the resource they requested as the body of the HTTP response, and a &lt;code&gt;X-PAYMENT-RESPONSE&lt;/code&gt; header containing the &lt;code&gt;Settlement Response&lt;/code&gt; as Base64 encoded JSON if the payment was executed successfully.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Type Specifications&lt;/h3&gt; 
&lt;h4&gt;Data types&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Payment Required Response&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: int,

  // List of payment requirements that the resource server accepts. A resource server may accept on multiple chains, or in multiple currencies.
  accepts: [paymentRequirements]

  // Message from the resource server to the client to communicate errors in processing payment
  error: string
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;paymentRequirements&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Scheme of the payment protocol to use
  scheme: string;

  // Network of the blockchain to send payment on
  network: string;

  // Maximum amount required to pay for the resource in atomic units of the asset
  maxAmountRequired: uint256 as string;

  // URL of resource to pay for
  resource: string;

  // Description of the resource
  description: string;

  // MIME type of the resource response
  mimeType: string;

  // Output schema of the resource response
  outputSchema?: object | null;

  // Address to pay value to
  payTo: string;

  // Maximum time in seconds for the resource server to respond
  maxTimeoutSeconds: number;

  // Address of the EIP-3009 compliant ERC20 contract
  asset: string;

  // Extra information about the payment details specific to the scheme
  // For `exact` scheme on a EVM network, expects extra to contain the records `name` and `version` pertaining to asset
  extra: object | null;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;Payment Payload&lt;/code&gt;&lt;/strong&gt; (included as the &lt;code&gt;X-PAYMENT&lt;/code&gt; header in base64 encoded json)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Version of the x402 payment protocol
  x402Version: number;

  // scheme is the scheme value of the accepted `paymentRequirements` the client is using to pay
  scheme: string;

  // network is the network id of the accepted `paymentRequirements` the client is using to pay
  network: string;

  // payload is scheme dependent
  payload: &amp;lt;scheme dependent&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Facilitator Types &amp;amp; Interface&lt;/h4&gt; 
&lt;p&gt;A &lt;code&gt;facilitator server&lt;/code&gt; is a 3rd party service that can be used by a &lt;code&gt;resource server&lt;/code&gt; to verify and settle payments, without the &lt;code&gt;resource server&lt;/code&gt; needing to have access to a blockchain node or wallet.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;POST /verify&lt;/strong&gt;. Verify a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Request body JSON: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  isValid: boolean;
  invalidReason: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;POST /settle&lt;/strong&gt;. Settle a payment with a supported scheme and network:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Request body JSON:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  x402Version: number;
  paymentHeader: string;
  paymentRequirements: paymentRequirements;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Response:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json5"&gt;{
  // Whether the payment was successful
  success: boolean;

  // Error message from the facilitator server
  error: string | null;

  // Transaction hash of the settled payment
  txHash: string | null;

  // Network id of the blockchain the payment was settled on
  networkId: string | null;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;GET /supported&lt;/strong&gt;. Get supported payment schemes and networks:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Response: &lt;pre&gt;&lt;code class="language-json5"&gt;{
  kinds: [
    {
      "scheme": string,
      "network": string,
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Schemes&lt;/h3&gt; 
&lt;p&gt;A scheme is a logical way of moving money.&lt;/p&gt; 
&lt;p&gt;Blockchains allow for a large number of flexible ways to move money. To help facilitate an expanding number of payment use cases, the &lt;code&gt;x402&lt;/code&gt; protocol is extensible to different ways of settling payments via its &lt;code&gt;scheme&lt;/code&gt; field.&lt;/p&gt; 
&lt;p&gt;Each payment scheme may have different operational functionality depending on what actions are necessary to fulfill the payment. For example &lt;code&gt;exact&lt;/code&gt;, the first scheme shipping as part of the protocol, would have different behavior than &lt;code&gt;upto&lt;/code&gt;. &lt;code&gt;exact&lt;/code&gt; transfers a specific amount (ex: pay $1 to read an article), while a theoretical &lt;code&gt;upto&lt;/code&gt; would transfer up to an amount, based on the resources consumed during a request (ex: generating tokens from an LLM).&lt;/p&gt; 
&lt;p&gt;See &lt;code&gt;specs/schemes&lt;/code&gt; for more details on schemes, and see &lt;code&gt;specs/schemes/exact/scheme_exact_evm.md&lt;/code&gt; to see the first proposed scheme for exact payment on EVM chains.&lt;/p&gt; 
&lt;h3&gt;Schemes vs Networks&lt;/h3&gt; 
&lt;p&gt;Because a scheme is a logical way of moving money, the way a scheme is implemented can be different for different blockchains. (ex: the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Ethereum is very different from the way you need to implement &lt;code&gt;exact&lt;/code&gt; on Solana).&lt;/p&gt; 
&lt;p&gt;Clients and facilitators must explicitly support different &lt;code&gt;(scheme, network)&lt;/code&gt; pairs in order to be able to create proper payloads and verify / settle payments.&lt;/p&gt; 
&lt;h2&gt;Running example&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt; Node.js v24 or higher&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;From &lt;code&gt;examples/typescript&lt;/code&gt; run &lt;code&gt;pnpm install&lt;/code&gt; and &lt;code&gt;pnpm build&lt;/code&gt; to ensure all dependent packages and examples are setup.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a server, i.e. express, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your server's ethereum address to get paid to into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Select a client, i.e. axios, and &lt;code&gt;cd&lt;/code&gt; into that example. Add your private key for the account making payments into the &lt;code&gt;.env&lt;/code&gt; file, and then run &lt;code&gt;pnpm dev&lt;/code&gt; in that directory.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;You should see activities in the client terminal, which will display a weather report.&lt;/p&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to the typescript directory: &lt;code&gt;cd typescript&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Install dependencies: &lt;code&gt;pnpm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run the unit tests: &lt;code&gt;pnpm test&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will run the unit tests for the x402 packages.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>googleapis/js-genai</title>
      <link>https://github.com/googleapis/js-genai</link>
      <description>&lt;p&gt;TypeScript/JavaScript SDK for Gemini and Vertex AI.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Gen AI SDK for TypeScript and JavaScript&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@google/genai"&gt;&lt;img src="https://img.shields.io/npm/dw/%40google%2Fgenai" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@google/genai"&gt;&lt;img src="https://img.shields.io/node/v/%40google%2Fgenai" alt="Node Current" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Documentation:&lt;/strong&gt; &lt;a href="https://googleapis.github.io/js-genai/"&gt;https://googleapis.github.io/js-genai/&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;The Google Gen AI JavaScript SDK is designed for TypeScript and JavaScript developers to build applications powered by Gemini. The SDK supports both the &lt;a href="https://ai.google.dev/gemini-api/docs"&gt;Gemini Developer API&lt;/a&gt; and &lt;a href="https://cloud.google.com/vertex-ai/generative-ai/docs/learn/overview"&gt;Vertex AI&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Google Gen AI SDK is designed to work with Gemini 2.0 features.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;API Key Security:&lt;/strong&gt; Avoid exposing API keys in client-side code. Use server-side implementations in production environments.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Node.js version 20 or later&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;The following are required for Vertex AI users (excluding Vertex AI Studio)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://console.cloud.google.com/project"&gt;Select&lt;/a&gt; or &lt;a href="https://cloud.google.com/resource-manager/docs/creating-managing-projects#creating_a_project"&gt;create&lt;/a&gt; a Google Cloud project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://cloud.google.com/billing/docs/how-to/modify-project"&gt;Enable billing for your project&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://console.cloud.google.com/flows/enableapi?apiid=aiplatform.googleapis.com"&gt;Enable the Vertex AI API&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://cloud.google.com/docs/authentication"&gt;Configure authentication&lt;/a&gt; for your project.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://cloud.google.com/sdk/docs/install"&gt;Install the gcloud CLI&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cloud.google.com/sdk/docs/initializing"&gt;Initialize the gcloud CLI&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Create local authentication credentials for your user account:&lt;/li&gt; 
  &lt;/ul&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;gcloud auth application-default login
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;A list of accepted authentication options are listed in &lt;a href="https://github.com/googleapis/google-auth-library-nodejs/raw/3ae120d0a45c95e36c59c9ac8286483938781f30/src/auth/googleauth.ts#L87"&gt;GoogleAuthOptions&lt;/a&gt; interface of google-auth-library-node.js GitHub repo.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install the SDK, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install @google/genai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;The simplest way to get started is to use an API key from &lt;a href="https://aistudio.google.com/apikey"&gt;Google AI Studio&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import {GoogleGenAI} from '@google/genai';
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

const ai = new GoogleGenAI({apiKey: GEMINI_API_KEY});

async function main() {
  const response = await ai.models.generateContent({
    model: 'gemini-2.0-flash-001',
    contents: 'Why is the sky blue?',
  });
  console.log(response.text);
}

main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Initialization&lt;/h2&gt; 
&lt;p&gt;The Google Gen AI SDK provides support for both the &lt;a href="https://ai.google.dev/gemini-api/docs"&gt;Google AI Studio&lt;/a&gt; and &lt;a href="https://cloud.google.com/vertex-ai/generative-ai/docs/learn/overview"&gt;Vertex AI&lt;/a&gt; implementations of the Gemini API.&lt;/p&gt; 
&lt;h3&gt;Gemini Developer API&lt;/h3&gt; 
&lt;p&gt;For server-side applications, initialize using an API key, which can be acquired from &lt;a href="https://aistudio.google.com/apikey"&gt;Google AI Studio&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { GoogleGenAI } from '@google/genai';
const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Browser&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;API Key Security:&lt;/strong&gt; Avoid exposing API keys in client-side code. Use server-side implementations in production environments.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;In the browser the initialization code is identical:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { GoogleGenAI } from '@google/genai';
const ai = new GoogleGenAI({apiKey: 'GEMINI_API_KEY'});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Vertex AI&lt;/h3&gt; 
&lt;p&gt;Sample code for VertexAI initialization:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { GoogleGenAI } from '@google/genai';

const ai = new GoogleGenAI({
    vertexai: true,
    project: 'your_project',
    location: 'your_location',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;(Optional) (NodeJS only) Using environment variables:&lt;/h3&gt; 
&lt;p&gt;For NodeJS environments, you can create a client by configuring the necessary environment variables. Configuration setup instructions depends on whether you're using the Gemini Developer API or the Gemini API in Vertex AI.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gemini Developer API:&lt;/strong&gt; Set &lt;code&gt;GOOGLE_API_KEY&lt;/code&gt; as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export GOOGLE_API_KEY='your-api-key'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Gemini API on Vertex AI:&lt;/strong&gt; Set &lt;code&gt;GOOGLE_GENAI_USE_VERTEXAI&lt;/code&gt;, &lt;code&gt;GOOGLE_CLOUD_PROJECT&lt;/code&gt; and &lt;code&gt;GOOGLE_CLOUD_LOCATION&lt;/code&gt;, as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export GOOGLE_GENAI_USE_VERTEXAI=true
export GOOGLE_CLOUD_PROJECT='your-project-id'
export GOOGLE_CLOUD_LOCATION='us-central1'
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import {GoogleGenAI} from '@google/genai';

const ai = new GoogleGenAI();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API Selection&lt;/h2&gt; 
&lt;p&gt;By default, the SDK uses the beta API endpoints provided by Google to support preview features in the APIs. The stable API endpoints can be selected by setting the API version to &lt;code&gt;v1&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To set the API version use &lt;code&gt;apiVersion&lt;/code&gt;. For example, to set the API version to &lt;code&gt;v1&lt;/code&gt; for Vertex AI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const ai = new GoogleGenAI({
    vertexai: true,
    project: 'your_project',
    location: 'your_location',
    apiVersion: 'v1'
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To set the API version to &lt;code&gt;v1alpha&lt;/code&gt; for the Gemini Developer API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;const ai = new GoogleGenAI({
    apiKey: 'GEMINI_API_KEY',
    apiVersion: 'v1alpha'
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;GoogleGenAI overview&lt;/h2&gt; 
&lt;p&gt;All API features are accessed through an instance of the &lt;code&gt;GoogleGenAI&lt;/code&gt; classes. The submodules bundle together related API methods:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://googleapis.github.io/js-genai/release_docs/classes/models.Models.html"&gt;&lt;code&gt;ai.models&lt;/code&gt;&lt;/a&gt;: Use &lt;code&gt;models&lt;/code&gt; to query models (&lt;code&gt;generateContent&lt;/code&gt;, &lt;code&gt;generateImages&lt;/code&gt;, ...), or examine their metadata.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://googleapis.github.io/js-genai/release_docs/classes/caches.Caches.html"&gt;&lt;code&gt;ai.caches&lt;/code&gt;&lt;/a&gt;: Create and manage &lt;code&gt;caches&lt;/code&gt; to reduce costs when repeatedly using the same large prompt prefix.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://googleapis.github.io/js-genai/release_docs/classes/chats.Chats.html"&gt;&lt;code&gt;ai.chats&lt;/code&gt;&lt;/a&gt;: Create local stateful &lt;code&gt;chat&lt;/code&gt; objects to simplify multi turn interactions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://googleapis.github.io/js-genai/release_docs/classes/files.Files.html"&gt;&lt;code&gt;ai.files&lt;/code&gt;&lt;/a&gt;: Upload &lt;code&gt;files&lt;/code&gt; to the API and reference them in your prompts. This reduces bandwidth if you use a file many times, and handles files too large to fit inline with your prompt.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://googleapis.github.io/js-genai/release_docs/classes/live.Live.html"&gt;&lt;code&gt;ai.live&lt;/code&gt;&lt;/a&gt;: Start a &lt;code&gt;live&lt;/code&gt; session for real time interaction, allows text + audio + video input, and text or audio output.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Samples&lt;/h2&gt; 
&lt;p&gt;More samples can be found in the &lt;a href="https://github.com/googleapis/js-genai/tree/main/sdk-samples"&gt;github samples directory&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Streaming&lt;/h3&gt; 
&lt;p&gt;For quicker, more responsive API interactions use the &lt;code&gt;generateContentStream&lt;/code&gt; method which yields chunks as they're generated:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import {GoogleGenAI} from '@google/genai';
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

const ai = new GoogleGenAI({apiKey: GEMINI_API_KEY});

async function main() {
  const response = await ai.models.generateContentStream({
    model: 'gemini-2.0-flash-001',
    contents: 'Write a 100-word poem.',
  });
  for await (const chunk of response) {
    console.log(chunk.text);
  }
}

main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Function Calling&lt;/h3&gt; 
&lt;p&gt;To let Gemini to interact with external systems, you can provide &lt;code&gt;functionDeclaration&lt;/code&gt; objects as &lt;code&gt;tools&lt;/code&gt;. To use these tools it's a 4 step&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Declare the function name, description, and parametersJsonSchema&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Call &lt;code&gt;generateContent&lt;/code&gt; with function calling enabled&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use the returned &lt;code&gt;FunctionCall&lt;/code&gt; parameters to call your actual function&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Send the result back to the model (with history, easier in &lt;code&gt;ai.chat&lt;/code&gt;) as a &lt;code&gt;FunctionResponse&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import {GoogleGenAI, FunctionCallingConfigMode, FunctionDeclaration, Type} from '@google/genai';
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

async function main() {
  const controlLightDeclaration: FunctionDeclaration = {
    name: 'controlLight',
    parametersJsonSchema: {
      type: 'object',
      properties:{
        brightness: {
          type:'number',
        },
        colorTemperature: {
          type:'string',
        },
      },
      required: ['brightness', 'colorTemperature'],
    },
  };

  const ai = new GoogleGenAI({apiKey: GEMINI_API_KEY});
  const response = await ai.models.generateContent({
    model: 'gemini-2.0-flash-001',
    contents: 'Dim the lights so the room feels cozy and warm.',
    config: {
      toolConfig: {
        functionCallingConfig: {
          // Force it to call any function
          mode: FunctionCallingConfigMode.ANY,
          allowedFunctionNames: ['controlLight'],
        }
      },
      tools: [{functionDeclarations: [controlLightDeclaration]}]
    }
  });

  console.log(response.functionCalls);
}

main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Model Context Protocol (MCP) support (experimental)&lt;/h4&gt; 
&lt;p&gt;Built-in &lt;a href="https://modelcontextprotocol.io/introduction"&gt;MCP&lt;/a&gt; support is an experimental feature. You can pass a local MCP server as a tool directly.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import { GoogleGenAI, FunctionCallingConfigMode , mcpToTool} from '@google/genai';
import { Client } from "@modelcontextprotocol/sdk/client/index.js";
import { StdioClientTransport } from "@modelcontextprotocol/sdk/client/stdio.js";

// Create server parameters for stdio connection
const serverParams = new StdioClientTransport({
  command: "npx", // Executable
  args: ["-y", "@philschmid/weather-mcp"] // MCP Server
});

const client = new Client(
  {
    name: "example-client",
    version: "1.0.0"
  }
);

// Configure the client
const ai = new GoogleGenAI({});

// Initialize the connection between client and server
await client.connect(serverParams);

// Send request to the model with MCP tools
const response = await ai.models.generateContent({
  model: "gemini-2.5-flash",
  contents: `What is the weather in London in ${new Date().toLocaleDateString()}?`,
  config: {
    tools: [mcpToTool(client)],  // uses the session, will automatically call the tool using automatic function calling
  },
});
console.log(response.text);

// Close the connection
await client.close();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate Content&lt;/h3&gt; 
&lt;h4&gt;How to structure &lt;code&gt;contents&lt;/code&gt; argument for &lt;code&gt;generateContent&lt;/code&gt;&lt;/h4&gt; 
&lt;p&gt;The SDK allows you to specify the following types in the &lt;code&gt;contents&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;h4&gt;Content&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Content&lt;/code&gt;: The SDK will wrap the singular &lt;code&gt;Content&lt;/code&gt; instance in an array which contains only the given content instance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Content[]&lt;/code&gt;: No transformation happens&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Part&lt;/h4&gt; 
&lt;p&gt;Parts will be aggregated on a singular Content, with role 'user'.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Part | string&lt;/code&gt;: The SDK will wrap the &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;Part&lt;/code&gt; in a &lt;code&gt;Content&lt;/code&gt; instance with role 'user'.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Part[] | string[]&lt;/code&gt;: The SDK will wrap the full provided list into a single &lt;code&gt;Content&lt;/code&gt; with role 'user'.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; This doesn't apply to &lt;code&gt;FunctionCall&lt;/code&gt; and &lt;code&gt;FunctionResponse&lt;/code&gt; parts, if you are specifying those, you need to explicitly provide the full &lt;code&gt;Content[]&lt;/code&gt; structure making it explicit which Parts are 'spoken' by the model, or the user. The SDK will throw an exception if you try this.&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;To handle errors raised by the API, the SDK provides this &lt;a href="https://github.com/googleapis/js-genai/raw/main/src/errors.ts"&gt;ApiError&lt;/a&gt; class.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import {GoogleGenAI} from '@google/genai';
const GEMINI_API_KEY = process.env.GEMINI_API_KEY;

const ai = new GoogleGenAI({apiKey: GEMINI_API_KEY});

async function main() {
  await ai.models.generateContent({
    model: 'non-existent-model',
    contents: 'Write a 100-word poem.',
  }).catch((e) =&amp;gt; {
    console.error('error name: ', e.name);
    console.error('error message: ', e.message);
    console.error('error status: ', e.status);
  });
}

main();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;How is this different from the other Google AI SDKs&lt;/h2&gt; 
&lt;p&gt;This SDK (&lt;code&gt;@google/genai&lt;/code&gt;) is Google Deepmind’s "vanilla" SDK for its generative AI offerings, and is where Google Deepmind adds new AI features.&lt;/p&gt; 
&lt;p&gt;Models hosted either on the &lt;a href="https://cloud.google.com/vertex-ai/generative-ai/docs/learn/overview"&gt;Vertex AI platform&lt;/a&gt; or the &lt;a href="https://ai.google.dev/gemini-api/docs"&gt;Gemini Developer platform&lt;/a&gt; are accessible through this SDK.&lt;/p&gt; 
&lt;p&gt;Other SDKs may be offering additional AI frameworks on top of this SDK, or may be targeting specific project environments (like Firebase).&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;@google/generative_language&lt;/code&gt; and &lt;code&gt;@google-cloud/vertexai&lt;/code&gt; SDKs are previous iterations of this SDK and are no longer receiving new Gemini 2.0+ features.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AIDC-AI/ComfyUI-Copilot</title>
      <link>https://github.com/AIDC-AI/ComfyUI-Copilot</link>
      <description>&lt;p&gt;An AI-powered custom node for ComfyUI designed to enhance workflow automation and provide intelligent assistance&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/README_CN.md"&gt;中文&lt;/a&gt; ｜ English&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;🎯 ComfyUI-Copilot: Your Intelligent Assistant for ComfyUI&lt;/h1&gt; 
 &lt;!-- Enhancing Image Generation Development with Smart Assistance --&gt; 
 &lt;h4 align="center"&gt; 
  &lt;div align="center"&gt; 
   &lt;img src="https://img.shields.io/badge/Version-1.0.0-blue.svg?sanitize=true" alt="版本" /&gt; 
   &lt;img src="https://img.shields.io/github/stars/AIDC-AI/ComfyUI-Copilot?color=yellow" alt="星标" /&gt; 
   &lt;a href="https://discord.gg/7H9dMCvuMp"&gt; &lt;img src="https://img.shields.io/badge/Discord-%20%235462eb?logo=discord&amp;amp;logoColor=%20%23f5f5f5" alt="Discord" /&gt; &lt;/a&gt; 
   &lt;a href="https://github.com/AIDC-AI/ComfyUI-Copilot/raw/main/assets/qrcode.png"&gt; &lt;img src="https://img.shields.io/badge/WeChat-brightgreen?logo=wechat&amp;amp;logoColor=white" alt="WeChat" /&gt; &lt;/a&gt; 
   &lt;a href="https://x.com/Pixelle_AI" target="_blank" rel="noopener"&gt; &lt;img src="https://img.shields.io/twitter/follow/Pixelle_AI?style=social" alt="Follow on X" /&gt; &lt;/a&gt; 
   &lt;a href="https://aclanthology.org/2025.acl-demo.61.pdf"&gt; &lt;img src="https://img.shields.io/badge/Paper-ACL2025-B31B1B?logo=arXiv&amp;amp;logoColor=white" alt="Paper" /&gt; &lt;/a&gt; 
   &lt;img src="https://img.shields.io/badge/python-3.10%2B-purple.svg?sanitize=true" alt="Python" /&gt; 
   &lt;img src="https://img.shields.io/badge/License-MIT-green.svg?sanitize=true" alt="许可证" /&gt; 
  &lt;/div&gt;&lt;/h4&gt; 
 &lt;p&gt;👾 &lt;em&gt;&lt;strong&gt;Alibaba International Digital Commerce&lt;/strong&gt;&lt;/em&gt; 👾&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/4b5806b8-dd34-4219-ac9f-6896115c5600"&gt;https://github.com/user-attachments/assets/4b5806b8-dd34-4219-ac9f-6896115c5600&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;ComfyUI-Copilot&lt;/strong&gt; is an AIGC intelligent assistant built on ComfyUI that provides comprehensive support for tedious workflow building, ComfyUI-related questions, parameter optimization and iteration processes! It streamlines the debugging and deployment of AI algorithms, making creative workflows more efficient and effortless.&lt;/p&gt; 
&lt;h3&gt;🎉 &lt;strong&gt;Major Update on 2025.08.14：Evolving into a Workflow Development Coworker&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;The newly released &lt;strong&gt;ComfyUI-Copilot v2.0&lt;/strong&gt; evolves from a "helper tool" into a "development partner"—not just assisting with workflow development, but capable of autonomously completing development tasks. We now cover the entire workflow lifecycle, including generation, debugging, rewriting, and parameter tuning, aiming to deliver a significantly enhanced creative experience. Key new features include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🔧 &lt;strong&gt;One-Click Debug:&lt;/strong&gt;：Automatically detects errors in your workflow, precisely identifies issues, and provides repair suggestions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;Workflow Rewriting&lt;/strong&gt;：Optimizes the current workflow based on your description, such as adjusting parameters, adding nodes, and improving logic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;Enhanced Workflow Generation&lt;/strong&gt;：Understands your requirements more accurately and generates tailored workflows, lowering the barrier to entry for beginners.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧠 &lt;strong&gt;Upgraded Agent Architecture&lt;/strong&gt;：Now aware of your local ComfyUI environment, Copilot delivers optimized, personalized solutions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✨ &lt;strong&gt;Try the brand-new ComfyUI-Copilot v2.0 now and embark on an efficient creative journey!&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/Framework-v3.png" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔥 Core Features (V2.0.0)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Generate First Version Workflow&lt;/strong&gt;: Based on your text description, we provide workflows that meet your needs, returning 3 high-quality workflows from our library and 1 AI-generated workflow. You can import them into ComfyUI with one click to start generating images.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Simply type in the input box: I want a workflow for xxx.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/工作流生成.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="2"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Workflow Debug&lt;/strong&gt;: Automatically analyze errors in workflows, help you fix parameter errors and workflow connection errors, and provide optimization suggestions.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Among the 4 workflows returned above, when you select one and click Accept, it will be imported into the ComfyUI canvas. At this time, you can click the Debug button to start debugging.&lt;/li&gt; 
   &lt;li&gt;There is a Debug button in the upper right corner of the input box. Click it to directly debug the workflow on the current canvas.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/debug.gif" /&gt; - If a missing model is identified, it will automatically prompt you to download the model. 
&lt;div align="center"&gt; 
 &lt;img src="assets/Debug模型下载.jpg" width="50%" /&gt; 
&lt;/div&gt; - You can also directly click the Model Download button below, enter the model keyword, and select the required model from the recommended models. 
&lt;img src="assets/模型下载.jpg" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="3"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Unsatisfied with Previous Workflow Results?&lt;/strong&gt;: Tell us what you're not satisfied with, and let us help you modify the workflow, add nodes, modify parameters, and optimize workflow structure.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: Help me add xxx to the current canvas.&lt;/li&gt; 
   &lt;li&gt;Note: If the model is new after May 2025, such as wan2.2, it may cause the LLM to fail to understand and the process to interrupt. You can try adding expert experience to help the LLM better generate workflows.&lt;/li&gt; 
   &lt;li&gt;The workflow rewrite is difficult, and it carries a lot of context, so you need to control the context length, otherwise it is easy to interrupt. It is recommended to often click the Clear Context button in the upper right corner to control the conversation length.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/改写.gif" /&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/expert_add.jpg" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="4"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Parameter Tuning Too Painful?&lt;/strong&gt;: We provide parameter tuning tools. You can set parameter ranges, and the system will automatically batch execute different parameter combinations and generate visual comparison results to help you quickly find the optimal parameter configuration.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Switch to the GenLab tab and follow the guidance. Note that the workflow must be able to run normally at this time to batch generate and evaluate parameters.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/Genlab.gif" /&gt; 
&lt;p&gt;Want ComfyUI-Copilot to assist you in workflow development?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="5"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Node Recommendations&lt;/strong&gt;: Based on your description, recommend nodes you might need and provide recommendation reasons.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: I want a node for xxx.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/节点推荐.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="6"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Node Query System&lt;/strong&gt;: Select a node on the canvas, click the node query button to explore the node in depth, view its description, parameter definitions, usage tips, and downstream workflow recommendations.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: What's the usage, input and output of node xxx.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/节点信息查询.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="7"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Model Recommendations&lt;/strong&gt;: Based on your text requirements, Copilot helps you find base models and 'lora'.&lt;/li&gt; 
  &lt;/ol&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Type in the input box: I want a Lora that generates xxx images.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/模型推荐.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;ol start="8"&gt; 
   &lt;li&gt;💎 &lt;strong&gt;Downstream Node Recommendations&lt;/strong&gt;: After you select a node on the canvas, based on the existing nodes on your canvas, recommend downstream subgraphs you might need.&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="assets/下游节点推荐.gif" /&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Repository Overview&lt;/strong&gt;: Visit the &lt;a href="https://github.com/AIDC-AI/ComfyUI-Copilot"&gt;GitHub Repository&lt;/a&gt; to access the complete codebase.&lt;/p&gt; 
&lt;h4&gt;Installation&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Firstly, use git to install ComfyUI-Copilot in the ComfyUI custom_nodes directory:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes
git clone git@github.com:AIDC-AI/ComfyUI-Copilot.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes
git clone https://github.com/AIDC-AI/ComfyUI-Copilot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Secondely, in the ComfyUI custom_nodes directory, find the ComfyUI-Copilot directory and install ComfyUI-Copilot dependencies&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ComfyUI/custom_nodes/ComfyUI-Copilot
pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are a Windows user:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python_embeded\python.exe -m pip install -r ComfyUI\custom_nodes\ComfyUI-Copilot\requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Using ComfyUI Manager&lt;/strong&gt;: Open ComfyUI Manager, click on Custom Nodes Manager, search for ComfyUI-Copilot, and click the install button, remember to update the ComfyUI-Copilot to the latest version. 
  &lt;ul&gt; 
   &lt;li&gt;The Manager requires permissions. To prevent errors during execution, it's recommended to run ComfyUI with "sudo python main.py".&lt;/li&gt; 
   &lt;li&gt;If you encounter an error during the update, try to delete the folder or click uninstall and then reinstall.&lt;/li&gt; 
   &lt;li&gt;If an error occurs during execution, it's recommended to use the bottom panel button in the upper right corner to trigger the Manager to install ComfyUI-Copilot. An error log will appear below. Take a screenshot and post it to your git issue.&lt;/li&gt; 
   &lt;li&gt;Using the Manager installation method is prone to bugs, so it's recommended to use the git installation method above.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager.png" /&gt; 
&lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/comfyui_manager_install.png" /&gt; 
&lt;h4&gt;&lt;strong&gt;Activation&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;After running the ComfyUI project, find the Copilot activation button on the left side of the panel to launch its service. &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/start.jpg" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;API Key Generation&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Click the * button, enter your email address in the popup window, and the API Key will be automatically sent to your email address later. After receiving the API Key, paste it into the input box, click the save button, and you can activate Copilot. &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/keygen.png" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Note&lt;/strong&gt;：&lt;/h4&gt; 
&lt;p&gt;This project is continuously updated. Please update to the latest code to get new features. You can use git pull to get the latest code, or click "Update" in the ComfyUI Manager plugin.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributions&lt;/h2&gt; 
&lt;p&gt;We welcome any form of contribution! Feel free to make issues, pull requests, or suggest new features.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📞 Contact Us&lt;/h2&gt; 
&lt;p&gt;For any queries or suggestions, please feel free to contact: &lt;a href="mailto:ComfyUI-Copilot@service.alibaba.com"&gt;ComfyUI-Copilot@service.alibaba.com&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/qrcode.png" width="20%" /&gt; 
 &lt;p&gt;WeChat&lt;/p&gt; 
 &lt;img src="https://raw.githubusercontent.com/AIDC-AI/ComfyUI-Copilot/main/assets/discordqrcode.png" width="20%" /&gt; 
 &lt;p&gt;Discord&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;📚 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://opensource.org/licenses/MIT"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#AIDC-AI/ComfyUI-Copilot&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=AIDC-AI/ComfyUI-Copilot&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>heroui-inc/heroui</title>
      <link>https://github.com/heroui-inc/heroui</link>
      <description>&lt;p&gt;🚀 Beautiful, fast and modern React UI library. (Previously NextUI)&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://heroui.com"&gt; &lt;img width="20%" src="https://raw.githubusercontent.com/heroui-inc/heroui/main/apps/docs/public/isotipo.png" alt="heorui" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://heroui.com"&gt;HeroUI&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://heroui.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/heroui-inc/heroui/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/npm/l/@heroui/react?style=flat" alt="License" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/jrgarciadev/nextui"&gt; &lt;img src="https://codecov.io/gh/jrgarciadev/nextui/branch/main/graph/badge.svg?token=QJF2QKR5N4" alt="codecov badge" /&gt; &lt;/a&gt; 
 &lt;!-- &lt;a href="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml"&gt;
    &lt;img src="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml/badge.svg" alt="CI/CD heroui"&gt;
  &lt;/a&gt; --&gt; &lt;a href="https://www.npmjs.com/package/@heroui/react"&gt; &lt;img src="https://img.shields.io/npm/dm/@heroui/react.svg?style=flat-round" alt="npm downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label="heroui learn" href="https://heroui.com/learn"&gt;&lt;/a&gt;&lt;a href="https://heroui.com/guide"&gt;https://heroui.com/guide&lt;/a&gt; to get started with HeroUI.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://heroui.com/docs"&gt;https://heroui.com/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Storybook&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://storybook.heroui.com/"&gt;https://storybook.heroui.com&lt;/a&gt; to view the storybook for all components.&lt;/p&gt; 
&lt;h2&gt;Canary Release&lt;/h2&gt; 
&lt;p&gt;Canary versions are available after every merge into &lt;code&gt;canary&lt;/code&gt; branch. You can install the packages with the tag &lt;code&gt;canary&lt;/code&gt; in npm to use the latest changes before the next production release.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://canary.heroui.com/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://canary-sb.heroui.com"&gt;Storybook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;We're excited to see the community adopt HeroUI, raise issues, and provide feedback. Whether it's a feature request, bug report, or a project to showcase, please get involved!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/9b6yyZKmH4"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/hero_ui"&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heroui-inc/heroui/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are always welcome!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for ways to get started.&lt;/p&gt; 
&lt;p&gt;Please adhere to this project's &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>