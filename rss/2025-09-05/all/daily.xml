<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Thu, 04 Sep 2025 01:30:35 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>LukeGus/Termix</title>
      <link>https://github.com/LukeGus/Termix</link>
      <description>&lt;p&gt;Termix is a web-based server management platform with SSH terminal, tunneling, and file editing capabilities.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Repo Stats&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://flagcdn.com/us.svg?sanitize=true" alt="English" width="24" height="16" /&gt; English | &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/README-CN.md"&gt;&lt;img src="https://flagcdn.com/cn.svg?sanitize=true" alt="中文" width="24" height="16" /&gt; 中文&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/stars/LukeGus/Termix?style=flat&amp;amp;label=Stars" alt="GitHub Repo stars" /&gt; &lt;img src="https://img.shields.io/github/forks/LukeGus/Termix?style=flat&amp;amp;label=Forks" alt="GitHub forks" /&gt; &lt;img src="https://img.shields.io/github/v/release/LukeGus/Termix?style=flat&amp;amp;label=Release" alt="GitHub Release" /&gt; &lt;a href="https://discord.gg/jVQGdvHDrf"&gt;&lt;img alt="Discord" src="https://img.shields.io/discord/1347374268253470720" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Top Technologies&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-React-61DBFB?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=react&amp;amp;logoColor=61DBFB" alt="React Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-TypeScript-3178C6?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=typescript&amp;amp;logoColor=3178C6" alt="TypeScript Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Node.js-3C873A?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=node.js&amp;amp;logoColor=3C873A" alt="Node.js Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Vite-646CFF?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=vite&amp;amp;logoColor=646CFF" alt="Vite Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-TailwindCSS-38B2AC?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=tailwindcss&amp;amp;logoColor=38B2AC" alt="Tailwind CSS Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Docker-2496ED?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=docker&amp;amp;logoColor=2496ED" alt="Docker Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-SQLite-003B57?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=sqlite&amp;amp;logoColor=003B57" alt="SQLite Badge" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/LukeGus/Termix/main/#"&gt;&lt;img src="https://img.shields.io/badge/-Radix%20UI-161618?style=flat-square&amp;amp;labelColor=black&amp;amp;logo=radixui&amp;amp;logoColor=161618" alt="Radix UI Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/LukeGus/Termix"&gt; &lt;img alt="Termix Banner" src="https://raw.githubusercontent.com/LukeGus/Termix/main/repo-images/HeaderImage.png" style="width: auto; height: auto;" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;If you would like, you can support the project here!&lt;br /&gt; &lt;a href="https://github.com/sponsors/LukeGus"&gt;&lt;img src="https://img.shields.io/badge/Sponsor-LukeGus-181717?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="GitHub Sponsor" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/LukeGus/Termix"&gt; &lt;img alt="Termix Banner" src="https://raw.githubusercontent.com/LukeGus/Termix/main/public/icon.svg?sanitize=true" style="width: 250px; height: 250px;" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Termix is an open-source, forever-free, self-hosted all-in-one server management platform. It provides a web-based solution for managing your servers and infrastructure through a single, intuitive interface. Termix offers SSH terminal access, SSH tunneling capabilities, and remote file editing, with many more tools to come.&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Terminal Access&lt;/strong&gt; - Full-featured terminal with split-screen support (up to 4 panels) and tab system&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Tunnel Management&lt;/strong&gt; - Create and manage SSH tunnels with automatic reconnection and health monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Remote File Editor&lt;/strong&gt; - Edit files directly on remote servers with syntax highlighting, file management features (uploading, removing, renaming, deleting files)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SSH Host Manager&lt;/strong&gt; - Save, organize, and manage your SSH connections with tags and folders&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Server Stats&lt;/strong&gt; - View CPU, memory, and HDD usage on any SSH server&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Authentication&lt;/strong&gt; - Secure user management with admin controls and OIDC and 2FA (TOTP) support&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern UI&lt;/strong&gt; - Clean interface built with React, Tailwind CSS, and Shadcn&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Languages&lt;/strong&gt; - Built-in support for English and Chinese&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Planned Features&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Improved Admin Control&lt;/strong&gt; - Give more fine-grained control over user and admin permissions, share hosts, etc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Theming&lt;/strong&gt; - Modify theming for all tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Improved Terminal Support&lt;/strong&gt; - Add more terminal protocols such as VNC and RDP (anyone who has experience in integrating RDP into a web-application similar to Apache Guacamole, please contact me by creating an issue)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mobile Support&lt;/strong&gt; - Support a mobile app or version of the Termix website to manage servers from your phone&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;p&gt;Visit the Termix &lt;a href="https://docs.termix.site/install"&gt;Docs&lt;/a&gt; for more information on how to install Termix. Otherwise, view a sample docker-compose file here:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  termix:
    image: ghcr.io/lukegus/termix:latest
    container_name: termix
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - termix-data:/app/data
    environment:
      PORT: "8080"

volumes:
  termix-data:
    driver: local 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Support&lt;/h1&gt; 
&lt;p&gt;If you need help with Termix, you can join the &lt;a href="https://discord.gg/jVQGdvHDrf"&gt;Discord&lt;/a&gt; server and visit the support channel. You can also open an issue or open a pull request on the &lt;a href="https://github.com/LukeGus/Termix/issues"&gt;GitHub&lt;/a&gt; repo.&lt;/p&gt; 
&lt;h1&gt;Show-off&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="./repo-images/Image 1.png" width="400" alt="Termix Demo 1" /&gt; &lt;img src="./repo-images/Image 2.png" width="400" alt="Termix Demo 2" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="./repo-images/Image 3.png" width="250" alt="Termix Demo 3" /&gt; &lt;img src="./repo-images/Image 4.png" width="250" alt="Termix Demo 4" /&gt; &lt;img src="./repo-images/Image 5.png" width="250" alt="Termix Demo 5" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;video src="https://github.com/user-attachments/assets/f9caa061-10dc-4173-ae7d-c6d42f05cf56" width="800" controls&gt;
   Your browser does not support the video tag. 
 &lt;/video&gt; &lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Distributed under the Apache License Version 2.0. See LICENSE for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>carthage-software/mago</title>
      <link>https://github.com/carthage-software/mago</link>
      <description>&lt;p&gt;Mago is a toolchain for PHP that aims to provide a set of tools to help developers write better code.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/carthage-software/mago/main/docs/public/assets/banner.svg?sanitize=true" alt="Mago Banner" width="600" /&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;An extremely fast PHP linter, formatter, and static analyzer, written in Rust.&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/carthage-software/mago/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/carthage-software/mago/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/carthage-software/mago/actions/workflows/cd.yml"&gt;&lt;img src="https://github.com/carthage-software/mago/actions/workflows/cd.yml/badge.svg?sanitize=true" alt="CD Status" /&gt;&lt;/a&gt; &lt;a href="https://crates.io/crates/mago"&gt;&lt;img src="https://img.shields.io/crates/v/mago.svg?sanitize=true" alt="Crates.io" /&gt;&lt;/a&gt; &lt;a href="https://packagist.org/packages/carthage-software/mago"&gt;&lt;img src="https://poser.pugx.org/carthage-software/mago/v" alt="Latest Stable Version for PHP" /&gt;&lt;/a&gt; &lt;a href="https://packagist.org/packages/carthage-software/mago"&gt;&lt;img src="https://poser.pugx.org/carthage-software/mago/v/unstable" alt="Latest Unstable Version for PHP" /&gt;&lt;/a&gt; &lt;a href="https://packagist.org/packages/carthage-software/mago"&gt;&lt;img src="http://poser.pugx.org/carthage-software/mago/downloads" alt="Total Composer Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/carthage-software/mago/raw/main/LICENSE-MIT"&gt;&lt;img src="https://img.shields.io/crates/l/mago.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;Mago&lt;/strong&gt; is a comprehensive toolchain for PHP that helps developers write better code. Inspired by the Rust ecosystem, Mago brings speed, reliability, and an exceptional developer experience to PHP projects of all sizes.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/#our-sponsors"&gt;Our Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/#inspiration--acknowledgements"&gt;Inspiration &amp;amp; Acknowledgements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The most common way to install Mago on macOS and Linux is by using our shell script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl --proto '=https' --tlsv1.2 -sSf https://carthage.software/mago.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For all other installation methods, including Homebrew, Composer, and Cargo, please refer to our official &lt;strong&gt;&lt;a href="https://mago.carthage.software/guide/installation"&gt;Installation Guide&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get started with Mago and learn how to configure your project, please visit our &lt;strong&gt;&lt;a href="https://mago.carthage.software/guide/getting-started"&gt;Getting Started Guide&lt;/a&gt;&lt;/strong&gt; in the official documentation.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡️ Extremely Fast: Built in Rust for maximum performance.&lt;/li&gt; 
 &lt;li&gt;🔍 Lint: Identify issues in your codebase with customizable rules.&lt;/li&gt; 
 &lt;li&gt;🔬 Static Analysis: Perform deep analysis of your codebase to catch potential type errors and bugs.&lt;/li&gt; 
 &lt;li&gt;🛠️ Automated Fixes: Apply fixes for many lint issues automatically.&lt;/li&gt; 
 &lt;li&gt;📜 Formatting: Automatically format your code to adhere to best practices and style guides.&lt;/li&gt; 
 &lt;li&gt;🧠 Semantic Checks: Ensure code correctness with robust semantic analysis.&lt;/li&gt; 
 &lt;li&gt;🌳 AST Visualization: Explore your code’s structure with Abstract Syntax Tree (AST) parsing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- START-SPONSORS --&gt; 
&lt;h2&gt;Our Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/jasonrm" title="Jason R. McNeil"&gt;&lt;kbd&gt;&lt;img src="https://avatars.githubusercontent.com/u/39949?u=69c0e4fb08c439250978d41dbc3371d2f0609b98&amp;amp;v=4&amp;amp;s=160" width="80" height="80" alt="Jason R. McNeil" /&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;a href="https://github.com/vvvinceocam" title="Vincent Berset"&gt;&lt;kbd&gt;&lt;img src="https://avatars.githubusercontent.com/u/5173120?u=95efc76cd8fc804536dc6dd25781a95b650bf902&amp;amp;v=4&amp;amp;s=160" width="80" height="80" alt="Vincent Berset" /&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p align="center"&gt;&lt;a href="https://github.com/TicketSwap" title="TicketSwap"&gt;&lt;kbd&gt;&lt;img src="https://avatars.githubusercontent.com/u/5766233?v=4&amp;amp;s=120" width="60" height="60" alt="TicketSwap" /&gt;&lt;/kbd&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/SPONSORS.md"&gt;See all sponsors&lt;/a&gt;&lt;/p&gt; 
&lt;!-- END-SPONSORS --&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Mago is a community-driven project, and we welcome contributions! Whether you're reporting bugs, suggesting features, writing documentation, or submitting code, your help is valued.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See our &lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to get started.&lt;/li&gt; 
 &lt;li&gt;Join the discussion on &lt;a href="https://discord.gg/mwyyjr27eu"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Inspiration &amp;amp; Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Mago stands on the shoulders of giants. Our design and functionality are heavily inspired by pioneering tools in both the Rust and PHP ecosystems.&lt;/p&gt; 
&lt;h3&gt;Inspirations:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rust-lang/rust-clippy"&gt;Clippy&lt;/a&gt;: For its comprehensive linting approach.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oxc-project/oxc/"&gt;OXC&lt;/a&gt;: A major inspiration for building a high-performance toolchain in Rust.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slackhq/hakana/"&gt;Hakana&lt;/a&gt;: For its deep static analysis capabilities.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Acknowledgements:&lt;/h3&gt; 
&lt;p&gt;We deeply respect the foundational work of tools like &lt;a href="https://github.com/PHP-CS-Fixer/PHP-CS-Fixer"&gt;PHP-CS-Fixer&lt;/a&gt;, &lt;a href="https://github.com/vimeo/psalm"&gt;Psalm&lt;/a&gt;, &lt;a href="https://github.com/phpstan/phpstan"&gt;PHPStan&lt;/a&gt;, and &lt;a href="https://github.com/squizlabs/PHP_CodeSniffer"&gt;PHP_CodeSniffer&lt;/a&gt;. While Mago aims to offer a unified and faster alternative, these tools paved the way for modern PHP development.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Mago is dual-licensed under your choice of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MIT License (&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/LICENSE-MIT"&gt;LICENSE-MIT&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Apache License, Version 2.0 (&lt;a href="https://raw.githubusercontent.com/carthage-software/mago/main/LICENSE-APACHE"&gt;LICENSE-APACHE&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>fullstackhero/dotnet-starter-kit</title>
      <link>https://github.com/fullstackhero/dotnet-starter-kit</link>
      <description>&lt;p&gt;Production Grade Cloud-Ready .NET 9 Starter Kit (Web API + Blazor Client) with Multitenancy Support, and Clean/Modular Architecture that saves roughly 200+ Development Hours! All Batteries Included.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;FullStackHero .NET 9 Starter Kit 🚀&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;With ASP.NET Core Web API &amp;amp; Blazor Client&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;FullStackHero .NET Starter Kit is a starting point for your next &lt;code&gt;.NET 9 Clean Architecture&lt;/code&gt; Solution that incorporates the most essential packages and features your projects will ever need including out-of-the-box Multi-Tenancy support. This project can save well over 200+ hours of development time for your team.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/main/assets/fullstackhero-dotnet-starter-kit.png" alt="FullStackHero .NET Starter Kit" /&gt;&lt;/p&gt; 
&lt;h1&gt;Important&lt;/h1&gt; 
&lt;p&gt;This project is currently work in progress. The NuGet package is not yet available for v2. For now, you can fork this repository to try it out. &lt;a href="https://x.com/iammukeshm"&gt;Follow @iammukeshm on X&lt;/a&gt; for project related updates.&lt;/p&gt; 
&lt;h1&gt;Quick Start Guide&lt;/h1&gt; 
&lt;p&gt;As the project is still in beta, the NuGet packages are not yet available. You can try out the project by pulling the code directly from this repository.&lt;/p&gt; 
&lt;p&gt;Prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET 9 SDK installed.&lt;/li&gt; 
 &lt;li&gt;Visual Studio IDE.&lt;/li&gt; 
 &lt;li&gt;Docker Desktop.&lt;/li&gt; 
 &lt;li&gt;PostgreSQL instance running on your machine or docker container.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please follow the below instructions.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork this repository to your local.&lt;/li&gt; 
 &lt;li&gt;Open up the &lt;code&gt;./src/FSH.Starter.sln&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;This would up the FSH Starter solution which has 3 main components. 
  &lt;ol&gt; 
   &lt;li&gt;Aspire Dashboard (set as the default project)&lt;/li&gt; 
   &lt;li&gt;Web API&lt;/li&gt; 
   &lt;li&gt;Blazor&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;Now we will have to set the connection string for the API. Navigate to &lt;code&gt;./src/api/server/appsettings.Development.json&lt;/code&gt; and change the &lt;code&gt;ConnectionString&lt;/code&gt; under &lt;code&gt;DatabaseOptions&lt;/code&gt;. Save it.&lt;/li&gt; 
 &lt;li&gt;Once that is done, run the application via Visual Studio, with Aspire as the default project. This will open up Aspire Dashboard at &lt;code&gt;https://localhost:7200/&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;API will be running at &lt;code&gt;https://localhost:7000/swagger/index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Blazor will be running at &lt;code&gt;https://localhost:7100/&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;🔎 The Project&lt;/h1&gt; 
&lt;h1&gt;✨ Technologies&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;.NET 9&lt;/li&gt; 
 &lt;li&gt;Entity Framework Core 9&lt;/li&gt; 
 &lt;li&gt;Blazor&lt;/li&gt; 
 &lt;li&gt;MediatR&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;li&gt;Redis&lt;/li&gt; 
 &lt;li&gt;FluentValidation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;👨‍🚀 Architecture&lt;/h1&gt; 
&lt;h1&gt;📬 Service Endpoints&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Endpoint&lt;/th&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/token&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;POST&lt;/td&gt; 
   &lt;td&gt;Generates Token.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;🧪 Running Locally&lt;/h1&gt; 
&lt;h1&gt;🐳 Docker Support&lt;/h1&gt; 
&lt;h1&gt;☁️ Deploying to AWS&lt;/h1&gt; 
&lt;h1&gt;🤝 Contributing&lt;/h1&gt; 
&lt;h1&gt;🍕 Community&lt;/h1&gt; 
&lt;p&gt;Thanks to the community who contribute to this repository! &lt;a href="https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/main/CONTRIBUTING.md"&gt;Submit your PR and join the elite list!&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/fullstackhero/dotnet-starter-kit/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=fullstackhero/dotnet-starter-kit" alt="FullStackHero .NET Starter Kit Contributors" title="FullStackHero .NET Starter Kit Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;📝 Notes&lt;/h1&gt; 
&lt;h2&gt;Add Migrations&lt;/h2&gt; 
&lt;p&gt;Navigate to &lt;code&gt;./api/server&lt;/code&gt; and run the following EF CLI commands.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet ef migrations add "Add Identity Schema" --project .././migrations/postgresql/ --context IdentityDbContext -o Identity
dotnet ef migrations add "Add Tenant Schema" --project .././migrations/postgresql/ --context TenantDbContext -o Tenant
dotnet ef migrations add "Add Todo Schema" --project .././migrations/postgresql/ --context TodoDbContext -o Todo
dotnet ef migrations add "Add Catalog Schema" --project .././migrations/postgresql/ --context CatalogDbContext -o Catalog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What's Pending?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Few Identity Endpoints&lt;/li&gt; 
 &lt;li&gt;Blazor Client&lt;/li&gt; 
 &lt;li&gt;File Storage Service&lt;/li&gt; 
 &lt;li&gt;NuGet Generation Pipeline&lt;/li&gt; 
 &lt;li&gt;Source Code Generation&lt;/li&gt; 
 &lt;li&gt;Searching / Sorting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;⚖️ LICENSE&lt;/h1&gt; 
&lt;p&gt;MIT © &lt;a href="https://raw.githubusercontent.com/fullstackhero/dotnet-starter-kit/main/LICENSE"&gt;fullstackhero&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TapXWorld/ChinaTextbook</title>
      <link>https://github.com/TapXWorld/ChinaTextbook</link>
      <description>&lt;p&gt;所有小初高、大学PDF教材。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;项目的由来&lt;/h2&gt; 
&lt;p&gt;虽然国内教育网站已提供免费资源，但大多数普通人获取信息的途径依然受限。有些人利用这一点，在某站上销售这些带有私人水印的资源。为了应对这种情况，我计划将这些资源集中并开源，以促进义务教育的普及和消除地区间的教育贫困。&lt;/p&gt; 
&lt;p&gt;还有一个最重要的原因是，希望海外华人能够让自己的孩子继续了解国内教育。&lt;/p&gt; 
&lt;h2&gt;学习数学&lt;/h2&gt; 
&lt;p&gt;希望未来出现更多不是为了考学而读书的人。&lt;/p&gt; 
&lt;h3&gt;小学数学&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;一年级上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%80%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;一年级下册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;二年级上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%BA%8C%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;二年级下册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;三年级上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%89%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;三年级下册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E5%9B%9B%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;四年级上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%9B%9B%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;四年级下册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E4%BA%94%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;五年级上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%BA%94%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;五年级下册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%20%C2%B7%20%E6%95%B0%E5%AD%A6%E5%85%AD%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;六年级上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%B0%8F%E5%AD%A6/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AD%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;六年级下册&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;初中数学&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B8%83%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%83%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;初一上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B8%83%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B8%83%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;初一下册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E5%85%AB%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AB%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;初二上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E5%85%AB%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E5%85%AB%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;初二下册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B9%9D%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B9%9D%E5%B9%B4%E7%BA%A7%E4%B8%8A%E5%86%8C.pdf"&gt;初三上册&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/raw/master/%E5%88%9D%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE/%E4%B9%9D%E5%B9%B4%E7%BA%A7/%E4%B9%89%E5%8A%A1%E6%95%99%E8%82%B2%E6%95%99%E7%A7%91%E4%B9%A6%C2%B7%E6%95%B0%E5%AD%A6%E4%B9%9D%E5%B9%B4%E7%BA%A7%E4%B8%8B%E5%86%8C.pdf"&gt;初三下册&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;高中数学&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E9%AB%98%E4%B8%AD/%E6%95%B0%E5%AD%A6/%E4%BA%BA%E6%95%99%E7%89%88%EF%BC%88A%E7%89%88%EF%BC%89%EF%BC%88%E4%B8%BB%E7%BC%96%EF%BC%9A%E7%AB%A0%E5%BB%BA%E8%B7%83%26%E6%9D%8E%E5%A2%9E%E6%B2%AA%EF%BC%89-%E4%BA%BA%E6%B0%91%E6%95%99%E8%82%B2%E5%87%BA%E7%89%88%E7%A4%BE"&gt;目录&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;大学数学&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6/%E5%90%8C%E6%B5%8E%E5%A4%A7%E5%AD%A6%E9%AB%98%E7%AD%89%E6%95%B0%E5%AD%A6%E7%AC%AC%E4%B8%83%E7%89%88"&gt;高等数学&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0"&gt;线性代数&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6"&gt;离散数学&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook/tree/master/%E5%A4%A7%E5%AD%A6/%E6%A6%82%E7%8E%87%E8%AE%BA"&gt;概率论&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="http://www.dxsx.net/index.php"&gt;更多数学资料-(大学数学网)&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;/h2&gt; 
&lt;h2&gt;问题：如何合并被拆分的文件？&lt;/h2&gt; 
&lt;p&gt;由于 GitHub 对单个文件的上传有最大限制，超过 100MB 的文件会被拒绝上传，超过 50MB 的文件上传时会收到警告。因此，文件大小超过 50MB 的文件会被拆分成每个 35MB 的多个文件。&lt;/p&gt; 
&lt;h3&gt;示例&lt;/h3&gt; 
&lt;p&gt;文件被拆分的示例：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.1&lt;/li&gt; 
 &lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;解决办法&lt;/h3&gt; 
&lt;p&gt;要合并这些被拆分的文件，您只需执行以下步骤(其他操作系统同理)：&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;将合并程序 &lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt; 下载到包含 PDF 文件的文件夹中。&lt;/li&gt; 
 &lt;li&gt;确保 &lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt; 和被拆分的 PDF 文件在同一目录下。&lt;/li&gt; 
 &lt;li&gt;双击 &lt;code&gt;mergePDFs-windows-amd64.exe&lt;/code&gt; 程序即可自动完成文件合并。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;下载方式&lt;/h3&gt; 
&lt;p&gt;您可以通过以下链接，下载文件合并程序：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/TapXWorld/ChinaTextbook-tools/releases"&gt;下载文件合并程序&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;文件和程序示例&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;mergePDFs-windows-amd64.exe&lt;/li&gt; 
 &lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.1&lt;/li&gt; 
 &lt;li&gt;义务教育教科书 · 数学一年级上册.pdf.2&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;重新下载&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;如果您位于内地，并且网络不错，想重新下载，您可以使用 &lt;a href="https://github.com/happycola233/tchMaterial-parser"&gt;tchMaterial-parser&lt;/a&gt; 项目（鼓励开源），进行重新下载。&lt;/li&gt; 
 &lt;li&gt;如果您位于国外，和内地网络通信速度较慢，建议使用本存储库进行签出。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;教材捐献&lt;/h2&gt; 
&lt;p&gt;如果这个项目帮助您免费获取教育资源，请考虑支持我们推广开放教育的努力！您的捐献将帮助我们维护和扩展这个资源库。&lt;/p&gt; 
&lt;p&gt;加入我们的 Telegram 社区，获取最新动态并分享您的想法：&lt;a href="https://t.me/+1V6WjEq8WEM4MDM1"&gt;https://t.me/+1V6WjEq8WEM4MDM1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;支持我&lt;/h2&gt; 
&lt;p&gt;如果您觉得这个项目对您有帮助，您可以扫描以下二维码进行捐赠：&lt;/p&gt; 
&lt;p align="left"&gt; &lt;img src="https://raw.githubusercontent.com/TapXWorld/ChinaTextbook/master/.cache/support-alipay.png" width="20%" /&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dipakkr/A-to-Z-Resources-for-Students</title>
      <link>https://github.com/dipakkr/A-to-Z-Resources-for-Students</link>
      <description>&lt;p&gt;✅ Curated list of resources for college students&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; A to Z Resources for Students &lt;/h1&gt; 
&lt;p&gt;If you think this repository helped you in any in finding new opportunities, tag me on Twitter at &lt;a href="https://twitter.com/dipakkr_"&gt;@HQdeepak&lt;/a&gt; and help it reach more people in the community.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/dipakkr"&gt;Buy Me a Coffee&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Are you a college student or a working professional looking for resources to learn a new coding language? Are you looking to meet new people in your community or searching for global conferences, hackathons and competitions to attend? If so, you should definitely check this out.&lt;/p&gt; 
&lt;p&gt;When I was in college, I missed a lot of opportunities like hackathons, conferences, internships, workshops and many global events due to lack of awareness. I don't want the emerging developers to suffer the same as me. Hence, I and a bunch of other developers around have collected a list of resources for students. If you are in college, a college graduate, or just starting out as a developer, you should definitely check it out!&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/res/a2z.png" alt="Image" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Image credits: Google&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#ai-tools-and-resources"&gt;AI Tools and Resources&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents &lt;span&gt;📋&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#1-coding-resources"&gt;Coding Resources - How to learn xyz &lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#16-frontend-web-development"&gt;Frontend Web Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#15-backend-development"&gt;Backend Development &lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#122-full-stack-web-development"&gt;Full-stack Web Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#11-python"&gt;Python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#12-machine-learning"&gt;Machine Learning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#13-large-language-models-llms"&gt;Large Language Models (LLMs)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#15-deep-learning"&gt;Deep Learning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#16-android-development"&gt;Android Development&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#17-data-structures"&gt;Data Structures&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#18-alexa-tutorials"&gt;Alexa Tutorials&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#19-c-language"&gt;C Language&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#110-c-language"&gt;C++ Language&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#111-git-and-github"&gt;Git and Github&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#112-r-language"&gt;R Language&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#113-haskell"&gt;Haskell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#114-mongodb"&gt;MongoDB&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#115-prolog"&gt;Prolog&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#116-c-language"&gt;C# Language&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#117-devdocs"&gt;DevDocs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#118-docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#119-microsoft-technologies"&gt;Microsoft Technologies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#120-scala"&gt;Scala&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#121-programming-notes-for-professionals"&gt;Programming Notes for Professionals&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#122-matlaboctave"&gt;MATLAB/Octave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#123-go-language"&gt;Go Language&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#2-hackathons-and-events"&gt;Hackathons and Events&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#21-top-global-hackathons-"&gt;Top Global Hackathons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#22-competitions-"&gt;Competitions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#23--hackathon-search-portals-dart"&gt;Hackathon Search Portal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#24-events-"&gt;Events&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#25-startup-summits-competitions-and-bootcamps-neckbeard"&gt;Startup Summits and Competitions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#26-hiring-challenges"&gt;Hiring Challenges&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#3-student-benefits-and-programs-fire"&gt;Student Benefits and Programs&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#campus-ambassador-programs-v"&gt;Campus Ambassador Programs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#student-benefits-and-packs-v"&gt;Student Benefits and Packs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#student-fellowship-programs-v"&gt;Student Fellowship Programs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#scholarships-runner"&gt;Scholarships&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#4-open-source-programs"&gt;Open Source Programs&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#5-startup-programs-and-incubators-mag_right"&gt;Startup Programs and Incubators&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#6-internship-programs"&gt;Internship Portals&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#7-developer-clubs-and-meetups"&gt;Developer Clubs and Meetups&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#8-conferences-bookmark_tabs"&gt;Conferences for students&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#9-top-people-to-follow"&gt;Top People to Follow&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#10-top-websites-to-follow"&gt;Top Websites to Follow&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#50-top-youtube-channels"&gt;Top 50 YouTube Channels to Follow&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#111-top-10-in-technology"&gt;Top 10 in Technology&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#112-top-10-in-startup"&gt;Top 10 in Startup&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#113-top-10-in-design"&gt;Top 10 in Design&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#114-top-10-in-business"&gt;To 10 in Business&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#115-top-10-in-finance"&gt;Top 10 in Finance&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#12-additional-links-hamster"&gt;Additional Links&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#13-coding-bootcamps"&gt;Bootcamps&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#14-miscellaneous-resources"&gt;Miscellaneous Resources&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#141-design-resources"&gt;Design Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#142-podcasts"&gt;Podcasts&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/#15-top-sites-for-aptitude-preparation-for-placements"&gt;Top sites for Aptitude Preparion for Placements&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/CONTRIBUTORS.md"&gt;Contributors&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h1&gt;FYI&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Are you just getting started? Look for the &lt;span&gt;👶&lt;/span&gt; emoji. It highlights resources for absolute beginners.&lt;/li&gt; 
 &lt;li&gt;Some resources are recommended for &lt;em&gt;everyone&lt;/em&gt;, so they have a &lt;span&gt;⭐&lt;/span&gt; emoji.&lt;/li&gt; 
 &lt;li&gt;Willing to spend some money to improve your skills? &lt;span&gt;💲&lt;/span&gt; indicates paid content.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;AI Tools and Resources&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A curated list of AI tools and platforms to enhance your productivity&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI Tool Directories and Resources&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.tooljunction.io/"&gt;ToolJunction&lt;/a&gt; - Comprehensive directory of AI tools&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dipakkr/awesome-ai-tools"&gt;Awesome AI Tools&lt;/a&gt; - Curated collection of AI tools and resources&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Popular AI Tools&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.tooljunction.io/ai-tools/chatgpt"&gt;ChatGPT&lt;/a&gt; - Advanced AI chatbot for conversations and tasks&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tooljunction.io/ai-tools/midjourney"&gt;Midjourney&lt;/a&gt; - AI art generation platform&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tooljunction.io/ai-tools/runwayml"&gt;RunwayML&lt;/a&gt; - Creative tools for AI-powered content creation&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tooljunction.io/ai-tools/invideo"&gt;InVideo&lt;/a&gt; - AI-powered video creation platform&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tooljunction.io/ai-tools/toolbaz"&gt;ToolBaz&lt;/a&gt; - Collection of AI-powered productivity tools&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best GitHub Repositories for AI Tools&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/josephmisiti/awesome-machine-learning"&gt;Awesome Machine Learning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dipakkr/awesome-ai-tools"&gt;Awesome AI Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/f/awesome-chatgpt-prompts"&gt;Awesome ChatGPT&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/awesome-stable-diffusion/awesome-stable-diffusion"&gt;Awesome Stable Diffusion&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;1. Coding Resources&lt;/h1&gt; 
&lt;h2&gt;1.1 Python&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/Python/Python.md"&gt;&lt;strong&gt;Browse this link for detailed information on Python&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tutorials&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.codecademy.com/learn/learn-python"&gt;Learn Python | CodeAcademy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://progate.com/languages/python"&gt;Progate Python Classes&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://bit.ly/2NkrsKh"&gt;Video Tutorial for absolute beginners | YouTube&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://in.udacity.com/course/introduction-to-python--ud1110-india"&gt;Intro to Python | Udacity&lt;/a&gt; &lt;span&gt;🆓&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/specializations/python"&gt;Python For Everybody&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://jeffknupp.com/"&gt;Write Better Python Functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/learning-python-from-zero-to-hero-120ea540b567"&gt;Learning Python: From Zero to Hero&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://automatetheboringstuff.com/"&gt;Automate the Boring Stuff with Python&lt;/a&gt; - Recommended&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL6gx4Cwl9DGAcbMi1sH6oAMk4JHw91mC_"&gt;The New Boston Python | Youtube&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://greenteapress.com/thinkpython2/thinkpython2.pdf"&gt;Think Python 2e - Green Tea Press&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://python.swaroopch.com/"&gt;A Byte of Python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://projecteuler.net/"&gt;Project Euler&lt;/a&gt; - Great for practicing writing Python codes&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jakevdp/WhirlwindTourOfPython"&gt;A Whirlwind Tour of Python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jakevdp/PythonDataScienceHandbook"&gt;Python Data Science Handbook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.google.com/edu/python/"&gt;Python Class By Google&lt;/a&gt; - Recommended&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.datacamp.com/courses/intro-to-python-for-data-science"&gt;Intro to Python for Data Science&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://pythonprogramming.net/"&gt;Python 3 for humans that want practical project exposure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://learnpythonthehardway.org/"&gt;Learn Python the Hard Way&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.scaler.com/topics/python/"&gt;Learn Python Programming&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLwgFb6VsUj_lQTpQKDtLXKXElQychT_2j"&gt;Complete Python tutorials&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tutlane.com/tutorial/python"&gt;Python Tutorial | Tutlane&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8ndsDXohLMQ&amp;amp;list=PLZ2ps__7DhBb2cXAu5PevO_mzgS3Fj3Fs"&gt; Python Course by IIT M | You Tube &lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://realpython.com/"&gt; Real Python &lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://finxter.com/"&gt; Finxter Learn, Train and get feedback &lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://pythontutor.com/visualize.html#mode=edit"&gt;Python Tutor | For Visualization&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codecombat.com/"&gt;Code Combat (Python and JavaScript options)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/python-interview-questions/"&gt;Python Interview Questions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/data-analyst-interview-questions/"&gt;Python interview questions for data analyst&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/python-cheat-sheet/"&gt;Python Cheat Sheet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://user-images.githubusercontent.com/84919650/227742970-7507ef1e-01fa-4e7e-a448-e0d587bb0769.png"&gt;Python Language and Syntax Cheat Sheet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://wiingy.com/learn/python/python-tutorial/"&gt;Python Tutorial: A Comprehensive Guide for Beginners&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labex.io/skilltrees/python"&gt;Python Skill Tree | LabEx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best GitHub Repositories to follow&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/TheAlgorithms/Python"&gt;The Algorithms Python&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.2 Machine Learning&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/ML/ML.md"&gt;&lt;strong&gt;Browse this link for detailed information on Machine Learning and Deep Learning&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best Online Courses&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="http://cs229.stanford.edu/"&gt;CSE-229 - Stanford University&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/learn/machine-learning"&gt;AndrewNg | Coursera&lt;/a&gt; - Select individual course if it consists of multiple then click on audit below the trial/payment options&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://in.udacity.com/course/intro-to-machine-learning--ud120-india"&gt;Machine Learning - Nanodegree | Udacity&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://in.udacity.com/course/reinforcement-learning--ud600"&gt; Reinforcement Learning - Nanodegree | Udacity&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLQVvvaa0QuDfKTOs3Keq_kaG2P55YRn5v"&gt;ML with Python | YouTube&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://courses.learncodeonline.in/learn/Machine-Learning-Bootcamp?tab=1"&gt;Data Science Machine Learning Bootcamp&lt;/a&gt; - &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.google.com/machine-learning/crash-course/ml-intro"&gt;Machine Learning Crash Course | Google Developers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/specializations/data-science-python"&gt;Applied Data Science with Python Specialization | Coursera&lt;/a&gt; -Select individual course if it consists of multiple then click on audit below the trial/payment options&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.kaggle.com/learn/machine-learning"&gt;Machine Learning | Kaggle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/machine-learning-interview-questions/"&gt;Machine Learning Interview Questions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.scaler.com/topics/machine-learning/"&gt;Machine Learning Tutorial | Scaler Topics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.scaler.com/blog/machine-learning-roadmap/"&gt;Machine Learning Roadmap | Scaler Blogs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best GitHub Repositories to follow&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ossu/data-science"&gt;Self Taught Path for Data Science&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ujjwalkarn/Machine-Learning-Tutorials"&gt;Machine Learning Tutorials&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/CodingTrain"&gt;Coding Train&lt;/a&gt; -&lt;a href="https://github.com/afshinea/stanford-cs-229-machine-learning"&gt;Machine Learning cheatsheets for Stanford's CS 229&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Research Papers&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://arxiv.org/"&gt;Arxiv&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://ieeexplore.ieee.org/Xplore/home.jsp"&gt;IEEE&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.researchgate.net/"&gt;Research Gate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://academictorrents.com/"&gt;Academics Torrent - Search Dataset&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.arxiv-sanity.com"&gt;Arxiv Sanity - Search best papers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://openreview.net/"&gt;Openreview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zziz/pwc"&gt;Research Papers with code&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://paperswithcode.com/"&gt;Papers with code&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Test ML Models on Datasets&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.kaggle.com/"&gt;Kaggle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://archive.ics.uci.edu/ml/datasets.html"&gt;UCI ML Repository&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.data.gov/"&gt;Data.Gov&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Book for Machine Learning&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.ime.unicamp.br/~dias/Intoduction%20to%20Statistical%20Learning.pdf"&gt;Introduction to Statistical Learning&lt;/a&gt; - &lt;span&gt;🆓&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;1.3 Large Language Models (LLMs)&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/LLM/LLM.md"&gt;&lt;strong&gt;Browse this link for detailed information on LLMs&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best Online Courses&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://web.stanford.edu/class/cs25/"&gt;CS25 - Transformers United | Stanford University&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.deeplearning.ai/short-courses/llmops/"&gt;LLMOps Specialization | DeepLearning.AI &amp;amp; AWS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/learn/generative-ai-with-llms"&gt;Generative AI with LLMs | Coursera&lt;/a&gt; - Select audit option if available&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fullstackdeeplearning.com/llm-bootcamp/"&gt;Large Language Models Bootcamp | Full Stack Deep Learning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.deeplearning.ai/short-courses/langchain-for-llm-application-development/"&gt;LangChain for LLM Application Development | DeepLearning.AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://academy.cohere.com/"&gt;Intro to LLMs | Cohere&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://university.weaviate.io/"&gt;LLM University by Weaviate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://huggingface.co/blog/fine-tune-transformers"&gt;Fine-Tuning LLMs | Hugging Face&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://huggingface.co/course/chapter1"&gt;Transformers Course | Hugging Face&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://platform.openai.com/docs/guides/prompt-engineering"&gt;Prompt Engineering for Developers | OpenAI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zjkBMFhNj_g"&gt;Mastering LLMs | YouTube (AssemblyAI)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best GitHub Repositories to Follow&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Hannibal046/Awesome-LLM"&gt;Awesome LLM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fullstackdeeplearning/llm-bootcamp"&gt;LLM Course Materials | Full Stack Deep Learning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/weaviate/llm-university"&gt;LLM University (Free Curriculum)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Mooler0410/LLMsPracticalGuide"&gt;LLM Papers and Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dair-ai/Prompt-Engineering-Guide"&gt;Prompt Engineering Guide&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/promptslab/Awesome-Prompt-Engineering"&gt;Awesome Prompt Engineering&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Research Papers&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://arxiv.org/search/cs?query=large+language+model&amp;amp;searchtype=all&amp;amp;abstracts=show&amp;amp;order=-announced_date_first&amp;amp;size=50"&gt;Arxiv - LLM Category&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://openreview.net/"&gt;OpenReview - LLM Papers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://paperswithcode.com/task/language-modelling"&gt;Papers With Code – LLM&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.anthropic.com/research"&gt;Anthropic Research&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://deepmind.google/research/"&gt;Google DeepMind Research&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://ai.meta.com/research/publications/"&gt;Meta AI Papers&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tools and Playgrounds to Test LLMs&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://platform.openai.com/playground"&gt;OpenAI Playground&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://huggingface.co/models"&gt;Hugging Face Inference Playground&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://replicate.com/"&gt;Replicate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://makersuite.google.com/"&gt;Google AI Studio (Gemini)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://claude.ai/"&gt;Anthropic Console (Claude)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://openrouter.ai/"&gt;OpenRouter (Multi-LLM API Playground)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/langchain-ai/langchain"&gt;LangChain + OpenAI Agent Playground&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.3 Deep Learning&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/ML/ML.md"&gt;&lt;strong&gt;Browse this link for detailed information on Machine Learning and Deep Learning&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best Online Courses&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/specializations/deep-learning"&gt;Deep Learning Specialization | Coursera&lt;/a&gt; – Andrew Ng's flagship series; free to audit&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://course.fast.ai/"&gt;Practical Deep Learning for Coders | Fast.AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/learn/deep-neural-networks-with-pytorch"&gt;Deep Learning with PyTorch | Coursera (by IBM)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/professional-certificates/tensorflow-in-practice"&gt;TensorFlow Developer Professional Certificate | Coursera&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.udemy.com/course/deeplearning/"&gt;Deep Learning A-Z | Udemy&lt;/a&gt; – &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best Online Books&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="http://neuralnetworksanddeeplearning.com/"&gt;Neural Networks and Deep Learning | Michael Nielsen&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://d2l.ai/"&gt;Dive into Deep Learning (D2L)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.manning.com/books/deep-learning-with-python-second-edition"&gt;Deep Learning with Python (2nd Edition) | François Chollet&lt;/a&gt; – &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://arxiv.org/abs/2103.11201"&gt;Mathematical Introduction to Deep Learning&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best GitHub Repositories to follow&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mbadry1/Top-Deep-Learning"&gt;Top-Deep-Learning&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/facebookresearch/DensePose"&gt;DensePose - Facebook Research&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jakevdp/PythonDataScienceHandbook"&gt;Python Data Science Handbook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/MrGemy95/Tensorflow-Project-Template"&gt;Tensorflow Project Template&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/PaddlePaddle/VisualDL"&gt;VisualDL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/esimov/caire"&gt;Caire - Content Aware Image Resize&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/llSourcell/Learn_Deep_Learning_in_6_Weeks"&gt;Learn Deep Learning in 6 Weeks&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Certifications &amp;amp; Toolkits&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://developer.nvidia.com/dli"&gt;NVIDIA Deep Learning Institute (DLI)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/professional-certificates/ai-engineer"&gt;IBM AI Engineering Professional Certificate&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aws.amazon.com/certification/certified-machine-learning-specialty/"&gt;AWS Certified Machine Learning – Specialty&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.4 Android Development&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/Android/Android.md"&gt;&lt;strong&gt;Checkout the Full Resources on ANDROID&lt;/strong&gt;&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Best Online Courses &amp;amp; Paths&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.udacity.com/course/new-android-fundamentals--ud851"&gt;Free Android Development Courses | Udacity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Amejia481/Associate-Android-Developer-Certification"&gt;Associate Android Developer Certification Path | GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://roadmap.sh/android"&gt;Android Developer Roadmap | roadmap.sh&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.android.com/training/basics/firstapp"&gt;Build Your First App | Android Developers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.android.com/courses/android-basics-compose/course"&gt;Android Basics with Compose | Google&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.udacity.com/course/developing-android-apps-with-kotlin--ud9012"&gt;Kotlin for Android Developers | Udacity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.pluralsight.com/paths/android"&gt;PluralSight – Android Developer Track&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hands-on Practice&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://codelabs.developers.google.com/"&gt;Google Android Codelabs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nisrulz/android-examples"&gt;Android Examples | GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/android"&gt;Android Projects | GitHub&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Flutter Resources&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://flutter.io/widgets-intro/"&gt;Flutter Widget Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://flutter.dev/docs/codelabs"&gt;Flutter Codelabs | Google&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/nisrulz/flutter-examples"&gt;Flutter Examples | GitHub&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Learning Resources&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.tutlane.com/tutorial/android"&gt;Learn Android Programming | Tutlane&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.android.com/docs"&gt;Official Android Developer Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.android.com/jetpack/compose/tutorial"&gt;Jetpack Compose Pathway | Google&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.5 Backend Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://in.udacity.com/course/intro-to-backend--ud171"&gt;Introduction to backend&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/master/img/backend.png"&gt;Backend Roadmap&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Django - Python&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLEsfXFp6DpzTD1BD1aWNxS2Ep06vIkaeW"&gt;Try Django | YouTube&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.djangoproject.com/en/2.1/"&gt;Django Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tutorial.djangogirls.org/en/"&gt;Django Girls&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django"&gt;MDN Web Docs&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://simpleisbetterthancomplex.com/"&gt;SimpleIsBetterThanComplex Blog&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tangowithdjango.com/book/"&gt;Tango With Django Book&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://ccbv.co.uk/"&gt;Django Class-Based Views&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.scaler.com/topics/django/"&gt;Django Tutorial | Scaler Topics&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Flask - Python&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.miguelgrinberg.com/post/the-flask-mega-tutorial-part-i-hello-world"&gt;The Flask Mega Tutorial&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt; + Intermediate&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Node.JS&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://nodeschool.io/"&gt;NodeSchool | Workshops Open Source&lt;/a&gt; &lt;span&gt;❤️&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.udemy.com/the-complete-nodejs-developer-course-2/"&gt;The Complete Node.js Developer Course | Udemy&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs"&gt;Express web framework (Node.js/JavaScript)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.udemy.com/understand-nodejs/?siteID=jU79Zysihs4-ysDvxh6JST3o9mSuR2USMQ&amp;amp;LSNPUBID=jU79Zysihs4"&gt;Learn and Understand NodeJS&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt; - Intermediate&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w-7RQ46RgxU&amp;amp;list=PL4cUxeGkcC9gcy9lrvMJ75z9maRw4byYp"&gt;Node JS Tutorial for Beginners | YouTube&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://nodejs.org/dist/latest-v8.x/docs/api/"&gt;Node.js Documentation&lt;/a&gt; &lt;span&gt;⭐&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/PacktPublishing/Node.js_Design_Patterns_Second_Edition_Code"&gt;Node.js Design Patterns by Mario Casciaro&lt;/a&gt; - Book Advanced level&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLzQWIQOqeUSMzMUEJA0XrOxJbX8WTiCJV"&gt;Node.js API Design&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://flaviocopes.com/express-handbook/"&gt;Node.js handbook by Flavio Copes&lt;/a&gt; - &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://book.mixu.net/node/"&gt;Mixu's Node book&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.packtpub.com/free-ebooks/what-you-need-know-about-nodejs"&gt;What You Need To Know About Node.js&lt;/a&gt; (Email address requested, not required. By Packt)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://expressjs.com/en/advanced/best-practice-security.html"&gt;Express.js - Production Security Best Practices&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tutlane.com/tutorial/nodejs"&gt;Learn Node.js | Tutlane&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.scaler.com/topics/nodejs/"&gt;Learn Node.js | Scaler Topics&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;PHP&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="http://php.net/manual/en/index.php"&gt;PHP Manual&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.learn-php.org"&gt;PHP Interactive Tutorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.w3schools.com/php/"&gt;W3Schools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tutorialspoint.com/php/"&gt;Tutorial Point&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.codeproject.com/Articles/759094/Step-by-Step-PHP-Tutorials-for-Beginners-Creating"&gt;PHP with Database tutorial &lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/shauryauppal/PHP-Database-connection"&gt;Guide for PHP and SQL connection with HTML form.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://phptherightway.com"&gt;PHP: The Right Way&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.phpthewrongway.com/"&gt;PHP: The Wrong Way&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://bitdegree.org/learn/learn-php"&gt;BitDegree-Php&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://phpbestpractices.org/"&gt;PHP Best Practices&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://daylerees.com/php-pandas/"&gt;PHP Pandas&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.phpinternalsbook.com/"&gt;PHP Internals Book&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://laracasts.com/series/lets-build-a-forum-with-laravel"&gt;Let's Build A Forum with Laravel and TDD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.sololearn.com/"&gt;SoloLearn: Learn to Code for Free!&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/blog/php-developer/"&gt;Learn PHP &lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.railstutorial.org/book"&gt;Ruby on Rails Tutorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://learnrubythehardway.org/book/"&gt;Learn Ruby The Hard Way&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.codecademy.com/learn/learn-ruby"&gt;Learn Ruby | Codecademy&lt;/a&gt; - Familiarity with Ruby before Rails&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://thoughtbot.com/upcase/practice"&gt;Learn Ruby, Dev Concept and More | Upskills with Upcase&lt;/a&gt; - Familiarity with ruby and coding concepts&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.sololearn.com/"&gt;SoloLearn: Learn to Code for Free!&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.rubytapas.com/"&gt;Ruby Tapas&lt;/a&gt; - Short, Focused Screencasts covering Intermediate to Advanced Ruby concepts and techniques, design principles, testing practices, refactoring, etc.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://poignant.guide/"&gt;Why's (Poignant) Guide to Ruby&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://railscasts.com"&gt;RailsCasts&lt;/a&gt; - Video tutorials on more intermediate Ruby on Rails topics.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.railstutorial.org/book/frontmatter"&gt;Ruby on Rails Tutorial&lt;/a&gt; - Learn Web Development with Rails&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MongoDB&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GtD93tVZDX4"&gt;MongoDB Tutorial for Beginners | YouTube&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labex.io/skilltrees/mongodb"&gt;MongoDB Skill Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GtD93tVZDX4"&gt;Tutorial for Beginner&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://university.mongodb.com/"&gt;Free Courses and Paid Private training&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://frontendcollisionblog.com/mongodb/2016/01/24/mongoose-populate.html"&gt;Understanding Mongoose Deep Population&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.quackit.com/mongodb/tutorial/"&gt;MongoDB full tutorial for beginners&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.guru99.com/mongodb-tutorials.html"&gt;MongoDB tutorial for intermediate&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Software architecture&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://microservices.io/index.html"&gt;Microservices by Chris Richardson&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.6 Frontend Web Development&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://scrimba.com/learn/frontend"&gt;Scrimba&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kamranahmedse/developer-roadmap/faa0ec253021944ef15fe0872673f7e42102d7e9/img/frontend.png"&gt;Frontend Roadmap&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=PkZNo7MFNFg"&gt;FreeCodeCamp Web Dev Course&lt;/a&gt; - Learn HTML, CSS, JavaScript from scratch.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://frontendmasters.com/"&gt;Frontend Masters&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.frontendmentor.io/"&gt;Frontend Mentor &lt;strong&gt;FREE&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;HTML5 and CSS3&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML"&gt;MDN Web Docs - HTML&lt;/a&gt; - Comprehensive HTML learning&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/CSS"&gt;MDN Web Docs - CSS&lt;/a&gt; - Comprehensive CSS learning&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cssreference.io/"&gt;CSS Reference&lt;/a&gt; - Visual guide to CSS&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://htmlreference.io/"&gt;HTML Reference&lt;/a&gt; - Visual guide to HTML&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cssgrid.io/"&gt;CSS Grid&lt;/a&gt; - Learn CSS Grid with Wes Bos&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://flexbox.io/"&gt;CSS Flexbox&lt;/a&gt; - Learn Flexbox with Wes Bos&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://flexboxfroggy.com/"&gt;Flexbox Froggy&lt;/a&gt; - Interactive Flexbox learning game&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cssgridgarden.com/"&gt;Grid Garden&lt;/a&gt; - Interactive Grid learning game&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://user-images.githubusercontent.com/84919650/227743321-96c328b5-1378-42b1-8613-cc0fd1e1962e.png"&gt;CSS Basic Cheatsheet&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Courses &amp;amp; Tutorials&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://internetingishard.com/html-and-css/"&gt;Interneting is Hard&lt;/a&gt; - Friendly web development tutorials&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://learn.shayhowe.com/html-css/"&gt;Learn to Code HTML &amp;amp; CSS&lt;/a&gt; - Shay Howe's beginner guide&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.udemy.com/css-the-complete-guide-incl-flexbox-grid-sass/"&gt;CSS - The Complete Guide&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.udemy.com/advanced-css-and-sass"&gt;Advanced CSS and Sass&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Bootstrap 5&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://bootstrap-cheatsheet.themeselection.com/"&gt;Bootstrap 5 Cheatsheet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://themeselection.com/products/sneat-free-bootstrap-html-admin-template/"&gt;Sneat Free Bootstrap 5 HTML Admin Template&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://themeselection.com/item/materio-free-bootstrap-html-admin-template/"&gt;Materio Free Bootstrap 5 HTML Admin Template&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript"&gt;JS MDN Web Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://javascript.info/"&gt;javascript.info&lt;/a&gt; - Modern JavaScript Tutorial&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://javascript30.com/"&gt;Javascript30 | Wes Bos&lt;/a&gt; - 30 Day Vanilla JS Challenge&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS"&gt;You Don't Know JS (book series)&lt;/a&gt; &lt;span&gt;⭐&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eloquentjavascript.net/"&gt;Eloquent JavaScript Online&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742"&gt;JavaScript: The Good Parts by Douglas Crockford&lt;/a&gt; &lt;span&gt;⭐&lt;/span&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/leonardomso/33-js-concepts"&gt;33 JS concepts every JavaScript developer should know&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://30secondsofcode.org/"&gt;30 Seconds of Code&lt;/a&gt; - Short code snippets for all your development needs&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/"&gt;JavaScript Design Patterns&lt;/a&gt; - By Addy Osmani&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://es6cheatsheet.com/"&gt;ES6 Cheatsheet&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://regexone.com/"&gt;RegexOne&lt;/a&gt; - Learn Regular Expressions&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/javascript-interview-questions/"&gt;JavaScript Interview Questions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/labex-labs/javascript-practice-labs"&gt;500 JavaScript Practice Labs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Learning Platforms&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.freecodecamp.org/"&gt;freeCodeCamp&lt;/a&gt; - Interactive learning platform&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.codecademy.com/learn/introduction-to-javascript"&gt;Codecademy JavaScript Course&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.theodinproject.com/"&gt;The Odin Project&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://wesbos.com/courses/"&gt;Wes Bos Courses&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://frontendmasters.com/"&gt;Frontend Masters&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;JavaScript Frameworks&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Angular&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.udemy.com/the-complete-guide-to-angular-2/"&gt;Angular 7 - The Complete Guide by Maximilian Schwarzmüller | Udemy&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.udemy.com/the-complete-angular-master-class/"&gt;The Complete Angular Course: Beginner to Advanced by Mosh Hamedani | Udemy&lt;/a&gt; - &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://angularexpo.com/"&gt;Angular Expo&lt;/a&gt; - Beautiful showcase of websites, applications and experiments using Angular&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.madewithangular.com/"&gt;Made With Angular&lt;/a&gt; - Gallery of inspiring websites using Angular/AngularJS&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5wtnKulcquA"&gt;Learn Angular 7 in 50 minutes&lt;/a&gt; - A free beginner's crash course &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://scrimba.com/g/gyourfirstangularapp"&gt;Build your first Angular app&lt;/a&gt; - 33 interactive screencasts to take you from beginner to advanced&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;React.js&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.reactjsvideos.com/"&gt;React JS - Conference Videos&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://scrimba.com/g/glearnreact"&gt;Learn React for free | Scrimba&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JPT3bFIwJYA&amp;amp;list=PL55RiY5tL51oyA8euSROLjMFZbXaV7skS"&gt;Video Tutorials - Beginner to Intermediate | YouTube&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OxIDLw0M-m0&amp;amp;list=PL4cUxeGkcC9ij8CfkAY2RAGb-tmkNwQHG"&gt;Complete React Tutorial (&amp;amp; Redux) | YouTube&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.codecademy.com/learn/react-101"&gt;ReactJS Tutorial | Codecademy&lt;/a&gt; - Interactive&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/search?q=react"&gt;FreeCodeCamp Articles&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://reactstrap.github.io/"&gt;Reactstrap - React Bootstrap 4 Components&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://daveceddia.com/react-practice-projects/"&gt;Few Projects for every React Dev&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.mybridge.co/react-js-open-source-for-the-past-year-2018-a7c553902010"&gt;Famous GitHub Repos&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.udemy.com/react-the-complete-guide-incl-redux/"&gt;React 16 - The Complete Guide (incl. React Router 4 &amp;amp; Redux)&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt; - Worth it&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://reactjs.org/docs/hello-world.html"&gt;Hello World | React.js Org&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://drive.google.com/open?id=1ilClAJQ3FmCB-2cEuVDZtVMbeXumSj3t"&gt;The Road to React | Book&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://reactforbeginners.com/"&gt;React For Beginners | Wes Bos&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://advancedreact.com/"&gt;Advanced React | Wes Bos&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://tylermcginnis.com/courses/react-fundamentals/"&gt;React Fundamentals | Tyler McGinnis&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.udemy.com/react-redux/"&gt;Modern React with Redux | Udemy&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;React Native&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.udemy.com/react-native-the-practical-guide/"&gt;React Native - The Practical Guide&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Redux.js&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1w-oQ-i1XB8&amp;amp;list=PLoYCgNOIyGADILc3iUJzygCqC8Tt3bRXt"&gt;Redux Tutorial #1 - React js tutorial - How Redux Works | YouTube&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://redux.js.org/introduction"&gt;Redux Documentation&lt;/a&gt; &lt;span&gt;⭐&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://egghead.io/courses/getting-started-with-redux"&gt;Getting Started with Redux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://egghead.io/courses/building-react-applications-with-idiomatic-redux"&gt;Building React Applications with Idiomatic Redux&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://dev.to/valentinogagliardi/react-redux-tutorial-for-beginners-learning-redux-in-2018-13hj"&gt;React Redux Tutorial&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="http://teropa.info/blog/2015/09/10/full-stack-redux-tutorial.html"&gt;Full-Stack Redux Tutorial&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://learn.freecodecamp.org/front-end-libraries/redux"&gt;Introduction to the Redux Challenges | freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://tylermcginnis.com/courses/redux/"&gt;Redux | Tyler McGinnis&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vue.js&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://vueschool.io/courses"&gt;Vue School&lt;/a&gt; &lt;span&gt;🆓&lt;/span&gt; + &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://scrimba.com/g/glearnvue"&gt;Scrimba&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://vuejs.org/v2/cookbook/"&gt;Vue Cookbook&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nyJSd6V2DRI"&gt;Getting started with VueJS 2&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://news.vuejs.org/"&gt;Vue.js News&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://madewithvuejs.com/"&gt;Vue.js Showcase - Made With Vue.js&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://themeselection.com/item/materio-free-vuetify-vuejs-admin-template/"&gt;Materio Free VueJS Admin Template&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Web Accessibility&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility"&gt;Accessibility MDN Web Docs&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.w3.org/WAI/tutorials/"&gt;Web Accessibility Tutorials&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aqM6rV5IBlg&amp;amp;t=1s"&gt;A Video Tutorial on Web Accessibility for Impaired Users | YouTube&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://webaim.org/resources/"&gt;WebAim Web Accessibility Resources and Tools&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://a11yproject.com/checklist"&gt;Web Accessibility Checklist - The A11Y Project&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"&gt;ARIA - Accessibility | MDN&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Frontend DevTools&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Package Managers&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=76A2Ppenxh8"&gt;NPM | YouTube&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=g9_6KmiBISk"&gt;Yarn | YouTube&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b"&gt;npx&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;&lt;strong&gt;Bundlers&lt;/strong&gt;&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://webpack.js.org/guides/getting-started/"&gt;Webpack - The most used bundler&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GU-2T7k9NfI"&gt;Webpack | YouTube&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/codingthesmartway-com-blog/getting-started-with-parcel-197eb85a2c8c"&gt;Parcel - The predicted webpack killer&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://scotch.io/tutorials/getting-started-with-browserify"&gt;Browserify - The first bundler&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/@yonester/bundling-with-rollup-the-basics-b782b55f36a8"&gt;Rollup&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;1.7 Data Structures&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Online Platforms&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.codechef.com/"&gt;CodeChef&lt;/a&gt; - CodeChef competitive programming site&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codesignal.com/"&gt;CodeSignal&lt;/a&gt; - (formerly CodeFights) Fun gaming approach to Coding contests and Interview practices.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeforces.com/"&gt;Codeforces&lt;/a&gt; - Great site for preparing for programming contests&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/must-do-coding-questions-for-companies-like-amazon-microsoft-adobe/"&gt;GeeksforGeeks&lt;/a&gt; - Must do coding questions for product based companies&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.hackerearth.com/practice/codemonk/"&gt;Hackerearth&lt;/a&gt; - Code Monk to start with programming - programming fundamentals&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.hackerrank.com/interview/interview-preparation-kit"&gt;Hackerrank&lt;/a&gt; - Interview preparation kit&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/courses/programming"&gt;InterviewBit&lt;/a&gt; - Best platform to get prepared for Data Structures based interviews&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewcake.com/"&gt;InterviewCake&lt;/a&gt; - An interactive interview prep site for DSA and some System Design with free 3 week access through Github student pack&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://algodaily.com/"&gt;AlgoDaily&lt;/a&gt; - Daily interview questions sent by mail, as well as a full course and online IDE as well as visualizations and tutorials to solve the problems&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.leetcode.com"&gt;LeetCode&lt;/a&gt; - Platform to prepare for technical interviews with real interview questions&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.spoj.com/problems/classical/"&gt;Sphere Online Judge&lt;/a&gt; - Great head start for learning Data Structures&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://mycode.prepbytes.com/interview-coding/practice"&gt;Prepbytes&lt;/a&gt; - Prepbytes Coding Platform - Get problems as per your coding skills.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://uva.onlinejudge.org"&gt;UVa Online Judge&lt;/a&gt; - The site to submit &lt;a href="http://www.lulu.com/shop/steven-halim/competitive-programming-3/paperback/product-21059906.html"&gt;Competitive Programming 3&lt;/a&gt; data structures problems&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.codewars.com/"&gt;Codewars&lt;/a&gt; - Interesting ranking system with beautiful UI for competitive programming and interview prep.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.codingame.com/"&gt;CodinGame&lt;/a&gt; - Competitive programming with game like challenges&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.edx.org/course/cs50s-introduction-computer-science-harvardx-cs50x"&gt;CS50 on HarvardX&lt;/a&gt; - One of the best computer science courses available online (&lt;span&gt;💲&lt;/span&gt; for certification)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://app.codility.com/programmers/"&gt;Codility&lt;/a&gt; - Develop your coding skills with lessons to take part in challenges&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://zen-of-programming.com/"&gt;Zen of Programming&lt;/a&gt; - A frequently updated blog great for beginners and simplified references.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.scaler.com/topics/"&gt;Scaler Topics&lt;/a&gt; - Platform to access free Resouces to coding tutorials&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.erdlab.io/"&gt;ERD Lab&lt;/a&gt; - Free cloud based entity relationship diagram (ERD) tool made for students.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.onecompiler.com/"&gt;OneCompiler&lt;/a&gt; - An online compiler supporting over 70 programming languages, perfect for running quick code snippets and practicing data structures.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tutorials &amp;amp; Practice&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://visualgo.net/en"&gt;Visual Algo&lt;/a&gt; - Understanding DS &amp;amp; Algo through animations.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://e-maxx.ru/algo/"&gt;E-maxx&lt;/a&gt; - Russian version of popular e-maxx, An excellent set of study material for DS &amp;amp; ALgo. &lt;a href="https://cp-algorithms.com/"&gt;English version of e-maxx.&lt;/a&gt; (Translation is almost complete)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://codeforces.com/blog/entry/57282"&gt;All Good Tutorials on Codeforces&lt;/a&gt; - All of the best tutorials on Codeforces all at one place.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://codeforces.com/blog/entry/13529"&gt;DS &amp;amp; Algo + Maths + C++&lt;/a&gt; - Another set of good compilation of resources to study.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://discuss.codechef.com/questions/48877/data-structures-and-algorithms"&gt;Data Structures and Algorithms&lt;/a&gt; - Another set of good compilation of resources to learn and practice. This one is done by Codechef.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://codeforces.com/blog/entry/55274"&gt;Problem Topics&lt;/a&gt; - Topic-wise list of problems.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.crackingthecodinginterview.com/"&gt;Cracking the Coding Interview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://exercism.io/"&gt;Excercism&lt;/a&gt; - Code practice and mentorship.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://leetcode.com"&gt;Leet Code&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://nptel.ac.in/courses/106/102/106102064/" title="NPTEL"&gt;Data Structures and Algorithm&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Books&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.comp.nus.edu.sg/~stevenha/myteaching/competitive_programming/cp1.pdf"&gt;Competitive Programming by Felix Halim and Steven Halim&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://comscigate.com/Books/contests/icpc.pdf"&gt;The Hitchhiker's Guide to the Programming Contests&lt;/a&gt; - Goto book for competitive programming enthusiasts.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://ressources.unisciel.fr/algoprog/s00aaroot/aa00module1/res/%5BCormen-AL2011%5DIntroduction_To_Algorithms-A3.pdf"&gt;CLRS&lt;/a&gt; - Holy Bible for Design and Analysis of algorithms&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.cs.sjtu.edu.cn/~jiangli/teaching/CS222/files/materials/Algorithm%20Design.pdf"&gt;Algorithm Design by Kleinberg Tardos&lt;/a&gt; - Another goto book for easy to understand algorithm design and analysis&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/jwasham/coding-interview-university"&gt;Coding Interview University - Github&lt;/a&gt; - Strongly recommended to learn DS and Computer Science fundamentals&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ZoranPandovski/al-go-rithms"&gt;Algo &amp;amp; DS in different languages&lt;/a&gt; - Algorithm and Data Structure in different programming languages&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882"&gt;Clean code&lt;/a&gt; - Clean Code: A Handbook of Agile Software Craftsmanship &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215/"&gt;Domain Driven Design&lt;/a&gt; - Domain-Driven Design: Tackling Complexity in the Heart of Software 1st Edition &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.8 Alexa Tutorials&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.codecademy.com/learn/learn-alexa"&gt;Learn Alexa | Codecademy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.amazon.com/alexa-skills-kit/tutorials/fact-skill-1"&gt; Fact Skill Tutorial - Build an Alexa Skill in 6 Steps | Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.udemy.com/comprehensive-alexa-skill-development-course/?siteID=Fh5UMknfYAU-DbsLrZFg2AAmpu3BgGbHJQ&amp;amp;LSNPUBID=Fh5UMknfYAU"&gt;Comprehensive Alexa Skill Development course | Udemy&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?list=PL2KJmkHeYQTNwlZqLh_ptZhSNZf93e8Sp&amp;amp;v=1cx_I0kARnU"&gt;Building Alexa Skills from Scratch | YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pluralsight.com/courses/amazon-echo-developing-alexa-skills"&gt;Developing Alexa Skills for Amazon Echo | PluralSight&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt; (Free 10-day trial)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://qwiklabs.com/quests/19"&gt;Alexa Skills Development | Qwiklabs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.9 C Language&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.hackerrank.com/domains/c"&gt;HackerRank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.programiz.com/c-programming"&gt;Programiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fresh2refresh.com/c-programming/"&gt;Fresh2Refresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.learn-c.org/"&gt;Learn C&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/c"&gt;C Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://randu.org/tutorials/c/"&gt;Randu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3schools.in/c-tutorial/"&gt;W3Schools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sololearn.com/"&gt;SoloLearn: Learn to Code for Free!&lt;/a&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/c-interview-questions/"&gt;C Interview Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labex.io/skilltrees/c"&gt;C Skill Tree&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.10 C++ Language&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.hackerrank.com/domains/cpp"&gt;HackerRank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.programiz.com/cpp-programming"&gt;Programiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackr.io/tutorials/learn-c-plus-plus"&gt;Hackr.Io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.cplusplus.com/doc/tutorial/"&gt;Learn C ++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.fluentcpp.com/"&gt;Fluent CPP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/edu/c++/"&gt;C++ Class | Google for Education &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tutorialspoint.com/cplusplus/"&gt;Tutorials Point&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/c-plus-plus/"&gt;GeeksForGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/cpp/"&gt;C++ Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://in.udacity.com/course/c-for-programmers--ud210"&gt;C++ For Programmers | Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cis.stvincent.edu/html/tutorials/swd/"&gt;Software Design Using C++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/cpp-interview-questions/"&gt;C++ Interview Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labex.io/skilltrees/cpp"&gt;C++ Skill Tree&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.11 Git and Github&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.atlassian.com/git/tutorials/comparing-workflows"&gt;Git Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://in.udacity.com/course/how-to-use-git-and-github--ud775-india"&gt;How to use Git and Github | Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://in.udacity.com/course/version-control-with-git--ud123"&gt;Version Control with Git | Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZF9C0YMKuns9sLDzK6zoiV"&gt;Introduction to Git and Github | YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git-scm.com/book/en/v2"&gt;Pro Git Book&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learngitbranching.js.org/"&gt;LearnGitBranching&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://girliemac.com/blog/2017/12/26/git-purr/"&gt;GIT PURR! Git Commands Explained with Cats!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://rogerdudler.github.io/git-guide/"&gt;git - the simple guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marklodato.github.io/visual-git-guide/index-en.html"&gt;GIT: A Visual Git Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thoughtbot.com/upcase/mastering-git"&gt;Mastering Git by thoughtbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://progate.com/languages/git"&gt;Git - Progate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.datacamp.com/courses/introduction-to-git-for-data-science"&gt;Intoduction to Git for DataScience&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://intellipaat.com/git-github-training/"&gt;Git training&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/git-interview-questions/"&gt;Git Interview Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/blog/git-vs-github/"&gt;Git vs Github&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/git/"&gt;Git Tutorial | Scaler Topics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/what-is-github/"&gt;An Introduction to Github&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/git-vs-github/"&gt;Git Vs Github by Scaler Topics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labex.io/skilltrees/git"&gt;Git Skill Tree&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.12 R Language&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.rstudio.com/online-learning/"&gt;RStudio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kaggle.com/kernels?sortBy=hotness&amp;amp;group=everyone&amp;amp;pageSize=20&amp;amp;language=R"&gt;Kaggle Kernels&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.r-bloggers.com/"&gt;R-Bloggers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rafalab.github.io/dsbook/"&gt;Introduction to Data Science by Rafael A. Irizarry&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://r4ds.had.co.nz/"&gt;R for Data Science by Garrett Grolemund and Hadley Wickham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://swirlstats.com/students.html"&gt;Swirl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rstudio-education.github.io/hopr/"&gt;Hands-On Programming with R by Garrett Grolemund&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://faculty.marshall.usc.edu/gareth-james/ISL/ISLR%20Seventh%20Printing.pdf"&gt;Introduction to Statistical Learning with R &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://englianhu.files.wordpress.com/2016/05/advanced-r.pdf"&gt;Advanced R Programming &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://sgpwe.izt.uam.mx/files/users/uami/gma/R_for_dummies.pdf"&gt;R for Dummies&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.13 Haskell&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://www.happylearnhaskelltutorial.com/"&gt;Happy Learn Haskell Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://learnyouahaskell.com/"&gt;Learn You a Haskell&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.14 MongoDB&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.tutorialspoint.com/mongodb/"&gt;MongoDB Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://university.mongodb.com/"&gt;MongoDB University&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.15 Prolog&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://spivey.oriel.ox.ac.uk/wiki/files/logprog/logic.pdf"&gt;Michael Spivey - An introduction to logic programming through Prolog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.16 C# Language&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.learncs.org"&gt;LearnCS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tutorialspoint.com/csharp/index.htm"&gt;TutorialsPoint&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sololearn.com/Course/CSharp/"&gt;SoloLearn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scottlilly.com/learn-c-by-building-a-simple-rpg-index/"&gt;Learn C# building a simple rpg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.dotnetperls.com/"&gt;DotNetPerls - C# Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.csharpcourse.com/"&gt;The "Yellow Book": Introduction to C# Programming by Rob Miles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://channel9.msdn.com/Series/C-Fundamentals-for-Absolute-Beginners"&gt;MSDN C# Fundamentals for Absolute Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://refactoring.guru/pt-br/design-patterns"&gt;Refactoring Guru - Design Patterns&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tutlane.com/tutorial/csharp"&gt;Learn C# | Tutlane&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/c-sharp-interview-questions/"&gt;C# Interview Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.17 DevDocs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://devdocs.io"&gt;API documentation for most programming languages&lt;/a&gt; - Works offline&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.18 Docker&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/"&gt;Official Documentation on website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=h0NCZbHjIpY&amp;amp;list=PL9ooVrP1hQOHUKuqGuiWLQoJ-LD25KxI5"&gt;Free Course on Youtube&lt;/a&gt; &lt;span&gt;⭐&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.udemy.com/docker-tutorial-for-devops-run-docker-containers/"&gt;Paid Docker Course on udemy&lt;/a&gt; &lt;span&gt;💲&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/Nairit11/59d7ef2beca03b6a770e4c278e4b4aa9"&gt;Docker Cheat Sheet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/docker-interview-questions/"&gt;Docker-InterviewBit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/get-started/overview/"&gt;Docker Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spacelift.io/blog/docker-tutorial"&gt;Docker Tutorial for Beginners – Introduction &amp;amp; Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labex.io/skilltrees/docker"&gt;Docker Hands-on Labs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.19 Microsoft Technologies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/learn/"&gt;Microsoft Learn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-US/"&gt;Microsoft Developer Network (MSDN)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://visualstudio.microsoft.com/vs/getting-started/"&gt;Microsoft Visual Studio&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.20 Scala&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Books&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://danielwestheide.com/scala/neophytes.html"&gt;The Neophyte's Guide to Scala&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.artima.com/shop/programming_in_scala_3ed"&gt;Programming in Scala&lt;/a&gt; A book written by the programming language author, Martin Odersky among others. &lt;a href="https://www.artima.com/pins1ed/"&gt;The first edition is avalible for free&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Online Courses&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.coursera.org/learn/progfun1"&gt;Functional Programming Principles in Scala&lt;/a&gt; A course taught by the programming language author, Martin Odersky.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.21 Programming Notes for Professionals&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Books 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://goalkicker.com"&gt;Programming Notes for Professionals books&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.22 MATLAB/Octave&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mathworks/awesome-matlab-students"&gt;MATLAB Student Resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matlabacademy.mathworks.com/"&gt;MATLAB Academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikibooks.org/wiki/Octave_Programming_Tutorial/"&gt;Octave Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.edx.org/course/matlab-octave-beginners-epflx-matlabeoctavebeginnersx"&gt;Beginners MATLAB edX&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.22 Full-Stack Web Development&lt;/h2&gt; 
&lt;p&gt;For Becoming a Full-Stack Web Developer you need to know about Front-End &amp;amp; Back-End.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7_LPdttKXPc"&gt;How The Internet Works&lt;/a&gt; Things Like Hosting, DNS, HTTPS, Browsers, Domain Names.&lt;/li&gt; 
 &lt;li&gt;&lt;a href=""&gt;Basic Tools&lt;/a&gt; Tools Like : Text Editor (Visual Studio Code), Terminal(hyper), Design(Figma).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XiQ9rjaa2Ow"&gt;HTML&lt;/a&gt; Best Practices, Semantic HTML, Forms &amp;amp; Validations, Accessibility, SEO.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Tfjd5yzCaxk"&gt;CSS&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=qqDH0T6K5gY"&gt;Flexbox&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=BDOzg4lXcSg"&gt;CSS Grid&lt;/a&gt;, Custom Properties,&lt;a href="https://animejs.com/"&gt;Animations/Transitions&lt;/a&gt;, Responsive Design, CSS Preprocessor, Modern CSS, CSS Frameworks &lt;a href="https://tailwindcss.com/"&gt;Tailwind CSS&lt;/a&gt;,&lt;a href="https://getbootstrap.com/"&gt;Bootstrap&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/full-stack-developer-interview-questions/"&gt;Full Stack Developer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Front-End Starts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jS4aFq5-91M"&gt;JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ahCwqrYpIuM"&gt;TypeScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[Front-End Framework] : &lt;a href="https://www.youtube.com/watch?v=UGcALH8kPC0&amp;amp;list=PLkwxH9e_vrAK4TdffpxKY3QGyHCpxFcQ0"&gt;React&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCxA99Yr6P_tZF9_BgtMGAWA"&gt;Vue&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=Fdf5aTYRW0E"&gt;Angular&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=uK2RnIzrQ0M"&gt;Svelte&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[State Management] : &lt;a href="https://www.youtube.com/watch?v=35lXWvCuM8o"&gt; Context API (React)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=CVpUuw9XSjY"&gt;Redux (React)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=oxUyIzDbZts"&gt;Vuex (Vue)&lt;/a&gt;, &lt;a href=""&gt;Services (Angular)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Server Side Rendering (SSR)] : &lt;a href="https://www.youtube.com/user/Weibenfalk"&gt;Gatsby (React)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=vB6rmWCmANA"&gt;Gridsome (Vue)&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UC7Wpv0Aft4NPNhHWW_JC4GQ"&gt;Next.js (React)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=ltzlhAxJr74"&gt;Nuxt.js (Vue)&lt;/a&gt;, &lt;a href=""&gt;11ty&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Static Site Generators] : &lt;a href="https://www.youtube.com/channel/UC7Wpv0Aft4NPNhHWW_JC4GQ"&gt;Next.js (React)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=ltzlhAxJr74"&gt;Nuxt.js (Vue)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Package Managers] : &lt;a href=""&gt;NPM&lt;/a&gt;, &lt;a href=""&gt;Yarn&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Module Bundlers] : &lt;a href=""&gt;Webpack&lt;/a&gt;, &lt;a href=""&gt;Parcel&lt;/a&gt;, &lt;a href=""&gt;Rollup&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Version Control] : &lt;a href=""&gt;Git&lt;/a&gt;, &lt;a href=""&gt;GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ed8SzALpx1Q"&gt;GraphQl&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PL4cUxeGkcC9gTxqJBcDmoi5Q2pzDusSL7"&gt;Progressive Web Apps (PWA)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=73b1ZbmB96I"&gt;JAMstack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cbB3QEwWMlA"&gt;Web Assembly&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://alan.app/"&gt;Speech Recognition&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Back-End Starts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;[Pick A Language] : &lt;a href="https://www.youtube.com/watch?v=fBNz5xF-Kx4"&gt;JavaScript (Node.js)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=3Vt_cjgojDI"&gt;JavaScript (Deno)&lt;/a&gt;, &lt;a href="https://www.youtube.com/user/CalebTheVideoMaker2"&gt;Python&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=zF34dRivLOw"&gt;Rust&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=GhQdlIFylQ8"&gt;C#&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=GoXwIVyNvX0"&gt;Java&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=OK_JCtrrv-c"&gt;PHP&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=YS4e4q9oBaU"&gt;Go&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=t_ispmWmdjY"&gt;Ruby&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Back-End Frameworks] : &lt;a href="https://www.youtube.com/watch?v=MFh0Fd7BsjE"&gt;Laravel (PHP)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=vtPkZShrvXQ"&gt;Spring (Java)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=B3Fbujmgo60"&gt;Ruby on Rails (Ruby)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=L72fhGm1tfE"&gt;Express (Node.js)&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCTZRcDjjkVajGL6wd76UnGg"&gt;Django (Python)&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=Z1RJmh_OqeA"&gt;Flask (Python)&lt;/a&gt;, &lt;a href="https://www.youtube.com/channel/UCTbHPk0bIOQwTXuGgD195bw"&gt;Blazor (C#)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Databases] Types : Relational &lt;a href="https://www.youtube.com/watch?v=qw--VYLpxG4"&gt;✅ PostgreSQL&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=9ylj9NR0Lcg"&gt;MySQL&lt;/a&gt;, &lt;a href=""&gt;Azure Cloud SQL&lt;/a&gt;, &lt;a href=""&gt;MS SQL&lt;/a&gt; &amp;amp; NoSQL / Cloud &lt;a href="https://www.youtube.com/watch?v=-56x56UppqQ"&gt;✅ MongoDB&lt;/a&gt;, &lt;a href=""&gt;AWS&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=FEoEvSmtmPQ"&gt;Airtable&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=2CipVwISumA"&gt;FaunaDB&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=9kRgVxULbag"&gt;Firebase&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=fAKZxK-XamM"&gt;HarperDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FLnxgSZ0DG4"&gt;APIs&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;[Authentication] Providers &lt;a href="https://www.youtube.com/watch?v=MqczHS3Z2bc"&gt;Auth0&lt;/a&gt;, &lt;a href="https://www.youtube.com/watch?v=PKwu15ldZ7k"&gt;Firebase&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;1.23 Go Language&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://progate.com/languages/go"&gt;Go,Progate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Q0sKAMal4WQ"&gt;Go lang Tutorial For Beginners,Edureka Youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gobyexample.com/"&gt;Go by Example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://labex.io/skilltrees/golang"&gt;Go Hands-on Labs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h1&gt;2. Hackathons and Events&lt;/h1&gt; 
&lt;h2&gt;2.1 Top Global Hackathons 🌐&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;#&lt;/th&gt; 
   &lt;th&gt;Event&lt;/th&gt; 
   &lt;th&gt;Location&lt;/th&gt; 
   &lt;th&gt;In‑Person&lt;/th&gt; 
   &lt;th&gt;App Opens&lt;/th&gt; 
   &lt;th&gt;Event Dates&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://callforcode.org/challenge/"&gt;Call for Code Global Challenge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online/Global&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Mar 18, 2025&lt;/td&gt; 
   &lt;td&gt;Mar–Oct 2025&lt;/td&gt; 
   &lt;td&gt;Ongoing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hacktoberfest.com"&gt;Hacktoberfest&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;October 2025&lt;/td&gt; 
   &lt;td&gt;Annual&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://mlh.io/seasons/na-2025/events"&gt;Major League Hacking Events&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;USA/Canada/Mexico&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Various 2025&lt;/td&gt; 
   &lt;td&gt;Ongoing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://about.gitlab.com/community/hackathon/"&gt;GitLab Virtual Hackathon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Apr 10–17, 2025&lt;/td&gt; 
   &lt;td&gt;Scheduled&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.openhackathons.org/"&gt;OpenHackathons (NVIDIA)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Jun 24–Jul 3, 2025&lt;/td&gt; 
   &lt;td&gt;Scheduled&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.digitaljamaica.com/digital-jam-hackathon-2025/"&gt;Digital Jam Hackathon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Mar 28, 2025 (Deadline)&lt;/td&gt; 
   &lt;td&gt;Open&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.developerweek.com/hackathon/"&gt;DeveloperWeek Hackathon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Santa Clara, CA + Online&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Jan 2025&lt;/td&gt; 
   &lt;td&gt;Jan 27–Feb 13, 2025&lt;/td&gt; 
   &lt;td&gt;Ended&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.mitrealityhack.com/"&gt;MIT Reality Hack&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Boston, MA&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Jan 2025&lt;/td&gt; 
   &lt;td&gt;Ended&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nwhacks.io/"&gt;nwHacks 2025&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Vancouver, Canada&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Jan 18–19, 2025&lt;/td&gt; 
   &lt;td&gt;Ended&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hoyahacks.com/"&gt;Hoya Hacks 2025&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Washington, D.C.&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Jan 24–26, 2025&lt;/td&gt; 
   &lt;td&gt;Ended&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://qhacks.io/"&gt;QHacks 2025&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Kingston, Canada&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Jan 24–26, 2025&lt;/td&gt; 
   &lt;td&gt;Ended&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://nf-co.re/events/2025/hackathon-spring"&gt;nf-core Hackathon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global (Online + Local)&lt;/td&gt; 
   &lt;td&gt;Hybrid&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Mar 24–26, 2025&lt;/td&gt; 
   &lt;td&gt;Scheduled&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://callforcode.org/challenge/"&gt;Call for Code SDG6&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Mar 20–31, 2025&lt;/td&gt; 
   &lt;td&gt;Open&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://callforcode.org/challenge/"&gt;Call for Code SDG13&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;May 22–Jun 2, 2025&lt;/td&gt; 
   &lt;td&gt;Upcoming&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.wcrp-climate.org/news/wcrp-news/2203-kmscale-hackathon-2025"&gt;WCRP KM-scale Hackathon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;May 12–16, 2025&lt;/td&gt; 
   &lt;td&gt;Scheduled&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raise.mit.edu/global-ai-hackathon"&gt;Global AI Hackathon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Oct 2025&lt;/td&gt; 
   &lt;td&gt;Upcoming&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.spaceappschallenge.org/"&gt;NASA Space Apps Challenge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Oct 4–5, 2025&lt;/td&gt; 
   &lt;td&gt;Upcoming&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;2.2 Competitions 🏆&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ID&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Location&lt;/th&gt; 
   &lt;th&gt;Status 2025&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;Accenture Innovation Challenge&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; Onsite&lt;/td&gt; 
   &lt;td&gt;2025 applications closed; 2026 info in Fall ([accenture.com][1])&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;ACM – ICPC&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; Onsite&lt;/td&gt; 
   &lt;td&gt;Likely ongoing regionally (annual collegiate comp), no specific 2025 data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;CodersBit&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;Active platform, ongoing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Facebook Hacker Cup (Meta Hacker Cup)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;Active in 2025; last held Dec 7, 2024&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;Code Gladiators&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; Onsite&lt;/td&gt; 
   &lt;td&gt;Recurring, no 2025 specifics&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;E‑Yantra&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; Onsite&lt;/td&gt; 
   &lt;td&gt;Annual India robotics contest, likely 2025 held&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;Red Bull Basement University&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Annual, global student challenge, check 2025 timeline&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;Shell Ideas360&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; Onsite&lt;/td&gt; 
   &lt;td&gt;Active (check Shell site for 2025)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;Sony World Photography Awards – Youth Award&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;2025 cycle likely open&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;Doodle 4 Google&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;2025 edition expected&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;UN Volunteer&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Ongoing UN volunteering, not a contest&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;India Innovation Challenge (IICDC)&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; Onsite&lt;/td&gt; 
   &lt;td&gt;2018 outdated—remove&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;Quest Ingenium&lt;/td&gt; 
   &lt;td&gt;–&lt;/td&gt; 
   &lt;td&gt;Unclear current status—remove or verify&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;ROBOCON&lt;/td&gt; 
   &lt;td&gt;Onsite&lt;/td&gt; 
   &lt;td&gt;Likely ongoing (e.g., ABU ROBOCON 2025)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;Walmart‑CodeHers&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;Likely annual; verify 2025&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;CodeChef SnackDown&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; Onsite&lt;/td&gt; 
   &lt;td&gt;Active annual comp, next editions in 2025&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;2.3 Hackathon Search Portals &lt;span&gt;🎯&lt;/span&gt;&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;s.no&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Location&lt;/th&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hacksociety.tech/attend/"&gt;HackSociety&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;India&lt;/td&gt; 
   &lt;td&gt;ALL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://devpost.com/hackathons"&gt;DevPost&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; On-site&lt;/td&gt; 
   &lt;td&gt;ALL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hackerearth.com/"&gt;HackerEarth&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; On-site&lt;/td&gt; 
   &lt;td&gt;ALL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.hackathon.io/events"&gt;Hackathon.io&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;ALL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.techgig.com/challenge"&gt;TechGIG - Search Online Competitions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; On-Site&lt;/td&gt; 
   &lt;td&gt;ALL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.analyticsvidhya.com/"&gt;Analytical Vidya&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; On-Site&lt;/td&gt; 
   &lt;td&gt;Data Science&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hackathon.com/"&gt;Hackathon.com&lt;/a&gt; [Online &amp;amp; On-site]&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;ALL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dare2compete.com/bites"&gt;Dare2compete&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; On-site&lt;/td&gt; 
   &lt;td&gt;India&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.kaggle.com/competitions"&gt;Kaggle Competitions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
   &lt;td&gt;Data Science&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://mlh.io/"&gt;MLH&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;ALL&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;2.4 Events 🎫&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Check out these events for your region&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Google Developer Day - Organized by GDG&lt;/li&gt; 
 &lt;li&gt;Google IO extended - Organized by GDG&lt;/li&gt; 
 &lt;li&gt;Google Solve for India&lt;/li&gt; 
 &lt;li&gt;Paytm Build for India Workshops [ Delhi, Bangalore ]&lt;/li&gt; 
 &lt;li&gt;NVIDIA Developer Connect [ Global ]&lt;/li&gt; 
 &lt;li&gt;AWS meetups [ Global ]&lt;/li&gt; 
 &lt;li&gt;BrazilJS Conference &lt;a href="https://braziljs.org/conf/"&gt;August, RS, Brazil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hackathon at the NS &lt;a href="https://werkenbijns.nl/hackathon/"&gt;Netherlands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hacktoberfest.digitalocean.com/"&gt;Hacktoberfest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.codementor.io/events"&gt;Codementor Events&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;2.5 Startup Summits, Competitions and Bootcamps &lt;img alt="neckbeard" src="https://github.githubassets.com/images/icons/emoji/neckbeard.png?v8" /&gt;)&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ID&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Location&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.ecell.in/eureka/"&gt;Eureka - IITB&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mumbai, INDIA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://bootcamp.mit.edu/entrepreneurship/"&gt;MIT - Entrepreneurship Bootcamp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online &amp;amp; USA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.startupgrind.com/conference/#/"&gt;Startup Grind Global Conference&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Redwood City, California&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.marketing.org/conference/show/id/BMAANC2018"&gt;Next Gen Summit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;New York&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.startupschool.org/"&gt;Y Combinator's Startup School&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://picampus-school.com/programme/school-of-ai/"&gt;School of AI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rome, Italy&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.inacademy.eu/"&gt;European Innovation Academy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Portugal, China&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.ecelldtu.in/"&gt;Startup Weekend - DTU&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Delhi, India&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://watson.is/semester-incubator-application/"&gt;Watson School Incubator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;USA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://devmountain.com/"&gt;DevMountain&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;UT, AZ, TX&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.productschool.com"&gt;Product School&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online, USA, &amp;amp; Toronto&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hackeryou.com/"&gt;HackerYou&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Toronto&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://brainstation.io/"&gt;BrainStation&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online, USA, &amp;amp; Canada&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://lighthouselabs.ca/"&gt;Lighthouse Labs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Canada&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://redacademy.com"&gt;RED Academy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Canada&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://flatironschool"&gt;Flatiron School&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online, USA&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;2.6 Hiring Challenges&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ID&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Location&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://code.google.com/codejam/kickstart/"&gt;Google Kickstart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hackerrank.com/codeagon"&gt;CodeAgon- Codenation Hiring Challenge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hackerrank.com/adobe-codhers"&gt;Codhers- Adobe Hiring Challenge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hackerrank.com/visa-codeurway-2017"&gt;CodeUrWay- Visa Hiring Challenge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Online&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;3. Student Benefits and Programs &lt;span&gt;🔥&lt;/span&gt;&lt;/h1&gt; 
&lt;h2&gt;Campus Ambassador Programs &lt;span&gt;✌&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://studentambassadors.microsoft.com/"&gt;Microsoft Learn Student Ambassadors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://githubcampus.expert/"&gt;GitHub Campus Experts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecell.in/cr/"&gt;College Representative - E-Cell IITB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://internshala.com/"&gt;Internshala Student Partner - | ISP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://progate.com/"&gt;Progate Student Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.isb.edu/ylp/CAP"&gt;ISB - YLP Campus Ambassador Program &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/"&gt;GeeksforGeeks Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackerearth.com"&gt;HackerEarth Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackerrank.com"&gt;HackerRank Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interviewbit.com/pages/campus-ambassador/"&gt;Interviewbit Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;[Dell Campassadors Program](&lt;a href="https://dellfuturist.com/the-dell-camp"&gt;https://dellfuturist.com/the-dell-camp&lt;/a&gt; ambassadors-program)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://software.intel.com/en-us/ai-academy/ambassadors/apply"&gt;Intel Ambassador Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.codechef.com/"&gt;Codechef Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ingressive.co/ingressive-campus-ambassadors/"&gt;Ingressive Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mozilla.org/en-US/contribute/studentambassadors/"&gt;Mozilla Student Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://frontbench.xyz/campus-connect"&gt;Frontbench Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.codechef.com/college-chapter/about"&gt;Codechef Campus Ambassador&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/education/awseducate/students/" title="AWS"&gt;AWS Educate(Amazon)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.codementor.io/students"&gt;Codementor for Students&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/"&gt;Geeksforgeeks Campus Ambassador Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mathworks.com/academia/students/student-ambassadors.html"&gt;MATLAB Student Ambassador Program&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Student Benefits and Packs &lt;span&gt;✌&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://education.github.com/pack"&gt;GitHub Student Developer Pack - Free Resources for Students&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft students: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://visualstudio.microsoft.com/dev-essentials/"&gt;Visual Studio Essentials - Access to Microsoft Premium Services &lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://imagine.microsoft.com/en-us/catalog"&gt;Microsoft Imagine Pack - Tools and subscriptions for Students&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://azure.microsoft.com/en-gb/free/students/"&gt;Microsoft Azure - $100 Azure credit for students&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/education/products/office/default.aspx"&gt;Free Microsoft Office 365 for Students&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jetbrains.com/student/"&gt;JetBrains Students pack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/education/awseducate/"&gt;AWS Educate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/free/"&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://software.intel.com/en-us/ai-academy/ambassadors/apply"&gt;Intel Developer pack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pluralsight.com/partners/google/"&gt;Google Reskilling India Program | Pluralsight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://get.tech/students"&gt;Free .tech domain for 1 year | dot tech Domains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.znetlive.com/student-web-hosting/"&gt;Free Web Hosting for 1 year | Znetlive&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitbucket.org/product/education"&gt;Bitbucket Education&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nc.me/"&gt;Namecheap free .name Domain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.autodesk.com/education/free-software/featured"&gt;Autodesk Education software for students&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.invisionapp.com/education-signup"&gt;Invision Free app for Education&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drew-royster/canvasFileSync"&gt;Canvas File Sync&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudcredits.io"&gt;CloudCredits.io - Free credits for prototyping and building startups&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Student Fellowship Programs &lt;span&gt;✌&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="http://universityinnovationfellows.org/"&gt;University Innovation Fellowship - Stanford University&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://apply.teachforindia.org/"&gt;Teach for India Fellowship&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=""&gt;Young India Fellowship&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.urbanleadersfellowship.org/"&gt;Urban Leaders Fellowship&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=""&gt;Facebook fellowship Program - &lt;strong&gt;Only For PHD Scholars&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://lamp.prsindia.org/thefellowship"&gt;Legislative Assistants to Members of Parliament (LAMP) Fellowship&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=""&gt;Prime Minister's Rural Fellowship&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=""&gt;Azim Premji Foundation Fellowship Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href=""&gt;Stanford-ABC News Global Health and Media Fellowship&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Scholarships &lt;span&gt;🏃&lt;/span&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://blog.udacity.com/2018/10/introducing-the-pytorch-scholarship-challenge-from-facebook.html"&gt;Pytorch Scholarship Challenge - Udacity&lt;/a&gt; Application Deadline - &lt;strong&gt;October 23rd&lt;/strong&gt; 9:30PM PST&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.shastriinstitute.org/grants-awards-and-opportunities-for-indian-canadian-scholars"&gt;Grants, Awards AND Opportunities For Indian/Canadian Scholars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://bit.ly/DevCTrainingInterest1"&gt;Facebook Developer Circle Scholarship Program - DataScience/Frontend Dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.coursereport.com/blog/the-definitive-list-of-programming-bootcamp-scholarships"&gt;Coding Bootcamp Scholarships - Course Report&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.apple.com/wwdc19/scholarships/"&gt;Apple WWDC Scholarship&lt;/a&gt; Application Deadline - &lt;strong&gt;Mid-April&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.udacity.com/bertelsmann-data-scholarships"&gt;Technology Scholarship Program - Udacity&lt;/a&gt; Application deadline - &lt;strong&gt;November 6th, 2019&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.iie.org/Programs/WeTech/STEM-Scholarships-for-Women/Goldman-Sachs-Scholarship"&gt;Goldman Sachs Global Scholarship and Mentorship Program&lt;/a&gt; Applications are welcomed in December - January period.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ghc.anitab.org/2019-student-academic/scholarships/"&gt;Grace Hoppers Conference Program&lt;/a&gt; Applications are opened in mid-January.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.facebook.com/scholarcorner/posts/2323154047763329?comment_tracking=%7B%22tn%22%3A%22O%22%7D"&gt;Facebook Grace Hopper Scholarship 2019&lt;/a&gt; Applications are opened in March - April before the registration for GHC starts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://buildyourfuture.withgoogle.com/scholarships/venkat-panchapakesan-memorial-scholarship/#!?detail-content-tabby_activeEl=overview"&gt;Venkat Panchapakesan Memorial Scholarship&lt;/a&gt; Applications are opened in the period between May and August every year.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.womentechmakers.com/scholars"&gt;Women Techmakers Scholars Program&lt;/a&gt; Applications are opened in June-July every year.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ghcindia.anitab.org/ghci-19-student-scholarships-2/"&gt;GHC India Student Scholarships&lt;/a&gt; Applications are opened in the months of May - June every year.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://research.adobe.com/adobe-india-women-in-technology-scholarship/"&gt;Adobe India Women-in-Technology Scholarship&lt;/a&gt; Application are opened in September - October every year.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://careers.microsoft.com/students/us/en/usscholarshipprogram"&gt;Microsoft Scholarship Program&lt;/a&gt; &lt;strong&gt;Applications open in October 2019!&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.udacity.com/bertelsmann-tech-scholarships"&gt;Udacity - Bertelsmann Technology Scholarships Program&lt;/a&gt; &lt;strong&gt;Application deadline - November 16th, 2020&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ongcscholar.org/"&gt;ONGC Foundation&lt;/a&gt; Applications open every year&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h1&gt;4. Open Source Programs&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;For more Detailed Information about the GSOC Organization&lt;/strong&gt; - &lt;a href="https://github.com/dipakkr/A-to-Z-Resources-for-Students/raw/master/GSOC.md"&gt;Click Here&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Id&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Organization&lt;/th&gt; 
   &lt;th&gt;Stipend/Incentives&lt;/th&gt; 
   &lt;th&gt;Timeline&lt;/th&gt; 
   &lt;th&gt;Deadline&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://summerofcode.withgoogle.com/"&gt;Google Summer of Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Google&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://railsgirlssummerofcode.org/"&gt;Rails Girls Summer Of Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://rada.re/rsoc"&gt;Radare Summer of Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.dataone.org/internships"&gt;DataONE Summer Internship Program&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;DataONE&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://pennapps.com/"&gt;BOSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Coding Blocks, INDIA&lt;/td&gt; 
   &lt;td&gt;YES&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gssoc.girlscript.tech/#"&gt;GirlScript Summer of Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Prizes &amp;amp; Goodies&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://season.kde.org"&gt;Season of KDE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;KDE&lt;/td&gt; 
   &lt;td&gt;Prizes&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://season.kde.org"&gt;The X.Org Endless Vacation of Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;X.Org&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.fsf.org/volunteer/internships"&gt;Free Software Foundation internships&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Free Software Foundation&lt;/td&gt; 
   &lt;td&gt;NO&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.outreachy.org/"&gt;Outreachy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gssoc.girlscript.tech/"&gt;GSSOC(GirlScript Summer of Code)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;GirlScript Foundation&lt;/td&gt; 
   &lt;td&gt;For top 50&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;For More Open Source Competitons and Programs&lt;/strong&gt; - &lt;a href="https://github.com/tapasweni-pathak/SOC-Programs"&gt;Click Here&lt;/a&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;For more detailed information about the GSOC Organization&lt;/strong&gt; - &lt;a href="https://github.com/dipakkr/A-to-Z-Resources-for-Students/raw/master/GSOC.md"&gt;Click Here&lt;/a&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h1&gt;5. Startup Programs and Incubators &lt;span&gt;🔎&lt;/span&gt;&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Id&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Organization&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.amity.edu/"&gt;Amity Innovation Incubator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Amity University&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.aim.gov.in/"&gt;Atal Incubation Centre&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Government&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://developers.google.com/programs/launchpad/accelerators/"&gt;Google LaunchPad Accelerator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Google&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.sv.co/"&gt;Startup Village&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;SV.CO&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://t-hub.co/"&gt;T HUB &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://aim.gov.in/overview.php"&gt;Atal Innovation challenge&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;NITI, AYOG&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gebootcamp.com/"&gt;Global Entrepreneurship Bootcamp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Malaysia&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://inova.imd.ufrn.br/parque/inova/"&gt;Inova Metrópole&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;IMD/UFRN, Brazil&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;6. Internship Programs&lt;/h1&gt; 
&lt;h2&gt;Internships&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://www.myciip.com/"&gt;Cisco International Internship Program&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://japan-internships.com/"&gt;Sakae Japan Internship Program: SJIP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://buildyourfuture.withgoogle.com/programs/step/"&gt;Student Training in Engineering Program: Google STEP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://home.cern/summer-student-programme"&gt;Summer Student Opportunities&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Internship Portals&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For summer internship, start looking at least 3-4 months in advance. #Tip&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://angel.co"&gt;Angel List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://internshala.com"&gt;Internshala&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.vettery.com/"&gt;Vettery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://linkedin.com"&gt;LinkedIn&lt;/a&gt; &lt;em&gt;Contact HRs on LinkedIn&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackkar.com/"&gt;Hackkar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.letsintern.com"&gt;LetsIntern&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://intern.supply/"&gt;Intern Supply&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.indeed.ca/"&gt;Indeed&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h1&gt;7. Developer Clubs and Meetups&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;h2&gt;&lt;strong&gt;Take a moment to search for these clubs on Google and Facebook in your city.&lt;/strong&gt;&lt;/h2&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;h2&gt;&lt;strong&gt;Check &lt;strong&gt;Meetup.com&lt;/strong&gt; for more events in your locality&lt;/strong&gt;&lt;/h2&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Id&lt;/th&gt; 
   &lt;th align="center"&gt;Name Of The Community&lt;/th&gt; 
   &lt;th align="center"&gt;Area&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developers.google.com/programs/community/gdg/"&gt;Google Developer Group&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;All States&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.mozilla.org/en-US/moss/"&gt;Mozilla Open Source Community&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi and Banglore&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://campus.mozilla.community/"&gt;Mozilla Campus Clubs&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developers.facebook.com/developercircles"&gt;Facebook Developer Circle&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://womentechmakers.com"&gt;Women Tech Makers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.womenwhocode.com/"&gt;Women Who Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.womenintechnology.org/"&gt;Women In Tech&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://developers.google.com/training/programs/"&gt;Developers Student Club by Google&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;All Colleges accross India&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://techcommunity.microsoft.com/"&gt;Microsoft Student Technical Community&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.meetup.com/en-AU/Paytm-Build-for-India/"&gt;Paytm Build for India&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi and Bangalore&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.meetup.com/pydelhi/events/254577423/"&gt;PyDelhi&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.toastmasters.org"&gt;Toastmaster International&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.meetup.com/topics/swift-language/?_cookie-check=a8aAkZ14Ew1b6cnt"&gt;Swift Users Group&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.meetup.com/topics/mongodb/"&gt;MUG - MongoDB User Group&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://forloop.africa"&gt;Forloop Africa&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://womenintech.fi/"&gt;Women in Tech (Finland)&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://meetabit.com/communities/helsinkijs"&gt;HelsinkiJS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.100daysofcode.com/connect/"&gt;100 Days of Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Online&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.meetup.com/pt-BR/nerdzao/"&gt;Nerdzão Brazil&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.girldevelopit.com/chapters"&gt;Girl Develop It&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://rladies.org/"&gt;R-Ladies&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.linuxdelhi.org/"&gt;India Linux Users Group Delhi&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.pyladies.com/"&gt;PyLadies&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://pydata.org/delhi2018/"&gt;PyData Delhi&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.linuxchix.org/"&gt;LinuxChix&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Delhi&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://www.owasp.org/index.php/Jaipur"&gt;Owasp&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jaipur&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://acm.org/"&gt;ACM Student Chapter&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;All Colleges Worldwide&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;8. Conferences &lt;span&gt;📑&lt;/span&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;strong&gt;Tech, Entrepreneurship Events and Conferences&lt;/strong&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Id&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Place&lt;/th&gt; 
   &lt;th&gt;Travel Reimbursement&lt;/th&gt; 
   &lt;th align="left"&gt;Timeline&lt;/th&gt; 
   &lt;th align="left"&gt;Deadline&lt;/th&gt; 
   &lt;th align="left"&gt;Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.codementor.io/events/developer-growth-summit"&gt;Developer Growth Summit 2022&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;April 20, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;April 21, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://us.pycon.org/2022/"&gt;PyCon US-Python Conference USA&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Salt Lake City, USA&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;April 27, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;May 3, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;Python&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.world-business-dialogue.com/"&gt;World Business Dialogue&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;June 6, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;June 20, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://asiapacificweek.anu.edu.au/"&gt;Asia Pacific Week&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Australia&lt;/td&gt; 
   &lt;td&gt;Partial&lt;/td&gt; 
   &lt;td align="left"&gt;June 20, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;June 23, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aws.amazon.com/events/summits/new-delhi/"&gt;AWS Summit, New Dehli&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;India&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;Sept 9, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://ghc.anitab.org"&gt;Grace Hopper Conference and Fellowship&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Orlando, FL, USA&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;Sept 20, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;Sept 23, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://techcrunch.com/events/tc-disrupt-2022/"&gt;TechCrunch Disrupt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;USA&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;Oct 18, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;Oct 20, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://websummit.net/"&gt;Dublin Web Summit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Dublin&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;Nov 1, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;Nov 4, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;Web&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://websummit.com/"&gt;Web Summit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Lisbon&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;Nov 1, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;Nov 4, 2022&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.cgiu.org/"&gt;Clinton Global Initiative University&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;USA&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;Varies&lt;/td&gt; 
   &lt;td align="left"&gt;Varies&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://odsc.com/"&gt;ODSC&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Global&lt;/td&gt; 
   &lt;td&gt;Varies&lt;/td&gt; 
   &lt;td align="left"&gt;Varies&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;AI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://businesstoday.org/conferences/"&gt;Business Today Conference&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;New York&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;Business&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.dotjs.io/"&gt;DotJS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;France&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;JS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.pycon.fr/2018/"&gt;PyCon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;France&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;Python&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.react-europe.org/"&gt;React Europe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;France&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;JS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.hpair.org/"&gt;Harvard Project for Asian and International Relations&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Malaysia&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://studentleadershipconference.com/"&gt;Student Leadership conference&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;USA&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://hackference.in/"&gt;Hackference India &lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;India&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.javaland.eu/en/home/"&gt;JavaLand&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Germany&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;Lectures, Trainings, Community Activities&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://wwdc.apple.com"&gt;WWDC (Apple World Wide Developer Conference)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;San Jose, USA&lt;/td&gt; 
   &lt;td&gt;Can Apply&lt;/td&gt; 
   &lt;td align="left"&gt;PASSED&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;Apple new technology launch events, Swift&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Data Science Conferences in 2019 and 2020&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Conference&lt;/th&gt; 
   &lt;th align="left"&gt;Location&lt;/th&gt; 
   &lt;th align="left"&gt;Date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="http://www.predictiveanalyticsworld.com"&gt;Predictive Analytics World&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Las Vegas, USA&lt;/td&gt; 
   &lt;td align="left"&gt;May 31-June 4, 2020&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="http://conferences.oreilly.com/strata"&gt;Strata Data Conference&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;USA, UK&lt;/td&gt; 
   &lt;td align="left"&gt;20 Apr - 23 Apr 2020 (Varies)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.odsc.com"&gt;Open Data Science Conference&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UK, USA&lt;/td&gt; 
   &lt;td align="left"&gt;Varies&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/dipakkr/A-to-Z-Resources-for-Students/master/www.bigdatacon.jp"&gt;Big Data Analytics Tokyo&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Tokyo, Japan&lt;/td&gt; 
   &lt;td align="left"&gt;28 Oct- 8 Noc 2019&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.ibm.com/events/think/index.html"&gt;IBM think 2019&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Las Vegas, USA&lt;/td&gt; 
   &lt;td align="left"&gt;4-7 May 2020&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="http://mlconf.com"&gt;MLConf&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;San Francisco, USA&lt;/td&gt; 
   &lt;td align="left"&gt;8 Nov 2019&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://www.kdd.org/kdd2018/"&gt;KDD&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;London&lt;/td&gt; 
   &lt;td align="left"&gt;22-27 Aug 2020&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://conferences.oreilly.com/artificial-intelligence"&gt;AI Conf&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SanJose/Beijing/NY/London&lt;/td&gt; 
   &lt;td align="left"&gt;Aug 2020&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="http://www.icsess.org"&gt;ICSESS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Beijing, China&lt;/td&gt; 
   &lt;td align="left"&gt;October 18-20, 2019&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;9. Top People to Follow&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Id&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/aarongable"&gt;Aaron Gable&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Google Chrome Developer (BR)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/addyosmani"&gt;Addy Osmani&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web &amp;amp; Chrome&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.linkedin.com/in/andrewyng/"&gt;Andrew NG&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AI &amp;amp; ML&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/benjaminpasero"&gt;Benjamin Pasero&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Software engineer at Microsoft, VSCode&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/TechGuyWeb"&gt;Brad Traversy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Web Developer, Programmer, YouTuber&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://shiffman.net/"&gt;Daniel Shiffman&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Programmer / Former project lead with the &lt;a href="https://processing.org/"&gt;Processing Foundation&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/youyuxi"&gt;Evan You&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Creator of Vue.js&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/giggio"&gt;Giovanni Bassi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;MVP Microsoft BR&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://gvanrossum.github.io/"&gt;Guido van Rossum&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python Creator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/izs"&gt;Isaac Schlueter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;npm Creator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jakevdp"&gt;Jake Vanderplas&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python Data Science&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/jensimmons"&gt;Jen Simmons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;CSS expert, creator of Firefox Grid Inspector.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/jeresig"&gt;John Resig&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Creator of jQuery&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.poetofcode.com/"&gt;Joy Buolamwini&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Artificial intelligence, Algorithmic Justice League&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/getify"&gt;Kyle Simpson&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Author of YDKJS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/leonardomso"&gt;Leonardo Maldonado&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Top 2 developerTrending (BR)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/torvalds"&gt;Linus Torvalds&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Linux Founder&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/martinfowler"&gt;Martin Fowler&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Software developer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/mikewcohn"&gt;Mike Cohn&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Scrum and Agile Advocate&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/themsaid"&gt;Mohamed Said&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Works with Taylor Otwell on Laravel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://www.paulgraham.com/"&gt;Paul Graham&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Startup Expert, Founder of Y-Combinator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;22&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/ossia"&gt;Quincy Larson&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Teacher that started free code camp&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;23&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/rebeccaparsons"&gt;Rebecca Parsons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Distributed computation, Genetic algorithms, and computational science&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;24&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://stallman.org/"&gt;Richard Stallman&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Founder of the GNU Project&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;25&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ry"&gt;Ryan Dahl&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Inventor of Node.js&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;26&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.sandimetz.com/"&gt;Sandi Metz&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Software developer and author focused on writing flexible object-oriented code&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;27&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCWN3xxRkmTPmbKwht9FuE5A"&gt;Siraj Raval&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AI &amp;amp; ML&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.linkedin.com/in/tarrysingh/"&gt;Tarry Singh&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AI &amp;amp; ML&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;29&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/taylorotwell"&gt;Taylor Otwell&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Creator of Laravel&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/unclebobmartin"&gt;Uncle Bob Martin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Software developer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;31&lt;/td&gt; 
   &lt;td&gt;&lt;a href="http://twitter.com/shergin"&gt;Valentin Shergin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;React Native Developer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;32&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://thecodebarbarian.wordpress.com/about/"&gt;Valeri Karpov&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;MEAN stack expert&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;33&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://vaughnvernon.co/"&gt;Vaughn Vernon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Domain Driven Design expert&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;34&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/victorsavkin"&gt;Victor Savkin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Angular Developer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;35&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.linkedin.com/in/montrealai"&gt;Vincent Boucher&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AI &amp;amp; ML&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;36&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.facebook.com/yann.lecun"&gt;Yann LeCun&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;VP &amp;amp; Chief AI Scientist at Facebook&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;37&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/yukihiro_matz"&gt;Yukihiro Matsumoto&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ruby Creator&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;38&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://twitter.com/ioerror"&gt;Jacob Appelbaum&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Computer Security Researcher&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;10. Top Websites to Follow&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Science&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="http://www.datacamp.com/courses"&gt;Data Science Courses: R &amp;amp; Python Analysis Tutorials | DataCamp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://cs109.github.io/2015/"&gt;CSE-109 - Harvard University&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://cs231n.stanford.edu/"&gt;CSE231N - Computer Vision Stanford University&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.developercircleresources.com/learningPath/data/"&gt;Developer Circles Data Resources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.kaggle.com/learn/overview"&gt;Kaggle Learn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.datatau.com/news"&gt;DataTau: The data science equivalent of Hacker News&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://towardsai.net/"&gt;Towards AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.analyticsvidhya.com/"&gt;Analytics Vidhya&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://towardsdatascience.com/"&gt;Towards Data Science&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://realpython.com/tutorials/data-science/"&gt;Real Python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.edureka.co/blog/category/data-science/"&gt;Edureka&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.kdnuggets.com/"&gt;KD nuggets&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.elementsofai.com/"&gt;Elements of AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.google.com/machine-learning/crash-course"&gt;Google ML Crash Course&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/data-science-interview-questions/"&gt;Data Science-InterviewBit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.appliedaicourse.com/blog/data-analytics-interview-questions/"&gt;Data Science-Applied AI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.scaler.com/blog/is-data-analyst-a-good-career/"&gt;Data Analyst as a career - Scaler Blogs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Startup News and Stories&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://news.ycombinator.com/"&gt;YCombinator's Hacker News&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yourstory.com/"&gt;YourStory&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.entrepreneur.com/"&gt;Entrepreneur.com&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://techcrunch.com/"&gt;TechCrunch - Tech and Startup News&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://producthunt.com"&gt;ProductHunt&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://thehustle.co/"&gt;The Hustle&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Computer science in general&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.computerscience.org/"&gt;All about computer science&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.compscilib.com/"&gt;CompSciLib - 24/7 CS &amp;amp; Math Tutor&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;11. Top 50 YouTube Channels to Follow&lt;/h1&gt; 
&lt;h2&gt;11.1 Top 10 in Technology&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sr. No.&lt;/th&gt; 
   &lt;th&gt;Channel&lt;/th&gt; 
   &lt;th&gt;No. of Subscribers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/MIT/about"&gt;MIT OpenCourseWare&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2.1M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ/about"&gt;freeCodeCamp.org&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.32M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/BostonDynamics/about"&gt;BostonDynamics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.55M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCxX9wt5FWQUAAz4UrysqK9A/about"&gt;CS Dojo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.1M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/Computerphile/about"&gt;Computerphile&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.47M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/sentdex/about"&gt;sentdex&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;734K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/nptelhrd/about"&gt;Nptel&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.57M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UC0e3QhIYukixgh5VVpKHH9Q/about"&gt;Code Bullet&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.63M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/numberphile/about"&gt;NumberPhile&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3.04M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/CppCon/about"&gt;CppCon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;62.9K&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;11.2 Top 10 in Startup&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sr. No.&lt;/th&gt; 
   &lt;th&gt;Channel&lt;/th&gt; 
   &lt;th&gt;No. of Subscribers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/TEDtalksDirector/about"&gt;TED&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;15M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/tailopezofficial/about"&gt;Tai Loapez&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.31M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/ThisWeekIn/about"&gt;This Week in Startups&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;131K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/GoogleBusiness/about"&gt;Google Small Business&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;274K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCxIJaCMEptJjxmmQgGFsnCg/feed"&gt;How to Start a Startup&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;100K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/masterlock77/about"&gt;Tim Ferriss&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;486K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCh_dVD10YuSghle8g6yjePg/about"&gt;Naval Ravikant&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;39.8K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCcefcZRL2oaA_uBNeo5UOWg/about"&gt;Y Combinator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;198K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCwHZNWLHHT9RlW4F80a9byQ/about"&gt;Startup Authority&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;634K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/StartupGrind/about"&gt;Startup Grind&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;45.1K&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;11.3 Top 10 in Design&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sr. No.&lt;/th&gt; 
   &lt;th&gt;Channel&lt;/th&gt; 
   &lt;th&gt;No. of Subscribers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/tutvid/about"&gt;tutvid&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;936K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/TheSkoolRocks/about"&gt;The Futur&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;591K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UC_mkC8ChfzCJcuSqSMwvUWw/about"&gt;Spoon Graphics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;300K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/breakdesignsco/about"&gt;Will Paterson&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;352K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/Skillshare/about"&gt;Skillshare&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;189K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/perhiniak/about"&gt;Yes I am a Designer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;191K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCX4mqbvv5lGqLpI4FYlJt4w/about"&gt;Gigantic&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;157K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/ovenrude/about"&gt;Matt Borchert&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;66K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/charlimarieTV/about"&gt;CharliMarieTV&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;141K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/mlwebco/about"&gt;Mike Locke&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;90.8K&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;11.4 Top 10 in Business&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sr. No.&lt;/th&gt; 
   &lt;th&gt;Channel&lt;/th&gt; 
   &lt;th&gt;No. of Subscribers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/businessinsider/about"&gt;Business Insider&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2.09M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/GaryVaynerchuk/about"&gt;GaryVee&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2.33M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/EntrepreneurOnline/about"&gt;Entrepreneur&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;512K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/BrianTracySpeaker/about"&gt;Brian Tracy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;898K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/marieforleo/about"&gt;Marie Forleo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;590K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/stanfordbusiness/about"&gt;Stanford Business&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;745K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/GrantCardone/about"&gt;Grant Cardone&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;1.2M&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCydShVfAub9TSmL1N4BTlGQ/about"&gt;Young Entrepreneurs Forum&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;548K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/GoogleBusiness/about"&gt;Google Small Business&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;274K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UC_E4px0RST-qFwXLJWBav8Q/about"&gt;Business Casual&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;694K&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;11.5 Top 10 in Finance&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Sr. No.&lt;/th&gt; 
   &lt;th&gt;Channel&lt;/th&gt; 
   &lt;th&gt;No. of Subscribers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCIALMKvObZNtJ6AmdCLP7Lg/about"&gt;Bloomberg TV Markets and Finance&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;413K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCnMn36GT_H0X-w5_ckLtlgQ/about"&gt;Financial Education&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;354K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/MoneyTalksNews/about"&gt;MoneyTalks News&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;40.6K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCSPYNpQ2fHv9HJ-q6MIMaPw/about"&gt;The Financial Diet&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;712K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCrvJc8oOqtQf9MEs_UXsBMQ/about"&gt;RICH TV LIVE&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;21.8K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UC3mjMoJuFnjYRBLon_6njbQ/about"&gt;Ryan Scribner&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;471K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/FinancialTimesVideos/about"&gt;Financial Times&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;348K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/TheBeatTheBush/about"&gt;BeatTheBush&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;267K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;9&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/user/FinanceTubebyVishalT/about"&gt;Finance Tube&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;59.2K&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/channel/UCGtbVv_ACgV7difdVZ92NMw/about"&gt;Corporate Finance Institute&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;66.4K&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;12. Additional Links&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://inc42.com/resources/top-20-startup-incubators-india/"&gt;Top 10 Startup Incubator in India&lt;/a&gt; - &lt;em&gt;Startup&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5MgBikgcWnY"&gt;The first 20 hours -- how to learn anything&lt;/a&gt; - &lt;em&gt;Learning&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=c0KYU2j0TM4"&gt;Are you Introvert? Watch this - Power of Introverts &lt;/a&gt; - &lt;em&gt;Self Introspection&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.scholars4dev.com/13300/international-scholarships-top-universities-world/"&gt;30 International Scholarships offered by the World's Top Universities&lt;/a&gt; - &lt;em&gt;Scholarships&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bornrealist.com/famous-books/"&gt;30 Famous Books that You Will Regret Not Reading!&lt;/a&gt; - &lt;em&gt;Reading&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ycombinator.com/rfs/"&gt;Startup Ideas By Y Combinator&lt;/a&gt; - &lt;em&gt;Startup&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.learnhowtoprogram.com/tracks"&gt;Epicodus Coding Bootcamp Full Curriculum&lt;/a&gt; - &lt;em&gt;Learning&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wemakescholars.com/blog/common-misconceptions-about-studying-abroad/"&gt;5 most common misconceptions about studying abroad among Indians&lt;/a&gt; &lt;em&gt;Study Abroad&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.appacademy.io/#free"&gt;App Academy - Full Stack Coding Bootcamp, Free Curriculum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ossu/computer-science"&gt;Path to a free self-taught education in Computer Science&lt;/a&gt; - &lt;em&gt;Learning&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.builtbygirls.com/programs/wave"&gt;Free Women-Only Mentorship Program&lt;/a&gt; - &lt;em&gt;Learning&lt;/em&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;13. Coding Bootcamps&lt;/h1&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Id&lt;/th&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Track&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Country&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://lambdaschool.com/"&gt;Lambda School&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;FullStack, Data Science, Android, iOS&lt;/td&gt; 
   &lt;td&gt;No Upfront Fees, Pay 17.5% of salary only when you get a job&lt;/td&gt; 
   &lt;td&gt;USA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.springboard.com/"&gt;SpringBoard&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;DataScience&lt;/td&gt; 
   &lt;td&gt;2 Year experience as Software Dev, Only Pay if you get a Job&lt;/td&gt; 
   &lt;td&gt;USA, India&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://pesto.tech"&gt;Pesto Tech&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;FullStack JavaScript&lt;/td&gt; 
   &lt;td&gt;2 Year experience as Software Dev, Only pay 17.5 % of salary when you get more than 15LPA&lt;/td&gt; 
   &lt;td&gt;India&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.interviewbit.com/academy/"&gt;InterviewBit Academy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Software Developer&lt;/td&gt; 
   &lt;td&gt;No Experience Required, 6 month online trainging, Only Pay when you get a Job&lt;/td&gt; 
   &lt;td&gt;India&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://generalassemb.ly"&gt;General Assembly&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Software Developer, Data Science, Android, iOS, Design&lt;/td&gt; 
   &lt;td&gt;On Campus and fully remote options, both part-time and full-time&lt;/td&gt; 
   &lt;td&gt;US and International&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.codingdojo.com"&gt;Coding Dojo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Software Developer, Data Science&lt;/td&gt; 
   &lt;td&gt;Remote and On Campus options, Software dev teaches 3 full stacks&lt;/td&gt; 
   &lt;td&gt;US and International&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;14. Miscellaneous Resources&lt;/h1&gt; 
&lt;h2&gt;14.1 Design Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Youtube Channels &amp;amp; Playlists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WONZVnlam6U&amp;amp;list=PLYfCBK8IplO4E2sXtdKMVpKJZRBEoMvpn"&gt;Beginners Guide to Graphic Design | 45 episode series&lt;/a&gt; &lt;em&gt;Playlist&lt;/em&gt; &lt;span&gt;👶&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCF6WjcZeVqy3MLBpp86eOyw"&gt;Mohamed Achraf&lt;/a&gt; &lt;em&gt;Great tutorials for Logo Designing&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/user/ForeverDansky"&gt;Dansky&lt;/a&gt; &lt;em&gt;All about Graphic Designing&lt;/em&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/user/DesignCourse"&gt;DesignCourse&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;14.2 Podcasts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Technology&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Code Newbie&lt;/li&gt; 
   &lt;li&gt;The Bike Shed&lt;/li&gt; 
   &lt;li&gt;Soft Skills Engineering&lt;/li&gt; 
   &lt;li&gt;Programming Throwdown&lt;/li&gt; 
   &lt;li&gt;Hanselminutes&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Startup and Entrepreneurship&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;StartUp&lt;/li&gt; 
   &lt;li&gt;How I Built This&lt;/li&gt; 
   &lt;li&gt;The Pitch&lt;/li&gt; 
   &lt;li&gt;The Growth Show&lt;/li&gt; 
   &lt;li&gt;Scrum master toolbox&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Life&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Unf*ck your brain&lt;/li&gt; 
   &lt;li&gt;By the Book&lt;/li&gt; 
   &lt;li&gt;Strength and Scotch&lt;/li&gt; 
   &lt;li&gt;Happier with Gretchen Rubin&lt;/li&gt; 
   &lt;li&gt;The Minimalists&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Other&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Tracks to Relax&lt;/li&gt; 
   &lt;li&gt;Unladylike&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;15. Top Sites for Aptitude Preparation for Placements&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Quantitative Aptitude&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.indiabix.com/"&gt;IndiaBix&lt;/a&gt; - Comprehensive practice tests and explanations&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://artofproblemsolving.com/"&gt;ArtOfProblemSolving&lt;/a&gt; - Advanced math problems with detailed solutions&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.mathsguru.com/"&gt;MathsGuru&lt;/a&gt; - Topic-wise practice and video explanations&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.careerride.com/online-aptitude-test.aspx"&gt;CareerRide&lt;/a&gt; - Practice tests and interview prep&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Logical Reasoning&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://testpot.com/"&gt;Testpot&lt;/a&gt; - Logical and analytical reasoning practice&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.hitbullseye.com/"&gt;Hitbullseye&lt;/a&gt; - Free practice tests and study material&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.sawaal.com/"&gt;Sawaal&lt;/a&gt; - Question bank with solutions&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/puzzles/"&gt;GeeksforGeeks Puzzles&lt;/a&gt; - Logical puzzles and brain teasers&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verbal Ability&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://testfunda.com/"&gt;TestFunda&lt;/a&gt; - Comprehensive verbal ability practice&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.examveda.com/"&gt;ExamVeda&lt;/a&gt; - English grammar and vocabulary&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tcyonline.com/"&gt;TCYonline&lt;/a&gt; - Practice tests for verbal sections&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.vocabulary.com/"&gt;VocabBuilder&lt;/a&gt; - Vocabulary improvement tools&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Company-Specific Practice&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.faceprep.in/"&gt;Face Prep&lt;/a&gt; - Company-specific preparation materials&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://prepinsta.com/"&gt;PrepInsta&lt;/a&gt; - Previous year questions and company patterns&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.placementseason.com/"&gt;Placement Season&lt;/a&gt; - Company-wise practice tests&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.myamcat.com/"&gt;AmCat Practice Tests&lt;/a&gt; - Adaptive practice tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mock Test Platforms&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://mettl.com/"&gt;Mercer Mettl&lt;/a&gt; - Professional assessment platform&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.cocubes.com/"&gt;CoCubes&lt;/a&gt; - Placement preparation platform&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.elitmus.com/"&gt;eLitmus&lt;/a&gt; - pH test practice&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.aspiringminds.com/"&gt;AspiringMinds&lt;/a&gt; - AMCAT practice tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Free Resources&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://brilliant.org/"&gt;Brilliant.org&lt;/a&gt; - Interactive courses and problems&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.khanacademy.org/"&gt;Khan Academy&lt;/a&gt; - Free math and reasoning practice&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/results?search_query=aptitude+preparation"&gt;YouTube Channels&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/c/unacademy"&gt;Unacademy&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/user/CareerRideVideos"&gt;CareerRide&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.youtube.com/c/MathsTricks"&gt;MathsTricks&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mobile Apps&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.careerpower.aptitude"&gt;Aptitude Test by Career Power&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.placement.preparation"&gt;Placement Preparation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.aptitude.preparation.app"&gt;Aptitude Trainer&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Interview Preparation&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.interviewbit.com/"&gt;InterviewBit&lt;/a&gt; - Technical and aptitude preparation&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.glassdoor.co.in/Interview/index.htm"&gt;Glassdoor Interviews&lt;/a&gt; - Company-specific interview experiences&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ambitionbox.com/"&gt;AmbitionBox&lt;/a&gt; - Interview experiences and company reviews&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.linkedin.com/interview-prep/"&gt;LinkedIn Interview Prep&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;16. Maintainers&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/dipakkr"&gt;Deepak Kumar&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/siAyush"&gt;Ayush Gupta&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/ellerbrock/open-source-badges/"&gt;&lt;img src="https://badges.frapsoft.com/os/v1/open-source.svg?v=103" alt="Open Source Love svg1" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://github.com/dipakkr/A-to-Z-Resources-for-Students/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/dipakkr/A-to-Z-Resources-for-Students" /&gt;&lt;/a&gt;&lt;/h2&gt;</description>
    </item>
    
    <item>
      <title>pedroslopez/whatsapp-web.js</title>
      <link>https://github.com/pedroslopez/whatsapp-web.js</link>
      <description>&lt;p&gt;A WhatsApp client library for NodeJS that connects through the WhatsApp Web browser app&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;p&gt; &lt;a href="https://wwebjs.dev"&gt;&lt;img src="https://github.com/wwebjs/logos/raw/main/4_Full%20Logo%20Lockup_Small/small_banner_blue.png?raw=true" title="whatsapp-web.js" alt="WWebJS Website" width="500" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;p&gt; &lt;a href="https://www.npmjs.com/package/whatsapp-web.js"&gt;&lt;img src="https://img.shields.io/npm/v/whatsapp-web.js.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://depfu.com/github/pedroslopez/whatsapp-web.js?project_id=9765"&gt;&lt;img src="https://badges.depfu.com/badges/4a65a0de96ece65fdf39e294e0c8dcba/overview.svg?sanitize=true" alt="Depfu" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/WhatsApp_Web-2.3000.1017054665-brightgreen.svg?sanitize=true" alt="WhatsApp_Web 2.2346.52" /&gt; &lt;a href="https://discord.gg/H7DqQs4"&gt;&lt;img src="https://img.shields.io/discord/698610475432411196.svg?logo=discord" alt="Discord server" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;A WhatsApp API client that connects through the WhatsApp Web browser app&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The library works by launching the WhatsApp Web browser application and managing it using Puppeteer to create an instance of WhatsApp Web, thereby mitigating the risk of being blocked. The WhatsApp API client connects through the WhatsApp Web browser app, accessing its internal functions. This grants you access to nearly all the features available on WhatsApp Web, enabling dynamic handling similar to any other Node.js application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;strong&gt;It is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn't be considered totally safe.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wwebjs.dev"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://guide.wwebjs.dev/guide"&gt;Guide&lt;/a&gt; (&lt;a href="https://github.com/wwebjs/wwebjs.dev/tree/main"&gt;source&lt;/a&gt;) &lt;em&gt;(work in progress)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.wwebjs.dev/"&gt;Documentation&lt;/a&gt; (&lt;a href="https://github.com/pedroslopez/whatsapp-web.js/tree/main/docs"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/H7DqQs4"&gt;WWebJS Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pedroslopez/whatsapp-web.js"&gt;GitHub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://npmjs.org/package/whatsapp-web.js"&gt;npm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The module is now available on npm! &lt;code&gt;npm i whatsapp-web.js&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;strong&gt;Node &lt;code&gt;v18+&lt;/code&gt; is required.&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;QUICK STEPS TO UPGRADE NODE&lt;/h2&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;h4&gt;Manual&lt;/h4&gt; 
&lt;p&gt;Just get the latest LTS from the &lt;a href="https://nodejs.org/en/download/"&gt;official node website&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;npm&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;sudo npm install -g n
sudo n stable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Choco&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;choco install nodejs-lts
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Winget&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install OpenJS.NodeJS.LTS
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ubuntu / Debian&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - &amp;amp;&amp;amp;\
sudo apt-get install -y nodejs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Example usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const { Client } = require('whatsapp-web.js');

const client = new Client();

client.on('qr', (qr) =&amp;gt; {
    // Generate and scan this code with your phone
    console.log('QR RECEIVED', qr);
});

client.on('ready', () =&amp;gt; {
    console.log('Client is ready!');
});

client.on('message', msg =&amp;gt; {
    if (msg.body == '!ping') {
        msg.reply('pong');
    }
});

client.initialize();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take a look at &lt;a href="https://github.com/pedroslopez/whatsapp-web.js/raw/master/example.js"&gt;example.js&lt;/a&gt; for another examples with additional use cases.&lt;br /&gt; For further details on saving and restoring sessions, explore the provided &lt;a href="https://wwebjs.dev/guide/creating-your-bot/authentication.html"&gt;Authentication Strategies&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi Device&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (images/audio/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send media (video)&lt;/td&gt; 
   &lt;td&gt;✅ &lt;a href="https://wwebjs.dev/guide/creating-your-bot/handling-attachments.html#caveat-for-sending-videos-and-gifs"&gt;(requires Google Chrome)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send stickers&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive media (images/audio/video/documents)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send contact cards&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send buttons&lt;/td&gt; 
   &lt;td&gt;❌ &lt;a href="https://www.youtube.com/watch?v=hv1R1rLeVVE"&gt;(DEPRECATED)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Send lists&lt;/td&gt; 
   &lt;td&gt;❌ &lt;a href="https://www.youtube.com/watch?v=hv1R1rLeVVE"&gt;(DEPRECATED)&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Receive location&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Message replies&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Join groups by invite&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get invite for group&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group info (subject, description)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Modify group settings (send messages, edit info)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Add group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kick group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Promote/demote group participants&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention users&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mention groups&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mute/unmute chats&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Block/unblock contacts&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get contact info&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Get profile pictures&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Set user status message&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React to messages&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Create polls&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Channels&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vote in polls&lt;/td&gt; 
   &lt;td&gt;🔜&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Communities&lt;/td&gt; 
   &lt;td&gt;🔜&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Something missing? Make an issue and let us know!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Feel free to open pull requests; we welcome contributions! However, for significant changes, it's best to open an issue beforehand. Make sure to review our &lt;a href="https://github.com/pedroslopez/whatsapp-web.js/raw/main/CODE_OF_CONDUCT.md"&gt;contribution guidelines&lt;/a&gt; before creating a pull request. Before creating your own issue or pull request, always check to see if one already exists!&lt;/p&gt; 
&lt;h2&gt;Supporting the project&lt;/h2&gt; 
&lt;p&gt;You can support the maintainer of this project through the links below&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sponsors/pedroslopez"&gt;Support via GitHub Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paypal.me/psla/"&gt;Support via PayPal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://m.do.co/c/73f906a36ed4"&gt;Sign up for DigitalOcean&lt;/a&gt; and get $200 in credit when you sign up (Referral)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is not affiliated, associated, authorized, endorsed by, or in any way officially connected with WhatsApp or any of its subsidiaries or its affiliates. The official WhatsApp website can be found at &lt;a href="https://whatsapp.com"&gt;whatsapp.com&lt;/a&gt;. "WhatsApp" as well as related names, marks, emblems and images are registered trademarks of their respective owners. Also it is not guaranteed you will not be blocked by using this method. WhatsApp does not allow bots or unofficial clients on their platform, so this shouldn't be considered totally safe.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2019 Pedro S Lopez&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License");&lt;br /&gt; you may not use this project except in compliance with the License.&lt;br /&gt; You may obtain a copy of the License at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software&lt;br /&gt; distributed under the License is distributed on an "AS IS" BASIS,&lt;br /&gt; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&lt;br /&gt; See the License for the specific language governing permissions and&lt;br /&gt; limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kgrzybek/modular-monolith-with-ddd</title>
      <link>https://github.com/kgrzybek/modular-monolith-with-ddd</link>
      <description>&lt;p&gt;Full Modular Monolith application with Domain-Driven Design approach.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Modular Monolith with DDD&lt;/h1&gt; 
&lt;p&gt;Full Modular Monolith .NET application with Domain-Driven Design approach.&lt;/p&gt; 
&lt;h2&gt;Announcement&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/glory_to_ukraine.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Learn, use and benefit from this project only if:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You &lt;strong&gt;condemn Russia and its military aggression against Ukraine&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;recognize that Russia is an occupant that unlawfully invaded a sovereign state&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;support Ukraine's territorial integrity, including its claims over temporarily occupied territories of Crimea and Donbas&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;You &lt;strong&gt;reject false narratives perpetuated by Russian state propaganda&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Otherwise, leave this project immediately and educate yourself.&lt;/p&gt; 
&lt;p&gt;Putin, idi nachuj.&lt;/p&gt; 
&lt;h2&gt;CI&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/kgrzybek/modular-monolith-with-ddd/workflows/Build%20Pipeline/badge.svg?sanitize=true" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;FrontEnd application&lt;/h2&gt; 
&lt;p&gt;FrontEnd application : &lt;a href="https://github.com/kgrzybek/modular-monolith-with-ddd-fe-react"&gt;Modular Monolith With DDD: FrontEnd React application&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#1-introduction"&gt;1. Introduction&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#11-purpose-of-this-repository"&gt;1.1 Purpose of this Repository&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#12-out-of-scope"&gt;1.2 Out of Scope&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#13-reason"&gt;1.3 Reason&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#14-disclaimer"&gt;1.4 Disclaimer&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#15-give-a-star"&gt;1.5 Give a Star&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#16-share-it"&gt;1.6 Share It&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#2-domain"&gt;2. Domain&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#21-description"&gt;2.1 Description&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#22-conceptual-model"&gt;2.2 Conceptual Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#23-event-storming"&gt;2.3 Event Storming&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#3-architecture"&gt;3. Architecture&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#30-c4-model"&gt;3.0 C4 Model&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#31-high-level-view"&gt;3.1 High Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view"&gt;3.2 Module Level View&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#33-api-and-module-communication"&gt;3.3 API and Module Communication&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#34-module-requests-processing-via-cqrs"&gt;3.4 Module Requests Processing via CQRS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#35-domain-model-principles-and-attributes"&gt;3.5 Domain Model Principles and Attributes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#36-cross-cutting-concerns"&gt;3.6 Cross-Cutting Concerns&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#37-modules-integration"&gt;3.7 Modules Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#38-internal-processing"&gt;3.8 Internal Processing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#39-security"&gt;3.9 Security&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#310-unit-tests"&gt;3.10 Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#311-architecture-decision-log"&gt;3.11 Architecture Decision Log&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#312-architecture-unit-tests"&gt;3.12 Architecture Unit Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests"&gt;3.13 Integration Tests&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#314-system-integration-testing"&gt;3.14 System Integration Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#315-event-sourcing"&gt;3.15 Event Sourcing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#316-database-change-management"&gt;3.16 Database change management&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#317-continuous-integration"&gt;3.17 Continuous Integration&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#318-static-code-analysis"&gt;3.18 Static code analysis&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#319-system-under-test-sut"&gt;3.19 System Under Test SUT&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#320-mutation-testing"&gt;3.20 Mutation Testing&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#4-technology"&gt;4. Technology&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#5-how-to-run"&gt;5. How to Run&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#6-contribution"&gt;6. Contribution&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#7-roadmap"&gt;7. Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#8-authors"&gt;8. Authors&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#9-license"&gt;9. License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#10-inspirations-and-recommendations"&gt;10. Inspirations and Recommendations&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;1. Introduction&lt;/h2&gt; 
&lt;h3&gt;1.1 Purpose of this Repository&lt;/h3&gt; 
&lt;p&gt;This is a list of the main goals of this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing how you can implement a &lt;strong&gt;monolith&lt;/strong&gt; application in a &lt;strong&gt;modular&lt;/strong&gt; way&lt;/li&gt; 
 &lt;li&gt;Presentation of the &lt;strong&gt;full implementation&lt;/strong&gt; of an application 
  &lt;ul&gt; 
   &lt;li&gt;This is not another simple application&lt;/li&gt; 
   &lt;li&gt;This is not another proof of concept (PoC)&lt;/li&gt; 
   &lt;li&gt;The goal is to present the implementation of an application that would be ready to run in production&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Showing the application of &lt;strong&gt;best practices&lt;/strong&gt; and &lt;strong&gt;object-oriented programming principles&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the use of &lt;strong&gt;design patterns&lt;/strong&gt;. When, how and why they can be used&lt;/li&gt; 
 &lt;li&gt;Presentation of some &lt;strong&gt;architectural&lt;/strong&gt; considerations, decisions, approaches&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation using &lt;strong&gt;Domain-Driven Design&lt;/strong&gt; approach (&lt;strong&gt;tactical&lt;/strong&gt; patterns)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Unit Tests&lt;/strong&gt; for Domain Model (Testable Design in mind)&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Integration Tests&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of the implementation of &lt;strong&gt;Event Sourcing&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;C4 Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Presentation of &lt;strong&gt;diagram as text&lt;/strong&gt; approach&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.2 Out of Scope&lt;/h3&gt; 
&lt;p&gt;This is a list of subjects which are out of scope for this repository:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Business requirements gathering and analysis&lt;/li&gt; 
 &lt;li&gt;System analysis&lt;/li&gt; 
 &lt;li&gt;Domain exploration&lt;/li&gt; 
 &lt;li&gt;Domain distillation&lt;/li&gt; 
 &lt;li&gt;Domain-Driven Design &lt;strong&gt;strategic&lt;/strong&gt; patterns&lt;/li&gt; 
 &lt;li&gt;Architecture evaluation, quality attributes analysis&lt;/li&gt; 
 &lt;li&gt;Integration, system tests&lt;/li&gt; 
 &lt;li&gt;Project management&lt;/li&gt; 
 &lt;li&gt;Infrastructure&lt;/li&gt; 
 &lt;li&gt;Containerization&lt;/li&gt; 
 &lt;li&gt;Software engineering process&lt;/li&gt; 
 &lt;li&gt;Deployment process&lt;/li&gt; 
 &lt;li&gt;Maintenance&lt;/li&gt; 
 &lt;li&gt;Documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1.3 Reason&lt;/h3&gt; 
&lt;p&gt;The reason for creating this repository is the lack of something similar. Most sample applications on GitHub have at least one of the following issues:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Very, very simple - few entities and use cases implemented&lt;/li&gt; 
 &lt;li&gt;Not finished (for example there is no authentication, logging, etc..)&lt;/li&gt; 
 &lt;li&gt;Poorly designed (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Poorly implemented (in my opinion)&lt;/li&gt; 
 &lt;li&gt;Not well described&lt;/li&gt; 
 &lt;li&gt;Assumptions and decisions are not clearly explained&lt;/li&gt; 
 &lt;li&gt;Implements "Orders" domain - yes, everyone knows this domain, but something different is needed&lt;/li&gt; 
 &lt;li&gt;Implemented in old technology&lt;/li&gt; 
 &lt;li&gt;Not maintained&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To sum up, there are some very good examples, but there are far too few of them. This repository has the task of filling this gap at some level.&lt;/p&gt; 
&lt;h3&gt;1.4 Disclaimer&lt;/h3&gt; 
&lt;p&gt;Software architecture should always be created to resolve specific &lt;strong&gt;business problems&lt;/strong&gt;. Software architecture always supports some quality attributes and at the same time does not support others. A lot of other factors influence your software architecture - your team, opinions, preferences, experiences, technical constraints, time, budget, etc.&lt;/p&gt; 
&lt;p&gt;Always functional requirements, quality attributes, technical constraints and other factors should be considered before an architectural decision is made.&lt;/p&gt; 
&lt;p&gt;Because of the above, the architecture and implementation presented in this repository is &lt;strong&gt;one of the many ways&lt;/strong&gt; to solve some problems. Take from this repository as much as you want, use it as you like but remember to &lt;strong&gt;always pick the best solution which is appropriate to the problem class you have&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;1.5 Give a Star&lt;/h3&gt; 
&lt;p&gt;My primary focus in this project is on quality. Creating a good quality product involves a lot of analysis, research and work. It takes a lot of time. If you like this project, learned something or you are using it in your applications, please give it a star &lt;span&gt;⭐&lt;/span&gt;. This is the best motivation for me to continue this work. Thanks!&lt;/p&gt; 
&lt;h3&gt;1.6 Share It&lt;/h3&gt; 
&lt;p&gt;There are very few really good examples of this type of application. If you think this repository makes a difference and is worth it, please share it with your friends and on social networks. I will be extremely grateful.&lt;/p&gt; 
&lt;h2&gt;2. Domain&lt;/h2&gt; 
&lt;h3&gt;2.1 Description&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Domain - A sphere of knowledge, influence, or activity. The subject area to which the user applies a program is the domain of the software. &lt;a href="http://domainlanguage.com/ddd/reference/"&gt;Domain-Driven Design Reference&lt;/a&gt;, Eric Evans&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The &lt;strong&gt;Meeting Groups&lt;/strong&gt; domain was selected for the purposes of this project based on the &lt;a href="https://www.meetup.com/"&gt;Meetup.com&lt;/a&gt; system.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Main reasons for selecting this domain:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It is common, a lot of people use the Meetup site to organize or attend meetings&lt;/li&gt; 
 &lt;li&gt;There is a system for it, so everyone can check this implementation against a working site which supports this domain&lt;/li&gt; 
 &lt;li&gt;It is not complex so it is easy to understand&lt;/li&gt; 
 &lt;li&gt;It is not trivial - there are some business rules and logic and it is not just CRUD operations&lt;/li&gt; 
 &lt;li&gt;You don't need much specific domain knowledge unlike other domains like financing, banking, medical&lt;/li&gt; 
 &lt;li&gt;It is not big so it is easier to implement&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Meetings&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The main business entities are &lt;code&gt;Member&lt;/code&gt;, &lt;code&gt;Meeting Group&lt;/code&gt; and &lt;code&gt;Meeting&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can create a &lt;code&gt;Meeting Group&lt;/code&gt;, be part of a &lt;code&gt;Meeting Group&lt;/code&gt; or can attend a &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Group Member&lt;/code&gt; can be an &lt;code&gt;Organizer&lt;/code&gt; of this group or a normal &lt;code&gt;Member&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Only an &lt;code&gt;Organizer&lt;/code&gt; of a &lt;code&gt;Meeting Group&lt;/code&gt; can create a new &lt;code&gt;Meeting&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; has attendees, not attendees (&lt;code&gt;Members&lt;/code&gt; which declare they will not attend the &lt;code&gt;Meeting&lt;/code&gt;) and &lt;code&gt;Members&lt;/code&gt; on the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting&lt;/code&gt; can have an attendee limit. If the limit is reached, &lt;code&gt;Members&lt;/code&gt; can only sign up to the &lt;code&gt;Waitlist&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can bring guests to the &lt;code&gt;Meeting&lt;/code&gt;. The number of guests allowed is an attribute of the &lt;code&gt;Meeting&lt;/code&gt;. Bringing guests can be unallowed.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Meeting Attendee&lt;/code&gt; can have one of two roles: &lt;code&gt;Attendee&lt;/code&gt; or &lt;code&gt;Host&lt;/code&gt;. A &lt;code&gt;Meeting&lt;/code&gt; must have at least one &lt;code&gt;Host&lt;/code&gt;. The &lt;code&gt;Host&lt;/code&gt; is a special role which grants permission to edit &lt;code&gt;Meeting&lt;/code&gt; information or change the attendees list.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;Member&lt;/code&gt; can comment &lt;code&gt;Meetings&lt;/code&gt;. A &lt;code&gt;Member&lt;/code&gt; can reply to, like other &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; manages commenting of &lt;code&gt;Meeting&lt;/code&gt; by &lt;code&gt;Meeting Commenting Configuration&lt;/code&gt;. &lt;code&gt;Organizer&lt;/code&gt; can delete any &lt;code&gt;Comment&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Meeting Group&lt;/code&gt; must have an organizer with active &lt;code&gt;Subscription&lt;/code&gt;. One organizer can cover 3 &lt;code&gt;Meeting Groups&lt;/code&gt; by his &lt;code&gt;Subscription&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, Meeting organizer can set an &lt;code&gt;Event Fee&lt;/code&gt;. Each &lt;code&gt;Meeting Attendee&lt;/code&gt; is obliged to pay the fee. All guests should be paid by &lt;code&gt;Meeting Attendee&lt;/code&gt; too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Administration&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;To create a new &lt;code&gt;Meeting Group&lt;/code&gt;, a &lt;code&gt;Member&lt;/code&gt; needs to propose the group. A &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is sent to &lt;code&gt;Administrators&lt;/code&gt;. An &lt;code&gt;Administrator&lt;/code&gt; can accept or reject a &lt;code&gt;Meeting Group Proposal&lt;/code&gt;. If a &lt;code&gt;Meeting Group Proposal&lt;/code&gt; is accepted, a &lt;code&gt;Meeting Group&lt;/code&gt; is created.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Member&lt;/code&gt; who is the &lt;code&gt;Payer&lt;/code&gt; can buy the &lt;code&gt;Subscription&lt;/code&gt;. He needs to pay the &lt;code&gt;Subscription Payment&lt;/code&gt;. &lt;code&gt;Subscription&lt;/code&gt; can expire so &lt;code&gt;Subscription Renewal&lt;/code&gt; is required (by &lt;code&gt;Subscription Renewal Payment&lt;/code&gt; payment to keep &lt;code&gt;Subscription&lt;/code&gt; active).&lt;/p&gt; 
&lt;p&gt;When the &lt;code&gt;Meeting&lt;/code&gt; fee is required, the &lt;code&gt;Payer&lt;/code&gt; needs to pay &lt;code&gt;Meeting Fee&lt;/code&gt; (through &lt;code&gt;Meeting Fee Payment&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Users&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;Administrator&lt;/code&gt;, &lt;code&gt;Member&lt;/code&gt; and &lt;code&gt;Payer&lt;/code&gt; is a &lt;code&gt;User&lt;/code&gt;. To be a &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;User Registration&lt;/code&gt; is required and confirmed.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User&lt;/code&gt; is assigned one or more &lt;code&gt;User Role&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Each &lt;code&gt;User Role&lt;/code&gt; has set of &lt;code&gt;Permissions&lt;/code&gt;. A &lt;code&gt;Permission&lt;/code&gt; defines whether &lt;code&gt;User&lt;/code&gt; can invoke a particular action.&lt;/p&gt; 
&lt;h3&gt;2.2 Conceptual Model&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Conceptual Model - A conceptual model is a representation of a system, made of the composition of concepts that are used to help people know, understand, or simulate a subject the model represents. &lt;a href="https://en.wikipedia.org/wiki/Conceptual_model"&gt;Wikipedia - Conceptual model&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;PlantUML version: &lt;img src="https://www.plantuml.com/plantuml/proxy?cache=no&amp;amp;src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Conceptual_Model.puml" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;VisualParadigm version (not maintained, only for demonstration): &lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Conceptual_Model.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Conceptual Model of commenting feature&lt;/strong&gt; &lt;img src="https://www.plantuml.com/plantuml/proxy?src=https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/PlantUML/Commenting_Conceptual_Model.puml" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;2.3 Event Storming&lt;/h3&gt; 
&lt;p&gt;While a Conceptual Model focuses on structures and relationships between them, &lt;strong&gt;behavior&lt;/strong&gt; and &lt;strong&gt;events&lt;/strong&gt; that occur in our domain are more important.&lt;/p&gt; 
&lt;p&gt;There are many ways to show behavior and events. One of them is a light technique called &lt;a href="https://www.eventstorming.com/"&gt;Event Storming&lt;/a&gt; which is becoming more popular. Below are presented 3 main business processes using this technique: user registration, meeting group creation and meeting organization.&lt;/p&gt; 
&lt;p&gt;Note: Event Storming is a light, live workshop. One of the possible outputs of this workshop is presented here. Even if you are not doing Event Storming workshops, this type of process presentation can be very valuable to you and your stakeholders.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;User Registration process&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/User_Registration.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Meeting Group creation&lt;/strong&gt; &lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Group_Creation.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Meeting organization&lt;/strong&gt; &lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Meeting_Organization.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Payments&lt;/strong&gt; &lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design.jpg" alt="" /&gt; &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Payments_EventStorming_Design_HighRes.jpg"&gt;Download high resolution file&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;3. Architecture&lt;/h2&gt; 
&lt;h3&gt;3.0 C4 Model&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://c4model.com/"&gt;C4 model&lt;/a&gt; is a lean graphical notation technique for modelling the architecture of software systems. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;As can be found on the website of the author of this model (&lt;a href="https://simonbrown.je/"&gt;Simon Brown&lt;/a&gt;): &lt;em&gt;The C4 model was created as a way to help software development teams describe and communicate software architecture, both during up-front design sessions and when retrospectively documenting an existing codebase&lt;/em&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Model C4&lt;/em&gt; defines 4 levels (views) of the system architecture: &lt;em&gt;System Context&lt;/em&gt;, &lt;em&gt;Container&lt;/em&gt;, &lt;em&gt;Component&lt;/em&gt; and &lt;em&gt;Code&lt;/em&gt;. Below are examples of each of these levels that describe the architecture of this system. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: The &lt;a href="https://plantuml.com/"&gt;PlantUML&lt;/a&gt; (diagram as text) component was used to describe all C4 model levels. Additionally, for levels C1-C3, a &lt;a href="https://github.com/plantuml-stdlib/C4-PlantUML"&gt;C4-PlantUML&lt;/a&gt; plug-in connecting PlantUML with the C4 model was used&lt;/em&gt;.&lt;/p&gt; 
&lt;h4&gt;3.0.1 C1 System Context&lt;/h4&gt; 
&lt;p&gt;&lt;img src="http://www.plantuml.com/plantuml/png/7OrDgeD048JtxnGl1z0ca5LMGWuYutIZulIqz0_6d3vZDbLG5Dytc2VruF9tMsikWHHQ_XVttPu0cev-Nds9AOmqItMgtcTXs6Rzd1Djm89HadOiLKgxTiSLY0YSp4a19Hky7f3levrjuV77UNk_Nzg1AhR-0W00" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.2 C2 Container&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C2_Containers.png" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.3 C3 Component (high-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/C4/C3_Components.png" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.4 C3 Component (module-level)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="http://www.plantuml.com/plantuml/png/jLHFRzCm5B_dKsI1GojjBOKn5QH9wxeTAgrem7QUdEGrjHJRaVqCgX3V7QVUl7XkbnA2BusUVt_y_7xrXK8YKRCoEi8rC8Yhab0U7L6UbJg7U8rOgS_ZiIG_HmN5jKwr0fa9Zi1nb0asDWHU2vmep4kQZkUd9xTrwNvvCsP48KXJUfWBLWbUSwhQB9hbkIlTaMAGC02al539SVmsBUQY5F8yUNEQmRkpZyamn9ESKKuLIe9KS9y57zBfsNGN2twOBtMfNzYy_pIPJ4bTMmcEJzNLTXcPwFj68R27Iw5vJkHca4sEusIvYPUFXuuj81d6lwBOB0TacoV8hA8lEBFRXIFKovrqGBROUj_yZBvStvaz2PRWuFR3CtjKNefSbs2epifMd5lWwAWBlf94eTGPQjcK6Faxxc0tD9N6kxuw98KwVvxZiCLgLbKbpRRJQ_eqoZsON0b6gATlApr8BpX2OTDtlKrLqoNOx6vubJvtGv0qnveJ9BMmojR0oAkIlwCmB_vVoALcvfNRi-FB10dovGxEaQ-Q30yoRsOgS6vizcnhCnKwsdhFPc7k0jy0qlq8BeC-i4vYu1laiSN4fTBp-gf1my0zr4REzX3RLpjPy9W14yqc7DXA6raZ77s3qhwaUn-tUmM64W8RIV5HkvLw8Be4XHnVj3CXZCtV7P0WEOpXXk7WZL7uIMWTY0_VUxklg_u7aLstlzUcLt8unkvD42JjxFR1-gn_2L-tlY-0vvgLVm00" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;3.0.5 C4 Code (meeting group aggregate)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="http://www.plantuml.com/plantuml/png/5OqxheD0303xTugN0x1kg58XvI3HObk0yAwHFqB9wGFDJ3FIJ1xL8flyFRQEaiHfyhz67Fu4i7gMPOirvtGsr1xSew0ss1VxVcRUeIcbL1kQTfKh7SuRH0IjUh01AJgyHi3nZLBTot7V9kvq-GS0" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;3.1 High Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Architecture_high_level.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module descriptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt; - Very thin ASP.NET MVC Core REST API application. Main responsibilities are: 
  &lt;ol&gt; 
   &lt;li&gt;Accept request&lt;/li&gt; 
   &lt;li&gt;Authenticate and authorize request (using User Access module)&lt;/li&gt; 
   &lt;li&gt;Delegate work to specific module sending Command or Query&lt;/li&gt; 
   &lt;li&gt;Return response&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;User Access&lt;/strong&gt; - responsible for user authentication and authorization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Registrations&lt;/strong&gt; - responsible for user registration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Meetings&lt;/strong&gt; - implements Meetings Bounded Context: creating meeting groups, meetings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Administration&lt;/strong&gt; - implements Administration Bounded Context: implements administrative tasks like meeting group proposal verification&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Payments&lt;/strong&gt; - implements Payments Bounded Context: implements all functionalities associated with payments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;In Memory Events Bus&lt;/strong&gt; - Publish/Subscribe implementation to asynchronously integrate all modules using events (&lt;a href="https://en.wikipedia.org/wiki/Event-driven_architecture"&gt;Event Driven Architecture&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Key assumptions:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;API contains no application logic&lt;/li&gt; 
 &lt;li&gt;API communicates with Modules using a small interface to send Queries and Commands&lt;/li&gt; 
 &lt;li&gt;Each Module has its own interface which is used by API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modules communicate each other only asynchronously using Events Bus&lt;/strong&gt; - direct method calls are not allowed&lt;/li&gt; 
 &lt;li&gt;Each Module &lt;strong&gt;has it's own data&lt;/strong&gt; in a separate schema - shared data is not allowed 
  &lt;ul&gt; 
   &lt;li&gt;Module data could be moved into separate databases if desired&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Modules can only have a dependency on the integration events assembly of other Module (see &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#32-module-level-view"&gt;Module level view&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Each Module has its own &lt;a href="https://freecontent.manning.com/dependency-injection-in-net-2nd-edition-understanding-the-composition-root/"&gt;Composition Root&lt;/a&gt;, which implies that each Module has its own Inversion-of-Control container&lt;/li&gt; 
 &lt;li&gt;API as a host needs to initialize each module and each module has an initialization method&lt;/li&gt; 
 &lt;li&gt;Each Module is &lt;strong&gt;highly encapsulated&lt;/strong&gt; - only required types and members are public, the rest are internal or private&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.2 Module Level View&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Module_level_diagram.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Each Module has &lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html"&gt;Clean Architecture&lt;/a&gt; and consists of the following submodules (assemblies):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Application&lt;/strong&gt; - the application logic submodule which is responsible for requests processing: use cases, domain events, integration events, internal commands.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Domain&lt;/strong&gt; - Domain Model in Domain-Driven Design terms implements the applicable &lt;a href="https://martinfowler.com/bliki/BoundedContext.html"&gt;Bounded Context&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Infrastructure&lt;/strong&gt; - infrastructural code responsible for module initialization, background processing, data access, communication with Events Bus and other external components or systems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IntegrationEvents&lt;/strong&gt; - &lt;strong&gt;Contracts&lt;/strong&gt; published to the Events Bus; only this assembly can be called by other modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/VSSolution.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Application, Domain and Infrastructure assemblies could be merged into one assembly. Some people like horizontal layering or more decomposition, some don't. Implementing the Domain Model or Infrastructure in separate assembly allows encapsulation using the &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/internal"&gt;&lt;code&gt;internal&lt;/code&gt;&lt;/a&gt; keyword. Sometimes Bounded Context logic is not worth it because it is too simple. As always, be pragmatic and take whatever approach you like.&lt;/p&gt; 
&lt;h3&gt;3.3 API and Module Communication&lt;/h3&gt; 
&lt;p&gt;The API only communicates with Modules in two ways: during module initialization and request processing.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Module initialization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has a static &lt;code&gt;Initialize&lt;/code&gt; method which is invoked in the API &lt;code&gt;Startup&lt;/code&gt; class. All configuration needed by this module should be provided as arguments to this method. All services are configured during initialization and the Composition Root is created using the Inversion-of-Control Container.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public static void Initialize(
    string connectionString,
    IExecutionContextAccessor executionContextAccessor,
    ILogger logger,
    EmailsConfiguration emailsConfiguration)
{
    var moduleLogger = logger.ForContext("Module", "Meetings");

    ConfigureCompositionRoot(connectionString, executionContextAccessor, moduleLogger, emailsConfiguration);

    QuartzStartup.Initialize(moduleLogger);

    EventsBusStartup.Initialize(moduleLogger);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Request processing&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Each module has the same interface signature exposed to the API. It contains 3 methods: command with result, command without result and query.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public interface IMeetingsModule
{
    Task&amp;lt;TResult&amp;gt; ExecuteCommandAsync&amp;lt;TResult&amp;gt;(ICommand&amp;lt;TResult&amp;gt; command);

    Task ExecuteCommandAsync(ICommand command);

    Task&amp;lt;TResult&amp;gt; ExecuteQueryAsync&amp;lt;TResult&amp;gt;(IQuery&amp;lt;TResult&amp;gt; query);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Some people say that processing a command should not return a result. This is an understandable approach but sometimes impractical, especially when you want to immediately return the ID of a newly created resource. Sometimes the boundary between Command and Query is blurry. One example is &lt;code&gt;AuthenticateCommand&lt;/code&gt; - it returns a token but it is not a query because it has a side effect.&lt;/p&gt; 
&lt;h3&gt;3.4 Module Requests Processing via CQRS&lt;/h3&gt; 
&lt;p&gt;Processing of Commands and Queries is separated by applying the architectural style/pattern &lt;a href="https://docs.microsoft.com/en-us/azure/architecture/patterns/cqrs"&gt;Command Query Responsibility Segregation (CQRS)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/CQRS.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Commands are processed using &lt;em&gt;Write Model&lt;/em&gt; which is implemented using DDD tactical patterns:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;internal class CreateNewMeetingGroupCommandHandler : ICommandHandler&amp;lt;CreateNewMeetingGroupCommand&amp;gt;
{
    private readonly IMeetingGroupRepository _meetingGroupRepository;
    private readonly IMeetingGroupProposalRepository _meetingGroupProposalRepository;

    internal CreateNewMeetingGroupCommandHandler(
        IMeetingGroupRepository meetingGroupRepository,
        IMeetingGroupProposalRepository meetingGroupProposalRepository)
    {
        _meetingGroupRepository = meetingGroupRepository;
        _meetingGroupProposalRepository = meetingGroupProposalRepository;
    }

    public async Task Handle(CreateNewMeetingGroupCommand request, CancellationToken cancellationToken)
    {
        var meetingGroupProposal = await _meetingGroupProposalRepository.GetByIdAsync(request.MeetingGroupProposalId);

        var meetingGroup = meetingGroupProposal.CreateMeetingGroup();

        await _meetingGroupRepository.AddAsync(meetingGroup);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Queries are processed using &lt;em&gt;Read Model&lt;/em&gt; which is implemented by executing raw SQL statements on database views:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;internal class GetAllMeetingGroupsQueryHandler : IQueryHandler&amp;lt;GetAllMeetingGroupsQuery, List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt;
{
    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    internal GetAllMeetingGroupsQueryHandler(ISqlConnectionFactory sqlConnectionFactory)
    {
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;List&amp;lt;MeetingGroupDto&amp;gt;&amp;gt; Handle(GetAllMeetingGroupsQuery request, CancellationToken cancellationToken)
    {
        var connection = _sqlConnectionFactory.GetOpenConnection();

        const string sql = $"""
                           SELECT 
                                [MeetingGroup].[Id] as [{nameof(MeetingGroupDto.Id)}] , 
                                [MeetingGroup].[Name] as [{nameof(MeetingGroupDto.Name)}], 
                                [MeetingGroup].[Description] as [{nameof(MeetingGroupDto.Description)}] 
                                [MeetingGroup].[LocationCountryCode] as [{nameof(MeetingGroupDto.LocationCountryCode)}],
                                [MeetingGroup].[LocationCity] as [{nameof(MeetingGroupDto.LocationCity)}]
                           FROM [meetings].[v_MeetingGroups] AS [MeetingGroup]
                           """;
        var meetingGroups = await connection.QueryAsync&amp;lt;MeetingGroupDto&amp;gt;(sql);

        return meetingGroups.AsList();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Key advantages:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Solution is appropriate to the problem - reading and writing needs are usually different&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href="https://en.wikipedia.org/wiki/Single_responsibility_principle"&gt;Single Responsibility Principle&lt;/a&gt; (SRP) - one handler does one thing&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href="https://en.wikipedia.org/wiki/Interface_segregation_principle"&gt;Interface Segregation Principle&lt;/a&gt; (ISP) - each handler implements interface with exactly one method&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href="https://refactoring.com/catalog/introduceParameterObject.html"&gt;Parameter Object pattern&lt;/a&gt; - Commands and Queries are objects which are easy to serialize/deserialize&lt;/li&gt; 
 &lt;li&gt;Easy way to apply &lt;a href="https://en.wikipedia.org/wiki/Decorator_pattern"&gt;Decorator pattern&lt;/a&gt; to handle cross-cutting concerns&lt;/li&gt; 
 &lt;li&gt;Supports Loose Coupling by use of the &lt;a href="https://en.wikipedia.org/wiki/Mediator_pattern"&gt;Mediator pattern&lt;/a&gt; - separates invoker of request from handler of request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Disadvantage:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Mediator pattern introduces extra indirection and is harder to reason about which class handles the request&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information: &lt;a href="https://www.kamilgrzybek.com/design/simple-cqrs-implementation-with-raw-sql-and-ddd/"&gt;Simple CQRS implementation with raw SQL and DDD&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.5 Domain Model Principles and Attributes&lt;/h3&gt; 
&lt;p&gt;The Domain Model, which is the central and most critical part in the system, should be designed with special attention. Here are some key principles and attributes which are applied to Domain Models of each module:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of encapsulation&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All members are &lt;code&gt;private&lt;/code&gt; by default, then &lt;code&gt;internal&lt;/code&gt; - only &lt;code&gt;public&lt;/code&gt; at the very edge.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;High level of PI (Persistence Ignorance)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;No dependencies to infrastructure, databases, etc. All classes are &lt;a href="https://en.wikipedia.org/wiki/Plain_old_CLR_object"&gt;POCOs&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rich in behavior&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All business logic is located in the Domain Model. No leaks to the application layer or elsewhere.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Low level of Primitive Obsession&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Primitive attributes of Entites grouped together using ValueObjects.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Business language&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;All classes, methods and other members are named in business language used in this Bounded Context.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Testable&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;The Domain Model is a critical part of the system so it should be easy to test (Testable Design).&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class MeetingGroup : Entity, IAggregateRoot
{
    public MeetingGroupId Id { get; private set; }

    private string _name;

    private string _description;

    private MeetingGroupLocation _location;

    private MemberId _creatorId;

    private List&amp;lt;MeetingGroupMember&amp;gt; _members;

    private DateTime _createDate;

    private DateTime? _paymentDateTo;

    internal static MeetingGroup CreateBasedOnProposal(
        MeetingGroupProposalId meetingGroupProposalId,
        string name,
        string description,
        MeetingGroupLocation location, MemberId creatorId)
    {
        return new MeetingGroup(meetingGroupProposalId, name, description, location, creatorId);
    }

     public Meeting CreateMeeting(
            string title,
            MeetingTerm term,
            string description,
            MeetingLocation location,
            int? attendeesLimit,
            int guestsLimit,
            Term rsvpTerm,
            MoneyValue eventFee,
            List&amp;lt;MemberId&amp;gt; hostsMembersIds,
            MemberId creatorId)
        {
            this.CheckRule(new MeetingCanBeOrganizedOnlyByPayedGroupRule(_paymentDateTo));

            this.CheckRule(new MeetingHostMustBeAMeetingGroupMemberRule(creatorId, hostsMembersIds, _members));

            return new Meeting(this.Id,
                title,
                term,
                description,
                location,
                attendeesLimit,
                guestsLimit,
                rsvpTerm,
                eventFee,
                hostsMembersIds,
                creatorId);
        }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.6 Cross-Cutting Concerns&lt;/h3&gt; 
&lt;p&gt;To support &lt;a href="https://en.wikipedia.org/wiki/Single_responsibility_principle"&gt;Single Responsibility Principle&lt;/a&gt; and &lt;a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"&gt;Don't Repeat Yourself&lt;/a&gt; principles, the implementation of cross-cutting concerns is done using the &lt;a href="https://en.wikipedia.org/wiki/Decorator_pattern"&gt;Decorator Pattern&lt;/a&gt;. Each Command processor is decorated by 3 decorators: logging, validation and unit of work.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/Decorator.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Logging&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Logging decorator logs execution, arguments and processing of each Command. This way each log inside a processor has the log context of the processing command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;internal class LoggingCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ILogger _logger;
    private readonly IExecutionContextAccessor _executionContextAccessor;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public LoggingCommandHandlerDecorator(
        ILogger logger,
        IExecutionContextAccessor executionContextAccessor,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        _logger = logger;
        _executionContextAccessor = executionContextAccessor;
        _decorated = decorated;
    }
    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        if (command is IRecurringCommand)
        {
            return await _decorated.Handle(command, cancellationToken);
        }
        using (
            LogContext.Push(
                new RequestLogEnricher(_executionContextAccessor),
                new CommandLogEnricher(command)))
        {
            try
            {
                this._logger.Information(
                    "Executing command {Command}",
                    command.GetType().Name);

                var result = await _decorated.Handle(command, cancellationToken);

                this._logger.Information("Command {Command} processed successful", command.GetType().Name);

                return result;
            }
            catch (Exception exception)
            {
                this._logger.Error(exception, "Command {Command} processing failed", command.GetType().Name);
                throw;
            }
        }
    }

    private class CommandLogEnricher : ILogEventEnricher
    {
        private readonly ICommand _command;

        public CommandLogEnricher(ICommand command)
        {
            _command = command;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            logEvent.AddOrUpdateProperty(new LogEventProperty("Context", new ScalarValue($"Command:{_command.Id.ToString()}")));
        }
    }

    private class RequestLogEnricher : ILogEventEnricher
    {
        private readonly IExecutionContextAccessor _executionContextAccessor;
        public RequestLogEnricher(IExecutionContextAccessor executionContextAccessor)
        {
            _executionContextAccessor = executionContextAccessor;
        }
        public void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory)
        {
            if (_executionContextAccessor.IsAvailable)
            {
                logEvent.AddOrUpdateProperty(new LogEventProperty("CorrelationId", new ScalarValue(_executionContextAccessor.CorrelationId)));
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Validation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Validation decorator performs Command data validation. It checks rules against Command arguments using the FluentValidation library.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;internal class ValidationCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; _validators;
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;

    public ValidationCommandHandlerDecorator(
        IList&amp;lt;IValidator&amp;lt;T&amp;gt;&amp;gt; validators,
        ICommandHandler&amp;lt;T&amp;gt; decorated)
    {
        this._validators = validators;
        _decorated = decorated;
    }

    public Task&amp;lt;Unit&amp;gt; Handle(T command, CancellationToken cancellationToken)
    {
        var errors = _validators
            .Select(v =&amp;gt; v.Validate(command))
            .SelectMany(result =&amp;gt; result.Errors)
            .Where(error =&amp;gt; error != null)
            .ToList();

        if (errors.Any())
        {
            var errorBuilder = new StringBuilder();

            errorBuilder.AppendLine("Invalid command, reason: ");

            foreach (var error in errors)
            {
                errorBuilder.AppendLine(error.ErrorMessage);
            }

            throw new InvalidCommandException(errorBuilder.ToString(), null);
        }

        return _decorated.Handle(command, cancellationToken);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Unit Of Work&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;All Command processing has side effects. To avoid calling commit on every handler, &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; is used. It additionally marks &lt;code&gt;InternalCommand&lt;/code&gt; as processed (if it is Internal Command) and dispatches all Domain Events (as part of &lt;a href="https://martinfowler.com/eaaCatalog/unitOfWork.html"&gt;Unit Of Work&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class UnitOfWorkCommandHandlerDecorator&amp;lt;T&amp;gt; : ICommandHandler&amp;lt;T&amp;gt; where T:ICommand
{
    private readonly ICommandHandler&amp;lt;T&amp;gt; _decorated;
    private readonly IUnitOfWork _unitOfWork;
    private readonly MeetingsContext _meetingContext;

    public UnitOfWorkCommandHandlerDecorator(
        ICommandHandler&amp;lt;T&amp;gt; decorated,
        IUnitOfWork unitOfWork,
        MeetingsContext meetingContext)
    {
        _decorated = decorated;
        _unitOfWork = unitOfWork;
        _meetingContext = meetingContext;
    }

    public async Task Handle(T command, CancellationToken cancellationToken)
    {
        await this._decorated.Handle(command, cancellationToken);

        if (command is InternalCommandBase)
        {
            var internalCommand =
                await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                    cancellationToken: cancellationToken);

            if (internalCommand != null)
            {
                internalCommand.ProcessedDate = DateTime.UtcNow;
            }
        }

        await this._unitOfWork.CommitAsync(cancellationToken);

        
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.7 Modules Integration&lt;/h3&gt; 
&lt;p&gt;Integration between modules is strictly &lt;strong&gt;asynchronous&lt;/strong&gt; using Integration Events and the In Memory Event Bus as broker. In this way coupling between modules is minimal and exists only on the structure of Integration Events.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Modules don't share data&lt;/strong&gt; so it is not possible nor desirable to create a transaction which spans more than one module. To ensure maximum reliability, the &lt;a href="http://www.kamilgrzybek.com/design/the-outbox-pattern/"&gt;Outbox / Inbox pattern&lt;/a&gt; is used. This pattern provides accordingly &lt;em&gt;"At-Least-Once delivery"&lt;/em&gt; and &lt;em&gt;"At-Least-Once processing"&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxInbox.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;The Outbox and Inbox is implemented using two SQL tables and a background worker for each module. The background worker is implemented using the Quartz.NET library.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Saving to Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxSave.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Processing Outbox:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/OutboxProcessing.png" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;3.8 Internal Processing&lt;/h3&gt; 
&lt;p&gt;The main principle of this system is that you can change its state only by calling a specific Command.&lt;/p&gt; 
&lt;p&gt;Commands can be called not only by the API, but by the processing module itself. The main use case which implements this mechanism is data processing in eventual consistency mode when we want to process something in a different process and transaction. This applies, for example, to Inbox processing because we want to do something (calling a Command) based on an Integration Event from the Inbox.&lt;/p&gt; 
&lt;p&gt;This idea is taken from Alberto's Brandolini's Event Storming picture called "The picture that explains “almost” everything" which shows that every side effect (domain event) is created by invoking a Command on Aggregate. See &lt;a href="https://xebia.com/blog/eventstorming-cheat-sheet/"&gt;EventStorming cheat sheet&lt;/a&gt; article for more details.&lt;/p&gt; 
&lt;p&gt;Implementation of internal processing is very similar to implementation of the Outbox and Inbox. One SQL table and one background worker for processing. Each internally processing Command must inherit from &lt;code&gt;InternalCommandBase&lt;/code&gt; class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;internal abstract class InternalCommandBase : ICommand
{
    public Guid Id { get; }

    protected InternalCommandBase(Guid id)
    {
        this.Id = id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is important because the &lt;code&gt;UnitOfWorkCommandHandlerDecorator&lt;/code&gt; must mark an internal Command as processed during committing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public async Task Handle(T command, CancellationToken cancellationToken)
{
    await this._decorated.Handle(command, cancellationToken);

    if (command is InternalCommandBase)
    {
        var internalCommand =
            await _meetingContext.InternalCommands.FirstOrDefaultAsync(x =&amp;gt; x.Id == command.Id,
                cancellationToken: cancellationToken);

        if (internalCommand != null)
        {
            internalCommand.ProcessedDate = DateTime.UtcNow;
        }
    }

    await this._unitOfWork.CommitAsync(cancellationToken);

    
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.9 Security&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Authentication&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authentication is implemented using JWT Token and Bearer scheme using IdentityServer. For now, only one authentication method is implemented: forms style authentication (username and password) via the OAuth2 &lt;a href="https://www.oauth.com/oauth2-servers/access-tokens/password-grant/"&gt;Resource Owner Password Grant Type&lt;/a&gt;. It requires implementation of the &lt;code&gt;IResourceOwnerPasswordValidator&lt;/code&gt; interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class ResourceOwnerPasswordValidator : IResourceOwnerPasswordValidator
{
    private readonly IUserAccessModule _userAccessModule;

    public ResourceOwnerPasswordValidator(IUserAccessModule userAccessModule)
    {
        _userAccessModule = userAccessModule;
    }

    public async Task ValidateAsync(ResourceOwnerPasswordValidationContext context)
    {
        var authenticationResult = await _userAccessModule.ExecuteCommandAsync(new AuthenticateCommand(context.UserName, context.Password));
        if (!authenticationResult.IsAuthenticated)
        {
            context.Result = new GrantValidationResult(
                TokenRequestErrors.InvalidGrant,
                authenticationResult.AuthenticationError);
            return;
        }
        context.Result = new GrantValidationResult(
            authenticationResult.User.Id.ToString(),
            "forms",
            authenticationResult.User.Claims);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Authorization&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Authorization is achieved by implementing &lt;a href="https://en.wikipedia.org/wiki/Role-based_access_control"&gt;RBAC (Role Based Access Control)&lt;/a&gt; using Permissions. Permissions are more granular and a much better way to secure your application than Roles alone. Each User has a set of Roles and each Role contains one or more Permission. The User's set of Permissions is extracted from all Roles the User belongs to. Permissions are always checked on &lt;code&gt;Controller&lt;/code&gt; level - never Roles:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;[HttpPost]
[Route("")]
[HasPermission(MeetingsPermissions.ProposeMeetingGroup)]
public async Task&amp;lt;IActionResult&amp;gt; ProposeMeetingGroup(ProposeMeetingGroupRequest request)
{
    await _meetingsModule.ExecuteCommandAsync(
        new ProposeMeetingGroupCommand(
            request.Name,
            request.Description,
            request.LocationCity,
            request.LocationCountryCode));

    return Ok();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.10 Unit Tests&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Definition:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A unit test is an automated piece of code that invokes the unit of work being tested, and then checks some assumptions about a single end result of that unit. A unit test is almost always written using a unit testing framework. It can be written easily and runs quickly. It’s trustworthy, readable, and maintainable. It’s consistent in its results as long as production code hasn’t changed. &lt;a href="https://www.manning.com/books/the-art-of-unit-testing-second-edition"&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Attributes of good unit test&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automated&lt;/li&gt; 
 &lt;li&gt;Maintainable&lt;/li&gt; 
 &lt;li&gt;Runs very fast (in ms)&lt;/li&gt; 
 &lt;li&gt;Consistent, Deterministic (always the same result)&lt;/li&gt; 
 &lt;li&gt;Isolated from other tests&lt;/li&gt; 
 &lt;li&gt;Readable&lt;/li&gt; 
 &lt;li&gt;Can be executed by anyone&lt;/li&gt; 
 &lt;li&gt;Testing public API, not internal behavior (overspecification)&lt;/li&gt; 
 &lt;li&gt;Looks like production code&lt;/li&gt; 
 &lt;li&gt;Treated as production code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Implementation&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Unit tests should mainly test business logic (domain model): &lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/unit_tests.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Each unit test has 3 standard sections: Arrange, Act and Assert:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/UnitTestsGeneral.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Arrange&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Arrange section is responsible for preparing the Aggregate for testing the public method that we want to test. This public method is often called (from the unit tests perspective) the SUT (system under test).&lt;/p&gt; 
&lt;p&gt;Creating an Aggregate ready for testing involves &lt;strong&gt;calling one or more other public constructors/methods&lt;/strong&gt; on the Domain Model. At first it may seem that we are testing too many things at the same time, but this is not true. We need to be one hundred percent sure that the Aggregate is in a state exactly as it will be in production. This can only be ensured when we:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Use only public API of Domain Model&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Don't use &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.runtime.compilerservices.internalsvisibletoattribute?view=netframework-4.8"&gt;InternalsVisibleToAttribute&lt;/a&gt; class 
  &lt;ul&gt; 
   &lt;li&gt;This exposes the Domain Model to the Unit Tests library, removing encapsulation so our tests and production code are treated differently and it is a very bad thing&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don't use &lt;a href="https://docs.microsoft.com/en-us/dotnet/api/system.diagnostics.conditionalattribute?view=netframework-4.8"&gt;ConditionalAttribute&lt;/a&gt; classes - it reduces readability and increases complexity&lt;/li&gt; 
 &lt;li&gt;Don't create any special constructors/factory methods for tests (even with conditional compilation symbols) 
  &lt;ul&gt; 
   &lt;li&gt;Special constructor/factory method only for unit tests causes duplication of business logic in the test itself and focuses on state - this kind of approach causes the test to be very sensitive to changes and hard to maintain&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Don't remove encapsulation from Domain Model (for example: change keywords from &lt;code&gt;internal&lt;/code&gt;/&lt;code&gt;private&lt;/code&gt; to &lt;code&gt;public&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Don't make methods &lt;code&gt;protected&lt;/code&gt; to inherit from tested class and in this way provide access to internal methods/properties&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Isolation of external dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;There are 2 main concepts - stubs and mocks:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A stub is a controllable replacement for an existing dependency (or collaborator) in the system. By using a stub, you can test your code without dealing with the dependency directly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A mock object is a fake object in the system that decides whether the unit test has passed or failed. It does so by verifying whether the object under test called the fake object as expected. There’s usually no more than one mock per test. &lt;a href="https://www.manning.com/books/the-art-of-unit-testing-second-edition"&gt;Art of Unit Testing 2nd Edition&lt;/a&gt; Roy Osherove&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Good advice: use stubs if you need to, but try to avoid mocks. Mocking causes us to test too many internal things and leads to overspecification.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Act&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This section is very easy - we execute &lt;strong&gt;exactly one&lt;/strong&gt; public method on aggregate (SUT).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Assert&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;In this section we check expectations. There are only 2 possible outcomes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Method completed and Domain Event(s) published&lt;/li&gt; 
 &lt;li&gt;Business rule was broken&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;[Test]
public void NewUserRegistration_WithUniqueLogin_IsSuccessful()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();

    // Act
    var userRegistration =
        UserRegistration.RegisterNewUser(
            "login", "password", "test@email",
            "firstName", "lastName", usersCounter);

    // Assert
    var newUserRegisteredDomainEvent = AssertPublishedDomainEvent&amp;lt;NewUserRegisteredDomainEvent&amp;gt;(userRegistration);
    Assert.That(newUserRegisteredDomainEvent.UserRegistrationId, Is.EqualTo(userRegistration.Id));
}

[Test]
public void NewUserRegistration_WithoutUniqueLogin_BreaksUserLoginMustBeUniqueRule()
{
    // Arrange
    var usersCounter = Substitute.For&amp;lt;IUsersCounter&amp;gt;();
    usersCounter.CountUsersWithLogin("login").Returns(x =&amp;gt; 1);

    // Assert
    AssertBrokenRule&amp;lt;UserLoginMustBeUniqueRule&amp;gt;(() =&amp;gt;
    {
        // Act
        UserRegistration.RegisterNewUser(
            "login", "password", "test@email",
            "firstName", "lastName", usersCounter);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Advanced example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;[Test]
public void AddAttendee_WhenMemberIsAlreadyAttendeeOfMeeting_IsNotPossible()
{
    // Arrange
    var creatorId = new MemberId(Guid.NewGuid());
    var meetingTestData = CreateMeetingTestData(new MeetingTestDataOptions
    {
        CreatorId = creatorId
    });
    var newMemberId = new MemberId(Guid.NewGuid());
    meetingTestData.MeetingGroup.JoinToGroupMember(newMemberId);
    meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);

    // Assert
    AssertBrokenRule&amp;lt;MemberCannotBeAnAttendeeOfMeetingMoreThanOnceRule&amp;gt;(() =&amp;gt;
    {
        // Act
        meetingTestData.Meeting.AddAttendee(meetingTestData.MeetingGroup, newMemberId, 0);
    });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;CreateMeetingTestData&lt;/code&gt; method is an implementation of &lt;a href="https://blog.ploeh.dk/2009/02/13/SUTFactory/"&gt;SUT Factory&lt;/a&gt; described by Mark Seemann which allows keeping common creation logic in one place:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;protected MeetingTestData CreateMeetingTestData(MeetingTestDataOptions options)
{
    var proposalMemberId = options.CreatorId ?? new MemberId(Guid.NewGuid());
    var meetingProposal = MeetingGroupProposal.ProposeNew(
        "name", "description",
        new MeetingGroupLocation("Warsaw", "PL"), proposalMemberId);

    meetingProposal.Accept();

    var meetingGroup = meetingProposal.CreateMeetingGroup();

    meetingGroup.UpdatePaymentInfo(DateTime.Now.AddDays(1));

    var meetingTerm = options.MeetingTerm ??
                      new MeetingTerm(DateTime.UtcNow.AddDays(1), DateTime.UtcNow.AddDays(2));

    var rsvpTerm = options.RvspTerm ?? Term.NoTerm;
    var meeting = meetingGroup.CreateMeeting("title",
        meetingTerm,
        "description",
        new MeetingLocation("Name", "Address", "PostalCode", "City"),
        options.AttendeesLimit,
        options.GuestsLimit,
        rsvpTerm,
        MoneyValue.Zero,
        new List&amp;lt;MemberId&amp;gt;(),
        proposalMemberId);

    DomainEventsTestHelper.ClearAllDomainEvents(meetingGroup);

    return new MeetingTestData(meetingGroup, meeting);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.11 Architecture Decision Log&lt;/h3&gt; 
&lt;p&gt;All Architectural Decisions (AD) are documented in the &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/architecture-decision-log"&gt;Architecture Decision Log (ADL)&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;More information about documenting architecture-related decisions in this way : &lt;a href="https://github.com/joelparkerhenderson/architecture_decision_record"&gt;https://github.com/joelparkerhenderson/architecture_decision_record&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.12 Architecture Unit Tests&lt;/h3&gt; 
&lt;p&gt;In some cases it is not possible to enforce the application architecture, design or established conventions using compiler (compile-time). For this reason, code implementations can diverge from the original design and architecture. We want to minimize this behavior, not only by code review.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;To do this, unit tests of system architecture, design, major conventions and assumptions have been written. In .NET there is special library for this task: &lt;a href="https://github.com/BenMorris/NetArchTest"&gt;NetArchTest&lt;/a&gt;. This library has been written based on the very popular JAVA architecture unit tests library - &lt;a href="https://www.archunit.org/"&gt;ArchUnit&lt;/a&gt;.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Using this kind of tests we can test proper layering of our application, dependencies, encapsulation, immutability, DDD correct implementation, naming, conventions and so on - everything what we need to test. Example:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/architecture_unit_tests.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;More information about architecture unit tests here: &lt;a href="https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit"&gt;https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;3.13 Integration Tests&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;"Integration Test" term is blurred. It can mean test between classes, modules, services, even systems - see &lt;a href="https://martinfowler.com/bliki/IntegrationTest.html"&gt;this&lt;/a&gt; article (by Martin Fowler). &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;For this reason, the definition of integration test in this project is as follows:&lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;it verifies how system works in integration with "out-of-process" dependencies - database, messaging system, file system or external API&lt;/li&gt; 
 &lt;li&gt;it tests particular use case&lt;/li&gt; 
 &lt;li&gt;it can be slow (as opposed to Unit Test)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Approach&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Do not mock dependencies over which you have full control&lt;/strong&gt; (like database). Full control dependency means you can always revert all changes (remove side-effects) and no one can notice it. They are not visible to others. See next point, please.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Use "production", normal, real database version&lt;/strong&gt;. Some use e.g. in memory repository, some use light databases instead "production" version. This is still mocking. Testing makes sense if we have full confidence in testing. You can't trust the test if you know that the infrastructure in the production environment will vary. Be always as close to production environment as possible.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mock dependencies over which you don't have control&lt;/strong&gt;. No control dependency means you can't remove side-effects after interaction with this dependency (external API, messaging system, SMTP server etc.). They can be visible to others.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Integration test should test exactly one use case. One use case is represented by one Command/Query processing so CommandHandler/QueryHandler in Application layer is perfect starting point for running the Integration Test:&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/integration_tests.jpg" alt="" /&gt; For each test, the following preparation steps must be performed:&lt;br /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clear database&lt;/li&gt; 
 &lt;li&gt;Prepare mocks&lt;/li&gt; 
 &lt;li&gt;Initialize testing module&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;[SetUp]
public async Task BeforeEachTest()
{
    const string connectionStringEnvironmentVariable =
        "ASPNETCORE_MyMeetings_IntegrationTests_ConnectionString";
    ConnectionString = Environment.GetEnvironmentVariable(connectionStringEnvironmentVariable, EnvironmentVariableTarget.Machine);
    if (ConnectionString == null)
    {
        throw new ApplicationException(
            $"Define connection string to integration tests database using environment variable: {connectionStringEnvironmentVariable}");
    }

    using (var sqlConnection = new SqlConnection(ConnectionString))
    {
        await ClearDatabase(sqlConnection);
    }

    Logger = Substitute.For&amp;lt;ILogger&amp;gt;();
    EmailSender = Substitute.For&amp;lt;IEmailSender&amp;gt;();
    EventsBus = new EventsBusMock();
    ExecutionContext = new ExecutionContextMock(Guid.NewGuid());
    
    PaymentsStartup.Initialize(
        ConnectionString,
        ExecutionContext,
        Logger,
        EventsBus,
        false);

    PaymentsModule = new PaymentsModule();
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After preparation, test is performed on clear database. Usually, it is the execution of some (or many) Commands and: &lt;br /&gt; a) running a Query or/and &lt;br /&gt; b) verifying mocks &lt;br /&gt; to check the result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;[TestFixture]
public class MeetingPaymentTests : TestBase
{
    [Test]
    public async Task CreateMeetingPayment_Test()
    {
        PayerId payerId = new PayerId(Guid.NewGuid());
        MeetingId meetingId = new MeetingId(Guid.NewGuid());
        decimal value = 100;
        string currency = "EUR";
        await PaymentsModule.ExecuteCommandAsync(new CreateMeetingPaymentCommand(Guid.NewGuid(),
            payerId, meetingId, value, currency));

        var payment = await PaymentsModule.ExecuteQueryAsync(new GetMeetingPaymentQuery(meetingId.Value, payerId.Value));

        Assert.That(payment.PayerId, Is.EqualTo(payerId.Value));
        Assert.That(payment.MeetingId, Is.EqualTo(meetingId.Value));
        Assert.That(payment.FeeValue, Is.EqualTo(value));
        Assert.That(payment.FeeCurrency, Is.EqualTo(currency));
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Each Command/Query processing is a separate execution (with different object graph resolution, context, database connection etc.) thanks to Composition Root of each module. This behavior is important and desirable.&lt;/p&gt; 
&lt;h3&gt;3.14 System Integration Testing&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/System_integration_testing"&gt;System Integration Testing (SIT)&lt;/a&gt; is performed to verify the interactions between the modules of a software system. It involves the overall testing of a complete system of many subsystem components or elements.&lt;/p&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;Implementation of system integration tests is based on approach of integration testing of modules in isolation (invoking commands and queries) described in the previous section.&lt;/p&gt; 
&lt;p&gt;The problem is that in this case we are dealing with &lt;strong&gt;asynchronous communication&lt;/strong&gt;. Due to asynchrony, our &lt;strong&gt;test must wait for the result&lt;/strong&gt; at certain times.&lt;/p&gt; 
&lt;p&gt;To correctly implement such tests, the &lt;strong&gt;Sampling&lt;/strong&gt; technique and implementation described in the &lt;a href="https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627"&gt;Growing Object-Oriented Software, Guided by Tests&lt;/a&gt; book was used:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;An asynchronous test must wait for success and use timeouts to detect failure. This implies that every tested activity must have an observable effect: a test must affect the system so that its observable state becomes different. This sounds obvious but it drives how we think about writing asynchronous tests. If an activity has no observable effect, there is nothing the test can wait for, and therefore no way for the test to synchronize with the system it is testing. There are two ways a test can observe the system: by sampling its observable state or by listening for events that it sends out.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/SystemIntegrationTests.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Test below:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creates Meeting Group Proposal in Meetings module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group Proposal to verification will be available in Administration module with 10 seconds timeout&lt;/li&gt; 
 &lt;li&gt;Accepts Meeting Group Proposal in Administration module&lt;/li&gt; 
 &lt;li&gt;Waits until Meeting Group is created in Meetings module with 15 seconds timeout&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class CreateMeetingGroupTests : TestBase
{
    [Test]
    public async Task CreateMeetingGroupScenario_WhenProposalIsAccepted()
    {
        var meetingGroupId = await MeetingsModule.ExecuteCommandAsync(
            new ProposeMeetingGroupCommand("Name",
            "Description",
            "Location",
            "PL"));

        AssertEventually(
            new GetMeetingGroupProposalFromAdministrationProbe(meetingGroupId, AdministrationModule), 
            10000);

        await AdministrationModule.ExecuteCommandAsync(new AcceptMeetingGroupProposalCommand(meetingGroupId));

        AssertEventually(
            new GetCreatedMeetingGroupFromMeetingsProbe(meetingGroupId, MeetingsModule),
            15000);
    }

    private class GetCreatedMeetingGroupFromMeetingsProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupId;

        private readonly IMeetingsModule _meetingsModule;

        private List&amp;lt;MeetingGroupDto&amp;gt; _allMeetingGroups;

        public GetCreatedMeetingGroupFromMeetingsProbe(
            Guid expectedMeetingGroupId, 
            IMeetingsModule meetingsModule)
        {
            _expectedMeetingGroupId = expectedMeetingGroupId;
            _meetingsModule = meetingsModule;
        }

        public bool IsSatisfied()
        {
            return _allMeetingGroups != null &amp;amp;&amp;amp; 
                   _allMeetingGroups.Any(x =&amp;gt; x.Id == _expectedMeetingGroupId);
        }

        public async Task SampleAsync()
        {
            _allMeetingGroups = await _meetingsModule.ExecuteQueryAsync(new GetAllMeetingGroupsQuery());
        }

        public string DescribeFailureTo() 
            =&amp;gt; $"Meeting group with ID: {_expectedMeetingGroupId} is not created";
    }

    private class GetMeetingGroupProposalFromAdministrationProbe : IProbe
    {
        private readonly Guid _expectedMeetingGroupProposalId;

        private MeetingGroupProposalDto _meetingGroupProposal;

        private readonly IAdministrationModule _administrationModule;

        public GetMeetingGroupProposalFromAdministrationProbe(Guid expectedMeetingGroupProposalId, IAdministrationModule administrationModule)
        {
            _expectedMeetingGroupProposalId = expectedMeetingGroupProposalId;
            _administrationModule = administrationModule;
        }

        public bool IsSatisfied()
        {
            if (_meetingGroupProposal == null)
            {
                return false;
            }

            if (_meetingGroupProposal.Id == _expectedMeetingGroupProposalId &amp;amp;&amp;amp;
                _meetingGroupProposal.StatusCode == MeetingGroupProposalStatus.ToVerify.Value)
            {
                return true;
            }

            return false;
        }

        public async Task SampleAsync()
        {
            try
            {
                _meetingGroupProposal =
                    await _administrationModule.ExecuteQueryAsync(
                        new GetMeetingGroupProposalQuery(_expectedMeetingGroupProposalId));
            }
            catch
            {
                // ignored
            }
        }

        public string DescribeFailureTo()
            =&amp;gt; $"Meeting group proposal with ID: {_expectedMeetingGroupProposalId} to verification not created";
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Poller class implementation (based on example in the book):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class Poller
{
    private readonly int _timeoutMillis;

    private readonly int _pollDelayMillis;

    public Poller(int timeoutMillis)
    {
        _timeoutMillis = timeoutMillis;
        _pollDelayMillis = 1000;
    }

    public void Check(IProbe probe)
    {
        var timeout = new Timeout(_timeoutMillis);
        while (!probe.IsSatisfied())
        {
            if (timeout.HasTimedOut())
            {
                throw new AssertErrorException(DescribeFailureOf(probe));
            }

            Thread.Sleep(_pollDelayMillis);
            probe.SampleAsync();
        }
    }

    private static string DescribeFailureOf(IProbe probe)
    {
        return probe.DescribeFailureTo();
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.15 Event Sourcing&lt;/h3&gt; 
&lt;h4&gt;Theory&lt;/h4&gt; 
&lt;p&gt;During the implementation of the Payment module, &lt;em&gt;Event Sourcing&lt;/em&gt; was used. &lt;em&gt;Event Sourcing&lt;/em&gt; is a way of preserving the state of our system by recording a sequence of events. No less, no more.&lt;/p&gt; 
&lt;p&gt;It is important here to really restore the state of our application from events. If we collect events only for auditing purposes, it is an &lt;a href="https://en.wikipedia.org/wiki/Audit_trail"&gt;Audit Log/Trail&lt;/a&gt; - not the &lt;em&gt;Event Sourcing&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;The main elements of &lt;em&gt;Event Sourcing&lt;/em&gt; are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Events Stream&lt;/li&gt; 
 &lt;li&gt;Objects that are restored based on events. There are 2 types of such objects depending on the purpose: -- Objects responsible for the change of state. In Domain-Driven Design they will be &lt;em&gt;Aggregates&lt;/em&gt;. -- &lt;em&gt;Projections&lt;/em&gt;: read models prepared for a specific purpose&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Subscriptions&lt;/em&gt; : a way to receive information about new events&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Snapshots&lt;/em&gt;: from time to time, objects saved in the traditional way for performance purposes. Mainly used if there are many events to restore the object from the entire event history. (Note: there is currently no snapshot implementation in the project)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_elements.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;Tool&lt;/h4&gt; 
&lt;p&gt;In order not to reinvent the wheel, the &lt;em&gt;SQL Stream Store&lt;/em&gt; library was used. As the &lt;a href="https://sqlstreamstore.readthedocs.io/en/latest/"&gt;documentation&lt;/a&gt; says:&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;SQL Stream Store is a .NET library to assist with developing applications that use event sourcing or wish to use stream based patterns over a relational database and existing operational infrastructure.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Like every library, it has its limitations and assumptions (I recommend the linked documentation chapter "Things you need to know before adopting"). For me, the most important 2 points from this chapter are:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;em&gt;"Subscriptions (and thus projections) are &lt;strong&gt;eventually consistent&lt;/strong&gt; and always will be."&lt;/em&gt; This means that there will always be an inconsistency time from saving the event to the stream and processing the event by the projector(s).&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;"No support for ambient System.Transaction scopes enforcing the concept of the stream as the consistency and transactional boundary."&lt;/em&gt; This means that if we save the event to a events stream and want to save something &lt;strong&gt;in the same transaction&lt;/strong&gt;, we must use &lt;a href="https://learn.microsoft.com/en-us/dotnet/api/system.transactions.transactionscope?view=net-8.0"&gt;TransactionScope&lt;/a&gt;. If we cannot use &lt;em&gt;TransactionScope&lt;/em&gt; for some reason, we must accept the Eventual Consistency also in this case.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Other popular tools:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eventstore.com/"&gt;EventStore&lt;/a&gt; &lt;em&gt;"An industrial-strength database solution built from the ground up for event sourcing."&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://martendb.io/"&gt;Marten&lt;/a&gt; &lt;em&gt;".NET Transactional Document DB and Event Store on PostgreSQL"&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Implementation&lt;/h4&gt; 
&lt;p&gt;There are 2 main "flows" to handle:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Command handling: change of state - adding new events to stream (writing)&lt;/li&gt; 
 &lt;li&gt;Projection of events to create read models&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Command Handling&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_command_handling.png" alt="" /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We create / update an aggregate by creating an event&lt;/li&gt; 
 &lt;li&gt;We add changes to the Aggregate Store. This is the class responsible for writing / loading our aggregates. We are not saving changes yet.&lt;/li&gt; 
 &lt;li&gt;As part of Unit Of Work a) Aggregate Store adds events to the stream b) messages are added to the Outbox&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Command Handler:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class BuySubscriptionCommandHandler : ICommandHandler&amp;lt;BuySubscriptionCommand, Guid&amp;gt;
{
    private readonly IAggregateStore _aggregateStore;

    private readonly IPayerContext _payerContext;

    private readonly ISqlConnectionFactory _sqlConnectionFactory;

    public BuySubscriptionCommandHandler(
        IAggregateStore aggregateStore, 
        IPayerContext payerContext, 
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _aggregateStore = aggregateStore;
        _payerContext = payerContext;
        _sqlConnectionFactory = sqlConnectionFactory;
    }

    public async Task&amp;lt;Guid&amp;gt; Handle(BuySubscriptionCommand command, CancellationToken cancellationToken)
    {
        var priceList = await PriceListProvider.GetPriceList(_sqlConnectionFactory.GetOpenConnection());

        var subscriptionPayment = SubscriptionPayment.Buy(
            _payerContext.PayerId,
            SubscriptionPeriod.Of(command.SubscriptionTypeCode),
            command.CountryCode,
            MoneyValue.Of(command.Value, command.Currency),
            priceList);
        
        _aggregateStore.AppendChanges(subscriptionPayment);

        return subscriptionPayment.Id;
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionPayment&lt;/code&gt; Aggregate:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class SubscriptionPayment : AggregateRoot
{
    private PayerId _payerId;

    private SubscriptionPeriod _subscriptionPeriod;

    private string _countryCode;

    private SubscriptionPaymentStatus _subscriptionPaymentStatus;

    private MoneyValue _value;

    protected override void Apply(IDomainEvent @event)
    {
        this.When((dynamic)@event);
    }

    public static SubscriptionPayment Buy(
        PayerId payerId,
        SubscriptionPeriod period,
        string countryCode,
        MoneyValue priceOffer,
        PriceList priceList)
    {
        var priceInPriceList = priceList.GetPrice(countryCode, period, PriceListItemCategory.New);
        CheckRule(new PriceOfferMustMatchPriceInPriceListRule(priceOffer, priceInPriceList));

        var subscriptionPayment = new SubscriptionPayment();

        var subscriptionPaymentCreated = new SubscriptionPaymentCreatedDomainEvent(
            Guid.NewGuid(),
            payerId.Value,
            period.Code,
            countryCode,
            SubscriptionPaymentStatus.WaitingForPayment.Code,
            priceOffer.Value,
            priceOffer.Currency);

        subscriptionPayment.Apply(subscriptionPaymentCreated);
        subscriptionPayment.AddDomainEvent(subscriptionPaymentCreated);

        return subscriptionPayment;
    }

    private void When(SubscriptionPaymentCreatedDomainEvent @event)
    {
        this.Id = @event.SubscriptionPaymentId;
        _payerId = new PayerId(@event.PayerId);
        _subscriptionPeriod = SubscriptionPeriod.Of(@event.SubscriptionPeriodCode);
        _countryCode = @event.CountryCode;
        _subscriptionPaymentStatus = SubscriptionPaymentStatus.Of(@event.Status);
        _value = MoneyValue.Of(@event.Value, @event.Currency);
    }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;AggregateRoot&lt;/code&gt; base class:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public abstract class AggregateRoot
{
    public Guid Id { get; protected set; }

    public int Version { get; private set; }

    private readonly List&amp;lt;IDomainEvent&amp;gt; _domainEvents;

    protected AggregateRoot()
    {
        _domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();

        Version = -1;
    }

    protected void AddDomainEvent(IDomainEvent @event)
    {
        _domainEvents.Add(@event);
    }

    public IReadOnlyCollection&amp;lt;IDomainEvent&amp;gt; GetDomainEvents() =&amp;gt; _domainEvents.AsReadOnly();

    public void Load(IEnumerable&amp;lt;IDomainEvent&amp;gt; history)
    {
        foreach (var e in history)
        {
            Apply(e);
            Version++;
        }
    }

    protected abstract void Apply(IDomainEvent @event);

    protected static void CheckRule(IBusinessRule rule)
    {
        if (rule.IsBroken())
        {
            throw new BusinessRuleValidationException(rule);
        }
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Aggregate Store implementation with SQL Stream Store library usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class SqlStreamAggregateStore : IAggregateStore
{
    private readonly IStreamStore _streamStore;

    private readonly List&amp;lt;IDomainEvent&amp;gt; _appendedChanges;

    private readonly List&amp;lt;AggregateToSave&amp;gt; _aggregatesToSave;

    public SqlStreamAggregateStore(
        ISqlConnectionFactory sqlConnectionFactory)
    {
        _appendedChanges = new List&amp;lt;IDomainEvent&amp;gt;();

        _streamStore =
            new MsSqlStreamStore(
                new MsSqlStreamStoreSettings(sqlConnectionFactory.GetConnectionString())
                    {
                        Schema = DatabaseSchema.Name
                });

        _aggregatesToSave = new List&amp;lt;AggregateToSave&amp;gt;();
    }

    public async Task Save()
    {
        foreach (var aggregateToSave in _aggregatesToSave)
        {
            await _streamStore.AppendToStream(
                GetStreamId(aggregateToSave.Aggregate),
                aggregateToSave.Aggregate.Version,
                aggregateToSave.Messages.ToArray());
        }

        _aggregatesToSave.Clear();
    }

    public async Task&amp;lt;T&amp;gt; Load&amp;lt;T&amp;gt;(AggregateId&amp;lt;T&amp;gt; aggregateId) where T : AggregateRoot
    {
        var streamId = GetStreamId(aggregateId);

        IList&amp;lt;IDomainEvent&amp;gt; domainEvents = new List&amp;lt;IDomainEvent&amp;gt;();
        ReadStreamPage readStreamPage;
        do
        {
            readStreamPage = await _streamStore.ReadStreamForwards(streamId, StreamVersion.Start, maxCount: 100);
            var messages = readStreamPage.Messages;
            foreach (var streamMessage in messages)
            {
                Type type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
                var jsonData = await streamMessage.GetJsonData();
                var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

                domainEvents.Add(domainEvent);
            }
        } while (!readStreamPage.IsEnd);

        var aggregate = (T)Activator.CreateInstance(typeof(T), true);

        aggregate.Load(domainEvents);

        return aggregate;
    }

&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Events Projection&lt;/h5&gt; 
&lt;p&gt;The whole process looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_events_projection.png" alt="" /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Special class &lt;code&gt;Subscriptions Manager&lt;/code&gt; subscribes to Events Store (using SQL Store Stream library)&lt;/li&gt; 
 &lt;li&gt;Events Store raises &lt;code&gt;StreamMessageRecievedEvent&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Subscriptions Manager&lt;/code&gt; invokes all projectors&lt;/li&gt; 
 &lt;li&gt;If projector know how to handle given event, it updates particular read model. In current implementation it updates special table in SQL database.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;SubscriptionsManager&lt;/code&gt; class implementation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class SubscriptionsManager
{
    private readonly IStreamStore _streamStore;

    public SubscriptionsManager(
        IStreamStore streamStore)
    {
        _streamStore = streamStore;
    }

    public void Start()
    {
        long? actualPosition;

        using (var scope = PaymentsCompositionRoot.BeginLifetimeScope())
        {
            var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();

            actualPosition = checkpointStore.GetCheckpoint(SubscriptionCode.All);
        }

        _streamStore.SubscribeToAll(actualPosition, StreamMessageReceived);
    }

    public void Stop()
    {
        _streamStore.Dispose();
    }

    private static async Task StreamMessageReceived(
        IAllStreamSubscription subscription, StreamMessage streamMessage, CancellationToken cancellationToken)
    {
        var type = DomainEventTypeMappings.Dictionary[streamMessage.Type];
        var jsonData = await streamMessage.GetJsonData(cancellationToken);
        var domainEvent = JsonConvert.DeserializeObject(jsonData, type) as IDomainEvent;

        using var scope = PaymentsCompositionRoot.BeginLifetimeScope();

        var projectors = scope.Resolve&amp;lt;IList&amp;lt;IProjector&amp;gt;&amp;gt;();

        var tasks = projectors
            .Select(async projector =&amp;gt;
            {
                await projector.Project(domainEvent);
            });

        await Task.WhenAll(tasks);

        var checkpointStore = scope.Resolve&amp;lt;ICheckpointStore&amp;gt;();
        await checkpointStore.StoreCheckpoint(SubscriptionCode.All, streamMessage.Position);
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example projector:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;internal class SubscriptionDetailsProjector : ProjectorBase, IProjector
{
    private readonly IDbConnection _connection;

    public SubscriptionDetailsProjector(ISqlConnectionFactory sqlConnectionFactory)
    {
        _connection = sqlConnectionFactory.GetOpenConnection();
    }

    public async Task Project(IDomainEvent @event)
    {
        await When((dynamic) @event);
    }

    private async Task When(SubscriptionRenewedDomainEvent subscriptionRenewed)
    {
        var period = SubscriptionPeriod.GetName(subscriptionRenewed.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync("UPDATE payments.SubscriptionDetails " +
                                                "SET " +
                                                    "[Status] = @Status, " +
                                                    "[ExpirationDate] = @ExpirationDate, " +
                                                    "[Period] = @Period " +
                                                "WHERE [Id] = @SubscriptionId",
            new
            {
                subscriptionRenewed.SubscriptionId,
                subscriptionRenewed.Status,
                subscriptionRenewed.ExpirationDate,
                period
            });
    }

    private async Task When(SubscriptionExpiredDomainEvent subscriptionExpired)
    {
        await _connection.ExecuteScalarAsync("UPDATE payments.SubscriptionDetails " +
                                             "SET " +
                                             "[Status] = @Status " +
                                             "WHERE [Id] = @SubscriptionId",
            new
            {
                subscriptionExpired.SubscriptionId,
                subscriptionExpired.Status
            });
    }

    private async Task When(SubscriptionCreatedDomainEvent subscriptionCreated)
    {
        var period = SubscriptionPeriod.GetName(subscriptionCreated.SubscriptionPeriodCode);
        
        await _connection.ExecuteScalarAsync("INSERT INTO payments.SubscriptionDetails " +
                                       "([Id], [Period], [Status], [CountryCode], [ExpirationDate]) " +
                                       "VALUES (@SubscriptionId, @Period, @Status, @CountryCode, @ExpirationDate)",
            new
            {
                subscriptionCreated.SubscriptionId,
                period,
                subscriptionCreated.Status,
                subscriptionCreated.CountryCode,
                subscriptionCreated.ExpirationDate
            });
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sample view of Event Store&lt;/h4&gt; 
&lt;p&gt;Sample &lt;em&gt;Event Store&lt;/em&gt; view after execution of SubscriptionLifecycleTests Integration Test which includes following steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Creating Price List&lt;/li&gt; 
 &lt;li&gt;Buying Subscription&lt;/li&gt; 
 &lt;li&gt;Renewing Subscription&lt;/li&gt; 
 &lt;li&gt;Expiring Subscription&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;looks like this (&lt;em&gt;SQL Stream Store&lt;/em&gt; table - &lt;em&gt;payments.Messages&lt;/em&gt;):&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ES_event_store_db_sample.png" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;3.16 Database Change Management&lt;/h3&gt; 
&lt;p&gt;Database change management is accomplished by &lt;em&gt;migrations/transitions&lt;/em&gt; versioning. Additionally, the current state of the database structure is also versioned.&lt;/p&gt; 
&lt;p&gt;Migrations are applied using a simple &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/DatabaseMigrator"&gt;DatabaseMigrator&lt;/a&gt; console application that uses the &lt;a href="https://dbup.readthedocs.io/en/latest/"&gt;DbUp&lt;/a&gt; library. The current state of the database structure is kept in the &lt;a href="https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project"&gt;SSDT Database Project&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The database update is performed by running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;dotnet DatabaseMigrator.dll "connection_string" "scripts_directory_path"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The entire solution is described in detail in the following articles:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://www.kamilgrzybek.com/database/database-change-management/"&gt;Database change management&lt;/a&gt; (theory)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kamilgrzybek.com/database/using-database-project-and-dbup-for-database-management/"&gt;Using database project and DbUp for database management&lt;/a&gt; (implementation)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.17 Continuous Integration&lt;/h3&gt; 
&lt;h4&gt;Definition&lt;/h4&gt; 
&lt;p&gt;As defined on &lt;a href="https://martinfowler.com/articles/continuousIntegration.html"&gt;Martin Fowler's website&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Continuous Integration is a software development practice where members of a team integrate their work frequently, usually each person integrates at least daily - leading to multiple integrations per day. Each integration is verified by an automated build (including test) to detect integration errors as quickly as possible.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;YAML Implementation [OBSOLETE]&lt;/h4&gt; 
&lt;p&gt;&lt;em&gt;Originally the build was implemented using yaml and GitHub Actions functionality. Currently, the build is implemented with NUKE (see next section). See &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml"&gt;buildPipeline.yml&lt;/a&gt;&lt;/em&gt; file history.&lt;/p&gt; 
&lt;h5&gt;Pipeline description&lt;/h5&gt; 
&lt;p&gt;CI was implemented using &lt;a href="https://docs.github.com/en/actions/getting-started-with-github-actions/about-github-actions"&gt;GitHub Actions&lt;/a&gt;. For this purpose, one workflow, which triggers on Pull Request to &lt;em&gt;master&lt;/em&gt; branch or Push to &lt;em&gt;master&lt;/em&gt; branch was created. It contains 2 jobs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;build test, execute Unit Tests and Architecture Tests&lt;/li&gt; 
 &lt;li&gt;execute Integration Tests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Steps description&lt;/strong&gt;&lt;br /&gt; a) Checkout repository - clean checkout of git repository &lt;br /&gt; b) Setup .NET - install .NET 8.0 SDK&lt;br /&gt; c) Install dependencies - resolve NuGet packages&lt;br /&gt; d) Build - build solution&lt;br /&gt; e) Run Unit Tests - run automated Unit Tests (see section 3.10)&lt;br /&gt; f) Run Architecture Tests - run automated Architecture Tests (see section 3.12)&lt;br /&gt; g) Initialize containers - setup Docker container for MS SQL Server&lt;br /&gt; h) Wait for SQL Server initialization - after container initialization MS SQL Server is not ready, initialization of server itself takes some time so 30 seconds timeout before execution of next step is needed&lt;br /&gt; i) Create Database - create and initialize database&lt;br /&gt; j) Migrate Database - execute database upgrade using &lt;em&gt;DatabaseMigrator&lt;/em&gt; application (see 3.16 section)&lt;br /&gt; k) Run Integration Tests - perform Integration and System Integration Testing (see section 3.13 and 3.14)&lt;br /&gt;&lt;/p&gt; 
&lt;h5&gt;Workflow definition&lt;/h5&gt; 
&lt;p&gt;Workflow definition: &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml"&gt;buildPipeline.yml&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Example workflow execution&lt;/h5&gt; 
&lt;p&gt;Example workflow output:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job1.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/ci_job2.png" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;NUKE&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nuke.build/"&gt;Nuke&lt;/a&gt; is &lt;em&gt;the cross-platform build automation solution for .NET with C# DSL.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;The 2 main advantages of its use over pure yaml defined in GitHub actions are as follows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You run the same code on local machine and in the build server. See &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/.github/workflows/buildPipeline.yml"&gt;buildPipeline.yml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;You use C# with all the goodness (debugging, compilation, packages, refactoring and so on)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is how one of the stage definition looks like (execute Build, Unit Tests, Architecture Tests) &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/Build.cs"&gt;Build.cs&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;partial class Build : NukeBuild
{
    /// Support plugins are available for:
    ///   - JetBrains ReSharper        https://nuke.build/resharper
    ///   - JetBrains Rider            https://nuke.build/rider
    ///   - Microsoft VisualStudio     https://nuke.build/visualstudio
    ///   - Microsoft VSCode           https://nuke.build/vscode

    public static int Main () =&amp;gt; Execute&amp;lt;Build&amp;gt;(x =&amp;gt; x.Compile);

    [Parameter("Configuration to build - Default is 'Debug' (local) or 'Release' (server)")]
    readonly Configuration Configuration = IsLocalBuild ? Configuration.Debug : Configuration.Release;

    [Solution] readonly Solution Solution;

    Target Clean =&amp;gt; _ =&amp;gt; _
        .Before(Restore)
        .Executes(() =&amp;gt;
        {
            EnsureCleanDirectory(WorkingDirectory);
        });

    Target Restore =&amp;gt; _ =&amp;gt; _
        .Executes(() =&amp;gt;
        {
            DotNetRestore(s =&amp;gt; s
                .SetProjectFile(Solution));
        });

    Target Compile =&amp;gt; _ =&amp;gt; _
        .DependsOn(Restore)
        .Executes(() =&amp;gt;
        {
            DotNetBuild(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetConfiguration(Configuration)
                .EnableNoRestore());
        });

    Target UnitTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(Compile)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter("UnitTests")
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target ArchitectureTests =&amp;gt; _ =&amp;gt; _
        .DependsOn(UnitTests)
        .Executes(() =&amp;gt;
        {
            DotNetTest(s =&amp;gt; s
                .SetProjectFile(Solution)
                .SetFilter("ArchTests")
                .SetConfiguration(Configuration)
                .EnableNoRestore()
                .EnableNoBuild());
        });

    Target BuildAndUnitTests =&amp;gt; _ =&amp;gt; _
        .Triggers(ArchitectureTests)
        .Executes(() =&amp;gt;
        {
        });
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to see more complex scenario when integration tests are executed (with SQL Server database creation using docker) see &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/build/BuildIntegrationTests.cs"&gt;BuildIntegrationTests.cs&lt;/a&gt; file.&lt;/p&gt; 
&lt;h4&gt;SQL Server database project build&lt;/h4&gt; 
&lt;p&gt;Currently, compilation of database projects is not supported by the .NET Core and dotnet tool. For this reason, the &lt;a href="https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/"&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; library was used. In order to do that, you need to create .NET standard library, change SDK and create links to scripts folders. Final &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database.Build/CompanyName.MyMeetings.Database.Build.csproj"&gt;database project&lt;/a&gt; looks as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;Project Sdk="MSBuild.Sdk.SqlProj/1.6.0"&amp;gt;
    &amp;lt;PropertyGroup&amp;gt;
        &amp;lt;TargetFramework&amp;gt;netstandard2.0&amp;lt;/TargetFramework&amp;gt;
    &amp;lt;/PropertyGroup&amp;gt;
    &amp;lt;ItemGroup&amp;gt;
        &amp;lt;Content Include="..\CompanyName.MyMeetings.Database\administration\**\*.sql" /&amp;gt;
        &amp;lt;Content Include="..\CompanyName.MyMeetings.Database\app\**\*.sql" /&amp;gt;
        &amp;lt;Content Include="..\CompanyName.MyMeetings.Database\meetings\**\*.sql" /&amp;gt;
        &amp;lt;Content Include="..\CompanyName.MyMeetings.Database\payments\**\*.sql" /&amp;gt;
        &amp;lt;Content Include="..\CompanyName.MyMeetings.Database\users\**\*.sql" /&amp;gt;
        &amp;lt;Content Include="..\CompanyName.MyMeetings.Database\Security\**\*.sql" /&amp;gt;
    &amp;lt;/ItemGroup&amp;gt;
&amp;lt;/Project&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.18 Static code analysis&lt;/h3&gt; 
&lt;p&gt;In order to standardize the appearance of the code and increase its readability, the &lt;a href="https://github.com/DotNetAnalyzers/StyleCopAnalyzers"&gt;StyleCopAnalyzers&lt;/a&gt; library was used. This library implements StyleCop rules using the .NET Compiler Platform and is responsible for the static code analysis.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Using this library is trivial - it is just added as a NuGet package to all projects. There are many ways to configure rules, but currently the best way to do this is to edit the &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/.editorconfig"&gt;.editorconfig&lt;/a&gt; file. More information can be found at the link above.&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note! Static code analysis works best when the following points are met:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Each developer has an IDE that respects the rules and helps to follow them&lt;/li&gt; 
 &lt;li&gt;The rules are checked during the project build process as part of Continuous Integration&lt;/li&gt; 
 &lt;li&gt;The rules are set to &lt;em&gt;help your system grow&lt;/em&gt;. &lt;strong&gt;Static analysis is not a value in itself.&lt;/strong&gt; Some rules may not make complete sense and should be turned off. Other rules may have higher priority. It all depends on the project, company standards and people involved in the project. Be pragmatic.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3.19 System Under Test SUT&lt;/h3&gt; 
&lt;p&gt;There is always a need to prepare the entire system in a specific state, e.g. for manual, exploratory, UX / UI tests. The fact that the tests are performed manually does not mean that we cannot automate the preparation phase (Given / Arrange). Thanks to the automation of system state preparation (&lt;a href="https://en.wikipedia.org/wiki/System_under_test"&gt;System Under Test&lt;/a&gt;), we are able to recreate exactly the same state in any environment. In addition, such automation can be used later to automate the entire test (e.g. through an &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/#313-integration-tests"&gt;3.13 Integration Tests&lt;/a&gt;).&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;The implementation of such automation based on the use of NUKE and the test framework is presented below. As in the case of integration testing, we use the public API of modules.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/sut-preparation.jpg" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Below is a SUT whose task is to go through the whole process - from setting up a &lt;em&gt;Meeting Group&lt;/em&gt;, through its &lt;em&gt;Payment&lt;/em&gt;, adding a new &lt;em&gt;Meeting&lt;/em&gt; and signing up for it by another user.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;public class CreateMeeting : TestBase
{
    protected override bool PerformDatabaseCleanup =&amp;gt; true;

    [Test]
    public async Task Prepare()
    {
        await UsersFactory.GivenAdmin(
            UserAccessModule,
            "testAdmin@mail.com",
            "testAdminPass",
            "Jane Doe",
            "Jane",
            "Doe",
            "testAdmin@mail.com");

        var userId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            "adamSmith@mail.com",
            "adamSmithPass",
            "Adam",
            "Smith",
            "adamSmith@mail.com");

        ExecutionContextAccessor.SetUserId(userId);

        var meetingGroupId = await MeetingGroupsFactory.GivenMeetingGroup(
            MeetingsModule,
            AdministrationModule,
            ConnectionString,
            "Software Craft",
            "Group for software craft passionates",
            "Warsaw",
            "PL");

        await TestPriceListManager.AddPriceListItems(PaymentsModule, ConnectionString);

        await TestPaymentsManager.BuySubscription(
            PaymentsModule,
            ExecutionContextAccessor);
        
        SetDate(new DateTime(2022, 7, 1, 10, 0, 0));

        var meetingId = await TestMeetingFactory.GivenMeeting(
            MeetingsModule,
            meetingGroupId,
            "Tactical DDD",
            new DateTime(2022, 7, 10, 18, 0, 0),
            new DateTime(2022, 7, 10, 20, 0, 0),
            "Meeting about Tactical DDD patterns",
            "Location Name",
            "Location Address",
            "01-755",
            "Warsaw",
            50,
            0,
            null,
            null,
            0,
            null,
            new List&amp;lt;Guid&amp;gt;()
        );
        
        var attendeeUserId = await UsersFactory.GivenUser(
            UserAccessModule,
            ConnectionString,
            "rickmorty@mail.com",
            "rickmortyPass",
            "Rick",
            "Morty",
            "rickmorty@mail.com");
        
        ExecutionContextAccessor.SetUserId(attendeeUserId);

        await TestMeetingGroupManager.JoinToGroup(MeetingsModule, meetingGroupId);

        await TestMeetingManager.AddAttendee(MeetingsModule, meetingId, guestsNumber: 1);
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can create this SUT using following &lt;em&gt;NUKE&lt;/em&gt; target providing connection string and particular test name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt; .\build PrepareSUT --DatabaseConnectionString "connection_string" --SUTTestName CreateMeeting
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3.20 Mutation Testing&lt;/h3&gt; 
&lt;h4&gt;Description&lt;/h4&gt; 
&lt;p&gt;Mutation testing is an approach to test and evaluate our existing tests. During mutation testing a special framework modifies pieces of our code and runs our tests. These modifications are called &lt;em&gt;mutations&lt;/em&gt; or &lt;em&gt;mutants&lt;/em&gt;. If a given &lt;em&gt;mutation&lt;/em&gt; does not cause a failure of at least once test, it means that the mutant has &lt;em&gt;survived&lt;/em&gt; so our tests are probably not sufficient.&lt;/p&gt; 
&lt;h4&gt;Example&lt;/h4&gt; 
&lt;p&gt;In this repository, the &lt;a href="https://stryker-mutator.io/docs/stryker-net/Introduction"&gt;Stryker.NET&lt;/a&gt; framework was used for mutation testing. In the simplest use, after installation, all you need to do is enter the directory of tests that you want to mutate and run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;dotnet stryker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of this command is the &lt;em&gt;mutation report file&lt;/em&gt;. Assuming we want to test the unit tests of the Meetings module, such a &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/mutation-tests-reports/mutation-report.html"&gt;report&lt;/a&gt; has been generated. This is its first page:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_report.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;Let us analyze one of the places where the mutant survived. This is the &lt;em&gt;AddNotAttendee&lt;/em&gt; method of the &lt;em&gt;Meeting&lt;/em&gt; class. This method is used to add a &lt;em&gt;Member&lt;/em&gt; to the list of people who have decided not to attend the meeting. According to the logic, if the same person previously indicated that he was going to the &lt;em&gt;Meeting&lt;/em&gt; and later changed his mind, then if there is someone on the &lt;em&gt;Waiting List&lt;/em&gt;, he should be added to the attendees. Based on requirements, this should be the person who signed up on the &lt;em&gt;Waiting List&lt;/em&gt; &lt;strong&gt;first&lt;/strong&gt; (based on &lt;strong&gt;SignUpDate&lt;/strong&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/docs/Images/mutation_testing_example.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;As you can see, the mutation framework changed our sorting in linq query (from default ascending to descending). However, each test was successful, so it means that mutant survived so we don't have a test that checks the correct sort based on &lt;em&gt;SignUpDate&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;From the example above, one more important thing can be deduced - &lt;strong&gt;code coverage is insufficient&lt;/strong&gt;. In the given example, this code is covered, but our tests do not check the given requirement, therefore our code may have errors. Mutation testing allow to detect such situations. Of course, as with any tool, we should use it wisely, as not every case requires our attention.&lt;/p&gt; 
&lt;h2&gt;4. Technology&lt;/h2&gt; 
&lt;p&gt;List of technologies, frameworks and libraries used for implementation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dotnet.microsoft.com/download"&gt;.NET 8.0&lt;/a&gt; (platform). Note for Visual Studio users: &lt;strong&gt;VS 2019&lt;/strong&gt; is required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/sql-server/sql-server-editions-express"&gt;MS SQL Server Express&lt;/a&gt; (database)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/ef/core/"&gt;Entity Framework Core 8.0&lt;/a&gt; (ORM Write Model implementation for DDD)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://autofac.org/"&gt;Autofac&lt;/a&gt; (Inversion of Control Container)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://docs.identityserver.io"&gt;IdentityServer4&lt;/a&gt; (Authentication and Authorization)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://serilog.net/"&gt;Serilog&lt;/a&gt; (structured logging)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/khellang/Middleware/tree/master/src/ProblemDetails"&gt;Hellang.Middleware.ProblemDetails&lt;/a&gt; (API Problem Details support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/domaindrivendev/Swashbuckle"&gt;Swashbuckle&lt;/a&gt; (Swagger automated documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StackExchange/Dapper"&gt;Dapper&lt;/a&gt; (micro ORM for Read Model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.newtonsoft.com/json"&gt;Newtonsoft.Json&lt;/a&gt; (serialization/deserialization to/from JSON)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.quartz-scheduler.net/"&gt;Quartz.NET&lt;/a&gt; (background processing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluentvalidation.net/"&gt;FluentValidation&lt;/a&gt; (data validation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jbogard/MediatR"&gt;MediatR&lt;/a&gt; (mediator implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.getpostman.com/"&gt;Postman&lt;/a&gt; (API tests)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nunit.org/"&gt;NUnit&lt;/a&gt; (Testing framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nsubstitute.github.io/"&gt;NSubstitute&lt;/a&gt; (Testing isolation framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.visual-paradigm.com/download/community.jsp"&gt;Visual Paradigm Community Edition&lt;/a&gt; (CASE tool for modeling and documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BenMorris/NetArchTest"&gt;NetArchTest&lt;/a&gt; (Architecture Unit Tests library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/App-vNext/Polly"&gt;Polly&lt;/a&gt; (Resilience and transient-fault-handling library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SQLStreamStore"&gt;SQL Stream Store&lt;/a&gt; (Library to assist with Event Sourcing)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dbup.readthedocs.io/en/latest/"&gt;DbUp&lt;/a&gt; (Database migrations deployment)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/ssdt/how-to-create-a-new-database-project"&gt;SSDT Database Project&lt;/a&gt; (Database structure versioning)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.github.com/en/actions"&gt;GitHub Actions&lt;/a&gt; (Continuous Integration workflows implementation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DotNetAnalyzers/StyleCopAnalyzers"&gt;StyleCopAnalyzers&lt;/a&gt; (Static code analysis library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://plantuml.com"&gt;PlantUML&lt;/a&gt; (UML diagrams from textual description, diagrams as text)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://c4model.com/"&gt;C4 Model&lt;/a&gt; (Model for visualising software architecture)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/plantuml-stdlib/C4-PlantUML"&gt;C4-PlantUML&lt;/a&gt; (C4 Model for PlantUML plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nuke.build/"&gt;NUKE&lt;/a&gt; (Build automation system)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rr-wfm/MSBuild.Sdk.SqlProj/"&gt;MSBuild.Sdk.SqlProj&lt;/a&gt; (Database project compilation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stryker-mutator.io/docs/stryker-net/Introduction"&gt;Stryker.NET&lt;/a&gt; (Mutation Testing framework)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;5. How to Run&lt;/h2&gt; 
&lt;h3&gt;Install .NET 8.0 SDK&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dotnet.microsoft.com/en-us/download/dotnet/8.0"&gt;Download&lt;/a&gt; and install .NET 8.0 SDK&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Create database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install MS SQL Server Express or other&lt;/li&gt; 
 &lt;li&gt;Create an empty database using &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Windows.sql"&gt;CreateDatabase_Windows.sql&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/CreateDatabase_Linux.sql"&gt;CreateDatabase_Linux.sql&lt;/a&gt;. Script adds &lt;strong&gt;app&lt;/strong&gt; schema which is needed for migrations journal table. Change database file path if needed.&lt;/li&gt; 
 &lt;li&gt;Run database migrations using &lt;strong&gt;MigrateDatabase&lt;/strong&gt; NUKE target by executing the build.sh script present in the root folder:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;.\build MigrateDatabase --DatabaseConnectionString "connection_string"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;"connection_string"&lt;/em&gt; - connection string to your database&lt;/p&gt; 
&lt;h3&gt;Seed database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Execute &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql"&gt;SeedDatabase.sql&lt;/a&gt; script&lt;/li&gt; 
 &lt;li&gt;2 test users will be created - check the script for usernames and passwords&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Configure connection string&lt;/h3&gt; 
&lt;p&gt;Set a database connection string called &lt;code&gt;MeetingsConnectionString&lt;/code&gt; in the root of the API project's appsettings.json or use &lt;a href="https://blogs.msdn.microsoft.com/mihansen/2017/09/10/managing-secrets-in-net-core-2-0-apps/"&gt;Secrets&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Example config setting in appsettings.json for a database called &lt;code&gt;MyMeetings&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
 "MeetingsConnectionString": "Server=(localdb)\\mssqllocaldb;Database=MyMeetings;Trusted_Connection=True;"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure startup in IDE&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the Startup Item in your IDE to the API Project, not IIS Express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authenticate&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once it is running you'll need a token to make API calls. This is done via OAuth2 &lt;a href="https://www.oauth.com/oauth2-servers/access-tokens/password-grant/"&gt;Resource Owner Password Grant Type&lt;/a&gt;. By default IdentityServer is configured with the following:&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_id = ro.client&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;client_secret = secret&lt;/code&gt; &lt;strong&gt;(this is literally the value - not a statement that this value is secret!)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;scope = myMeetingsAPI openid profile&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;grant_type = password&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Include the credentials of a test user created in the &lt;a href="https://raw.githubusercontent.com/kgrzybek/modular-monolith-with-ddd/master/src/Database/CompanyName.MyMeetings.Database/Scripts/SeedDatabase.sql"&gt;SeedDatabase.sql&lt;/a&gt; script - for example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;username = testMember@mail.com&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;password = testMemberPass&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example HTTP Request for an Access Token:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-http"&gt;POST /connect/token HTTP/1.1
Host: localhost:5000
 
grant_type=password
&amp;amp;username=testMember@mail.com
&amp;amp;password=testMemberPass
&amp;amp;client_id=ro.client
&amp;amp;client_secret=secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will fetch an access token for this user to make authorized API requests using the HTTP request header &lt;code&gt;Authorization: Bearer &amp;lt;access_token&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you use a tool such as Postman to test your API, the token can be fetched and stored within the tool itself and appended to all API calls. Check your tool documentation for instructions.&lt;/p&gt; 
&lt;h3&gt;Run using Docker Compose&lt;/h3&gt; 
&lt;p&gt;You can run whole application using &lt;a href="https://docs.docker.com/compose/"&gt;docker compose&lt;/a&gt; from root folder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will create following services: &lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MS SQL Server Database&lt;/li&gt; 
 &lt;li&gt;Database Migrator&lt;/li&gt; 
 &lt;li&gt;Application&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run Integration Tests in Docker&lt;/h3&gt; 
&lt;p&gt;You can run all Integration Tests in Docker (exactly the same process is executed on CI) using &lt;strong&gt;RunAllIntegrationTests&lt;/strong&gt; NUKE target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;.\build RunAllIntegrationTests
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6. Contribution&lt;/h2&gt; 
&lt;p&gt;This project is still under analysis and development. I assume its maintenance for a long time and I would appreciate your contribution to it. Please let me know by creating an Issue or Pull Request.&lt;/p&gt; 
&lt;h2&gt;7. Roadmap&lt;/h2&gt; 
&lt;p&gt;List of features/tasks/approaches to add:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Release date&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Domain Model Unit Tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-09-10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Architecture Decision Log update&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2019-11-09&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Integration automated tests&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-02-24&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET Core 3.1&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-04&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Integration Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-03-28&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;More advanced Payments module&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event Sourcing implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-07-11&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database Change Management&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Continuous Integration&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-01&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;StyleCop Static Code Analysis&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-09-05&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FrontEnd SPA application&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-08&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker support&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2020-11-26&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PlantUML Conceptual Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-22&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;C4 Model&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-29&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Meeting comments feature&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-03-30&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;NUKE build automation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Database project compilation on CI&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2021-06-15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;System Under Test implementation&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-07-17&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mutation Testing&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2022-08-23&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Migration to .NET 8.0&lt;/td&gt; 
   &lt;td&gt;Completed&lt;/td&gt; 
   &lt;td&gt;2023-12-09&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;NOTE: Please don't hesitate to suggest something else or a change to the existing code. All proposals will be considered.&lt;/p&gt; 
&lt;h2&gt;8. Authors&lt;/h2&gt; 
&lt;p&gt;Kamil Grzybek&lt;/p&gt; 
&lt;p&gt;Blog: &lt;a href="https://kamilgrzybek.com"&gt;https://kamilgrzybek.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Twitter: &lt;a href="https://twitter.com/kamgrzybek"&gt;https://twitter.com/kamgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;LinkedIn: &lt;a href="https://www.linkedin.com/in/kamilgrzybek/"&gt;https://www.linkedin.com/in/kamilgrzybek/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GitHub: &lt;a href="https://github.com/kgrzybek"&gt;https://github.com/kgrzybek&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;8.1 Main contributors&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AndreiGanichev"&gt;Andrei Ganichev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bistok"&gt;Bela Istok&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AlmarAubel"&gt;Almar Aubel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;9. License&lt;/h2&gt; 
&lt;p&gt;The project is under &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;10. Inspirations and Recommendations&lt;/h2&gt; 
&lt;h3&gt;Modular Monolith&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.kamilgrzybek.com/design/modular-monolith-primer/"&gt;"Modular Monolith: A Primer"&lt;/a&gt; Modular Monolith architecture article series, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=njDSXUWeik0"&gt;"Modular Monolith Architecture: One to rule them all"&lt;/a&gt; presentation, Kamil Grzybek&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5OjqD-ow8GE"&gt;"Modular Monoliths"&lt;/a&gt; presentation, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BOvxJaklcr0"&gt;"Majestic Modular Monoliths"&lt;/a&gt; presentation, Axel Fontaine&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://speakerdeck.com/olivergierke/building-better-monoliths-modulithic-applications-with-spring-boot-cd16e6ec-d334-497d-b9f6-3f92d5db035a"&gt;"Building Better Monoliths – Modulithic Applications with Spring Boot"&lt;/a&gt; slides, Oliver Drotbohm&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://martinfowler.com/bliki/MonolithFirst.html"&gt;"MonolithFirst"&lt;/a&gt; article, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://microservices.io/patterns/monolithic.html"&gt;"Pattern: Monolithic Architecture"&lt;/a&gt; pattern description, Chris Richardson&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Domain-Driven Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215"&gt;"Domain-Driven Design: Tackling Complexity in the Heart of Software"&lt;/a&gt; book, Eric Evans&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Implementing-Domain-Driven-Design-Vaughn-Vernon/dp/0321834577"&gt;"Implementing Domain-Driven Design"&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/dp/0134434420"&gt;"Domain-Driven Design Distilled"&lt;/a&gt; book, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Patterns-Principles-Practices-Domain-Driven-Design-ebook/dp/B00XLYUA0W"&gt;"Patterns, Principles, and Practices of Domain-Driven Design"&lt;/a&gt; book, Scott Millett, Nick Tune&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Secure-Design-Daniel-Deogun/dp/1617294357"&gt;"Secure By Design"&lt;/a&gt; book, Daniel Deogun, Dan Bergh Johnsson, Daniel Sawano&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B"&gt;"Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice"&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Domain-Modeling-Made-Functional-Domain-Driven-ebook/dp/B07B44BPFB"&gt;"Domain Modeling Made Functional: Tackle Software Complexity with Domain-Driven Design and F#"&lt;/a&gt; book, Scott Wlaschin&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ddd-by-examples/library"&gt;"DDD by examples - library"&lt;/a&gt; GH repository, Jakub Pilimon, Bartłomiej Słota&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VaughnVernon/IDDD_Samples"&gt;"IDDD_Samples"&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VaughnVernon/IDDD_Samples_NET"&gt;"IDDD_Samples_NET"&lt;/a&gt; GH repository, Vaughn Vernon&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heynickc/awesome-ddd"&gt;"Awesome Domain-Driven Design"&lt;/a&gt; GH repository, Nick Chamberlain&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Application Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://martinfowler.com/books/eaa.html"&gt;"Patterns of Enterprise Application Architecture"&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.manning.com/books/dependency-injection-principles-practices-patterns"&gt;"Dependency Injection Principles, Practices, and Patterns"&lt;/a&gt; book, Steven van Deursen, Mark Seemann&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Architecture-Craftsmans-Software-Structure/dp/0134494164"&gt;"Clean Architecture: A Craftsman's Guide to Software Structure and Design (Robert C. Martin Series"&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html"&gt;"The Clean Architecture"&lt;/a&gt; article, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jeffreypalermo.com/2008/07/the-onion-architecture-part-1/"&gt;"The Onion Architecture"&lt;/a&gt; article series, Jeffrey Palermo&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://web.archive.org/web/20180822100852/http://alistair.cockburn.us/Hexagonal+architecture"&gt;"Hexagonal/Ports &amp;amp; Adapters Architecture"&lt;/a&gt; article, Alistair Cockburn&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://herbertograca.com/2017/11/16/explicit-architecture-01-ddd-hexagonal-onion-clean-cqrs-how-i-put-it-all-together/"&gt;"DDD, Hexagonal, Onion, Clean, CQRS, … How I put it all together"&lt;/a&gt; article, Herberto Graca&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Software Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Software-Architecture-Practice-3rd-Engineering/dp/0321815734"&gt;"Software Architecture in Practice (3rd Edition)"&lt;/a&gt; book, Len Bass, Paul Clements, Rick Kazman&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://softwarearchitecturefordevelopers.com/"&gt;"Software Architecture for Developers Vol 1 &amp;amp; 2"&lt;/a&gt; book, Simon Brown&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Just-Enough-Software-Architecture-Risk-Driven/dp/0984618104"&gt;"Just Enough Software Architecture: A Risk-Driven Approach"&lt;/a&gt; book, George H. Fairbanks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Software-Systems-Architecture-Stakeholders-Perspectives/dp/032171833X/"&gt;"Software Systems Architecture: Working With Stakeholders Using Viewpoints and Perspectives (2nd Edition)"&lt;/a&gt; book, Nick Rozanski, Eóin Woods&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Design-Programmer-Architect-Pragmatic-Programmers/dp/1680502093"&gt;"Design It!: From Programmer to Software Architect (The Pragmatic Programmers)"&lt;/a&gt; book, Michael Keeling&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.enterpriseintegrationpatterns.com/"&gt;"Enterprise Integration Patterns : Designing, Building, and Deploying Messaging Solutions"&lt;/a&gt; book and catalogue, Gregor Hohpe, Bobby Woolf&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Designing-Data-Intensive-Applications-Reliable-Maintainable/dp/1449373321"&gt;"Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems "&lt;/a&gt; book, Martin Kleppman&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Building-Evolutionary-Architectures-Support-Constant/dp/1491986360"&gt;"Building Evolutionary Architectures: Support Constant Change"&lt;/a&gt; book, Neal Ford&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Building-Microservices-Designing-Fine-Grained-Systems/dp/1491950358"&gt;"Building Microservices: Designing Fine-Grained Systems"&lt;/a&gt; book, Sam Newman&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Design&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672"&gt;"Refactoring: Improving the Design of Existing Code"&lt;/a&gt; book, Martin Fowler, Kent Beck, John Brant, William Opdyke, Don Roberts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882"&gt;"Clean Code: A Handbook of Agile Software Craftsmanship"&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Agile-Principles-Patterns-Practices-C/dp/0131857258"&gt;"Agile Principles, Patterns, and Practices in C#"&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Applying-UML-Patterns-Introduction-Object-Oriented/dp/0131489062"&gt;"Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development (3rd Edition)"&lt;/a&gt; book, Craig Larman&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Working-Effectively-Legacy-Michael-Feathers/dp/0131177052"&gt;"Working Effectively with Legacy Code"&lt;/a&gt; book, Michael Feathers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Code-Complete-Practical-Handbook-Construction/dp/0735619670"&gt;"Code Complete: A Practical Handbook of Software Construction, Second Edition"&lt;/a&gt; book, Steve McConnell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612"&gt;"Design Patterns: Elements of Reusable Object-Oriented Software"&lt;/a&gt; book, Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Craftsmanship&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Coder-Conduct-Professional-Programmers/dp/0137081073"&gt;"The Clean Coder: A Code of Conduct for Professional Programmers"&lt;/a&gt; book, Robert C. Martin&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Pragmatic-Programmer-Journeyman-Master/dp/020161622X"&gt;"The Pragmatic Programmer: From Journeyman to Master"&lt;/a&gt; book, Andrew Hunt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Art-Unit-Testing-examples/dp/1617290890"&gt;"The Art of Unit Testing: with examples in C#"&lt;/a&gt; book, Roy Osherove&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.oracle.com/javamagazine/unit-test-your-architecture-with-archunit"&gt;"Unit Test Your Architecture with ArchUnit"&lt;/a&gt; article, Jonas Havers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Unit-Testing-Principles-Practices-Patterns/dp/1617296279"&gt;"Unit Testing Principles, Practices, and Patterns"&lt;/a&gt; book, Vladimir Khorikov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627"&gt;"Growing Object-Oriented Software, Guided by Tests"&lt;/a&gt; book, Steve Freeman, Nat Pryce&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kamilgrzybek.com/blog/series/automated-tests"&gt;Automated Tests&lt;/a&gt; article series, Kamil Grzybek&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;UML&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/UML-Distilled-Standard-Modeling-Language/dp/0321193687"&gt;"UML Distilled: A Brief Guide to the Standard Object Modeling Language (3rd Edition)"&lt;/a&gt; book, Martin Fowler&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Storming&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://leanpub.com/introducing_eventstorming"&gt;"Introducing EventStorming"&lt;/a&gt; book, Alberto Brandolini&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mariuszgil/awesome-eventstorming"&gt;"Awesome EventStorming"&lt;/a&gt; GH repository, Mariusz Gil&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Event Sourcing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Hands-Domain-Driven-Design-NET-ebook/dp/B07C5WSR9B"&gt;"Hands-On Domain-Driven Design with .NET Core: Tackling complexity in the heart of software by putting DDD principles into practice"&lt;/a&gt; book, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://leanpub.com/esversioning"&gt;"Versioning in an Event Sourced System"&lt;/a&gt; book, Greg Young&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PacktPublishing/Hands-On-Domain-Driven-Design-with-.NET-Core"&gt;Hands-On-Domain-Driven-Design-with-.NET-Core&lt;/a&gt; GH repository, Alexey Zimarev&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oskardudycz/EventSourcing.NetCore"&gt;EventSourcing.NetCore&lt;/a&gt; GH repository, Oskar Dudycz&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>activepieces/activepieces</title>
      <link>https://github.com/activepieces/activepieces</link>
      <description>&lt;p&gt;AI Agents &amp; MCPs &amp; AI Workflow Automation • (280+ MCP servers for AI agents) • AI Automation / AI Agent with MCPs • AI Workflows &amp; AI Agents • MCPs for AI Agents&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a target="_blank" href="https://activepieces.com"&gt; &lt;img align="center" alt="Activepieces" src="https://github.com/activepieces/activepieces/assets/1812998/76c97441-c285-4480-bc75-30a0c73ed340" style="width:100%;" /&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/LICENSE" target="_blank"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-green?style=for-the-badge" /&gt;&lt;/a&gt;&amp;nbsp;&lt;img src="https://img.shields.io/github/commit-activity/w/activepieces/activepieces/main?style=for-the-badge" /&gt;&amp;nbsp;&lt;a href="https://discord.gg/2jUXBKDdP8"&gt;&lt;img src="https://img.shields.io/discord/966798490984382485?style=for-the-badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; An open source replacement for Zapier &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.activepieces.com/docs" target="_blank"&gt;&lt;b&gt;Documentation&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;🌪️&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.activepieces.com/docs/developers/overview" target="_blank"&gt;&lt;b&gt;Create a Piece&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;🖉&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.activepieces.com/docs/install/overview" target="_blank"&gt;&lt;b&gt;Deploy&lt;/b&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;🔥&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://discord.gg/yvxF5k5AUb" target="_blank"&gt; &lt;b&gt;Join Discord&lt;/b&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h1&gt;🤯 Welcome to Activepieces&lt;/h1&gt; 
&lt;p&gt;All-in-one AI automation designed to be &lt;strong&gt;extensible&lt;/strong&gt; through a &lt;strong&gt;type-safe&lt;/strong&gt; pieces framework written in &lt;strong&gt;TypeScript&lt;/strong&gt;. When you contribute pieces to Activepieces they become automatically available as MCP servers that you can use with LLMs through Claude Desktop, Cursor or Windsurf!&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;🔥 Why Activepieces is Different:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;💖 Loved by Everyone&lt;/strong&gt;: Intuitive interface and great experience for both technical and non-technical users with a quick learning curve.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/activepieces/activepieces/main/docs/resources/templates.gif" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🌐 Open Ecosystem:&lt;/strong&gt; All pieces are open source and available on npmjs.com, &lt;strong&gt;60% of the pieces are contributed by the community&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🛠️ Largest open source MCP toolkit&lt;/strong&gt;: All our pieces (280+) are available as MCP that you can use with LLMs on Claude Desktop, Cursor or Windsurf.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🛠️ Pieces are written in Typescript&lt;/strong&gt;: Pieces are npm packages in TypeScript, offering full customization with the best developer experience, including &lt;strong&gt;hot reloading&lt;/strong&gt; for &lt;strong&gt;local&lt;/strong&gt; piece development on your machine. 😎&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/activepieces/activepieces/main/docs/resources/create-action.png" alt="" /&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🤖 AI-First&lt;/strong&gt;: Native AI pieces let you experiment with various providers, or create your own agents using our AI SDK, and there is Copilot to help you build flows inside the builder.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🏢 Enterprise-Ready&lt;/strong&gt;: Developers set up the tools, and anyone in the organization can use the no-code builder. Full customization from branding to control.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔒 Secure by Design&lt;/strong&gt;: Self-hosted and network-gapped for maximum security and control over your data.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🧠 Human in the Loop&lt;/strong&gt;: Delay execution for a period of time or require approval. These are just pieces built on top of the piece framework, and you can build many pieces like that. 🎨&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;💻 Human Input Interfaces&lt;/strong&gt;: Built-in support for human input triggers like "Chat Interface" 💬 and "Form Interface" 📝&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛠️ Builder Features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Loops&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Branches&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto Retries&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; HTTP&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Code with &lt;strong&gt;NPM&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; ASK AI in Code Piece (Non technical user can clean data without knowing to code)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Flows are fully versioned.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Languages Translations&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Customizable Templates&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 200+ Pieces, check &lt;a href="https://www.activepieces.com/pieces"&gt;https://www.activepieces.com/pieces&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;We release updates frequently. Check the product changelog for the latest features.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;🔌 Create Your Own Piece&lt;/h2&gt; 
&lt;p&gt;Activepieces supports integrations with Google Sheets, OpenAI, Discord, RSS, and over 200 other services. &lt;a href="https://www.activepieces.com/pieces"&gt;Check out the full list of supported integrations&lt;/a&gt;, which is constantly expanding thanks to our community's contributions.&lt;/p&gt; 
&lt;p&gt;As an &lt;strong&gt;open ecosystem&lt;/strong&gt;, all integration source code is accessible in our repository. These integrations are versioned and &lt;a href="https://www.npmjs.com/search?q=%40activepieces"&gt;published&lt;/a&gt; directly to npmjs.com upon contribution.&lt;/p&gt; 
&lt;p&gt;You can easily create your own integration using our TypeScript framework. For detailed instructions, please refer to our &lt;a href="https://www.activepieces.com/docs/contributing/overview"&gt;Contributor's Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Activepieces' Community Edition is released as open source under the &lt;a href="https://github.com/activepieces/activepieces/raw/main/LICENSE"&gt;MIT license&lt;/a&gt; and enterprise features are released under &lt;a href="https://github.com/activepieces/activepieces/raw/main/packages/ee/LICENSE"&gt;Commercial License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Read more about the feature comparison here &lt;a href="https://www.activepieces.com/docs/about/editions"&gt;https://www.activepieces.com/docs/about/editions&lt;/a&gt; &lt;br /&gt; &lt;br /&gt;&lt;/p&gt; 
&lt;h1&gt;💭 Join Our Community&lt;/h1&gt; 
&lt;a href="https://discord.gg/2jUXBKDdP8" target="_blank"&gt; &lt;img src="https://discordapp.com/api/guilds/966798490984382485/widget.png?style=banner3" alt="" /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h1&gt;🌐 Contributions&lt;/h1&gt; 
&lt;p&gt;We welcome contributions big or small and in different directions. The best way to do this is to check this &lt;a href="https://www.activepieces.com/docs/contributing/building-pieces/create-action"&gt;document&lt;/a&gt; and we are always up to talk on &lt;a href="https://discord.gg/2jUXBKDdP8"&gt;our Discord Server&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📚 Translations&lt;/h2&gt; 
&lt;p&gt;Not into coding but still interested in contributing? Come join our &lt;a href="https://discord.gg/2jUXBKDdP8"&gt;Discord&lt;/a&gt; and visit &lt;a href="https://www.activepieces.com/docs/about/i18n"&gt;https://www.activepieces.com/docs/about/i18n&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=fr&amp;amp;style=for-the-badge&amp;amp;logo=crowdin&amp;amp;query=%24.progress%5B?(@.data.languageId==%27fr%27)%5D.data.translationProgress&amp;amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json" alt="fr translation" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=it&amp;amp;style=for-the-badge&amp;amp;logo=crowdin&amp;amp;query=%24.progress%5B?(@.data.languageId==%27it%27)%5D.data.translationProgress&amp;amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json" alt="it translation" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=de&amp;amp;style=for-the-badge&amp;amp;logo=crowdin&amp;amp;query=%24.progress%5B?(@.data.languageId==%27de%27)%5D.data.translationProgress&amp;amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json" alt="de translation" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=ja&amp;amp;style=for-the-badge&amp;amp;logo=crowdin&amp;amp;query=%24.progress%5B?(@.data.languageId==%27ja%27)%5D.data.translationProgress&amp;amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json" alt="ja translation" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?color=blue&amp;amp;label=pt-BR&amp;amp;style=for-the-badge&amp;amp;logo=crowdin&amp;amp;query=%24.progress%5B?(@.data.languageId==%27pt-BR%27)%5D.data.translationProgress&amp;amp;url=https%3A%2F%2Fbadges.awesome-crowdin.com%2Fstats-16093902-626364-update.json" alt="pt-BR translation" /&gt;&lt;/p&gt; 
&lt;h2&gt;🦫 Contributors&lt;/h2&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ShahedAlMashni"&gt;&lt;img src="https://avatars.githubusercontent.com/u/41443850?v=4?s=100" width="100px;" alt="ShahedAlMashni" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ShahedAlMashni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-ShahedAlMashni" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AbdulTheActivePiecer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/106555838?v=4?s=100" width="100px;" alt="AbdulTheActivePiecer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AbdulTheActivePiecer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#maintenance-AbdulTheActivePiecer" title="Maintenance"&gt;🚧&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/khaledmashaly"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61781545?v=4?s=100" width="100px;" alt="Khaled Mashaly" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Khaled Mashaly&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#maintenance-khaledmashaly" title="Maintenance"&gt;🚧&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/abuaboud"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1812998?v=4?s=100" width="100px;" alt="Mohammed Abu Aboud" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammed Abu Aboud&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#maintenance-abuaboud" title="Maintenance"&gt;🚧&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://aboudzein.github.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12976630?v=4?s=100" width="100px;" alt="Abdulrahman Zeineddin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdulrahman Zeineddin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-aboudzein" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/creed983"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62152944?v=4?s=100" width="100px;" alt="ahmad jaber" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ahmad jaber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-creed983" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ashrafsamhouri"&gt;&lt;img src="https://avatars.githubusercontent.com/u/97393596?v=4?s=100" width="100px;" alt="ashrafsamhouri" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ashrafsamhouri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-ashrafsamhouri" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://steercampaign.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12627658?v=4?s=100" width="100px;" alt="Mohammad Abu Musa" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohammad Abu Musa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#projectManagement-mabumusa1" title="Project Management"&gt;📆&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/kanarelo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/393261?v=4?s=100" width="100px;" alt="Mukewa Wekalao" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mukewa Wekalao&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-kanarelo" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://osamahaikal.me/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72370395?v=4?s=100" width="100px;" alt="Osama Abdallah Essa Haikal" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Osama Abdallah Essa Haikal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-OsamaHaikal" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/M-Arman"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54455592?v=4?s=100" width="100px;" alt="Arman" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Arman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#security-M-Arman" title="Security"&gt;🛡️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/oskarkraemer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42745862?v=4?s=100" width="100px;" alt="Oskar Krämer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Oskar Krämer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=oskarkraemer" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://thibpat.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/494686?v=4?s=100" width="100px;" alt="Thibaut Patel" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Thibaut Patel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#ideas-tpatel" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-tpatel" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Applesaucesomer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18318905?v=4?s=100" width="100px;" alt="Applesaucesomer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Applesaucesomer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#ideas-Applesaucesomer" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/crazyTweek"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6828237?v=4?s=100" width="100px;" alt="crazyTweek" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;crazyTweek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#ideas-crazyTweek" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://linkedin.com/in/muhammad-tabaza"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23503983?v=4?s=100" width="100px;" alt="Muhammad Tabaza" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Muhammad Tabaza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-m-tabaza" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://shaypunter.co.uk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18310437?v=4?s=100" width="100px;" alt="Shay Punter" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shay Punter&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=ShayPunter" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-ShayPunter" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/abaza738"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50132270?v=4?s=100" width="100px;" alt="abaza738" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;abaza738&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-abaza738" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/jonaboe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51358680?v=4?s=100" width="100px;" alt="Jona Boeddinghaus" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jona Boeddinghaus&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-jonaboe" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/fomojola"&gt;&lt;img src="https://avatars.githubusercontent.com/u/264253?v=4?s=100" width="100px;" alt="fomojola" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;fomojola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=fomojola" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/astorozhevsky"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11055414?v=4?s=100" width="100px;" alt="Alexander Storozhevsky" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexander Storozhevsky&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=astorozhevsky" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/J0LGER"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54769522?v=4?s=100" width="100px;" alt="J0LGER" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;J0LGER&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#security-J0LGER" title="Security"&gt;🛡️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://about.me/veverkap"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22348?v=4?s=100" width="100px;" alt="Patrick Veverka" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Patrick Veverka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Aveverkap" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://berksmbl.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10000339?v=4?s=100" width="100px;" alt="Berk Sümbül" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Berk Sümbül&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=berksmbl" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Willianwg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51550522?v=4?s=100" width="100px;" alt="Willian Guedes" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Willian Guedes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Willianwg" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/abdullahranginwala"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19731056?v=4?s=100" width="100px;" alt="Abdullah Ranginwala" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdullah Ranginwala&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=abdullahranginwala" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dentych"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2256372?v=4?s=100" width="100px;" alt="Dennis Tychsen" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dennis Tychsen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-dentych" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/MyWay"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1765284?v=4?s=100" width="100px;" alt="MyWay" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MyWay&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-MyWay" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bibhuty-did-this"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28416188?v=4?s=100" width="100px;" alt="Bibhuti Bhusan Panda" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bibhuti Bhusan Panda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-bibhuty-did-this" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/tarunsamanta2k20"&gt;&lt;img src="https://avatars.githubusercontent.com/u/55488549?v=4?s=100" width="100px;" alt="Tarun Samanta" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tarun Samanta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Atarunsamanta2k20" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/herman-kudria-10868b207/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9007211?v=4?s=100" width="100px;" alt="Herman Kudria" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Herman Kudria&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-HKudria" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://nulldev.imagefoo.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66683380?v=4?s=100" width="100px;" alt="[NULL] Dev" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;[NULL] Dev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Abdallah-Alwarawreh" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/JanHolger"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25184957?v=4?s=100" width="100px;" alt="Jan Bebendorf" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jan Bebendorf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-JanHolger" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://blog.nileshtrivedi.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19304?v=4?s=100" width="100px;" alt="Nilesh" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nilesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-nileshtrivedi" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://certopus.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40790016?v=4?s=100" width="100px;" alt="Vraj Gohil" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vraj Gohil&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-VrajGohil" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/BastienMe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/71411115?v=4?s=100" width="100px;" alt="BastienMe" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;BastienMe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-BastienMe" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://blog.fosketts.net"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8627862?v=4?s=100" width="100px;" alt="Stephen Foskett" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Stephen Foskett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=SFoskett" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://ganapati.fr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15729117?v=4?s=100" width="100px;" alt="Nathan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nathan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=asuri0n" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.n-soft.pl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4056319?v=4?s=100" width="100px;" alt="Marcin Natanek" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Marcin Natanek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mnatanek" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://all-tech-plus.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23551912?v=4?s=100" width="100px;" alt="Mark van Bellen" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mark van Bellen&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-buttonsbond" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://guzguz.fr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13715916?v=4?s=100" width="100px;" alt="Olivier Guzzi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Olivier Guzzi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-olivierguzzi" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Ozak93"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31257994?v=4?s=100" width="100px;" alt="Osama Zakarneh" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Osama Zakarneh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Ozak93" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/phestvik"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88210985?v=4?s=100" width="100px;" alt="phestvik" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;phestvik&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#ideas-phestvik" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://website-portfolio-bucket.s3-website-ap-northeast-1.amazonaws.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/113296626?v=4?s=100" width="100px;" alt="Rajdeep Pal" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rajdeep Pal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=Rajdeep1311" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.tepote.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40870?v=4?s=100" width="100px;" alt="Camilo Usuga" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Camilo Usuga&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-camilou" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/kishanprmr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/135701940?v=4?s=100" width="100px;" alt="Kishan Parmar" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kishan Parmar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=kishanprmr" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-kishanprmr" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/BBND"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42919338?v=4?s=100" width="100px;" alt="BBND" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;BBND&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-BBND" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/haseebrehmanpc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37938986?v=4?s=100" width="100px;" alt="Haseeb Rehman" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Haseeb Rehman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-haseebrehmanpc" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/ritagorokhod/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/60586879?v=4?s=100" width="100px;" alt="Rita Gorokhod" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rita Gorokhod&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-rita-gorokhod" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/facferreira"&gt;&lt;img src="https://avatars.githubusercontent.com/u/487349?v=4?s=100" width="100px;" alt="Fábio Ferreira" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Fábio Ferreira&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-facferreira" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://buffetitservices.ch"&gt;&lt;img src="https://avatars.githubusercontent.com/u/73933252?v=4?s=100" width="100px;" alt="Florin Buffet" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Florin Buffet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=FlorinBuffet" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Owlcept"&gt;&lt;img src="https://avatars.githubusercontent.com/u/67299472?v=4?s=100" width="100px;" alt="Drew Lewis" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Drew Lewis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Owlcept" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://bendersej.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10613140?v=4?s=100" width="100px;" alt="Benjamin André-Micolon" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Benjamin André-Micolon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-bendersej" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/DGurskij"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26856659?v=4?s=100" width="100px;" alt="Denis Gurskij" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Denis Gurskij&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-DGurskij" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://neferlopez.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11466949?v=4?s=100" width="100px;" alt="Nefer Lopez" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nefer Lopez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=thatguynef" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/fardeenpanjwani-codeglo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/141914308?v=4?s=100" width="100px;" alt="fardeenpanjwani-codeglo" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;fardeenpanjwani-codeglo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=fardeenpanjwani-codeglo" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/landonmoir"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29764668?v=4?s=100" width="100px;" alt="Landon Moir" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Landon Moir&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-landonmoir" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://lightspeed-it.nl/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22002313?v=4?s=100" width="100px;" alt="Diego Nijboer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Diego Nijboer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-lldiegon" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://ductan.me/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24206229?v=4?s=100" width="100px;" alt="Tân Một Nắng" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tân Một Nắng&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-tanoggy" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://geteduca.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/838788?v=4?s=100" width="100px;" alt="Gavin Foley" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Gavin Foley&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=GFoley83" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://dtrautwein.eu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11836793?v=4?s=100" width="100px;" alt="Dennis Trautwein" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dennis Trautwein&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Adennis-tra" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/inspiredclick"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1548613?v=4?s=100" width="100px;" alt="Andrew Rosenblatt" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrew Rosenblatt&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Ainspiredclick" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/w95"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6433752?v=4?s=100" width="100px;" alt="rika" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;rika&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-w95" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/cyrilselasi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7190330?v=4?s=100" width="100px;" alt="Cyril Selasi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Cyril Selasi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-cyrilselasi" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://nijfranck.github.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9940307?v=4?s=100" width="100px;" alt="Franck Nijimbere" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Franck Nijimbere&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-nijfranck" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/alerdenisov"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3899837?v=4?s=100" width="100px;" alt="Aleksandr Denisov" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aleksandr Denisov&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-alerdenisov" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rbnswartz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/724704?v=4?s=100" width="100px;" alt="Reuben Swartz" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Reuben Swartz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=rbnswartz" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://lupianezjose.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4380557?v=4?s=100" width="100px;" alt="joselupianez" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;joselupianez&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-joselupianez" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.zidoary.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24081860?v=4?s=100" width="100px;" alt="Awais Manzoor" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Awais Manzoor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Aawais000" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://github.com/activepieces/activepieces/commits?author=awais000" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/andchir"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6392311?v=4?s=100" width="100px;" alt="Andrei" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Andrei&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Aandchir" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/derbbre"&gt;&lt;img src="https://avatars.githubusercontent.com/u/281843?v=4?s=100" width="100px;" alt="derbbre" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;derbbre&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=derbbre" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/maor-rozenfeld"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49363375?v=4?s=100" width="100px;" alt="Maor Rozenfeld" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Maor Rozenfeld&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=maor-rozenfeld" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/miqh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43751307?v=4?s=100" width="100px;" alt="Michael Huynh" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Michael Huynh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=miqh" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/fdundjer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17405319?v=4?s=100" width="100px;" alt="Filip Dunđer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Filip Dunđer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=fdundjer" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://donthorp.net"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8629?v=4?s=100" width="100px;" alt="Don Thorp" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Don Thorp&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=donthorp" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://joeworkman.net"&gt;&lt;img src="https://avatars.githubusercontent.com/u/225628?v=4?s=100" width="100px;" alt="Joe Workman" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joe Workman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-joeworkman" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Autumnlight02"&gt;&lt;img src="https://avatars.githubusercontent.com/u/68244453?v=4?s=100" width="100px;" alt="Aykut Akgün" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aykut Akgün&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=Autumnlight02" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/yann120"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10012140?v=4?s=100" width="100px;" alt="Yann Petitjean" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yann Petitjean&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-yann120" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt; &lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Ayann120" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/pfernandez98"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54374282?v=4?s=100" width="100px;" alt="pfernandez98" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;pfernandez98&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-pfernandez98" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://denieler.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2836281?v=4?s=100" width="100px;" alt="Daniel O." /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel O.&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-denieler" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://myh.tw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12458706?v=4?s=100" width="100px;" alt="Meng-Yuan Huang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Meng-Yuan Huang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=MrMYHuang" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/bigfluffycookie"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54935347?v=4?s=100" width="100px;" alt="Leyla" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Leyla&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Abigfluffycookie" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://i-nithin.netlify.app/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/97078688?v=4?s=100" width="100px;" alt="i-nithin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;i-nithin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-i-nithin" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://lawrenceli.me"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24540598?v=4?s=100" width="100px;" alt="la3rence" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;la3rence&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-la3rence" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://dennisrongo.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51771021?v=4?s=100" width="100px;" alt="Dennis Rongo" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Dennis Rongo&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Adennisrongo" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-dennisrongo" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/kartikmehta8"&gt;&lt;img src="https://avatars.githubusercontent.com/u/77505989?v=4?s=100" width="100px;" alt="Kartik Mehta" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kartik Mehta&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=kartikmehta8" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/activepieces/activepieces/commits?author=kartikmehta8" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://zakher.me"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46135573?v=4?s=100" width="100px;" alt="Zakher Masri" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Zakher Masri&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=zaaakher" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/activepieces/activepieces/commits?author=zaaakher" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AbdullahBitar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/122645579?v=4?s=100" width="100px;" alt="AbdullahBitar" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AbdullahBitar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-AbdullahBitar" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mariomeyer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/867650?v=4?s=100" width="100px;" alt="Mario Meyer" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mario Meyer&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mariomeyer" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/karimkhaleel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/94621779?v=4?s=100" width="100px;" alt="Karim Khaleel" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Karim Khaleel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-karimkhaleel" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/CPonchet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40756925?v=4?s=100" width="100px;" alt="CPonchet" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;CPonchet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3ACPonchet" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AdamSelene"&gt;&lt;img src="https://avatars.githubusercontent.com/u/79495?v=4?s=100" width="100px;" alt="Olivier Sambourg" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Olivier Sambourg&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-AdamSelene" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Verlich"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30838131?v=4?s=100" width="100px;" alt="Ahmad(Ed)" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ahmad(Ed)&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Verlich" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/leenmashni"&gt;&lt;img src="https://avatars.githubusercontent.com/u/102361544?v=4?s=100" width="100px;" alt="leenmashni" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;leenmashni&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-leenmashni" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AliasKingsWorth"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47811610?v=4?s=100" width="100px;" alt="M Abdul Rauf" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;M Abdul Rauf&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=AliasKingsWorth" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/vbarrier"&gt;&lt;img src="https://avatars.githubusercontent.com/u/446808?v=4?s=100" width="100px;" alt="Vincent Barrier" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Vincent Barrier&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-vbarrier" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://johnmark.dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/65794951?v=4?s=100" width="100px;" alt="John" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;John&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=jmgb27" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-jmgb27" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://joost.blog/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/487629?v=4?s=100" width="100px;" alt="Joost de Valk" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joost de Valk&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-jdevalk" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/nyamkamunhjin/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/44439626?v=4?s=100" width="100px;" alt="MJ" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MJ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-nyamkamunhjin" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/shravankshenoy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29670290?v=4?s=100" width="100px;" alt="ShravanShenoy" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ShravanShenoy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=shravankshenoy" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://jonkristian.no"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13219?v=4?s=100" width="100px;" alt="Jon Kristian" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jon Kristian&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=jonkristian" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/cr0fters"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1754858?v=4?s=100" width="100px;" alt="cr0fters" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;cr0fters&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Acr0fters" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://bibek-timsina.com.np/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29589003?v=4?s=100" width="100px;" alt="Bibek Timsina" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Bibek Timsina&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Abimsina" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/szepeviktor/debian-server-tools/raw/master/CV.md"&gt;&lt;img src="https://avatars.githubusercontent.com/u/952007?v=4?s=100" width="100px;" alt="Viktor Szépe" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Viktor Szépe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=szepeviktor" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rendyt1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38492810?v=4?s=100" width="100px;" alt="Rendy Tan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rendy Tan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=rendyt1" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-rendyt1" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://islamaf.github.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/44944648?v=4?s=100" width="100px;" alt="Islam Abdelfattah" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Islam Abdelfattah&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Aislamaf" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/uniqueeest"&gt;&lt;img src="https://avatars.githubusercontent.com/u/123538138?v=4?s=100" width="100px;" alt="Yoonjae Choi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yoonjae Choi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=uniqueeest" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://javix64.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58471170?v=4?s=100" width="100px;" alt="Javier HM" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Javier HM&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-javix64" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://farag.tech"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50884619?v=4?s=100" width="100px;" alt="Mohamed Hassan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mohamed Hassan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3AMohamedHassan499" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.coasy.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17610709?v=4?s=100" width="100px;" alt="Christian Schab" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Christian Schab&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-christian-schab" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.gamespecifications.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37847256?v=4?s=100" width="100px;" alt="Pratik Kinage" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Pratik Kinage&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-thirstycode" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/LevwTech"&gt;&lt;img src="https://avatars.githubusercontent.com/u/69399787?v=4?s=100" width="100px;" alt="Abdelrahman Mostafa " /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdelrahman Mostafa &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-LevwTech" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/HamzaZagha"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45468866?v=4?s=100" width="100px;" alt="Hamza Zagha" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Hamza Zagha&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3AHamzaZagha" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://founderblocks.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88160672?v=4?s=100" width="100px;" alt="Lasse Schuirmann" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lasse Schuirmann&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-founderblocks-sils" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://about.me/cyril_duchon_doris"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7388889?v=4?s=100" width="100px;" alt="Cyril Duchon-Doris" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Cyril Duchon-Doris&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Startouf" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Javiink"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43996484?v=4?s=100" width="100px;" alt="Javiink" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Javiink&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Javiink" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/hharchani"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6430611?v=4?s=100" width="100px;" alt="Harshit Harchani" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harshit Harchani&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-hharchani" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/MrAkber"&gt;&lt;img src="https://avatars.githubusercontent.com/u/170118042?v=4?s=100" width="100px;" alt="MrAkber" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MrAkber&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=MrAkber" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/marek-slavicek"&gt;&lt;img src="https://avatars.githubusercontent.com/u/136325104?v=4?s=100" width="100px;" alt="marek-slavicek" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;marek-slavicek&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-marek-slavicek" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/hugh-codes"&gt;&lt;img src="https://avatars.githubusercontent.com/u/166336705?v=4?s=100" width="100px;" alt="hugh-codes" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;hugh-codes&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-hugh-codes" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/alewis001"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3482446?v=4?s=100" width="100px;" alt="Alex Lewis" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alex Lewis&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Aalewis001" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://yual.in"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21105863?v=4?s=100" width="100px;" alt="Yuanlin Lin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yuanlin Lin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=yuaanlin" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://klo.dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/96867907?v=4?s=100" width="100px;" alt="Ala Shiban" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ala Shiban&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=AlaShibanAtKlo" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://hamedsh.medium.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6043214?v=4?s=100" width="100px;" alt="hamsh" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;hamsh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=hamedsh" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.anne-mariel.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/77142075?v=4?s=100" width="100px;" alt="Anne Mariel Catapang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Anne Mariel Catapang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-AnneMariel95" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://hi.carlogino.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19299524?v=4?s=100" width="100px;" alt="Carlo Gino Catapang" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Carlo Gino Catapang&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-codegino" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/drona2938"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34496554?v=4?s=100" width="100px;" alt="Aditya Rathore" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Aditya Rathore&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-drona2938" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/coderbob2"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47177246?v=4?s=100" width="100px;" alt="coderbob2" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;coderbob2&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-coderbob2" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://raamyy.netlify.app"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29176293?v=4?s=100" width="100px;" alt="Ramy Gamal" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ramy Gamal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Raamyy" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://alexandrudanpop.dev/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15979292?v=4?s=100" width="100px;" alt="Alexandru-Dan Pop" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Alexandru-Dan Pop&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=alexandrudanpop" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Trayshmhirk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/112286458?v=4?s=100" width="100px;" alt="Frank Micheal " /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Frank Micheal &lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Trayshmhirk" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/emmanuel-ferdman"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35470921?v=4?s=100" width="100px;" alt="Emmanuel Ferdman" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Emmanuel Ferdman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=emmanuel-ferdman" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sany2407"&gt;&lt;img src="https://avatars.githubusercontent.com/u/179091674?v=4?s=100" width="100px;" alt="Sany A" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sany A&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-sany2407" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://swimburger.net"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3382717?v=4?s=100" width="100px;" alt="Niels Swimberghe" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Niels Swimberghe&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3ASwimburger" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/lostinbug"&gt;&lt;img src="https://avatars.githubusercontent.com/u/157452389?v=4?s=100" width="100px;" alt="lostinbug" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;lostinbug&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-lostinbug" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/gushkool"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64713308?v=4?s=100" width="100px;" alt="gushkool" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;gushkool&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-gushkool" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://www.linkedin.com/in/omarsayed"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3813045?v=4?s=100" width="100px;" alt="Omar Sayed" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Omar Sayed&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-OmarSayed" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rSnapkoOpenOps"&gt;&lt;img src="https://avatars.githubusercontent.com/u/179845343?v=4?s=100" width="100px;" alt="rSnapkoOpenOps" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;rSnapkoOpenOps&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3ArSnapkoOpenOps" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ahronshor"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25138831?v=4?s=100" width="100px;" alt="ahronshor" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;ahronshor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-ahronshor" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/cezudas"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3786138?v=4?s=100" width="100px;" alt="Cezar" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Cezar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Acezudas" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/geekyme-fsmk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/100678833?v=4?s=100" width="100px;" alt="Shawn Lim" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shawn Lim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-geekyme-fsmk" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://shawn.storyline.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/977460?v=4?s=100" width="100px;" alt="Shawn Lim" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Shawn Lim&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-geekyme" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/pavloDeshko"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27104046?v=4?s=100" width="100px;" alt="pavloDeshko" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;pavloDeshko&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3ApavloDeshko" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/liuhuapiaoyuan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8020726?v=4?s=100" width="100px;" alt="abc" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;abc&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=liuhuapiaoyuan" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/manojkum-d"&gt;&lt;img src="https://avatars.githubusercontent.com/u/141437046?v=4?s=100" width="100px;" alt="manoj kumar d" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;manoj kumar d&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-manojkum-d" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/felifluid"&gt;&lt;img src="https://avatars.githubusercontent.com/u/59516203?v=4?s=100" width="100px;" alt="Feli" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Feli&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-felifluid" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mordonez"&gt;&lt;img src="https://avatars.githubusercontent.com/u/293837?v=4?s=100" width="100px;" alt="Miguel" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Miguel&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mordonez" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/dev-instasent"&gt;&lt;img src="https://avatars.githubusercontent.com/u/116744368?v=4?s=100" width="100px;" alt="Instasent DEV" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Instasent DEV&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-dev-instasent" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/matthieu-lombard"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33624489?v=4?s=100" width="100px;" alt="Matthieu Lombard" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Matthieu Lombard&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-matthieu-lombard" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/beyondlevi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57486338?v=4?s=100" width="100px;" alt="beyondlevi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;beyondlevi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-beyondlevi" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://rafal.fyi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10667346?v=4?s=100" width="100px;" alt="Rafal Zawadzki" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rafal Zawadzki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-rafalzawadzki" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.pdfmonkey.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/119303?v=4?s=100" width="100px;" alt="Simon Courtois" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Simon Courtois&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-simonc" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/alegria-solutions"&gt;&lt;img src="https://avatars.githubusercontent.com/u/124846022?v=4?s=100" width="100px;" alt="alegria-solutions" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;alegria-solutions&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-alegria-solutions" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/D-Rowe-FS"&gt;&lt;img src="https://avatars.githubusercontent.com/u/142934784?v=4?s=100" width="100px;" alt="D-Rowe-FS" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;D-Rowe-FS&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-D-Rowe-FS" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ChineseHamberger"&gt;&lt;img src="https://avatars.githubusercontent.com/u/101547635?v=4?s=100" width="100px;" alt="张晟杰" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;张晟杰&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-ChineseHamberger" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://codesign.rf.gd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72438085?v=4?s=100" width="100px;" alt="Ashot" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ashot&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-AshotZaqoyan" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/amrabuaza"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30035105?v=4?s=100" width="100px;" alt="Amr Abu Aza" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Amr Abu Aza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-amrabuaza" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://johng.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9030780?v=4?s=100" width="100px;" alt="John Goodliff" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;John Goodliff&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-jerboa88" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/DiwashDev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/182864159?v=4?s=100" width="100px;" alt="Diwash Dev" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Diwash Dev&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-DiwashDev" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.seven.io"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12965261?v=4?s=100" width="100px;" alt="André" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;André&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-matthiez" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/loudotdigital"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7611772?v=4?s=100" width="100px;" alt="Lou | Digital Marketing" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lou | Digital Marketing&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-loudotdigital" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/maarteNNNN"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14275291?v=4?s=100" width="100px;" alt="Maarten Coppens" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Maarten Coppens&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-maarteNNNN" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mahmuthamet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/90776946?v=4?s=100" width="100px;" alt="Mahmoud Hamed" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mahmoud Hamed&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mahmuthamet" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://dammaretz.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14098167?v=4?s=100" width="100px;" alt="Theo Dammaretz" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Theo Dammaretz&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Blightwidow" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/s31w4n"&gt;&lt;img src="https://avatars.githubusercontent.com/u/63353528?v=4?s=100" width="100px;" alt="s31w4n" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;s31w4n&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=s31w4n" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://github.com/activepieces/activepieces/commits?author=s31w4n" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-s31w4n" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://kallabot.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/94991678?v=4?s=100" width="100px;" alt="Abdul Rahman" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Abdul Rahman&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-abdulrahmanmajid" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/coat"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1661?v=4?s=100" width="100px;" alt="Kent Smith" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kent Smith&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-coat" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ArvindEnvoy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25014185?v=4?s=100" width="100px;" alt="Arvind Ramesh" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Arvind Ramesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=ArvindEnvoy" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/valentin-mourtialon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88686764?v=4?s=100" width="100px;" alt="valentin-mourtialon" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;valentin-mourtialon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-valentin-mourtialon" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/psgpsg16"&gt;&lt;img src="https://avatars.githubusercontent.com/u/188385621?v=4?s=100" width="100px;" alt="psgpsg16" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;psgpsg16&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-psgpsg16" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mariiawidrpay"&gt;&lt;img src="https://avatars.githubusercontent.com/u/110456120?v=4?s=100" width="100px;" alt="Mariia Shyn" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mariia Shyn&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mariiawidrpay" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/joshuaheslin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48037470?v=4?s=100" width="100px;" alt="Joshua Heslin" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Joshua Heslin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-joshuaheslin" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ahmad-swanblocks"&gt;&lt;img src="https://avatars.githubusercontent.com/u/165162455?v=4?s=100" width="100px;" alt="Ahmad" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ahmad&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-ahmad-swanblocks" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/danielpoonwj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17039704?v=4?s=100" width="100px;" alt="Daniel Poon" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Poon&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=danielpoonwj" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Kevinyu-alan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/198612963?v=4?s=100" width="100px;" alt="Kévin Yu" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kévin Yu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Kevinyu-alan" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/flex-yeongeun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/186537288?v=4?s=100" width="100px;" alt="노영은" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;노영은&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-flex-yeongeun" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/reemayoush"&gt;&lt;img src="https://avatars.githubusercontent.com/u/168414383?v=4?s=100" width="100px;" alt="reemayoush" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;reemayoush&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-reemayoush" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/briceflaceliere"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5811531?v=4?s=100" width="100px;" alt="Brice" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Brice&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#security-briceflaceliere" title="Security"&gt;🛡️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://mg-wunna.github.io/mg-wunna/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/63114419?v=4?s=100" width="100px;" alt="Mg Wunna" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Mg Wunna&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mg-wunna" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/harikrishnanum/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61736905?v=4?s=100" width="100px;" alt="Harikrishnan U M" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harikrishnan U M&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/issues?q=author%3Ahakrsh" title="Bug reports"&gt;🐛&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/perrine-pullicino-alan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/143406842?v=4?s=100" width="100px;" alt="perrine-pullicino-alan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;perrine-pullicino-alan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-perrine-pullicino-alan" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://kaovilai.pw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11228024?v=4?s=100" width="100px;" alt="Tiger Kaovilai" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tiger Kaovilai&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=kaovilai" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/CarefulGuru"&gt;&lt;img src="https://avatars.githubusercontent.com/u/141072854?v=4?s=100" width="100px;" alt="CarefulGuru" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;CarefulGuru&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-CarefulGuru" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AnkitSharmaOnGithub"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53289186?v=4?s=100" width="100px;" alt="Ankit Kumar Sharma" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ankit Kumar Sharma&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-AnkitSharmaOnGithub" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/nhnansari"&gt;&lt;img src="https://avatars.githubusercontent.com/u/116841234?v=4?s=100" width="100px;" alt="Naeem Hassan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Naeem Hassan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-nhnansari" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://timpetricola.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/674084?v=4?s=100" width="100px;" alt="Tim Petricola" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tim Petricola&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=TimPetricola" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/amaan-ai20"&gt;&lt;img src="https://avatars.githubusercontent.com/u/188329978?v=4?s=100" width="100px;" alt="Amaan" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Amaan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-amaan-ai20" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.marcllopartriera.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1257083?v=4?s=100" width="100px;" alt="Marc Llopart" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Marc Llopart&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mllopart" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/onyedikachi-david"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51977119?v=4?s=100" width="100px;" alt="David Anyatonwu" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;David Anyatonwu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-onyedikachi-david" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://huzef.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62795688?v=4?s=100" width="100px;" alt="neo773" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;neo773&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-neo773" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Daniel-Klippa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/207180643?v=4?s=100" width="100px;" alt="Daniel-Klippa" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel-Klippa&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=Daniel-Klippa" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/krushnarout"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129386740?v=4?s=100" width="100px;" alt="Krushna Kanta Rout" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Krushna Kanta Rout&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-krushnarout" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.snimesh.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12984120?v=4?s=100" width="100px;" alt="Nimesh Solanki" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nimesh Solanki&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=nish17" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/rimjhimyadav"&gt;&lt;img src="https://avatars.githubusercontent.com/u/187646079?v=4?s=100" width="100px;" alt="Rimjhim Yadav" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rimjhim Yadav&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-rimjhimyadav" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/gs03-dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/70076620?v=4?s=100" width="100px;" alt="gs03" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;gs03&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-gs03-dev" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Kunal-Darekar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/150500530?v=4?s=100" width="100px;" alt="Kunal Darekar" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Kunal Darekar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Kunal-Darekar" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Sanket6652"&gt;&lt;img src="https://avatars.githubusercontent.com/u/119039046?v=4?s=100" width="100px;" alt="Sanket6652" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sanket6652&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Sanket6652" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Ani-4x"&gt;&lt;img src="https://avatars.githubusercontent.com/u/174266491?v=4?s=100" width="100px;" alt="Animesh" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Animesh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Ani-4x" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://tarvent.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13419128?v=4?s=100" width="100px;" alt="Derek Johnson" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Derek Johnson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-DerekJDev" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/mamiefurax"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3955802?v=4?s=100" width="100px;" alt="MamieFurax" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;MamieFurax&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-mamiefurax" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/jadhavharshh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/182950168?v=4?s=100" width="100px;" alt="Harsh Jadhav" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Harsh Jadhav&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=jadhavharshh" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://twitter.com/lucaslima_souza"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1576846?v=4?s=100" width="100px;" alt="Lucas Lima de Souza" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Lucas Lima de Souza&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-lucaslimasouza" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/BenjaminAlan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42831606?v=4?s=100" width="100px;" alt="Benjamin Benouarka" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Benjamin Benouarka&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=BenjaminAlan" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://www.linkedin.com/in/chris-wu/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4491213?v=4?s=100" width="100px;" alt="Chris Wu" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Chris Wu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=cjwooo" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/prasanna2000-max"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61037314?v=4?s=100" width="100px;" alt="Prasanna R" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Prasanna R&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=prasanna2000-max" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/AdminCraftHD"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33310274?v=4?s=100" width="100px;" alt="AdminCraftHD" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;AdminCraftHD&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=AdminCraftHD" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://tumrabertworld.vercel.app/resume"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38305310?v=4?s=100" width="100px;" alt="Tanakit Phentun" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Tanakit Phentun&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=tumrabert" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/marapper"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1397054?v=4?s=100" width="100px;" alt="Sergey Bondar" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Sergey Bondar&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-marapper" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://yusufcirak.net"&gt;&lt;img src="https://avatars.githubusercontent.com/u/81169996?v=4?s=100" width="100px;" alt="Yusuf Çırak" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Yusuf Çırak&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-yusuf-cirak" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://ezhil.dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/103899034?v=4?s=100" width="100px;" alt="Ezhil Shanmugham" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ezhil Shanmugham&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-ezhil56x" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sunorains"&gt;&lt;img src="https://avatars.githubusercontent.com/u/211304820?v=4?s=100" width="100px;" alt="Anderson" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Anderson&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-sunorains" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/calladodan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7246416?v=4?s=100" width="100px;" alt="Daniel Callado" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Daniel Callado&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-calladodan" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/sparkybug"&gt;&lt;img src="https://avatars.githubusercontent.com/u/52334088?v=4?s=100" width="100px;" alt="Ukaegbu Osinachi" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ukaegbu Osinachi&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-sparkybug" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://mavrick-portfolio.vercel.app/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/146999057?v=4?s=100" width="100px;" alt="Rishi Mondal" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Rishi Mondal&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-MAVRICK-1" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Cloudieunnie"&gt;&lt;img src="https://avatars.githubusercontent.com/u/178718590?v=4?s=100" width="100px;" alt="Cloudieunnie" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Cloudieunnie&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=Cloudieunnie" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/balwant1707"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17769387?v=4?s=100" width="100px;" alt="Balwant Singh" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Balwant Singh&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-balwant1707" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/ravikiranvm"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36404296?v=4?s=100" width="100px;" alt="Ravi Kiran Vallamkonda" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Ravi Kiran Vallamkonda&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=ravikiranvm" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/owuzo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/173556464?v=4?s=100" width="100px;" alt="Owuzo Joy" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Owuzo Joy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-owuzo" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/helenedurand-smet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/206527847?v=4?s=100" width="100px;" alt="helenedurand-smet" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;helenedurand-smet&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://github.com/activepieces/activepieces/commits?author=helenedurand-smet" title="Code"&gt;💻&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/nuvex-dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/181783827?v=4?s=100" width="100px;" alt="Nuvex" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Nuvex&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-nuvex-dev" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/Zebi15"&gt;&lt;img src="https://avatars.githubusercontent.com/u/80625145?v=4?s=100" width="100px;" alt="Apostol Eusebiu" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Apostol Eusebiu&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-Zebi15" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://github.com/fortunamide"&gt;&lt;img src="https://avatars.githubusercontent.com/u/122938302?v=4?s=100" width="100px;" alt="Fortunate" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Fortunate&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-fortunamide" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="https://jaachiwrites.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/173014495?v=4?s=100" width="100px;" alt="Jaachịmmá Anyatọnwụ" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Jaachịmmá Anyatọnwụ&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-thejaachi" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center" valign="top" width="14.28%"&gt;&lt;a href="http://luizmainart.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/55499897?v=4?s=100" width="100px;" alt="Luiz D. M. Mainart" /&gt;&lt;br /&gt;&lt;sub&gt;&lt;b&gt;Luiz D. M. Mainart&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/activepieces/activepieces/main/#plugin-LuizDMM" title="Plugin/utility libraries"&gt;🔌&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://allcontributors.org"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>chiphuyen/aie-book</title>
      <link>https://github.com/chiphuyen/aie-book</link>
      <description>&lt;p&gt;[WIP] Resources for AI engineers. Also contains supporting materials for the book AI Engineering (Chip Huyen, 2025)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;AI Engineering book and other resources&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;This repo will be updated with more resources in the next few weeks.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/#about-the-book"&gt;About the book AI Engineering&lt;/a&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/ToC.md"&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/chapter-summaries.md"&gt;Chapter summaries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/study-notes.md"&gt;Study notes&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/resources.md"&gt;AI engineering resources&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/prompt-examples.md"&gt;Prompt examples&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/case-studies.md"&gt;Case studies&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/misalignment.md"&gt;Misalignment AI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/appendix.md"&gt;Appendix&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Fun tools:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/chiphuyen/aie-book/main/scripts/ai-heatmap.ipynb"&gt;ChatGPT and Claude conversation heatmap generator&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;And more ...&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;About the book&lt;/h2&gt; 
&lt;p&gt;The availability of foundation models has transformed AI from a specialized discipline into a powerful development tool everyone can use. This book covers the end-to-end process of adapting foundation models to solve real-world problems, encompassing tried-and-true techniques from other engineering fields and techniques emerging with foundation models.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://amzn.to/49j1cGS"&gt;&lt;img src="https://raw.githubusercontent.com/chiphuyen/aie-book/main/assets/aie-cover.png" width="250" /&gt;&lt;/a&gt;&lt;a href="https://amzn.to/49j1cGS"&gt;&lt;img src="https://raw.githubusercontent.com/chiphuyen/aie-book/main/assets/aie-cover-back.png" width="250" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The book is available on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://amzn.to/49j1cGS"&gt;Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://oreillymedia.pxf.io/c/5719111/2146021/15173"&gt;O'Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amzn.to/3Vq2ryu"&gt;Kindle&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;and most places where technical books are sold.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;This is NOT a tutorial book, so it doesn't have a lot of code snippets.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;What this book is about&lt;/h2&gt; 
&lt;p&gt;This book provides a framework for adapting foundation models, which include both large language models (LLMs) and large multimodal models (LMMs), to specific applications. It not only outlines various solutions for building an AI application but also raises questions you can ask to evaluate the best solution for your needs. Here are just some of the many questions that this book can help you answer:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Should I build this AI application?&lt;/li&gt; 
 &lt;li&gt;How do I evaluate my application? Can I use AI to evaluate AI outputs?&lt;/li&gt; 
 &lt;li&gt;What causes hallucinations? How do I detect and mitigate hallucinations?&lt;/li&gt; 
 &lt;li&gt;What are the best practices for prompt engineering?&lt;/li&gt; 
 &lt;li&gt;Why does RAG work? What are the strategies for doing RAG?&lt;/li&gt; 
 &lt;li&gt;What’s an agent? How do I build and evaluate an agent?&lt;/li&gt; 
 &lt;li&gt;When to finetune a model? When not to finetune a model?&lt;/li&gt; 
 &lt;li&gt;How much data do I need? How do I validate the quality of my data?&lt;/li&gt; 
 &lt;li&gt;How do I make my model faster, cheaper, and secure?&lt;/li&gt; 
 &lt;li&gt;How do I create a feedback loop to improve my application continually?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The book will also help you navigate the overwhelming AI landscape: types of models, evaluation benchmarks, and a seemingly infinite number of use cases and application patterns.&lt;/p&gt; 
&lt;p&gt;The content in this book is illustrated using actual case studies, many of which I’ve worked on, backed by ample references and extensively reviewed by experts from a wide range of backgrounds. Even though the book took two years to write, it draws from my experience working with language models and ML systems from the last decade.&lt;/p&gt; 
&lt;p&gt;Like my previous book, &lt;em&gt;&lt;a href="https://amzn.to/4fXVZH2"&gt;Designing Machine Learning Systems (DMLS)&lt;/a&gt;&lt;/em&gt;, this book focuses on the fundamentals of AI engineering instead of any specific tool or API. Tools become outdated quickly, but fundamentals should last longer.&lt;/p&gt; 
&lt;h3&gt;Reading &lt;em&gt;AI Engineering&lt;/em&gt; (AIE) with &lt;em&gt;Designing Machine Learning Systems&lt;/em&gt; (DMLS)&lt;/h3&gt; 
&lt;p&gt;AIE can be a companion to DMLS. DMLS focuses on building applications on top of traditional ML models, which involves more tabular data annotations, feature engineering, and model training. AIE focuses on building applications on top of foundation models, which involves more prompt engineering, context construction, and parameter-efficient finetuning. Both books are self-contained and modular, so you can read either book independently.&lt;/p&gt; 
&lt;p&gt;Since foundation models are ML models, some concepts are relevant to working with both. If a topic is relevant to AIE but has been discussed extensively in DMLS, it’ll still be covered in this book, but to a lesser extent, with pointers to relevant resources.&lt;/p&gt; 
&lt;p&gt;Note that many topics are covered in DMLS but not in AIE, and vice versa. The first chapter of this book also covers the differences between traditional ML engineering and AI engineering.&lt;/p&gt; 
&lt;p&gt;A real-world system often involves both traditional ML models and foundation models, so knowledge about working with both is often necessary.&lt;/p&gt; 
&lt;h2&gt;Who this book is for&lt;/h2&gt; 
&lt;p&gt;This book is for anyone who wants to leverage foundation models to solve real-world problems. This is a technical book, so the language of this book is geared towards technical roles, including AI engineers, ML engineers, data scientists, engineering managers, and technical product managers. This book is for you if you can relate to one of the following scenarios:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You’re building or optimizing an AI application, whether you’re starting from scratch or looking to move beyond the demo phase into a production-ready stage. You may also be facing issues like hallucinations, security, latency, or costs, and need targeted solutions.&lt;/li&gt; 
 &lt;li&gt;You want to streamline your team’s AI development process, making it more systematic, faster, and reliable.&lt;/li&gt; 
 &lt;li&gt;You want to understand how your organization can leverage foundation models to improve the business’s bottom line and how to build a team to do so.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also benefit from the book if you belong to one of the following groups:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tool developers who want to identify underserved areas in AI engineering to position your products in the ecosystem.&lt;/li&gt; 
 &lt;li&gt;Researchers who want to understand better AI use cases.&lt;/li&gt; 
 &lt;li&gt;Job candidates seeking clarity on the skills needed to pursue a career as an AI engineer.&lt;/li&gt; 
 &lt;li&gt;Anyone wanting to better understand AI's capabilities and limitations, and how it might affect different roles.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;I love getting to the bottom of things, so some sections dive a bit deeper into the technical side. While many early readers like the detail, I know it might not be for everyone. I’ll give you a heads-up before things get too technical. Feel free to skip ahead if it feels a little too in the weeds!&lt;/p&gt; 
&lt;h2&gt;Reviews&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"This book offers a comprehensive, well-structured guide to the essential aspects of building generative AI systems. A must-read for any professional looking to scale AI across the enterprise."&lt;/em&gt; - Vittorio Cretella, former global CIO at P&amp;amp;G and Mars&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"Chip Huyen gets generative AI. She is a remarkable teacher and writer whose work has been instrumental in helping teams bring AI into production. Drawing on her deep expertise, AI Engineering is a comprehensive and holistic guide to building generative AI applications in production."&lt;/em&gt; - Luke Metz, co-creator of ChatGPT, ex-research manager @ OpenAI&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"Every AI engineer building real-world applications should read this book. It’s a vital guide to end-to-end AI system design, from model development and evaluation to large-scale deployment and operation."&lt;/em&gt; - Andrei Lopatenko, Director Search and AI, Neuron7&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"This book serves as an essential guide for building AI products that can scale. Unlike other books that focus on tools or current trends that are constantly changing, Chip delivers timeless foundational knowledge. Whether you're a product manager or an engineer, this book effectively bridges the collaboration gap between cross-functional teams, making it a must-read for anyone involved in AI development."&lt;/em&gt; - Aileen Bui, AI Product Operations Manager, Google&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"This is the definitive segue into AI Engineering from one of the greats of ML Engineering! Chip has seen through successful projects and careers at every stage of a company and for the first time ever condensed her expertise for new AI Engineers entering the field."&lt;/em&gt; - swyx, Curator, AI.Engineer&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"AI Engineering is a practical guide that provides the most up-to-date information on AI development, making it approachable for novice and expert leaders alike. This book is an essential resource for anyone looking to build robust and scalable AI systems."&lt;/em&gt; - Vicki Reyzelman, Chief AI Solutions Architect, Mave Sparks&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"AI Engineering is a comprehensive guide that serves as an essential reference for both understanding and implementing AI systems in practice."&lt;/em&gt; - Han Lee, Director - Data Science, Moody's.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;"AI Engineering is an essential guide for anyone building software with Generative AI! It demystifies the technology, highlights the importance of evaluation, and shares what should be done to achieve quality before starting with costly fine-tuning."&lt;/em&gt; - Rafal Kawala, Senior AI Engineering Director, 16 years of experience working in a Fortune 500 company&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See what people are talking about the book on Twitter &lt;a href="https://twitter.com/aisysbooks/likes"&gt;@aisysbooks&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;This book would've taken a lot longer to write and missed many important topics if it wasn't for so many wonderful people who helped me through the process.&lt;/p&gt; 
&lt;p&gt;Because the timeline for the project was tight—two years for a 150,000-word book that covers so much ground—I'm grateful to the technical reviewers who put aside their precious time to review this book so quickly.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://x.com/luke_metz"&gt;Luke Metz&lt;/a&gt; is an amazing soundboard who checked my assumptions and prevented me from going down the wrong path. &lt;a href="https://www.linkedin.com/in/hanchunglee/"&gt;Han-chung Lee&lt;/a&gt;, always up to date with the latest AI news and community development, pointed me toward resources that I missed. Luke and Han were the first to review my drafts before I sent them to the next round of technical reviewers, and I'm forever indebted to them for tolerating my follies and mistakes.&lt;/p&gt; 
&lt;p&gt;Having led AI innovation at Fortune 500 companies, &lt;a href="https://www.linkedin.com/in/vittorio-cretella/"&gt;Vittorio Cretella&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/lopatenko/"&gt;Andrei Lopatenko&lt;/a&gt; provided invaluable feedback that combined deep technical expertise with executive insights. &lt;a href="https://www.linkedin.com/in/vickireyzelman/"&gt;Vicki Reyzelman&lt;/a&gt; helped me ground my content and keep it relevant for readers with a software engineering background.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://eugeneyan.com/"&gt;Eugene Yan&lt;/a&gt;, a dear friend and amazing applied scientist, provided me with technical and emotional support. Shawn Wang (&lt;a href="https://x.com/swyx"&gt;swyx&lt;/a&gt;), provided an important vibe check that helped me feel more confident about the book. &lt;a href="https://x.com/bhutanisanyam1"&gt;Sanyam Bhutani&lt;/a&gt; is one of the best learners and most humble souls I know, who not only gave thoughtful written feedback but also recorded videos to explain his feedback.&lt;/p&gt; 
&lt;p&gt;Kyle Krannen is a star deep learning lead who interviewed his colleagues and shared with me an amazing writeup about their finetuning process, which guided the finetuning chapter. &lt;a href="https://x.com/marksaroufim"&gt;Mark Saroufim&lt;/a&gt;, an inquisitive mind who always has his pulse on the most interesting problems, introduced me to great resources on efficiency. Both Kyle and Mark's feedback was critical in writing Chapters 7 and 9.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.linkedin.com/in/kittipat-bot-kampa-1b1965/"&gt;Kittipat "Bot" Kampa&lt;/a&gt;, on top of answering my many questions, shared with me a detailed visualization of how he thinks about AI platform. I appreciate &lt;a href="https://www.linkedin.com/in/denyslinkov/"&gt;Denys Linkov&lt;/a&gt;'s systematic approach to evaluation and platform development. &lt;a href="https://www.linkedin.com/in/chetantekur/"&gt;Chetan Tekur&lt;/a&gt; gave great examples that helped me structure AI application patterns. I'd also like to thank &lt;a href="https://www.linkedin.com/in/findalexli/"&gt;Alex (Shengzhi Li) Li&lt;/a&gt; and &lt;a href="https://www.linkedin.com/in/hienluu/"&gt;Hien Luu&lt;/a&gt; for their thoughtful feedback on my draft on AI architecture.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.linkedin.com/in/aileenbui/"&gt;Aileen Bui&lt;/a&gt; is a treasure who shared unique feedback and examples from a product manager's perspective. Thanks &lt;a href="https://www.linkedin.com/in/todor-markov-4aa38a67/"&gt;Todor Markov&lt;/a&gt; for the actionable advice on the RAG and Agents chapter. Thanks &lt;a href="https://www.linkedin.com/in/tal-kachman/"&gt;Tal Kachman&lt;/a&gt; for jumping in at the last minute to push the finetuning chapter over the finish line.&lt;/p&gt; 
&lt;p&gt;There are so many wonderful people whose company and conversations gave me ideas that guide the content of this book. I tried my best to include the names of everyone who has helped me here, but due to the inherent faultiness of human memory, I undoubtedly neglected to mention many. If I forgot to include your name, please know that it wasn't because I don't appreciate your contribution, and please kindly remind me so that I can rectify as soon as possible!&lt;/p&gt; 
&lt;p&gt;Andrew Francis, Anish Nag, &lt;a href="https://www.linkedin.com/in/wgalczak/"&gt;Anthony Galczak&lt;/a&gt;, &lt;a href="https://x.com/abacaj"&gt;Anton Bacaj&lt;/a&gt;, Balázs Galambosi, Charles Frye, Charles Packer, Chris Brousseau, Eric Hartford, Goku Mohandas, Hamel Husain, Harpreet Sahota, Hassan El Mghari, Huu Nguyen, Jeremy Howard, Jesse Silver, John Cook, &lt;a href="https://www.linkedin.com/in/juan-pablo-bottaro/"&gt;Juan Pablo Bottaro&lt;/a&gt;, Kyle Gallatin, Lance Martin, Lucio Dery, Matt Ross, Maxime Labonne, Miles Brundage, Nathan Lambert, Omar Khattab, &lt;a href="https://www.linkedin.com/in/xphongvn/"&gt;Phong Nguyen&lt;/a&gt;, Purnendu Mukherjee, Sam Reiswig, Sebastian Raschka, Shahul ES, Sharif Shameem, Soumith Chintala, Teknium, Tim Dettmers, Undi5, Val Andrei Fajardo, Vern Liang, Victor Sanh, Wing Lian, Xiquan Cui, Ying Sheng, and Kristofer.&lt;/p&gt; 
&lt;p&gt;I'd like to thank all early readers who have also reached out with feedback. Douglas Bailley is a super reader who shared so much thoughtful feedback. Nutan Sahoo for suggesting an elegant way to explain perplexity.&lt;/p&gt; 
&lt;p&gt;I learned so much from the online discussions with so many. Thanks to everyone who's ever answered my questions, commented on my posts, or sent me an email with your thoughts.&lt;/p&gt; 
&lt;p&gt;Of course, the book wouldn't have been possible without the team at O'Reilly, especially my development editors (Melissa Potter, Corbin Collins, Jill Leonard) and my production editors (Kristen Brown and Elizabeth Kelly). Liz Wheeler is the most discerning editor I've ever worked with. Nicole Butterfield is a force who oversaw this book from an idea to a final product.&lt;/p&gt; 
&lt;p&gt;This book, after all, is an accumulation of invaluable lessons I learned throughout my career. I owe these lessons to my extremely competent and patient coworkers and former coworkers. Every person I've worked with has taught me something new about bringing ML into the world.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;Chip Huyen, &lt;em&gt;AI Engineering&lt;/em&gt;. O'Reilly Media, 2025.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@book{aiebook2025,  
    address = {USA},  
    author = {Chip Huyen},  
    isbn = {978-1801819312},   
    publisher = {O'Reilly Media},  
    title = {{AI Engineering}},  
    year = {2025}  
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>dockur/windows</title>
      <link>https://github.com/dockur/windows</link>
      <description>&lt;p&gt;Windows inside a Docker container.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Windows&lt;br /&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://github.com/dockur/windows"&gt;&lt;img src="https://github.com/dockur/windows/raw/master/.github/logo.png" title="Logo" style="max-width:100%;" width="128" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;div align="center"&gt; 
  &lt;p&gt;&lt;a href="https://github.com/dockur/windows/"&gt;&lt;img src="https://github.com/dockur/windows/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dockurr/windows/tags"&gt;&lt;img src="https://img.shields.io/docker/v/dockurr/windows/latest?arch=amd64&amp;amp;sort=semver&amp;amp;color=066da5" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dockurr/windows/tags"&gt;&lt;img src="https://img.shields.io/docker/image-size/dockurr/windows/latest?color=066da5&amp;amp;label=size" alt="Size" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dockur/windows/pkgs/container/windows"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fipitio.github.io%2Fbackage%2Fdockur%2Fwindows%2Fwindows.json&amp;amp;query=%24.downloads&amp;amp;logo=github&amp;amp;style=flat&amp;amp;color=066da5&amp;amp;label=pulls" alt="Package" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dockurr/windows/"&gt;&lt;img src="https://img.shields.io/docker/pulls/dockurr/windows.svg?style=flat&amp;amp;label=pulls&amp;amp;logo=docker" alt="Pulls" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;/div&gt;&lt;/h1&gt; 
&lt;p&gt;Windows inside a Docker container.&lt;/p&gt; 
&lt;h2&gt;Features ✨&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;ISO downloader&lt;/li&gt; 
 &lt;li&gt;KVM acceleration&lt;/li&gt; 
 &lt;li&gt;Web-based viewer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Video 📺&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=xhGYobuG508"&gt;&lt;img src="https://img.youtube.com/vi/xhGYobuG508/0.jpg" alt="Youtube" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage 🐳&lt;/h2&gt; 
&lt;h5&gt;Via Docker Compose:&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  windows:
    image: dockurr/windows
    container_name: windows
    environment:
      VERSION: "11"
    devices:
      - /dev/kvm
      - /dev/net/tun
    cap_add:
      - NET_ADMIN
    ports:
      - 8006:8006
      - 3389:3389/tcp
      - 3389:3389/udp
    volumes:
      - ./windows:/storage
    restart: always
    stop_grace_period: 2m
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Via Docker CLI:&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -it --rm --name windows -p 8006:8006 --device=/dev/kvm --device=/dev/net/tun --cap-add NET_ADMIN -v "${PWD:-.}/windows:/storage" --stop-timeout 120 dockurr/windows
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Via Kubernetes:&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl apply -f https://raw.githubusercontent.com/dockur/windows/refs/heads/master/kubernetes.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Via Github Codespaces:&lt;/h5&gt; 
&lt;p&gt;&lt;a href="https://codespaces.new/dockur/windows"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ 💬&lt;/h2&gt; 
&lt;h3&gt;How do I use it?&lt;/h3&gt; 
&lt;p&gt;Very simple! These are the steps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Start the container and connect to &lt;a href="http://127.0.0.1:8006/"&gt;port 8006&lt;/a&gt; using your web browser.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Sit back and relax while the magic happens, the whole installation will be performed fully automatic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once you see the desktop, your Windows installation is ready for use.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Enjoy your brand new machine, and don't forget to star this repo!&lt;/p&gt; 
&lt;h3&gt;How do I select the Windows version?&lt;/h3&gt; 
&lt;p&gt;By default, Windows 11 Pro will be installed. But you can add the &lt;code&gt;VERSION&lt;/code&gt; environment variable to your compose file, in order to specify an alternative Windows version to be downloaded:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  VERSION: "11"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Select from the values below:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Value&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Size&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;11&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 11 Pro&lt;/td&gt; 
   &lt;td&gt;5.4 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;11l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 11 LTSC&lt;/td&gt; 
   &lt;td&gt;4.7 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;11e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 11 Enterprise&lt;/td&gt; 
   &lt;td&gt;4.0 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 10 Pro&lt;/td&gt; 
   &lt;td&gt;5.7 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;10l&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 10 LTSC&lt;/td&gt; 
   &lt;td&gt;4.6 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;10e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 10 Enterprise&lt;/td&gt; 
   &lt;td&gt;5.2 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;8e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 8.1 Enterprise&lt;/td&gt; 
   &lt;td&gt;3.7 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;7u&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 7 Ultimate&lt;/td&gt; 
   &lt;td&gt;3.1 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;vu&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Vista Ultimate&lt;/td&gt; 
   &lt;td&gt;3.0 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;xp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows XP Professional&lt;/td&gt; 
   &lt;td&gt;0.6 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2k&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows 2000 Professional&lt;/td&gt; 
   &lt;td&gt;0.4 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2025&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Server 2025&lt;/td&gt; 
   &lt;td&gt;5.6 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2022&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Server 2022&lt;/td&gt; 
   &lt;td&gt;4.7 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2019&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Server 2019&lt;/td&gt; 
   &lt;td&gt;5.3 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2016&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Server 2016&lt;/td&gt; 
   &lt;td&gt;6.5 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2012&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Server 2012&lt;/td&gt; 
   &lt;td&gt;4.3 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2008&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Server 2008&lt;/td&gt; 
   &lt;td&gt;3.0 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;2003&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Windows Server 2003&lt;/td&gt; 
   &lt;td&gt;0.6 GB&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] To install ARM64 versions of Windows use &lt;a href="https://github.com/dockur/windows-arm/"&gt;dockur/windows-arm&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;How do I change the storage location?&lt;/h3&gt; 
&lt;p&gt;To change the storage location, include the following bind mount in your compose file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;volumes:
  - ./windows:/storage
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace the example path &lt;code&gt;./windows&lt;/code&gt; with the desired storage folder or named volume.&lt;/p&gt; 
&lt;h3&gt;How do I change the size of the disk?&lt;/h3&gt; 
&lt;p&gt;To expand the default size of 64 GB, add the &lt;code&gt;DISK_SIZE&lt;/code&gt; setting to your compose file and set it to your preferred capacity:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  DISK_SIZE: "256G"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] This can also be used to resize the existing disk to a larger capacity without any data loss.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;How do I share files with the host?&lt;/h3&gt; 
&lt;p&gt;Open 'File Explorer' and click on the 'Network' section, you will see a computer called &lt;code&gt;host.lan&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Double-click it and it will show a folder called &lt;code&gt;Data&lt;/code&gt;, which can be bound to any folder on your host via the compose file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;volumes:
  -  ./example:/data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example folder &lt;code&gt;./example&lt;/code&gt; will be available as &lt;code&gt; \\host.lan\Data&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You can map this path to a drive letter in Windows, for easier access.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;How do I change the amount of CPU or RAM?&lt;/h3&gt; 
&lt;p&gt;By default, the container will be allowed to use a maximum of 2 CPU cores and 4 GB of RAM.&lt;/p&gt; 
&lt;p&gt;If you want to adjust this, you can specify the desired amount using the following environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  RAM_SIZE: "8G"
  CPU_CORES: "4"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I configure the username and password?&lt;/h3&gt; 
&lt;p&gt;By default, a user called &lt;code&gt;Docker&lt;/code&gt; is created during installation and its password is &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to use different credentials, you can configure them in your compose file (only before installation):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  USERNAME: "bill"
  PASSWORD: "gates"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I select the Windows language?&lt;/h3&gt; 
&lt;p&gt;By default, the English version of Windows will be downloaded.&lt;/p&gt; 
&lt;p&gt;But before installation you can add the &lt;code&gt;LANGUAGE&lt;/code&gt; environment variable to your compose file, in order to specify an alternative language:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  LANGUAGE: "French"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can choose between: 🇦🇪 Arabic, 🇧🇬 Bulgarian, 🇨🇳 Chinese, 🇭🇷 Croatian, 🇨🇿 Czech, 🇩🇰 Danish, 🇳🇱 Dutch, 🇬🇧 English, 🇪🇪 Estonian, 🇫🇮 Finnish, 🇫🇷 French, 🇩🇪 German, 🇬🇷 Greek, 🇮🇱 Hebrew, 🇭🇺 Hungarian, 🇮🇹 Italian, 🇯🇵 Japanese, 🇰🇷 Korean, 🇱🇻 Latvian, 🇱🇹 Lithuanian, 🇳🇴 Norwegian, 🇵🇱 Polish, 🇵🇹 Portuguese, 🇷🇴 Romanian, 🇷🇺 Russian, 🇷🇸 Serbian, 🇸🇰 Slovak, 🇸🇮 Slovenian, 🇪🇸 Spanish, 🇸🇪 Swedish, 🇹🇭 Thai, 🇹🇷 Turkish and 🇺🇦 Ukrainian.&lt;/p&gt; 
&lt;h3&gt;How do I select the keyboard layout?&lt;/h3&gt; 
&lt;p&gt;If you want to use a keyboard layout or locale that is not the default for your selected language, you can add &lt;code&gt;KEYBOARD&lt;/code&gt; and &lt;code&gt;REGION&lt;/code&gt; variables like this (before installation):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  REGION: "en-US"
  KEYBOARD: "en-US"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I select the edition?&lt;/h3&gt; 
&lt;p&gt;Windows Server offers a minimalistic Core edition without a GUI. To select those non-standard editions, you can add a &lt;code&gt;EDITION&lt;/code&gt; variable like this (before installation):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  EDITION: "core"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I install a custom image?&lt;/h3&gt; 
&lt;p&gt;In order to download an unsupported ISO image, specify its URL in the &lt;code&gt;VERSION&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  VERSION: "https://example.com/win.iso"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can also skip the download and use a local file instead, by binding it in your compose file in this way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;volumes:
  - ./example.iso:/boot.iso
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace the example path &lt;code&gt;./example.iso&lt;/code&gt; with the filename of your desired ISO file. The value of &lt;code&gt;VERSION&lt;/code&gt; will be ignored in this case.&lt;/p&gt; 
&lt;h3&gt;How do I run a script after installation?&lt;/h3&gt; 
&lt;p&gt;To run your own script after installation, you can create a file called &lt;code&gt;install.bat&lt;/code&gt; and place it in a folder together with any additional files it needs (software to be installed for example).&lt;/p&gt; 
&lt;p&gt;Then bind that folder in your compose file like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;volumes:
  -  ./example:/oem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example folder &lt;code&gt;./example&lt;/code&gt; will be copied to &lt;code&gt;C:\OEM&lt;/code&gt; and the containing &lt;code&gt;install.bat&lt;/code&gt; will be executed during the last step of the automatic installation.&lt;/p&gt; 
&lt;h3&gt;How do I perform a manual installation?&lt;/h3&gt; 
&lt;p&gt;It's recommended to stick to the automatic installation, as it adjusts various settings to prevent common issues when running Windows inside a virtual environment.&lt;/p&gt; 
&lt;p&gt;However, if you insist on performing the installation manually at your own risk, add the following environment variable to your compose file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  MANUAL: "Y"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I connect using RDP?&lt;/h3&gt; 
&lt;p&gt;The web-viewer is mainly meant to be used during installation, as its picture quality is low, and it has no audio or clipboard for example.&lt;/p&gt; 
&lt;p&gt;So for a better experience you can connect using any Microsoft Remote Desktop client to the IP of the container, using the username &lt;code&gt;Docker&lt;/code&gt; and password &lt;code&gt;admin&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There is a RDP client for &lt;a href="https://play.google.com/store/apps/details?id=com.microsoft.rdc.androidx"&gt;Android&lt;/a&gt; available from the Play Store and one for &lt;a href="https://apps.apple.com/nl/app/microsoft-remote-desktop/id714464092?l=en-GB"&gt;iOS&lt;/a&gt; in the Apple Store. For Linux you can use &lt;a href="https://www.freerdp.com/"&gt;FreeRDP&lt;/a&gt; and on Windows just type &lt;code&gt;mstsc&lt;/code&gt; in the search box.&lt;/p&gt; 
&lt;h3&gt;How do I assign an individual IP address to the container?&lt;/h3&gt; 
&lt;p&gt;By default, the container uses bridge networking, which shares the IP address with the host.&lt;/p&gt; 
&lt;p&gt;If you want to assign an individual IP address to the container, you can create a macvlan network as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker network create -d macvlan \
    --subnet=192.168.0.0/24 \
    --gateway=192.168.0.1 \
    --ip-range=192.168.0.100/28 \
    -o parent=eth0 vlan
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be sure to modify these values to match your local subnet.&lt;/p&gt; 
&lt;p&gt;Once you have created the network, change your compose file to look as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  windows:
    container_name: windows
    ..&amp;lt;snip&amp;gt;..
    networks:
      vlan:
        ipv4_address: 192.168.0.100

networks:
  vlan:
    external: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An added benefit of this approach is that you won't have to perform any port mapping anymore, since all ports will be exposed by default.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; This IP address won't be accessible from the Docker host due to the design of macvlan, which doesn't permit communication between the two. If this is a concern, you need to create a &lt;a href="https://blog.oddbit.com/post/2018-03-12-using-docker-macvlan-networks/#host-access"&gt;second macvlan&lt;/a&gt; as a workaround.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;How can Windows acquire an IP address from my router?&lt;/h3&gt; 
&lt;p&gt;After configuring the container for &lt;a href="https://raw.githubusercontent.com/dockur/windows/master/#how-do-i-assign-an-individual-ip-address-to-the-container"&gt;macvlan&lt;/a&gt;, it is possible for Windows to become part of your home network by requesting an IP from your router, just like a real PC.&lt;/p&gt; 
&lt;p&gt;To enable this mode, in which the container and Windows will have separate IP addresses, add the following lines to your compose file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  DHCP: "Y"
devices:
  - /dev/vhost-net
device_cgroup_rules:
  - 'c *:* rwm'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I add multiple disks?&lt;/h3&gt; 
&lt;p&gt;To create additional disks, modify your compose file like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  DISK2_SIZE: "32G"
  DISK3_SIZE: "64G"
volumes:
  - ./example2:/storage2
  - ./example3:/storage3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How do I pass-through a disk?&lt;/h3&gt; 
&lt;p&gt;It is possible to pass-through disk devices or partitions directly by adding them to your compose file in this way:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;devices:
  - /dev/sdb:/disk1
  - /dev/sdc1:/disk2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;code&gt;/disk1&lt;/code&gt; if you want it to become your main drive (which will be formatted during installation), and use &lt;code&gt;/disk2&lt;/code&gt; and higher to add them as secondary drives (which will stay untouched).&lt;/p&gt; 
&lt;h3&gt;How do I pass-through a USB device?&lt;/h3&gt; 
&lt;p&gt;To pass-through a USB device, first lookup its vendor and product id via the &lt;code&gt;lsusb&lt;/code&gt; command, then add them to your compose file like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;environment:
  ARGUMENTS: "-device usb-host,vendorid=0x1234,productid=0x1234"
devices:
  - /dev/bus/usb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the device is a USB disk drive, please wait until after the installation is fully completed before connecting it. Otherwise the installation may fail, as the order of the disks can get rearranged.&lt;/p&gt; 
&lt;h3&gt;How do I verify if my system supports KVM?&lt;/h3&gt; 
&lt;p&gt;First check if your software is compatible using this chart:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Product&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Win11&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Win10&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;macOS&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker CLI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker Desktop&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Podman CLI&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Podman Desktop&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;After that you can run the following commands in Linux to check your system:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt install cpu-checker
sudo kvm-ok
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you receive an error from &lt;code&gt;kvm-ok&lt;/code&gt; indicating that KVM cannot be used, please check whether:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;the virtualization extensions (&lt;code&gt;Intel VT-x&lt;/code&gt; or &lt;code&gt;AMD SVM&lt;/code&gt;) are enabled in your BIOS.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;you enabled "nested virtualization" if you are running the container inside a virtual machine.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;you are not using a cloud provider, as most of them do not allow nested virtualization for their VPS's.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you did not receive any error from &lt;code&gt;kvm-ok&lt;/code&gt; but the container still complains about a missing KVM device, it could help to add &lt;code&gt;privileged: true&lt;/code&gt; to your compose file (or &lt;code&gt;sudo&lt;/code&gt; to your &lt;code&gt;docker&lt;/code&gt; command) to rule out any permission issue.&lt;/p&gt; 
&lt;h3&gt;How do I run macOS in a container?&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://github.com/dockur/macos"&gt;dockur/macos&lt;/a&gt; for that. It shares many of the same features, except for the automatic installation.&lt;/p&gt; 
&lt;h3&gt;How do I run a Linux desktop in a container?&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://github.com/qemus/qemu"&gt;qemus/qemu&lt;/a&gt; in that case.&lt;/p&gt; 
&lt;h3&gt;Is this project legal?&lt;/h3&gt; 
&lt;p&gt;Yes, this project contains only open-source code and does not distribute any copyrighted material. Any product keys found in the code are just generic placeholders provided by Microsoft for trial purposes. So under all applicable laws, this project will be considered legal.&lt;/p&gt; 
&lt;h2&gt;Disclaimer ⚖️&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;The product names, logos, brands, and other trademarks referred to within this project are the property of their respective trademark holders. This project is not affiliated, sponsored, or endorsed by Microsoft Corporation.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HKUDS/DeepCode</title>
      <link>https://github.com/HKUDS/DeepCode</link>
      <description>&lt;p&gt;"DeepCode: Open Agentic Coding (Paper2Code &amp; Text2Web &amp; Text2Backend)"&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;table style="border: none; margin: 0 auto; padding: 0; border-collapse: collapse;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" style="vertical-align: middle; padding: 10px; border: none; width: 250px;"&gt; &lt;img src="https://raw.githubusercontent.com/HKUDS/DeepCode/main/assets/logo.png" alt="DeepCode Logo" width="200" style="margin: 0; padding: 0; display: block;" /&gt; &lt;/td&gt; 
    &lt;td align="left" style="vertical-align: middle; padding: 10px 0 10px 30px; border: none;"&gt; &lt;pre style="font-family: 'Courier New', monospace; font-size: 16px; color: #0EA5E9; margin: 0; padding: 0; text-shadow: 0 0 10px #0EA5E9, 0 0 20px rgba(14,165,233,0.5); line-height: 1.2; transform: skew(-1deg, 0deg); display: block;"&gt;    ██████╗ ███████╗███████╗██████╗  ██████╗ ██████╗ ██████╗ ███████╗
    ██╔══██╗██╔════╝██╔════╝██╔══██╗██╔════╝██╔═══██╗██╔══██╗██╔════╝
    ██║  ██║█████╗  █████╗  ██████╔╝██║     ██║   ██║██║  ██║█████╗
    ██║  ██║██╔══╝  ██╔══╝  ██╔═══╝ ██║     ██║   ██║██║  ██║██╔══╝
    ██████╔╝███████╗███████╗██║     ╚██████╗╚██████╔╝██████╔╝███████╗
    ╚═════╝ ╚══════╝╚══════╝╚═╝      ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝&lt;/pre&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://trendshift.io/repositories/14665" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14665" alt="HKUDS%2FDeepCode | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;!-- &lt;img src="https://readme-typing-svg.herokuapp.com?font=Russo+One&amp;size=28&amp;duration=2000&amp;pause=800&amp;color=06B6D4&amp;background=00000000&amp;center=true&amp;vCenter=true&amp;width=800&amp;height=50&amp;lines=%E2%9A%A1+OPEN+AGENTIC+CODING+%E2%9A%A1" alt="DeepCode Tech Subtitle" style="margin-top: 5px; filter: drop-shadow(0 0 12px #06B6D4) drop-shadow(0 0 24px rgba(6,182,212,0.4));"/&gt; --&gt; 
 &lt;h1&gt;&lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/43c585dca3d21b8e4b6390d835cdd34dc4b4b23d/DeepCode_images/title_logo.svg?sanitize=true" alt="DeepCode Logo" width="32" height="32" style="vertical-align: middle; margin-right: 8px;" /&gt; DeepCode: Open Agentic Coding&lt;/h1&gt; 
 &lt;h3&gt;&lt;em&gt;Advancing Code Generation with Multi-Agent Systems&lt;/em&gt;&lt;/h3&gt; 
 &lt;!-- &lt;p align="center"&gt;
  &lt;img src="https://img.shields.io/badge/Version-1.0.0-00d4ff?style=for-the-badge&amp;logo=rocket&amp;logoColor=white" alt="Version"&gt;

  &lt;img src="https://img.shields.io/badge/License-MIT-4ecdc4?style=for-the-badge&amp;logo=opensourceinitiative&amp;logoColor=white" alt="License"&gt;
  &lt;img src="https://img.shields.io/badge/AI-Multi--Agent-9b59b6?style=for-the-badge&amp;logo=brain&amp;logoColor=white" alt="AI"&gt;
  &lt;img src="https://img.shields.io/badge/HKU-Data_Intelligence_Lab-f39c12?style=for-the-badge&amp;logo=university&amp;logoColor=white" alt="HKU"&gt;
&lt;/p&gt; --&gt; 
 &lt;p&gt; &lt;a href="https://github.com/HKUDS/DeepCode/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/HKUDS/DeepCode?color=00d9ff&amp;amp;style=for-the-badge&amp;amp;logo=star&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/🐍Python-3.13-4ecdc4?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt; &lt;a href="https://pypi.org/project/deepcode-hku/"&gt;&lt;img src="https://img.shields.io/pypi/v/deepcode-hku.svg?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e&amp;amp;color=ff6b6b" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://discord.gg/yF2MmDJyGJ"&gt;&lt;img src="https://img.shields.io/badge/💬Discord-Community-7289da?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS/DeepCode/issues/11"&gt;&lt;img src="https://img.shields.io/badge/💬WeChat-Group-07c160?style=for-the-badge&amp;amp;logo=wechat&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;div align="center"&gt; 
  &lt;div style="width: 100%; height: 2px; margin: 20px 0; background: linear-gradient(90deg, transparent, #00d9ff, transparent);"&gt;&lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Quick%20Start-Get%20Started%20Now-00d9ff?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;🖥️ &lt;strong&gt;Interface Showcase&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" width="100%" style="border: none; border-collapse: collapse; margin: 30px 0;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td width="50%" align="center" style="vertical-align: top; padding: 20px;"&gt; &lt;h4&gt;🖥️ &lt;strong&gt;CLI Interface&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Terminal-Based Development&lt;/strong&gt;&lt;/p&gt; 
     &lt;div align="center"&gt; 
      &lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/8882a7313c504ca97ead6e7b36c51aa761b6a4f3/DeepCode_images/CLI.gif" alt="CLI Interface Demo" width="100%" style="border-radius: 10px; box-shadow: 0 8px 20px rgba(45,55,72,0.3); margin: 15px 0;" /&gt; 
      &lt;div style="background: linear-gradient(135deg, #2D3748 0%, #4A5568 100%); border-radius: 12px; padding: 15px; margin: 15px 0; color: white;"&gt; 
       &lt;strong&gt;🚀 Advanced Terminal Experience&lt;/strong&gt;
       &lt;br /&gt; 
       &lt;small&gt;⚡ Fast command-line workflow&lt;br /&gt;🔧 Developer-friendly interface&lt;br /&gt;📊 Real-time progress tracking&lt;/small&gt; 
      &lt;/div&gt; 
      &lt;p&gt;&lt;em&gt;Professional terminal interface for advanced users and CI/CD integration&lt;/em&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td width="50%" align="center" style="vertical-align: top; padding: 20px;"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Web Interface&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Visual Interactive Experience&lt;/strong&gt;&lt;/p&gt; 
     &lt;div align="center"&gt; 
      &lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/8882a7313c504ca97ead6e7b36c51aa761b6a4f3/DeepCode_images/UI.gif" alt="Web Interface Demo" width="100%" style="border-radius: 10px; box-shadow: 0 8px 20px rgba(14,165,233,0.3); margin: 15px 0;" /&gt; 
      &lt;div style="background: linear-gradient(135deg, #0EA5E9 0%, #00D4FF 100%); border-radius: 12px; padding: 15px; margin: 15px 0; color: white;"&gt; 
       &lt;strong&gt;🎨 Modern Web Dashboard&lt;/strong&gt;
       &lt;br /&gt; 
       &lt;small&gt;🖱️ Intuitive drag-and-drop&lt;br /&gt;📱 Responsive design&lt;br /&gt;🎯 Visual progress tracking&lt;/small&gt; 
      &lt;/div&gt; 
      &lt;p&gt;&lt;em&gt;Beautiful web interface with streamlined workflow for all skill levels&lt;/em&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;hr /&gt; 
 &lt;div align="center"&gt; 
  &lt;h3&gt;🎬 &lt;strong&gt;Introduction Video&lt;/strong&gt;&lt;/h3&gt; 
  &lt;div style="margin: 20px 0;"&gt; 
   &lt;a href="https://youtu.be/PRgmP8pOI08" target="_blank"&gt; &lt;img src="https://img.youtube.com/vi/PRgmP8pOI08/maxresdefault.jpg" alt="DeepCode Introduction Video" width="75%" style="border-radius: 12px; box-shadow: 0 8px 25px rgba(0,0,0,0.15); transition: transform 0.3s ease;" /&gt; &lt;/a&gt; 
  &lt;/div&gt; 
  &lt;p&gt;&lt;em&gt;🎯 &lt;strong&gt;Watch our complete introduction&lt;/strong&gt; - See how DeepCode transforms research papers and natural language into production-ready code&lt;/em&gt;&lt;/p&gt; 
  &lt;p&gt; &lt;a href="https://youtu.be/PRgmP8pOI08" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/▶️_Watch_Video-FF0000?style=for-the-badge&amp;amp;logo=youtube&amp;amp;logoColor=white" alt="Watch Video" /&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;/div&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;em&gt;"Where AI Agents Transform Ideas into Production-Ready Code"&lt;/em&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📑 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-key-features"&gt;🚀 Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#%EF%B8%8F-architecture"&gt;🏗️ Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start"&gt;🚀 Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-examples"&gt;💡 Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-live-demonstrations"&gt;🎬 Live Demonstrations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-star-history"&gt;⭐ Star History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-license"&gt;📄 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Key Features&lt;/h2&gt; 
&lt;br /&gt; 
&lt;table align="center" width="100%" style="border: none; table-layout: fixed;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;🚀 &lt;strong&gt;Paper2Code&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/ALGORITHM-IMPLEMENTATION-ff6b6b?style=for-the-badge&amp;amp;logo=algorithm&amp;amp;logoColor=white" alt="Algorithm Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Implementation of Complex Algorithms&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Effortlessly converts complex algorithms from research papers into &lt;strong&gt;high-quality&lt;/strong&gt;, &lt;strong&gt;production-ready&lt;/strong&gt; code, accelerating algorithm reproduction.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;🎨 &lt;strong&gt;Text2Web&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/FRONTEND-DEVELOPMENT-4ecdc4?style=for-the-badge&amp;amp;logo=react&amp;amp;logoColor=white" alt="Frontend Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Front-End Web Development&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Translates plain textual descriptions into &lt;strong&gt;fully functional&lt;/strong&gt;, &lt;strong&gt;visually appealing&lt;/strong&gt; front-end web code for rapid interface creation.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;⚙️ &lt;strong&gt;Text2Backend&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/BACKEND-DEVELOPMENT-9b59b6?style=for-the-badge&amp;amp;logo=server&amp;amp;logoColor=white" alt="Backend Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Back-End Development&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Generates &lt;strong&gt;efficient&lt;/strong&gt;, &lt;strong&gt;scalable&lt;/strong&gt;, and &lt;strong&gt;feature-rich&lt;/strong&gt; back-end code from simple text inputs, streamlining server-side development.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Autonomous Multi-Agent Workflow&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;The Challenges&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;📄 &lt;strong&gt;Implementation Complexity&lt;/strong&gt;: Converting academic papers and complex algorithms into working code requires significant technical effort and domain expertise&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔬 &lt;strong&gt;Research Bottleneck&lt;/strong&gt;: Researchers spend valuable time implementing algorithms instead of focusing on their core research and discovery work&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⏱️ &lt;strong&gt;Development Delays&lt;/strong&gt;: Product teams experience long wait times between concept and testable prototypes, slowing down innovation cycles&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;Repetitive Coding&lt;/strong&gt;: Developers repeatedly implement similar patterns and functionality instead of building on existing solutions&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;DeepCode&lt;/strong&gt; addresses these workflow inefficiencies by providing reliable automation for common development tasks, streamlining your development workflow from concept to code.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart LR
    A["📄 Research Papers&amp;lt;br/&amp;gt;💬 Text Prompts&amp;lt;br/&amp;gt;🌐 URLs &amp;amp; Document&amp;lt;br/&amp;gt;📎 Files: PDF, DOC, PPTX, TXT, HTML"] --&amp;gt; B["🧠 DeepCode&amp;lt;br/&amp;gt;Multi-Agent Engine"]
    B --&amp;gt; C["🚀 Algorithm Implementation &amp;lt;br/&amp;gt;🎨 Frontend Development &amp;lt;br/&amp;gt;⚙️ Backend Development"]

    style A fill:#ff6b6b,stroke:#c0392b,stroke-width:2px,color:#000
    style B fill:#00d4ff,stroke:#0984e3,stroke-width:3px,color:#000
    style C fill:#00b894,stroke:#00a085,stroke-width:2px,color:#000
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏗️ Architecture&lt;/h2&gt; 
&lt;h3&gt;📊 &lt;strong&gt;System Overview&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;DeepCode&lt;/strong&gt; is an AI-powered development platform that automates code generation and implementation tasks. Our multi-agent system handles the complexity of translating requirements into functional, well-structured code, allowing you to focus on innovation rather than implementation details.&lt;/p&gt; 
&lt;p&gt;🎯 &lt;strong&gt;Technical Capabilities&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;🧬 &lt;strong&gt;Research-to-Production Pipeline&lt;/strong&gt;&lt;br /&gt; Multi-modal document analysis engine that extracts algorithmic logic and mathematical models from academic papers. Generates optimized implementations with proper data structures while preserving computational complexity characteristics.&lt;/p&gt; 
&lt;p&gt;🪄 &lt;strong&gt;Natural Language Code Synthesis&lt;/strong&gt;&lt;br /&gt; Context-aware code generation using fine-tuned language models trained on curated code repositories. Maintains architectural consistency across modules while supporting multiple programming languages and frameworks.&lt;/p&gt; 
&lt;p&gt;⚡ &lt;strong&gt;Automated Prototyping Engine&lt;/strong&gt;&lt;br /&gt; Intelligent scaffolding system generating complete application structures including database schemas, API endpoints, and frontend components. Uses dependency analysis to ensure scalable architecture from initial generation.&lt;/p&gt; 
&lt;p&gt;💎 &lt;strong&gt;Quality Assurance Automation&lt;/strong&gt;&lt;br /&gt; Integrated static analysis with automated unit test generation and documentation synthesis. Employs AST analysis for code correctness and property-based testing for comprehensive coverage.&lt;/p&gt; 
&lt;p&gt;🔮 &lt;strong&gt;CodeRAG Integration System&lt;/strong&gt;&lt;br /&gt; Advanced retrieval-augmented generation combining semantic vector embeddings with graph-based dependency analysis. Automatically discovers optimal libraries and implementation patterns from large-scale code corpus.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🔧 &lt;strong&gt;Core Techniques&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🧠 &lt;strong&gt;Intelligent Orchestration Agent&lt;/strong&gt;: Central decision-making system that coordinates workflow phases and analyzes requirements. Employs dynamic planning algorithms to adapt execution strategies in real-time based on evolving project complexity. Dynamically selects optimal processing strategies for each implementation step. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💾 &lt;strong&gt;Efficient Memory Mechanism&lt;/strong&gt;: Advanced context engineering system that manages large-scale code contexts efficiently. Implements hierarchical memory structures with intelligent compression for handling complex codebases. This component enables instant retrieval of implementation patterns and maintains semantic coherence across extended development sessions. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Advanced CodeRAG System&lt;/strong&gt;: Global code comprehension engine that analyzes complex inter-dependencies across repositories. Performs cross-codebase relationship mapping to understand architectural patterns from a holistic perspective. This module leverages dependency graphs and semantic analysis to provide globally-aware code recommendations during implementation.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🤖 &lt;strong&gt;Multi-Agent Architecture of DeepCode&lt;/strong&gt;:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🎯 Central Orchestrating Agent&lt;/strong&gt;: Orchestrates entire workflow execution and makes strategic decisions. Coordinates specialized agents based on input complexity analysis. Implements dynamic task planning and resource allocation algorithms. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📝 Intent Understanding Agent&lt;/strong&gt;: Performs deep semantic analysis of user requirements to decode complex intentions. Extracts functional specifications and technical constraints through advanced NLP processing. Transforms ambiguous human descriptions into precise, actionable development specifications with structured task decomposition. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📄 Document Parsing Agent&lt;/strong&gt;: Processes complex technical documents and research papers with advanced parsing capabilities. Extracts algorithms and methodologies using document understanding models. Converts academic concepts into practical implementation specifications through intelligent content analysis. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🏗️ Code Planning Agent&lt;/strong&gt;: Performs architectural design and technology stack optimization. Dynamic planning for adaptive development roadmaps. Enforces coding standards and generates modular structures through automated design pattern selection.&lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔍 Code Reference Mining Agent&lt;/strong&gt;: Discovers relevant repositories and frameworks through intelligent search algorithms. Analyzes codebases for compatibility and integration potential. Provides recommendations based on similarity metrics and automated dependency analysis. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📚 Code Indexing Agent&lt;/strong&gt;: Builds comprehensive knowledge graphs of discovered codebases. Maintains semantic relationships between code components. Enables intelligent retrieval and cross-reference capabilities. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🧬 Code Generation Agent&lt;/strong&gt;: Synthesizes gathered information into executable code implementations. Creates functional interfaces and integrates discovered components. Generates comprehensive test suites and documentation for reproducibility.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h4&gt;🛠️ &lt;strong&gt;Implementation Tools Matrix&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;🔧 Powered by MCP (Model Context Protocol)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;DeepCode leverages the &lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt; standard to seamlessly integrate with various tools and services. This standardized approach ensures reliable communication between AI agents and external systems, enabling powerful automation capabilities.&lt;/p&gt; 
&lt;h5&gt;📡 &lt;strong&gt;MCP Servers &amp;amp; Tools&lt;/strong&gt;&lt;/h5&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🛠️ &lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;🔧 &lt;strong&gt;Primary Function&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;💡 &lt;strong&gt;Purpose &amp;amp; Capabilities&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🔍 brave&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web Search Engine&lt;/td&gt; 
   &lt;td&gt;Real-time information retrieval via Brave Search API&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 bocha-mcp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Alternative Search&lt;/td&gt; 
   &lt;td&gt;Secondary search option with independent API access&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📂 filesystem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;File System Operations&lt;/td&gt; 
   &lt;td&gt;Local file and directory management, read/write operations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web Content Retrieval&lt;/td&gt; 
   &lt;td&gt;Fetch and extract content from URLs and web resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📥 github-downloader&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Repository Management&lt;/td&gt; 
   &lt;td&gt;Clone and download GitHub repositories for analysis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📋 file-downloader&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Document Processing&lt;/td&gt; 
   &lt;td&gt;Download and convert files (PDF, DOCX, etc.) to Markdown&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚡ command-executor&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;System Commands&lt;/td&gt; 
   &lt;td&gt;Execute bash/shell commands for environment management&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🧬 code-implementation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Code Generation Hub&lt;/td&gt; 
   &lt;td&gt;Comprehensive code reproduction with execution and testing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📚 code-reference-indexer&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart Code Search&lt;/td&gt; 
   &lt;td&gt;Intelligent indexing and search of code repositories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📄 document-segmentation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart Document Analysis&lt;/td&gt; 
   &lt;td&gt;Intelligent document segmentation for large papers and technical documents&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h5&gt;🔧 &lt;strong&gt;Legacy Tool Functions&lt;/strong&gt; &lt;em&gt;(for reference)&lt;/em&gt;&lt;/h5&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🛠️ &lt;strong&gt;Function&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;🎯 &lt;strong&gt;Usage Context&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📄 read_code_mem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Efficient code context retrieval from memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;✍️ write_file&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Direct file content generation and modification&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🐍 execute_python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Python code testing and validation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📁 get_file_structure&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Project structure analysis and organization&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚙️ set_workspace&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Dynamic workspace and environment configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📊 get_operation_history&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Process monitoring and operation tracking&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;🎛️ &lt;strong&gt;Multi-Interface Framework&lt;/strong&gt;&lt;br /&gt; RESTful API with CLI and web frontends featuring real-time code streaming, interactive debugging, and extensible plugin architecture for CI/CD integration.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Multi-Agent Intelligent Pipeline:&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;🌟 &lt;strong&gt;Intelligence Processing Flow&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" width="100%" style="border: none; border-collapse: collapse;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 15px; color: white; font-weight: bold;"&gt; 💡 &lt;strong&gt;INPUT LAYER&lt;/strong&gt;&lt;br /&gt; 📄 Research Papers • 💬 Natural Language • 🌐 URLs • 📋 Requirements &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="20"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 🎯 &lt;strong&gt;CENTRAL ORCHESTRATION&lt;/strong&gt;&lt;br /&gt; Strategic Decision Making • Workflow Coordination • Agent Management &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #3742fa 0%, #2f3542 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📝 &lt;strong&gt;TEXT ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Requirement Processing&lt;/small&gt; &lt;/td&gt; 
    &lt;td width="10"&gt;&lt;/td&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #8c7ae6 0%, #9c88ff 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📄 &lt;strong&gt;DOCUMENT ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Paper &amp;amp; Spec Processing&lt;/small&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #00d2d3 0%, #54a0ff 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 📋 &lt;strong&gt;REPRODUCTION PLANNING&lt;/strong&gt;&lt;br /&gt; Deep Paper Analysis • Code Requirements Parsing • Reproduction Strategy Development &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #ffa726 0%, #ff7043 100%); border-radius: 10px; color: white; width: 50%;"&gt; 🔍 &lt;strong&gt;REFERENCE ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Repository Discovery&lt;/small&gt; &lt;/td&gt; 
    &lt;td width="10"&gt;&lt;/td&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #e056fd 0%, #f368e0 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📚 &lt;strong&gt;CODE INDEXING&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Knowledge Graph Building&lt;/small&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #26de81 0%, #20bf6b 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 🧬 &lt;strong&gt;CODE IMPLEMENTATION&lt;/strong&gt;&lt;br /&gt; Implementation Generation • Testing • Documentation &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 20px; background: linear-gradient(135deg, #045de9 0%, #09c6f9 100%); border-radius: 15px; color: white; font-weight: bold;"&gt; ⚡ &lt;strong&gt;OUTPUT DELIVERY&lt;/strong&gt;&lt;br /&gt; 📦 Complete Codebase • 🧪 Test Suite • 📚 Documentation • 🚀 Deployment Ready &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;h3&gt;🔄 &lt;strong&gt;Process Intelligence Features&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" style="border: none;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #ff6b6b;"&gt; 
      &lt;h4&gt;🎯 Adaptive Flow&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Dynamic agent selection based on input complexity&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #4ecdc4;"&gt; 
      &lt;h4&gt;🧠 Smart Coordination&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Intelligent task distribution and parallel processing&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #45b7d1;"&gt; 
      &lt;h4&gt;🔍 Context Awareness&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Deep understanding through CodeRAG integration&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #96ceb4;"&gt; 
      &lt;h4&gt;⚡ Quality Assurance&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Automated testing and validation throughout&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;📦 &lt;strong&gt;Step 1: Installation&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;⚡ &lt;strong&gt;Direct Installation (Recommended)&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 🚀 Install DeepCode package directly
pip install deepcode-hku

# 🔑 Download configuration files
curl -O https://raw.githubusercontent.com/HKUDS/DeepCode/main/mcp_agent.config.yaml
curl -O https://raw.githubusercontent.com/HKUDS/DeepCode/main/mcp_agent.secrets.yaml

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🔧 &lt;strong&gt;Development Installation (From Source)&lt;/strong&gt;&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📂 Click to expand development installation options&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h5&gt;🔥 &lt;strong&gt;Using UV (Recommended for Development)&lt;/strong&gt;&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 🔽 Clone the repository
git clone https://github.com/HKUDS/DeepCode.git
cd DeepCode/

# 📦 Install UV package manager
curl -LsSf https://astral.sh/uv/install.sh | sh

# 🔧 Install dependencies with UV
uv venv --python=3.13
source .venv/bin/activate  # On Windows: .venv\Scripts\activate
uv pip install -r requirements.txt

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;🐍 &lt;strong&gt;Using Traditional pip&lt;/strong&gt;&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 🔽 Clone the repository
git clone https://github.com/HKUDS/DeepCode.git
cd DeepCode/

# 📦 Install dependencies
pip install -r requirements.txt

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h4&gt;🪟 &lt;strong&gt;Windows Users: Additional MCP Server Configuration&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;If you're using Windows, you may need to configure MCP servers manually in &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install MCP servers globally
npm i -g @modelcontextprotocol/server-brave-search
npm i -g @modelcontextprotocol/server-filesystem

# 2. Find your global node_modules path
npm -g root
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then update your &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt; to use absolute paths:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;mcp:
  servers:
    brave:
      command: "node"
      args: ["C:/Program Files/nodejs/node_modules/@modelcontextprotocol/server-brave-search/dist/index.js"]
    filesystem:
      command: "node"
      args: ["C:/Program Files/nodejs/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js", "."]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Replace the path with your actual global node_modules path from step 2.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🔍 &lt;strong&gt;Search Server Configuration (Optional)&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;DeepCode supports multiple search servers for web search functionality. You can configure your preferred option in &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Default search server configuration
# Options: "brave" or "bocha-mcp"
default_search_server: "brave"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔍 Brave Search&lt;/strong&gt; (&lt;code&gt;"brave"&lt;/code&gt;):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Default option with high-quality search results&lt;/li&gt; 
   &lt;li&gt;Requires BRAVE_API_KEY configuration&lt;/li&gt; 
   &lt;li&gt;Recommended for most users&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🌐 Bocha-MCP&lt;/strong&gt; (&lt;code&gt;"bocha-mcp"&lt;/code&gt;):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Alternative search server option&lt;/li&gt; 
   &lt;li&gt;Requires BOCHA_API_KEY configuration&lt;/li&gt; 
   &lt;li&gt;Uses local Python server implementation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;API Key Configuration in mcp_agent.config.yaml:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# For Brave Search (default) - around line 28
brave:
  command: "npx"
  args: ["-y", "@modelcontextprotocol/server-brave-search"]
  env:
    BRAVE_API_KEY: "your_brave_api_key_here"

# For Bocha-MCP (alternative) - around line 74
bocha-mcp:
  command: "python"
  args: ["tools/bocha_search_server.py"]
  env:
    PYTHONPATH: "."
    BOCHA_API_KEY: "your_bocha_api_key_here"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;💡 Tip&lt;/strong&gt;: Both search servers require API key configuration. Choose the one that best fits your API access and requirements.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;⚡ &lt;strong&gt;Step 2: Launch Application&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;🚀 &lt;strong&gt;Using Installed Package (Recommended)&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 🌐 Launch web interface directly
deepcode

# The application will automatically start at http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🛠️ &lt;strong&gt;Using Source Code&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Choose your preferred interface:&lt;/p&gt; 
&lt;h5&gt;🌐 &lt;strong&gt;Web Interface&lt;/strong&gt; (Recommended)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using UV
uv run streamlit run ui/streamlit_app.py
# Or using traditional Python
streamlit run ui/streamlit_app.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/badge/Access-localhost:8501-00d4ff?style=flat-square&amp;amp;logo=streamlit&amp;amp;logoColor=white" alt="Web Access" /&gt; 
&lt;/div&gt; 
&lt;h5&gt;🖥️ &lt;strong&gt;CLI Interface&lt;/strong&gt; (Advanced Users)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using UV
uv run python cli/main_cli.py
# Or using traditional Python
python cli/main_cli.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/badge/Mode-Interactive_Terminal-9b59b6?style=flat-square&amp;amp;logo=terminal&amp;amp;logoColor=white" alt="CLI Mode" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Step 3: Generate Code&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;📄 Input&lt;/strong&gt;: Upload your research paper, provide requirements, or paste a URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 Processing&lt;/strong&gt;: Watch the multi-agent system analyze and plan&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Output&lt;/strong&gt;: Receive production-ready code with tests and documentation&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;💡 Examples&lt;/h2&gt; 
&lt;h3&gt;🎬 &lt;strong&gt;Live Demonstrations&lt;/strong&gt;&lt;/h3&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;📄 &lt;strong&gt;Paper2Code Demo&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Research to Implementation&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=MQZYpLkzsbw"&gt; &lt;img src="https://img.youtube.com/vi/MQZYpLkzsbw/maxresdefault.jpg" alt="Paper2Code Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=MQZYpLkzsbw"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Transform academic papers into production-ready code automatically&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;🖼️ &lt;strong&gt;Image Processing Demo&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;AI-Powered Image Tools&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=nFt5mLaMEac"&gt; &lt;img src="https://img.youtube.com/vi/nFt5mLaMEac/maxresdefault.jpg" alt="Image Processing Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=nFt5mLaMEac"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Intelligent image processing with background removal and enhancement&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Frontend Implementation&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Complete Web Application&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=78wx3dkTaAU"&gt; &lt;img src="https://img.youtube.com/vi/78wx3dkTaAU/maxresdefault.jpg" alt="Frontend Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=78wx3dkTaAU"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Full-stack web development from concept to deployment&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;🆕 &lt;strong&gt;Recent Updates&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;📄 &lt;strong&gt;Smart Document Segmentation (v1.2.0)&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Processing&lt;/strong&gt;: Automatically handles large research papers and technical documents that exceed LLM token limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable Control&lt;/strong&gt;: Toggle segmentation via configuration with size-based thresholds&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Semantic Analysis&lt;/strong&gt;: Advanced content understanding with algorithm, concept, and formula preservation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backward Compatibility&lt;/strong&gt;: Seamlessly falls back to traditional processing for smaller documents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Coming Soon&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;We're continuously enhancing DeepCode with exciting new features:&lt;/p&gt; 
&lt;h4&gt;🔧 &lt;strong&gt;Enhanced Code Reliability &amp;amp; Validation&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Testing&lt;/strong&gt;: Comprehensive functionality testing with execution verification and error detection.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Quality Assurance&lt;/strong&gt;: Multi-level validation through static analysis, dynamic testing, and performance benchmarking.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Debugging&lt;/strong&gt;: AI-powered error detection with automatic correction suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📊 &lt;strong&gt;PaperBench Performance Showcase&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Benchmark Dashboard&lt;/strong&gt;: Comprehensive performance metrics on the PaperBench evaluation suite.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accuracy Metrics&lt;/strong&gt;: Detailed comparison with state-of-the-art paper reproduction systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Success Analytics&lt;/strong&gt;: Statistical analysis across paper categories and complexity levels.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ &lt;strong&gt;System-wide Optimizations&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Boost&lt;/strong&gt;: Multi-threaded processing and optimized agent coordination for faster generation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Reasoning&lt;/strong&gt;: Advanced reasoning capabilities with improved context understanding.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Expanded Support&lt;/strong&gt;: Extended compatibility with additional programming languages and frameworks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;em&gt;Community Growth Trajectory&lt;/em&gt;&lt;/p&gt; 
 &lt;a href="https://star-history.com/#HKUDS/DeepCode&amp;amp;Date"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date" /&gt; 
   &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date" style="border-radius: 15px; box-shadow: 0 0 30px rgba(0, 217, 255, 0.3);" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Ready to Transform Development?&lt;/strong&gt;&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start"&gt;&lt;img src="https://img.shields.io/badge/🚀_Get_Started-00d4ff?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Get Started" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS"&gt;&lt;img src="https://img.shields.io/badge/🏛️_View_on_GitHub-00d4ff?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="View on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS/deepcode-agent"&gt;&lt;img src="https://img.shields.io/badge/⭐_Star_Project-00d4ff?style=for-the-badge&amp;amp;logo=star&amp;amp;logoColor=white" alt="Star Project" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;📄 &lt;strong&gt;License&lt;/strong&gt;&lt;/h3&gt; 
 &lt;img src="https://img.shields.io/badge/License-MIT-4ecdc4?style=for-the-badge&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white" alt="MIT License" /&gt; 
 &lt;p&gt;&lt;strong&gt;MIT License&lt;/strong&gt; - Copyright (c) 2025 Data Intelligence Lab, The University of Hong Kong&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;img src="https://visitor-badge.laobi.icu/badge?page_id=deepcode.readme&amp;amp;style=for-the-badge&amp;amp;color=00d4ff" alt="Visitors" /&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>appcypher/awesome-mcp-servers</title>
      <link>https://github.com/appcypher/awesome-mcp-servers</link>
      <description>&lt;p&gt;Awesome MCP Servers - A curated list of Model Context Protocol servers&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Awesome MCP Servers &lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome" /&gt;&lt;/h1&gt; 
&lt;p&gt;A curated list of awesome Model Context Protocol (MCP) servers. MCP is an open protocol that enables AI models to securely interact with local and remote resources through standardized server implementations. This list focuses on production-ready and experimental MCP servers that extend AI capabilities through file access, database connections, API integrations, and other contextual services.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;⚠️ Security Warning&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] When running MCP servers without proper sandboxing, they can execute arbitrary code on your system with the same permissions as the host process. This creates significant security risks.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Security Risks:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;System Access&lt;/strong&gt;: Full access to files, network, and system resources&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Code Execution&lt;/strong&gt;: Can run any command on your machine&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Prompt Injection&lt;/strong&gt;: Malicious prompts could trigger unintended server actions&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Data Exposure&lt;/strong&gt;: Sensitive data may be accessed or leaked&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Best Practices:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use official implementations (marked with ⭐) when available&lt;/li&gt; 
  &lt;li&gt;Run servers in VMs or isolated environments&lt;/li&gt; 
  &lt;li&gt;Review code before installation&lt;/li&gt; 
  &lt;li&gt;Limit permissions to minimum required&lt;/li&gt; 
  &lt;li&gt;Monitor server activity&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;h2&gt;Examples of Supported Clients&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;MCP Host&lt;/th&gt; 
   &lt;th&gt;Documentation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.claudedesktop.com/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://github.com/user-attachments/assets/b0ea1e57-df16-4b04-9276-1980e17ab6ec" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://claude.ai"&gt;Claude Desktop&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://modelcontextprotocol.io/quickstart"&gt;Claude x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://zed.dev/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://zed.dev/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo_icon.d67dc948.webp&amp;amp;w=64&amp;amp;q=100" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://zed.dev/"&gt;Zed Editor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://zed.dev/blog/mcp"&gt;Zed x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://sourcegraph.com/cody"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://storage.googleapis.com/sourcegraph-assets/docs/images/cody/cody-logomark-default.svg?sanitize=true" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://sourcegraph.com/cody"&gt;Sourcegraph Cody&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://sourcegraph.com/blog/cody-supports-anthropic-model-context-protocol"&gt;Cody x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://sourcegraph.com/cody"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://cdn.prod.website-files.com/663e06c56841363663ffbbcf/664c918ec47bacdd3acdc167_favicon%408x.png" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.continue.dev/"&gt;Continue&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://blog.continue.dev/model-context-protocol"&gt;Continue x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Upsonic/gpt-computer-assistant"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://github.com/user-attachments/assets/211d0c2b-04de-471e-b1ed-97da94a58d82" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Upsonic/gpt-computer-assistant"&gt;GPT Computer Assistant&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Upsonic/gpt-computer-assistant"&gt;GCA x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.librechat.ai/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://raw.githubusercontent.com/danny-avila/LibreChat/0855677a36d76cafa5e064b7e346eb3f74c6af2a/client/public/assets/logo.svg?sanitize=true" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.librechat.ai/"&gt;LibreChat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.librechat.ai/docs/features/agents#model-context-protocol-mcp"&gt;LibreChat Agents x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.cursor.com/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://cursor.com/favicon.ico" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.cursor.com/"&gt;Cursor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://docs.cursor.com/advanced/model-context-protocol"&gt;Cursor x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.enconvo.com/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://www.enconvo.com/favicon.ico" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.enconvo.com/"&gt;Enconvo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://docs.enconvo.com/docs/features/model-context-protocol"&gt;Enconvo x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://block.github.io/goose/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://block.github.io/goose/img/logo_light.png" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://block.github.io/goose/"&gt;Goose&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://block.github.io/goose/docs/getting-started/using-extensions"&gt;Goose x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/evilsocket/nerve"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://raw.githubusercontent.com/evilsocket/search/refs/heads/main/logo.png" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/evilsocket/nerve"&gt;Nerve&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/evilsocket/nerve/raw/main/docs/index.md#%EF%B8%8F-adding-tools"&gt;Nerve x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mcp-router.net"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://raw.githubusercontent.com/mcp-router/mcp-router/refs/heads/main/static/img/logo.svg?sanitize=true" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mcp-router/mcp-router"&gt;MCP Router&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://mcp-router.net"&gt;MCP Router x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/pietrozullo/mcp-use"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://raw.githubusercontent.com/pietrozullo/mcp-use/refs/heads/main/docs/favicon.svg?sanitize=true" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/pietrozullo/mcp-use"&gt;mcp-use&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://docs.mcp-use.io/introduction"&gt;mcp-use x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://wassist.app/mcp/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://wassist.app/whatsmcp.png" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://wassist.app/mcp/"&gt;WhatsMCP&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://wassist.app/mcp/"&gt;WhatsApp x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://code.visualstudio.com/"&gt;
     &lt;div align="center"&gt;
      &lt;img src="https://github.com/user-attachments/assets/7d5442e5-4542-4942-afde-a55d5288a40c" height="20" /&gt;
     &lt;/div&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://code.visualstudio.com/docs/copilot/chat/mcp-servers"&gt;VS Code x MCP&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h2&gt;Server Implementations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📂 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#file-systems"&gt;File Systems&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📦 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#virtualization"&gt;Sandbox &amp;amp; Virtualization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔄 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#version-control"&gt;Version Control&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;☁️ - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#cloud-storage"&gt;Cloud Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🗄️ - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#databases"&gt;Databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#communication"&gt;Communication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📈 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#monitoring"&gt;Monitoring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔍 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#search-web"&gt;Search &amp;amp; Web&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🗺️ - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#location-services"&gt;Location Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎯 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#marketing"&gt;Marketing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📝 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#note-taking"&gt;Note Taking&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;⚡ - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#cloud-platforms"&gt;Cloud Platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;⚙️ - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#workflow-automation"&gt;Workflow Automation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#system-automation"&gt;System Automation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📱 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#social-media"&gt;Social Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎮 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#gaming"&gt;Gaming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💹 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#finance"&gt;Finance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🧬 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#research-data"&gt;Research &amp;amp; Data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤝 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#ai-services"&gt;AI Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💻 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#development-tools"&gt;Development Tools&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📊 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#data-visualization"&gt;Data Visualization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🆔 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#identity"&gt;Identity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔗 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#aggregators"&gt;Aggregators&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#language"&gt;Language &amp;amp; Translation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔒 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔌 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#iot"&gt;IoT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🧑‍🎨 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#art-literature"&gt;Art &amp;amp; Literature&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🛒 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#e-commerce"&gt;E-Commerce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📦 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#data-platforms"&gt;Data Platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 - &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#robotics"&gt;Robotics &amp;amp; Physical AI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;sup&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;details&gt;
 &lt;p&gt;&lt;/p&gt; 
 &lt;summary&gt;Legend&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;sup&gt;⭐&lt;/sup&gt; Official protocol implementation&lt;/li&gt; 
  &lt;li&gt;&lt;sup&gt;1&lt;/sup&gt; First implementation (when multiple implementations exist)&lt;/li&gt; 
  &lt;li&gt;&lt;sup&gt;2&lt;/sup&gt; Second implementation&lt;/li&gt; 
  &lt;li&gt;&lt;sup&gt;3&lt;/sup&gt; Third implementation&lt;/li&gt; 
  &lt;li&gt;&lt;sup&gt;n&lt;/sup&gt; Subsequent implementations&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;br /&gt; 
&lt;h2&gt;Tools &amp;amp; Utilities&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/#helpful-tools-&amp;amp;-utilities"&gt;Helpful Tools &amp;amp; Utilities&lt;/a&gt; section for tools to help manage, configure, and work with MCP servers.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;📂 &lt;a name="file-systems"&gt;&lt;/a&gt;File Systems&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Provides direct access to local file systems with configurable permissions. Enables AI models to read, write, and manage files within specified directories.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/files/4CAF50" height="14" /&gt; &lt;a href="https://github.com/hexitex/MCP-Backup-Server"&gt;Backup&lt;/a&gt; - Provides file and folder backup and restoration capabilities for AI agents and code editing tools&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/files/9AD1ED" height="14" /&gt; &lt;a href="https://github.com/mickael-kerjean/filestash/tree/master/server/plugin/plg_handler_mcp"&gt;FileStash&lt;/a&gt; - Remote Storage Access: SFTP, S3, FTP, SMB, NFS, WebDAV, GIT, FTPS, gcloud, azure blob, sharepoint, etc...&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/files/2196F3" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem"&gt;FileSystem&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - Direct local file system access&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/files/4A90E2" height="14" /&gt; &lt;a href="https://github.com/mark3labs/mcp-filesystem-server"&gt;FileSystem&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - Golang implementation for local file system access&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/files/4CAF50" height="14" /&gt; &lt;a href="https://github.com/mamertofabian/mcp-everything-search"&gt;Everything Search&lt;/a&gt; - Lightning-fast Windows file search powered by Everything SDK&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/files/4CAF50" height="14" /&gt; &lt;a href="https://github.com/efforthye/fast-filesystem-mcp"&gt;fast-filesystem-mcp&lt;/a&gt; - Advanced filesystem operations with large file handling capabilities and Claude-optimized features. Provides fast file reading/writing, sequential reading for large files, directory operations, file search, and streaming writes with backup &amp;amp; recovery.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/files/4CAF50" height="14" /&gt; &lt;a href="https://github.com/cyberchitta/llm-context.py"&gt;llm-context&lt;/a&gt; - Share code context with LLMs via Model Context Protocol or clipboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;📦 &lt;a name="virtualization"&gt;&lt;/a&gt;Sandbox &amp;amp; Virtualization&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Secure sandbox environments for code execution and testing. Enables safe execution of code snippets and development workflows.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://docs.microsandbox.dev/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/microsandbox/microsandbox"&gt;Microsandbox&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Self-hosted platform for secure execution of AI code. Great for Code Interpreter, Data Analysis, Browser Use.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://e2b.dev/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/e2b-dev/mcp-server"&gt;E2B&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Secure cloud development environments for AI agents. Enables safe code execution and testing in isolated containers.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/docker/0db7ed" height="14" /&gt; &lt;a href="https://github.com/QuantGeekDev/docker-mcp"&gt;Docker&lt;/a&gt; - An MCP server for Docker operations, enabling seamless container and compose stack management.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🔄 &lt;a name="version-control"&gt;&lt;/a&gt;Version Control&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Interact with Git repositories and version control platforms. Enables repository management, code analysis, pull request handling, issue tracking, and other version control operations through standardized APIs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/github/8A8A8A" height="14" /&gt; &lt;a href="https://github.com/github/github-mcp-server"&gt;GitHub&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - GitHub API integration for repository management, PRs, issues, and more&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/github/8A8A8A" height="14" /&gt; &lt;a href="https://github.com/kurdin/github-repos-manager-mcp"&gt;GitHub&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - Token-based GitHub automation management. No Docker for optimal performance, Flexible configuration for fine-grained control, 80+ tools with direct API integration.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/gitlab/FC6D26" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/gitlab"&gt;GitLab&lt;/a&gt; - GitLab platform integration for project management and CI/CD operations&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/git/F05032" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/git"&gt;Git&lt;/a&gt; - Direct Git repository operations including reading, searching, and analyzing local repositories&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/phabricator/5865F2" height="14" /&gt; &lt;a href="https://github.com/baba786/phabricator-mcp-server"&gt;Phabricator&lt;/a&gt; - Phabricator API integration for repository and project management&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/git/F05032" height="14" /&gt; &lt;a href="https://github.com/puravparab/Gitingest-MCP"&gt;Gitingest-MCP&lt;/a&gt; - Gitingest integration providing prompt friendly summmaries of Github repos&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;☁ &lt;a name="cloud-storage"&gt;&lt;/a&gt;Cloud Storage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Access and manage files stored in cloud storage platforms. Enables searching, reading, and organizing cloud-stored documents and data.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/googledrive/4285F4" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/gdrive"&gt;Google Drive&lt;/a&gt; - Google Drive integration for file access, search, and management&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.box.com/themes/custom/box/favicons/favicon.ico" height="14" /&gt; &lt;a href="https://developer.box.com/guides/box-mcp/"&gt;Box&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Box MCP Server allows third party AI agents from platforms like Copilot Studio, Cursor, Claude for Desktop to access Box content seamlessly. It extends the agent's capabilities by allowing it to perform actions related to content stored in Box.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://framerusercontent.com/images/ijlYG00LOcMD6zR1XLMxHbAwZkM.png" height="14" /&gt; &lt;a href="https://github.com/video-db/agent-toolkit/tree/main/modelcontextprotocol"&gt;VideoDB&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - A serverless video database to easily store, index, search, and stream videos. VideoDB uses AI to automatically tag scenes, generate accurate transcriptions, and quickly retrieve video moments with simple queries.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.microsoft.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/softeria/ms-365-mcp-server"&gt;Microsoft 365&lt;/a&gt; - MCP server that connects to the whole Microsoft 365 suite (Microsoft Office, Outlook, etc.) using Graph API (including mail, files, Excel, calendar)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🗄️ &lt;a name="databases"&gt;&lt;/a&gt;Databases&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Secure database access with schema inspection capabilities. Enables querying and analyzing data while maintaining read-only safety by default.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/postgresql/5865F2" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/postgres"&gt;PostgreSQL&lt;/a&gt; - PostgreSQL database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/sqlite/0F80CC" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite"&gt;SQLite&lt;/a&gt; - SQLite database operations with built-in analysis features&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/duckdb/FDC000" height="14" /&gt; &lt;a href="https://github.com/ktanaka101/mcp-server-duckdb"&gt;DuckDB&lt;/a&gt; - DuckDB database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/libreoffice/18A303" height="14" /&gt; &lt;a href="https://github.com/haris-musa/excel-mcp-server"&gt;Excel&lt;/a&gt; - Excel workbook manipulation including data reading/writing, worksheet management, formatting, charts, and pivot tables&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/googlebigquery/669DF6" height="14" /&gt; &lt;a href="https://github.com/LucasHild/mcp-server-bigquery"&gt;BigQuery&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - BigQuery database integration with schema inspection and query capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/googlebigquery/669DF6" height="14" /&gt; &lt;a href="https://github.com/ergut/mcp-bigquery-server"&gt;BigQuery&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - A BigQuery MCP server for read-only SQL queries and schema exploration (available on npm)&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://neon.tech/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/neondatabase/mcp-server-neon"&gt;Neon&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Neon MCP Server. Allows natural language interactions with Neon for database management.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://qdrant.tech/img/brand-resources-logos/logomark.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/qdrant/mcp-server-qdrant/"&gt;Qdrant&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - A Qdrant MCP server for keeping and retrieving memories in the Qdrant vector search engine.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/mongodb/47A248" height="14" /&gt; &lt;a href="https://github.com/kiliczsh/mcp-mongo-server"&gt;MongoDB&lt;/a&gt; - A Model Context Protocol Server for querying and analyzing MongoDB collections.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/mongodb/47A248" height="14" /&gt; &lt;a href="https://github.com/furey/mongodb-lens"&gt;MongoDB Lens&lt;/a&gt; - Full featured MCP Server for MongoDB databases.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/mysql" height="14" /&gt; &lt;a href="https://github.com/designcomputer/mysql_mcp_server"&gt;MySQL&lt;/a&gt; - MySQL database integration with configurable access controls and schema inspection&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/airtable" height="14" /&gt; &lt;a href="https://github.com/domdomegg/airtable-mcp-server"&gt;Airtable&lt;/a&gt; - Read and write access to Airtable databases, with schema inspection.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/snowflake" height="14" /&gt; &lt;a href="https://github.com/isaacwasserman/mcp-snowflake-server"&gt;Snowflake&lt;/a&gt; - Snowflake database integration with read/write capabilities and insight tracking.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://jiejue.obs.ap-southeast-1.myhuaweicloud.com/20250209205317622.webp" height="14" /&gt; &lt;a href="https://github.com/donghao1393/mcp-dbutils"&gt;DBUtils&lt;/a&gt; - A unified database access service for MCP that seamlessly integrates PostgreSQL and SQLite with a clean abstraction layer.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.pingcap.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/c4pt0r/mcp-server-tidb"&gt;TiDB&lt;/a&gt; - MCP server implementation for TiDB (serverless) database.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.nocodb.com/marketing-site/20250120104552/images/favicon.png" height="14" /&gt; &lt;a href="https://github.com/edwinbernadus/nocodb-mcp-server"&gt;NocoDB&lt;/a&gt; - Read and write access to NocoDB database.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.couchbase.com/wp-content/uploads/2023/10/couchbase-favicon.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/Couchbase-Ecosystem/mcp-server-couchbase"&gt;Couchbase&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - MCP server to interact with the data stored in Couchbase clusters including natural language querying.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://avatars.githubusercontent.com/u/1529926?s=48&amp;amp;v=4" height="14" /&gt; &lt;a href="https://github.com/redis/mcp-redis"&gt;Redis&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - A natural language interface designed for agentic applications to efficiently manage and search data in Redis.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://framerusercontent.com/images/ijlYG00LOcMD6zR1XLMxHbAwZkM.png" height="14" /&gt; &lt;a href="https://github.com/video-db/agent-toolkit/tree/main/modelcontextprotocol"&gt;VideoDB Director&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Create AI-powered video workflows including automatic editing, content moderation, voice cloning, highlight generation, and searchable video moments—all accessible via simple APIs and intuitive chat-based interfaces.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;💬 &lt;a name="communication"&gt;&lt;/a&gt;Communication&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Integration with communication platforms for message management and channel operations. Enables AI models to interact with team communication tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/slack/E01E5A" height="14" /&gt; &lt;a href="https://github.com/korotovsky/slack-mcp-server"&gt;Slack&lt;/a&gt; - The most powerful MCP Slack Server with Stdio and SSE transports, Proxy support and no permission requirements on Slack Workspace.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.line.me/favicon-32x32.png" height="14" /&gt; &lt;a href="https://github.com/line/line-bot-mcp-server"&gt;LINE Official Account&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Integrates the LINE Messaging API to connect an AI Agent to the LINE Official Account.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/linear/5E6AD2" height="14" /&gt; &lt;a href="https://github.com/jerhadf/linear-mcp-server"&gt;Linear&lt;/a&gt; - Linear MCP Server. Provides integration with Linear's issue tracking system through MCP.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/atlassian/0052CC" height="14" /&gt; &lt;a href="https://github.com/sooperset/mcp-atlassian"&gt;Atlassian&lt;/a&gt; - Comprehensive integration with Atlassian suite including Confluence for documentation management and Jira for issue tracking.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://carbonvoice.app/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/PhononX/cv-mcp-server"&gt;Carbon Voice&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - MCP Server that connects AI Agents to &lt;a href="https://getcarbon.app"&gt;Carbon Voice&lt;/a&gt;. Create, manage, and interact with voice messages, conversations, direct messages, folders, voice memos, AI actions and more in &lt;a href="https://getcarbon.app"&gt;Carbon Voice&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://m2tg1pnwn0.ufs.sh/f/GMqNN8nd9I8l9tUbmif1CnFX8Baqr7mHeicYu0AULDyNVWJE" height="14" /&gt; &lt;a href="https://github.com/gitmotion/ntfy-me-mcp"&gt;ntfy&lt;/a&gt; - An ntfy MCP server for sending/fetching ntfy notifications to your self-hosted ntfy.sh server from AI Agents 📤 (supports secure token auth &amp;amp; more - use with npx or docker!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;📈 &lt;a name="monitoring"&gt;&lt;/a&gt;Monitoring&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Access and analyze application monitoring data. Enables AI models to review error reports and performance metrics.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://metoro.io/static/images/logos/Metoro.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/metoro-io/metoro-mcp-server"&gt;Metoro&lt;/a&gt; - Query and interact with kubernetes environments monitored by Metoro&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raygun.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/MindscapeHQ/mcp-server-raygun"&gt;Raygun&lt;/a&gt; - Raygun API V3 integration for crash reporting and real user monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/sentry/546E7A" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/sentry"&gt;Sentry&lt;/a&gt; - Sentry.io integration for error tracking and performance monitoring&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/letsencrypt/003A70" height="14" /&gt; &lt;a href="https://github.com/firesh/sslmon-mcp"&gt;sslmon&lt;/a&gt; - Domain/HTTPS/SSL domain registration information and SSL certificate monitoring capabilities. Query domain registration and expiration information, and SSL certificate information and validity status for any domain.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://aiops.drdroid.io/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/DrDroidLab/signoz-mcp-server"&gt;Signoz&lt;/a&gt; - Comprehensive integration with &lt;a href="https://signoz.io/docs/userguide/apis/"&gt;Signoz APIs&lt;/a&gt; and &lt;a href="https://signoz.io/docs/"&gt;documentation&lt;/a&gt; for monitoring, observability, and debugging tasks related to your Signoz instances.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://avatars.githubusercontent.com/u/174736222?s=200&amp;amp;v=4" height="14" /&gt; &lt;a href="https://github.com/VictoriaMetrics-Community/mcp-victoriametrics"&gt;VictoriaMetrics&lt;/a&gt; - Comprehensive integration with &lt;a href="https://docs.victoriametrics.com/victoriametrics/url-examples/"&gt;VictoriaMetrics APIs&lt;/a&gt; and &lt;a href="https://docs.victoriametrics.com/"&gt;documentation&lt;/a&gt; for monitoring, observability, and debugging tasks related to your VictoriaMetrics instances.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🔍 &lt;a name="search-web"&gt;&lt;/a&gt;Search &amp;amp; Web&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Web content access and automation capabilities. Enables searching, scraping, and processing web content in AI-friendly formats.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/puppeteer/00D8A2" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/puppeteer"&gt;Puppeteer&lt;/a&gt; - Browser automation for web scraping and interaction&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/brave/FB542B" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/brave-search"&gt;Brave Search&lt;/a&gt; - Web search capabilities using Brave's Search API&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://github.com/user-attachments/assets/5d9346e8-7821-4202-80cd-25e0678d3400" height="14" /&gt; &lt;a href="https://github.com/luminati-io/brightdata-mcp"&gt;Bright Data&lt;/a&gt; - Discover, extract, and interact with the web - one interface powering automated access across the public internet.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://avatars.githubusercontent.com/u/204530939?s=200&amp;amp;v=4" height="14" /&gt; &lt;a href="https://github.com/Dumpling-AI/mcp-server-dumplingai"&gt;Dumpling AI&lt;/a&gt; - Access data, web scraping, and document conversion APIs by &lt;a href="https://www.dumplingai.com/"&gt;Dumpling AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/curl/00ADD8" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/fetch"&gt;Fetch&lt;/a&gt; - Efficient web content fetching and processing for AI consumption&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/kagi/4173FF" height="14" /&gt; &lt;a href="https://github.com/ac3xx/mcp-servers-kagi"&gt;Kagi Search&lt;/a&gt; - TypeScript-based MCP server that integrates the Kagi Search API&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.tryleap.ai/assets/integrations/exa.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/exa-labs/exa-mcp-server"&gt;Exa Search&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Integration with Exa AI Search API for real-time web information retrieval&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/newyorktimes/E34234" height="14" /&gt; &lt;a href="https://github.com/angheljf/nyt"&gt;NYTimes&lt;/a&gt; - Search articles using the NYTimes API&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/googlenews/4285F4" height="14" /&gt; &lt;a href="https://github.com/ChanMeng666/server-google-news"&gt;Google News&lt;/a&gt; - Google News search with automatic categorization, multi-language support, and comprehensive search options&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://avatars.githubusercontent.com/u/175926811?v=4" height="14" /&gt; &lt;a href="https://github.com/scrapeless-ai/scrapeless-mcp-server"&gt;Scrapeless&lt;/a&gt; - The Scrapeless Model Context Protocol service acts as an MCP server connector to the Google SERP API, enabling web search within the MCP ecosystem without leaving it.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/7/7e/Vector_search_icon.svg/800px-Vector_search_icon.svg.png" height="14" /&gt; &lt;a href="https://github.com/fatwang2/search1api-mcp"&gt;Search1API&lt;/a&gt; - Search via search1api (requires paid API key)&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://github.com/user-attachments/assets/3c1cb503-11cc-4172-ac4e-73497b5eb3b8" height="14" /&gt; &lt;a href="https://github.com/damionrashford/RivalSearchMCP"&gt;RivalSearchMCP&lt;/a&gt; - A powerful MCP server providing a suite of tools for web search, content discovery, and automated research workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://tavily.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/Tomatio13/mcp-server-tavily"&gt;Tavily&lt;/a&gt; - Tavily AI search API integration&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/arxiv/B31B1B" height="14" /&gt; &lt;a href="https://github.com/blazickjp/arxiv-mcp-server"&gt;ArXiv&lt;/a&gt; - Search ArXiv research papers&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://github.com/user-attachments/assets/6f9c9a70-01c8-4255-abbe-66faf146970e" height="14" /&gt; &lt;a href="https://github.com/hbg/mcp-paperswithcode"&gt;PapersWithCode&lt;/a&gt; - Search research papers, conferences, and codebases through PapersWithCode API&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://playwright.dev/img/playwright-logo.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/executeautomation/mcp-playwright"&gt;Playwright&lt;/a&gt; - A Model Context Protocol server that provides browser automation capabilities using Playwright.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/searxng" height="14" /&gt; &lt;a href="https://github.com/mnhlt/WebSearch-MCP"&gt;Websearch&lt;/a&gt; - Self-hosted Websearch service.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/firefoxbrowser" height="14" /&gt; &lt;a href="https://github.com/eyalzh/browser-control-mcp"&gt;Browser Control&lt;/a&gt; - An MCP server paired with a browser extension allowing local browser control.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://blog.apify.com/content/images/2025/02/Apify_logo.png" height="14" /&gt; &lt;a href="https://github.com/apify/actors-mcp-server"&gt;Apify Actors&lt;/a&gt; - Use 4,000+ pre-built cloud tools, known as Actors, to extract data from websites, e-commerce, social media, search engines, maps, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://blog.apify.com/content/images/2025/02/Apify_logo.png" height="14" /&gt; &lt;a href="https://github.com/apify/mcp-server-rag-web-browser"&gt;RAG Web Browser&lt;/a&gt; - An MCP server for Apify's open-source RAG Web Browser Actor to perform web searches, scrape URLs, and return content in Markdown.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://framerusercontent.com/images/0Bw7GwbNXUBxOAp9pyM0VPOlphg.png" height="14" /&gt; &lt;a href="https://github.com/Skyvern-AI/skyvern/tree/main/integrations/mcp"&gt;Skyvern&lt;/a&gt; - MCP to let Claude or your own LLM control your browser&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://searx.space/favicon.png" height="14" /&gt; &lt;a href="https://github.com/ihor-sokoliuk/mcp-searxng"&gt;Ihor-Sokoliuk/MCP-SearXNG&lt;/a&gt; - A Model Context Protocol Server for &lt;a href="https://docs.searxng.org"&gt;SearXNG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://pragmar.com/media/static/images/mcp-server-webcrawl/favicon.png" height="14" /&gt; &lt;a href="https://github.com/pragmar/mcp-server-webcrawl"&gt;mcp-server-webcrawl&lt;/a&gt; - Advanced search and retrieval for web crawler data. Supports WARC, wget, Katana, SiteOne, and InterroBot crawlers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🗺️ &lt;a name="location-services"&gt;&lt;/a&gt;Location Services&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Geographic and location-based services integration. Enables access to mapping data, directions, and place information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://campertunity.com/assets/icon/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/campertunity/mcp-server"&gt;Campertunity&lt;/a&gt; - Search campgrounds around the world on campertunity, check availability, and provide booking links&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/googlemaps/4285F4" height="14" /&gt; &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/google-maps"&gt;Google Maps&lt;/a&gt; - Google Maps integration for location services, routing, and place details&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://static.iplocate.io/custom/logo-square-rounded.png" height="14" /&gt; &lt;a href="https://github.com/iplocate/mcp-server-iplocate"&gt;IPLocate&lt;/a&gt; - Look up IP address geolocation, network information, detect proxies and VPNs, and find abuse contact details using IPLocate.io&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.ip2location.io/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/ip2location/mcp-ip2location-io"&gt;IP2Location.io&lt;/a&gt; - IP2Location.io API integration to retrieve the geolocation information for an IP address.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.qgis.org/styleguide/visual/qgis-logo.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/jjsantos01/qgis_mcp"&gt;QGIS&lt;/a&gt; - connects QGIS Desktop to Claude AI through the MCP. This integration enables prompt-assisted project creation, layer loading, code execution, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🎯 &lt;a name="marketing"&gt;&lt;/a&gt;Marketing&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools that help marketers write better content and run better campaigns.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/analytics/4285F4" height="14" /&gt; &lt;a href="https://agentmindshare.com"&gt;Agent Mindshare&lt;/a&gt; - Track and monitor AI agent mindshare across platforms - measure brand visibility in AI conversations.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://openstrategypartners.com/fileadmin/Bilder/logo/OSP_logo_colors_green1.png" height="14" /&gt; &lt;a href="https://github.com/open-strategy-partners/osp_marketing_tools"&gt;Open Strategy Partners Marketing Tools&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - a standardized editing code system, writing guidelines, web metadata generator, and product communication framework.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/fathom/9187FF" height="14" /&gt; &lt;a href="https://github.com/mackenly/mcp-fathom-analytics"&gt;Fathom Analytics&lt;/a&gt; - Access Fathom Analytics data and reports about your sites&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://static.xx.fbcdn.net/rsrc.php/y9/r/tL_v571NdZ0.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/gomarble-ai/facebook-ads-mcp-server"&gt;Facebook Ads&lt;/a&gt; - MCP server acting as an interface to the Facebook Ads, enabling programmatic access to Facebook Ads data and management features.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.icons8.com/?size=48&amp;amp;id=ui4CTPMMDCFh&amp;amp;format=png" height="14" /&gt; &lt;a href="https://github.com/gomarble-ai/google-ads-mcp-server"&gt;Google Ads&lt;/a&gt; - MCP server acting as an interface to the Google Ads, enabling programmatic access to Google Ads data and management features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;📝 &lt;a name="note-taking"&gt;&lt;/a&gt;Note Taking&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Integration with note-taking applications and personal knowledge management tools. Enables access to notes, documents, and personal information stores.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://static.wikia.nocookie.net/logopedia/images/2/25/Apple_Books_%28iOS%29_2024_dark.svg/revision/latest?cb=20240616234654" height="14" /&gt; &lt;a href="https://github.com/vgnshiyer/apple-books-mcp"&gt;Apple Books&lt;/a&gt; - Transform your Apple Books to a queryable knowledge base.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://github.com/onebirdrocks/ebook-mcp/raw/refs/heads/main/favicon.png" alt="ebook-mcp Logo" height="14" /&gt; &lt;a href="https://github.com/onebirdrocks/ebook-mcp"&gt;eBook-mcp&lt;/a&gt; - A lightweight MCP server that allows LLMs to read and interact with your personal PDF and EPUB ebooks on your local machine. Ideal for building AI reading assistants or chat-based ebook interfaces.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/obsidian/7C3AED" height="14" /&gt; &lt;a href="https://github.com/MarkusPfundstein/mcp-obsidian"&gt;Obsidian&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - Obsidian vault integration with tools for file management, search, and content manipulation&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/obsidian/7C3AED" height="14" /&gt; &lt;a href="https://github.com/calclavia/mcp-obsidian"&gt;Obsidian&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - Alternative implementation for reading and searching Markdown notes&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/notion/787878" height="14" /&gt; &lt;a href="https://github.com/danhilse/notion_mcp"&gt;Notion&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - Notion API integration for managing personal todo lists and notes&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/notion/787878" height="14" /&gt; &lt;a href="https://github.com/suekou/mcp-notion-server"&gt;Notion&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - Alternative implementation for Notion API integration&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/apple/999999" height="14" /&gt; &lt;a href="https://github.com/sirmews/apple-notes-mcp"&gt;Apple Notes&lt;/a&gt; - Read from local Apple Notes database (macOS only)&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://pipedream.com/s.v0/app_Noh9dw/logo/orig" height="14" /&gt; &lt;a href="https://github.com/fajarmf/slite-mcp"&gt;Slite&lt;/a&gt; - Model Context Protocol server for Slite integration. Search and retrieve notes, browse note hierarchies, and access content from your Slite workspace.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/todoist/E44332" height="14" /&gt; &lt;a href="https://github.com/abhiz123/todoist-mcp-server"&gt;Todoist&lt;/a&gt; - An MCP server implementation for Todoist, enabling natural language task management.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/googlekeep/FFBB00" height="14" /&gt; &lt;a href="https://github.com/feuerdev/keep-mcp"&gt;Google Keep&lt;/a&gt; - Read, create, update and delete Google Keep notes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;⚡ &lt;a name="cloud-platforms"&gt;&lt;/a&gt;Cloud Platforms&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Cloud platform service integration. Enables management and interaction with cloud infrastructure and services.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/cloudflare/F38020" height="14" /&gt; &lt;a href="https://github.com/cloudflare/mcp-server-cloudflare"&gt;Cloudflare&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Integration with Cloudflare services including Workers, KV, R2, and D1&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/kubernetes/326CE5" height="14" /&gt; &lt;a href="https://github.com/strowk/mcp-k8s-go"&gt;Kubernetes&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - Kubernetes cluster operations through MCP&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/kubernetes/326CE5" height="14" /&gt; &lt;a href="https://github.com/weibaohui/k8m"&gt;Kubernetes&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - Kubernetes multi-cluster management and operations, featuring a management ui, logging, and nearly 50 built-in tools covering common DevOps and development scenarios. Supports both standard and CRD resources.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/kubernetes/326CE5" height="14" /&gt; &lt;a href="https://github.com/StacklokLabs/mkp"&gt;MKP&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/sup&gt; - Model Kontext Protocol Server for Kubernetes with native Go implementation, direct API integration, and comprehensive resource management&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://tinybird.co/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/tinybirdco/mcp-tinybird"&gt;Tinybird&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Interact with a Tinybird Workspace from any MCP client.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;⚙️ &lt;a name="workflow-automation"&gt;&lt;/a&gt;Workflow Automation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Integration with workflow automation platforms allows AI models to execute workflows and retrieve data back to their systems.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://www.make.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/integromat/make-mcp-server"&gt;Make&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Turn Make scenarios into callable tools for AI assistants.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.taskade.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/taskade/mcp"&gt;Taskade MCP&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Official Taskade MCP server + OpenAPI → MCP codegen to build AI agent tools from any API and connect Taskade to Claude, Cursor, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🤖 &lt;a name="system-automation"&gt;&lt;/a&gt;System Automation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools for shell access, system control, and task automation. Enables AI models to execute commands and interact with the operating system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://api.iconify.design/mdi:console.svg?color=%2390EE90" height="14" /&gt; &lt;a href="https://github.com/rusiaaman/wcgw"&gt;Shell&lt;/a&gt; - Autonomous shell execution and computer control (Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Windows_logo_-_2021.svg/1024px-Windows_logo_-_2021.svg.png" height="14" /&gt; &lt;a href="https://github.com/SimonB97/win-cli-mcp-server"&gt;Windows CLI&lt;/a&gt; - Windows CLI MCP Server for secure command-line interactions on Windows systems, enabling controlled access to PowerShell, CMD, and Git Bash shells.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Windows_logo_-_2021.svg/1024px-Windows_logo_-_2021.svg.png" height="14" /&gt; &lt;a href="https://github.com/Cheffromspace/nutjs-windows-control"&gt;Windows Control&lt;/a&gt; - Windows automation MCP server providing mouse, keyboard, screen capture, clipboard, and window management capabilities using NutJS.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/gnometerminal/2196F3" height="14" /&gt; &lt;a href="https://github.com/phialsbasement/cmd-mcp-server"&gt;Command Line&lt;/a&gt; - MCP server allowing any and all command execution over CMD(BE CAREFUL).&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/apple/999999" height="14" /&gt; &lt;a href="https://github.com/recursechat/mcp-server-apple-shortcuts"&gt;Apple Shortcuts&lt;/a&gt; - An MCP Server Integration with Apple Shortcuts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;📱 &lt;a name="social-media"&gt;&lt;/a&gt;Social Media&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Integration with social media platforms and content sharing services. Enables interaction with social networks and content platforms.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/bluesky/0085FF" height="14" /&gt; &lt;a href="https://github.com/keturiosakys/bluesky-context-server"&gt;BlueSky&lt;/a&gt; - Bluesky API integration for querying and searching feeds and posts&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/youtube/FF0000" height="14" /&gt; &lt;a href="https://github.com/anaisbetts/mcp-youtube"&gt;YouTube&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - YouTube integration using yt-dlp for subtitle downloading and video analysis&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/youtube/FF0000" height="14" /&gt; &lt;a href="https://github.com/kimtaeyoon83/mcp-server-youtube-transcript"&gt;YouTube&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - Alternative implementation for fetching YouTube subtitles and transcripts&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/spotify/1DB954" height="14" /&gt; &lt;a href="https://github.com/varunneal/spotify-mcp"&gt;Spotify&lt;/a&gt; - Connects with Spotify for playback control and track/album/artist/playlist management.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.worldvectorlogo.com/logos/tiktok-icon-2.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/Seym0n/tiktok-mcp"&gt;TikTok&lt;/a&gt; - TikTok integration for getting post details and video's subtitles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🎮 &lt;a name="gaming"&gt;&lt;/a&gt;Gaming&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Gaming data and Game Development tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/unity/899499" height="14" /&gt; &lt;a href="https://github.com/IvanMurzak/Unity-MCP"&gt;Unity Engine&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/sup&gt; - Tools for Unity Editor and for a game made with Unity&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/unity/899499" height="14" /&gt; &lt;a href="https://github.com/CoderGamester/mcp-unity"&gt;UnityEngine&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;2&lt;/sup&gt;&lt;/sup&gt; - Unity3d Game Engine integration for game development&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/unity/899499" height="14" /&gt; &lt;a href="https://github.com/codemaestroai/advanced-unity-mcp"&gt;Unity Engine&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;3&lt;/sup&gt;&lt;/sup&gt; - Advanced Unity MCP from Code Maestro. Build, debug, profile, and manage assets, scenes, and scripts with natural language via MCP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;💹 &lt;a name="finance"&gt;&lt;/a&gt;Finance&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Financial data and cryptocurrency information services.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://docs.octagonagents.com/logo.svg?sanitize=true" alt="Octagon Logo" height="14" /&gt; &lt;a href="https://github.com/OctagonAI/octagon-mcp-server"&gt;Octagon&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Deliver real-time market intelligence with extensive private and public market data.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/coinmarketcap/FF8C00" height="14" /&gt; &lt;a href="https://github.com/anjor/coinmarket-mcp-server"&gt;CoinMarket&lt;/a&gt; - Coinmarket API integration for cryptocurrency data&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.chargebee.com/static/resources/brand/favicon.png" height="14" /&gt; &lt;a href="https://github.com/chargebee/agentkit/tree/main/modelcontextprotocol"&gt;Chargebee&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - MCP Server that connects AI agents to &lt;a href="https://www.chargebee.com"&gt;Chargebee platform&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://dexpaprika.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/donbagger/dexpaprika-mcp-server"&gt;DexPaprika&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Comprehensive cryptocurrency and DEX data API across multiple blockchains, providing real-time token pricing, liquidity pools, and OHLCV data for market analysis&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.mercadopago.com/favicon.ico" height="14" alt="MercadoPago Logo" /&gt; &lt;a href="https://mcp.mercadopago.com/"&gt;Mercado Pago&lt;/a&gt; - Mercado Pago's official MCP server, offering tools to interact with our API, simplifing tasks and product integration.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.paypalobjects.com/webstatic/mktg/logo/pp_cc_mark_74x46.jpg" height="14" /&gt; &lt;a href="https://github.com/paypal/agent-toolkit/tree/main/modelcontextprotocol"&gt;PayPal&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - The PayPal Agent Toolkit enables popular agent frameworks including Model Context Protocol (MCP) to integrate with PayPal APIs through function calling.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/stripe" height="14" /&gt; &lt;a href="https://github.com/stripe/agent-toolkit/tree/main"&gt;Stripe&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Allows you to integrate with Stripe APIs&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://pub.pbkrs.com/files/202211/TNosrY77nCxm6rtU/logo-without-title.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/longportapp/openapi/tree/main/mcp"&gt;LongPort OpenAPI&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Provides real-time stock market data, provides AI access analysis and trading capabilities through MCP.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://zbd.gg/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/zebedeeio/zbd-payments-typescript-sdk/tree/main/packages/mcp-server"&gt;ZBD&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Interact with ZBD's payment processing APIs for instant global payments with Bitcoin and Lightning Network&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🧬 &lt;a name="research-data"&gt;&lt;/a&gt;Research &amp;amp; Data&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Access to research papers, genetic data, and specialized datasets.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/arxiv/B31B1B" height="14" /&gt; &lt;a href="https://github.com/blazickjp/arxiv-mcp-server"&gt;ArXiv&lt;/a&gt; - Search ArXiv research papers&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://api.iconify.design/mdi:dna.svg?color=%23E34234" height="14" /&gt; &lt;a href="https://github.com/reeeeemo/ancestry-mcp"&gt;Ancestry&lt;/a&gt; - Read .ged files and genetic data&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://probe.dev/favicon.ico" height="14" /&gt; &lt;a href="https://mcp.probe.dev"&gt;Probe.dev&lt;/a&gt; - Professional media analysis and validation MCP server with FFprobe, MediaInfo, and comprehensive reporting capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/apple/7ED957" height="14" /&gt; &lt;a href="https://github.com/deadletterq/mcp-opennutrition"&gt;OpenNutrition&lt;/a&gt; - Search 300,000+ foods, nutrition facts, and barcodes from the OpenNutrition database&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://congressmcp.lawgiver.ai/favicon.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/amurshak/congressMCP"&gt;Congress&lt;/a&gt; - Query and reeason about legislative data from Congress.gov&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🤝 &lt;a name="ai-services"&gt;&lt;/a&gt;AI Services&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Integration with AI and machine learning services.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://agentset.ai/screenshots/logo.png" height="14" /&gt; &lt;a href="https://github.com/agentset-ai/mcp-server"&gt;Agentset AI&lt;/a&gt; - RAG on your data using MCP protocol&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/openai/00A67E" height="14" /&gt; &lt;a href="https://github.com/pierrebrunelle/mcp-server-openai"&gt;OpenAI&lt;/a&gt; - Query OpenAI models directly from Claude using MCP protocol&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/openai/00A67E" height="14" /&gt; &lt;a href="https://github.com/pyroprompts/any-chat-completions-mcp"&gt;OpenAI Compatible Chat&lt;/a&gt; - Chat with models from OpenAI-compatible APIs (Perplexity, Groq, xAI, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/perplexity" height="14" /&gt; &lt;a href="https://github.com/tanigami/mcp-server-perplexity"&gt;Perplexity&lt;/a&gt; Chat with Perplexity via MCP&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cloud.llamaindex.ai/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/run-llama/mcp-server-llamacloud"&gt;LlamaCloud&lt;/a&gt; - LlamaCloud MCP Server. A TypeScript-based MCP server connecting to a managed index on LlamaCloud.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://huggingface.co/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/evalstate/mcp-hfspace"&gt;HuggingFace Spaces&lt;/a&gt; - Use HuggingFace spaces from your MCP Client. Supports Images, Audio, Text and more.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://piapi.ai/piapi_favicon.webp" height="14" /&gt; &lt;a href="https://github.com/apinetwork/piapi-mcp-server"&gt;PiAPI&lt;/a&gt; - PiAPI MCP server makes user able to generate media content with Midjourney/Flux/Kling/Hunyuan/Udio/Trellis directly from Claude or any other MCP-compatible apps.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.chronulus.com/favicon/chronulus-logo-blue-on-alpha-square-128x128.ico" alt="Chronulus AI Logo" height="14" width="14" /&gt; &lt;a href="https://github.com/ChronulusAI/chronulus-mcp"&gt;Chronulus AI&lt;/a&gt; - Predict anything with Chronulus AI multimodal forecasting and prediction agents (&lt;a href="https://youtube.com/playlist?list=PLPLu09ZbT8KKS04V6SSm2Acjv43FKq329&amp;amp;si=n2YER2in4gOqwssY"&gt;Watch Demos on Youtube&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.creatify.ai/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/TSavo/creatify-mcp"&gt;Creatify&lt;/a&gt; - MCP Server that exposes Creatify AI API capabilities for AI video generation, including avatar videos, URL-to-video conversion, text-to-speech, and AI-powered editing tools.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.svgrepo.com/show/495208/data.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/zenml-io/mcp-zenml"&gt;ZenML&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Chat with your MLOps and LLMOps pipelines using the &lt;a href="https://www.zenml.io"&gt;ZenML&lt;/a&gt; MCP server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;💻 &lt;a name="development-tools"&gt;&lt;/a&gt;Development Tools&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools and servers that assist with software development workflows. Enables integration with development-related services and APIs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://www.svgrepo.com/show/107853/uranus.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/centralmind/gateway"&gt;CentralMind/Gateway&lt;/a&gt; - MCP and MCP SSE Server that automatically generate production ready API based on database schema and data. Supports PostgreSQL, Clickhouse, MySQL, Snowflake, BigQuery, Supabase&lt;/li&gt; 
 &lt;li&gt;&lt;img src="http://currents.dev/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/currents-dev/currents-mcp"&gt;Currents&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Enable AI Agents to fix Playwright test failures reported to &lt;a href="https://currents.dev"&gt;Currents&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🐙 &lt;a href="https://github.com/bgauryy/octocode-mcp"&gt;Octocode&lt;/a&gt; - AI-powered developer assistant that enables advanced research, analysis and discovery and code generation across GitHub and NPM realms in realtime.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/kadykov/mcp-openapi-schema-explorer/main/assets/logo-400.png" height="14" /&gt; &lt;a href="https://github.com/kadykov/mcp-openapi-schema-explorer"&gt;OpenAPI Schema Explorer&lt;/a&gt; - Token-efficient access to OpenAPI/Swagger specs via MCP Resources.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/open-rpc/design/master/icons/open-rpc-logo-noText/open-rpc-logo-noText%20(PNG)/256x256.png" height="14" /&gt; &lt;a href="https://github.com/shanejonas/openrpc-mpc-server"&gt;OpenRPC&lt;/a&gt; - A Model Context Protocol server that provides JSON-RPC functionality through OpenRPC.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/postman" height="14" /&gt; &lt;a href="https://github.com/delano/postman-mcp-server"&gt;Postman&lt;/a&gt; - Interact with &lt;a href="https://www.postman.com/postman/postman-public-workspace/"&gt;Postman API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://marketing.qasphere.com/images/logo/qasphere-square-512.png" height="14" /&gt; &lt;a href="https://github.com/Hypersequent/qasphere-mcp"&gt;QA Sphere&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Integration with QA Sphere test management system, enabling LLMs to discover, summarize, and interact with test cases directly from AI-powered IDEs&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/marimo-team/marimo/main/docs/_static/marimo-logotype-thick.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/marimo-team/codemirror-mcp"&gt;marimo&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - CodeMirror extension that implements the Model Context Protocol (MCP) for resource mentions and prompt commands.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://static.figma.com/app/icon/1/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/GLips/Figma-Context-MCP"&gt;Figma&lt;/a&gt; - Paste a link to your Figma design to get its data in a ready-to-implement format.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.comet.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/comet-ml/opik-mcp"&gt;Comet Opik&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Query and interact with LLM observability and telemetry captured by &lt;a href="https://github.com/comet-ml/opik"&gt;Opik&lt;/a&gt; using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://vscode.dev/static/stable/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/biegehydra/BifrostMCP"&gt;VSCode Devtools&lt;/a&gt; - Connect to VSCode ide and allows using semantic tools like &lt;code&gt;find_usages&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://mastra.ai/favicon/icon.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/mastra-ai/mastra/tree/main/packages/mcp"&gt;Mastra/mcp&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Provides AI assistants with direct access to Mastra.ai's complete knowledge base.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://github.com/user-attachments/assets/9d517481-c4cd-4b6c-903a-878531c9d881" height="14" /&gt; &lt;a href="https://github.com/bucketco/bucket-javascript-sdk/tree/main/packages/cli#model-context-protocol"&gt;Bucket&lt;/a&gt; - Flag features, manage company data, and control feature access using &lt;a href="https://bucket.co"&gt;Bucket&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://edgeone.ai/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/TencentEdgeOne/edgeone-pages-mcp"&gt;EdgeOne Pages&lt;/a&gt; - A MCP service for deploying HTML content to EdgeOne Pages and obtaining a publicly accessible URL.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.jsdelivr.net/gh/jsdelivr/globalping-media@refs/heads/master/icons/android-chrome-192x192.png" height="14" /&gt; &lt;a href="https://github.com/jsdelivr/globalping-mcp-server"&gt;Globalping MCP&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Access a network of thousands of probes to run network commands like ping, traceroute, mtr, http and DNS resolve.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://gitkraken.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/gitkraken/gk-cli"&gt;GitKraken&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - A CLI for interacting with GitKraken APIs. Includes an MCP server via gk mcp that not only wraps GitKraken APIs, but also Jira, GitHub, GitLab, and more. Works with local tools and remote services.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/%5Bhttps://intayer.org/fav%5D(https://intlayer.org/favicon-32x32.png)" height="14" /&gt; &lt;a href="https://github.com/aymericzip/intlayer"&gt;aymericzip/intlayer&lt;/a&gt; - A MCP Server that enhance your IDE with AI-powered assistance for Intlayer i18n / CMS tool: smart CLI access, docs.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/jira/0052CC" height="14" /&gt; &lt;a href="https://github.com/tom28881/mcp-jira-server"&gt;tom28881/mcp-jira-server&lt;/a&gt; - Comprehensive TypeScript MCP server for Jira with 20+ tools covering complete project management workflow: issue CRUD, sprint management, comments/history, attachments, batch operations. Features universal field auto-detection, full Czech/localization support, and date parsing with multiple formats. Created by &lt;a href="https://www.linkedin.com/in/tom%C3%A1%C5%A1-g-8423b61a2/"&gt;Tomáš Gregorovič&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://maven.apache.org/images/maven-logo-black-on-white.png" height="14" /&gt; &lt;a href="https://github.com/arvindand/maven-tools-mcp"&gt;Maven Tools MCP&lt;/a&gt; - Maven Central dependency intelligence for JVM build tools (Maven, Gradle, SBT, Mill) with Context7 integration for documentation support.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://defang.io/favicon.png" height="14" /&gt; &lt;a href="https://github.com/DefangLabs/defang"&gt;DefangLabs/defang&lt;/a&gt; - CLI and MCP server for building and deploying Docker Compose-compatible projects to your own AWS, GCP, or DigitalOcean account.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;📊 &lt;a name="data-visualization"&gt;&lt;/a&gt;Data Visualization&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools for creating and managing data visualizations. Enables generation of charts, graphs, and other visual representations of data.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://vega.github.io/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/isaacwasserman/mcp-vegalite-server"&gt;VegaLite&lt;/a&gt; - Generate visualizations from fetched data using the VegaLite format and renderer.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://mdn.alipayobjects.com/huamei_qa8qxu/afts/img/A*ZFK8SrovcqgAAAAAAAAAAAAAemJ7AQ/original" height="14" /&gt; &lt;a href="https://github.com/antvis/mcp-server-chart"&gt;Chart&lt;/a&gt; - A Model Context Protocol server for generating visual charts using &lt;a href="https://github.com/antvis"&gt;AntV&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://echarts.apache.org/zh/images/favicon.png" height="14" /&gt; &lt;a href="https://github.com/hustcc/mcp-echarts"&gt;ECharts&lt;/a&gt; - Generate visual charts using &lt;a href="https://echarts.apache.org/"&gt;Apache ECharts&lt;/a&gt; with AI MCP dynamically.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://mermaid.js.org/favicon.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/hustcc/mcp-mermaid"&gt;Mermaid&lt;/a&gt; - Generate &lt;a href="https://mermaid.js.org/"&gt;mermaid&lt;/a&gt; diagram and chart with AI MCP dynamically.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.simpleicons.org/git/F05032" height="14" /&gt; &lt;a href="https://github.com/gorosun/unified-diff-mcp"&gt;unified-diff-mcp&lt;/a&gt; - Generate visual diff comparisons from text changes with HTML/PNG export. Perfect for code reviews and document analysis with side-by-side visualization.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🆔 &lt;a name="identity"&gt;&lt;/a&gt;Identity&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools for identity and access management. Enables user authentication, authorization.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/2/29/Keycloak_Logo.png" height="14" /&gt; &lt;a href="https://github.com/ChristophEnglisch/keycloak-model-context-protocol"&gt;Keycloak&lt;/a&gt; - MCP server implementation for managing Keycloak users, groups, and realms using natural language queries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🔗 &lt;a name="aggregators"&gt;&lt;/a&gt;Aggregators&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools for accessing many apps and tools through a single MCP server..&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;img height="12" width="12" src="https://github.com/mcpjungle/MCPJungle/raw/main/assets/logo.png" alt="MCPJungle Logo" /&gt; &lt;a href="https://github.com/mcpjungle/MCPJungle"&gt;MCPJungle&lt;/a&gt; - Self-hosted MCP Registry and Proxy for enterprise AI Agents.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;img height="12" width="12" src="https://platform.composio.dev/favicon.ico" alt="Composio Logo" /&gt; &lt;strong&gt;&lt;a href="https://rube.composio.dev"&gt;Rube&lt;/a&gt;&lt;/strong&gt; - Rube is a Model Context Protocol (MCP) server that connects your AI tools to 500+ apps like Gmail, Slack, GitHub, and Notion. Simply install it in your AI client, authenticate once with your apps, and start asking your AI to perform real actions like "Send an email" or "Create a task."&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;img height="12" width="12" src="https://pipedream.com/favicon.ico" alt="Pipedream Logo" /&gt; &lt;a href="https://github.com/PipedreamHQ/pipedream/tree/master/modelcontextprotocol"&gt;Pipedream&lt;/a&gt; - Connect with 2,500 APIs with 8,000+ prebuilt tools, and manage servers for your users, in your own app.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;img height="12" width="12" src="https://cdn.zapier.com/zapier/images/favicon.ico" alt="Zapier Logo" /&gt; &lt;a href="https://zapier.com/mcp"&gt;Zapier&lt;/a&gt; - Connect your AI Agents to 8,000 apps instantly.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;💬 &lt;a name="language"&gt;&lt;/a&gt;Language &amp;amp; Translation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Provides real-time translation of text, documents, and content between multiple languages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://laratranslate.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/translated/lara-mcp"&gt;Lara&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - MCP Server for Lara Translate API, enabling powerful translation capabilities with support for language detection and context-aware translations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🔒 &lt;a name="security"&gt;&lt;/a&gt;Security&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools for security needs. Enables securing code, finding vulnerabilies.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://semgrep.dev/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/semgrep/mcp"&gt;Semgrep&lt;/a&gt; - A MCP server for using &lt;a href="https://github.com/semgrep/semgrep"&gt;Semgrep&lt;/a&gt; to scan code for security vulnerabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Microsoft_Entra_ID_color_icon.svg/120px-Microsoft_Entra_ID_color_icon.svg.png" height="14" /&gt; &lt;a href="https://github.com/hieuttmmo/entraid-mcp-server"&gt;Microsoft Entra ID&lt;/a&gt; - A MCP server for interacting with EntraID through Microsoft Graph API. It is designed for extensibility, maintainability, and security, supporting advanced queries for users, sign-in logs, MFA status, privileged users and more.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://www.netwrix.com/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/netwrix/mcp-server-naa"&gt;Netwrix&lt;/a&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - A FastMCP-based server for &lt;a href="https://www.netwrix.com/access-analyzer.html"&gt;Netwrix Access Analyzer&lt;/a&gt; data analysis, designed for enhanced data analysis capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://osv.dev/favicon.ico" height="14" /&gt; &lt;a href="https://github.com/StacklokLabs/osv-mcp"&gt;OSV&lt;/a&gt; - Access the OSV (Open Source Vulnerabilities) database for vulnerability information. Query vulnerabilities by package version or commit, batch query multiple packages, and get detailed vulnerability information by ID.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.worldvectorlogo.com/logos/thales-1.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/sanyambassi/ciphertrust-manager-mcp-server"&gt;CDSP&lt;/a&gt; - MCP server for Thales CipherTrust Manager integration, enabling secure key management, cryptographic operations, and compliance monitoring through AI assistants.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.worldvectorlogo.com/logos/thales-1.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/sanyambassi/thales-cdsp-cakm-mcp-server"&gt;CAKM&lt;/a&gt; - MCP server for Thales CDSP CAKM integration, enabling secure key management, cryptographic operations, and compliance monitoring through AI assistants for Ms SQL and Oracle Databases.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.worldvectorlogo.com/logos/thales-1.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/sanyambassi/thales-cdsp-crdp-mcp-server"&gt;CRDP&lt;/a&gt; - MCP server for Thales CipherTrust Manager RestFul Data Protection service.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://cdn.worldvectorlogo.com/logos/thales-1.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/sanyambassi/thales-cdsp-csm-mcp-server"&gt;CSM&lt;/a&gt; - MCP server for Thales CipherTrust Secrets Management&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🔌 &lt;a name="iot"&gt;&lt;/a&gt;IoT&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools that integrate with Internet of Things connectivity.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://avatars.githubusercontent.com/u/66228869?s=200&amp;amp;v=4" height="14" /&gt; &lt;a href="https://github.com/CorefluxCommunity/CorefluxMCPServer"&gt;Coreflux MQTT&lt;/a&gt; - MCP server for the Coreflux MQTT broker, enabling AI agents to transfom the broker into a automation hub and interact with IoT devices and messaging systems through the MQTT protocol.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🧑‍🎨 &lt;a name="art-literature"&gt;&lt;/a&gt;Art &amp;amp; Literature&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Art and literature services.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://openlibrary.org/static/images/openlibrary-logo-tighter.svg?sanitize=true" height="14" /&gt; &lt;a href="https://github.com/8enSmith/mcp-open-library"&gt;MCP Open Library&lt;/a&gt; - A Model Context Protocol (MCP) server for the Internet Archive's Open Library API that enables AI assistants to search for book and author information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🛒 &lt;a name="e-commerce"&gt;&lt;/a&gt;E-Commerce&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;E-Commerce platforms.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://www.mercadolibre.com.ar/favicon.ico" height="14" alt="MercadoLibre Logo" /&gt; &lt;a href="https://mcp.mercadolibre.com/"&gt;Mercado Libre&lt;/a&gt; - Mercado Libre's official MCP server, offering tools to interact with our marketplace, simplifying tasks and product integration.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://shopsavvy.com/favicon.ico" height="14" alt="ShopSavvy Logo" /&gt; &lt;strong&gt;&lt;a href="https://github.com/shopsavvy/shopsavvy-mcp-server"&gt;ShopSavvy&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Complete product and pricing data solution for AI assistants. Search for products by barcode/ASIN/URL, access detailed product metadata, access comprehensive pricing data from thousands of retailers, view and track price history, and more. Published as &lt;code&gt;@shopsavvy/mcp-server&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;📦 &lt;a name="data-platforms"&gt;&lt;/a&gt;Data Platforms&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Platforms for orchestrating, transforming, and managing data pipelines. Enables AI agents to interact with complex ETL/ELT workflows, unify disparate data sources, and drive automated data operations across cloud and hybrid environments.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img height="12" width="12" src="https://connection.keboola.com/favicon.ico" alt="Keboola Logo" /&gt; &lt;strong&gt;&lt;a href="https://github.com/keboola/keboola-mcp-server"&gt;Keboola&lt;/a&gt;&lt;/strong&gt;&lt;sup&gt;&lt;sup&gt;⭐&lt;/sup&gt;&lt;/sup&gt; - Build robust data workflows, integrations, and analytics on a single intuitive platform.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;🤖 &lt;a name="robotics"&gt;&lt;/a&gt;Robotics &amp;amp; Physical AI&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Robotics, drones and physical AI.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img height="14" src="https://avatars.githubusercontent.com/u/224125194?s=200&amp;amp;v=4" alt="Extelligence Logo" /&gt; &lt;a href="https://github.com/Extelligence-ai/bagel"&gt;Bagel&lt;/a&gt; - ChatGPT for physical data. Troubleshoot your robots and drones with natural language. No fuss.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h1&gt;Tools &amp;amp; Utilities&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Tools that help manage, configure, and work with MCP servers. These utilities simplify the installation process and improve the user experience.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Server Managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/michaellatman/mcp-get"&gt;mcp-get&lt;/a&gt; - CLI tool for installing and managing MCP servers. Simplifies server installation and configuration for Claude Desktop. 
  &lt;ul&gt; 
   &lt;li&gt;Supports NPM-based servers&lt;/li&gt; 
   &lt;li&gt;Automatic configuration generation&lt;/li&gt; 
   &lt;li&gt;Easy server management&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/raw-labs/mxcp"&gt;mxcp&lt;/a&gt; - Open-source framework for building secure, testable, enterprise-grade MCP tools from SQL or Python on top of dbt + DuckDB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssut/Remote-MCP"&gt;Remote MCP&lt;/a&gt; - Solution to Remote MCP Communication, enabling effortless integration for centralized management of Model Context&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hamidra/yamcp"&gt;yamcp&lt;/a&gt; - A Model Context Workspace Manager. Oraganize your MCP servers in local workspaces (coding, design, research, ...), scan, monitor, and integrate each workspace with AI apps via a unified CLI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StacklokLabs/toolhive"&gt;ToolHive&lt;/a&gt; - A lightweight utility designed to simplify the deployment and management of MCP servers, ensuring ease of use, consistency, and security through containerization.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;p&gt;Please read the &lt;a href="https://raw.githubusercontent.com/appcypher/awesome-mcp-servers/main/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; if you want to contribute.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://creativecommons.org/publicdomain/zero/1.0/"&gt;&lt;img src="https://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg?sanitize=true" alt="CC0" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To the extent possible under law, &lt;a href="https://github.com/appcypher"&gt;Stephen Akinyemi&lt;/a&gt; has waived all copyright and related or neighboring rights to this work.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dotnet/eShop</title>
      <link>https://github.com/dotnet/eShop</link>
      <description>&lt;p&gt;A reference .NET application implementing an eCommerce site&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;eShop Reference Application - "AdventureWorks"&lt;/h1&gt; 
&lt;p&gt;A reference .NET application implementing an e-commerce website using a services-based architecture using &lt;a href="https://learn.microsoft.com/dotnet/aspire/"&gt;.NET Aspire&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_architecture.png" alt="eShop Reference Application architecture diagram" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dotnet/eShop/main/img/eshop_homepage.png" alt="eShop homepage screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;This version of eShop is based on .NET 9.&lt;/p&gt; 
&lt;p&gt;Previous eShop versions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dotnet/eShop/tree/release/8.0"&gt;.NET 8&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the eShop repository: &lt;a href="https://github.com/dotnet/eshop"&gt;https://github.com/dotnet/eshop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Install &amp;amp; start Docker Desktop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Windows with Visual Studio&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href="https://visualstudio.microsoft.com/vs/"&gt;Visual Studio 2022 version 17.10 or newer&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Select the following workloads: 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;ASP.NET and web development&lt;/code&gt; workload.&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;.NET Aspire SDK&lt;/code&gt; component in &lt;code&gt;Individual components&lt;/code&gt;.&lt;/li&gt; 
     &lt;li&gt;Optional: &lt;code&gt;.NET Multi-platform App UI development&lt;/code&gt; to run client apps&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the following commands in a Powershell &amp;amp; Terminal running as &lt;code&gt;Administrator&lt;/code&gt; to automatically configure your environment with the required tools to build and run this application. (Note: A restart is required and included in the script below.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;install-Module -Name Microsoft.WinGet.Configuration -AllowPrerelease -AcceptLicense -Force
$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
get-WinGetConfiguration -file .\.configurations\vside.dsc.yaml | Invoke-WinGetConfiguration -AcceptConfigurationAgreements
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;From Dev Home go to &lt;code&gt;Machine Configuration -&amp;gt; Clone repositories&lt;/code&gt;. Enter the URL for this repository. In the confirmation screen look for the section &lt;code&gt;Configuration File Detected&lt;/code&gt; and click &lt;code&gt;Run File&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Mac, Linux, &amp;amp; Windows without Visual Studio&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the latest &lt;a href="https://dot.net/download?cid=eshop"&gt;.NET 9 SDK&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run the following commands in a Powershell &amp;amp; Terminal running as &lt;code&gt;Administrator&lt;/code&gt; to automatically configuration your environment with the required tools to build and run this application. (Note: A restart is required after running the script below.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Install Visual Studio Code and related extensions&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;install-Module -Name Microsoft.WinGet.Configuration -AllowPrerelease -AcceptLicense  -Force
$env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
get-WinGetConfiguration -file .\.configurations\vscode.dsc.yaml | Invoke-WinGetConfiguration -AcceptConfigurationAgreements
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: These commands may require &lt;code&gt;sudo&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optional: Install &lt;a href="https://code.visualstudio.com/docs/csharp/get-started"&gt;Visual Studio Code with C# Dev Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Optional: Install &lt;a href="https://learn.microsoft.com/dotnet/maui/get-started/installation?tabs=visual-studio-code"&gt;.NET MAUI Workload&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When running on Mac with Apple Silicon (M series processor), Rosetta 2 for grpc-tools.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Running the solution&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Remember to ensure that Docker is started&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;(Windows only) Run the application from Visual Studio:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the &lt;code&gt;eShop.Web.slnf&lt;/code&gt; file in Visual Studio&lt;/li&gt; 
 &lt;li&gt;Ensure that &lt;code&gt;eShop.AppHost.csproj&lt;/code&gt; is your startup project&lt;/li&gt; 
 &lt;li&gt;Hit Ctrl-F5 to launch Aspire&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;Or run the application from your terminal:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;dotnet run --project src/eShop.AppHost/eShop.AppHost.csproj
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then look for lines like this in the console output in order to find the URL to open the Aspire dashboard:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;Login to the dashboard at: http://localhost:19888/login?t=uniquelogincodeforyou
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may need to install ASP.NET Core HTTPS development certificates first, and then close all browser tabs. Learn more at &lt;a href="https://aka.ms/aspnet/https-trust-dev-cert"&gt;https://aka.ms/aspnet/https-trust-dev-cert&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Azure Open AI&lt;/h3&gt; 
&lt;p&gt;When using Azure OpenAI, inside &lt;em&gt;eShop.AppHost/appsettings.json&lt;/em&gt;, add the following section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;  "ConnectionStrings": {
    "OpenAi": "Endpoint=xxx;Key=xxx;"
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace the values with your own. Then, in the eShop.AppHost &lt;em&gt;Program.cs&lt;/em&gt;, set this value to &lt;strong&gt;true&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-csharp"&gt;bool useOpenAI = false;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's additional guidance on the &lt;a href="https://learn.microsoft.com/dotnet/aspire/azureai/azureai-openai-component?tabs=dotnet-cli"&gt;.NET Aspire OpenAI component&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Use Azure Developer CLI&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;a href="https://aka.ms/azd"&gt;Azure Developer CLI&lt;/a&gt; to run this project on Azure with only a few commands. Follow the next instructions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the latest or update to the latest &lt;a href="https://aka.ms/azure-dev/install"&gt;Azure Developer CLI (azd)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in &lt;code&gt;azd&lt;/code&gt; (if you haven't done it before) to your Azure account:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;azd auth login
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Initialize &lt;code&gt;azd&lt;/code&gt; from the root of the repo.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;azd init
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;During init:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select &lt;code&gt;Use code in the current directory&lt;/code&gt;. Azd will automatically detect the .NET Aspire project.&lt;/li&gt; 
   &lt;li&gt;Confirm &lt;code&gt;.NET (Aspire)&lt;/code&gt; and continue.&lt;/li&gt; 
   &lt;li&gt;Select which services to expose to the Internet (exposing &lt;code&gt;webapp&lt;/code&gt; is enough to test the sample).&lt;/li&gt; 
   &lt;li&gt;Finalize the initialization by giving a name to your environment.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create Azure resources and deploy the sample by running:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;azd up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The operation takes a few minutes the first time it is ever run for an environment.&lt;/li&gt; 
 &lt;li&gt;At the end of the process, &lt;code&gt;azd&lt;/code&gt; will display the &lt;code&gt;url&lt;/code&gt; for the webapp. Follow that link to test the sample.&lt;/li&gt; 
 &lt;li&gt;You can run &lt;code&gt;azd up&lt;/code&gt; after saving changes to the sample to re-deploy and update the sample.&lt;/li&gt; 
 &lt;li&gt;Report any issues to &lt;a href="https://github.com/Azure/azure-dev/issues"&gt;azure-dev&lt;/a&gt; repo.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/azure/developer/azure-developer-cli/troubleshoot?tabs=Browser"&gt;FAQ and troubleshoot&lt;/a&gt; for azd.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For more information on contributing to this repo, read &lt;a href="https://raw.githubusercontent.com/dotnet/eShop/main/CONTRIBUTING.md"&gt;the contribution documentation&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/dotnet/eShop/main/CODE-OF-CONDUCT.md"&gt;the Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sample data&lt;/h3&gt; 
&lt;p&gt;The sample catalog data is defined in &lt;a href="https://github.com/dotnet/eShop/raw/main/src/Catalog.API/Setup/catalog.json"&gt;catalog.json&lt;/a&gt;. Those product names, descriptions, and brand names are fictional and were generated using &lt;a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/how-to/chatgpt"&gt;GPT-35-Turbo&lt;/a&gt;, and the corresponding &lt;a href="https://github.com/dotnet/eShop/tree/main/src/Catalog.API/Pics"&gt;product images&lt;/a&gt; were generated using &lt;a href="https://openai.com/dall-e-3"&gt;DALL·E 3&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;eShop on Azure&lt;/h2&gt; 
&lt;p&gt;For a version of this app configured for deployment on Azure, please view &lt;a href="https://github.com/Azure-Samples/eShopOnAzure"&gt;the eShop on Azure&lt;/a&gt; repo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JetBrains/koog</title>
      <link>https://github.com/JetBrains/koog</link>
      <description>&lt;p&gt;Koog is the official Kotlin framework for building and running robust, scalable and production-ready AI agents across all platforms – from backend services to Android and iOS, JVM, and even in-browser environments. Koog is based on our AI products expertise and provides proven solutions for complex LLM and AI problems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Koog&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://kotlinlang.org/docs/components-stability.html"&gt;&lt;img src="https://kotl.in/badges/alpha.svg?sanitize=true" alt="Kotlin Alpha" /&gt;&lt;/a&gt; &lt;a href="https://search.maven.org/artifact/ai.koog/koog-agents"&gt;&lt;img src="https://img.shields.io/maven-central/v/ai.koog/koog-agents" alt="Maven Central" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JetBrains#jetbrains-on-github"&gt;&lt;img src="https://jb.gg/badges/incubator.svg?sanitize=true" alt="JetBrains incubator project" /&gt;&lt;/a&gt; &lt;a href="http://kotlinlang.org"&gt;&lt;img src="https://img.shields.io/badge/kotlin-2.1-blue.svg?logo=kotlin" alt="Kotlin" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JetBrains/koog/actions?query=branch%3Amain"&gt;&lt;img src="https://img.shields.io/github/checks-status/JetBrains/koog/main" alt="CI status" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/JetBrains/koog/develop/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/github/license/JetBrains/koog" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://docs.koog.ai"&gt;&lt;img src="https://img.shields.io/badge/documentation-blue" alt="docs" /&gt;&lt;/a&gt; &lt;a href="https://kotlinlang.slack.com/messages/koog-agentic-framework/"&gt;&lt;img src="https://img.shields.io/badge/chat-slack-green.svg?logo=slack" alt="Slack channel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Koog is a Kotlin-based framework designed to build and run AI agents entirely in idiomatic Kotlin. It lets you create agents that can interact with tools, handle complex workflows, and communicate with users.&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;p&gt;Key features of Koog include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Pure Kotlin implementation&lt;/strong&gt;: Build AI agents entirely in natural and idiomatic Kotlin.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP integration&lt;/strong&gt;: Connect to Model Context Protocol for enhanced model management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Embedding capabilities&lt;/strong&gt;: Use vector embeddings for semantic search and knowledge retrieval.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom tool creation&lt;/strong&gt;: Extend your agents with tools that access external systems and APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ready-to-use components&lt;/strong&gt;: Speed up development with pre-built solutions for common AI engineering challenges.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent history compression&lt;/strong&gt;: Optimize token usage while maintaining conversation context using various pre-built strategies.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful Streaming API&lt;/strong&gt;: Process responses in real-time with streaming support and parallel tool calls.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent agent memory&lt;/strong&gt;: Enable knowledge retention across sessions and even different agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive tracing&lt;/strong&gt;: Debug and monitor agent execution with detailed and configurable tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible graph workflows&lt;/strong&gt;: Design complex agent behaviors using intuitive graph-based workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modular feature system&lt;/strong&gt;: Customize agent capabilities through a composable architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable architecture&lt;/strong&gt;: Handle workloads from simple chatbots to enterprise applications.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiplatform&lt;/strong&gt;: Run agents on JVM, JS, WasmJS, iOS targets with Kotlin Multiplatform.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Available LLM providers and platforms&lt;/h3&gt; 
&lt;p&gt;The LLM providers and platforms whose LLMs you can use to power your agent capabilities:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Google&lt;/li&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
 &lt;li&gt;Anthropic&lt;/li&gt; 
 &lt;li&gt;OpenRouter&lt;/li&gt; 
 &lt;li&gt;Ollama&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart example&lt;/h3&gt; 
&lt;p&gt;To help you get started with AI agents, here is a quick example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-kotlin"&gt;fun main() = runBlocking {
    // Before you run the example, assign a corresponding API key as an environment variable.
   val apiKey = System.getenv("OPENAI_API_KEY") // or Anthropic, Google, OpenRouter, etc.

   val agent = AIAgent(
      executor = simpleOpenAIExecutor(apiKey), // or Anthropic, Google, OpenRouter, etc.
      systemPrompt = "You are a helpful assistant. Answer user questions concisely.",
      llmModel = OpenAIModels.Chat.GPT4o
   )

   val result = agent.run("Hello! How can you help me?")
   println(result)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using in your projects&lt;/h2&gt; 
&lt;h3&gt;Supported targets&lt;/h3&gt; 
&lt;p&gt;Currently, the framework supports the JVM, JS, WasmJS and iOS targets.&lt;/p&gt; 
&lt;p&gt;On JVM, JDK 17 or higher is required to use the framework.&lt;/p&gt; 
&lt;p&gt;Please check the &lt;a href="https://raw.githubusercontent.com/JetBrains/koog/develop/gradle/libs.versions.toml"&gt;libs.versions.toml&lt;/a&gt; to know more about the Koog dependencies.&lt;/p&gt; 
&lt;h3&gt;Gradle (Kotlin DSL)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Add dependencies to the &lt;code&gt;build.gradle.kts&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dependencies {
    implementation("ai.koog:koog-agents:0.4.1")
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make sure that you have &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Gradle (Groovy)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Add dependencies to the &lt;code&gt;build.gradle&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;dependencies {
    implementation 'ai.koog:koog-agents:0.4.1'
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make sure that you have &lt;code&gt;mavenCentral()&lt;/code&gt; in the list of repositories.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Maven&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Add dependencies to the &lt;code&gt;pom.xml&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;
    &amp;lt;groupId&amp;gt;ai.koog&amp;lt;/groupId&amp;gt;
    &amp;lt;artifactId&amp;gt;koog-agents-jvm&amp;lt;/artifactId&amp;gt;
    &amp;lt;version&amp;gt;0.4.1&amp;lt;/version&amp;gt;
&amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Make sure that you have &lt;code&gt;mavenCentral&lt;/code&gt; in the list of repositories.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/JetBrains/koog/develop/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project and the corresponding community are governed by the &lt;a href="https://github.com/jetbrains#code-of-conduct"&gt;JetBrains Open Source and Community Code of Conduct&lt;/a&gt;. Please make sure you read it.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Koog is licensed under the &lt;a href="https://raw.githubusercontent.com/JetBrains/koog/develop/LICENSE.txt"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please feel free to ask any questions in our official Slack channel (&lt;a href="https://kotlinlang.slack.com/messages/koog-agentic-framework/"&gt;link&lt;/a&gt;) and to use &lt;a href="https://youtrack.jetbrains.com/issues/KG"&gt;Koog official YouTrack project&lt;/a&gt; for filing feature requests and bug reports.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ashishpatel26/500-AI-Agents-Projects</title>
      <link>https://github.com/ashishpatel26/500-AI-Agents-Projects</link>
      <description>&lt;p&gt;The 500 AI Agents Projects is a curated collection of AI agent use cases across various industries. It showcases practical applications and provides links to open-source projects for implementation, illustrating how AI agents are transforming sectors such as healthcare, finance, education, retail, and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌟 500+ AI Agent Projects / UseCases&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/ashishpatel26/500-AI-Agents-Projects"&gt;&lt;img src="https://img.shields.io/badge/500--AI--Agents--Projects-UseCase-2ea44f?logo=https%3A%2F%2Fstatic-00.iconduck.com%2Fassets.00%2Frobot-emoji-2048x2044-kay057lt.png&amp;amp;logoColor=2ea44f" alt="500-AI-Agents-Projects - UseCase" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/images/AIAgentUseCase.jpg" alt="img" /&gt;&lt;/p&gt; 
&lt;p&gt;A curated collection of AI agent use cases across industries, showcasing practical applications and linking to open-source projects for implementation. Explore how AI agents are transforming industries like healthcare, finance, education, and more! 🤖✨&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📋 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#-industry-usecase-mindmap"&gt;Industry Usecase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#use-case-table"&gt;Use Case Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#framework-wise-usecases"&gt;Framework Wise UseCase&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#framework-name-crewai"&gt;CrewAI UseCase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#framework-name-autogen"&gt;AutoGen UseCase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#framework-name-agno"&gt;Agno UseCase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#framework-name-langgraph"&gt;Langgraph UseCase&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧠 Introduction&lt;/h2&gt; 
&lt;p&gt;Artificial Intelligence (AI) agents are revolutionizing the way industries operate. From personalized learning to financial trading bots, AI agents bring efficiency, innovation, and scalability. This repository provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A categorized list of industries where AI agents are making an impact.&lt;/li&gt; 
 &lt;li&gt;Detailed use cases with links to open-source projects for implementation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Whether you're a developer, researcher, or business enthusiast, this repository is your go-to resource for AI agent inspiration and learning.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏭 Industry UseCase MindMap&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/images/industry_usecase1.png" alt="" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧩 Use Case Table&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
   &lt;th&gt;Industry&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Code Github&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;HIA (Health Insights Agent)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Healthcare&lt;/td&gt; 
   &lt;td&gt;analyses medical reports and provide health insights.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/harshhh28/hia.git"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AI Health Assistant&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Healthcare&lt;/td&gt; 
   &lt;td&gt;Diagnoses and monitors diseases using patient data.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ahmadvh/AI-Agents-for-Medical-Diagnostics.git"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Automated Trading Bot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Finance&lt;/td&gt; 
   &lt;td&gt;Automates stock trading with real-time market analysis.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MingyuJ666/Stockagent.git"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Virtual AI Tutor&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Education&lt;/td&gt; 
   &lt;td&gt;Provides personalized education tailored to users.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hqanhh/EduGPT.git"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;24/7 AI Chatbot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Customer Service&lt;/td&gt; 
   &lt;td&gt;Handles customer queries around the clock.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/NirDiamant/GenAI_Agents/raw/main/all_agents_tutorials/customer_support_agent_langgraph.ipynb"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Product Recommendation Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Retail&lt;/td&gt; 
   &lt;td&gt;Suggests products based on user preferences and history.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/RecAI"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Self-Driving Delivery Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Transportation&lt;/td&gt; 
   &lt;td&gt;Optimizes routes and autonomously delivers packages.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sled-group/driVLMe"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Factory Process Monitoring Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Manufacturing&lt;/td&gt; 
   &lt;td&gt;Monitors production lines and ensures quality control.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yuchenxia/llm4ias"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Property Pricing Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real Estate&lt;/td&gt; 
   &lt;td&gt;Analyzes market trends to determine property prices.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AleksNeStu/ai-real-estate-assistant"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Smart Farming Assistant&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Agriculture&lt;/td&gt; 
   &lt;td&gt;Provides insights on crop health and yield predictions.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mohammed97ashraf/LLM_Agri_Bot"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Energy Demand Forecasting Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Energy&lt;/td&gt; 
   &lt;td&gt;Predicts energy usage to optimize grid management.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yecchen/MIRAI"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Content Personalization Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Entertainment&lt;/td&gt; 
   &lt;td&gt;Recommends personalized media based on preferences.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crosleythomas/MirrorGPT"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Legal Document Review Assistant&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Legal&lt;/td&gt; 
   &lt;td&gt;Automates document review and highlights key clauses.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/firica/legalai"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Recruitment Recommendation Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Human Resources&lt;/td&gt; 
   &lt;td&gt;Suggests best-fit candidates for job openings.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sentient-engineering/jobber"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Virtual Travel Assistant&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Hospitality&lt;/td&gt; 
   &lt;td&gt;Plans travel itineraries based on preferences.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nirbar1985/ai-travel-agent"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AI Game Companion Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Gaming&lt;/td&gt; 
   &lt;td&gt;Enhances player experience with real-time assistance.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/onjas-buidl/LLM-agent-game"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Real-Time Threat Detection Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Cybersecurity&lt;/td&gt; 
   &lt;td&gt;Identifies potential threats and mitigates attacks.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/NVISOsecurity/cyber-security-llm-agents"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;E-commerce Personal Shopper Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;E-commerce&lt;/td&gt; 
   &lt;td&gt;Helps customers find products they’ll love.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Hoanganhvu123/ShoppingGPT"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Logistics Optimization Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Supply Chain&lt;/td&gt; 
   &lt;td&gt;Plans efficient delivery routes and manages inventory.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/OptiGuide"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Vibe Hacking Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Cybersecurity&lt;/td&gt; 
   &lt;td&gt;Autonomous Multi-Agent Based Red Team Testing Service.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PurpleAILAB/Decepticon"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;MediSuite-Ai-Agent&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Health insurance&lt;/td&gt; 
   &lt;td&gt;A medical ai agent that helps automating the process of hospitals / insurance claiming workflow.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MahmoudRabea13/MediSuite-Ai-Agent"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Lina-Egyptian-Medical-Chatbot&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Health insurance&lt;/td&gt; 
   &lt;td&gt;A medical ai agent that helps automating the process of hospitals / insurance claiming workflow.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MahmoudRabea13/MediSuite-Ai-Agent"&gt;&lt;img src="https://img.shields.io/badge/Code-GitHub-black?logo=github" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Framework wise Usecases&lt;/h2&gt; 
&lt;hr /&gt; 
&lt;h3&gt;&lt;strong&gt;Framework Name&lt;/strong&gt;: &lt;strong&gt;CrewAI&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
   &lt;th&gt;Industry&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;GitHub&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;📧 Email Auto Responder Flow&lt;/td&gt; 
   &lt;td&gt;🗣️ Communication&lt;/td&gt; 
   &lt;td&gt;Automates email responses based on predefined criteria to enhance communication efficiency.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/email_auto_responder_flow"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;📝 Meeting Assistant Flow&lt;/td&gt; 
   &lt;td&gt;🛠️ Productivity&lt;/td&gt; 
   &lt;td&gt;Assists in organizing and managing meetings, including scheduling and agenda preparation.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/meeting_assistant_flow"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🔄 Self Evaluation Loop Flow&lt;/td&gt; 
   &lt;td&gt;👥 Human Resources&lt;/td&gt; 
   &lt;td&gt;Facilitates self-assessment processes within an organization, aiding in performance reviews.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/self_evaluation_loop_flow"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;📈 Lead Score Flow&lt;/td&gt; 
   &lt;td&gt;💼 Sales&lt;/td&gt; 
   &lt;td&gt;Evaluates and scores potential leads to prioritize outreach in sales strategies.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/lead-score-flow"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;📊 Marketing Strategy Generator&lt;/td&gt; 
   &lt;td&gt;📢 Marketing&lt;/td&gt; 
   &lt;td&gt;Develops marketing strategies by analyzing market trends and audience data.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/marketing_strategy"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;📝 Job Posting Generator&lt;/td&gt; 
   &lt;td&gt;🧑‍💼 Recruitment&lt;/td&gt; 
   &lt;td&gt;Creates job postings by analyzing job requirements, aiding in recruitment processes.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/job-posting"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🔄 Recruitment Workflow&lt;/td&gt; 
   &lt;td&gt;🧑‍💼 Recruitment&lt;/td&gt; 
   &lt;td&gt;Streamlines the recruitment process by automating various tasks involved in hiring.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/recruitment"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🔍 Match Profile to Positions&lt;/td&gt; 
   &lt;td&gt;🧑‍💼 Recruitment&lt;/td&gt; 
   &lt;td&gt;Matches candidate profiles to suitable job positions to enhance recruitment efficiency.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/match_profile_to_positions"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;📸 Instagram Post Generator&lt;/td&gt; 
   &lt;td&gt;📱 Social Media&lt;/td&gt; 
   &lt;td&gt;Generates and schedules Instagram posts automatically, streamlining social media management.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/instagram_post"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🌐 Landing Page Generator&lt;/td&gt; 
   &lt;td&gt;💻 Web Development&lt;/td&gt; 
   &lt;td&gt;Automates the creation of landing pages for websites, facilitating web development tasks.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/landing_page_generator"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🎮 Game Builder Crew&lt;/td&gt; 
   &lt;td&gt;🎮 Game Development&lt;/td&gt; 
   &lt;td&gt;Assists in the development of games by automating certain aspects of game creation.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/game-builder-crew"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;💹 Stock Analysis Tool&lt;/td&gt; 
   &lt;td&gt;💰 Finance&lt;/td&gt; 
   &lt;td&gt;Provides tools for analyzing stock market data to assist in financial decision-making.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/stock_analysis"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🗺️ Trip Planner&lt;/td&gt; 
   &lt;td&gt;✈️ Travel&lt;/td&gt; 
   &lt;td&gt;Assists in planning trips by organizing itineraries and managing travel details.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/trip_planner"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🎁 Surprise Trip Planner&lt;/td&gt; 
   &lt;td&gt;✈️ Travel&lt;/td&gt; 
   &lt;td&gt;Plans surprise trips by selecting destinations and activities based on user preferences.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/surprise_trip"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;📚 Write a Book with Flows&lt;/td&gt; 
   &lt;td&gt;✍️ Creative Writing&lt;/td&gt; 
   &lt;td&gt;Assists authors in writing books by providing structured workflows and writing assistance.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/write_a_book_with_flows"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🎬 Screenplay Writer&lt;/td&gt; 
   &lt;td&gt;✍️ Creative Writing&lt;/td&gt; 
   &lt;td&gt;Aids in writing screenplays by offering templates and guidance for script development.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/screenplay_writer"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;✅ Markdown Validator&lt;/td&gt; 
   &lt;td&gt;📄 Documentation&lt;/td&gt; 
   &lt;td&gt;Validates Markdown files to ensure proper formatting and adherence to standards.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/markdown_validator"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🧠 Meta Quest Knowledge&lt;/td&gt; 
   &lt;td&gt;📚 Knowledge Management&lt;/td&gt; 
   &lt;td&gt;Manages and organizes knowledge related to Meta Quest, facilitating information retrieval.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/meta_quest_knowledge"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🤖 NVIDIA Models Integration&lt;/td&gt; 
   &lt;td&gt;🤖 AI Integration&lt;/td&gt; 
   &lt;td&gt;Integrates NVIDIA AI models into workflows to enhance computational capabilities.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/nvidia_models"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🗂️ Prep for a Meeting&lt;/td&gt; 
   &lt;td&gt;🛠️ Productivity&lt;/td&gt; 
   &lt;td&gt;Assists in preparing for meetings by organizing materials and setting agendas.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/prep-for-a-meeting"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🛠️Starter Template&lt;/td&gt; 
   &lt;td&gt;🛠️ Development&lt;/td&gt; 
   &lt;td&gt;Provides a starter template for new projects to streamline the setup process.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/crewAIInc/crewAI-examples/tree/main/starter_template"&gt;&lt;img src="https://img.shields.io/badge/GitHub-Repository-blue" alt="GitHub" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🔗CrewAI + LangGraph Integration&lt;/td&gt; 
   &lt;td&gt;🤖 AI Integration&lt;/td&gt; 
   &lt;td&gt;Demonstrates integration between CrewAI and LangGraph for enhanced workflow automation.&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;Framework Name&lt;/strong&gt;: &lt;strong&gt;Autogen&lt;/strong&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Code Generation, Execution, and Debugging&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
   &lt;th&gt;Industry&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🤖 Automated Task Solving with Code Generation, Execution &amp;amp; Debugging&lt;/td&gt; 
   &lt;td&gt;💻 Software Development&lt;/td&gt; 
   &lt;td&gt;Demonstrates automated task-solving by generating, executing, and debugging code.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_auto_feedback_from_code_execution"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🧑‍💻 Automated Code Generation and Question Answering with Retrieval Augmented Agents&lt;/td&gt; 
   &lt;td&gt;💻 Software Development&lt;/td&gt; 
   &lt;td&gt;Generates code and answers questions using retrieval-augmented methods.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_RetrieveChat"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;🧠 Automated Code Generation and Question Answering with Qdrant-based Retrieval&lt;/td&gt; 
   &lt;td&gt;💻 Software Development&lt;/td&gt; 
   &lt;td&gt;Utilizes Qdrant for enhanced retrieval-augmented agent performance.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_RetrieveChat_qdrant"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Multi-Agent Collaboration (&amp;gt;3 Agents)&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤝 Automated Task Solving by Group Chat (3 members, 1 manager)&lt;/td&gt; 
   &lt;td align="left"&gt;🤝 Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates group task-solving via multi-agent collaboration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_groupchat"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📊 Automated Data Visualization by Group Chat (3 members, 1 manager)&lt;/td&gt; 
   &lt;td align="left"&gt;📊 Data Analysis&lt;/td&gt; 
   &lt;td align="left"&gt;Uses multi-agent collaboration to create data visualizations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_groupchat_vis"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧩 Automated Complex Task Solving by Group Chat (6 members, 1 manager)&lt;/td&gt; 
   &lt;td align="left"&gt;🤝 Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;Solves complex tasks collaboratively with a larger group of agents.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_groupchat_research"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧑‍💻 Automated Task Solving with Coding &amp;amp; Planning Agents&lt;/td&gt; 
   &lt;td align="left"&gt;🛠️ Planning &amp;amp; Development&lt;/td&gt; 
   &lt;td align="left"&gt;Combines coding and planning agents for solving tasks effectively.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_planning.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📐 Automated Task Solving with Transition Paths Specified in a Graph&lt;/td&gt; 
   &lt;td align="left"&gt;🤝 Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;Uses predefined transition paths in a graph for solving tasks.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/docs/notebooks/agentchat_groupchat_finite_state_machine"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Running a Group Chat as an Inner-Monologue via the SocietyOfMindAgent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Cognitive Sciences&lt;/td&gt; 
   &lt;td align="left"&gt;Simulates inner-monologue for problem-solving using group chats.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_society_of_mind"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔧 Running a Group Chat with Custom Speaker Selection Function&lt;/td&gt; 
   &lt;td align="left"&gt;🤝 Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;Implements a custom function for speaker selection in group chats.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_groupchat_customized"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Sequential Multi-Agent Chats&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔄 Solving Multiple Tasks in a Sequence of Chats Initiated by a Single Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🔄 Workflow Automation&lt;/td&gt; 
   &lt;td align="left"&gt;Automates sequential task-solving with a single initiating agent.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_multi_task_chats"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;⏳ Async-solving Multiple Tasks in a Sequence of Chats Initiated by a Single Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🔄 Workflow Automation&lt;/td&gt; 
   &lt;td align="left"&gt;Handles asynchronous task-solving in a sequence of chats initiated by one agent.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_multi_task_async_chats"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤝 Solving Multiple Tasks in a Sequence of Chats Initiated by Different Agents&lt;/td&gt; 
   &lt;td align="left"&gt;🔄 Workflow Automation&lt;/td&gt; 
   &lt;td align="left"&gt;Facilitates sequential task-solving with different agents initiating each chat.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchats_sequential_chats"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Nested Chats&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Solving Complex Tasks with Nested Chats&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Problem Solving&lt;/td&gt; 
   &lt;td align="left"&gt;Uses nested chats to solve hierarchical and complex problems.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_nestedchat"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔄 Solving Complex Tasks with A Sequence of Nested Chats&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Problem Solving&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates sequential task-solving using nested chats.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_nested_sequential_chats"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🏭 OptiGuide for Solving a Supply Chain Optimization Problem with Nested Chats&lt;/td&gt; 
   &lt;td align="left"&gt;🏭 Supply Chain Optimization&lt;/td&gt; 
   &lt;td align="left"&gt;Showcases how to solve supply chain optimization problems using nested chats, a coding agent, and a safeguard agent.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_nestedchat_optiguide"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;♟️ Conversational Chess with Nested Chats and Tool Use&lt;/td&gt; 
   &lt;td align="left"&gt;🎮 Gaming&lt;/td&gt; 
   &lt;td align="left"&gt;Explores the use of nested chats for playing conversational chess with integrated tools.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_nested_chats_chess"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Application&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔄 Automated Continual Learning from New Data&lt;/td&gt; 
   &lt;td align="left"&gt;📊 Machine Learning&lt;/td&gt; 
   &lt;td align="left"&gt;Continuously learns from new data inputs for adaptive AI.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_stream.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🏭 OptiGuide - Coding, Tool Using, Safeguarding &amp;amp; Question Answering for Supply Chain Optimization&lt;/td&gt; 
   &lt;td align="left"&gt;🏭 Supply Chain Optimization&lt;/td&gt; 
   &lt;td align="left"&gt;Highlights a solution combining coding, tool use, and safeguarding for supply chain optimization.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_nestedchat_optiguide"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 AutoAnny - A Discord bot built using AutoGen&lt;/td&gt; 
   &lt;td align="left"&gt;💬 Communication Tools&lt;/td&gt; 
   &lt;td align="left"&gt;Showcases the development of a Discord bot using AutoGen for enhanced interaction.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/tree/main/samples/apps/auto-anny"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🌐 Web Search: Solve Tasks Requiring Web Info&lt;/td&gt; 
   &lt;td align="left"&gt;🔍 Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;Searches the web to gather information required for completing tasks.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_web_info.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔧 Use Provided Tools as Functions&lt;/td&gt; 
   &lt;td align="left"&gt;🛠️ Tool Integration&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates how to use pre-provided tools as callable functions in AutoGen.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_function_call_currency_calculator"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔗 Use Tools via Sync and Async Function Calling&lt;/td&gt; 
   &lt;td align="left"&gt;🛠️ Tool Integration&lt;/td&gt; 
   &lt;td align="left"&gt;Illustrates synchronous and asynchronous tool usage within AutoGen workflows.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_function_call_async"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧩 Task Solving with Langchain Provided Tools as Functions&lt;/td&gt; 
   &lt;td align="left"&gt;🔍 Language Processing&lt;/td&gt; 
   &lt;td align="left"&gt;Leverages Langchain tools for task-solving within AutoGen.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_langchain.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📚 RAG: Group Chat with Retrieval Augmented Generation&lt;/td&gt; 
   &lt;td align="left"&gt;🤝 Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;Enables group chat with Retrieval Augmented Generation (RAG) to support information sharing.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_groupchat_RAG"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;⚙️ Function Inception: Update/Remove Functions During Conversations&lt;/td&gt; 
   &lt;td align="left"&gt;🔧 Development Tools&lt;/td&gt; 
   &lt;td align="left"&gt;Allows AutoGen agents to modify their functions dynamically during conversations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_inception_function.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔊 Agent Chat with Whisper&lt;/td&gt; 
   &lt;td align="left"&gt;🎙️ Audio Processing&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates AI agent capabilities for transcription and translation using Whisper.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_video_transcript_translate_with_whisper"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📏 Constrained Responses via Guidance&lt;/td&gt; 
   &lt;td align="left"&gt;💡 Natural Language Processing&lt;/td&gt; 
   &lt;td align="left"&gt;Shows how to use guidance to constrain responses generated by agents.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_guidance.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🌍 Browse the Web with Agents&lt;/td&gt; 
   &lt;td align="left"&gt;🌐 Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;Explains how to configure agents to browse and retrieve information from the web.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_surfer.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📊 SQL: Natural Language Text to SQL Query Using Spider Benchmark&lt;/td&gt; 
   &lt;td align="left"&gt;💾 Database Management&lt;/td&gt; 
   &lt;td align="left"&gt;Converts natural language inputs into SQL queries using the Spider benchmark.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_sql_spider.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🕸️ Web Scraping with Apify&lt;/td&gt; 
   &lt;td align="left"&gt;🌐 Data Gathering&lt;/td&gt; 
   &lt;td align="left"&gt;Illustrates web scraping techniques with Apify using AutoGen.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_webscraping_with_apify"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🕷️ Web Crawling: Crawl Entire Domain with Spider API&lt;/td&gt; 
   &lt;td align="left"&gt;🌐 Data Gathering&lt;/td&gt; 
   &lt;td align="left"&gt;Explains how to crawl entire domains using the Spider API.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_webcrawling_with_spider"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;💻 Write a Software App Task by Task with Specially Designed Functions&lt;/td&gt; 
   &lt;td align="left"&gt;💻 Software Development&lt;/td&gt; 
   &lt;td align="left"&gt;Builds a software application step-by-step using designed functions.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_function_call_code_writing.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Human Development&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;💬 Simple Example in ChatGPT Style&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Conversational AI&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates a simple conversational example in the style of ChatGPT.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/samples/simple_chat.py"&gt;&lt;img src="https://img.shields.io/badge/View-Example-blue?logo=openai" alt="Example" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 Auto Code Generation, Execution, Debugging and Human Feedback&lt;/td&gt; 
   &lt;td align="left"&gt;💻 Software Development&lt;/td&gt; 
   &lt;td align="left"&gt;Showcases code generation, execution, debugging with human feedback integrated into the workflow.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_human_feedback.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;👥 Automated Task Solving with GPT-4 + Multiple Human Users&lt;/td&gt; 
   &lt;td align="left"&gt;🤝 Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;Enables task solving with multiple human users collaborating with GPT-4.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_two_users.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔄 Agent Chat with Async Human Inputs&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Conversational AI&lt;/td&gt; 
   &lt;td align="left"&gt;Supports asynchronous human input during agent conversations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/Async_human_input.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Agent Teaching and Learning&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📘 Teach Agents New Skills &amp;amp; Reuse via Automated Chat&lt;/td&gt; 
   &lt;td align="left"&gt;🎓 Education &amp;amp; Training&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates teaching new skills to agents and enabling their reuse in automated chats.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_teaching"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Teach Agents New Facts, User Preferences and Skills Beyond Coding&lt;/td&gt; 
   &lt;td align="left"&gt;🎓 Education &amp;amp; Training&lt;/td&gt; 
   &lt;td align="left"&gt;Shows how to teach agents new facts, user preferences, and non-coding skills.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_teachability"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 Teach OpenAI Assistants Through GPTAssistantAgent&lt;/td&gt; 
   &lt;td align="left"&gt;💻 AI Assistant Development&lt;/td&gt; 
   &lt;td align="left"&gt;Illustrates how to enhance OpenAI assistants' capabilities using GPTAssistantAgent.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_teachable_oai_assistants.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔄 Agent Optimizer: Train Agents in an Agentic Way&lt;/td&gt; 
   &lt;td align="left"&gt;🛠️ Optimization&lt;/td&gt; 
   &lt;td align="left"&gt;Explains how to train agents effectively in an agentic manner using the Agent Optimizer.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_agentoptimizer.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Multi-Agent Chat with OpenAI Assistants in the loop&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🌟 Hello-World Chat with OpenAI Assistant in AutoGen&lt;/td&gt; 
   &lt;td align="left"&gt;🤖 Conversational AI&lt;/td&gt; 
   &lt;td align="left"&gt;A basic example of chatting with OpenAI Assistant using AutoGen.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_oai_assistant_twoagents_basic.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔧 Chat with OpenAI Assistant using Function Call&lt;/td&gt; 
   &lt;td align="left"&gt;🔧 Development Tools&lt;/td&gt; 
   &lt;td align="left"&gt;Illustrates how to use function calls with OpenAI Assistant in chats.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_oai_assistant_function_call.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Chat with OpenAI Assistant with Code Interpreter&lt;/td&gt; 
   &lt;td align="left"&gt;💻 Software Development&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates the use of OpenAI Assistant as a code interpreter in chats.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_oai_code_interpreter.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔍 Chat with OpenAI Assistant with Retrieval Augmentation&lt;/td&gt; 
   &lt;td align="left"&gt;📚 Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;Enables retrieval-augmented conversations with OpenAI Assistant.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_oai_assistant_retrieval.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤝 OpenAI Assistant in a Group Chat&lt;/td&gt; 
   &lt;td align="left"&gt;🤝 Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;Shows how OpenAI Assistant can collaborate with other agents in a group chat.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_oai_assistant_groupchat.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🛠️ GPTAssistantAgent based Multi-Agent Tool Use&lt;/td&gt; 
   &lt;td align="left"&gt;🔧 Development Tools&lt;/td&gt; 
   &lt;td align="left"&gt;Explains how to use GPTAssistantAgent for multi-agent tool usage.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/gpt_assistant_agent_function_call.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Non-OpenAI Models&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;♟️ Conversational Chess using Non-OpenAI Models&lt;/td&gt; 
   &lt;td align="left"&gt;🎮 Gaming&lt;/td&gt; 
   &lt;td align="left"&gt;Explores conversational chess implemented with non-OpenAI models.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_nested_chats_chess_altmodels"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Multimodal Agent&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🎨 Multimodal Agent Chat with DALLE and GPT-4V&lt;/td&gt; 
   &lt;td align="left"&gt;🖼️ Multimedia AI&lt;/td&gt; 
   &lt;td align="left"&gt;Combines DALLE and GPT-4V for multimodal agent communication.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_dalle_and_gpt4v.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🖌️ Multimodal Agent Chat with Llava&lt;/td&gt; 
   &lt;td align="left"&gt;📷 Image Processing&lt;/td&gt; 
   &lt;td align="left"&gt;Uses Llava for enabling multimodal agent conversations with image processing.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_lmm_llava.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🖼️ Multimodal Agent Chat with GPT-4V&lt;/td&gt; 
   &lt;td align="left"&gt;🖼️ Multimedia AI&lt;/td&gt; 
   &lt;td align="left"&gt;Leverages GPT-4V for visual and conversational interactions in multimodal agents.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_lmm_gpt-4v.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Long Context Handling&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📜 Long Context Handling as A Capability&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI Capability&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates techniques for handling long context effectively within AI workflows.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/notebooks/agentchat_transform_messages"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Evaluation and Assessment&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📊 AgentEval: A Multi-Agent System for Assessing Utility of LLM-Powered Applications&lt;/td&gt; 
   &lt;td align="left"&gt;📈 Performance Evaluation&lt;/td&gt; 
   &lt;td align="left"&gt;Introduces AgentEval for evaluating and assessing the performance of LLM-based applications.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agenteval_cq_math.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Automatic Agent Building&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🏗️ Automatically Build Multi-agent System with AgentBuilder&lt;/td&gt; 
   &lt;td align="left"&gt;🤖 AI Development&lt;/td&gt; 
   &lt;td align="left"&gt;Explains how to automatically build multi-agent systems using the AgentBuilder tool.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/autobuild_basic.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📚 Automatically Build Multi-agent System from Agent Library&lt;/td&gt; 
   &lt;td align="left"&gt;🤖 AI Development&lt;/td&gt; 
   &lt;td align="left"&gt;Shows how to construct multi-agent systems by leveraging a pre-defined agent library.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/autobuild_agent_library.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Observability&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📊 Track LLM Calls, Tool Usage, Actions and Errors using AgentOps&lt;/td&gt; 
   &lt;td align="left"&gt;📈 Monitoring &amp;amp; Analytics&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates how to monitor LLM interactions, tool usage, and errors using AgentOps.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_agentops.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Enhanced Inferences&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔗 API Unification&lt;/td&gt; 
   &lt;td align="left"&gt;🔧 API Management&lt;/td&gt; 
   &lt;td align="left"&gt;Explains how to unify API usage with documentation and code examples.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/docs/Use-Cases/enhanced_inference/#api-unification"&gt;&lt;img src="https://img.shields.io/badge/View-Documentation-blue?logo=readthedocs" alt="Documentation" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;⚙️ Utility Functions to Help Managing API Configurations Effectively&lt;/td&gt; 
   &lt;td align="left"&gt;🔧 API Management&lt;/td&gt; 
   &lt;td align="left"&gt;Demonstrates utility functions to manage API configurations more effectively.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://microsoft.github.io/autogen/0.2/docs/topics/llm_configuration"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;💰 Cost Calculation&lt;/td&gt; 
   &lt;td align="left"&gt;📈 Cost Management&lt;/td&gt; 
   &lt;td align="left"&gt;Introduces methods for tracking token usage and estimating costs for LLM interactions.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/agentchat_cost_token_tracking.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;⚡ Optimize for Code Generation&lt;/td&gt; 
   &lt;td align="left"&gt;📊 Optimization&lt;/td&gt; 
   &lt;td align="left"&gt;Highlights cost-effective optimization techniques for improving code generation with LLMs.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/oai_completion.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📐 Optimize for Math&lt;/td&gt; 
   &lt;td align="left"&gt;📊 Optimization&lt;/td&gt; 
   &lt;td align="left"&gt;Explains techniques to optimize LLM performance for solving mathematical problems.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/microsoft/autogen/raw/0.2/notebook/oai_chatgpt_gpt4.ipynb"&gt;&lt;img src="https://img.shields.io/badge/View-Notebook-blue?logo=jupyter" alt="Notebook" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;Framework Name&lt;/strong&gt;: &lt;strong&gt;Agno&lt;/strong&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;UseCase&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 Support Agent&lt;/td&gt; 
   &lt;td align="left"&gt;💻 Software Development / AI / Framework Support&lt;/td&gt; 
   &lt;td align="left"&gt;The Agno Support Agent helps developers with the Agno framework by providing real-time answers, explanations, and code examples.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/agno_support_agent.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🎥 YouTube Agent&lt;/td&gt; 
   &lt;td align="left"&gt;📺 Media &amp;amp; Content&lt;/td&gt; 
   &lt;td align="left"&gt;An intelligent agent that analyzes YouTube videos by generating detailed summaries, timestamps, themes, and content breakdowns using AI tools.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/youtube_agent.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📊 Finance Agent&lt;/td&gt; 
   &lt;td align="left"&gt;💼 Finance&lt;/td&gt; 
   &lt;td align="left"&gt;An advanced AI-powered market analyst that delivers real-time stock market insights, analyst recommendations, financial deep-dives, and sector-specific trends. Supports prompts for detailed analysis of companies like AAPL, TSLA, NVDA, etc.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/thinking_finance_agent.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📚 Study Partner&lt;/td&gt; 
   &lt;td align="left"&gt;🎓 Education&lt;/td&gt; 
   &lt;td align="left"&gt;Assists users in learning by finding resources, answering questions, and creating study plans.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/study_partner.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🛍️ Shopping Partner Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🏬 E-commerce&lt;/td&gt; 
   &lt;td align="left"&gt;A product recommender agent that helps users find matching products based on preferences from trusted platforms like Amazon, Flipkart, etc.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/shopping_partner.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🎓 Research Scholar Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Education / Research&lt;/td&gt; 
   &lt;td align="left"&gt;An AI-powered academic assistant that performs advanced academic searches, analyzes recent publications, synthesizes findings across disciplines, and writes well-structured academic reports with proper citations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/research_agent_exa.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Research Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🗞️ Media &amp;amp; Journalism&lt;/td&gt; 
   &lt;td align="left"&gt;A research agent that combines web search and professional journalistic writing. It performs deep investigations and produces NYT-style reports.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/research_agent.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🍳 Recipe Creator&lt;/td&gt; 
   &lt;td align="left"&gt;🍽️ Food &amp;amp; Culinary&lt;/td&gt; 
   &lt;td align="left"&gt;An AI-powered recipe recommendation agent that provides personalized recipes based on ingredients, preferences, and time constraints.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/recipe_creator.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🗞️ Finance Agent&lt;/td&gt; 
   &lt;td align="left"&gt;💼 Finance&lt;/td&gt; 
   &lt;td align="left"&gt;A powerful financial analyst agent combining real-time stock data, analyst insights, company fundamentals, and market news. Ideal for analyzing companies like Apple, Tesla, NVIDIA, and sectors like semiconductors or automotive.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/finance_agent.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Financial Reasoning Agent&lt;/td&gt; 
   &lt;td align="left"&gt;📈 Finance&lt;/td&gt; 
   &lt;td align="left"&gt;Uses a Claude-3.5 Sonnet-based agent to analyze stocks like NVDA using tools for reasoning and Yahoo Finance data.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/reasoning_finance_agent.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 Readme Generator Agent&lt;/td&gt; 
   &lt;td align="left"&gt;💻 Software Dev&lt;/td&gt; 
   &lt;td align="left"&gt;Agent generates high-quality READMEs for GitHub repositories using repo metadata.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/readme_generator.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🎬 Movie Recommendation Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🎥 Entertainment&lt;/td&gt; 
   &lt;td align="left"&gt;An intelligent agent that gives personalized movie recommendations using Exa and GPT-4o, analyzing genres, themes, and latest ratings.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/movie_recommedation.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔍 Media Trend Analysis Agent&lt;/td&gt; 
   &lt;td align="left"&gt;📰 Media &amp;amp; News&lt;/td&gt; 
   &lt;td align="left"&gt;Analyzes emerging trends, patterns, and influencers from digital platforms using AI-powered agents and scraping.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/media_trend_analysis_agent.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;⚖️ Legal Document Analysis Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🏛️ Legal Tech&lt;/td&gt; 
   &lt;td align="left"&gt;An AI agent that analyzes legal documents from PDF URLs and provides legal insights based on a knowledge base using vector embeddings and GPT-4o.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/legal_consultant.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤔 DeepKnowledge&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Research&lt;/td&gt; 
   &lt;td align="left"&gt;This agent performs iterative searches through its knowledge base, breaking down complex queries into sub-questions and synthesizing comprehensive answers. It uses Agno docs for demonstration and is designed for deep reasoning and exploration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/deep_knowledge.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;📚 Book Recommendation Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 Publishing &amp;amp; Media&lt;/td&gt; 
   &lt;td align="left"&gt;An intelligent agent that provides personalized book suggestions using literary data, reader preferences, reviews, and release info.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/book_recommendation.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🏠 MCP Airbnb Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🛎️ Hospitality&lt;/td&gt; 
   &lt;td align="left"&gt;Create an AI Agent using MCP and Llama 4 to search Airbnb listings with filters like workspace &amp;amp; transport proximity.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/airbnb_mcp.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 Assist Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI Framework&lt;/td&gt; 
   &lt;td align="left"&gt;An AI agent using GPT-4o to answer questions about the Agno framework with hybrid search and embedded knowledge.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agno-agi/agno/raw/main/cookbook/examples/agents/agno_assist.py"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;Framework Name&lt;/strong&gt;: &lt;strong&gt;Langgraph&lt;/strong&gt;&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;UseCase&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Use Case&lt;/th&gt; 
   &lt;th align="left"&gt;Industry&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Notebook&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 Chatbot Simulation Evaluation&lt;/td&gt; 
   &lt;td align="left"&gt;💻 💬 AI / Quality Assurance&lt;/td&gt; 
   &lt;td align="left"&gt;Simulate user interactions to evaluate chatbot performance, ensuring robustness and reliability in real-world scenarios.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/chatbot-simulation-evaluation/agent-simulation-evaluation.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Information Gathering via Prompting&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Research &amp;amp; Development&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to design a LangGraph workflow that utilizes prompting techniques to gather information effectively. It showcases how to structure prompts and manage the flow of information to build intelligent agents.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/chatbots/information-gather-prompting.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Code Assistant with LangGraph&lt;/td&gt; 
   &lt;td align="left"&gt;💻 Software Development&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build a resilient code assistant using LangGraph. It guides you through creating a graph-based agent that can handle code generation, error checking, and iterative refinement, ensuring robust and accurate coding assistance.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/code_assistant/langgraph_code_assistant.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧑‍💼 Customer Support Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧑‍💼 Customer Support Agent&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build a customer support agent using LangGraph. It guides you through creating a graph-based agent that can handle customer inquiries, providing automated support and enhancing user experience.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/customer-support/customer-support.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🔁 Extraction with Retries&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Data Extraction&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to implement retry mechanisms in LangGraph workflows, ensuring robust data extraction processes that can handle transient errors and improve reliability.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/extraction/retries.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Multi-Agent Workflow&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Workflow Orchestration&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build a multi-agent system using LangGraph's agent supervisor. It guides you through creating a supervisor agent that orchestrates multiple specialized agents, managing task delegation and communication flow.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/multi_agent/agent_supervisor.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Hierarchical Agent Teams&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Workflow Orchestration&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build a hierarchical agent system using LangGraph. It guides you through creating a top-level supervisor agent that delegates tasks to specialized sub-agents, enabling complex workflows with clear task delegation and communication.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/multi_agent/hierarchical_agent_teams.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤝 Multi-Agent Collaboration&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Workflow Orchestration&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to implement multi-agent collaboration using LangGraph. It guides you through creating multiple specialized agents that work together to accomplish a complex task, showcasing the power of agent collaboration in AI workflows.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/multi_agent/multi-agent-collaboration.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Plan-and-Execute Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Workflow Orchestration&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build a "Plan-and-Execute" style agent using LangGraph. It guides you through creating an agent that first generates a multi-step plan and then executes each step sequentially, revisiting and modifying the plan as necessary. This approach is inspired by the Plan-and-Solve paper and the Baby-AGI project, aiming to enhance long-term planning and task execution in AI workflows.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/plan-and-execute/plan-and-execute.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 SQL Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Database Interaction&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build an agent that can answer questions about a SQL database. The agent fetches available tables, determines relevance to the question, retrieves schemas, generates a query, checks for errors, executes it, and formulates a response.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/sql-agent.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Reflection Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Workflow Orchestration&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build a reflection agent using LangGraph. It guides you through creating an agent that can critique and revise its own outputs, enhancing the quality and reliability of generated content.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/reflection/reflection.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 Reflexion Agent&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Workflow Orchestration&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build a reflexion agent using LangGraph. It guides you through creating an agent that can reflect on its actions and outcomes, enabling iterative improvement and more accurate decision-making in complex workflows.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/reflexion/reflexion.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;strong&gt;LangGraph Agentic RAG&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 &lt;strong&gt;Adaptive RAG&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to build an Adaptive RAG system using LangGraph. It guides you through creating a dynamic retrieval process that adjusts based on query complexity, enhancing the efficiency and accuracy of information retrieval.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_adaptive_rag.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 &lt;strong&gt;Adaptive RAG (Local)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial focuses on implementing Adaptive RAG with local models, allowing for offline retrieval and generation, which is crucial for environments with limited internet access or privacy concerns.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_adaptive_rag_local.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 &lt;strong&gt;Agentic RAG&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🤖 AI / Intelligent Agents&lt;/td&gt; 
   &lt;td align="left"&gt;Learn to build an Agentic RAG system where an agent determines the best retrieval strategy before generating a response, improving the relevance and accuracy of answers.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_agentic_rag.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🤖 &lt;strong&gt;Agentic RAG (Local)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🤖 AI / Intelligent Agents&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial extends Agentic RAG to local environments, enabling the use of local models and data sources for retrieval and generation tasks.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_agentic_rag_local.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 &lt;strong&gt;Corrective RAG (CRAG)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;Implement a Corrective RAG system that evaluates and refines retrieved documents before passing them to the generator, ensuring higher-quality outputs.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_crag.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 &lt;strong&gt;Corrective RAG (Local)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial focuses on building a Corrective RAG system using local resources, allowing for offline document evaluation and refinement processes.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_crag_local.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 &lt;strong&gt;Self-RAG&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;Learn to implement Self-RAG, where the system reflects on its responses and retrieves additional information if necessary, enhancing the accuracy and relevance of generated content.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_self_rag.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;🧠 &lt;strong&gt;Self-RAG (Local)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;🧠 AI / Information Retrieval&lt;/td&gt; 
   &lt;td align="left"&gt;This tutorial demonstrates how to implement Self-RAG using local models and data sources, enabling offline reflection and retrieval processes.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/langchain-ai/langgraph/raw/main/docs/docs/tutorials/rag/langgraph_self_rag_local.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1?label=AI+Agent+Code&amp;amp;message=Python&amp;amp;color=%23244cd1" alt="AI Agent Code - Python" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! 🎉 Here's how you can help:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository.&lt;/li&gt; 
 &lt;li&gt;Add a new use case or improve an existing one.&lt;/li&gt; 
 &lt;li&gt;Submit a pull request with your changes.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please follow our &lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/ashishpatel26/500-AI-Agents-Projects/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Let's Build Together!&lt;/h2&gt; 
&lt;p&gt;Feel free to share this repository with your network and star ⭐ it if you find it useful. Let’s collaborate to create the ultimate resource for AI agent use cases!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/PowerToys</title>
      <link>https://github.com/microsoft/PowerToys</link>
      <description>&lt;p&gt;Windows system utilities to maximize productivity&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Microsoft PowerToys&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/images/overview/PT_hero_image.png" alt="Hero image for Microsoft PowerToys" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/powertoys-docs"&gt;How to use PowerToys&lt;/a&gt; | &lt;a href="https://aka.ms/installPowerToys"&gt;Downloads &amp;amp; Release notes&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/#contributing"&gt;Contributing to PowerToys&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/#whats-happening"&gt;What's Happening&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/#powertoys-roadmap"&gt;Roadmap&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;Microsoft PowerToys is a set of utilities for power users to tune and streamline their Windows experience for greater productivity. For more info on &lt;a href="https://aka.ms/powertoys-docs"&gt;PowerToys overviews and how to use the utilities&lt;/a&gt;, or any other tools and resources for &lt;a href="https://learn.microsoft.com/windows/dev-environment/overview"&gt;Windows development environments&lt;/a&gt;, head over to &lt;a href="https://aka.ms/powertoys-docs"&gt;learn.microsoft.com&lt;/a&gt;!&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Current utilities:&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_AdvancedPaste"&gt;Advanced Paste&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_AoT"&gt;Always on Top&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_Awake"&gt;PowerToys Awake&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_ColorPicker"&gt;Color Picker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_CmdNotFound"&gt;Command Not Found&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_CmdPal"&gt;Command Palette&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_CropAndLock"&gt;Crop And Lock&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_EnvironmentVariables"&gt;Environment Variables&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_FancyZones"&gt;FancyZones&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_FileExplorerAddOns"&gt;File Explorer Add-ons&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_FileLocksmith"&gt;File Locksmith&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_HostsFileEditor"&gt;Hosts File Editor&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_ImageResizer"&gt;Image Resizer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_KeyboardManager"&gt;Keyboard Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_MouseUtilities"&gt;Mouse Utilities&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_MouseWithoutBorders"&gt;Mouse Without Borders&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_NewPlus"&gt;New+&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_PastePlain"&gt;Paste as Plain Text&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_Peek"&gt;Peek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_PowerRename"&gt;PowerRename&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_PowerToysRun"&gt;PowerToys Run&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_QuickAccent"&gt;Quick Accent&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_RegistryPreview"&gt;Registry Preview&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_ScreenRuler"&gt;Screen Ruler&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_ShortcutGuide"&gt;Shortcut Guide&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_TextExtractor"&gt;Text Extractor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_Workspaces"&gt;Workspaces&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/PowerToysOverview_ZoomIt"&gt;ZoomIt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installing and running Microsoft PowerToys&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Windows 11 or Windows 10 version 2004 (code name 20H1 / build number 19041) or newer.&lt;/li&gt; 
 &lt;li&gt;x64 or ARM64 processor&lt;/li&gt; 
 &lt;li&gt;Our installer will install the following items: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://go.microsoft.com/fwlink/p/?LinkId=2124703"&gt;Microsoft Edge WebView2 Runtime&lt;/a&gt; bootstrapper. This will install the latest version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Via GitHub with EXE [Recommended]&lt;/h3&gt; 
&lt;p&gt;Go to the &lt;a href="https://aka.ms/installPowerToys"&gt;Microsoft PowerToys GitHub releases page&lt;/a&gt; and click on &lt;code&gt;Assets&lt;/code&gt; at the bottom to show the files available in the release. Please use the appropriate PowerToys installer that matches your machine's architecture and install scope. For most, it is &lt;code&gt;x64&lt;/code&gt; and per-user.&lt;/p&gt; 
&lt;!-- items that need to be updated release to release --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Filename&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysUserSetup-0.94.0-x64.exe"&gt;PowerToysUserSetup-0.94.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per user - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysUserSetup-0.94.0-arm64.exe"&gt;PowerToysUserSetup-0.94.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - x64&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysSetup-0.94.0-x64.exe"&gt;PowerToysSetup-0.94.0-x64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Machine wide - ARM64&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/PowerToys/releases/download/v0.94.0/PowerToysSetup-0.94.0-arm64.exe"&gt;PowerToysSetup-0.94.0-arm64.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;This is our preferred method.&lt;/p&gt; 
&lt;h3&gt;Via Microsoft Store&lt;/h3&gt; 
&lt;p&gt;Install from the &lt;a href="https://aka.ms/getPowertoys"&gt;Microsoft Store's PowerToys page&lt;/a&gt;. You must be using the &lt;a href="https://blogs.windows.com/windowsExperience/2021/06/24/building-a-new-open-microsoft-store-on-windows-11/"&gt;new Microsoft Store&lt;/a&gt;, which is available for both Windows 11 and Windows 10.&lt;/p&gt; 
&lt;h3&gt;Via WinGet&lt;/h3&gt; 
&lt;p&gt;Download PowerToys from &lt;a href="https://github.com/microsoft/winget-cli#installing-the-client"&gt;WinGet&lt;/a&gt;. Updating PowerToys via winget will respect the current PowerToys installation scope. To install PowerToys, run the following command from the command line / PowerShell:&lt;/p&gt; 
&lt;h4&gt;User scope installer [default]&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Machine-wide scope installer&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install --scope machine Microsoft.PowerToys -s winget
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other install methods&lt;/h3&gt; 
&lt;p&gt;There are &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/unofficialInstallMethods.md"&gt;community driven install methods&lt;/a&gt; such as Chocolatey and Scoop. If these are your preferred install solutions, you can find the install instructions there.&lt;/p&gt; 
&lt;h2&gt;Third-Party Run Plugins&lt;/h2&gt; 
&lt;p&gt;There is a collection of &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/thirdPartyRunPlugins.md"&gt;third-party plugins&lt;/a&gt; created by the community that aren't distributed with PowerToys.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions of all types. Besides coding features / bug fixes, other ways to assist include spec writing, design, documentation, and finding bugs. We are excited to work with the power user community to build a set of tools for helping you get the most out of Windows.&lt;/p&gt; 
&lt;p&gt;We ask that &lt;strong&gt;before you start work on a feature that you would like to contribute&lt;/strong&gt;, please read our &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/CONTRIBUTING.md"&gt;Contributor's Guide&lt;/a&gt;. We would be happy to work with you to figure out the best approach, provide guidance and mentorship throughout feature development, and help avoid any wasted or duplicate effort.&lt;/p&gt; 
&lt;p&gt;Most contributions require you to agree to a &lt;a href="https://cla.opensource.microsoft.com"&gt;Contributor License Agreement (CLA)&lt;/a&gt; declaring that you grant us the rights to use your contribution and that you have permission to do so.&lt;/p&gt; 
&lt;p&gt;For guidance on developing for PowerToys, please read the &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/doc/devdocs"&gt;developer docs&lt;/a&gt; for a detailed breakdown. This includes how to setup your computer to compile.&lt;/p&gt; 
&lt;h2&gt;What's Happening&lt;/h2&gt; 
&lt;h3&gt;PowerToys Roadmap&lt;/h3&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/microsoft/PowerToys/wiki/Roadmap"&gt;prioritized roadmap&lt;/a&gt; of features and utilities that the core team is focusing on.&lt;/p&gt; 
&lt;h3&gt;0.94 - Sep 2025 Update&lt;/h3&gt; 
&lt;p&gt;In this release, we focused on new features, stability, optimization improvements, and automation.&lt;/p&gt; 
&lt;p&gt;For an in-depth look at the latest changes, visit the &lt;a href="https://aka.ms/powertoys-releaseblog"&gt;release blog&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✨Highlights&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;PowerToys Settings added a Settings search with fuzzy matching, suggestions, a results page, and UX polish to make finding options faster.&lt;/li&gt; 
 &lt;li&gt;A comprehensive hotkey conflict detection system was introduced in Settings to surface and help resolve conflicting shortcuts. Note that the default hotkey settings (Win+Ctrl+Shift+T, Win+Ctrl+V, Win+Ctrl+T, Win+Shift+T) may overlap with existing Windows system shortcuts. This is expected. You can resolve the conflict by assigning different hotkeys.&lt;/li&gt; 
 &lt;li&gt;Mouse Utilities added a “Gliding cursor” accessibility feature to Mouse Pointer Crosshairs for single‑button cursor movement and clicking. Thanks &lt;a href="https://github.com/mikehall-ms"&gt;@mikehall-ms&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;The installer was upgraded to WiX 5 after WiX 3 reached end-of-life; this move improved installer security, reliability, and community support.&lt;/li&gt; 
 &lt;li&gt;Tons of bug fixes and improvements for Command Palette, including visual updates and new support for filters on ListPages (handy for extension developers).&lt;/li&gt; 
 &lt;li&gt;Hosts Editor now has a “No leading spaces” option so active host entries can start at column 0 even if others are disabled. Thanks &lt;a href="https://github.com/mohammed-saalim"&gt;@mohammed-saalim&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Context menu registration was moved from the installer to runtime to avoid loading disabled modules (runtime registrations).&lt;/li&gt; 
 &lt;li&gt;Quick Accent now supports Maltese, and frequently used accents appear first (and are remembered across sessions). Thanks &lt;a href="https://github.com/rovercoder"&gt;@rovercoder&lt;/a&gt;! &lt;a href="https://github.com/davidegiacometti"&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Always On Top&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed the border hover cursor so it shows the arrow instead of the wait cursor. Thanks &lt;a href="https://github.com/davidegiacometti"&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Command Palette&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Applied single-click activation only to pointer input; keyboard always activates immediately. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Let context menus open at the cursor by removing window-bound constraints. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Made error messages clearer with timestamps, HRESULTs, and full details for easier diagnosis. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Prevented crashes and improved robustness when updating providers without commands. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Ensured the Settings window reliably comes to the front when opened. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Replaced the Clipboard History icon with a colorful Fluent icon. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Hardened ContentIcon to avoid duplicate parenting and improve diagnostics. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Standardized null checks using C# pattern matching for safer behavior.&lt;/li&gt; 
 &lt;li&gt;Improved accessibility by focusing the activation shortcut dialog and making text reachable. Thanks &lt;a href="https://github.com/chatasweetie"&gt;@chatasweetie&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Moved the extension SDK to a stable Windows SDK and cleaned up message namespaces.&lt;/li&gt; 
 &lt;li&gt;Added path shortcuts: ~ to home, and / or \ to system root, plus UNC support. Thanks &lt;a href="https://github.com/davidegiacometti"&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixed a race in cancellation handling to avoid InvalidOperationException. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Aligned separator styling with WinUI 3 for consistent visuals. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added ARM64 PDBs to the Extensions SDK NuGet for better debugging.&lt;/li&gt; 
 &lt;li&gt;Added single-select filters to DynamicListPage and updated Windows Services sample.&lt;/li&gt; 
 &lt;li&gt;Updated main page placeholder text to better describe what can be searched. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Removed explicit WinAppSDK/WebView2 dependencies from toolkit and API. Thanks &lt;a href="https://github.com/rluengen"&gt;@rluengen&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added a local keyboard hook to handle the GoBack key reliably. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Propagated alias changes safely and resolved conflicts across view models.&lt;/li&gt; 
 &lt;li&gt;Allowed providers to override Dispose with a virtual method.&lt;/li&gt; 
 &lt;li&gt;Fixed memory leaks by cleaning up removed or cancelled list items.&lt;/li&gt; 
 &lt;li&gt;Sorted DateTime extension results by relevance for better usability.&lt;/li&gt; 
 &lt;li&gt;Reduced search text “jiggling” by avoiding redundant change notifications.&lt;/li&gt; 
 &lt;li&gt;Centralized automation notifications in a UIHelper for better accessibility. Thanks &lt;a href="https://github.com/chatasweetie"&gt;@chatasweetie&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Preserved Adaptive Card action types during trimming via DynamicDependency.&lt;/li&gt; 
 &lt;li&gt;Added an acrylic backdrop and refined styling to the context menu. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Prevented disposed pages and Settings windows from handling stale messages. Thanks &lt;a href="https://github.com/jiripolasek"&gt;@jiripolasek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Made the extension API easier to evolve without breaking clients.&lt;/li&gt; 
 &lt;li&gt;Added “evil” sample pages to help reproduce tricky bugs.&lt;/li&gt; 
 &lt;li&gt;Fixed WinGet trim-safety issues by replacing LINQ with manual iteration.&lt;/li&gt; 
 &lt;li&gt;Cancelled stale list fetches to avoid older results overwriting newer ones in CmdPal.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Command Palette extensions&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Improved empty states and ranking logic for multiple extensions. Thanks &lt;a href="https://github.com/htcfreek"&gt;@htcfreek&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added app icons to the All Apps "Run" context command when available.&lt;/li&gt; 
 &lt;li&gt;Restored missing builtin icons by standardizing extension dependencies.&lt;/li&gt; 
 &lt;li&gt;Unblocked local deployment by adding WinAppSDK to two sample extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hosts File Editor&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added a "No leading spaces" option so active hosts entries can start at column 0 even when others are disabled. Thanks &lt;a href="https://github.com/mohammed-saalim"&gt;@mohammed-saalim&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Image Resizer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fixed Image Resizer localization by installing satellite resources under the WinUI 3 apps culture path.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Utilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Introduced "Gliding cursor" to control the pointer and click with a single hotkey for better accessibility. Thanks &lt;a href="https://github.com/mikehall-ms"&gt;@mikehall-ms&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mouse Without Borders&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Blocked Easy Mouse from switching machines during fullscreen apps, with an allow-list for exceptions. Thanks &lt;a href="https://github.com/dot-tb"&gt;@dot-tb&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Peek&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added Visual Studio shared project file types to XML preview and fixed bgcode handler registration. Thanks &lt;a href="https://github.com/rezanid"&gt;@rezanid&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Fixes bgcode preview handler registration and events for reliable previews. Thanks &lt;a href="https://github.com/pedrolamas"&gt;@pedrolamas&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PowerRename&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Changed the Explorer accelerator key to PowErRename to avoid clashing with the New menu. Thanks &lt;a href="https://github.com/aaron-ni"&gt;@aaron-ni&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Accent&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Remembered character usage across sessions so frequently used accents appear first. Thanks &lt;a href="https://github.com/davidegiacometti"&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added Maltese language support with specific characters and the Euro symbol. Thanks &lt;a href="https://github.com/rovercoder"&gt;@rovercoder&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Reduced GPU usage issues by making the window Topmost only when the picker is visible. Thanks &lt;a href="https://github.com/daverayment"&gt;@daverayment&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Settings&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Added telemetry to track usage of the new shortcut conflict detection workflow.&lt;/li&gt; 
 &lt;li&gt;Moved the shutdown action from the title bar to a footer menu item with confirmation. Thanks &lt;a href="https://github.com/davidegiacometti"&gt;@davidegiacometti&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Implemented comprehensive hotkey conflict detection with a dedicated resolution dialog.&lt;/li&gt; 
 &lt;li&gt;Added branded visuals for Office and Copilot keys in the KeyVisual control.&lt;/li&gt; 
 &lt;li&gt;Introduced Settings search with fuzzy matching and navigation to specific controls.&lt;/li&gt; 
 &lt;li&gt;Corrected Spanish localization so product names like Awake remain in English across Settings and OOBE.&lt;/li&gt; 
 &lt;li&gt;Simplified the Advanced Paste description in Settings for quicker reading and consistent capitalization. Thanks &lt;a href="https://github.com/OldUser101"&gt;@OldUser101&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Localized conflict messages in the conflict window and dialog.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installer&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Upgraded the installer to WiX 5 with silent "Files in Use" handling for smoother winget installs.&lt;/li&gt; 
 &lt;li&gt;Switched Win10 context menu modules to runtime registration and added cleanup on uninstall to avoid stale entries.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Adds docs for building the installer locally and testing winget installs.&lt;/li&gt; 
 &lt;li&gt;Fixed a broken style guide link in developer documentation. Thanks &lt;a href="https://github.com/denizmaral"&gt;@denizmaral&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Excluded test and coverage DLLs from BinSkim scans to cut false positives and speed up security analysis.&lt;/li&gt; 
 &lt;li&gt;Simplified NOTICE maintenance by removing version numbers and filtering out Microsoft/System packages.&lt;/li&gt; 
 &lt;li&gt;Improved NuGet dependency validation to prevent package downgrades and catch issues during restore.&lt;/li&gt; 
 &lt;li&gt;Updated UTF.Unknown to a modern version to improve compatibility without breaking changes. Thanks &lt;a href="https://github.com/304NotModified"&gt;@304NotModified&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Refreshed package catalog in CI before installing dependencies to prevent Linux workflow failures.&lt;/li&gt; 
 &lt;li&gt;Refactored CmdPal tests with dependency injection and added coverage for queries and settings.&lt;/li&gt; 
 &lt;li&gt;Added unit tests to verify Close on Enter swaps Copy/Save as expected. Thanks &lt;a href="https://github.com/mohammed-saalim"&gt;@mohammed-saalim&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;Added accessibility IDs to CmdPal UI for stable UI tests.&lt;/li&gt; 
 &lt;li&gt;Rewrote system command tests with a new test base and cleaner patterns.&lt;/li&gt; 
 &lt;li&gt;Added unit tests for WebSearch and Shell extensions with mockable settings.&lt;/li&gt; 
 &lt;li&gt;Added unit tests and abstractions for Apps and Bookmarks extensions.&lt;/li&gt; 
 &lt;li&gt;Cleans up AI‑generated tests; adds meaningful query tests across extensions.&lt;/li&gt; 
 &lt;li&gt;Removed the obsolete debug dialog from Settings for a smoother developer loop.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;What is being planned over the next few releases&lt;/h3&gt; 
&lt;p&gt;For &lt;a href="https://github.com/microsoft/PowerToys/issues?q=is%3Aissue+milestone%3A%22PowerToys+0.95%22"&gt;v0.95&lt;/a&gt;, we'll work on the items below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Continued Command Palette polish&lt;/li&gt; 
 &lt;li&gt;Working on Shortcut Guide v2 (Thanks &lt;a href="https://github.com/noraa-junker"&gt;@noraa-junker&lt;/a&gt;!)&lt;/li&gt; 
 &lt;li&gt;Upgrading Keyboard Manager's editor UI&lt;/li&gt; 
 &lt;li&gt;UI tweaking utility with day/night theme switcher&lt;/li&gt; 
 &lt;li&gt;DSC v3 support for top utilities&lt;/li&gt; 
 &lt;li&gt;New UI automation tests&lt;/li&gt; 
 &lt;li&gt;Stability, bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;PowerToys Community&lt;/h2&gt; 
&lt;p&gt;The PowerToys team is extremely grateful to have the &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/COMMUNITY.md"&gt;support of an amazing active community&lt;/a&gt;. The work you do is incredibly important. PowerToys wouldn’t be nearly what it is today without your help filing bugs, updating documentation, guiding the design, or writing features. We want to say thank you and take time to recognize your work. Month by month, you directly help make PowerToys a better piece of software.&lt;/p&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://raw.githubusercontent.com/microsoft/PowerToys/main/CODE_OF_CONDUCT.md"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Privacy Statement&lt;/h2&gt; 
&lt;p&gt;The application logs basic diagnostic data (telemetry). For more privacy information and what we collect, see our &lt;a href="https://aka.ms/powertoys-data-and-privacy-documentation"&gt;PowerToys Data and Privacy documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jasontaylordev/CleanArchitecture</title>
      <link>https://github.com/jasontaylordev/CleanArchitecture</link>
      <description>&lt;p&gt;Clean Architecture Solution Template for ASP.NET Core&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Clean Architecture Solution Template&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql.yml"&gt;&lt;img src="https://github.com/jasontaylordev/CleanArchitecture/actions/workflows/codeql.yml/badge.svg?sanitize=true" alt="CodeQL" /&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/Clean.Architecture.Solution.Template"&gt;&lt;img src="https://img.shields.io/nuget/v/Clean.Architecture.Solution.Template?label=NuGet" alt="Nuget" /&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/packages/Clean.Architecture.Solution.Template"&gt;&lt;img src="https://img.shields.io/nuget/dt/Clean.Architecture.Solution.Template?label=Downloads" alt="Nuget" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/twitter/follow/jasontaylordev?label=Follow&amp;amp;style=social" alt="Twitter Follow" /&gt;&lt;/p&gt; 
&lt;p&gt;The goal of this template is to provide a straightforward and efficient approach to enterprise application development, leveraging the power of Clean Architecture and ASP.NET Core. Using this template, you can effortlessly create a Single Page App (SPA) with ASP.NET Core and Angular or React, while adhering to the principles of Clean Architecture. Getting started is easy - simply install the &lt;strong&gt;.NET template&lt;/strong&gt; (see below for full details).&lt;/p&gt; 
&lt;p&gt;If you find this project useful, please give it a star. Thanks! ⭐&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The following prerequisites are required to build and run the solution:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dotnet.microsoft.com/download/dotnet/9.0"&gt;.NET 9.0 SDK&lt;/a&gt; (latest version)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (latest LTS, only required if you are using Angular or React)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The easiest way to get started is to install the &lt;a href="https://www.nuget.org/packages/Clean.Architecture.Solution.Template"&gt;.NET template&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dotnet new install Clean.Architecture.Solution.Template
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once installed, create a new solution using the template. You can choose to use Angular, React, or create a Web API-only solution. Specify the client framework using the &lt;code&gt;-cf&lt;/code&gt; or &lt;code&gt;--client-framework&lt;/code&gt; option, and provide the output directory where your project will be created. Here are some examples:&lt;/p&gt; 
&lt;p&gt;To create a Single-Page Application (SPA) with Angular and ASP.NET Core:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-sln --client-framework Angular --output YourProjectName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To create a SPA with React and ASP.NET Core:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-sln -cf React -o YourProjectName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To create a ASP.NET Core Web API-only solution:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-sln -cf None -o YourProjectName
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Launch the app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd src/Web
dotnet run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To learn more, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-sln --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can create use cases (commands or queries) by navigating to &lt;code&gt;./src/Application&lt;/code&gt; and running &lt;code&gt;dotnet new ca-usecase&lt;/code&gt;. Here are some examples:&lt;/p&gt; 
&lt;p&gt;To create a new command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-usecase --name CreateTodoList --feature-name TodoLists --usecase-type command --return-type int
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To create a query:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-usecase -n GetTodos -fn TodoLists -ut query -rt TodosVm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To learn more, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-usecase --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Database&lt;/h2&gt; 
&lt;p&gt;The template supports &lt;a href="https://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt;, &lt;a href="https://www.sqlite.org/"&gt;SQLite&lt;/a&gt;, and &lt;a href="https://learn.microsoft.com/en-us/sql/sql-server/what-is-sql-server"&gt;SQL Server&lt;/a&gt; (default option). Specify the database to use with the &lt;code&gt;--database&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet new ca-sln --database [postgresql|sqlite|sqlserver]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On application startup, the database is automatically &lt;strong&gt;deleted&lt;/strong&gt;, &lt;strong&gt;recreated&lt;/strong&gt;, and &lt;strong&gt;seeded&lt;/strong&gt; using &lt;code&gt;ApplicationDbContextInitialiser&lt;/code&gt;. This is a practical strategy for early development, avoiding the overhead of maintaining migrations while keeping the schema and sample data in sync with the domain model.&lt;/p&gt; 
&lt;p&gt;This process includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Deleting the existing database&lt;/li&gt; 
 &lt;li&gt;Recreating the schema from the current model&lt;/li&gt; 
 &lt;li&gt;Seeding default roles, users, and data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For production environments, consider using EF Core migrations or migration bundles during deployment.&lt;br /&gt; For more information, see &lt;a href="https://jasontaylor.dev/ef-core-database-initialisation-strategies"&gt;Database Initialisation Strategies for EF Core&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deploy&lt;/h2&gt; 
&lt;p&gt;This template is structured to follow the Azure Developer CLI (azd). You can learn more about &lt;code&gt;azd&lt;/code&gt; in the &lt;a href="https://learn.microsoft.com/en-us/azure/developer/azure-developer-cli"&gt;official documentation&lt;/a&gt;. To get started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Log in to Azure
azd auth login

# Provision and deploy to Azure
azd up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Technologies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/aspnet/core/introduction-to-aspnet-core"&gt;ASP.NET Core 9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/ef/core/"&gt;Entity Framework Core 9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/"&gt;Angular 18&lt;/a&gt; or &lt;a href="https://react.dev/"&gt;React 18&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jbogard/MediatR"&gt;MediatR&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://automapper.org/"&gt;AutoMapper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluentvalidation.net/"&gt;FluentValidation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nunit.org/"&gt;NUnit&lt;/a&gt;, &lt;a href="https://docs.shouldly.org/"&gt;Shoudly&lt;/a&gt;, &lt;a href="https://github.com/devlooped/moq"&gt;Moq&lt;/a&gt; &amp;amp; &lt;a href="https://github.com/jbogard/Respawn"&gt;Respawn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;p&gt;The main branch is now on .NET 9.0. The following previous versions are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasontaylordev/CleanArchitecture/tree/net8.0"&gt;8.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasontaylordev/CleanArchitecture/tree/net7.0"&gt;7.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasontaylordev/CleanArchitecture/tree/net6.0"&gt;6.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasontaylordev/CleanArchitecture/tree/net5.0"&gt;5.0&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasontaylordev/CleanArchitecture/tree/netcore3.1"&gt;3.1&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/dK4Yb6-LxAk"&gt;Clean Architecture with ASP.NET Core 3.0 (GOTO 2019)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jasontaylor.dev/clean-architecture-getting-started/"&gt;Clean Architecture with .NET Core: Getting Started&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you are having problems, please let me know by &lt;a href="https://github.com/jasontaylordev/CleanArchitecture/issues/new/choose"&gt;raising a new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed with the &lt;a href="https://raw.githubusercontent.com/jasontaylordev/CleanArchitecture/main/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200" /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;📖 Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br /&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br /&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br /&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kestra-io/kestra</title>
      <link>https://github.com/kestra-io/kestra</link>
      <description>&lt;p&gt;⚡ Universal Workflow Orchestration Platform — Code in any language, run anywhere. 800+ plugins for data, infrastructure, and AI automation.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.kestra.io"&gt; &lt;img src="https://kestra.io/banner.png" alt="Kestra workflow orchestrator" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center" style="border-bottom: none"&gt; Event-Driven Declarative Orchestration Platform &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/releases"&gt;&lt;img src="https://img.shields.io/github/tag-pre/kestra-io/kestra.svg?color=blueviolet" alt="Last Version" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/raw/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/kestra-io/kestra?color=blueviolet" alt="License" /&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/kestra-io/kestra/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/kestra-io/kestra?color=blueviolet&amp;amp;logo=github" alt="Github star" /&gt;&lt;/a&gt; 
 &lt;br /&gt; 
 &lt;a href="https://kestra.io"&gt;&lt;img src="https://img.shields.io/badge/Website-kestra.io-192A4E?color=blueviolet" alt="Kestra infinitely scalable orchestration and scheduling platform" /&gt;&lt;/a&gt; 
 &lt;a href="https://kestra.io/slack"&gt;&lt;img src="https://img.shields.io/badge/Slack-Join%20Community-blueviolet?logo=slack" alt="Slack" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://x.com/kestra_io"&gt;&lt;img height="25" src="https://kestra.io/twitter.svg?sanitize=true" alt="X(formerly Twitter)" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.linkedin.com/company/kestra/"&gt;&lt;img height="25" src="https://kestra.io/linkedin.svg?sanitize=true" alt="linkedin" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://www.youtube.com/@kestra-io"&gt;&lt;img height="25" src="https://kestra.io/youtube.svg?sanitize=true" alt="youtube" /&gt;&lt;/a&gt; &amp;nbsp; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/2714" target="_blank"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/2714" alt="kestra-io%2Fkestra | Trendshift" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/kestra?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-kestra" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=612077&amp;amp;theme=light&amp;amp;period=daily&amp;amp;t=1740737506162" alt="Kestra - All-in-one automation &amp;amp; orchestration platform | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.kestra.io/video/product-overview" target="_blank"&gt; &lt;img src="https://kestra.io/startvideo.png" alt="Get started in 4 minutes with Kestra" width="640px" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center" style="color:grey;"&gt;&lt;i&gt;Click on the image to learn how to get started with Kestra in 4 minutes.&lt;/i&gt;&lt;/p&gt; 
&lt;h2&gt;🌟 What is Kestra?&lt;/h2&gt; 
&lt;p&gt;Kestra is an open-source, event-driven orchestration platform that makes both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;event-driven&lt;/strong&gt; workflows easy. By bringing &lt;strong&gt;Infrastructure as Code&lt;/strong&gt; best practices to data, process, and microservice orchestration, you can build reliable &lt;a href="https://kestra.io/docs/getting-started"&gt;workflows&lt;/a&gt; directly from the UI in just a few lines of YAML.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Key Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Everything as Code and from the UI:&lt;/strong&gt; keep &lt;strong&gt;workflows as code&lt;/strong&gt; with a &lt;strong&gt;Git Version Control&lt;/strong&gt; integration, even when building them from the UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Event-Driven &amp;amp; Scheduled Workflows:&lt;/strong&gt; automate both &lt;strong&gt;scheduled&lt;/strong&gt; and &lt;strong&gt;real-time&lt;/strong&gt; event-driven workflows via a simple &lt;code&gt;trigger&lt;/code&gt; definition.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative YAML Interface:&lt;/strong&gt; define workflows using a simple configuration in the &lt;strong&gt;built-in code editor&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich Plugin Ecosystem:&lt;/strong&gt; hundreds of plugins built in to extract data from any database, cloud storage, or API, and &lt;strong&gt;run scripts in any language&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Intuitive UI &amp;amp; Code Editor:&lt;/strong&gt; build and visualize workflows directly from the UI with syntax highlighting, auto-completion and real-time syntax validation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable:&lt;/strong&gt; designed to handle millions of workflows, with high availability and fault tolerance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control Friendly:&lt;/strong&gt; write your workflows from the built-in code Editor and push them to your preferred Git branch directly from Kestra, enabling best practices with CI/CD pipelines and version control systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Structure &amp;amp; Resilience&lt;/strong&gt;: tame chaos and bring resilience to your workflows with &lt;strong&gt;namespaces&lt;/strong&gt;, &lt;strong&gt;labels&lt;/strong&gt;, &lt;strong&gt;subflows&lt;/strong&gt;, &lt;strong&gt;retries&lt;/strong&gt;, &lt;strong&gt;timeout&lt;/strong&gt;, &lt;strong&gt;error handling&lt;/strong&gt;, &lt;strong&gt;inputs&lt;/strong&gt;, &lt;strong&gt;outputs&lt;/strong&gt; that generate artifacts in the UI, &lt;strong&gt;variables&lt;/strong&gt;, &lt;strong&gt;conditional branching&lt;/strong&gt;, &lt;strong&gt;advanced scheduling&lt;/strong&gt;, &lt;strong&gt;event triggers&lt;/strong&gt;, &lt;strong&gt;backfills&lt;/strong&gt;, &lt;strong&gt;dynamic tasks&lt;/strong&gt;, &lt;strong&gt;sequential and parallel tasks&lt;/strong&gt;, and skip tasks or triggers when needed by setting the flag &lt;code&gt;disabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🧑‍💻 The YAML definition gets automatically adjusted any time you make changes to a workflow from the UI or via an API call. Therefore, the orchestration logic is &lt;strong&gt;always managed declaratively in code&lt;/strong&gt;, even if you modify your workflows in other ways (UI, CI/CD, Terraform, API calls).&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://kestra.io/adding-tasks.gif" alt="Adding new tasks in the UI" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Started Locally in 5 Minutes&lt;/h3&gt; 
&lt;h4&gt;Launch Kestra in Docker&lt;/h4&gt; 
&lt;p&gt;Make sure that Docker is running. Then, start Kestra in a single command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v /tmp:/tmp kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use PowerShell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root `
    -v "/var/run/docker.sock:/var/run/docker.sock" `
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use Command Prompt (CMD):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-cmd"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root ^
    -v "/var/run/docker.sock:/var/run/docker.sock" ^
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows and use WSL (Linux-based environment in Windows):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --pull=always --rm -it -p 8080:8080 --user=root \
    -v "/var/run/docker.sock:/var/run/docker.sock" \
    -v "C:/Temp:/tmp" kestra/kestra:latest server local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check our &lt;a href="https://kestra.io/docs/installation"&gt;Installation Guide&lt;/a&gt; for other deployment options (Docker Compose, Podman, Kubernetes, AWS, GCP, Azure, and more).&lt;/p&gt; 
&lt;p&gt;Access the Kestra UI at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt; and start building your first flow!&lt;/p&gt; 
&lt;h4&gt;Your First Hello World Flow&lt;/h4&gt; 
&lt;p&gt;Create a new flow with the following content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;id: hello_world
namespace: dev

tasks:
  - id: say_hello
    type: io.kestra.plugin.core.log.Log
    message: "Hello, World!"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the flow and see the output in the UI!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🧩 Plugin Ecosystem&lt;/h2&gt; 
&lt;p&gt;Kestra's functionality is extended through a rich &lt;a href="https://kestra.io/plugins"&gt;ecosystem of plugins&lt;/a&gt; that empower you to run tasks anywhere and code in any language, including Python, Node.js, R, Go, Shell, and more. Here's how Kestra plugins enhance your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run Anywhere:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Local or Remote Execution:&lt;/strong&gt; Execute tasks on your local machine, remote servers via SSH, or scale out to serverless containers using &lt;a href="https://kestra.io/docs/task-runners"&gt;Task Runners&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Docker and Kubernetes Support:&lt;/strong&gt; Seamlessly run Docker containers within your workflows or launch Kubernetes jobs to handle compute-intensive workloads.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Code in Any Language:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Scripting Support:&lt;/strong&gt; Write scripts in your preferred programming language. Kestra supports Python, Node.js, R, Go, Shell, and others, allowing you to integrate existing codebases and deployment patterns.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Flexible Automation:&lt;/strong&gt; Execute shell commands, run SQL queries against various databases, and make HTTP requests to interact with APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Event-Driven and Real-Time Processing:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Real-Time Triggers:&lt;/strong&gt; React to events from external systems in real-time, such as file arrivals, new messages in message buses (Kafka, Redis, Pulsar, AMQP, MQTT, NATS, AWS SQS, Google Pub/Sub, Azure Event Hubs), and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Custom Events:&lt;/strong&gt; Define custom events to trigger flows based on specific conditions or external signals, enabling highly responsive workflows.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cloud Integrations:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;AWS, Google Cloud, Azure:&lt;/strong&gt; Integrate with a variety of cloud services to interact with storage solutions, messaging systems, compute resources, and more.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Big Data Processing:&lt;/strong&gt; Run big data processing tasks using tools like Apache Spark or interact with analytics platforms like Google BigQuery.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Monitoring and Notifications:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Stay Informed:&lt;/strong&gt; Send messages to Slack channels, email notifications, or trigger alerts in PagerDuty to keep your team updated on workflow statuses.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Kestra's plugin ecosystem is continually expanding, allowing you to tailor the platform to your specific needs. Whether you're orchestrating complex data pipelines, automating scripts across multiple environments, or integrating with cloud services, there's likely a plugin to assist. And if not, you can always &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;build your own plugins&lt;/a&gt; to extend Kestra's capabilities.&lt;/p&gt; 
&lt;p&gt;🧑‍💻 &lt;strong&gt;Note:&lt;/strong&gt; This is just a glimpse of what Kestra plugins can do. Explore the full list on our &lt;a href="https://kestra.io/plugins"&gt;Plugins Page&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 Key Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Flows:&lt;/strong&gt; the core unit in Kestra, representing a workflow composed of tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tasks:&lt;/strong&gt; individual units of work, such as running a script, moving data, or calling an API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Namespaces:&lt;/strong&gt; logical grouping of flows for organization and isolation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Triggers:&lt;/strong&gt; schedule or events that initiate the execution of flows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Inputs &amp;amp; Variables:&lt;/strong&gt; parameters and dynamic data passed into flows and tasks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎨 Build Workflows Visually&lt;/h2&gt; 
&lt;p&gt;Kestra provides an intuitive UI that allows you to interactively build and visualize your workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Drag-and-Drop Interface:&lt;/strong&gt; add and rearrange tasks from the Topology Editor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-Time Validation:&lt;/strong&gt; instant feedback on your workflow's syntax and structure to catch errors early.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Auto-Completion:&lt;/strong&gt; smart suggestions as you type to write flow code quickly and without syntax errors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live Topology View:&lt;/strong&gt; see your workflow as a Directed Acyclic Graph (DAG) that updates in real-time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔧 Extensible and Developer-Friendly&lt;/h2&gt; 
&lt;h3&gt;Plugin Development&lt;/h3&gt; 
&lt;p&gt;Create custom plugins to extend Kestra's capabilities. Check out our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h3&gt;Infrastructure as Code&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Version Control:&lt;/strong&gt; store your flows in Git repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD Integration:&lt;/strong&gt; automate deployment of flows using CI/CD pipelines.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terraform Provider:&lt;/strong&gt; manage Kestra resources with the &lt;a href="https://kestra.io/docs/terraform/"&gt;official Terraform provider&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Join the Community&lt;/h2&gt; 
&lt;p&gt;Stay connected and get support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Slack:&lt;/strong&gt; Join our &lt;a href="https://kestra.io/slack"&gt;Slack community&lt;/a&gt; to ask questions and share ideas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LinkedIn:&lt;/strong&gt; Follow us on &lt;a href="https://www.linkedin.com/company/kestra/"&gt;LinkedIn&lt;/a&gt; — next to Slack and GitHub, this is our main channel to share updates and product announcements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube:&lt;/strong&gt; Subscribe to our &lt;a href="https://www.youtube.com/@kestra-io"&gt;YouTube channel&lt;/a&gt; for educational video content. We publish new videos every week!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;X:&lt;/strong&gt; Follow us on &lt;a href="https://x.com/kestra_io"&gt;X&lt;/a&gt; if you're still active there.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions of all kinds!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Report Issues:&lt;/strong&gt; Found a bug or have a feature request? Open an &lt;a href="https://github.com/kestra-io/kestra/issues"&gt;issue on GitHub&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute Code:&lt;/strong&gt; Check out our &lt;a href="https://kestra.io/docs/getting-started/contributing"&gt;Contributor Guide&lt;/a&gt; for initial guidelines, and explore our &lt;a href="https://go.kestra.io/contributing"&gt;good first issues&lt;/a&gt; for beginner-friendly tasks to tackle first.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Develop Plugins:&lt;/strong&gt; Build and share plugins using our &lt;a href="https://kestra.io/docs/plugin-developer-guide/"&gt;Plugin Developer Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute to our Docs:&lt;/strong&gt; Contribute edits or updates to keep our &lt;a href="https://github.com/kestra-io/docs"&gt;documentation&lt;/a&gt; top-notch.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Kestra is licensed under the Apache 2.0 License © &lt;a href="https://kestra.io"&gt;Kestra Technologies&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⭐️ Stay Updated&lt;/h2&gt; 
&lt;p&gt;Give our repository a star to stay informed about the latest features and updates!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kestra-io/kestra"&gt;&lt;img src="https://kestra.io/star.gif" alt="Star the Repo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Thank you for considering Kestra for your workflow orchestration needs. We can't wait to see what you'll build!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>oraios/serena</title>
      <link>https://github.com/oraios/serena</link>
      <description>&lt;p&gt;A powerful coding agent toolkit providing semantic retrieval and editing capabilities (MCP server &amp; other integrations)&lt;/p&gt;&lt;hr&gt;&lt;p align="center" style="text-align:center"&gt; &lt;img src="https://raw.githubusercontent.com/oraios/serena/main/resources/serena-logo.svg#gh-light-mode-only" style="width:500px" /&gt; &lt;img src="https://raw.githubusercontent.com/oraios/serena/main/resources/serena-logo-dark-mode.svg#gh-dark-mode-only" style="width:500px" /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;🚀&lt;/span&gt; Serena is a powerful &lt;strong&gt;coding agent toolkit&lt;/strong&gt; capable of turning an LLM into a fully-featured agent that works &lt;strong&gt;directly on your codebase&lt;/strong&gt;. Unlike most other tools, it is not tied to an LLM, framework or an interface, making it easy to use it in a variety of ways.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;🔧&lt;/span&gt; Serena provides essential &lt;strong&gt;semantic code retrieval and editing tools&lt;/strong&gt; that are akin to an IDE's capabilities, extracting code entities at the symbol level and exploiting relational structure. When combined with an existing coding agent, these tools greatly enhance (token) efficiency.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;🆓&lt;/span&gt; Serena is &lt;strong&gt;free &amp;amp; open-source&lt;/strong&gt;, enhancing the capabilities of LLMs you already have access to free of charge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can think of Serena as providing IDE-like tools to your LLM/coding agent. With it, the agent no longer needs to read entire files, perform grep-like searches or string replacements to find and edit the right code. Instead, it can use code centered tools like &lt;code&gt;find_symbol&lt;/code&gt;, &lt;code&gt;find_referencing_symbols&lt;/code&gt; and &lt;code&gt;insert_after_symbol&lt;/code&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;Serena is under active development! See the latest updates, upcoming features, and lessons learned to stay up to date.&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/CHANGELOG.md"&gt; &lt;img src="https://img.shields.io/badge/Updates-1e293b?style=flat&amp;amp;logo=rss&amp;amp;logoColor=white&amp;amp;labelColor=1e293b" alt="Changelog" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/roadmap.md"&gt; &lt;img src="https://img.shields.io/badge/Roadmap-14532d?style=flat&amp;amp;logo=target&amp;amp;logoColor=white&amp;amp;labelColor=14532d" alt="Roadmap" /&gt; &lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/lessons_learned.md"&gt; &lt;img src="https://img.shields.io/badge/Lessons-Learned-7c4700?style=flat&amp;amp;logo=readthedocs&amp;amp;logoColor=white&amp;amp;labelColor=7c4700" alt="Lessons Learned" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;LLM Integration&lt;/h3&gt; 
&lt;p&gt;Serena provides the necessary &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#list-of-tools"&gt;tools&lt;/a&gt; for coding workflows, but an LLM is required to do the actual work, orchestrating tool use.&lt;/p&gt; 
&lt;p&gt;For example, &lt;strong&gt;supercharge the performance of Claude Code&lt;/strong&gt; with a &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#claude-code"&gt;one-line shell command&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In general, Serena can be integrated with an LLM in several ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;by using the &lt;strong&gt;model context protocol (MCP)&lt;/strong&gt;. Serena provides an MCP server which integrates with 
  &lt;ul&gt; 
   &lt;li&gt;Claude Code and Claude Desktop,&lt;/li&gt; 
   &lt;li&gt;Terminal-based clients like Codex, Gemini-CLI, Qwen3-Coder, rovodev, OpenHands CLI and others,&lt;/li&gt; 
   &lt;li&gt;IDEs like VSCode, Cursor or IntelliJ,&lt;/li&gt; 
   &lt;li&gt;Extensions like Cline or Roo Code&lt;/li&gt; 
   &lt;li&gt;Local clients like &lt;a href="https://docs.openwebui.com/openapi-servers/mcp"&gt;OpenWebUI&lt;/a&gt;, &lt;a href="https://jan.ai/docs/mcp-examples/browser/browserbase#enable-mcp"&gt;Jan&lt;/a&gt;, &lt;a href="https://docs.agno.com/introduction/playground"&gt;Agno&lt;/a&gt; and others&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;by using &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/docs/serena_on_chatgpt.md"&gt;mcpo to connect it to ChatGPT&lt;/a&gt; or other clients that don't support MCP but do support tool calling via OpenAPI.&lt;/li&gt; 
 &lt;li&gt;by incorporating Serena's tools into an agent framework of your choice, as illustrated &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/docs/custom_agent.md"&gt;here&lt;/a&gt;. Serena's tool implementation is decoupled from the framework-specific code and can thus easily be adapted to any agent framework.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Serena in Action&lt;/h3&gt; 
&lt;h4&gt;Demonstration 1: Efficient Operation in Claude Code&lt;/h4&gt; 
&lt;p&gt;A demonstration of Serena efficiently retrieving and editing code within Claude Code, thereby saving tokens and time. Efficient operations are not only useful for saving costs, but also for generally improving the generated code's quality. This effect may be less pronounced in very small projects, but often becomes of crucial importance in larger ones.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/ab78ebe0-f77d-43cc-879a-cc399efefd87"&gt;https://github.com/user-attachments/assets/ab78ebe0-f77d-43cc-879a-cc399efefd87&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Demonstration 2: Serena in Claude Desktop&lt;/h4&gt; 
&lt;p&gt;A demonstration of Serena implementing a small feature for itself (a better log GUI) with Claude Desktop. Note how Serena's tools enable Claude to find and edit the right symbols.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/6eaa9aa1-610d-4723-a2d6-bf1e487ba753"&gt;https://github.com/user-attachments/assets/6eaa9aa1-610d-4723-a2d6-bf1e487ba753&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Programming Language Support &amp;amp; Semantic Analysis Capabilities&lt;/h3&gt; 
&lt;p&gt;Serena's semantic code analysis capabilities build on &lt;strong&gt;language servers&lt;/strong&gt; using the widely implemented language server protocol (LSP). The LSP provides a set of versatile code querying and editing functionalities based on symbolic understanding of the code. Equipped with these capabilities, Serena discovers and edits code just like a seasoned developer making use of an IDE's capabilities would. Serena can efficiently find the right context and do the right thing even in very large and complex projects! So not only is it free and open-source, it frequently achieves better results than existing solutions that charge a premium.&lt;/p&gt; 
&lt;p&gt;Language servers provide support for a wide range of programming languages. With Serena, we provide direct, out-of-the-box support for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python&lt;/li&gt; 
 &lt;li&gt;TypeScript/Javascript&lt;/li&gt; 
 &lt;li&gt;PHP (uses Intelephense LSP; set &lt;code&gt;INTELEPHENSE_LICENSE_KEY&lt;/code&gt; environment variable for premium features)&lt;/li&gt; 
 &lt;li&gt;Go (requires installation of gopls)&lt;/li&gt; 
 &lt;li&gt;R (requires installation of the &lt;code&gt;languageserver&lt;/code&gt; R package)&lt;/li&gt; 
 &lt;li&gt;Rust (requires &lt;a href="https://rustup.rs/"&gt;rustup&lt;/a&gt; - uses rust-analyzer from your toolchain)&lt;/li&gt; 
 &lt;li&gt;C/C++ (you may experience issues with finding references, we are working on it)&lt;/li&gt; 
 &lt;li&gt;Zig (requires installation of ZLS - Zig Language Server)&lt;/li&gt; 
 &lt;li&gt;C#&lt;/li&gt; 
 &lt;li&gt;Ruby (by default, uses &lt;a href="https://github.com/Shopify/ruby-lsp"&gt;ruby-lsp&lt;/a&gt;, specify ruby_solargraph as your language to use the previous solargraph based implementation)&lt;/li&gt; 
 &lt;li&gt;Swift&lt;/li&gt; 
 &lt;li&gt;Kotlin (uses the pre-alpha &lt;a href="https://github.com/Kotlin/kotlin-lsp"&gt;official kotlin LS&lt;/a&gt;, some issues may appear)&lt;/li&gt; 
 &lt;li&gt;Java (&lt;em&gt;Note&lt;/em&gt;: startup is slow, initial startup especially so. There may be issues with java on macos and linux, we are working on it.)&lt;/li&gt; 
 &lt;li&gt;Clojure&lt;/li&gt; 
 &lt;li&gt;Dart&lt;/li&gt; 
 &lt;li&gt;Bash&lt;/li&gt; 
 &lt;li&gt;Lua (automatically downloads lua-language-server if not installed)&lt;/li&gt; 
 &lt;li&gt;Nix (requires nixd installation)&lt;/li&gt; 
 &lt;li&gt;Elixir (requires installation of NextLS and Elixir; &lt;strong&gt;Windows not supported&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;Erlang (requires installation of beam and &lt;a href="https://github.com/erlang-ls/erlang_ls"&gt;erlang_ls&lt;/a&gt;, experimental, might be slow or hang)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Support for further languages can easily be added by providing a shallow adapter for a new language server implementation, see Serena's &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/.serena/memories/adding_new_language_support_guide.md"&gt;memory on that&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Community Feedback&lt;/h3&gt; 
&lt;p&gt;Most users report that Serena has strong positive effects on the results of their coding agents, even when used within very capable agents like Claude Code. Serena is often described to be a &lt;a href="https://www.reddit.com/r/ClaudeAI/comments/1lfsdll/try_out_serena_mcp_thank_me_later/"&gt;game changer&lt;/a&gt;, providing an enormous &lt;a href="https://www.reddit.com/r/ClaudeCode/comments/1mguoia/absolutely_insane_improvement_of_claude_code"&gt;productivity boost&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Serena excels at navigating and manipulating complex codebases, providing tools that support precise code retrieval and editing in the presence of large, strongly structured codebases. However, when dealing with tasks that involve only very few/small files, you may not benefit from including Serena on top of your existing coding agent. In particular, when writing code from scratch, Serena will not provide much value initially, as the more complex structures that Serena handles more gracefully than simplistic, file-based approaches are yet to be created.&lt;/p&gt; 
&lt;p&gt;Several videos and blog posts have talked about Serena:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;YouTube:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wYWyJNs1HVk&amp;amp;t=1s"&gt;AI Labs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UqfxuQKuMo8&amp;amp;t=45s"&gt;Yo Van Eyck&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fzPnM3ySmjE&amp;amp;t=32s"&gt;JeredBlu&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Blog posts:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@souradip1000/deconstructing-serenas-mcp-powered-semantic-code-understanding-architecture-75802515d116"&gt;Serena's Design Principles&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.lai.so/serena/"&gt;Serena with Claude Code (in Japanese)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://robertmarshall.dev/blog/turning-claude-code-into-a-development-powerhouse/"&gt;Turning Claude Code into a Development Powerhouse&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- Created with markdown-toc -i README.md --&gt; 
&lt;!-- Install it with npm install -g markdown-toc --&gt; 
&lt;!-- toc --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#quick-start"&gt;Quick Start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#running-the-serena-mcp-server"&gt;Running the Serena MCP Server&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#usage"&gt;Usage&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#using-uvx"&gt;Using uvx&lt;/a&gt; 
        &lt;ul&gt; 
         &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#local-installation"&gt;Local Installation&lt;/a&gt;&lt;/li&gt; 
        &lt;/ul&gt; &lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#using-docker-experimental"&gt;Using Docker (Experimental)&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#sse-mode"&gt;SSE Mode&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#command-line-arguments"&gt;Command-Line Arguments&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#project-activation--indexing"&gt;Project Activation &amp;amp; Indexing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#claude-code"&gt;Claude Code&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#codex"&gt;Codex&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#other-terminal-based-clients"&gt;Other Terminal-Based Clients&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#claude-desktop"&gt;Claude Desktop&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#mcp-coding-clients-cline-roo-code-cursor-windsurf-etc"&gt;MCP Coding Clients (Cline, Roo-Code, Cursor, Windsurf, etc.)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#local-guis-and-frameworks"&gt;Local GUIs and Frameworks&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#detailed-usage-and-recommendations"&gt;Detailed Usage and Recommendations&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#tool-execution"&gt;Tool Execution&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#shell-execution-and-editing-tools"&gt;Shell Execution and Editing Tools&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#modes-and-contexts"&gt;Modes and Contexts&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#contexts"&gt;Contexts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#modes"&gt;Modes&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#customization"&gt;Customization&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#onboarding-and-memories"&gt;Onboarding and Memories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#prepare-your-project"&gt;Prepare Your Project&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#structure-your-codebase"&gt;Structure Your Codebase&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#start-from-a-clean-state"&gt;Start from a Clean State&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#logging-linting-and-automated-tests"&gt;Logging, Linting, and Automated Tests&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#prompting-strategies"&gt;Prompting Strategies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#potential-issues-in-code-editing"&gt;Potential Issues in Code Editing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#running-out-of-context"&gt;Running Out of Context&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#combining-serena-with-other-mcp-servers"&gt;Combining Serena with Other MCP Servers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#serenas-logs-the-dashboard-and-gui-tool"&gt;Serena's Logs: The Dashboard and GUI Tool&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#comparison-with-other-coding-agents"&gt;Comparison with Other Coding Agents&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#subscription-based-coding-agents"&gt;Subscription-Based Coding Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#api-based-coding-agents"&gt;API-Based Coding Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#other-mcp-based-coding-agents"&gt;Other MCP-Based Coding Agents&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#acknowledgements"&gt;Acknowledgements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#customizing-and-extending-serena"&gt;Customizing and Extending Serena&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#list-of-tools"&gt;List of Tools&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- tocstop --&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Serena can be used in various ways, below you will find instructions for selected integrations.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For coding with Claude, we recommend using Serena through &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#claude-code"&gt;Claude Code&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#claude-desktop"&gt;Claude Desktop&lt;/a&gt;. You can also use Serena in most other &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#other-terminal-based-clients"&gt;terminal-based clients&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want a GUI experience outside an IDE, you can use one of the many &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#local-guis-and-frameworks"&gt;local GUIs&lt;/a&gt; that support MCP servers. You can also connect Serena to many web clients (including ChatGPT) using &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/docs/serena_on_chatgpt.md"&gt;mcpo&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you want to use Serena integrated in your IDE, see the section on &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#other-mcp-clients---cline-roo-code-cursor-windsurf-etc"&gt;other MCP clients&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;You can use Serena as a library for building your own applications. We try to keep the public API stable, but you should still expect breaking changes and pin Serena to a fixed version if you use it as a dependency.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Serena is managed by &lt;code&gt;uv&lt;/code&gt;, so you will need to &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;install it&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Running the Serena MCP Server&lt;/h3&gt; 
&lt;p&gt;You have several options for running the MCP server, which are explained in the subsections below.&lt;/p&gt; 
&lt;h4&gt;Usage&lt;/h4&gt; 
&lt;p&gt;The typical usage involves the client (Claude Code, Claude Desktop, etc.) running the MCP server as a subprocess (using stdio communication), so the client needs to be provided with the command to run the MCP server. (Alternatively, you can run the MCP server in SSE mode and tell your client how to connect to it.)&lt;/p&gt; 
&lt;p&gt;Note that no matter how you run the MCP server, Serena will, by default, start a small web-based dashboard on localhost that will display logs and allow shutting down the MCP server (since many clients fail to clean up processes correctly). This and other settings can be adjusted in the &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#configuration"&gt;configuration&lt;/a&gt; and/or by providing &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#command-line-arguments"&gt;command-line arguments&lt;/a&gt;.&lt;/p&gt; 
&lt;h5&gt;Using uvx&lt;/h5&gt; 
&lt;p&gt;&lt;code&gt;uvx&lt;/code&gt; can be used to run the latest version of Serena directly from the repository, without an explicit local installation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;uvx --from git+https://github.com/oraios/serena serena start-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Explore the CLI to see some of the customization options that serena provides (more info on them below).&lt;/p&gt; 
&lt;h6&gt;Local Installation&lt;/h6&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repository and change into it.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/oraios/serena
cd serena
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Optionally edit the configuration file in your home directory with&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;uv run serena config edit
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you just want the default config, you can skip this part, and a config file will be created when you first run Serena.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the server with &lt;code&gt;uv&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;uv run serena start-mcp-server
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;When running from outside the serena installation directory, be sure to pass it, i.e., use&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt; uv run --directory /abs/path/to/serena serena start-mcp-server
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h5&gt;Using Docker (Experimental)&lt;/h5&gt; 
&lt;p&gt;⚠️ Docker support is currently experimental with several limitations. Please read the &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/DOCKER.md"&gt;Docker documentation&lt;/a&gt; for important caveats before using it.&lt;/p&gt; 
&lt;p&gt;You can run the Serena MCP server directly via docker as follows, assuming that the projects you want to work on are all located in &lt;code&gt;/path/to/your/projects&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker run --rm -i --network host -v /path/to/your/projects:/workspaces/projects ghcr.io/oraios/serena:latest serena start-mcp-server --transport stdio
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;/path/to/your/projects&lt;/code&gt; with the absolute path to your projects directory. The Docker approach provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Better security isolation for shell command execution&lt;/li&gt; 
 &lt;li&gt;No need to install language servers and dependencies locally&lt;/li&gt; 
 &lt;li&gt;Consistent environment across different systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Alternatively, use docker compose with the &lt;code&gt;compose.yml&lt;/code&gt; file provided in the repository.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/DOCKER.md"&gt;Docker documentation&lt;/a&gt; for detailed setup instructions, configuration options, and known limitations.&lt;/p&gt; 
&lt;h5&gt;Using Nix&lt;/h5&gt; 
&lt;p&gt;If you are using Nix and &lt;a href="https://nixos.wiki/wiki/flakes"&gt;have enabled the &lt;code&gt;nix-command&lt;/code&gt; and &lt;code&gt;flakes&lt;/code&gt; features&lt;/a&gt;, you can run Serena using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nix run github:oraios/serena -- start-mcp-server --transport stdio
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also install Serena by referencing this repo (&lt;code&gt;github:oraios/serena&lt;/code&gt;) and using it in your Nix flake. The package is exported as &lt;code&gt;serena&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;SSE Mode&lt;/h4&gt; 
&lt;p&gt;ℹ️ Note that MCP servers which use stdio as a protocol are somewhat unusual as far as client/server architectures go, as the server necessarily has to be started by the client in order for communication to take place via the server's standard input/output stream. In other words, you do not need to start the server yourself. The client application (e.g. Claude Desktop) takes care of this and therefore needs to be configured with a launch command.&lt;/p&gt; 
&lt;p&gt;When using instead the SSE mode, which uses HTTP-based communication, you control the server lifecycle yourself, i.e. you start the server and provide the client with the URL to connect to it.&lt;/p&gt; 
&lt;p&gt;Simply provide &lt;code&gt;start-mcp-server&lt;/code&gt; with the &lt;code&gt;--transport sse&lt;/code&gt; option and optionally provide the port. For example, to run the Serena MCP server in SSE mode on port 9121 using a local installation, you would run this command from the Serena directory,&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;uv run serena start-mcp-server --transport sse --port 9121
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and then configure your client to connect to &lt;code&gt;http://localhost:9121/sse&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Command-Line Arguments&lt;/h4&gt; 
&lt;p&gt;The Serena MCP server supports a wide range of additional command-line options, including the option to run in SSE mode and to adapt Serena to various &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#modes-and-contexts"&gt;contexts and modes of operation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Run with parameter &lt;code&gt;--help&lt;/code&gt; to get a list of available options.&lt;/p&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Serena is very flexible in terms of configuration. While for most users, the default configurations will work, you can fully adjust it to your needs by editing a few yaml files. You can disable tools, change Serena's instructions (what we denote as the &lt;code&gt;system_prompt&lt;/code&gt;), adjust the output of tools that just provide a prompt, and even adjust tool descriptions.&lt;/p&gt; 
&lt;p&gt;Serena is configured in four places:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;serena_config.yml&lt;/code&gt; for general settings that apply to all clients and projects. It is located in your user directory under &lt;code&gt;.serena/serena_config.yml&lt;/code&gt;. If you do not explicitly create the file, it will be auto-generated when you first run Serena. You can edit it directly or use&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;uvx --from git+https://github.com/oraios/serena serena config edit
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(or use the &lt;code&gt;--directory&lt;/code&gt; command version).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the arguments passed to the &lt;code&gt;start-mcp-server&lt;/code&gt; in your client's config (see below), which will apply to all sessions started by the respective client. In particular, the &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#contexts"&gt;context&lt;/a&gt; parameter should be set appropriately for Serena to be best adjusted to existing tools and capabilities of your client. See for a detailed explanation. You can override all entries from the &lt;code&gt;serena_config.yml&lt;/code&gt; through command line arguments.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the &lt;code&gt;.serena/project.yml&lt;/code&gt; file within your project. This will hold project-level configuration that is used whenever that project is activated. This file will be autogenerated when you first use Serena on that project, but you can also generate it explicitly with&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;uvx --from git+https://github.com/oraios/serena serena project generate-yml
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(or use the &lt;code&gt;--directory&lt;/code&gt; command version).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Through the context and modes. Explore the &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#modes-and-contexts"&gt;modes and contexts&lt;/a&gt; section for more details.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;After the initial setup, continue with one of the sections below, depending on how you want to use Serena.&lt;/p&gt; 
&lt;h3&gt;Project Activation &amp;amp; Indexing&lt;/h3&gt; 
&lt;p&gt;If you are mostly working with the same project, you can configure to always activate it at startup by passing &lt;code&gt;--project &amp;lt;path_or_name&amp;gt;&lt;/code&gt; to the &lt;code&gt;start-mcp-server&lt;/code&gt; command in your client's MCP config. This is especially useful for clients which configure MCP servers on a per-project basis, like Claude Code.&lt;/p&gt; 
&lt;p&gt;Otherwise, the recommended way is to just ask the LLM to activate a project by providing it an absolute path to, or, in case the project was activated in the past, by its name. The default project name is the directory name.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;"Activate the project /path/to/my_project"&lt;/li&gt; 
 &lt;li&gt;"Activate the project my_project"&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All projects that have been activated will be automatically added to your &lt;code&gt;serena_config.yml&lt;/code&gt;, and for each project, the file &lt;code&gt;.serena/project.yml&lt;/code&gt; will be generated. You can adjust the latter, e.g., by changing the name (which you refer to during the activation) or other options. Make sure to not have two different projects with the same name.&lt;/p&gt; 
&lt;p&gt;ℹ️ For larger projects, we recommend that you index your project to accelerate Serena's tools; otherwise the first tool application may be very slow. To do so, run this from the project directory (or pass the path to the project as an argument):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;uvx --from git+https://github.com/oraios/serena serena project index
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(or use the &lt;code&gt;--directory&lt;/code&gt; command version).&lt;/p&gt; 
&lt;h3&gt;Claude Code&lt;/h3&gt; 
&lt;p&gt;Serena is a great way to make Claude Code both cheaper and more powerful!&lt;/p&gt; 
&lt;p&gt;From your project directory, add serena with a command like this,&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;claude mcp add serena -- &amp;lt;serena-mcp-server&amp;gt; --context ide-assistant --project $(pwd)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;serena-mcp-server&amp;gt;&lt;/code&gt; is your way of &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#running-the-serena-mcp-server"&gt;running the Serena MCP server&lt;/a&gt;. For example, when using &lt;code&gt;uvx&lt;/code&gt;, you would run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;claude mcp add serena -- uvx --from git+https://github.com/oraios/serena serena start-mcp-server --context ide-assistant --project $(pwd)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ℹ️ Serena comes with an instruction text, and Claude needs to read it to properly use Serena's tools. As of version &lt;code&gt;v1.0.52&lt;/code&gt;, claude code reads the instructions of the MCP server, so this &lt;strong&gt;is handled automatically&lt;/strong&gt;. If you are using an older version, or if Claude fails to read the instructions, you can ask it explicitly to "read Serena's initial instructions" or run &lt;code&gt;/mcp__serena__initial_instructions&lt;/code&gt; to load the instruction text. If you want to make use of that, you will have to enable the corresponding tool explicitly by adding &lt;code&gt;initial_instructions&lt;/code&gt; to the &lt;code&gt;included_optional_tools&lt;/code&gt; in your config. Note that you may have to make Claude read the instructions when you start a new conversation and after any compacting operation to ensure Claude remains properly configured to use Serena's tools.&lt;/p&gt; 
&lt;h3&gt;Codex&lt;/h3&gt; 
&lt;p&gt;Serena works with OpenAI's Codex CLI out of the box, but you have to use the &lt;code&gt;codex&lt;/code&gt; context for it to work properly. (The technical reason is that Codex doesn't fully support the MCP specifications, so some massaging of tools is required.).&lt;/p&gt; 
&lt;p&gt;Unlike Claude Code, in Codex you add an MCP server globally and not per project. Add the following to &lt;code&gt;~/.codex/config.toml&lt;/code&gt; (create the file if it does not exist):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[mcp_servers.serena]
command = "uvx"
args = ["--from", "git+https://github.com/oraios/serena", "serena", "start-mcp-server", "--context", "codex"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After codex has started, you need to activate the project, which you can do by saying:&lt;/p&gt; 
&lt;p&gt;"Activate the current dir as project using serena"&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you don't activate the project, you will not be able to use Serena's tools!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;That's it! Have a look at &lt;code&gt;~/.codex/log/codex-tui.log&lt;/code&gt; to see if any errors occurred.&lt;/p&gt; 
&lt;p&gt;The Serena dashboard will run if you have not disabled it in the configuration, but due to Codex's sandboxing the webbrowser may not open automatically. You can open it manually by going to &lt;code&gt;http://localhost:24282/dashboard/index.html&lt;/code&gt; (or a higher port, if that was already taken).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Codex will often show the tools as &lt;code&gt;failed&lt;/code&gt; even though they are successfully executed. This is not a problem, seems to be a bug in Codex. Despite the error message, everything works as expected.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Other Terminal-Based Clients&lt;/h3&gt; 
&lt;p&gt;There are many terminal-based coding assistants that support MCP servers, such as &lt;a href="https://github.com/openai/codex?tab=readme-ov-file#model-context-protocol-mcp"&gt;Codex&lt;/a&gt;, &lt;a href="https://github.com/google-gemini/gemini-cli"&gt;Gemini-CLI&lt;/a&gt;, &lt;a href="https://github.com/QwenLM/Qwen3-Coder"&gt;Qwen3-Coder&lt;/a&gt;, &lt;a href="https://community.atlassian.com/forums/Rovo-for-Software-Teams-Beta/Introducing-Rovo-Dev-CLI-AI-Powered-Development-in-your-terminal/ba-p/3043623"&gt;rovodev&lt;/a&gt;, the &lt;a href="https://docs.all-hands.dev/usage/how-to/cli-mode"&gt;OpenHands CLI&lt;/a&gt; and &lt;a href="https://github.com/sst/opencode"&gt;opencode&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;They generally benefit from the symbolic tools provided by Serena. You might want to customize some aspects of Serena by writing your own context, modes or prompts to adjust it to your workflow, to other MCP servers you are using, and to the client's internal capabilities.&lt;/p&gt; 
&lt;h3&gt;Claude Desktop&lt;/h3&gt; 
&lt;p&gt;For &lt;a href="https://claude.ai/download"&gt;Claude Desktop&lt;/a&gt; (available for Windows and macOS), go to File / Settings / Developer / MCP Servers / Edit Config, which will let you open the JSON file &lt;code&gt;claude_desktop_config.json&lt;/code&gt;. Add the &lt;code&gt;serena&lt;/code&gt; MCP server configuration, using a &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#running-the-serena-mcp-server"&gt;run command&lt;/a&gt; depending on your setup.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;local installation:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
    "mcpServers": {
        "serena": {
            "command": "/abs/path/to/uv",
            "args": ["run", "--directory", "/abs/path/to/serena", "serena", "start-mcp-server"]
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;uvx:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
    "mcpServers": {
        "serena": {
            "command": "/abs/path/to/uvx",
            "args": ["--from", "git+https://github.com/oraios/serena", "serena", "start-mcp-server"]
        }
    }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;docker:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt; {
     "mcpServers": {
         "serena": {
             "command": "docker",
             "args": ["run", "--rm", "-i", "--network", "host", "-v", "/path/to/your/projects:/workspaces/projects", "ghcr.io/oraios/serena:latest", "serena", "start-mcp-server", "--transport", "stdio"]
         }
     }
 }
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are using paths containing backslashes for paths on Windows (note that you can also just use forward slashes), be sure to escape them correctly (&lt;code&gt;\\&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;That's it! Save the config and then restart Claude Desktop. You are ready for activating your first project.&lt;/p&gt; 
&lt;p&gt;ℹ️ You can further customize the run command using additional arguments (see &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#command-line-arguments"&gt;above&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;Note: on Windows and macOS there are official Claude Desktop applications by Anthropic, for Linux there is an &lt;a href="https://github.com/aaddrick/claude-desktop-debian"&gt;open-source community version&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;⚠️ Be sure to fully quit the Claude Desktop application, as closing Claude will just minimize it to the system tray – at least on Windows.&lt;/p&gt; 
&lt;p&gt;⚠️ Some clients may leave behind zombie processes. You will have to find and terminate them manually then. With Serena, you can activate the &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#serenas-logs-the-dashboard-and-gui-tool"&gt;dashboard&lt;/a&gt; to prevent unnoted processes and also use the dashboard for shutting down Serena.&lt;/p&gt; 
&lt;p&gt;After restarting, you should see Serena's tools in your chat interface (notice the small hammer icon).&lt;/p&gt; 
&lt;p&gt;For more information on MCP servers with Claude Desktop, see &lt;a href="https://modelcontextprotocol.io/quickstart/user"&gt;the official quick start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;MCP Coding Clients (Cline, Roo-Code, Cursor, Windsurf, etc.)&lt;/h3&gt; 
&lt;p&gt;Being an MCP Server, Serena can be included in any MCP Client. The same configuration as above, perhaps with small client-specific modifications, should work. Most of the popular existing coding assistants (IDE extensions or VSCode-like IDEs) support connections to MCP Servers. It is &lt;strong&gt;recommended to use the &lt;code&gt;ide-assistant&lt;/code&gt; context&lt;/strong&gt; for these integrations by adding &lt;code&gt;"--context", "ide-assistant"&lt;/code&gt; to the &lt;code&gt;args&lt;/code&gt; in your MCP client's configuration. Including Serena generally boosts their performance by providing them tools for symbolic operations.&lt;/p&gt; 
&lt;p&gt;In this case, the billing for the usage continues to be controlled by the client of your choice (unlike with the Claude Desktop client). But you may still want to use Serena through such an approach, e.g., for one of the following reasons:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;You are already using a coding assistant (say Cline or Cursor) and just want to make it more powerful.&lt;/li&gt; 
 &lt;li&gt;You are on Linux and don't want to use the &lt;a href="https://github.com/aaddrick/claude-desktop-debian"&gt;community-created Claude Desktop&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;You want tighter integration of Serena into your IDE and don't mind paying for that.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Local GUIs and Frameworks&lt;/h3&gt; 
&lt;p&gt;Over the last months, several technologies have emerged that allow you to run a powerful local GUI and connect it to an MCP server. They will work with Serena out of the box. Some of the leading open source GUI technologies offering this are &lt;a href="https://jan.ai/docs/mcp"&gt;Jan&lt;/a&gt;, &lt;a href="https://github.com/All-Hands-AI/OpenHands/"&gt;OpenHands&lt;/a&gt;, &lt;a href="https://docs.openwebui.com/openapi-servers/mcp"&gt;OpenWebUI&lt;/a&gt; and &lt;a href="https://docs.agno.com/introduction/playground"&gt;Agno&lt;/a&gt;. They allow combining Serena with almost any LLM (including locally running ones) and offer various other integrations.&lt;/p&gt; 
&lt;h2&gt;Detailed Usage and Recommendations&lt;/h2&gt; 
&lt;h3&gt;Tool Execution&lt;/h3&gt; 
&lt;p&gt;Serena combines tools for semantic code retrieval with editing capabilities and shell execution. Serena's behavior can be further customized through &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#modes-and-contexts"&gt;Modes and Contexts&lt;/a&gt;. Find the complete list of tools &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/#full-list-of-tools"&gt;below&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The use of all tools is generally recommended, as this allows Serena to provide the most value: Only by executing shell commands (in particular, tests) can Serena identify and correct mistakes autonomously.&lt;/p&gt; 
&lt;h4&gt;Shell Execution and Editing Tools&lt;/h4&gt; 
&lt;p&gt;However, it should be noted that the &lt;code&gt;execute_shell_command&lt;/code&gt; tool allows for arbitrary code execution. When using Serena as an MCP Server, clients will typically ask the user for permission before executing a tool, so as long as the user inspects execution parameters beforehand, this should not be a problem. However, if you have concerns, you can choose to disable certain commands in your project's .yml configuration file. If you only want to use Serena purely for analyzing code and suggesting implementations without modifying the codebase, you can enable read-only mode by setting &lt;code&gt;read_only: true&lt;/code&gt; in your project configuration file. This will automatically disable all editing tools and prevent any modifications to your codebase while still allowing all analysis and exploration capabilities.&lt;/p&gt; 
&lt;p&gt;In general, be sure to back up your work and use a version control system in order to avoid losing any work.&lt;/p&gt; 
&lt;h3&gt;Modes and Contexts&lt;/h3&gt; 
&lt;p&gt;Serena's behavior and toolset can be adjusted using contexts and modes. These allow for a high degree of customization to best suit your workflow and the environment Serena is operating in.&lt;/p&gt; 
&lt;h4&gt;Contexts&lt;/h4&gt; 
&lt;p&gt;A context defines the general environment in which Serena is operating. It influences the initial system prompt and the set of available tools. A context is set at startup when launching Serena (e.g., via CLI options for an MCP server or in the agent script) and cannot be changed during an active session.&lt;/p&gt; 
&lt;p&gt;Serena comes with pre-defined contexts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;desktop-app&lt;/code&gt;: Tailored for use with desktop applications like Claude Desktop. This is the default.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;agent&lt;/code&gt;: Designed for scenarios where Serena acts as a more autonomous agent, for example, when used with Agno.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ide-assistant&lt;/code&gt;: Optimized for integration into IDEs like VSCode, Cursor, or Cline, focusing on in-editor coding assistance. Choose the context that best matches the type of integration you are using.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When launching Serena, specify the context using &lt;code&gt;--context &amp;lt;context-name&amp;gt;&lt;/code&gt;. Note that for cases where parameter lists are specified (e.g. Claude Desktop), you must add two parameters to the list.&lt;/p&gt; 
&lt;p&gt;If you are using a local server (such as Llama.cpp) which requires you to use OpenAI-compatible tool descriptions, use context &lt;code&gt;oaicompat-agent&lt;/code&gt; instead of &lt;code&gt;agent&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Modes&lt;/h4&gt; 
&lt;p&gt;Modes further refine Serena's behavior for specific types of tasks or interaction styles. Multiple modes can be active simultaneously, allowing you to combine their effects. Modes influence the system prompt and can also alter the set of available tools by excluding certain ones.&lt;/p&gt; 
&lt;p&gt;Examples of built-in modes include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;planning&lt;/code&gt;: Focuses Serena on planning and analysis tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;editing&lt;/code&gt;: Optimizes Serena for direct code modification tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;interactive&lt;/code&gt;: Suitable for a conversational, back-and-forth interaction style.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;one-shot&lt;/code&gt;: Configures Serena for tasks that should be completed in a single response, often used with &lt;code&gt;planning&lt;/code&gt; for generating reports or initial plans.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;no-onboarding&lt;/code&gt;: Skips the initial onboarding process if it's not needed for a particular session.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onboarding&lt;/code&gt;: (Usually triggered automatically) Focuses on the project onboarding process.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Modes can be set at startup (similar to contexts) but can also be &lt;em&gt;switched dynamically&lt;/em&gt; during a session. You can instruct the LLM to use the &lt;code&gt;switch_modes&lt;/code&gt; tool to activate a different set of modes (e.g., "switch to planning and one-shot modes").&lt;/p&gt; 
&lt;p&gt;When launching Serena, specify modes using &lt;code&gt;--mode &amp;lt;mode-name&amp;gt;&lt;/code&gt;; multiple modes can be specified, e.g. &lt;code&gt;--mode planning --mode no-onboarding&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;Mode Compatibility&lt;/strong&gt;: While you can combine modes, some may be semantically incompatible (e.g., &lt;code&gt;interactive&lt;/code&gt; and &lt;code&gt;one-shot&lt;/code&gt;). Serena currently does not prevent incompatible combinations; it is up to the user to choose sensible mode configurations.&lt;/p&gt; 
&lt;h4&gt;Customization&lt;/h4&gt; 
&lt;p&gt;You can create your own contexts and modes to precisely tailor Serena to your needs in two ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can use Serena's CLI to manage modes and contexts. Check out&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;uvx --from git+https://github.com/oraios/serena serena mode --help
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;and&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;uvx --from git+https://github.com/oraios/serena serena context --help
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;NOTE&lt;/em&gt;: Custom contexts/modes are simply YAML files in &lt;code&gt;&amp;lt;home&amp;gt;/.serena&lt;/code&gt;, they are automatically registered and available for use by their name (filename without the &lt;code&gt;.yml&lt;/code&gt; extension). If you don't want to use Serena's CLI, you can create and manage them in any way you see fit.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Using external YAML files&lt;/strong&gt;: When starting Serena, you can also provide an absolute path to a custom &lt;code&gt;.yml&lt;/code&gt; file for a context or mode.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This customization allows for deep integration and adaptation of Serena to specific project requirements or personal preferences.&lt;/p&gt; 
&lt;h3&gt;Onboarding and Memories&lt;/h3&gt; 
&lt;p&gt;By default, Serena will perform an &lt;strong&gt;onboarding process&lt;/strong&gt; when it is started for the first time for a project. The goal of the onboarding is for Serena to get familiar with the project and to store memories, which it can then draw upon in future interactions. If an LLM should fail to complete the onboarding and does not actually write the respective memories to disk, you may need to ask it to do so explicitly.&lt;/p&gt; 
&lt;p&gt;The onboarding will usually read a lot of content from the project, thus filling up the context. It can therefore be advisable to switch to another conversation once the onboarding is complete. After the onboarding, we recommend that you have a quick look at the memories and, if necessary, edit them or add additional ones.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Memories&lt;/strong&gt; are files stored in &lt;code&gt;.serena/memories/&lt;/code&gt; in the project directory, which the agent can choose to read in subsequent interactions. Feel free to read and adjust them as needed; you can also add new ones manually. Every file in the &lt;code&gt;.serena/memories/&lt;/code&gt; directory is a memory file. Whenever Serena starts working on a project, the list of memories is provided, and the agent can decide to read them. We found that memories can significantly improve the user experience with Serena.&lt;/p&gt; 
&lt;h3&gt;Prepare Your Project&lt;/h3&gt; 
&lt;h4&gt;Structure Your Codebase&lt;/h4&gt; 
&lt;p&gt;Serena uses the code structure for finding, reading and editing code. This means that it will work well with well-structured code but may perform poorly on fully unstructured one (like a "God class" with enormous, non-modular functions). Furthermore, for languages that are not statically typed, type annotations are highly beneficial.&lt;/p&gt; 
&lt;h4&gt;Start from a Clean State&lt;/h4&gt; 
&lt;p&gt;It is best to start a code generation task from a clean git state. Not only will this make it easier for you to inspect the changes, but also the model itself will have a chance of seeing what it has changed by calling &lt;code&gt;git diff&lt;/code&gt; and thereby correct itself or continue working in a followup conversation if needed.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; &lt;strong&gt;Important&lt;/strong&gt;: since Serena will write to files using the system-native line endings and it might want to look at the git diff, it is important to set &lt;code&gt;git config core.autocrlf&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; on Windows. With &lt;code&gt;git config core.autocrlf&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt; on Windows, you may end up with huge diffs only due to line endings. It is generally a good idea to globally enable this git setting on Windows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git config --global core.autocrlf true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Logging, Linting, and Automated Tests&lt;/h4&gt; 
&lt;p&gt;Serena can successfully complete tasks in an &lt;em&gt;agent loop&lt;/em&gt;, where it iteratively acquires information, performs actions, and reflects on the results. However, Serena cannot use a debugger; it must rely on the results of program executions, linting results, and test results to assess the correctness of its actions. Therefore, software that is designed to meaningful interpretable outputs (e.g. log messages) and that has a good test coverage is much easier to work with for Serena.&lt;/p&gt; 
&lt;p&gt;We generally recommend to start an editing task from a state where all linting checks and tests pass.&lt;/p&gt; 
&lt;h3&gt;Prompting Strategies&lt;/h3&gt; 
&lt;p&gt;We found that it is often a good idea to spend some time conceptualizing and planning a task before actually implementing it, especially for non-trivial task. This helps both in achieving better results and in increasing the feeling of control and staying in the loop. You can make a detailed plan in one session, where Serena may read a lot of your code to build up the context, and then continue with the implementation in another (potentially after creating suitable memories).&lt;/p&gt; 
&lt;h3&gt;Potential Issues in Code Editing&lt;/h3&gt; 
&lt;p&gt;In our experience, LLMs are bad at counting, i.e. they have problems inserting blocks of code in the right place. Most editing operations can be performed at the symbolic level, allowing this problem is overcome. However, sometimes, line-level insertions are useful.&lt;/p&gt; 
&lt;p&gt;Serena is instructed to double-check the line numbers and any code blocks that it will edit, but you may find it useful to explicitly tell it how to edit code if you run into problems. We are working on making Serena's editing capabilities more robust.&lt;/p&gt; 
&lt;h3&gt;Running Out of Context&lt;/h3&gt; 
&lt;p&gt;For long and complicated tasks, or tasks where Serena has read a lot of content, you may come close to the limits of context tokens. In that case, it is often a good idea to continue in a new conversation. Serena has a dedicated tool to create a summary of the current state of the progress and all relevant info for continuing it. You can request to create this summary and write it to a memory. Then, in a new conversation, you can just ask Serena to read the memory and continue with the task. In our experience, this worked really well. On the up-side, since in a single session there is no summarization involved, Serena does not usually get lost (unlike some other agents that summarize under the hood), and it is also instructed to occasionally check whether it's on the right track.&lt;/p&gt; 
&lt;p&gt;Moreover, Serena is instructed to be frugal with context (e.g., to not read bodies of code symbols unnecessarily), but we found that Claude is not always very good in being frugal (Gemini seemed better at it). You can explicitly instruct it to not read the bodies if you know that it's not needed.&lt;/p&gt; 
&lt;h3&gt;Combining Serena with Other MCP Servers&lt;/h3&gt; 
&lt;p&gt;When using Serena through an MCP Client, you can use it together with other MCP servers. However, beware of tool name collisions! See info on that above.&lt;/p&gt; 
&lt;p&gt;Currently, there is a collision with the popular Filesystem MCP Server. Since Serena also provides filesystem operations, there is likely no need to ever enable these two simultaneously.&lt;/p&gt; 
&lt;h3&gt;Serena's Logs: The Dashboard and GUI Tool&lt;/h3&gt; 
&lt;p&gt;Serena provides two convenient ways of accessing the logs of the current session:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;via the &lt;strong&gt;web-based dashboard&lt;/strong&gt; (enabled by default)&lt;/p&gt; &lt;p&gt;This is supported on all platforms. By default, it will be accessible at &lt;code&gt;http://localhost:24282/dashboard/index.html&lt;/code&gt;, but a higher port may be used if the default port is unavailable/multiple instances are running.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;via the &lt;strong&gt;GUI tool&lt;/strong&gt; (disabled by default)&lt;/p&gt; &lt;p&gt;This is mainly supported on Windows, but it may also work on Linux; macOS is unsupported.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both can be enabled, configured or disabled in Serena's configuration file (&lt;code&gt;serena_config.yml&lt;/code&gt;, see above). If enabled, they will automatically be opened as soon as the Serena agent/MCP server is started. The web dashboard will display usage statistics of Serena's tools if you set &lt;code&gt;record_tool_usage_stats: True&lt;/code&gt; in your config.&lt;/p&gt; 
&lt;p&gt;In addition to viewing logs, both tools allow to shut down the Serena agent. This function is provided, because clients like Claude Desktop may fail to terminate the MCP server subprocess when they themselves are closed.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Support for MCP Servers in Claude Desktop and the various MCP Server SDKs are relatively new developments and may display instabilities.&lt;/p&gt; 
&lt;p&gt;The working configuration of an MCP server may vary from platform to platform and from client to client. We recommend always using absolute paths, as relative paths may be sources of errors. The language server is running in a separate sub-process and is called with asyncio – sometimes a client may make it crash. If you have Serena's log window enabled, and it disappears, you'll know what happened.&lt;/p&gt; 
&lt;p&gt;Some clients may not properly terminate MCP servers, look out for hanging python processes and terminate them manually, if needed.&lt;/p&gt; 
&lt;h2&gt;Comparison with Other Coding Agents&lt;/h2&gt; 
&lt;p&gt;To our knowledge, Serena is the first fully-featured coding agent where the entire functionality is available through an MCP server, thus not requiring API keys or subscriptions.&lt;/p&gt; 
&lt;h3&gt;Subscription-Based Coding Agents&lt;/h3&gt; 
&lt;p&gt;Many prominent subscription-based coding agents are parts of IDEs like Windsurf, Cursor and VSCode. Serena's functionality is similar to Cursor's Agent, Windsurf's Cascade or VSCode's agent mode.&lt;/p&gt; 
&lt;p&gt;Serena has the advantage of not requiring a subscription. A potential disadvantage is that it is not directly integrated into an IDE, so the inspection of newly written code is not as seamless.&lt;/p&gt; 
&lt;p&gt;More technical differences are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Serena is not bound to a specific IDE or CLI. Serena's MCP server can be used with any MCP client (including some IDEs), and the Agno-based agent provides additional ways of applying its functionality.&lt;/li&gt; 
 &lt;li&gt;Serena is not bound to a specific large language model or API.&lt;/li&gt; 
 &lt;li&gt;Serena navigates and edits code using a language server, so it has a symbolic understanding of the code. IDE-based tools often use a RAG-based or purely text-based approach, which is often less powerful, especially for large codebases.&lt;/li&gt; 
 &lt;li&gt;Serena is open-source and has a small codebase, so it can be easily extended and modified.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API-Based Coding Agents&lt;/h3&gt; 
&lt;p&gt;An alternative to subscription-based agents are API-based agents like Claude Code, Cline, Aider, Roo Code and others, where the usage costs map directly to the API costs of the underlying LLM. Some of them (like Cline) can even be included in IDEs as an extension. They are often very powerful and their main downside are the (potentially very high) API costs.&lt;/p&gt; 
&lt;p&gt;Serena itself can be used as an API-based agent (see the section on Agno above). We have not yet written a CLI tool or a dedicated IDE extension for Serena (and there is probably no need for the latter, as Serena can already be used with any IDE that supports MCP servers). If there is demand for a Serena as a CLI tool like Claude Code, we will consider writing one.&lt;/p&gt; 
&lt;p&gt;The main difference between Serena and other API-based agents is that Serena can also be used as an MCP server, thus not requiring an API key and bypassing the API costs. This is a unique feature of Serena.&lt;/p&gt; 
&lt;h3&gt;Other MCP-Based Coding Agents&lt;/h3&gt; 
&lt;p&gt;There are other MCP servers designed for coding, like &lt;a href="https://github.com/wonderwhy-er/DesktopCommanderMCP"&gt;DesktopCommander&lt;/a&gt; and &lt;a href="https://github.com/ezyang/codemcp"&gt;codemcp&lt;/a&gt;. However, to the best of our knowledge, none of them provide semantic code retrieval and editing tools; they rely purely on text-based analysis. It is the integration of language servers and the MCP that makes Serena unique and so powerful for challenging coding tasks, especially in the context of larger codebases.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We built Serena on top of multiple existing open-source technologies, the most important ones being:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/multilspy"&gt;multilspy&lt;/a&gt;. A library which wraps language server implementations and adapts them for interaction via Python and which provided the basis for our library Solid-LSP (src/solidlsp). Solid-LSP provides pure synchronous LSP calls and extends the original library with the symbolic logic that Serena required.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/modelcontextprotocol/python-sdk"&gt;Python MCP SDK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agno-agi/agno"&gt;Agno&lt;/a&gt; and the associated &lt;a href="https://github.com/agno-agi/agent-ui"&gt;agent-ui&lt;/a&gt;, which we use to allow Serena to work with any model, beyond the ones supporting the MCP.&lt;/li&gt; 
 &lt;li&gt;All the language servers that we use through Solid-LSP.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Without these projects, Serena would not have been possible (or would have been significantly more difficult to build).&lt;/p&gt; 
&lt;h2&gt;Customizing and Extending Serena&lt;/h2&gt; 
&lt;p&gt;It is straightforward to extend Serena's AI functionality with your own ideas. Simply implement a new tool by subclassing &lt;code&gt;serena.agent.Tool&lt;/code&gt; and implement the &lt;code&gt;apply&lt;/code&gt; method with a signature that matches the tool's requirements. Once implemented, &lt;code&gt;SerenaAgent&lt;/code&gt; will automatically have access to the new tool.&lt;/p&gt; 
&lt;p&gt;It is also relatively straightforward to add &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/.serena/memories/adding_new_language_support_guide.md"&gt;support for a new programming language&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We look forward to seeing what the community will come up with! For details on contributing, see &lt;a href="https://raw.githubusercontent.com/oraios/serena/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;List of Tools&lt;/h2&gt; 
&lt;p&gt;Here is the list of Serena's default tools with a short description (output of &lt;code&gt;uv run serena tools list&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;activate_project&lt;/code&gt;: Activates a project by name.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;check_onboarding_performed&lt;/code&gt;: Checks whether project onboarding was already performed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;create_text_file&lt;/code&gt;: Creates/overwrites a file in the project directory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;delete_memory&lt;/code&gt;: Deletes a memory from Serena's project-specific memory store.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;execute_shell_command&lt;/code&gt;: Executes a shell command.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;find_file&lt;/code&gt;: Finds files in the given relative paths&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;find_referencing_symbols&lt;/code&gt;: Finds symbols that reference the symbol at the given location (optionally filtered by type).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;find_symbol&lt;/code&gt;: Performs a global (or local) search for symbols with/containing a given name/substring (optionally filtered by type).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;get_symbols_overview&lt;/code&gt;: Gets an overview of the top-level symbols defined in a given file.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;insert_after_symbol&lt;/code&gt;: Inserts content after the end of the definition of a given symbol.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;insert_before_symbol&lt;/code&gt;: Inserts content before the beginning of the definition of a given symbol.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;list_dir&lt;/code&gt;: Lists files and directories in the given directory (optionally with recursion).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;list_memories&lt;/code&gt;: Lists memories in Serena's project-specific memory store.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onboarding&lt;/code&gt;: Performs onboarding (identifying the project structure and essential tasks, e.g. for testing or building).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;prepare_for_new_conversation&lt;/code&gt;: Provides instructions for preparing for a new conversation (in order to continue with the necessary context).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;read_file&lt;/code&gt;: Reads a file within the project directory.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;read_memory&lt;/code&gt;: Reads the memory with the given name from Serena's project-specific memory store.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;replace_regex&lt;/code&gt;: Replaces content in a file by using regular expressions.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;replace_symbol_body&lt;/code&gt;: Replaces the full definition of a symbol.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;search_for_pattern&lt;/code&gt;: Performs a search for a pattern in the project.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;think_about_collected_information&lt;/code&gt;: Thinking tool for pondering the completeness of collected information.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;think_about_task_adherence&lt;/code&gt;: Thinking tool for determining whether the agent is still on track with the current task.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;think_about_whether_you_are_done&lt;/code&gt;: Thinking tool for determining whether the task is truly completed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;write_memory&lt;/code&gt;: Writes a named memory (for future reference) to Serena's project-specific memory store.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are several tools that are disabled by default, and have to be enabled explicitly, e.g., through the context or modes. Note that several of our default contexts do enable some of these tools. For example, the &lt;code&gt;desktop-app&lt;/code&gt; context enables the &lt;code&gt;execute_shell_command&lt;/code&gt; tool.&lt;/p&gt; 
&lt;p&gt;The full list of optional tools is (output of &lt;code&gt;uv run serena tools list --only-optional&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;delete_lines&lt;/code&gt;: Deletes a range of lines within a file.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;get_current_config&lt;/code&gt;: Prints the current configuration of the agent, including the active and available projects, tools, contexts, and modes.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;initial_instructions&lt;/code&gt;: Gets the initial instructions for the current project. Should only be used in settings where the system prompt cannot be set, e.g. in clients you have no control over, like Claude Desktop.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;insert_at_line&lt;/code&gt;: Inserts content at a given line in a file.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jet_brains_find_referencing_symbols&lt;/code&gt;: Finds symbols that reference the given symbol&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jet_brains_find_symbol&lt;/code&gt;: Performs a global (or local) search for symbols with/containing a given name/substring (optionally filtered by type).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;jet_brains_get_symbols_overview&lt;/code&gt;: Retrieves an overview of the top-level symbols within a specified file&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;remove_project&lt;/code&gt;: Removes a project from the Serena configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;replace_lines&lt;/code&gt;: Replaces a range of lines within a file with new content.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;restart_language_server&lt;/code&gt;: Restarts the language server, may be necessary when edits not through Serena happen.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;summarize_changes&lt;/code&gt;: Provides instructions for summarizing the changes made to the codebase.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;switch_modes&lt;/code&gt;: Activates modes by providing a list of their names&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>