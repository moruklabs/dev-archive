<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Fri, 25 Jul 2025 01:31:58 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>cosmos/cosmos-sdk</title>
      <link>https://github.com/cosmos/cosmos-sdk</link>
      <description>&lt;p&gt;‚õìÔ∏è A Framework for Building High Value Public Blockchains ‚ú®&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt; Cosmos SDK &lt;/h1&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/docs/static/img/banner.jpg" alt="banner"&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/cosmos/cosmos-sdk/raw/main/LICENSE"&gt; &lt;img alt="License: Apache-2.0" src="https://img.shields.io/github/license/cosmos/cosmos-sdk.svg?sanitize=true"&gt; &lt;/a&gt; 
 &lt;a href="https://pkg.go.dev/github.com/cosmos/cosmos-sdk"&gt; &lt;img src="https://pkg.go.dev/badge/github.com/cosmos/cosmos-sdk.svg?sanitize=true" alt="Go Reference"&gt; &lt;/a&gt; 
 &lt;a href="https://goreportcard.com/report/github.com/cosmos/cosmos-sdk"&gt; &lt;img alt="Go report card" src="https://goreportcard.com/badge/github.com/cosmos/cosmos-sdk"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://discord.com/invite/interchain"&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/669268347736686612.svg?sanitize=true"&gt; &lt;/a&gt; 
 &lt;a href="https://sourcegraph.com/github.com/cosmos/cosmos-sdk?badge"&gt; &lt;img alt="Imported by" src="https://sourcegraph.com/github.com/cosmos/cosmos-sdk/-/badge.svg?sanitize=true"&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/cosmos/cosmos-sdk/actions/workflows/sims.yml"&gt; &lt;img alt="Sims" src="https://github.com/cosmos/cosmos-sdk/workflows/Sims/badge.svg?sanitize=true"&gt; &lt;/a&gt;
 &lt;a href="https://github.com/cosmos/cosmos-sdk/actions/workflows/lint.yml"&gt; &lt;img alt="Lint Status" src="https://github.com/cosmos/cosmos-sdk/workflows/Lint/badge.svg?sanitize=true"&gt; &lt;/a&gt;
&lt;/div&gt;
&lt;a href="https://github.com/cosmos/cosmos-sdk/actions/workflows/lint.yml"&gt; &lt;/a&gt;
&lt;p&gt;&lt;a href="https://github.com/cosmos/cosmos-sdk/actions/workflows/lint.yml"&gt;The Cosmos SDK is a framework for building blockchain applications. &lt;/a&gt;&lt;a href="https://github.com/cometbft/cometbft"&gt;CometBFT (BFT Consensus)&lt;/a&gt; and the Cosmos SDK are written in the Go programming language. Cosmos SDK is used to build &lt;a href="https://github.com/cosmos/gaia"&gt;Gaia&lt;/a&gt;, the implementation of the Cosmos Hub.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WARNING&lt;/strong&gt;: The Cosmos SDK has mostly stabilized, but we are still making some breaking changes.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: We advise to always use the latest maintained &lt;a href="https://go.dev/dl"&gt;Go&lt;/a&gt; version for building Cosmos SDK applications.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;To learn how the Cosmos SDK works from a high-level perspective, see the Cosmos SDK &lt;a href="https://docs.cosmos.network/main/intro/overview"&gt;High-Level Intro&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to get started quickly and learn how to build on top of Cosmos SDK, visit &lt;a href="https://tutorials.cosmos.network"&gt;Cosmos SDK Tutorials&lt;/a&gt;. You can also fork the tutorial's repository to get started building your own Cosmos SDK application.&lt;/p&gt; 
&lt;p&gt;For more information, see the &lt;a href="https://docs.cosmos.network"&gt;Cosmos SDK Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;p&gt;The Cosmos SDK maintains a set of modules that can be included in your blockchain application. For more information on modules, see our &lt;a href="https://raw.githubusercontent.com/cosmos/cosmos-sdk/main/x/README.md"&gt;introduction doc&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tools and Frameworks&lt;/h2&gt; 
&lt;p&gt;The Cosmos ecosystem is vast. &lt;a href="https://github.com/cosmos/awesome-cosmos"&gt;Awesome Cosmos&lt;/a&gt; is a community-curated list of notable frameworks, modules and tools.&lt;/p&gt; 
&lt;h3&gt;Cosmos Hub Mainnet&lt;/h3&gt; 
&lt;p&gt;The Cosmos Hub application, &lt;code&gt;gaia&lt;/code&gt;, has its own &lt;a href="https://github.com/cosmos/gaia"&gt;cosmos/gaia repository&lt;/a&gt;. Go there to join the Cosmos Hub mainnet and more.&lt;/p&gt; 
&lt;h3&gt;Inter-Blockchain Communication (IBC)&lt;/h3&gt; 
&lt;p&gt;The IBC module for the Cosmos SDK has its own &lt;a href="https://github.com/cosmos/ibc-go"&gt;cosmos/ibc-go repository&lt;/a&gt;. Go there to build and integrate with the IBC module.&lt;/p&gt; 
&lt;h2&gt;Disambiguation&lt;/h2&gt; 
&lt;p&gt;This Cosmos SDK project is not related to the &lt;a href="https://github.com/react-cosmos/react-cosmos"&gt;React-Cosmos&lt;/a&gt; project (yet). Many thanks to Evan Coury and Ovidiu (@skidding) for this Github organization name. As per our agreement, this disambiguation notice will stay here.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ibnaleem/gosearch</title>
      <link>https://github.com/ibnaleem/gosearch</link>
      <description>&lt;p&gt;üîç Search anyone's digital footprint across 300+ websites&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/gosearch-logo.png" height="50%" width="50%"&gt;&lt;br&gt; &lt;i&gt;This project heavily relies on contributors, please see &lt;a href="https://raw.githubusercontent.com/ibnaleem/gosearch/main/#contributing"&gt;Contributing&lt;/a&gt; for more details.&lt;/i&gt;&lt;br&gt; &lt;code&gt;go install github.com/ibnaleem/gosearch@latest&lt;/code&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/ibnaleem/gosearch/actions/workflows/go.yml/badge.svg?event=push" alt="GitHub Actions Badge"&gt; &lt;img src="https://img.shields.io/github/last-commit/ibnaleem/gosearch"&gt; &lt;img src="https://img.shields.io/github/commit-activity/w/ibnaleem/gosearch"&gt; &lt;img src="https://img.shields.io/github/contributors/ibnaleem/gosearch"&gt; &lt;img alt="Number of websites" src="https://img.shields.io/badge/websites-305-blue"&gt; &lt;img alt="GitHub repo size" src="https://img.shields.io/github/repo-size/ibnaleem/gosearch"&gt; &lt;img alt="GitHub License" src="https://img.shields.io/github/license/ibnaleem/gosearch"&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/1.png" height="80%" width="80%"&gt;&lt;br&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/2.png" height="80%" width="80%"&gt;&lt;br&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/3.png" height="80%" width="80%"&gt;&lt;br&gt; &lt;img src="https://raw.githubusercontent.com/ibnaleem/gosearch/main/img/4.png" height="80%" width="80%"&gt;&lt;br&gt; &lt;/p&gt; 
&lt;p&gt;You don't have time searching every profile with a username. Instead, you can leverage concurrency and a binary that does the work for you, and then some.&lt;/p&gt; 
&lt;p&gt;I initially wrote this project to learn Go, an upcoming programming language used for backend services. I decided to create a Sherlock clone, addressing some of its faults, limitations, and adding more features. This eventually led to a community driven OSINT tool that was &lt;a href="https://osintnewsletter.com/p/62"&gt;praised in the OSINT letter.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;GoSearch isn't limited to searching websites; it can search &lt;strong&gt;900k leaked credentials&lt;/strong&gt; from &lt;a href="https://cavalier.hudsonrock.com/api/json/v2/osint-tools/search-by-username?username=mrrobot"&gt;HudsonRock's Cybercrime Intelligence API&lt;/a&gt;, over &lt;strong&gt;3.2 billion leaked credentials&lt;/strong&gt; from &lt;a href="https://www.proxynova.com/tools/comb/"&gt;ProxyNova's Combination Of Many Breaches API&lt;/a&gt;, and &lt;strong&gt;18 billion leaked credentials&lt;/strong&gt; from BreachDirectory.org with an API key (see &lt;a href="https://raw.githubusercontent.com/ibnaleem/gosearch/main/#use-cases"&gt;Use Cases&lt;/a&gt;)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br&gt; If you are on 32-bit architecture, please &lt;a href="https://github.com/ibnaleem/gosearch/tree/32-bit"&gt;use this branch&lt;/a&gt; or GoSearch will fail to build. For an in-depth overview of this issue, please see &lt;a href="https://github.com/ibnaleem/gosearch/issues/72"&gt;#72&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br&gt; If you're using Windows Defender, it might mistakenly flag GoSearch as malware. Rest assured, GoSearch is not malicious; you can review the full source code yourself to verify this. For an in-depth overview of this issue, please see &lt;a href="https://github.com/ibnaleem/gosearch/issues/90"&gt;#90&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;$ go install github.com/ibnaleem/gosearch@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unix:&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;$ gosearch [username]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;C:\Users\Bob&amp;gt; gosearch.exe [username]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;p&gt;Ideally, it is best practice to run GoSearch with the &lt;code&gt;--no-false-positives&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gosearch -u [USERNAME] --no-false-positives
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will display profiles GoSearch is confident exist on a website. GoSearch also allows you to search &lt;a href="https://breachdirectory.org"&gt;BreachDirectory&lt;/a&gt; for compromised passwords associated with a specific username. For this, you must &lt;a href="https://rapidapi.com/rohan-patra/api/breachdirectory"&gt;obtain an API key&lt;/a&gt; and provide it with the &lt;code&gt;-b&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ gosearch -u [USERNAME] -b [API-KEY] --no-false-positives
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If GoSearch finds password hashes, it will attempt to crack them using &lt;a href="https://weakpass.com"&gt;Weakpass&lt;/a&gt;. The success rate is nearly 100%, as Weakpass uses a large wordlist of common data-wells, which align with the breaches reported by &lt;a href="https://breachdirectory.org"&gt;BreachDirectory&lt;/a&gt;. Every single password hash that's been found in &lt;a href="https://breachdirectory.org"&gt;BreachDirectory&lt;/a&gt; has been cracked by &lt;a href="https://weakpass.com"&gt;Weakpass&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you're not using BreachDirectory, GoSearch will search for breaches on HudsonRock's Cybercrime Intelligence &amp;amp; ProxyNova's Databases, respectively. It will also search common TLDs for any domains associated with a given username. This is done whether BreachDirectory is searched or not.&lt;/p&gt; 
&lt;h2&gt;I Don't Have a Username&lt;/h2&gt; 
&lt;p&gt;If you're uncertain about a person's username, you could try generating some by using &lt;a href="https://github.com/urbanadventurer/username-anarchy"&gt;urbanadventurer/username-anarchy&lt;/a&gt;. Note that &lt;code&gt;username-anarchy&lt;/code&gt; can only run in Unix terminals (Mac/Linux)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/urbanadventurer/username-anarchy
$ cd username-anarchy
$ (username-anarchy) ./username-anarchy firstname lastname
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Why &lt;code&gt;GoSearch&lt;/code&gt;?&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;GoSearch&lt;/code&gt; is inspired by &lt;a href="https://github.com/sherlock-project/sherlock"&gt;Sherlock&lt;/a&gt;, a popular username search tool. However, &lt;code&gt;GoSearch&lt;/code&gt; improves upon Sherlock by addressing several of its key limitations:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Sherlock is Python-based, which makes it slower compared to Go.&lt;/li&gt; 
 &lt;li&gt;Sherlock is outdated and lacks updates.&lt;/li&gt; 
 &lt;li&gt;Sherlock sometimes reports false positives as valid results.&lt;/li&gt; 
 &lt;li&gt;Sherlock frequently misses actual usernames, leading to false negatives.&lt;/li&gt; 
 &lt;li&gt;Sherlock does not search HudsonRock's Cybercrime Intelligence database&lt;/li&gt; 
 &lt;li&gt;Sherlock does not search ProxyNova's database&lt;/li&gt; 
 &lt;li&gt;Sherlock does not search BreachDirectory's database&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The primary issue with Sherlock is false negatives‚Äîwhen a username exists on a platform but is not detected. The secondary issue is false positives, where a username is incorrectly flagged as available. &lt;code&gt;GoSearch&lt;/code&gt; tackles these problems by colour-coding uncertain results as yellow which indicates potential false positives. This allows users to easily filter out irrelevant links.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://github.com/ibnaleem/gosearch/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md.&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt;
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/ibnaleem"&gt;&lt;img alt="ibnaleem" src="https://avatars.githubusercontent.com/u/134088573?v=4" width="117"&gt;&lt;br&gt;ibnaleem&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/shelepuginivan"&gt;&lt;img alt="shelepuginivan" src="https://avatars.githubusercontent.com/u/110753839?v=4" width="117"&gt;&lt;br&gt;shelepuginivan&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/arealibusadrealiora"&gt;&lt;img alt="arealibusadrealiora" src="https://avatars.githubusercontent.com/u/113445322?v=4" width="117"&gt;&lt;br&gt;arealibusadrealiora&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/vickychhetri"&gt;&lt;img alt="vickychhetri" src="https://avatars.githubusercontent.com/u/82648574?v=4" width="117"&gt;&lt;br&gt;vickychhetri&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/olekukonko"&gt;&lt;img alt="olekukonko" src="https://avatars.githubusercontent.com/u/2615393?v=4" width="117"&gt;&lt;br&gt;olekukonko&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/CptIdea"&gt;&lt;img alt="CptIdea" src="https://avatars.githubusercontent.com/u/59538729?v=4" width="117"&gt;&lt;br&gt;CptIdea&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/anotherhadi"&gt;&lt;img alt="anotherhadi" src="https://avatars.githubusercontent.com/u/112569860?v=4" width="117"&gt;&lt;br&gt;anotherhadi&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/paulpogoda"&gt;&lt;img alt="paulpogoda" src="https://avatars.githubusercontent.com/u/170966925?v=4" width="117"&gt;&lt;br&gt;paulpogoda&lt;/a&gt;&lt;/td&gt;
   &lt;td align="center"&gt;&lt;a href="https://github.com/apps/dependabot"&gt;&lt;img alt="dependabot[bot]" src="https://avatars.githubusercontent.com/in/29110?v=4" width="117"&gt;&lt;br&gt;dependabot[bot]&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;LICENSE&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the GNU General Public License - see the &lt;a href="https://github.com/ibnaleem/gosearch/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://buymeacoffee.com/gosearch"&gt;&lt;img src="https://img.shields.io/badge/Buy%20Me%20a%20Coffee-ffdd00?style=for-the-badge&amp;amp;logo=buy-me-a-coffee&amp;amp;logoColor=black" alt="BuyMeACoffee"&gt;&lt;/a&gt; &lt;a href="https://thanks.dev/u/gh/ibnaleem"&gt;&lt;img src="https://img.shields.io/badge/thanks.dev-0a0a0a?style=for-the-badge&amp;amp;logo=tv-time&amp;amp;logoColor=white" alt="Thanks.dev"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bitcoin&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;bc1qjrtyq8m7urapu7cvmvrrs6m7qkh2jpn5wqezfl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers Over Time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/ibnaleem/gosearch"&gt;&lt;img src="https://starchart.cc/ibnaleem/gosearch.svg?variant=adaptive" alt="Stargazers over time"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XTLS/Xray-core</title>
      <link>https://github.com/XTLS/Xray-core</link>
      <description>&lt;p&gt;Xray, Penetrates Everything. Also the best v2ray-core. Where the magic happens. An open platform for various uses.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project X&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;&lt;img src="https://raw2.seadn.io/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/7fa9ce900fb39b44226348db330e32/8b7fa9ce900fb39b44226348db330e32.svg?sanitize=true" alt="Project X NFT"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;Collect a Project X NFT to support the development of Project X!&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS"&gt;Project X&lt;/a&gt; originates from XTLS protocol, providing a set of network tools such as &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt; and &lt;a href="https://github.com/XTLS/REALITY"&gt;REALITY&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core#readme"&gt;README&lt;/a&gt; is open, so feel free to submit your project &lt;a href="https://github.com/XTLS/Xray-core/pulls"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donation &amp;amp; NFTs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ETH/USDT/USDC: &lt;code&gt;0xDc3Fe44F0f25D13CACb1C4896CD0D321df3146Ee&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Project X NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REALITY NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Related links: &lt;a href="https://opensea.io/collection/xtls"&gt;https://opensea.io/collection/xtls&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/3633"&gt;Announcement of NFTs by Project X&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/4113"&gt;XHTTP: Beyond REALITY&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/LICENSE"&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://xtls.github.io"&gt;Project X Official Website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXray"&gt;Project X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXtls"&gt;Project X Channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectVless"&gt;Project VLESS&lt;/a&gt; (–†—É—Å—Å–∫–∏–π)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXhttp"&gt;Project XHTTP&lt;/a&gt; (Persian)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux Script 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-install"&gt;XTLS/Xray-install&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/team-cloudchaser/tempest"&gt;tempest&lt;/a&gt; (supports &lt;a href="https://systemd.io"&gt;&lt;code&gt;systemd&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/OpenRC/openrc"&gt;OpenRC&lt;/a&gt;; Linux-only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Docker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://ghcr.io/xtls/xray-core"&gt;ghcr.io/xtls/xray-core&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hub.docker.com/r/teddysun/xray"&gt;teddysun/xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/wulabing/xray_docker"&gt;wulabing/xray_docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Web Panel - &lt;strong&gt;WARNING: Please DO NOT USE plain HTTP panels like 3X-UI&lt;/strong&gt;, as they are believed to be bribed by Iran GFW for supporting plain HTTP by default and refused to change (&lt;a href="https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331"&gt;https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331&lt;/a&gt;), which has already put many users' data security in danger in the past few years. &lt;strong&gt;If you are already using 3X-UI, please switch to the following panels, which are verified to support HTTPS and SSH port forwarding only:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/panel"&gt;Remnawave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Gozargah/Marzban"&gt;Marzban&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/qist/xray-ui"&gt;Xray-UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/Hiddify-Manager"&gt;Hiddify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;One Click 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zxcvos/Xray-script"&gt;Xray-REALITY&lt;/a&gt;, &lt;a href="https://github.com/sajjaddg/xray-reality"&gt;xray-reality&lt;/a&gt;, &lt;a href="https://github.com/aleskxyz/reality-ezpz"&gt;reality-ezpz&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hello-yunshu/Xray_bash_onekey"&gt;Xray_bash_onekey&lt;/a&gt;, &lt;a href="https://github.com/LordPenguin666/XTool"&gt;XTool&lt;/a&gt;, &lt;a href="https://github.com/vpainless/vpainless"&gt;VPainLess&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mack-a/v2ray-agent"&gt;v2ray-agent&lt;/a&gt;, &lt;a href="https://github.com/wulabing/Xray_onekey"&gt;Xray_onekey&lt;/a&gt;, &lt;a href="https://github.com/proxysu/ProxySU"&gt;ProxySU&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Magisk 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Asterisk4Magisk/Xray4Magisk"&gt;Xray4Magisk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/E7KMbb/Xray_For_Magisk"&gt;Xray_For_Magisk&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Homebrew 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;brew install xray&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Example 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/REALITY#readme"&gt;VLESS-XTLS-uTLS-REALITY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/VLESS-TCP-XTLS-Vision"&gt;VLESS-TCP-XTLS-Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/All-in-One-fallbacks-Nginx"&gt;All-in-One-fallbacks-Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray-examples 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples"&gt;XTLS/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-examples"&gt;chika0801/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lxhao61/integrated-examples"&gt;lxhao61/integrated-examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tutorial 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-install"&gt;XTLS Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cscot.pages.dev/2023/03/02/Xray-REALITY-tutorial/"&gt;REALITY (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SasukeFreestyle/XTLS-Iran-Reality"&gt;XTLS-Iran-Reality (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://computerscot.github.io/vless-xtls-utls-reality-steal-oneself.html"&gt;Xray REALITY with 'steal oneself' (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://g800.pages.dev/wireguard"&gt;Xray with WireGuard inbound (English)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;GUI Clients&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenWrt 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/xiaorouji/openwrt-passwall"&gt;PassWall&lt;/a&gt;, &lt;a href="https://github.com/xiaorouji/openwrt-passwall2"&gt;PassWall 2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fw876/helloworld"&gt;ShadowSocksR Plus+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yichya/luci-app-xray"&gt;luci-app-xray&lt;/a&gt; (&lt;a href="https://github.com/yichya/openwrt-xray"&gt;openwrt-xray&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Asuswrt-Merlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/DanielLavrushin/asuswrt-merlin-xrayui"&gt;XRAYUI&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayN"&gt;v2rayN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/InvisibleManVPN/InvisibleMan-XRayClient"&gt;Invisible Man - Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Android 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayNG"&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/X-flutter"&gt;X-flutter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SaeedDev94/Xray"&gt;SaeedDev94/Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lhear/SimpleXray"&gt;SimpleXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt; (&lt;a href="https://apps.apple.com/us/app/happ-proxy-utility-for-tv/id6748297274"&gt;tvOS&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/streisand/id6450534064"&gt;Streisand&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;macOS arm64 &amp;amp; x64 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yanue/V2rayU"&gt;V2rayU&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tzmax/V2RayXS"&gt;V2RayXS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/v2rayA/v2rayA"&gt;v2rayA&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ketetefid/GorzRay"&gt;GorzRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Others that support VLESS, XTLS, REALITY, XUDP, PLUX...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/shadowrocket/id932747118"&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/us/app/loon/id1373567447"&gt;Loon&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Tools 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lilendian0x00/xray-knife"&gt;xray-knife&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kutovoys/xray-checker"&gt;xray-checker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Wrapper 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/libXray"&gt;XTLS/libXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/xtls-sdk"&gt;xtls-sdk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/xtlsapi"&gt;xtlsapi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/AndroidLibXrayLite"&gt;AndroidLibXrayLite&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Xray-core-python"&gt;Xray-core-python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XVGuardian/xray-api"&gt;xray-api&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR"&gt;XrayR&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR-release"&gt;XrayR-release&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/missuo/XrayR-V2Board"&gt;XrayR-V2Board&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Cores 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amnezia-vpn"&gt;Amnezia VPN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;mihomo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SagerNet/sing-box"&gt;sing-box&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/XTLS/Xray-core"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-core/releases/tag/v1.0.0"&gt;Xray-core v1.0.0&lt;/a&gt; was forked from &lt;a href="https://github.com/v2fly/v2ray-core/commit/9a03cc5c98d04cc28320fcee26dbc236b3291256"&gt;v2fly-core 9a03cc5&lt;/a&gt;, and we have made &amp;amp; accumulated a huge number of enhancements over time, check &lt;a href="https://github.com/XTLS/Xray-core/releases"&gt;the release notes for each version&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For third-party projects used in &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt;, check your local or &lt;a href="https://github.com/XTLS/Xray-core/raw/main/go.mod"&gt;the latest go.mod&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;One-line Compilation&lt;/h2&gt; 
&lt;h3&gt;Windows (PowerShell)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$env:CGO_ENABLED=0
go build -o xray.exe -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux / macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reproducible Releases&lt;/h3&gt; 
&lt;p&gt;Make sure that you are using the same Go version, and remember to set the git commit id (7 bytes):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-X github.com/xtls/xray-core/core.build=REPLACE -s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/XTLS/Xray-core"&gt;&lt;img src="https://starchart.cc/XTLS/Xray-core.svg?sanitize=true" alt="Stargazers over time"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mikefarah/yq</title>
      <link>https://github.com/mikefarah/yq</link>
      <description>&lt;p&gt;yq is a portable command-line YAML, JSON, XML, CSV, TOML and properties processor&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;yq&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/mikefarah/yq/workflows/Build/badge.svg?sanitize=true" alt="Build"&gt; &lt;img src="https://img.shields.io/docker/pulls/mikefarah/yq.svg?sanitize=true" alt="Docker Pulls"&gt; &lt;img src="https://img.shields.io/github/downloads/mikefarah/yq/total.svg?sanitize=true" alt="Github Releases (by Release)"&gt; &lt;img src="https://goreportcard.com/badge/github.com/mikefarah/yq" alt="Go Report"&gt; &lt;img src="https://github.com/mikefarah/yq/workflows/CodeQL/badge.svg?sanitize=true" alt="CodeQL"&gt;&lt;/p&gt; 
&lt;p&gt;a lightweight and portable command-line YAML, JSON, INI and XML processor. &lt;code&gt;yq&lt;/code&gt; uses &lt;a href="https://github.com/stedolan/jq"&gt;jq&lt;/a&gt; like syntax but works with yaml files as well as json, xml, ini, properties, csv and tsv. It doesn't yet support everything &lt;code&gt;jq&lt;/code&gt; does - but it does support the most common operations and functions, and more is being added continuously.&lt;/p&gt; 
&lt;p&gt;yq is written in go - so you can download a dependency free binary for your platform and you are good to go! If you prefer there are a variety of package managers that can be used as well as Docker and Podman, all listed below.&lt;/p&gt; 
&lt;h2&gt;Quick Usage Guide&lt;/h2&gt; 
&lt;p&gt;Read a value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq '.a.b[0].c' file.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Pipe from STDIN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq '.a.b[0].c' &amp;lt; file.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update a yaml file, in place&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq -i '.a.b[0].c = "cool"' file.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Update using environment variables&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;NAME=mike yq -i '.a.b[0].c = strenv(NAME)' file.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Merge multiple files&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# merge two files
yq -n 'load("file1.yaml") * load("file2.yaml")'

# merge using globs:
# note the use of `ea` to evaluate all the files at once
# instead of in sequence
yq ea '. as $item ireduce ({}; . * $item )' path/to/*.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiple updates to a yaml file&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq -i '
  .a.b[0].c = "cool" |
  .x.y.z = "foobar" |
  .person.name = strenv(NAME)
' file.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Find and update an item in an array:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq '(.[] | select(.name == "foo") | .address) = "12 cat st"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Convert JSON to YAML&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq -Poy sample.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://mikefarah.gitbook.io/yq/recipes"&gt;recipes&lt;/a&gt; for more examples and the &lt;a href="https://mikefarah.gitbook.io/yq/"&gt;documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;p&gt;Take a look at the discussions for &lt;a href="https://github.com/mikefarah/yq/discussions/categories/q-a"&gt;common questions&lt;/a&gt;, and &lt;a href="https://github.com/mikefarah/yq/discussions/categories/show-and-tell"&gt;cool ideas&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/mikefarah/yq/releases/latest"&gt;Download the latest binary&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;wget&lt;/h3&gt; 
&lt;p&gt;Use wget to download, gzipped pre-compiled binaries:&lt;/p&gt; 
&lt;p&gt;For instance, VERSION=v4.2.0 and BINARY=yq_linux_amd64&lt;/p&gt; 
&lt;h4&gt;Compressed via tar.gz&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - |\
  tar xz &amp;amp;&amp;amp; mv ${BINARY} /usr/local/bin/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Plain binary&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY} -O /usr/local/bin/yq &amp;amp;&amp;amp;\
    chmod +x /usr/local/bin/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Latest version&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq &amp;amp;&amp;amp;\
    chmod +x /usr/local/bin/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MacOS / Linux via Homebrew:&lt;/h3&gt; 
&lt;p&gt;Using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew install yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux via snap:&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;snap install yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Snap notes&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;yq&lt;/code&gt; installs with &lt;a href="https://docs.snapcraft.io/snap-confinement/6233"&gt;&lt;em&gt;strict confinement&lt;/em&gt;&lt;/a&gt; in snap, this means it doesn't have direct access to root files. To read root files you can:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo cat /etc/myfile | yq '.a.path'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And to write to a root file you can either use &lt;a href="https://linux.die.net/man/1/sponge"&gt;sponge&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo cat /etc/myfile | yq '.a.path = "value"' | sudo sponge /etc/myfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or write to a temporary file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo cat /etc/myfile | yq '.a.path = "value"' | sudo tee /etc/myfile.tmp
sudo mv /etc/myfile.tmp /etc/myfile
rm /etc/myfile.tmp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run with Docker or Podman&lt;/h3&gt; 
&lt;h4&gt;Oneshot use:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -v "${PWD}":/workdir mikefarah/yq [command] [flags] [expression ]FILE...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can run &lt;code&gt;yq&lt;/code&gt; in docker without network access and other privileges if you desire, namely &lt;code&gt;--security-opt=no-new-privileges --cap-drop all --network none&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;podman run --rm -v "${PWD}":/workdir mikefarah/yq [command] [flags] [expression ]FILE...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Pipe in via STDIN:&lt;/h4&gt; 
&lt;p&gt;You'll need to pass the &lt;code&gt;-i\--interactive&lt;/code&gt; flag to docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -i --rm mikefarah/yq '.this.thing' &amp;lt; myfile.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;podman run -i --rm mikefarah/yq '.this.thing' &amp;lt; myfile.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Run commands interactively:&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "${PWD}":/workdir --entrypoint sh mikefarah/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;podman run --rm -it -v "${PWD}":/workdir --entrypoint sh mikefarah/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It can be useful to have a bash function to avoid typing the whole docker command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq() {
  docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yq() {
  podman run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Running as root:&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;yq&lt;/code&gt;'s container image no longer runs under root (&lt;a href="https://github.com/mikefarah/yq/pull/860"&gt;https://github.com/mikefarah/yq/pull/860&lt;/a&gt;). If you'd like to install more things in the container image, or you're having permissions issues when attempting to read/write files you'll need to either:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --user="root" -it --entrypoint sh mikefarah/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;podman run --user="root" -it --entrypoint sh mikefarah/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or, in your Dockerfile:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM mikefarah/yq

USER root
RUN apk add --no-cache bash
USER yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Missing timezone data&lt;/h4&gt; 
&lt;p&gt;By default, the alpine image yq uses does not include timezone data. If you'd like to use the &lt;code&gt;tz&lt;/code&gt; operator, you'll need to include this data:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM mikefarah/yq

USER root
RUN apk add --no-cache tzdata
USER yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Podman with SELinux&lt;/h4&gt; 
&lt;p&gt;If you are using podman with SELinux, you will need to set the shared volume flag &lt;code&gt;:z&lt;/code&gt; on the volume mount:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-v "${PWD}":/workdir:z
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GitHub Action&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;  - name: Set foobar to cool
    uses: mikefarah/yq@master
    with:
      cmd: yq -i '.foo.bar = "cool"' 'config.yml'
  - name: Get an entry with a variable that might contain dots or spaces
    id: get_username
    uses: mikefarah/yq@master
    with:
      cmd: yq '.all.children.["${{ matrix.ip_address }}"].username' ops/inventories/production.yml
  - name: Reuse a variable obtained in another step
    run: echo ${{ steps.get_username.outputs.result }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://mikefarah.gitbook.io/yq/usage/github-action"&gt;https://mikefarah.gitbook.io/yq/usage/github-action&lt;/a&gt; for more.&lt;/p&gt; 
&lt;h3&gt;Go Install:&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/mikefarah/yq/v4@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Community Supported Installation methods&lt;/h2&gt; 
&lt;p&gt;As these are supported by the community &lt;span&gt;‚ù§Ô∏è&lt;/span&gt; - however, they may be out of date with the officially supported releases.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Please note that the Debian package (previously supported by @rmescandon) is no longer maintained. Please use an alternative installation method.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;X-CMD&lt;/h3&gt; 
&lt;p&gt;Checkout &lt;code&gt;yq&lt;/code&gt; on x-cmd: &lt;a href="https://x-cmd.com/mod/yq"&gt;https://x-cmd.com/mod/yq&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Instant Results: See the output of your yq filter in real-time.&lt;/li&gt; 
 &lt;li&gt;Error Handling: Encounter a syntax error? It will display the error message and the results of the closest valid filter&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks @edwinjhlee!&lt;/p&gt; 
&lt;h3&gt;Nix&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;nix profile install nixpkgs#yq-go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://search.nixos.org/packages?channel=unstable&amp;amp;show=yq-go&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=yq-go"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Webi&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;webi yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://webinstall.dev/"&gt;webi&lt;/a&gt; Supported by @adithyasunil26 (&lt;a href="https://github.com/webinstall/webi-installers/tree/master/yq"&gt;https://github.com/webinstall/webi-installers/tree/master/yq&lt;/a&gt;)&lt;/p&gt; 
&lt;h3&gt;Arch Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;pacman -S go-yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows:&lt;/h3&gt; 
&lt;p&gt;Using &lt;a href="https://chocolatey.org"&gt;Chocolatey&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chocolatey.org/packages/yq"&gt;&lt;img src="https://img.shields.io/chocolatey/v/yq.svg?sanitize=true" alt="Chocolatey"&gt;&lt;/a&gt; &lt;a href="https://chocolatey.org/packages/yq"&gt;&lt;img src="https://img.shields.io/chocolatey/dt/yq.svg?sanitize=true" alt="Chocolatey"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;choco install yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported by @chillum (&lt;a href="https://chocolatey.org/packages/yq"&gt;https://chocolatey.org/packages/yq&lt;/a&gt;)&lt;/p&gt; 
&lt;p&gt;Using &lt;a href="https://scoop.sh/"&gt;scoop&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;scoop install main/yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using &lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/"&gt;winget&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;winget install --id MikeFarah.yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Mac:&lt;/h3&gt; 
&lt;p&gt;Using &lt;a href="https://www.macports.org/"&gt;MacPorts&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo port selfupdate
sudo port install yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported by @herbygillot (&lt;a href="https://ports.macports.org/maintainer/github/herbygillot"&gt;https://ports.macports.org/maintainer/github/herbygillot&lt;/a&gt;)&lt;/p&gt; 
&lt;h3&gt;Alpine Linux&lt;/h3&gt; 
&lt;p&gt;Alpine Linux v3.20+ (and Edge):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apk add yq-go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alpine Linux up to v3.19:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;apk add yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Supported by Tuan Hoang (&lt;a href="https://pkgs.alpinelinux.org/packages?name=yq-go"&gt;https://pkgs.alpinelinux.org/packages?name=yq-go&lt;/a&gt;)&lt;/p&gt; 
&lt;h3&gt;Flox:&lt;/h3&gt; 
&lt;p&gt;Flox can be used to install yq on Linux, MacOS, and Windows through WSL.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;flox install yq
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/"&gt;Detailed documentation with many examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Written in portable go, so you can download a lovely dependency free binary&lt;/li&gt; 
 &lt;li&gt;Uses similar syntax as &lt;code&gt;jq&lt;/code&gt; but works with YAML, INI, &lt;a href="https://mikefarah.gitbook.io/yq/usage/convert"&gt;JSON&lt;/a&gt; and &lt;a href="https://mikefarah.gitbook.io/yq/usage/xml"&gt;XML&lt;/a&gt; files&lt;/li&gt; 
 &lt;li&gt;Fully supports multi document yaml files&lt;/li&gt; 
 &lt;li&gt;Supports yaml &lt;a href="https://mikefarah.gitbook.io/yq/usage/front-matter"&gt;front matter&lt;/a&gt; blocks (e.g. jekyll/assemble)&lt;/li&gt; 
 &lt;li&gt;Colorized yaml output&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/operators/datetime"&gt;Date/Time manipulation and formatting with TZ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/operators/traverse-read"&gt;Deeply data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/operators/sort-keys"&gt;Sort keys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Manipulate yaml &lt;a href="https://mikefarah.gitbook.io/yq/operators/comment-operators"&gt;comments&lt;/a&gt;, &lt;a href="https://mikefarah.gitbook.io/yq/operators/style"&gt;styling&lt;/a&gt;, &lt;a href="https://mikefarah.gitbook.io/yq/operators/tag"&gt;tags&lt;/a&gt; and &lt;a href="https://mikefarah.gitbook.io/yq/operators/anchor-and-alias-operators"&gt;anchors and aliases&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/v/v4.x/commands/evaluate#flags"&gt;Update in place&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/operators/select#select-and-update-matching-values-in-map"&gt;Complex expressions to select and update&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Keeps yaml formatting and comments when updating (though there are issues with whitespace)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/operators/encode-decode"&gt;Decode/Encode base64 data&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/operators/load"&gt;Load content from other files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/v/v4.x/usage/convert"&gt;Convert to/from json/ndjson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/v/v4.x/usage/xml"&gt;Convert to/from xml&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/v/v4.x/usage/properties"&gt;Convert to/from properties&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/usage/csv-tsv"&gt;Convert to/from csv/tsv&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/v/v4.x/commands/shell-completion"&gt;General shell completion scripts (bash/zsh/fish/powershell)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/operators/reduce"&gt;Reduce&lt;/a&gt; to merge multiple files or sum an array or other fancy things.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mikefarah.gitbook.io/yq/usage/github-action"&gt;Github Action&lt;/a&gt; to use in your automated pipeline (thanks @devorbitus)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://mikefarah.gitbook.io/yq/"&gt;Usage&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://mikefarah.gitbook.io/yq/"&gt;documentation&lt;/a&gt; for more detailed and advanced usage.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  yq [flags]
  yq [command]

Examples:

# yq defaults to 'eval' command if no command is specified. See "yq eval --help" for more examples.
yq '.stuff' &amp;lt; myfile.yml # outputs the data at the "stuff" node from "myfile.yml"

yq -i '.stuff = "foo"' myfile.yml # update myfile.yml in place


Available Commands:
  completion  Generate the autocompletion script for the specified shell
  eval        (default) Apply the expression to each document in each yaml file in sequence
  eval-all    Loads _all_ yaml documents of _all_ yaml files and runs expression once
  help        Help about any command

Flags:
  -C, --colors                        force print with colors
      --csv-auto-parse                parse CSV YAML/JSON values (default true)
      --csv-separator char            CSV Separator character (default ,)
  -e, --exit-status                   set exit status if there are no matches or null or false is returned
      --expression string             forcibly set the expression argument. Useful when yq argument detection thinks your expression is a file.
      --from-file string              Load expression from specified file.
  -f, --front-matter string           (extract|process) first input as yaml front-matter. Extract will pull out the yaml content, process will run the expression against the yaml content, leaving the remaining data intact
      --header-preprocess             Slurp any header comments and separators before processing expression. (default true)
  -h, --help                          help for yq
  -I, --indent int                    sets indent level for output (default 2)
  -i, --inplace                       update the file in place of first file given.
  -p, --input-format string           [auto|a|yaml|y|json|j|props|p|csv|c|tsv|t|xml|x|base64|uri|toml|lua|l|ini|i] parse format for input. (default "auto")
      --lua-globals                   output keys as top-level global variables
      --lua-prefix string             prefix (default "return ")
      --lua-suffix string             suffix (default ";\n")
      --lua-unquoted                  output unquoted string keys (e.g. {foo="bar"})
  -M, --no-colors                     force print with no colors
  -N, --no-doc                        Don't print document separators (---)
  -0, --nul-output                    Use NUL char to separate values. If unwrap scalar is also set, fail if unwrapped scalar contains NUL char.
  -n, --null-input                    Don't read input, simply evaluate the expression given. Useful for creating docs from scratch.
  -o, --output-format string          [auto|a|yaml|y|json|j|props|p|csv|c|tsv|t|xml|x|base64|uri|toml|shell|s|lua|l|ini|i] output format type. (default "auto")
  -P, --prettyPrint                   pretty print, shorthand for '... style = ""'
      --properties-array-brackets     use [x] in array paths (e.g. for SpringBoot)
      --properties-separator string   separator to use between keys and values (default " = ")
  -s, --split-exp string              print each result (or doc) into a file named (exp). [exp] argument must return a string. You can use $index in the expression as the result counter. The necessary directories will be created.
      --split-exp-file string         Use a file to specify the split-exp expression.
      --string-interpolation          Toggles strings interpolation of \(exp) (default true)
      --tsv-auto-parse                parse TSV YAML/JSON values (default true)
  -r, --unwrapScalar                  unwrap scalar, print the value with no quotes, colors or comments. Defaults to true for yaml (default true)
  -v, --verbose                       verbose mode
  -V, --version                       Print version information and quit
      --xml-attribute-prefix string   prefix for xml attributes (default "+@")
      --xml-content-name string       name for xml content (if no attribute name is present). (default "+content")
      --xml-directive-name string     name for xml directives (e.g. &amp;lt;!DOCTYPE thing cat&amp;gt;) (default "+directive")
      --xml-keep-namespace            enables keeping namespace after parsing attributes (default true)
      --xml-proc-inst-prefix string   prefix for xml processing instructions (e.g. &amp;lt;?xml version="1"?&amp;gt;) (default "+p_")
      --xml-raw-token                 enables using RawToken method instead Token. Commonly disables namespace translations. See https://pkg.go.dev/encoding/xml#Decoder.RawToken for details. (default true)
      --xml-skip-directives           skip over directives (e.g. &amp;lt;!DOCTYPE thing cat&amp;gt;)
      --xml-skip-proc-inst            skip over process instructions (e.g. &amp;lt;?xml version="1"?&amp;gt;)
      --xml-strict-mode               enables strict parsing of XML. See https://pkg.go.dev/encoding/xml for more details.

Use "yq [command] --help" for more information about a command.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Known Issues / Missing Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yq&lt;/code&gt; attempts to preserve comment positions and whitespace as much as possible, but it does not handle all scenarios (see &lt;a href="https://github.com/go-yaml/yaml/tree/v3"&gt;https://github.com/go-yaml/yaml/tree/v3&lt;/a&gt; for details)&lt;/li&gt; 
 &lt;li&gt;Powershell has its own...&lt;a href="https://mikefarah.gitbook.io/yq/usage/tips-and-tricks#quotes-in-windows-powershell"&gt;opinions on quoting yq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;"yes", "no" were dropped as boolean values in the yaml 1.2 standard - which is the standard yq assumes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://mikefarah.gitbook.io/yq/usage/tips-and-tricks"&gt;tips and tricks&lt;/a&gt; for more common problems and solutions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>etcd-io/etcd</title>
      <link>https://github.com/etcd-io/etcd</link>
      <description>&lt;p&gt;Distributed reliable key-value store for the most critical data of a distributed system&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;etcd&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/etcd-io/etcd"&gt;&lt;img src="https://goreportcard.com/badge/github.com/etcd-io/etcd?style=flat-square" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/etcd-io/etcd/tree/main"&gt;&lt;img src="https://codecov.io/gh/etcd-io/etcd/branch/main/graph/badge.svg?sanitize=true" alt="Coverage"&gt;&lt;/a&gt; &lt;a href="https://github.com/etcd-io/etcd/actions/workflows/tests.yaml"&gt;&lt;img src="https://github.com/etcd-io/etcd/actions/workflows/tests.yaml/badge.svg?sanitize=true" alt="Tests"&gt;&lt;/a&gt; &lt;a href="https://github.com/etcd-io/etcd/actions/workflows/codeql-analysis.yml"&gt;&lt;img src="https://github.com/etcd-io/etcd/actions/workflows/codeql-analysis.yml/badge.svg?sanitize=true" alt="codeql-analysis"&gt;&lt;/a&gt; &lt;a href="https://etcd.io/docs"&gt;&lt;img src="https://img.shields.io/badge/docs-latest-green.svg?sanitize=true" alt="Docs"&gt;&lt;/a&gt; &lt;a href="https://godocs.io/go.etcd.io/etcd/v3"&gt;&lt;img src="http://img.shields.io/badge/go-documentation-blue.svg?style=flat-square" alt="Godoc"&gt;&lt;/a&gt; &lt;a href="https://github.com/etcd-io/etcd/releases"&gt;&lt;img src="https://img.shields.io/github/release/etcd-io/etcd/all.svg?style=flat-square" alt="Releases"&gt;&lt;/a&gt; &lt;a href="https://github.com/etcd-io/etcd/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/etcd-io/etcd.svg?style=flat-square" alt="LICENSE"&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/etcd-io/etcd"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/etcd-io/etcd/badge" alt="OpenSSF Scorecard"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href="https://github.com/etcd-io/etcd/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cncf/artwork/9870640f123303a355611065195c43ac3f27aa19/projects/etcd/horizontal/white/etcd-horizontal-white.png"&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="logos/etcd-horizontal-color.svg"&gt; 
 &lt;img alt="etcd logo" src="https://raw.githubusercontent.com/etcd-io/etcd/main/logos/etcd-horizontal-color.svg?sanitize=true" width="269"&gt; 
&lt;/picture&gt; 
&lt;p&gt;etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;Simple&lt;/em&gt;: well-defined, user-facing API (gRPC)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Secure&lt;/em&gt;: automatic TLS with optional client cert authentication&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Fast&lt;/em&gt;: benchmarked 10,000 writes/sec&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Reliable&lt;/em&gt;: properly distributed using Raft&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;etcd is written in Go and uses the &lt;a href="https://raft.github.io/"&gt;Raft&lt;/a&gt; consensus algorithm to manage a highly-available replicated log.&lt;/p&gt; 
&lt;p&gt;etcd is used &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/ADOPTERS.md"&gt;in production by many companies&lt;/a&gt;, and the development team stands behind it in critical deployment scenarios, where etcd is frequently teamed with applications such as &lt;a href="http://kubernetes.io/"&gt;Kubernetes&lt;/a&gt;, &lt;a href="https://github.com/coreos/locksmith"&gt;locksmith&lt;/a&gt;, &lt;a href="https://github.com/vulcand/vulcand"&gt;vulcand&lt;/a&gt;, &lt;a href="https://github.com/youtube/doorman"&gt;Doorman&lt;/a&gt;, and many others. Reliability is further ensured by rigorous &lt;a href="https://github.com/etcd-io/etcd/tree/main/tests/robustness"&gt;&lt;strong&gt;robustness testing&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/etcd-io/etcd/tree/main/etcdctl"&gt;etcdctl&lt;/a&gt; for a simple command line client.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/etcd-io/etcd/main/logos/etcd-xkcd-2347.png" alt="etcd reliability is important"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;sub&gt;Original image credited to xkcd.com/2347, alterations by Josh Berkus.&lt;/sub&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The most common API documentation you'll need can be found here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://godocs.io/go.etcd.io/etcd/api/v3"&gt;go.etcd.io/etcd/api/v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godocs.io/go.etcd.io/etcd/client/pkg/v3"&gt;go.etcd.io/etcd/client/pkg/v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godocs.io/go.etcd.io/etcd/client/v3"&gt;go.etcd.io/etcd/client/v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godocs.io/go.etcd.io/etcd/etcdctl/v3"&gt;go.etcd.io/etcd/etcdctl/v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godocs.io/go.etcd.io/etcd/pkg/v3"&gt;go.etcd.io/etcd/pkg/v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godocs.io/go.etcd.io/etcd/raft/v3"&gt;go.etcd.io/etcd/raft/v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://godocs.io/go.etcd.io/etcd/server/v3"&gt;go.etcd.io/etcd/server/v3&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/OWNERS"&gt;Maintainers&lt;/a&gt; strive to shape an inclusive open source project culture where users are heard and contributors feel respected and empowered. Maintainers aim to build productive relationships across different companies and disciplines. Read more about &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/Documentation/contributor-guide/community-membership.md#maintainers"&gt;Maintainers role and responsibilities&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Getting etcd&lt;/h3&gt; 
&lt;p&gt;The easiest way to get etcd is to use one of the pre-built release binaries which are available for OSX, Linux, Windows, and Docker on the &lt;a href="https://github.com/etcd-io/etcd/releases"&gt;release page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more installation guides, please check out &lt;a href="http://play.etcd.io"&gt;play.etcd.io&lt;/a&gt; and &lt;a href="https://etcd.io/docs/latest/op-guide"&gt;operating etcd&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running etcd&lt;/h3&gt; 
&lt;p&gt;First start a single-member cluster of etcd.&lt;/p&gt; 
&lt;p&gt;If etcd is installed using the &lt;a href="https://github.com/etcd-io/etcd/releases"&gt;pre-built release binaries&lt;/a&gt;, run it from the installation location as below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;/tmp/etcd-download-test/etcd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The etcd command can be simply run as such if it is moved to the system path as below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mv /tmp/etcd-download-test/etcd /usr/local/bin/
etcd
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will bring up etcd listening on port 2379 for client communication and on port 2380 for server-to-server communication.&lt;/p&gt; 
&lt;p&gt;Next, let's set a single key, and then retrieve it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;etcdctl put mykey "this is awesome"
etcdctl get mykey
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;etcd is now running and serving client requests. For more, please check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://play.etcd.io"&gt;Interactive etcd playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://etcd.io/docs/latest/demo"&gt;Animated quick demo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;etcd TCP ports&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt"&gt;official etcd ports&lt;/a&gt; are 2379 for client requests, and 2380 for peer communication.&lt;/p&gt; 
&lt;h3&gt;Running a local etcd cluster&lt;/h3&gt; 
&lt;p&gt;First install &lt;a href="https://github.com/mattn/goreman"&gt;goreman&lt;/a&gt;, which manages Procfile-based applications.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/Procfile"&gt;Procfile script&lt;/a&gt; will set up a local example cluster. Start it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;goreman start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will bring up 3 etcd members &lt;code&gt;infra1&lt;/code&gt;, &lt;code&gt;infra2&lt;/code&gt; and &lt;code&gt;infra3&lt;/code&gt; and optionally etcd &lt;code&gt;grpc-proxy&lt;/code&gt;, which runs locally and composes a cluster.&lt;/p&gt; 
&lt;p&gt;Every cluster member and proxy accepts key value reads and key value writes.&lt;/p&gt; 
&lt;p&gt;Follow the comments in &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/Procfile"&gt;Procfile script&lt;/a&gt; to add a learner node to the cluster.&lt;/p&gt; 
&lt;h3&gt;Install etcd client v3&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get go.etcd.io/etcd/client/v3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Next steps&lt;/h3&gt; 
&lt;p&gt;Now it's time to dig into the full etcd API and other guides.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read the full &lt;a href="https://etcd.io/docs/latest"&gt;documentation&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Review etcd &lt;a href="https://etcd.io/docs/latest/faq"&gt;frequently asked questions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Explore the full gRPC &lt;a href="https://etcd.io/docs/latest/learning/api"&gt;API&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Set up a &lt;a href="https://etcd.io/docs/latest/op-guide/clustering"&gt;multi-machine cluster&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Learn the &lt;a href="https://etcd.io/docs/latest/op-guide/configuration"&gt;config format, env variables and flags&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Find &lt;a href="https://etcd.io/docs/latest/integrations"&gt;language bindings and tools&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Use TLS to &lt;a href="https://etcd.io/docs/latest/op-guide/security"&gt;secure an etcd cluster&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://etcd.io/docs/latest/tuning"&gt;Tune etcd&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Email: &lt;a href="https://groups.google.com/g/etcd-dev"&gt;etcd-dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Slack: &lt;a href="https://kubernetes.slack.com/archives/C3HD8ARJ5"&gt;#sig-etcd&lt;/a&gt; channel on Kubernetes (&lt;a href="http://slack.kubernetes.io/"&gt;get an invite&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/#community-meetings"&gt;Community meetings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community meetings&lt;/h3&gt; 
&lt;p&gt;etcd contributors and maintainers meet every week at &lt;code&gt;11:00&lt;/code&gt; AM (USA Pacific) on Thursday and meetings alternate between community meetings and issue triage meetings. Meeting agendas are recorded in a &lt;a href="https://docs.google.com/document/d/16XEGyPBisZvmmoIHSZzv__LoyOeluC5a4x353CX0SIM/edit"&gt;shared Google doc&lt;/a&gt; and everyone is welcome to suggest additional topics or other agendas.&lt;/p&gt; 
&lt;p&gt;Issue triage meetings are aimed at getting through our backlog of PRs and Issues. Triage meetings are open to any contributor; you don't have to be a reviewer or approver to help out! They can also be a good way to get started contributing.&lt;/p&gt; 
&lt;p&gt;The meeting lead role is rotated for each meeting between etcd maintainers or sig-etcd leads and is recorded in a &lt;a href="https://docs.google.com/spreadsheets/d/1jodHIO7Dk2VWTs1IRnfMFaRktS9IH8XRyifOnPdSY8I/edit"&gt;shared Google sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Meeting recordings are uploaded to the official etcd &lt;a href="https://www.youtube.com/@etcdio"&gt;YouTube channel&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Get calendar invitations by joining &lt;a href="https://groups.google.com/g/etcd-dev"&gt;etcd-dev&lt;/a&gt; mailing group.&lt;/p&gt; 
&lt;p&gt;Join the CNCF-funded Zoom channel: &lt;a href="https://zoom.us/my/cncfetcdproject"&gt;zoom.us/my/cncfetcdproject&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; for details on setting up your development environment, submitting patches and the contribution workflow.&lt;/p&gt; 
&lt;p&gt;Please refer to &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/Documentation/contributor-guide/community-membership.md#member"&gt;community-membership.md&lt;/a&gt; for information on becoming an etcd project member. We welcome and look forward to your contributions to the project!&lt;/p&gt; 
&lt;p&gt;Please also refer to &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/Documentation/contributor-guide/roadmap.md"&gt;roadmap&lt;/a&gt; to get more details on the priorities for the next few major or minor releases.&lt;/p&gt; 
&lt;h2&gt;Reporting bugs&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/etcd-io/etcd/raw/main/Documentation/contributor-guide/reporting_bugs.md"&gt;reporting bugs&lt;/a&gt; for details about reporting any issues. Before opening an issue please check it is not covered in our &lt;a href="https://etcd.io/docs/latest/faq"&gt;frequently asked questions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Reporting a security vulnerability&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/security/README.md"&gt;security disclosure and release process&lt;/a&gt; for details on how to report a security vulnerability and how the etcd team manages it.&lt;/p&gt; 
&lt;h2&gt;Issue and PR management&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/etcd-io/etcd/raw/main/Documentation/contributor-guide/triage_issues.md"&gt;issue triage guidelines&lt;/a&gt; for details on how issues are managed.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/etcd-io/etcd/raw/main/Documentation/contributor-guide/triage_prs.md"&gt;PR management&lt;/a&gt; for guidelines on how pull requests are managed.&lt;/p&gt; 
&lt;h2&gt;etcd Emeritus Maintainers&lt;/h2&gt; 
&lt;p&gt;etcd &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/OWNERS"&gt;emeritus maintainers&lt;/a&gt; dedicated a part of their career to etcd and reviewed code, triaged bugs and pushed the project forward over a substantial period of time. Their contribution is greatly appreciated.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;etcd is under the Apache 2.0 license. See the &lt;a href="https://raw.githubusercontent.com/etcd-io/etcd/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>projectcalico/calico</title>
      <link>https://github.com/projectcalico/calico</link>
      <description>&lt;p&gt;Cloud native networking and network security&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/projectcalico/calico"&gt;&lt;img src="https://goreportcard.com/badge/github.com/projectcalico/calico" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/projectcalico/tigera-operator"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/tigera-operator" alt="ArtifactHub"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/projectcalico/calico/master/calico/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/projectcalico/api"&gt;&lt;img src="https://pkg.go.dev/badge/k8s.io/kubernetes.svg?sanitize=true" alt="GoPkg"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/6064"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/6064/badge" alt="CII Best Practices"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;Calico&lt;/h1&gt; 
 &lt;h2&gt; &lt;a href="https://projectcalico.docs.tigera.io/getting-started/kubernetes/quickstart"&gt;Quickstart&lt;/a&gt; | &lt;a href="https://projectcalico.docs.tigera.io"&gt;Docs&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/projectcalico/calico/master/CONTRIBUTING.md"&gt;Contribute&lt;/a&gt; | &lt;a href="https://slack.projectcalico.org"&gt;Slack&lt;/a&gt; | &lt;a href="https://github.com/projectcalico/calico/releases"&gt;Releases&lt;/a&gt; &lt;/h2&gt; 
&lt;/div&gt; 
&lt;h2&gt;üêæ Welcome to Project Calico!&lt;/h2&gt; 
&lt;p&gt;Project Calico, created and maintained by &lt;a href="https://www.tigera.io/"&gt;Tigera&lt;/a&gt;, is an open-source project with an active development and user community. Calico Open Source has grown to be the most widely adopted solution for container networking and security, powering 8M+ nodes daily across 166 countries.&lt;/p&gt; 
&lt;h2&gt;üåü Why use Calico?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data Plane Choice&lt;/strong&gt;: eBPF, standard Linux, Windows, and VPP ‚Äî versatility in network solutions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interoperability&lt;/strong&gt;: Works across multiple distros, multiple clouds, bare metal, and VMs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimized Performance&lt;/strong&gt;: Engineered for high speed and low CPU usage, maximizing your cluster investments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable Architecture&lt;/strong&gt;: Grows seamlessly with your Kubernetes clusters without sacrificing performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Security&lt;/strong&gt;: Get granular access controls and WireGuard encryption.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kubernetes Networking Policy Support&lt;/strong&gt;: Continually defining excellence in Kubernetes network policy standards and support.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vibrant Contributor Community&lt;/strong&gt;: Over 200 contributors from a wide array of global companies.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible networking&lt;/strong&gt;: An array of networking tools at your disposal, including BGP, VXLAN, service advertisement, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://www.tigera.io/app/uploads/2024/02/Ecosystem_shrunken_2023.svg?sanitize=true"&gt; 
&lt;/div&gt; 
&lt;h2&gt;ü§ù Join the Calico Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.tigera.io/project-calico/calico-big-cats-ambassador-program/#meet-calico-big-cats"&gt;Calico Big Cats&lt;/a&gt;: Become an ambassador and share your journey&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://calendar.google.com/calendar/u/0/embed?src=tigera.io_uunmavdev5ndovf0hc4frtl0i0@group.calendar.google.com"&gt;Community Meetings&lt;/a&gt;: Engage and contribute&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/projectcalico/calico/labels/good%20first%20issue"&gt;Contribute on GitHub&lt;/a&gt;: Start with 'good first issues'&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://slack.projectcalico.org/"&gt;Connect on Slack&lt;/a&gt;: Join the conversation with fellow contributors and our developers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üí° Contributing to Project Calico&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.tigera.io/calico/latest/about"&gt;Get Started with Project Calico&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/projectcalico/repositories"&gt;Repositories&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/projectcalico/calico/raw/master/CONTRIBUTING_DOCS.md"&gt;Contribute to our docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.tigera.io/calico/latest/about/training-resources"&gt;Dive into our training and resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/projectcalico/calico/issues"&gt;Make Calico better&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üõ†Ô∏è Projects We Maintain&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/projectcalico/api"&gt;Calico Golang API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tigera/operator"&gt;Calico operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/projectcalico/vpp-dataplane"&gt;VPP dataplane&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/projectcalico/bird"&gt;Calico BIRD&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¢ Stay Connected&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Subscribe: &lt;a href="https://www.tigera.io/project-calico/#:~:text=Join%20Calico%20Open%20Source%20community%20newsletter"&gt;Join our newsletter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCFpTnXDNcBoXI4gqCDmegFA"&gt;YouTube channel for updates &amp;amp; tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tigera.io/blog/?_sft_category=technical-blog"&gt;Technical Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tigera.io/careers/"&gt;Careers&lt;/a&gt;: Passionate about open source? Join our team.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>junegunn/fzf</title>
      <link>https://github.com/junegunn/fzf</link>
      <description>&lt;p&gt;üå∏ A command-line fuzzy finder&lt;/p&gt;&lt;hr&gt;&lt;div align="center" markdown="1"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fzf"&gt; &lt;img alt="Warp sponsorship" width="400" src="https://github.com/user-attachments/assets/ab8dd143-b0fd-4904-bdc5-dd7ecac94eae"&gt; &lt;/a&gt; 
 &lt;h3&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fzf"&gt;Warp, the intelligent terminal for developers&lt;/a&gt;&lt;/h3&gt; 
 &lt;p&gt;&lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=fzf"&gt;Available for MacOS, Linux, &amp;amp; Windows&lt;/a&gt;&lt;br&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-color.png" alt="fzf - a command-line fuzzy finder"&gt; 
 &lt;a href="https://github.com/junegunn/fzf/actions"&gt;&lt;img src="https://github.com/junegunn/fzf/actions/workflows/linux.yml/badge.svg?branch=master" alt="Build Status"&gt;&lt;/a&gt; 
 &lt;a href="http://github.com/junegunn/fzf/releases"&gt;&lt;img src="https://img.shields.io/github/v/tag/junegunn/fzf" alt="Version"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/junegunn/fzf?tab=MIT-1-ov-file#readme"&gt;&lt;img src="https://img.shields.io/github/license/junegunn/fzf" alt="License"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/junegunn/fzf/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/junegunn/fzf" alt="Contributors"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/sponsors/junegunn"&gt;&lt;img src="https://img.shields.io/github/sponsors/junegunn" alt="Sponsors"&gt;&lt;/a&gt; 
 &lt;a href="https://github.com/junegunn/fzf/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/junegunn/fzf?style=flat" alt="Stars"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;p&gt;fzf is a general-purpose command-line fuzzy finder.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-preview.png" width="640"&gt; 
&lt;p&gt;It's an interactive filter program for any kind of list; files, command history, processes, hostnames, bookmarks, git commits, etc. It implements a "fuzzy" matching algorithm, so you can quickly type in patterns with omitted characters and still get the results you want.&lt;/p&gt; 
&lt;h2&gt;Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üì¶ &lt;strong&gt;Portable&lt;/strong&gt; ‚Äî Distributed as a single binary for easy installation&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Blazingly fast&lt;/strong&gt; ‚Äî Highly optimized code instantly processes millions of items&lt;/li&gt; 
 &lt;li&gt;üõ†Ô∏è &lt;strong&gt;Extremely versatile&lt;/strong&gt; ‚Äî Fully customizable via an event-action binding mechanism&lt;/li&gt; 
 &lt;li&gt;üîã &lt;strong&gt;Batteries included&lt;/strong&gt; ‚Äî Includes integration with bash, zsh, fish, Vim, and Neovim&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- vim-markdown-toc GFM --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#using-homebrew"&gt;Using Homebrew&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#linux-packages"&gt;Linux packages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#windows-packages"&gt;Windows packages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#using-git"&gt;Using git&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#binary-releases"&gt;Binary releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;Setting up shell integration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#vimneovim-plugin"&gt;Vim/Neovim plugin&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#upgrading-fzf"&gt;Upgrading fzf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#building-fzf"&gt;Building fzf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#usage"&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#using-the-finder"&gt;Using the finder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#display-modes"&gt;Display modes&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#--height-mode"&gt;&lt;code&gt;--height&lt;/code&gt; mode&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#--tmux-mode"&gt;&lt;code&gt;--tmux&lt;/code&gt; mode&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#search-syntax"&gt;Search syntax&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#environment-variables"&gt;Environment variables&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-the-look"&gt;Customizing the look&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#options"&gt;Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#key-bindings-for-command-line"&gt;Key bindings for command-line&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#fuzzy-completion-for-bash-and-zsh"&gt;Fuzzy completion for bash and zsh&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#files-and-directories"&gt;Files and directories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#process-ids"&gt;Process IDs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#host-names"&gt;Host names&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#environment-variables--aliases"&gt;Environment variables / Aliases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-fzf-options-for-completion"&gt;Customizing fzf options for completion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-completion-source-for-paths-and-directories"&gt;Customizing completion source for paths and directories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#supported-commands"&gt;Supported commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#custom-fuzzy-completion"&gt;Custom fuzzy completion&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#vim-plugin"&gt;Vim plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#advanced-topics"&gt;Advanced topics&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#customizing-for-different-types-of-input"&gt;Customizing for different types of input&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#executing-external-programs"&gt;Executing external programs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#turning-into-a-different-process"&gt;Turning into a different process&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#reloading-the-candidate-list"&gt;Reloading the candidate list&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#1-update-the-list-of-processes-by-pressing-ctrl-r"&gt;1. Update the list of processes by pressing CTRL-R&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#2-switch-between-sources-by-pressing-ctrl-d-or-ctrl-f"&gt;2. Switch between sources by pressing CTRL-D or CTRL-F&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#3-interactive-ripgrep-integration"&gt;3. Interactive ripgrep integration&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#preview-window"&gt;Preview window&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#previewing-an-image"&gt;Previewing an image&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#tips"&gt;Tips&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#respecting-gitignore"&gt;Respecting &lt;code&gt;.gitignore&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#fish-shell"&gt;Fish shell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#fzf-theme-playground"&gt;fzf Theme Playground&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#related-projects"&gt;Related projects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#sponsors-heart"&gt;Sponsors &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- vim-markdown-toc --&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Using Homebrew&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; (on macOS or Linux) to install fzf.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install fzf
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To set up shell integration (key bindings and fuzzy completion), see &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;the instructions below&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;fzf is also available &lt;a href="https://github.com/macports/macports-ports/raw/master/sysutils/fzf/Portfile"&gt;via MacPorts&lt;/a&gt;: &lt;code&gt;sudo port install fzf&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Linux packages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package Manager&lt;/th&gt; 
   &lt;th&gt;Linux Distribution&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APK&lt;/td&gt; 
   &lt;td&gt;Alpine Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo apk add fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APT&lt;/td&gt; 
   &lt;td&gt;Debian 9+/Ubuntu 19.10+&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo apt install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Conda&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;conda install -c conda-forge fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DNF&lt;/td&gt; 
   &lt;td&gt;Fedora&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo dnf install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nix&lt;/td&gt; 
   &lt;td&gt;NixOS, etc.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;nix-env -iA nixpkgs.fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Pacman&lt;/td&gt; 
   &lt;td&gt;Arch Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo pacman -S fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pkg&lt;/td&gt; 
   &lt;td&gt;FreeBSD&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pkg install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pkgin&lt;/td&gt; 
   &lt;td&gt;NetBSD&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pkgin install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pkg_add&lt;/td&gt; 
   &lt;td&gt;OpenBSD&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pkg_add fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Portage&lt;/td&gt; 
   &lt;td&gt;Gentoo&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;emerge --ask app-shells/fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Spack&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;spack install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;XBPS&lt;/td&gt; 
   &lt;td&gt;Void Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo xbps-install -S fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Zypper&lt;/td&gt; 
   &lt;td&gt;openSUSE&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;sudo zypper install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To set up shell integration (key bindings and fuzzy completion), see &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;the instructions below&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/fzf/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/fzf.svg?columns=3" alt="Packaging status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows packages&lt;/h3&gt; 
&lt;p&gt;On Windows, fzf is available via &lt;a href="https://chocolatey.org/packages/fzf"&gt;Chocolatey&lt;/a&gt;, &lt;a href="https://github.com/ScoopInstaller/Main/raw/master/bucket/fzf.json"&gt;Scoop&lt;/a&gt;, &lt;a href="https://github.com/microsoft/winget-pkgs/tree/master/manifests/j/junegunn/fzf"&gt;Winget&lt;/a&gt;, and &lt;a href="https://packages.msys2.org/base/mingw-w64-fzf"&gt;MSYS2&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Package manager&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chocolatey&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;choco install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Scoop&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;scoop install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Winget&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;winget install fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MSYS2 (pacman)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pacman -S $MINGW_PACKAGE_PREFIX-fzf&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Using git&lt;/h3&gt; 
&lt;p&gt;Alternatively, you can "git clone" this repository to any directory and run &lt;a href="https://github.com/junegunn/fzf/raw/master/install"&gt;install&lt;/a&gt; script.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
~/.fzf/install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The install script will add lines to your shell configuration file to modify &lt;code&gt;$PATH&lt;/code&gt; and set up shell integration.&lt;/p&gt; 
&lt;h3&gt;Binary releases&lt;/h3&gt; 
&lt;p&gt;You can download the official fzf binaries from the releases page.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf/releases"&gt;https://github.com/junegunn/fzf/releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Setting up shell integration&lt;/h3&gt; 
&lt;p&gt;Add the following line to your shell configuration file.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;bash &lt;pre&gt;&lt;code class="language-sh"&gt;# Set up fzf key bindings and fuzzy completion
eval "$(fzf --bash)"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;zsh &lt;pre&gt;&lt;code class="language-sh"&gt;# Set up fzf key bindings and fuzzy completion
source &amp;lt;(fzf --zsh)
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;fish &lt;pre&gt;&lt;code class="language-fish"&gt;# Set up fzf key bindings
fzf --fish | source
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;code&gt;--bash&lt;/code&gt;, &lt;code&gt;--zsh&lt;/code&gt;, and &lt;code&gt;--fish&lt;/code&gt; options are only available in fzf 0.48.0 or later. If you have an older version of fzf, or want finer control, you can source individual script files in the &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/shell"&gt;/shell&lt;/a&gt; directory. The location of the files may vary depending on the package manager you use. Please refer to the package documentation for more information. (e.g. &lt;code&gt;apt show fzf&lt;/code&gt;)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You can disable CTRL-T or ALT-C binding by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; or &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to an empty string when sourcing the script. For example, to disable ALT-C binding:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;bash: &lt;code&gt;FZF_ALT_C_COMMAND= eval "$(fzf --bash)"&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;zsh: &lt;code&gt;FZF_ALT_C_COMMAND= source &amp;lt;(fzf --zsh)&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;fish: &lt;code&gt;fzf --fish | FZF_ALT_C_COMMAND= source&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Setting the variables after sourcing the script will have no effect.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Vim/Neovim plugin&lt;/h3&gt; 
&lt;p&gt;If you use &lt;a href="https://github.com/junegunn/vim-plug"&gt;vim-plug&lt;/a&gt;, add this to your Vim configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-vim"&gt;Plug 'junegunn/fzf', { 'do': { -&amp;gt; fzf#install() } }
Plug 'junegunn/fzf.vim'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;junegunn/fzf&lt;/code&gt; provides the basic library functions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;fzf#install()&lt;/code&gt; makes sure that you have the latest binary&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;junegunn/fzf.vim&lt;/code&gt; is &lt;a href="https://github.com/junegunn/fzf.vim"&gt;a separate project&lt;/a&gt; that provides a variety of useful commands&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To learn more about the Vim integration, see &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/README-VIM.md"&gt;README-VIM.md&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you use Neovim and prefer Lua-based plugins, check out &lt;a href="https://github.com/ibhagwan/fzf-lua"&gt;fzf-lua&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Upgrading fzf&lt;/h2&gt; 
&lt;p&gt;fzf is being actively developed, and you might want to upgrade it once in a while. Please follow the instruction below depending on the installation method used.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;git: &lt;code&gt;cd ~/.fzf &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; ./install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;brew: &lt;code&gt;brew update; brew upgrade fzf&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;macports: &lt;code&gt;sudo port upgrade fzf&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;chocolatey: &lt;code&gt;choco upgrade fzf&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;vim-plug: &lt;code&gt;:PlugUpdate fzf&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building fzf&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/BUILD.md"&gt;BUILD.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;fzf will launch interactive finder, read the list from STDIN, and write the selected item to STDOUT.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;find * -type f | fzf &amp;gt; selected
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Without STDIN pipe, fzf will traverse the file system under the current directory to get the list of files.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;vim $(fzf)
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You can override the default behavior&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Either by setting &lt;code&gt;$FZF_DEFAULT_COMMAND&lt;/code&gt; to a command that generates the desired list&lt;/li&gt; 
  &lt;li&gt;Or by setting &lt;code&gt;--walker&lt;/code&gt;, &lt;code&gt;--walker-root&lt;/code&gt;, and &lt;code&gt;--walker-skip&lt;/code&gt; options in &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] A more robust solution would be to use &lt;code&gt;xargs&lt;/code&gt; but we've presented the above as it's easier to grasp&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --print0 | xargs -0 -o vim
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] fzf also has the ability to turn itself into a different process.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --bind 'enter:become(vim {})'
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#turning-into-a-different-process"&gt;Turning into a different process&lt;/a&gt; for more information.&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Using the finder&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CTRL-K&lt;/code&gt; / &lt;code&gt;CTRL-J&lt;/code&gt; (or &lt;code&gt;CTRL-P&lt;/code&gt; / &lt;code&gt;CTRL-N&lt;/code&gt;) to move cursor up and down&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Enter&lt;/code&gt; key to select the item, &lt;code&gt;CTRL-C&lt;/code&gt; / &lt;code&gt;CTRL-G&lt;/code&gt; / &lt;code&gt;ESC&lt;/code&gt; to exit&lt;/li&gt; 
 &lt;li&gt;On multi-select mode (&lt;code&gt;-m&lt;/code&gt;), &lt;code&gt;TAB&lt;/code&gt; and &lt;code&gt;Shift-TAB&lt;/code&gt; to mark multiple items&lt;/li&gt; 
 &lt;li&gt;Emacs style key bindings&lt;/li&gt; 
 &lt;li&gt;Mouse: scroll, click, double-click; shift-click and shift-scroll on multi-select mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Display modes&lt;/h3&gt; 
&lt;p&gt;fzf by default runs in fullscreen mode, but there are other display modes.&lt;/p&gt; 
&lt;h4&gt;&lt;code&gt;--height&lt;/code&gt; mode&lt;/h4&gt; 
&lt;p&gt;With &lt;code&gt;--height HEIGHT[%]&lt;/code&gt;, fzf will start below the cursor with the given height.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --height 40%
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;reverse&lt;/code&gt; layout and &lt;code&gt;--border&lt;/code&gt; goes well with this option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --height 40% --layout reverse --border
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By prepending &lt;code&gt;~&lt;/code&gt; to the height, you're setting the maximum height.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Will take as few lines as possible to display the list
seq 3 | fzf --height ~100%
seq 3000 | fzf --height ~100%
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Height value can be a negative number.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Screen height - 3
fzf --height -3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;code&gt;--tmux&lt;/code&gt; mode&lt;/h4&gt; 
&lt;p&gt;With &lt;code&gt;--tmux&lt;/code&gt; option, fzf will start in a tmux popup.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# --tmux [center|top|bottom|left|right][,SIZE[%]][,SIZE[%][,border-native]]

fzf --tmux center         # Center, 50% width and height
fzf --tmux 80%            # Center, 80% width and height
fzf --tmux 100%,50%       # Center, 100% width and 50% height
fzf --tmux left,40%       # Left, 40% width
fzf --tmux left,40%,90%   # Left, 40% width, 90% height
fzf --tmux top,40%        # Top, 40% height
fzf --tmux bottom,80%,40% # Bottom, 80% width, 40% height
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;--tmux&lt;/code&gt; is silently ignored when you're not on tmux.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're stuck with an old version of tmux that doesn't support popup, or if you want to open fzf in a regular tmux pane, check out &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-tmux"&gt;fzf-tmux&lt;/a&gt; script.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] You can add these options to &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt; so that they're applied by default. For example,&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# Open in tmux popup if on tmux, otherwise use --height mode
export FZF_DEFAULT_OPTS='--height 40% --tmux bottom,40% --layout reverse --border top'
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Search syntax&lt;/h3&gt; 
&lt;p&gt;Unless otherwise specified, fzf starts in "extended-search mode" where you can type in multiple search terms delimited by spaces. e.g. &lt;code&gt;^music .mp3$ sbtrkt !fire&lt;/code&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Token&lt;/th&gt; 
   &lt;th&gt;Match type&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;fuzzy-match&lt;/td&gt; 
   &lt;td&gt;Items that match &lt;code&gt;sbtrkt&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;'wild&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;exact-match (quoted)&lt;/td&gt; 
   &lt;td&gt;Items that include &lt;code&gt;wild&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;'wild'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;exact-boundary-match (quoted both ends)&lt;/td&gt; 
   &lt;td&gt;Items that include &lt;code&gt;wild&lt;/code&gt; at word boundaries&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;^music&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;prefix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;.mp3$&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;suffix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;!fire&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;inverse-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that do not include &lt;code&gt;fire&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;!^music&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;inverse-prefix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that do not start with &lt;code&gt;music&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;!.mp3$&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;inverse-suffix-exact-match&lt;/td&gt; 
   &lt;td&gt;Items that do not end with &lt;code&gt;.mp3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you don't prefer fuzzy matching and do not wish to "quote" every word, start fzf with &lt;code&gt;-e&lt;/code&gt; or &lt;code&gt;--exact&lt;/code&gt; option. Note that when &lt;code&gt;--exact&lt;/code&gt; is set, &lt;code&gt;'&lt;/code&gt;-prefix "unquotes" the term.&lt;/p&gt; 
&lt;p&gt;A single bar character term acts as an OR operator. For example, the following query matches entries that start with &lt;code&gt;core&lt;/code&gt; and end with either &lt;code&gt;go&lt;/code&gt;, &lt;code&gt;rb&lt;/code&gt;, or &lt;code&gt;py&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;^core go$ | rb$ | py$
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Environment variables&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;FZF_DEFAULT_COMMAND&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Default command to use when input is tty&lt;/li&gt; 
   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_COMMAND='fd --type f'&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FZF_DEFAULT_OPTS&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Default options&lt;/li&gt; 
   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_OPTS="--layout=reverse --inline-info"&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FZF_DEFAULT_OPTS_FILE&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you prefer to manage default options in a file, set this variable to point to the location of the file&lt;/li&gt; 
   &lt;li&gt;e.g. &lt;code&gt;export FZF_DEFAULT_OPTS_FILE=~/.fzfrc&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;code&gt;FZF_DEFAULT_COMMAND&lt;/code&gt; is not used by shell integration due to the slight difference in requirements.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;CTRL-T&lt;/code&gt; runs &lt;code&gt;$FZF_CTRL_T_COMMAND&lt;/code&gt; to get a list of files and directories&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;ALT-C&lt;/code&gt; runs &lt;code&gt;$FZF_ALT_C_COMMAND&lt;/code&gt; to get a list of directories&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;vim ~/**&amp;lt;tab&amp;gt;&lt;/code&gt; runs &lt;code&gt;fzf_compgen_path()&lt;/code&gt; with the prefix (&lt;code&gt;~/&lt;/code&gt;) as the first argument&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;cd foo**&amp;lt;tab&amp;gt;&lt;/code&gt; runs &lt;code&gt;fzf_compgen_dir()&lt;/code&gt; with the prefix (&lt;code&gt;foo&lt;/code&gt;) as the first argument&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The available options are described later in this document.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Customizing the look&lt;/h3&gt; 
&lt;p&gt;The user interface of fzf is fully customizable with a large number of configuration options. For a quick setup, you can start with one of the style presets ‚Äî &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, or &lt;code&gt;minimal&lt;/code&gt; ‚Äî using the &lt;code&gt;--style&lt;/code&gt; option.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --style full \
    --preview 'fzf-preview.sh {}' --bind 'focus:transform-header:file --brief {}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Preset&lt;/th&gt; 
   &lt;th align="left"&gt;Screenshot&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-style-default.png"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;full&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-style-full.png"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;minimal&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-style-minimal.png"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example based on the &lt;code&gt;full&lt;/code&gt; preset:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/junegunn/i/master/fzf-4-borders.png"&gt; 
&lt;details&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;git ls-files | fzf --style full \
    --border --padding 1,2 \
    --border-label ' Demo ' --input-label ' Input ' --header-label ' File Type ' \
    --preview 'fzf-preview.sh {}' \
    --bind 'result:transform-list-label:
        if [[ -z $FZF_QUERY ]]; then
          echo " $FZF_MATCH_COUNT items "
        else
          echo " $FZF_MATCH_COUNT matches for [$FZF_QUERY] "
        fi
        ' \
    --bind 'focus:transform-preview-label:[[ -n {} ]] &amp;amp;&amp;amp; printf " Previewing [%s] " {}' \
    --bind 'focus:+transform-header:file --brief {} || echo "No file selected"' \
    --bind 'ctrl-r:change-list-label( Reloading the list )+reload(sleep 2; git ls-files)' \
    --color 'border:#aaaaaa,label:#cccccc' \
    --color 'preview-border:#9999cc,preview-label:#ccccff' \
    --color 'list-border:#669966,list-label:#99cc99' \
    --color 'input-border:#996666,input-label:#ffcccc' \
    --color 'header-border:#6699cc,header-label:#99ccff'
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;See the man page (&lt;code&gt;fzf --man&lt;/code&gt; or &lt;code&gt;man fzf&lt;/code&gt;) for the full list of options.&lt;/p&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;If you learn by watching videos, check out this screencast by &lt;a href="https://github.com/samoshkin"&gt;@samoshkin&lt;/a&gt; to explore &lt;code&gt;fzf&lt;/code&gt; features.&lt;/p&gt; 
&lt;a title="fzf - command-line fuzzy finder" href="https://www.youtube.com/watch?v=qgG5Jhi_Els"&gt; &lt;img src="https://i.imgur.com/vtG8olE.png" width="640"&gt; &lt;/a&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf/wiki/examples"&gt;Wiki page of examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Disclaimer: The examples on this page are maintained by the community and are not thoroughly tested&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf/raw/master/ADVANCED.md"&gt;Advanced fzf examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key bindings for command-line&lt;/h2&gt; 
&lt;p&gt;By &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/#setting-up-shell-integration"&gt;setting up shell integration&lt;/a&gt;, you can use the following key bindings in bash, zsh, and fish.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CTRL-T&lt;/code&gt; - Paste the selected files and directories onto the command-line 
  &lt;ul&gt; 
   &lt;li&gt;The list is generated using &lt;code&gt;--walker file,dir,follow,hidden&lt;/code&gt; option 
    &lt;ul&gt; 
     &lt;li&gt;You can override the behavior by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; to a custom command that generates the desired list&lt;/li&gt; 
     &lt;li&gt;Or you can set &lt;code&gt;--walker*&lt;/code&gt; options in &lt;code&gt;FZF_CTRL_T_OPTS&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_CTRL_T_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# Preview file content using bat (https://github.com/sharkdp/bat)
export FZF_CTRL_T_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'bat -n --color=always {}'
  --bind 'ctrl-/:change-preview-window(down|hidden|)'"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Can be disabled by setting &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt; to an empty string when sourcing the script&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CTRL-R&lt;/code&gt; - Paste the selected command from history onto the command-line 
  &lt;ul&gt; 
   &lt;li&gt;If you want to see the commands in chronological order, press &lt;code&gt;CTRL-R&lt;/code&gt; again which toggles sorting by relevance&lt;/li&gt; 
   &lt;li&gt;Press &lt;code&gt;CTRL-/&lt;/code&gt; or &lt;code&gt;ALT-/&lt;/code&gt; to toggle line wrapping&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_CTRL_R_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# CTRL-Y to copy the command into clipboard using pbcopy
export FZF_CTRL_R_OPTS="
  --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort'
  --color header:italic
  --header 'Press CTRL-Y to copy command into clipboard'"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ALT-C&lt;/code&gt; - cd into the selected directory 
  &lt;ul&gt; 
   &lt;li&gt;The list is generated using &lt;code&gt;--walker dir,follow,hidden&lt;/code&gt; option&lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to override the default command 
    &lt;ul&gt; 
     &lt;li&gt;Or you can set &lt;code&gt;--walker-*&lt;/code&gt; options in &lt;code&gt;FZF_ALT_C_OPTS&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Set &lt;code&gt;FZF_ALT_C_OPTS&lt;/code&gt; to pass additional options to fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# Print tree structure in the preview window
export FZF_ALT_C_OPTS="
  --walker-skip .git,node_modules,target
  --preview 'tree -C {}'"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;Can be disabled by setting &lt;code&gt;FZF_ALT_C_COMMAND&lt;/code&gt; to an empty string when sourcing the script&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Display modes for these bindings can be separately configured via &lt;code&gt;FZF_{CTRL_T,CTRL_R,ALT_C}_OPTS&lt;/code&gt; or globally via &lt;code&gt;FZF_DEFAULT_OPTS&lt;/code&gt;. (e.g. &lt;code&gt;FZF_CTRL_R_OPTS='--tmux bottom,60% --height 60% --border top'&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;More tips can be found on &lt;a href="https://github.com/junegunn/fzf/wiki/Configuring-shell-key-bindings"&gt;the wiki page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Fuzzy completion for bash and zsh&lt;/h2&gt; 
&lt;h3&gt;Files and directories&lt;/h3&gt; 
&lt;p&gt;Fuzzy completion for files and directories can be triggered if the word before the cursor ends with the trigger sequence, which is by default &lt;code&gt;**&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;COMMAND [DIRECTORY/][FUZZY_PATTERN]**&amp;lt;TAB&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Files under the current directory
# - You can select multiple items with TAB key
vim **&amp;lt;TAB&amp;gt;

# Files under parent directory
vim ../**&amp;lt;TAB&amp;gt;

# Files under parent directory that match `fzf`
vim ../fzf**&amp;lt;TAB&amp;gt;

# Files under your home directory
vim ~/**&amp;lt;TAB&amp;gt;


# Directories under current directory (single-selection)
cd **&amp;lt;TAB&amp;gt;

# Directories under ~/github that match `fzf`
cd ~/github/fzf**&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Process IDs&lt;/h3&gt; 
&lt;p&gt;Fuzzy completion for PIDs is provided for kill command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Can select multiple processes with &amp;lt;TAB&amp;gt; or &amp;lt;Shift-TAB&amp;gt; keys
kill -9 **&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Host names&lt;/h3&gt; 
&lt;p&gt;For ssh and telnet commands, fuzzy completion for hostnames is provided. The names are extracted from /etc/hosts and ~/.ssh/config.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ssh **&amp;lt;TAB&amp;gt;
telnet **&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Environment variables / Aliases&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;unset **&amp;lt;TAB&amp;gt;
export **&amp;lt;TAB&amp;gt;
unalias **&amp;lt;TAB&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Customizing fzf options for completion&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Use ~~ as the trigger sequence instead of the default **
export FZF_COMPLETION_TRIGGER='~~'

# Options to fzf command
export FZF_COMPLETION_OPTS='--border --info=inline'

# Options for path completion (e.g. vim **&amp;lt;TAB&amp;gt;)
export FZF_COMPLETION_PATH_OPTS='--walker file,dir,follow,hidden'

# Options for directory completion (e.g. cd **&amp;lt;TAB&amp;gt;)
export FZF_COMPLETION_DIR_OPTS='--walker dir,follow'

# Advanced customization of fzf options via _fzf_comprun function
# - The first argument to the function is the name of the command.
# - You should make sure to pass the rest of the arguments ($@) to fzf.
_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf --preview 'tree -C {} | head -200'   "$@" ;;
    export|unset) fzf --preview "eval 'echo \$'{}"         "$@" ;;
    ssh)          fzf --preview 'dig {}'                   "$@" ;;
    *)            fzf --preview 'bat -n --color=always {}' "$@" ;;
  esac
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Customizing completion source for paths and directories&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Use fd (https://github.com/sharkdp/fd) for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Supported commands&lt;/h3&gt; 
&lt;p&gt;On bash, fuzzy completion is enabled only for a predefined set of commands (&lt;code&gt;complete | grep _fzf&lt;/code&gt; to see the list). But you can enable it for other commands as well by using &lt;code&gt;_fzf_setup_completion&lt;/code&gt; helper function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# usage: _fzf_setup_completion path|dir|var|alias|host COMMANDS...
_fzf_setup_completion path ag git kubectl
_fzf_setup_completion dir tree
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom fuzzy completion&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;(Custom completion API is experimental and subject to change)&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;For a command named &lt;em&gt;"COMMAND"&lt;/em&gt;, define &lt;code&gt;_fzf_complete_COMMAND&lt;/code&gt; function using &lt;code&gt;_fzf_complete&lt;/code&gt; helper.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Custom fuzzy completion for "doge" command
#   e.g. doge **&amp;lt;TAB&amp;gt;
_fzf_complete_doge() {
  _fzf_complete --multi --reverse --prompt="doge&amp;gt; " -- "$@" &amp;lt; &amp;lt;(
    echo very
    echo wow
    echo such
    echo doge
  )
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;The arguments before &lt;code&gt;--&lt;/code&gt; are the options to fzf.&lt;/li&gt; 
 &lt;li&gt;After &lt;code&gt;--&lt;/code&gt;, simply pass the original completion arguments unchanged (&lt;code&gt;"$@"&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Then, write a set of commands that generates the completion candidates and feed its output to the function using process substitution (&lt;code&gt;&amp;lt; &amp;lt;(...)&lt;/code&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;zsh will automatically pick up the function using the naming convention but in bash you have to manually associate the function with the command using the &lt;code&gt;complete&lt;/code&gt; command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;[ -n "$BASH" ] &amp;amp;&amp;amp; complete -F _fzf_complete_doge -o default -o bashdefault doge
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you need to post-process the output from fzf, define &lt;code&gt;_fzf_complete_COMMAND_post&lt;/code&gt; as follows.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;_fzf_complete_foo() {
  _fzf_complete --multi --reverse --header-lines=3 -- "$@" &amp;lt; &amp;lt;(
    ls -al
  )
}

_fzf_complete_foo_post() {
  awk '{print $NF}'
}

[ -n "$BASH" ] &amp;amp;&amp;amp; complete -F _fzf_complete_foo -o default -o bashdefault foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Vim plugin&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/README-VIM.md"&gt;README-VIM.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced topics&lt;/h2&gt; 
&lt;h3&gt;Customizing for different types of input&lt;/h3&gt; 
&lt;p&gt;Since fzf is a general-purpose text filter, its algorithm was designed to "generally" work well with any kind of input. However, admittedly, there is no true one-size-fits-all solution, and you may want to tweak the algorithm and some of the settings depending on the type of the input. To make this process easier, fzf provides a set of "scheme"s for some common input types.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Scheme&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;--scheme=default&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Generic scheme designed to work well with any kind of input&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;--scheme=path&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Suitable for file paths&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;--scheme=history&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Suitable for command history or any input where chronological ordering is important&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;(See &lt;code&gt;fzf --man&lt;/code&gt; for the details)&lt;/p&gt; 
&lt;h3&gt;Performance&lt;/h3&gt; 
&lt;p&gt;fzf is fast. Performance should not be a problem in most use cases. However, you might want to be aware of the options that can affect performance.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--ansi&lt;/code&gt; tells fzf to extract and parse ANSI color codes in the input, and it makes the initial scanning slower. So it's not recommended that you add it to your &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--nth&lt;/code&gt; makes fzf slower because it has to tokenize each line.&lt;/li&gt; 
 &lt;li&gt;A plain string &lt;code&gt;--delimiter&lt;/code&gt; should be preferred over a regular expression delimiter.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--with-nth&lt;/code&gt; makes fzf slower as fzf has to tokenize and reassemble each line.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Executing external programs&lt;/h3&gt; 
&lt;p&gt;You can set up key bindings for starting external processes without leaving fzf (&lt;code&gt;execute&lt;/code&gt;, &lt;code&gt;execute-silent&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Press F1 to open the file with less without leaving fzf
# Press CTRL-Y to copy the line to clipboard and aborts fzf (requires pbcopy)
fzf --bind 'f1:execute(less -f {}),ctrl-y:execute-silent(echo {} | pbcopy)+abort'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;em&gt;KEY/EVENT BINDINGS&lt;/em&gt; section of the man page for details.&lt;/p&gt; 
&lt;h3&gt;Turning into a different process&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;become(...)&lt;/code&gt; is similar to &lt;code&gt;execute(...)&lt;/code&gt;/&lt;code&gt;execute-silent(...)&lt;/code&gt; described above, but instead of executing the command and coming back to fzf on complete, it turns fzf into a new process for the command.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --bind 'enter:become(vim {})'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compared to the seemingly equivalent command substitution &lt;code&gt;vim "$(fzf)"&lt;/code&gt;, this approach has several advantages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Vim will not open an empty file when you terminate fzf with &lt;kbd&gt;CTRL-C&lt;/kbd&gt;&lt;/li&gt; 
 &lt;li&gt;Vim will not open an empty file when you press &lt;kbd&gt;ENTER&lt;/kbd&gt; on an empty result&lt;/li&gt; 
 &lt;li&gt;Can handle multiple selections even when they have whitespaces &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --multi --bind 'enter:become(vim {+})'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To be fair, running &lt;code&gt;fzf --print0 | xargs -0 -o vim&lt;/code&gt; instead of &lt;code&gt;vim "$(fzf)"&lt;/code&gt; resolves all of the issues mentioned. Nonetheless, &lt;code&gt;become(...)&lt;/code&gt; still offers additional benefits in different scenarios.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can set up multiple bindings to handle the result in different ways without any wrapping script &lt;pre&gt;&lt;code class="language-sh"&gt;fzf --bind 'enter:become(vim {}),ctrl-e:become(emacs {})'
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Previously, you would have to use &lt;code&gt;--expect=ctrl-e&lt;/code&gt; and check the first line of the output of fzf&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;You can easily build the subsequent command using the field index expressions of fzf &lt;pre&gt;&lt;code class="language-sh"&gt;# Open the file in Vim and go to the line
git grep --line-number . |
    fzf --delimiter : --nth 3.. --bind 'enter:become(vim {1} +{2})'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reloading the candidate list&lt;/h3&gt; 
&lt;p&gt;By binding &lt;code&gt;reload&lt;/code&gt; action to a key or an event, you can make fzf dynamically reload the candidate list. See &lt;a href="https://github.com/junegunn/fzf/issues/1750"&gt;https://github.com/junegunn/fzf/issues/1750&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h4&gt;1. Update the list of processes by pressing CTRL-R&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ps -ef |
  fzf --bind 'ctrl-r:reload(ps -ef)' \
      --header 'Press CTRL-R to reload' --header-lines=1 \
      --height=50% --layout=reverse
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;2. Switch between sources by pressing CTRL-D or CTRL-F&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;FZF_DEFAULT_COMMAND='find . -type f' \
  fzf --bind 'ctrl-d:reload(find . -type d),ctrl-f:reload(eval "$FZF_DEFAULT_COMMAND")' \
      --height=50% --layout=reverse
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;3. Interactive ripgrep integration&lt;/h4&gt; 
&lt;p&gt;The following example uses fzf as the selector interface for ripgrep. We bound &lt;code&gt;reload&lt;/code&gt; action to &lt;code&gt;change&lt;/code&gt; event, so every time you type on fzf, the ripgrep process will restart with the updated query string denoted by the placeholder expression &lt;code&gt;{q}&lt;/code&gt;. Also, note that we used &lt;code&gt;--disabled&lt;/code&gt; option so that fzf doesn't perform any secondary filtering.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;: | rg_prefix='rg --column --line-number --no-heading --color=always --smart-case' \
    fzf --bind 'start:reload:$rg_prefix ""' \
        --bind 'change:reload:$rg_prefix {q} || true' \
        --bind 'enter:become(vim {1} +{2})' \
        --ansi --disabled \
        --height=50% --layout=reverse
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If ripgrep doesn't find any matches, it will exit with a non-zero exit status, and fzf will warn you about it. To suppress the warning message, we added &lt;code&gt;|| true&lt;/code&gt; to the command, so that it always exits with 0.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/junegunn/fzf/raw/master/ADVANCED.md#using-fzf-as-interactive-ripgrep-launcher"&gt;"Using fzf as interactive Ripgrep launcher"&lt;/a&gt; for more sophisticated examples.&lt;/p&gt; 
&lt;h3&gt;Preview window&lt;/h3&gt; 
&lt;p&gt;When the &lt;code&gt;--preview&lt;/code&gt; option is set, fzf automatically starts an external process with the current line as the argument and shows the result in the split window. Your &lt;code&gt;$SHELL&lt;/code&gt; is used to execute the command with &lt;code&gt;$SHELL -c COMMAND&lt;/code&gt;. The window can be scrolled using the mouse or custom key bindings.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# {} is replaced with the single-quoted string of the focused line
fzf --preview 'cat {}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Preview window supports ANSI colors, so you can use any program that syntax-highlights the content of a file, such as &lt;a href="https://github.com/sharkdp/bat"&gt;Bat&lt;/a&gt; or &lt;a href="https://gitlab.com/saalen/highlight"&gt;Highlight&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fzf --preview 'bat --color=always {}' --preview-window '~3'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can customize the size, position, and border of the preview window using &lt;code&gt;--preview-window&lt;/code&gt; option, and the foreground and background color of it with &lt;code&gt;--color&lt;/code&gt; option. For example,&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;fzf --height 40% --layout reverse --info inline --border \
    --preview 'file {}' --preview-window up,1,border-horizontal \
    --bind 'ctrl-/:change-preview-window(50%|hidden|)' \
    --color 'fg:#bbccdd,fg+:#ddeeff,bg:#334455,preview-bg:#223344,border:#778899'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the man page (&lt;code&gt;man fzf&lt;/code&gt;) for the full list of options.&lt;/p&gt; 
&lt;p&gt;More advanced examples can be found &lt;a href="https://github.com/junegunn/fzf/raw/master/ADVANCED.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Since fzf is a general-purpose text filter rather than a file finder, &lt;strong&gt;it is not a good idea to add &lt;code&gt;--preview&lt;/code&gt; option to your &lt;code&gt;$FZF_DEFAULT_OPTS&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# *********************
# ** DO NOT DO THIS! **
# *********************
export FZF_DEFAULT_OPTS='--preview "bat --style=numbers --color=always --line-range :500 {}"'

# bat doesn't work with any input other than the list of files
ps -ef | fzf
seq 100 | fzf
history | fzf
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Previewing an image&lt;/h3&gt; 
&lt;p&gt;fzf can display images in the preview window using one of the following protocols:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://sw.kovidgoyal.net/kitty/graphics-protocol/"&gt;Kitty graphics protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://iterm2.com/documentation-images.html"&gt;iTerm2 inline images protocol&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Sixel"&gt;Sixel&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/bin/fzf-preview.sh"&gt;bin/fzf-preview.sh&lt;/a&gt; script for more information.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fzf --preview 'fzf-preview.sh {}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tips&lt;/h2&gt; 
&lt;h3&gt;Respecting &lt;code&gt;.gitignore&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;You can use &lt;a href="https://github.com/sharkdp/fd"&gt;fd&lt;/a&gt;, &lt;a href="https://github.com/BurntSushi/ripgrep"&gt;ripgrep&lt;/a&gt;, or &lt;a href="https://github.com/ggreer/the_silver_searcher"&gt;the silver searcher&lt;/a&gt; to traverse the file system while respecting &lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Feed the output of fd into fzf
fd --type f --strip-cwd-prefix | fzf

# Setting fd as the default source for fzf
export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix'

# Now fzf (w/o pipe) will use the fd command to generate the list
fzf

# To apply the command to CTRL-T as well
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want the command to follow symbolic links and don't want it to exclude hidden files, use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export FZF_DEFAULT_COMMAND='fd --type f --strip-cwd-prefix --hidden --follow --exclude .git'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fish shell&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;CTRL-T&lt;/code&gt; key binding of fish, unlike those of bash and zsh, will use the last token on the command-line as the root directory for the recursive search. For instance, hitting &lt;code&gt;CTRL-T&lt;/code&gt; at the end of the following command-line&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ls /var/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will list all files and directories under &lt;code&gt;/var/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;When using a custom &lt;code&gt;FZF_CTRL_T_COMMAND&lt;/code&gt;, use the unexpanded &lt;code&gt;$dir&lt;/code&gt; variable to make use of this feature. &lt;code&gt;$dir&lt;/code&gt; defaults to &lt;code&gt;.&lt;/code&gt; when the last token is not a valid directory. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;set -g FZF_CTRL_T_COMMAND "command find -L \$dir -type f 2&amp;gt; /dev/null | sed '1d; s#^\./##'"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;fzf Theme Playground&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://vitormv.github.io/fzf-themes/"&gt;fzf Theme Playground&lt;/a&gt; created by &lt;a href="https://github.com/vitormv"&gt;Vitor Mello&lt;/a&gt; is a webpage where you can interactively create fzf themes.&lt;/p&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/junegunn/fzf/wiki/Related-projects"&gt;https://github.com/junegunn/fzf/wiki/Related-projects&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/junegunn/fzf/master/LICENSE"&gt;License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;The MIT License (MIT)&lt;/p&gt; 
&lt;p&gt;Copyright (c) 2013-2025 Junegunn Choi&lt;/p&gt; 
&lt;h2&gt;Sponsors &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;I would like to thank all the sponsors of this project who make it possible for me to continue to improve fzf.&lt;/p&gt; 
&lt;p&gt;If you'd like to sponsor this project, please visit &lt;a href="https://github.com/sponsors/junegunn"&gt;https://github.com/sponsors/junegunn&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- sponsors --&gt;
&lt;a href="https://github.com/miyanokomiya"&gt;&lt;img src="https://github.com/miyanokomiya.png" width="60px" alt="User avatar: miyanokomiya"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jonhoo"&gt;&lt;img src="https://github.com/jonhoo.png" width="60px" alt="User avatar: Jon Gjengset"&gt;&lt;/a&gt;
&lt;a href="https://github.com/AceofSpades5757"&gt;&lt;img src="https://github.com/AceofSpades5757.png" width="60px" alt="User avatar: Kyle L. Davis"&gt;&lt;/a&gt;
&lt;a href="https://github.com/Frederick888"&gt;&lt;img src="https://github.com/Frederick888.png" width="60px" alt="User avatar: Frederick Zhang"&gt;&lt;/a&gt;
&lt;a href="https://github.com/moritzdietz"&gt;&lt;img src="https://github.com/moritzdietz.png" width="60px" alt="User avatar: Moritz Dietz"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pldubouilh"&gt;&lt;img src="https://github.com/pldubouilh.png" width="60px" alt="User avatar: Pierre Dubouilh"&gt;&lt;/a&gt;
&lt;a href="https://github.com/trantor"&gt;&lt;img src="https://github.com/trantor.png" width="60px" alt="User avatar: Fulvio Scapin"&gt;&lt;/a&gt;
&lt;a href="https://github.com/rcorre"&gt;&lt;img src="https://github.com/rcorre.png" width="60px" alt="User avatar: Ryan Roden-Corrent"&gt;&lt;/a&gt;
&lt;a href="https://github.com/blissdev"&gt;&lt;img src="https://github.com/blissdev.png" width="60px" alt="User avatar: Jordan Arentsen"&gt;&lt;/a&gt;
&lt;a href="https://github.com/aexvir"&gt;&lt;img src="https://github.com/aexvir.png" width="60px" alt="User avatar: Alex Viscreanu"&gt;&lt;/a&gt;
&lt;a href="https://github.com/dbalatero"&gt;&lt;img src="https://github.com/dbalatero.png" width="60px" alt="User avatar: David Balatero"&gt;&lt;/a&gt;
&lt;a href="https://github.com/moobar"&gt;&lt;img src="https://github.com/moobar.png" width="60px" alt="User avatar: "&gt;&lt;/a&gt;
&lt;a href="https://github.com/benelan"&gt;&lt;img src="https://github.com/benelan.png" width="60px" alt="User avatar: Ben Elan"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pawelduda"&gt;&lt;img src="https://github.com/pawelduda.png" width="60px" alt="User avatar: Pawe≈Ç Duda"&gt;&lt;/a&gt;
&lt;a href="https://github.com/pyrho"&gt;&lt;img src="https://github.com/pyrho.png" width="60px" alt="User avatar: Damien Rajon"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ArtBIT"&gt;&lt;img src="https://github.com/ArtBIT.png" width="60px" alt="User avatar: ArtBIT"&gt;&lt;/a&gt;
&lt;a href="https://github.com/da-moon"&gt;&lt;img src="https://github.com/da-moon.png" width="60px" alt="User avatar: "&gt;&lt;/a&gt;
&lt;a href="https://github.com/hovissimo"&gt;&lt;img src="https://github.com/hovissimo.png" width="60px" alt="User avatar: Hovis"&gt;&lt;/a&gt;
&lt;a href="https://github.com/dariusjonda"&gt;&lt;img src="https://github.com/dariusjonda.png" width="60px" alt="User avatar: Darius Jonda"&gt;&lt;/a&gt;
&lt;a href="https://github.com/cristiand391"&gt;&lt;img src="https://github.com/cristiand391.png" width="60px" alt="User avatar: Cristian Dominguez"&gt;&lt;/a&gt;
&lt;a href="https://github.com/eliangcs"&gt;&lt;img src="https://github.com/eliangcs.png" width="60px" alt="User avatar: Chang-Hung Liang"&gt;&lt;/a&gt;
&lt;a href="https://github.com/asphaltbuffet"&gt;&lt;img src="https://github.com/asphaltbuffet.png" width="60px" alt="User avatar: Ben Lechlitner"&gt;&lt;/a&gt;
&lt;a href="https://github.com/looshch"&gt;&lt;img src="https://github.com/looshch.png" width="60px" alt="User avatar: george looshch"&gt;&lt;/a&gt;
&lt;a href="https://github.com/kg8m"&gt;&lt;img src="https://github.com/kg8m.png" width="60px" alt="User avatar: Takumi KAGIYAMA"&gt;&lt;/a&gt;
&lt;a href="https://github.com/polm"&gt;&lt;img src="https://github.com/polm.png" width="60px" alt="User avatar: Paul OLeary McCann"&gt;&lt;/a&gt;
&lt;a href="https://github.com/rbeeger"&gt;&lt;img src="https://github.com/rbeeger.png" width="60px" alt="User avatar: Robert Beeger"&gt;&lt;/a&gt;
&lt;a href="https://github.com/scalisi"&gt;&lt;img src="https://github.com/scalisi.png" width="60px" alt="User avatar: Josh Scalisi"&gt;&lt;/a&gt;
&lt;a href="https://github.com/alecbcs"&gt;&lt;img src="https://github.com/alecbcs.png" width="60px" alt="User avatar: Alec Scott"&gt;&lt;/a&gt;
&lt;a href="https://github.com/artursapek"&gt;&lt;img src="https://github.com/artursapek.png" width="60px" alt="User avatar: Artur Sapek"&gt;&lt;/a&gt;
&lt;a href="https://github.com/ramnes"&gt;&lt;img src="https://github.com/ramnes.png" width="60px" alt="User avatar: Guillaume Gelin"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jyc"&gt;&lt;img src="https://github.com/jyc.png" width="60px" alt="User avatar: "&gt;&lt;/a&gt;
&lt;a href="https://github.com/roblevy"&gt;&lt;img src="https://github.com/roblevy.png" width="60px" alt="User avatar: Rob Levy"&gt;&lt;/a&gt;
&lt;a href="https://github.com/glozow"&gt;&lt;img src="https://github.com/glozow.png" width="60px" alt="User avatar: Gloria Zhao"&gt;&lt;/a&gt;
&lt;a href="https://github.com/toupeira"&gt;&lt;img src="https://github.com/toupeira.png" width="60px" alt="User avatar: Markus Koller"&gt;&lt;/a&gt;
&lt;a href="https://github.com/rkpatel33"&gt;&lt;img src="https://github.com/rkpatel33.png" width="60px" alt="User avatar: "&gt;&lt;/a&gt;
&lt;a href="https://github.com/jamesob"&gt;&lt;img src="https://github.com/jamesob.png" width="60px" alt="User avatar: jamesob"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jlebray"&gt;&lt;img src="https://github.com/jlebray.png" width="60px" alt="User avatar: Johan Le Bray"&gt;&lt;/a&gt;
&lt;a href="https://github.com/panosl1"&gt;&lt;img src="https://github.com/panosl1.png" width="60px" alt="User avatar: Panos Lampropoulos"&gt;&lt;/a&gt;
&lt;a href="https://github.com/bespinian"&gt;&lt;img src="https://github.com/bespinian.png" width="60px" alt="User avatar: bespinian"&gt;&lt;/a&gt;
&lt;a href="https://github.com/scosu"&gt;&lt;img src="https://github.com/scosu.png" width="60px" alt="User avatar: Markus Schneider-Pargmann"&gt;&lt;/a&gt;
&lt;a href="https://github.com/smithbm2316"&gt;&lt;img src="https://github.com/smithbm2316.png" width="60px" alt="User avatar: Ben Smith"&gt;&lt;/a&gt;
&lt;a href="https://github.com/charlieegan3"&gt;&lt;img src="https://github.com/charlieegan3.png" width="60px" alt="User avatar: Charlie Egan"&gt;&lt;/a&gt;
&lt;a href="https://github.com/thobbs"&gt;&lt;img src="https://github.com/thobbs.png" width="60px" alt="User avatar: Tyler Hobbs"&gt;&lt;/a&gt;
&lt;a href="https://github.com/neilparikh"&gt;&lt;img src="https://github.com/neilparikh.png" width="60px" alt="User avatar: Neil Parikh"&gt;&lt;/a&gt;
&lt;a href="https://github.com/shkm"&gt;&lt;img src="https://github.com/shkm.png" width="60px" alt="User avatar: Jamie Schembri"&gt;&lt;/a&gt;
&lt;a href="https://github.com/BasedScience"&gt;&lt;img src="https://github.com/BasedScience.png" width="60px" alt="User avatar: dockien"&gt;&lt;/a&gt;
&lt;a href="https://github.com/RussellGilmore"&gt;&lt;img src="https://github.com/RussellGilmore.png" width="60px" alt="User avatar: Russell Gilmore"&gt;&lt;/a&gt;
&lt;a href="https://github.com/meribold"&gt;&lt;img src="https://github.com/meribold.png" width="60px" alt="User avatar: Lukas Waymann"&gt;&lt;/a&gt;
&lt;a href="https://github.com/terminaldweller"&gt;&lt;img src="https://github.com/terminaldweller.png" width="60px" alt="User avatar: Farzad Sadeghi"&gt;&lt;/a&gt;
&lt;a href="https://github.com/jaydee-coder"&gt;&lt;img src="https://github.com/jaydee-coder.png" width="60px" alt="User avatar: "&gt;&lt;/a&gt;
&lt;a href="https://github.com/brpaz"&gt;&lt;img src="https://github.com/brpaz.png" width="60px" alt="User avatar: Bruno Paz"&gt;&lt;/a&gt;
&lt;a href="https://github.com/timobenn"&gt;&lt;img src="https://github.com/timobenn.png" width="60px" alt="User avatar: Timothy Bennett"&gt;&lt;/a&gt;
&lt;a href="https://github.com/danhorner"&gt;&lt;img src="https://github.com/danhorner.png" width="60px" alt="User avatar: Daniel Horner"&gt;&lt;/a&gt;
&lt;a href="https://github.com/syeo66"&gt;&lt;img src="https://github.com/syeo66.png" width="60px" alt="User avatar: Red Ochsenbein"&gt;&lt;/a&gt;
&lt;a href="https://github.com/nekhaevskiy"&gt;&lt;img src="https://github.com/nekhaevskiy.png" width="60px" alt="User avatar: Yury"&gt;&lt;/a&gt;
&lt;a href="https://github.com/lajarre"&gt;&lt;img src="https://github.com/lajarre.png" width="60px" alt="User avatar: "&gt;&lt;/a&gt;
&lt;a href="https://github.com/vidhatre"&gt;&lt;img src="https://github.com/vidhatre.png" width="60px" alt="User avatar: Vidhatre Gathey"&gt;&lt;/a&gt;
&lt;a href="https://github.com/NightsPaladin"&gt;&lt;img src="https://github.com/NightsPaladin.png" width="60px" alt="User avatar: Chris G."&gt;&lt;/a&gt;
&lt;a href="https://github.com/lzell"&gt;&lt;img src="https://github.com/lzell.png" width="60px" alt="User avatar: Lou Zell"&gt;&lt;/a&gt;
&lt;a href="https://github.com/3ximus"&gt;&lt;img src="https://github.com/3ximus.png" width="60px" alt="User avatar: Fabio"&gt;&lt;/a&gt;
&lt;a href="https://github.com/justinlubin"&gt;&lt;img src="https://github.com/justinlubin.png" width="60px" alt="User avatar: Justin Lubin"&gt;&lt;/a&gt;
&lt;a href="https://github.com/gpoma"&gt;&lt;img src="https://github.com/gpoma.png" width="60px" alt="User avatar: Gabriel"&gt;&lt;/a&gt;
&lt;a href="https://github.com/mieubrisse"&gt;&lt;img src="https://github.com/mieubrisse.png" width="60px" alt="User avatar: Kevin Today"&gt;&lt;/a&gt;
&lt;!-- sponsors --&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://jb.gg/OpenSourceSupport"&gt;&lt;img src="https://resources.jetbrains.com/storage/products/company/brand/logos/jetbrains.svg?sanitize=true" alt="JetBrains logo."&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;JetBrains supports this project with an Open Source Development License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>moby/moby</title>
      <link>https://github.com/moby/moby</link>
      <description>&lt;p&gt;The Moby Project - a collaborative project for the container ecosystem to assemble container-based systems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Moby Project&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/docker/docker"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/docker/docker" alt="PkgGoDev"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/docker/docker"&gt;&lt;img src="https://goreportcard.com/badge/github.com/docker/docker" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/moby/moby"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/moby/moby/badge" alt="OpenSSF Scorecard"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/moby/moby/master/docs/static_files/moby-project-logo.png" alt="Moby Project logo" title="The Moby Project"&gt;&lt;/p&gt; 
&lt;p&gt;Moby is an open-source project created by Docker to enable and accelerate software containerization.&lt;/p&gt; 
&lt;p&gt;It provides a "Lego set" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas. Components include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;p&gt;Moby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience. It is open to the community to help set its direction.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modular: the project includes lots of components that have well-defined functions and APIs that work together.&lt;/li&gt; 
 &lt;li&gt;Batteries included but swappable: Moby includes enough components to build fully featured container systems, but its modular architecture ensures that most of the components can be swapped by different implementations.&lt;/li&gt; 
 &lt;li&gt;Usable security: Moby provides secure defaults without compromising usability.&lt;/li&gt; 
 &lt;li&gt;Developer focused: The APIs are intended to be functional and useful to build powerful tools. They are not necessarily intended as end user tools but as components aimed at developers. Documentation and UX is aimed at developers not end users.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Audience&lt;/h2&gt; 
&lt;p&gt;The Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers. It is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.&lt;/p&gt; 
&lt;h2&gt;Relationship with Docker&lt;/h2&gt; 
&lt;p&gt;The components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project. New projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product. However, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.&lt;/p&gt; 
&lt;p&gt;The Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful. The releases are supported by the maintainers, community and users, on a best efforts basis only. For customers who want enterprise or commercial support, &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker Desktop&lt;/a&gt; and &lt;a href="https://www.mirantis.com/software/mirantis-container-runtime/"&gt;Mirantis Container Runtime&lt;/a&gt; are the appropriate products for these use cases.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;Legal&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Brought to you courtesy of our legal counsel. For more context, please see the &lt;a href="https://github.com/moby/moby/raw/master/NOTICE"&gt;NOTICE&lt;/a&gt; document in this repo.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Use and transfer of Moby may be subject to certain restrictions by the United States and other governments.&lt;/p&gt; 
&lt;p&gt;It is your responsibility to ensure that your use and/or transfer does not violate applicable laws.&lt;/p&gt; 
&lt;p&gt;For more information, please see &lt;a href="https://www.bis.doc.gov"&gt;https://www.bis.doc.gov&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Licensing&lt;/h1&gt; 
&lt;p&gt;Moby is licensed under the Apache License, Version 2.0. See &lt;a href="https://github.com/moby/moby/raw/master/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nats-io/nats-server</title>
      <link>https://github.com/nats-io/nats-server</link>
      <description>&lt;p&gt;High-Performance server for NATS.io, the cloud and edge native messaging system.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/nats-io/nats-server/main/logos/nats-horizontal-color.png" width="300" alt="NATS Logo"&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://nats.io"&gt;NATS&lt;/a&gt; is a simple, secure and performant communications system for digital systems, services and devices. NATS is part of the Cloud Native Computing Foundation (&lt;a href="https://cncf.io"&gt;CNCF&lt;/a&gt;). NATS has over &lt;a href="https://nats.io/download/"&gt;40 client language implementations&lt;/a&gt;, and its server can run on-premise, in the cloud, at the edge, and even on a Raspberry Pi. NATS can secure and simplify design and operation of modern distributed systems.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache2-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml"&gt;&lt;img src="https://github.com/nats-io/nats-server/actions/workflows/tests.yaml/badge.svg?branch=main" alt="Build"&gt;&lt;/a&gt; &lt;a href="https://github.com/nats-io/nats-server/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/nats-io/nats-server" alt="Release"&gt;&lt;/a&gt; &lt;a href="https://slack.nats.io"&gt;&lt;img src="https://img.shields.io/badge/chat-on%20slack-green" alt="Slack"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/nats-io/nats-server?branch=main"&gt;&lt;img src="https://coveralls.io/repos/github/nats-io/nats-server/badge.svg?branch=main" alt="Coverage"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/_/nats"&gt;&lt;img src="https://img.shields.io/docker/pulls/_/nats.svg?sanitize=true" alt="Docker Downloads"&gt;&lt;/a&gt; &lt;a href="https://somsubhra.github.io/github-release-stats/?username=nats-io&amp;amp;repository=nats-server"&gt;&lt;img src="https://img.shields.io/github/downloads/nats-io/nats-server/total.svg?logo=github" alt="GitHub Downloads"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/1895"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/1895/badge" alt="CII Best Practices"&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/nats/nats"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/nats" alt="Artifact Hub"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nats.io"&gt;Official Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io"&gt;Official Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.nats.io/reference/faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://rethink.synadia.com/episodes/1/"&gt;a video overview&lt;/a&gt; of NATS.&lt;/li&gt; 
 &lt;li&gt;Watch &lt;a href="https://www.youtube.com/watch?v=sm63oAVPqAM"&gt;this video from SCALE 13x&lt;/a&gt; to learn more about its origin story and design philosophy.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/nats_io"&gt;Twitter&lt;/a&gt;: Follow us on Twitter!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/forum/#!forum/natsio"&gt;Google Groups&lt;/a&gt;: Where you can ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://natsio.slack.com"&gt;Slack&lt;/a&gt;: Click &lt;a href="https://slack.nats.io"&gt;here&lt;/a&gt; to join. You can ask questions to our maintainers and to the rich and active community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are interested in contributing to NATS, read about our...&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nats-io/nats-server/main/CONTRIBUTING.md"&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nats-io"&gt;Report issues or propose Pull Requests&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The NATS product roadmap can be found &lt;a href="https://nats.io/about/#roadmap"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;Who uses NATS? See our &lt;a href="https://nats.io/#who-uses-nats"&gt;list of users&lt;/a&gt; on &lt;a href="https://nats.io"&gt;https://nats.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;h3&gt;Security Audit&lt;/h3&gt; 
&lt;p&gt;A third party security audit was performed by Trail of Bits following engagement by the Open Source Technology Improvement Fund (OSTIF). You can see the &lt;a href="https://github.com/trailofbits/publications/raw/master/reviews/2025-04-ostif-nats-securityreview.pdf"&gt;full report from April 2025 here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Reporting Security Vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you've found a vulnerability or a potential vulnerability in the NATS server, please let us know at &lt;a href="mailto:security@nats.io"&gt;nats-security&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Unless otherwise noted, the NATS source files are distributed under the Apache Version 2.0 license found in the LICENSE file.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GoogleCloudPlatform/kubectl-ai</title>
      <link>https://github.com/GoogleCloudPlatform/kubectl-ai</link>
      <description>&lt;p&gt;AI powered Kubernetes Assistant&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kubectl-ai&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/GoogleCloudPlatform/kubectl-ai"&gt;&lt;img src="https://goreportcard.com/badge/github.com/GoogleCloudPlatform/kubectl-ai" alt="Go Report Card"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/GoogleCloudPlatform/kubectl-ai" alt="GitHub License"&gt; &lt;a href="https://github.com/GoogleCloudPlatform/kubectl-ai/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/GoogleCloudPlatform/kubectl-ai.svg?sanitize=true" alt="GitHub stars"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; acts as an intelligent interface, translating user intent into precise Kubernetes operations, making Kubernetes management more accessible and efficient.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/.github/kubectl-ai.gif" alt="kubectl-ai demo GIF using: kubectl-ai &amp;quot;how's nginx app doing in my cluster&amp;quot;"&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;First, ensure that kubectl is installed and configured.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;Quick Install (Linux &amp;amp; MacOS only)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sSL https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other Installation Methods&lt;/summary&gt; 
 &lt;h4&gt;Manual Installation (Linux, MacOS and Windows)&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the latest release from the &lt;a href="https://github.com/GoogleCloudPlatform/kubectl-ai/releases/latest"&gt;releases page&lt;/a&gt; for your target machine.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Untar the release, make the binary executable and move it to a directory in your $PATH (as shown below).&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;tar -zxvf kubectl-ai_Darwin_arm64.tar.gz
chmod a+x kubectl-ai
sudo mv kubectl-ai /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Install with Krew (Linux/macOS/Windows)&lt;/h4&gt; 
 &lt;p&gt;First of all, you need to have krew insatlled, refer to &lt;a href="https://krew.sigs.k8s.io/docs/user-guide/setup/install/"&gt;krew document&lt;/a&gt; for more details Then you can install with krew&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;kubectl krew install ai
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Now you can invoke &lt;code&gt;kubectl-ai&lt;/code&gt; as a kubectl plugin like this: &lt;code&gt;kubectl ai&lt;/code&gt;.&lt;/p&gt; 
 &lt;h4&gt;Install on NixOS&lt;/h4&gt; 
 &lt;p&gt;There are multiple ways to install &lt;code&gt;kubectl-ai&lt;/code&gt; on NixOS. For a permantent installation add the following to your NixOS-Configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;  environment.systemPackages = with pkgs; [
    kubectl-ai
  ];
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For a temporary installation, you can use the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;nix-shell -p kubectl-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; supports AI models from &lt;code&gt;gemini&lt;/code&gt;, &lt;code&gt;vertexai&lt;/code&gt;, &lt;code&gt;azopenai&lt;/code&gt;, &lt;code&gt;openai&lt;/code&gt;, &lt;code&gt;grok&lt;/code&gt; and local LLM providers such as &lt;code&gt;ollama&lt;/code&gt; and &lt;code&gt;llama.cpp&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Using Gemini (Default)&lt;/h4&gt; 
&lt;p&gt;Set your Gemini API key as an environment variable. If you don't have a key, get one from &lt;a href="https://aistudio.google.com"&gt;Google AI Studio&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export GEMINI_API_KEY=your_api_key_here
kubectl-ai

# Use different gemini model
kubectl-ai --model gemini-2.5-pro-exp-03-25

# Use 2.5 flash (faster) model
kubectl-ai --quiet --model gemini-2.5-flash-preview-04-17 "check logs for nginx app in hello namespace"
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Use other AI models&lt;/summary&gt; 
 &lt;h4&gt;Using AI models running locally (ollama or llama.cpp)&lt;/h4&gt; 
 &lt;p&gt;You can use &lt;code&gt;kubectl-ai&lt;/code&gt; with AI models running locally. &lt;code&gt;kubectl-ai&lt;/code&gt; supports &lt;a href="https://ollama.com/"&gt;ollama&lt;/a&gt; and &lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt; to use the AI models running locally.&lt;/p&gt; 
 &lt;p&gt;Additionally, the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/modelserving/"&gt;&lt;code&gt;modelserving&lt;/code&gt;&lt;/a&gt; directory provides tools and instructions for deploying your own &lt;code&gt;llama.cpp&lt;/code&gt;-based LLM serving endpoints locally or on a Kubernetes cluster. This allows you to host models like Gemma directly in your environment.&lt;/p&gt; 
 &lt;p&gt;An example of using Google's &lt;code&gt;gemma3&lt;/code&gt; model with &lt;code&gt;ollama&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# assuming ollama is already running and you have pulled one of the gemma models
# ollama pull gemma3:12b-it-qat

# if your ollama server is at remote, use OLLAMA_HOST variable to specify the host
# export OLLAMA_HOST=http://192.168.1.3:11434/

# enable-tool-use-shim because models require special prompting to enable tool calling
kubectl-ai --llm-provider ollama --model gemma3:12b-it-qat --enable-tool-use-shim

# you can use `models` command to discover the locally available models
&amp;gt;&amp;gt; models
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using Grok&lt;/h4&gt; 
 &lt;p&gt;You can use X.AI's Grok model by setting your X.AI API key:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export GROK_API_KEY=your_xai_api_key_here
kubectl-ai --llm-provider=grok --model=grok-3-beta
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using Azure OpenAI&lt;/h4&gt; 
 &lt;p&gt;You can also use Azure OpenAI deployment by setting your OpenAI API key and specifying the provider:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here
export AZURE_OPENAI_ENDPOINT=https://your_azure_openai_endpoint_here
kubectl-ai --llm-provider=azopenai --model=your_azure_openai_deployment_name_here
# or
az login
kubectl-ai --llm-provider=openai://your_azure_openai_endpoint_here --model=your_azure_openai_deployment_name_here
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using OpenAI&lt;/h4&gt; 
 &lt;p&gt;You can also use OpenAI models by setting your OpenAI API key and specifying the provider:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY=your_openai_api_key_here
kubectl-ai --llm-provider=openai --model=gpt-4.1
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using OpenAI Compatible API&lt;/h4&gt; 
 &lt;p&gt;For example, you can use aliyun qwen-xxx models as follows&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY=your_openai_api_key_here
export OPENAI_ENDPOINT=https://dashscope.aliyuncs.com/compatible-mode/v1
kubectl-ai --llm-provider=openai --model=qwen-plus
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Run interactively:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The interactive mode allows you to have a chat with &lt;code&gt;kubectl-ai&lt;/code&gt;, asking multiple questions in sequence while maintaining context from previous interactions. Simply type your queries and press Enter to receive responses. To exit the interactive shell, type &lt;code&gt;exit&lt;/code&gt; or press Ctrl+C.&lt;/p&gt; 
&lt;p&gt;Or, run with a task as input:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai --quiet "fetch logs for nginx app in hello namespace"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Combine it with other unix commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai &amp;lt; query.txt
# OR
echo "list pods in the default namespace" | kubectl-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can even combine a positional argument with stdin input. The positional argument will be used as a prefix to the stdin content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cat error.log | kubectl-ai "explain the error"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can also configure &lt;code&gt;kubectl-ai&lt;/code&gt; using a YAML configuration file at &lt;code&gt;~/.config/kubectl-ai/config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;mkdir -p ~/.config/kubectl-ai/
cat &amp;lt;&amp;lt;EOF &amp;gt; ~/.config/kubectl-ai/config.yaml
model: gemini-2.5-flash-preview-04-17
llmProvider: gemini
toolConfigPaths: ~/.config/kubectl-ai/tools.yaml
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Verify your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai --quiet model
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;More configuration Options&lt;/summary&gt; 
 &lt;p&gt;Here's a complete configuration file with all available options and their default values:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;# LLM provider configuration
llmProvider: "gemini"               # Default LLM provider
model: "gemini-2.5-pro-preview-06-05" # Default model
skipVerifySSL: false              # Skip SSL verification for LLM API calls

# Tool and permission settings
toolConfigPaths: ["~/.config/kubectl-ai/tools.yaml"]  # Custom tools configuration paths
skipPermissions: false             # Skip confirmation for resource-modifying commands
enableToolUseShim: false        # Enable tool use shim for certain models

# MCP configuration
mcpServer: false                  # Run in MCP server mode
mcpClient: false                  # Enable MCP client mode
externalTools: false             # Discover external MCP tools (requires mcp-server)

# Runtime settings
maxIterations: 20                 # Maximum iterations for the agent
quiet: false                       # Run in non-interactive mode
removeWorkdir: false             # Remove temporary working directory after execution

# Kubernetes configuration
kubeconfig: "~/.kube/config"      # Path to kubeconfig file

# UI configuration
userInterface: "terminal"         # UI mode: "terminal" or "html"
uiListenAddress: "localhost:8888" # Address for HTML UI server

# Prompt configuration
promptTemplateFilePath: ""      # Custom prompt template file
extraPromptPaths: []            # Additional prompt template paths

# Debug and trace settings
tracePath: "/tmp/kubectl-ai-trace.txt" # Path to trace file
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;All these settings can be configured through either:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Command line flags (e.g., &lt;code&gt;--model=gemini-2.5-pro&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Configuration file (&lt;code&gt;~/.config/kubectl-ai/config.yaml&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Environment variables (e.g., &lt;code&gt;GEMINI_API_KEY&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Command line flags take precedence over configuration file settings.&lt;/p&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; leverages LLMs to suggest and execute Kubernetes operations using a set of powerful tools. It comes with built-in tools like &lt;code&gt;kubectl&lt;/code&gt; and &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also extend its capabilities by defining your own custom tools. By default, &lt;code&gt;kubectl-ai&lt;/code&gt; looks for your tool configurations in &lt;code&gt;~/.config/kubectl-ai/tools.yaml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To specify tools configuration files or directories containing tools configuration files, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai --custom-tools-config=YOUR_CONFIG
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can include multiple tools in a single configuration file, or a directory with multiple configuration files, each dedicated to a single or multiple tools. Define your custom tools using the following schema:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: tool_name
  description: "A clear description that helps the LLM understand when to use this tool."
  command: "your_command" # For example: 'gcloud' or 'gcloud container clusters'
  command_desc: "Detailed information for the LLM, including command syntax and usage examples."
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A custom tool definition for &lt;code&gt;helm&lt;/code&gt; could look like the following example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: helm
  description: "Helm is the Kubernetes package manager and deployment tool. Use it to define, install, upgrade, and roll back applications packaged as Helm charts in a Kubernetes cluster."
  command: "helm"
  command_desc: |
    Helm command-line interface, with the following core subcommands and usage patterns:    
    - helm install &amp;lt;release-name&amp;gt; &amp;lt;chart&amp;gt; [flags]  
      Install a chart into the cluster.      
    - helm upgrade &amp;lt;release-name&amp;gt; &amp;lt;chart&amp;gt; [flags]  
      Upgrade an existing release to a new chart version or configuration.      
    - helm list [flags]  
      List all releases in one or all namespaces.      
    - helm uninstall &amp;lt;release-name&amp;gt; [flags]  
      Uninstall a release and clean up associated resources.  
    Use `helm --help` or `helm &amp;lt;subcommand&amp;gt; --help` to see full syntax, available flags, and examples for each command.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker Quick Start&lt;/h2&gt; 
&lt;p&gt;This project provides a Docker image that gives you a standalone environment for running kubectl-ai, including against a GKE cluster.&lt;/p&gt; 
&lt;h3&gt;Running the container against GKE&lt;/h3&gt; 
&lt;h4&gt;Step 1: Build the Image&lt;/h4&gt; 
&lt;p&gt;Clone the repository and build the image with the following command&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/GoogleCloudPlatform/kubectl-ai.git
cd kubectl-ai
docker build -t kubectl-ai:latest -f images/kubectl-ai/Dockerfile .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Step 2: Connect to Your GKE Cluster&lt;/h4&gt; 
&lt;p&gt;Set up application default credentials and connect to your GKE cluster.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gcloud auth application-default login # If in a gcloud shell this is not necessary
gcloud container clusters get-credentials &amp;lt;cluster-name&amp;gt; --zone &amp;lt;zone&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Step 3: Run the kubectl-ai container&lt;/h4&gt; 
&lt;p&gt;Below is a sample command that can be used to launch the container with a locally hosted web-ui. Be sure to replace the placeholder values with your specific Google Cloud project ID and location. Note you do not need to mount the gcloud config directory if you're on a cloudshell machine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -p 8080:8080 -v ~/.kube:/root/.kube -v ~/.config/gcloud:/root/.config/gcloud -e GOOGLE_CLOUD_LOCATION=us-central1 -e GOOGLE_CLOUD_PROJECT=my-gcp-project kubectl-ai:latest --llm-provider vertexai --ui-listen-address 0.0.0.0:8080 --ui-type web
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more info about running from the container image see &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/CONTAINER.md"&gt;CONTAINER.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;MCP Client Mode&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; MCP Client Mode is available in &lt;code&gt;kubectl-ai&lt;/code&gt; version v0.0.12 and onwards.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; can connect to external &lt;a href="https://modelcontextprotocol.io/examples"&gt;MCP&lt;/a&gt; Servers to access additional tools in addition to built-in tools.&lt;/p&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;Enable MCP client mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl-ai --mcp-client
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Create or edit &lt;code&gt;~/.config/kubectl-ai/mcp.yaml&lt;/code&gt; to customize MCP servers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;servers:
  # Local MCP server (stdio-based)
  # sequential-thinking: Advanced reasoning and step-by-step analysis
  - name: sequential-thinking
    command: npx
    args:
      - -y
      - "@modelcontextprotocol/server-sequential-thinking"
  
  # Remote MCP server (HTTP-based)
  - name: cloudflare-documentation
    url: https://docs.mcp.cloudflare.com/mcp
    
  # Optional: Remote MCP server with authentication
  - name: custom-api
    url: https://api.example.com/mcp
    auth:
      type: "bearer"
      token: "${MCP_TOKEN}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The system automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Converts parameter names (snake_case ‚Üí camelCase)&lt;/li&gt; 
 &lt;li&gt;Handles type conversion (strings ‚Üí numbers/booleans when appropriate)&lt;/li&gt; 
 &lt;li&gt;Provides fallback behavior for unknown servers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No additional setup required - just use the &lt;code&gt;--mcp-client&lt;/code&gt; flag and the AI will have access to all configured MCP tools.&lt;/p&gt; 
&lt;p&gt;üìñ &lt;strong&gt;For detailed configuration options, troubleshooting, and advanced features for MCP Client mode, see the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/pkg/mcp/README.md"&gt;MCP Client Documentation&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;üìñ &lt;strong&gt;For multi-server orchestration and security automation examples, see the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/docs/mcp-client.md"&gt;MCP Client Integration Guide&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Extras&lt;/h2&gt; 
&lt;p&gt;You can use the following special keywords for specific actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;model&lt;/code&gt;: Display the currently selected model.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;models&lt;/code&gt;: List all available models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tools&lt;/code&gt;: List all available tools.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: Display the &lt;code&gt;kubectl-ai&lt;/code&gt; version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reset&lt;/code&gt;: Clear the conversational context.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;clear&lt;/code&gt;: Clear the terminal screen.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;exit&lt;/code&gt; or &lt;code&gt;quit&lt;/code&gt;: Terminate the interactive shell (Ctrl+C also works).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Invoking as kubectl plugin&lt;/h3&gt; 
&lt;p&gt;You can also run &lt;code&gt;kubectl ai&lt;/code&gt;. &lt;code&gt;kubectl&lt;/code&gt; finds any executable file in your &lt;code&gt;PATH&lt;/code&gt; whose name begins with &lt;code&gt;kubectl-&lt;/code&gt; as a &lt;a href="https://kubernetes.io/docs/tasks/extend-kubectl/kubectl-plugins/"&gt;plugin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;MCP Server Mode&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; can act as an MCP server that exposes kubectl tools to other MCP clients (like Claude, Cursor, or VS Code). The server can run in two modes:&lt;/p&gt; 
&lt;h3&gt;Basic MCP Server (Built-in tools only)&lt;/h3&gt; 
&lt;p&gt;Expose only kubectl-ai's native Kubernetes tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl-ai --mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Enhanced MCP Server (With external tool discovery)&lt;/h3&gt; 
&lt;p&gt;Additionally discover and expose tools from other MCP servers as a unified interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl-ai --mcp-server --external-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This creates a powerful &lt;strong&gt;tool aggregation hub&lt;/strong&gt; where kubectl-ai acts as both:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;: Exposing kubectl tools to clients&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;: Consuming tools from other MCP servers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The enhanced mode provides AI clients with access to both Kubernetes operations and general-purpose tools (filesystem, web search, databases, etc.) through a single MCP endpoint.&lt;/p&gt; 
&lt;p&gt;üìñ &lt;strong&gt;For detailed configuration, examples, and troubleshooting, see the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/docs/mcp-server.md"&gt;MCP Server Documentation&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;k8s-bench&lt;/h2&gt; 
&lt;p&gt;kubectl-ai project includes &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/k8s-bench/README.md"&gt;k8s-bench&lt;/a&gt; - a benchmark to evaluate performance of different LLM models on kubernetes related tasks. Here is a summary from our last run:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Success&lt;/th&gt; 
   &lt;th&gt;Fail&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gemini-2.5-flash-preview-04-17&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gemini-2.5-pro-preview-03-25&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gemma-3-27b-it&lt;/td&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;28&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/k8s-bench.md"&gt;full report&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Start Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to &lt;code&gt;kubectl-ai&lt;/code&gt; from the community. Take a look at our &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/contributing.md"&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;em&gt;Note: This is not an officially supported Google product. This project is not eligible for the &lt;a href="https://bughunters.google.com/open-source-security"&gt;Google Open Source Software Vulnerability Rewards Program&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gruntwork-io/terragrunt</title>
      <link>https://github.com/gruntwork-io/terragrunt</link>
      <description>&lt;p&gt;Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in OpenTofu/Terraform to scale.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terragrunt&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://gruntwork.io/?ref=repo_terragrunt"&gt;&lt;img src="https://img.shields.io/badge/maintained%20by-gruntwork.io-%235849a6.svg?sanitize=true" alt="Maintained by Gruntwork.io"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gruntwork-io/terragrunt"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gruntwork-io/terragrunt" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/gruntwork-io/terragrunt"&gt;&lt;img src="https://godoc.org/github.com/gruntwork-io/terragrunt?status.svg?sanitize=true" alt="GoDoc"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/tofu-%3E%3D1.6.0-blue.svg?sanitize=true" alt="OpenTofu Version"&gt; &lt;img src="https://img.shields.io/badge/tf-%3E%3D0.12.0-blue.svg?sanitize=true" alt="Terraform Version"&gt;&lt;/p&gt; 
&lt;p&gt;Terragrunt is a flexible orchestration tool that allows Infrastructure as Code written in &lt;a href="https://opentofu.org"&gt;OpenTofu&lt;/a&gt;/&lt;a href="https://www.terraform.io"&gt;Terraform&lt;/a&gt; to scale.&lt;/p&gt; 
&lt;p&gt;Please see the following for more info, including install instructions and complete documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io"&gt;Terragrunt Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io/docs/getting-started/quick-start/"&gt;Getting started with Terragrunt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io/docs"&gt;Terragrunt Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://terragrunt.gruntwork.io/docs/community/contributing"&gt;Contributing to Terragrunt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gruntwork.io/support/"&gt;Commercial Support&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Join the Discord!&lt;/h2&gt; 
&lt;p&gt;Join &lt;a href="https://discord.gg/YENaT9h8jh"&gt;our community&lt;/a&gt; for discussions, support, and contributions:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/YENaT9h8jh"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/https://discord.gg/YENaT9h8jh" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is released under the MIT License. See &lt;a href="https://raw.githubusercontent.com/gruntwork-io/terragrunt/main/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker/cli</title>
      <link>https://github.com/docker/cli</link>
      <description>&lt;p&gt;The Docker CLI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Docker CLI&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/docker/cli"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/docker/cli" alt="PkgGoDev"&gt;&lt;/a&gt; &lt;a href="https://github.com/docker/cli/actions?query=workflow%3Abuild"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/docker/cli/build.yml?branch=master&amp;amp;label=build&amp;amp;logo=github" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/docker/cli/actions?query=workflow%3Atest"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/docker/cli/test.yml?branch=master&amp;amp;label=test&amp;amp;logo=github" alt="Test Status"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/docker/cli"&gt;&lt;img src="https://goreportcard.com/badge/github.com/docker/cli" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/docker/cli"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/docker/cli/badge" alt="OpenSSF Scorecard"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/docker/cli"&gt;&lt;img src="https://img.shields.io/codecov/c/github/docker/cli?logo=codecov" alt="Codecov"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;This repository is the home of the Docker CLI.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;docker/cli&lt;/code&gt; is developed using Docker.&lt;/p&gt; 
&lt;p&gt;Build CLI from source:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build binaries for all supported platforms:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake cross
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build for a specific platform:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake --set binary.platform=linux/arm64 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build dynamic binary for glibc or musl:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;USE_GLIBC=1 docker buildx bake dynbinary 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run all linting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake lint shellcheck
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run test:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;docker buildx bake test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;List all the available targets:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;In-container development environment&lt;/h3&gt; 
&lt;p&gt;Start an interactive development environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make -f docker.Makefile shell
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Brought to you courtesy of our legal counsel. For more context, see the &lt;a href="https://github.com/docker/cli/raw/master/NOTICE"&gt;NOTICE&lt;/a&gt; document in this repo.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Use and transfer of Docker may be subject to certain restrictions by the United States and other governments.&lt;/p&gt; 
&lt;p&gt;It is your responsibility to ensure that your use and/or transfer does not violate applicable laws.&lt;/p&gt; 
&lt;p&gt;For more information, see &lt;a href="https://www.bis.doc.gov"&gt;https://www.bis.doc.gov&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Licensing&lt;/h2&gt; 
&lt;p&gt;docker/cli is licensed under the Apache License, Version 2.0. See &lt;a href="https://github.com/docker/docker/raw/master/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ray-project/kuberay</title>
      <link>https://github.com/ray-project/kuberay</link>
      <description>&lt;p&gt;A toolkit to run Ray applications on Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;KubeRay&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/ray-project/kuberay/actions"&gt;&lt;img src="https://github.com/ray-project/kuberay/workflows/Go-build-and-test/badge.svg?sanitize=true" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/ray-project/kuberay/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/ray-project/kuberay" alt="Release"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/ray-project/kuberay"&gt;&lt;img src="https://goreportcard.com/badge/github.com/ray-project/kuberay" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;KubeRay is a powerful, open-source Kubernetes operator that simplifies the deployment and management of &lt;a href="https://github.com/ray-project/ray"&gt;Ray&lt;/a&gt; applications on Kubernetes. It offers several key components:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;KubeRay core&lt;/strong&gt;: This is the official, fully-maintained component of KubeRay that provides three custom resource definitions, RayCluster, RayJob, and RayService. These resources are designed to help you run a wide range of workloads with ease.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RayCluster&lt;/strong&gt;: KubeRay fully manages the lifecycle of RayCluster, including cluster creation/deletion, autoscaling, and ensuring fault tolerance.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RayJob&lt;/strong&gt;: With RayJob, KubeRay automatically creates a RayCluster and submits a job when the cluster is ready. You can also configure RayJob to automatically delete the RayCluster once the job finishes.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RayService&lt;/strong&gt;: RayService is made up of two parts: a RayCluster and a Ray Serve deployment graph. RayService offers zero-downtime upgrades for RayCluster and high availability.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;KubeRay ecosystem&lt;/strong&gt;: Some optional components.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Kubectl Plugin&lt;/strong&gt; (Beta): Starting from KubeRay v1.3.0, you can use the &lt;code&gt;kubectl ray&lt;/code&gt; plugin to simplify common workflows when deploying Ray on Kubernetes. If you aren‚Äôt familiar with Kubernetes, this plugin simplifies running Ray on Kubernetes. See &lt;a href="https://docs.ray.io/en/latest/cluster/kubernetes/user-guides/kubectl-plugin.html#kubectl-plugin"&gt;kubectl-plugin&lt;/a&gt; for more details.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;KubeRay APIServer&lt;/strong&gt; (Alpha): It provides a layer of simplified configuration for KubeRay resources. The KubeRay API server is used internally by some organizations to back user interfaces for KubeRay resource management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;KubeRay Dashboard&lt;/strong&gt; (Experimental): Starting from KubeRay v1.4.0, we have introduced a new dashboard that enables users to view and manage KubeRay resources. While it is not yet production-ready, we welcome your feedback.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;From September 2023, all user-facing KubeRay documentation will be hosted on the &lt;a href="https://docs.ray.io/en/latest/cluster/kubernetes/index.html"&gt;Ray documentation&lt;/a&gt;. The KubeRay repository only contains documentation related to the development and maintenance of KubeRay.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.ray.io/en/master/cluster/kubernetes/getting-started/raycluster-quick-start.html"&gt;RayCluster Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ray.io/en/master/cluster/kubernetes/getting-started/rayjob-quick-start.html"&gt;RayJob Quickstart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.ray.io/en/master/cluster/kubernetes/getting-started/rayservice-quick-start.html"&gt;RayService Quickstart&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;KubeRay examples are hosted on the &lt;a href="https://docs.ray.io/en/latest/cluster/kubernetes/examples.html"&gt;Ray documentation&lt;/a&gt;. Examples span a wide range of use cases, including training, LLM online inference, batch inference, and more.&lt;/p&gt; 
&lt;h2&gt;Kubernetes Ecosystem&lt;/h2&gt; 
&lt;p&gt;KubeRay integrates with the Kubernetes ecosystem, including observability tools (e.g., Prometheus, Grafana, py-spy), queuing systems (e.g., Volcano, Apache YuniKorn, Kueue), ingress controllers (e.g., Nginx), and more. See &lt;a href="https://docs.ray.io/en/latest/cluster/kubernetes/k8s-ecosystem.html"&gt;KubeRay Ecosystem&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Blog Posts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/workday-engineering/scaling-ray-to-10k-models-and-beyond-92799b4c9fc3"&gt;Scaling Ray to 10K Models and Beyond&lt;/a&gt; Workday&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://klaviyo.tech/how-klaviyo-built-a-robust-model-serving-platform-with-ray-serve-c02ec65788b3"&gt;How Klaviyo built a robust model serving platform with Ray Serve&lt;/a&gt; Klaviyo&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nianticlabs.com/news/ray"&gt;Evolving Niantic AR Mapping Infrastructures with Ray&lt;/a&gt; Niantic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.samsara.com/blog/building-a-modern-machine-learning-platform-with-ray"&gt;Building a Modern Machine Learning Platform with Ray at Samsara&lt;/a&gt; Samsara&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/blog/products/containers-kubernetes/use-ray-on-kubernetes-with-kuberay"&gt;Using Ray on Kubernetes with KubeRay at Google Cloud&lt;/a&gt; Google&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doordash.engineering/2023/06/20/how-doordash-built-an-ensemble-learning-model-for-time-series-forecasting/"&gt;How DoorDash Built an Ensemble Learning Model for Time Series Forecasting with KubeRay&lt;/a&gt; Doordash&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud.redhat.com/blog/ai/ml-models-batch-training-at-scale-with-open-data-hub"&gt;AI/ML Models Batch Training at Scale with Open Data Hub&lt;/a&gt; Red Hat&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tech.instacart.com/distributed-machine-learning-at-instacart-4b11d7569423"&gt;Distributed Machine Learning at Instacart&lt;/a&gt; Instacart&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.atspotify.com/2023/02/unleashing-ml-innovation-at-spotify-with-ray/"&gt;Unleashing ML Innovation at Spotify with Ray&lt;/a&gt; Spotify&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.alibabacloud.com/blog/best-practices-for-ray-clusters---ray-on-ack_600925"&gt;Best Practices For Ray Cluster On ACK&lt;/a&gt; Alibaba Cloud&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Talks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/mASxYpfWUNU?si=iCuXakrP7ORAg37z"&gt;Advanced Model Serving Techniques with Ray on Kubernetes | KubeCon 2024 NA&lt;/a&gt; Anyscale + Google&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/bbKpBTGf_AU?si=BkdCL7FGOde71t_P"&gt;Building Scalable AI Infrastructure with Kuberay and Kubernetes | Ray Summit 2024&lt;/a&gt; Anyscale + Google&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/ZCRZQVt-r3g?si=1Gxkpy8CNVVDDBP0"&gt;Ray at Scale: Apple's Approach to Elastic GPU Management | Ray Summit 2024&lt;/a&gt; Apple&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/9S5WznGnIpE?si=O6Rqpor9QmAvdv6u"&gt;Scaling Ray Train to 10K Kubernetes Nodes on GKE | Ray Summit 2024&lt;/a&gt; Google&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Y-kLmZ3nklQ?si=N9FIc5Nk_rWwKBRp"&gt;KubeSecRay: Fortifying Multi-Tenant Ray Clusters on Kubernetes | Ray Summit 2024&lt;/a&gt; Microsoft&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/6rNfYlm6s1k?si=WZeXZXrMDtRbbVKO"&gt;Scaling LLM Inference: AWS Inferentia Meets Ray Serve on EKS | Ray Summit 2024&lt;/a&gt; AWS&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/BN1CVDZjQRE?si=9pN9A3bReSL26Pc-"&gt;How Roblox Scaled Machine Learning by Leveraging Ray for Efficient Batch Inference | Ray Summit 2024&lt;/a&gt; Roblox&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/jYQ9ry8uXY0?si=3P56QNo8Qwovv4Vf"&gt;Airbnb's LLM Evolution: Fine-Tuning with Ray | Ray Summit 2024&lt;/a&gt; Airbnb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/5KuTdRq9Zto?si=8m485B1411ixfdlx"&gt;Ray @ eBay: Pioneering a Next-Gen AI Platform | Ray Summit 2024&lt;/a&gt; eBay&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/4kw3EYBz1Gs?si=PswsNR88xe6Mxuas"&gt;Spotify Harnesses Ray for Next-Gen AI Infrastructure | Ray Summit 2024&lt;/a&gt; Spotify&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/2l1lVBdmNIQ?si=PwCeZD1-XajPNLam"&gt;Spotify's Approach to Distributed LLM Training with Ray on GKE | Ray Summit 2024&lt;/a&gt; Spotify&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XwrGk0SM6ls?si=xNMQo548lOonKLiK"&gt;Reddit's ML Evolution: Scaling with Ray and KubeRay | Ray Summit 2024&lt;/a&gt; Reddit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Q27JFtLE6b4?si=QQhVMZyBRelkLC13"&gt;IBM's Approach to Building a Cloud-Native AI Platform | Ray Summit 2024&lt;/a&gt; IBM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/_nsTcYtfnXU?si=dKNasWOxiTRJgyvj"&gt;Exploring Hinge's ML Platform Evolution with Ray | Ray Summit 2024&lt;/a&gt; Hinge&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Md5vww4ardo?si=leiuvNkDy2fKeK8r"&gt;How Rubrik Unlocked AI at Scale with Ray Serve | Ray Summit 2024&lt;/a&gt; Rubrik&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/DgfJR6wR4BQ?si=QuK3j7VEkteSwglA"&gt;Supercharge Your AI Platform with KubeRay | KubeCon 2023 NA&lt;/a&gt; Anyscale + Google&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Q-sQLDMeJ8M"&gt;Sailing Ray Workloads with KubeRay and Kueue in Kubernetes&lt;/a&gt; Volcano + DaoCloud&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RK_u6cfPnnw"&gt;Serving Large Language Models with KubeRay on TPUs&lt;/a&gt; Google&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Please read our &lt;a href="https://raw.githubusercontent.com/ray-project/kuberay/master/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; guide before making a pull request. Refer to our &lt;a href="https://raw.githubusercontent.com/ray-project/kuberay/master/ray-operator/DEVELOPMENT.md"&gt;DEVELOPMENT&lt;/a&gt; to build and run tests locally.&lt;/p&gt; 
&lt;h2&gt;Getting Involved&lt;/h2&gt; 
&lt;p&gt;Join &lt;a href="https://docs.google.com/forms/d/e/1FAIpQLSfAcoiLCHOguOm8e7Jnn-JJdZaCxPGjgVCvFijHB5PLaQLeig/viewform"&gt;Ray's Slack workspace&lt;/a&gt;, and search the following public channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;#kuberay-questions&lt;/code&gt;: This channel aims to help KubeRay users with their questions. The messages will be closely monitored by the Ray and KubeRay maintainers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;KubeRay contributors are welcome to join the bi-weekly KubeRay community meetings.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add the &lt;a href="https://calendar.google.com/calendar/u/1?cid=Y19iZWIwYTUxZDQyZTczMTFmZWFmYTY5YjZiOTY1NjAxMTQ3ZTEzOTAxZWE0ZGU5YzA1NjFlZWQ5OTljY2FiOWM4QGdyb3VwLmNhbGVuZGFyLmdvb2dsZS5jb20"&gt;Ray/KubeRay Google calendar&lt;/a&gt; to your calendar.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a potential security issue in this project, or think you may have discovered a security issue, we ask that you notify KubeRay Security via our &lt;a href="https://ray-distributed.slack.com/archives/C02GFQ82JPM"&gt;Slack Channel&lt;/a&gt;. Please do &lt;strong&gt;not&lt;/strong&gt; create a public GitHub issue.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/ray-project/kuberay/master/LICENSE"&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>glanceapp/glance</title>
      <link>https://github.com/glanceapp/glance</link>
      <description>&lt;p&gt;A self-hosted dashboard that puts all your feeds in one place&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;em&gt;What if you could see everything at a...&lt;/em&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt;Glance&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/#installation"&gt;Install&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;Configuration&lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.com/invite/7KQ7Xa9kJd"&gt;Discord&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/sponsors/glanceapp"&gt;Sponsor&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/glanceapp/community-widgets"&gt;Community widgets&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/preconfigured-pages.md"&gt;Preconfigured pages&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md"&gt;Themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/readme-main-image.png" alt=""&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Various widgets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;RSS feeds&lt;/li&gt; 
 &lt;li&gt;Subreddit posts&lt;/li&gt; 
 &lt;li&gt;Hacker News posts&lt;/li&gt; 
 &lt;li&gt;Weather forecasts&lt;/li&gt; 
 &lt;li&gt;YouTube channel uploads&lt;/li&gt; 
 &lt;li&gt;Twitch channels&lt;/li&gt; 
 &lt;li&gt;Market prices&lt;/li&gt; 
 &lt;li&gt;Docker containers status&lt;/li&gt; 
 &lt;li&gt;Server stats&lt;/li&gt; 
 &lt;li&gt;Custom widgets&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;and many more...&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fast and lightweight&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Low memory usage&lt;/li&gt; 
 &lt;li&gt;Few dependencies&lt;/li&gt; 
 &lt;li&gt;Minimal vanilla JS&lt;/li&gt; 
 &lt;li&gt;Single &amp;lt;20mb binary available for multiple OSs &amp;amp; architectures and just as small Docker container&lt;/li&gt; 
 &lt;li&gt;Uncached pages usually load within ~1s (depending on internet speed and number of widgets)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tons of customizability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Different layouts&lt;/li&gt; 
 &lt;li&gt;As many pages/tabs as you need&lt;/li&gt; 
 &lt;li&gt;Numerous configuration options for each widget&lt;/li&gt; 
 &lt;li&gt;Multiple styles for some widgets&lt;/li&gt; 
 &lt;li&gt;Custom CSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Optimized for mobile devices&lt;/h3&gt; 
&lt;p&gt;Because you'll want to take it with you on the go.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/mobile-preview.png" alt=""&gt;&lt;/p&gt; 
&lt;h3&gt;Themeable&lt;/h3&gt; 
&lt;p&gt;Easily create your own theme by tweaking a few numbers or choose from one of the &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/themes.md"&gt;already available themes&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/glanceapp/glance/main/docs/images/themes-example.png" alt=""&gt;&lt;/p&gt; 
&lt;br&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Configuration is done through YAML files, to learn more about how the layout works, how to add more pages and how to configure widgets, visit the &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/main/docs/configuration.md#configuring-glance"&gt;configuration documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Preview example configuration file&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;pages:
  - name: Home
    columns:
      - size: small
        widgets:
          - type: calendar
            first-day-of-week: monday

          - type: rss
            limit: 10
            collapse-after: 3
            cache: 12h
            feeds:
              - url: https://selfh.st/rss/
                title: selfh.st
                limit: 4
              - url: https://ciechanow.ski/atom.xml
              - url: https://www.joshwcomeau.com/rss.xml
                title: Josh Comeau
              - url: https://samwho.dev/rss.xml
              - url: https://ishadeed.com/feed.xml
                title: Ahmad Shadeed

          - type: twitch-channels
            channels:
              - theprimeagen
              - j_blow
              - piratesoftware
              - cohhcarnage
              - christitustech
              - EJ_SA

      - size: full
        widgets:
          - type: group
            widgets:
              - type: hacker-news
              - type: lobsters

          - type: videos
            channels:
              - UCXuqSBlHAE6Xw-yeJA0Tunw # Linus Tech Tips
              - UCR-DXc1voovS8nhAvccRZhg # Jeff Geerling
              - UCsBjURrPoezykLs9EqgamOA # Fireship
              - UCBJycsmduvYEL83R_U4JriQ # Marques Brownlee
              - UCHnyfMqiRRG1u-2MsSQLbXA # Veritasium

          - type: group
            widgets:
              - type: reddit
                subreddit: technology
                show-thumbnails: true
              - type: reddit
                subreddit: selfhosted
                show-thumbnails: true

      - size: small
        widgets:
          - type: weather
            location: London, United Kingdom
            units: metric
            hour-format: 12h

          - type: markets
            markets:
              - symbol: SPY
                name: S&amp;amp;P 500
              - symbol: BTC-USD
                name: Bitcoin
              - symbol: NVDA
                name: NVIDIA
              - symbol: AAPL
                name: Apple
              - symbol: MSFT
                name: Microsoft

          - type: releases
            cache: 1d
            repositories:
              - glanceapp/glance
              - go-gitea/gitea
              - immich-app/immich
              - syncthing/syncthing
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose using provided directory structure (recommended)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a new directory called &lt;code&gt;glance&lt;/code&gt; as well as the template files within it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir glance &amp;amp;&amp;amp; cd glance &amp;amp;&amp;amp; curl -sL https://github.com/glanceapp/docker-compose-template/archive/refs/heads/main.tar.gz | tar -xzf - --strip-components 2
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;em&gt;&lt;a href="https://github.com/glanceapp/docker-compose-template/tree/main/root"&gt;click here to view the files that will be created&lt;/a&gt;&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;Then, edit the following files as desired:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; to configure the port, volumes and other containery things&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/home.yml&lt;/code&gt; to configure the widgets or layout of the home page&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;config/glance.yml&lt;/code&gt; if you want to change the theme or add more pages&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;details&gt; 
  &lt;summary&gt;Other files you may want to edit&lt;/summary&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.env&lt;/code&gt; to configure environment variables that will be available inside configuration files&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;assets/user.css&lt;/code&gt; to add custom CSS&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/details&gt; 
 &lt;p&gt;When ready, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose logs
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Docker compose manual&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Create a &lt;code&gt;docker-compose.yml&lt;/code&gt; file with the following contents:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  glance:
    container_name: glance
    image: glanceapp/glance
    restart: unless-stopped
    volumes:
      - ./config:/app/config
    ports:
      - 8080:8080
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Then, create a new directory called &lt;code&gt;config&lt;/code&gt; and download the example starting &lt;a href="https://github.com/glanceapp/glance/raw/main/docs/glance.yml"&gt;&lt;code&gt;glance.yml&lt;/code&gt;&lt;/a&gt; file into it by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;mkdir config &amp;amp;&amp;amp; wget -O config/glance.yml https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Feel free to edit the &lt;code&gt;glance.yml&lt;/code&gt; file to your liking, and when ready run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you encounter any issues, you can check the logs by running:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker logs glance
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Manual binary installation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Precompiled binaries are available for Linux, Windows and macOS (x86, x86_64, ARM and ARM64 architectures).&lt;/p&gt; 
 &lt;h3&gt;Linux&lt;/h3&gt; 
 &lt;p&gt;Visit the &lt;a href="https://github.com/glanceapp/glance/releases/latest"&gt;latest release page&lt;/a&gt; for available binaries. You can place the binary in &lt;code&gt;/opt/glance/&lt;/code&gt; and have it start with your server via a &lt;a href="https://linuxhandbook.com/create-systemd-services/"&gt;systemd service&lt;/a&gt;. By default, when running the binary, it will look for a &lt;code&gt;glance.yml&lt;/code&gt; file in the directory it's placed in. To specify a different path for the config file, use the &lt;code&gt;--config&lt;/code&gt; option:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;/opt/glance/glance --config /etc/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To grab a starting template for the config file, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;wget https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Windows&lt;/h3&gt; 
 &lt;p&gt;Download and extract the executable from the &lt;a href="https://github.com/glanceapp/glance/releases/latest"&gt;latest release&lt;/a&gt; (most likely the file called &lt;code&gt;glance-windows-amd64.zip&lt;/code&gt; if you're on a 64-bit system) and place it in a folder of your choice. Then, create a new text file called &lt;code&gt;glance.yml&lt;/code&gt; in the same folder and paste the content from &lt;a href="https://raw.githubusercontent.com/glanceapp/glance/refs/heads/main/docs/glance.yml"&gt;here&lt;/a&gt; in it. You should then be able to run the executable and access the dashboard by visiting &lt;code&gt;http://localhost:8080&lt;/code&gt; in your browser.&lt;/p&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Other&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Glance can also be installed through the following 3rd party channels:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://community-scripts.github.io/ProxmoxVE/scripts?id=glance"&gt;Proxmox VE Helper Script&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://search.nixos.org/packages?channel=unstable&amp;amp;show=glance"&gt;NixOS package&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://coolify.io/docs/services/glance/"&gt;Coolify.io&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Common issues&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Requests timing out&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;The most common cause of this is when using Pi-Hole, AdGuard Home or other ad-blocking DNS services, which by default have a fairly low rate limit. Depending on the number of widgets you have in a single page, this limit can very easily be exceeded. To fix this, increase the rate limit in the settings of your DNS service.&lt;/p&gt; 
 &lt;p&gt;If using Podman, in some rare cases the timeout can be caused by an unknown issue, in which case it may be resolved by adding the following to the bottom of your &lt;code&gt;docker-compose.yml&lt;/code&gt; file:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;networks:
  podman:
    external: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Broken layout for markets, bookmarks or other widgets&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;This is almost always caused by the browser extension Dark Reader. To fix this, disable dark mode for the domain where Glance is hosted.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;cannot unmarshal !!map into []glance.page&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;The most common cause of this is having a &lt;code&gt;pages&lt;/code&gt; key in your &lt;code&gt;glance.yml&lt;/code&gt; and then also having a &lt;code&gt;pages&lt;/code&gt; key inside one of your included pages. To fix this, remove the &lt;code&gt;pages&lt;/code&gt; key from the top of your included pages.&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Does the information on the page update automatically?&lt;/strong&gt;&lt;/summary&gt; No, a page refresh is required to update the information. Some things do dynamically update where it makes sense, like the clock widget and the relative time showing how long ago something happened. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;How frequently do widgets update?&lt;/strong&gt;&lt;/summary&gt; No requests are made periodically in the background, information is only fetched upon loading the page and then cached. The default cache lifetime is different for each widget and can be configured. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I create my own widgets?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, there are multiple ways to create custom widgets:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;iframe&lt;/code&gt; widget - allows you to embed things from other websites&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;html&lt;/code&gt; widget - allows you to insert your own static HTML&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;extension&lt;/code&gt; widget - fetch HTML from a URL&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;custom-api&lt;/code&gt; widget - fetch JSON from a URL and render it using custom HTML&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Can I change the title of a widget?&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Yes, the title of all widgets can be changed by specifying the &lt;code&gt;title&lt;/code&gt; property in the widget's configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;- type: rss
  title: My custom title

- type: markets
  title: My custom title

- type: videos
  title: My custom title

# and so on for all widgets...
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Feature requests&lt;/h2&gt; 
&lt;p&gt;New feature suggestions are always welcome and will be considered, though please keep in mind that some of them may be out of scope for what the project is trying to achieve (or is reasonably capable of). If you have an idea for a new feature and would like to share it, you can do so &lt;a href="https://github.com/glanceapp/glance/issues/new?template=feature_request.yml"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feature requests are tagged with one of the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/roadmap"&gt;Roadmap&lt;/a&gt; - will be implemented in a future release&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/backlog"&gt;Backlog&lt;/a&gt; - may be implemented in the future but needs further feedback or interest from the community&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/glanceapp/glance/labels/icebox"&gt;Icebox&lt;/a&gt; - no plans to implement as it doesn't currently align with the project's goals or capabilities, may be revised at a later date&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Choose one of the following methods:&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build binary with Go&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href="https://go.dev/dl/"&gt;Go&lt;/a&gt; &amp;gt;= v1.23&lt;/p&gt; 
 &lt;p&gt;To build the project for your current OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To build for a specific OS and architecture, run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;GOOS=linux GOARCH=amd64 go build -o build/glance .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;a href="https://go.dev/doc/install/source#:~:text=$GOOS%20and%20$GOARCH"&gt;&lt;em&gt;click here for a full list of GOOS and GOARCH combinations&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Alternatively, if you just want to run the app without creating a binary, like when you're testing out changes, you can run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;go run .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build project and Docker image with Docker&lt;/strong&gt;&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;p&gt;Requirements: &lt;a href="https://docs.docker.com/engine/install/"&gt;Docker&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;To build the project and image using just Docker, run:&lt;/p&gt; 
 &lt;p&gt;&lt;em&gt;(replace &lt;code&gt;owner&lt;/code&gt; with your name or organization)&lt;/em&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t owner/glance:latest .
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you wish to push the image to a registry (by default Docker Hub), run:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker push owner/glance:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;hr&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Contributing guidelines&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before working on a new feature it's preferable to submit a feature request first and state that you'd like to implement it yourself&lt;/li&gt; 
 &lt;li&gt;Please don't submit PRs for feature requests that are either in the roadmap&lt;sup&gt;[1]&lt;/sup&gt;, backlog&lt;sup&gt;[2]&lt;/sup&gt; or icebox&lt;sup&gt;[3]&lt;/sup&gt;&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;dev&lt;/code&gt; for the base branch if you're adding new features or fixing bugs, otherwise use &lt;code&gt;main&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new dependencies&lt;/li&gt; 
 &lt;li&gt;Avoid making backwards-incompatible configuration changes&lt;/li&gt; 
 &lt;li&gt;Avoid introducing new colors or hard-coding colors, use the standard &lt;code&gt;primary&lt;/code&gt;, &lt;code&gt;positive&lt;/code&gt; and &lt;code&gt;negative&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For icons, try to use &lt;a href="https://heroicons.com/"&gt;heroicons&lt;/a&gt; where applicable&lt;/li&gt; 
 &lt;li&gt;Provide a screenshot of the changes if UI related where possible&lt;/li&gt; 
 &lt;li&gt;No &lt;code&gt;package.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;&lt;sup&gt;[1] [2] [3]&lt;/sup&gt;&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;[1] The feature likely already has work put into it that may conflict with your implementation&lt;/p&gt; 
 &lt;p&gt;[2] The demand, implementation or functionality for this feature is not yet clear&lt;/p&gt; 
 &lt;p&gt;[3] No plans to add this feature for the time being&lt;/p&gt; 
&lt;/details&gt; 
&lt;br&gt; 
&lt;h2&gt;Thank you&lt;/h2&gt; 
&lt;p&gt;To all the people who were generous enough to &lt;a href="https://github.com/sponsors/glanceapp"&gt;sponsor&lt;/a&gt; the project and to everyone who has contributed in any way, be it PRs, submitting issues, helping others in the discussions or Discord server, creating guides and tools or just mentioning Glance on social media. Your support is greatly appreciated and helps keep the project going.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>charmbracelet/bubbletea</title>
      <link>https://github.com/charmbracelet/bubbletea</link>
      <description>&lt;p&gt;A powerful little TUI framework üèó&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bubble Tea&lt;/h1&gt; 
&lt;p&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://stuff.charm.sh/bubbletea/bubble-tea-v2-light.png" width="308"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://stuff.charm.sh/bubbletea/bubble-tea-v2-dark.png" width="312"&gt; 
  &lt;img src="https://stuff.charm.sh/bubbletea/bubble-tea-v2-light.png" width="308"&gt; 
 &lt;/picture&gt; &lt;br&gt; &lt;a href="https://github.com/charmbracelet/bubbletea/releases"&gt;&lt;img src="https://img.shields.io/github/release/charmbracelet/bubbletea.svg?sanitize=true" alt="Latest Release"&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/charmbracelet/bubbletea?tab=doc"&gt;&lt;img src="https://godoc.org/github.com/charmbracelet/bubbletea?status.svg?sanitize=true" alt="GoDoc"&gt;&lt;/a&gt; &lt;a href="https://github.com/charmbracelet/bubbletea/actions"&gt;&lt;img src="https://github.com/charmbracelet/bubbletea/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build Status"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;The fun, functional and stateful way to build terminal apps. A Go framework based on &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt;. Bubble Tea is well-suited for simple and complex terminal applications, either inline, full-window, or a mix of both.&lt;/p&gt; 
&lt;p&gt; &lt;img src="https://stuff.charm.sh/bubbletea/bubbletea-example.gif" width="100%" alt="Bubble Tea Example"&gt; &lt;/p&gt; 
&lt;p&gt;Bubble Tea is in use in production and includes a number of features and performance optimizations we‚Äôve added along the way. Among those is a framerate-based renderer, mouse support, focus reporting and more.&lt;/p&gt; 
&lt;p&gt;To get started, see the tutorial below, the &lt;a href="https://github.com/charmbracelet/bubbletea/tree/main/examples"&gt;examples&lt;/a&gt;, the &lt;a href="https://pkg.go.dev/github.com/charmbracelet/bubbletea?tab=doc"&gt;docs&lt;/a&gt;, the &lt;a href="https://charm.sh/yt"&gt;video tutorials&lt;/a&gt; and some common &lt;a href="https://raw.githubusercontent.com/charmbracelet/bubbletea/main/#libraries-we-use-with-bubble-tea"&gt;resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;By the way&lt;/h2&gt; 
&lt;p&gt;Be sure to check out &lt;a href="https://github.com/charmbracelet/bubbles"&gt;Bubbles&lt;/a&gt;, a library of common UI components for Bubble Tea.&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://github.com/charmbracelet/bubbles"&gt;&lt;img src="https://stuff.charm.sh/bubbles/bubbles-badge.png" width="174" alt="Bubbles Badge"&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;a href="https://github.com/charmbracelet/bubbles"&gt;&lt;img src="https://stuff.charm.sh/bubbles-examples/textinput.gif" width="400" alt="Text Input Example from Bubbles"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h2&gt;Tutorial&lt;/h2&gt; 
&lt;p&gt;Bubble Tea is based on the functional design paradigms of &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt;, which happens to work nicely with Go. It's a delightful way to build applications.&lt;/p&gt; 
&lt;p&gt;This tutorial assumes you have a working knowledge of Go.&lt;/p&gt; 
&lt;p&gt;By the way, the non-annotated source code for this program is available &lt;a href="https://github.com/charmbracelet/bubbletea/tree/main/tutorials/basics"&gt;on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Enough! Let's get to it.&lt;/h3&gt; 
&lt;p&gt;For this tutorial, we're making a shopping list.&lt;/p&gt; 
&lt;p&gt;To start we'll define our package and import some libraries. Our only external import will be the Bubble Tea library, which we'll call &lt;code&gt;tea&lt;/code&gt; for short.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

// These imports will be used later on the tutorial. If you save the file
// now, Go might complain they are unused, but that's fine.
// You may also need to run `go mod tidy` to download bubbletea and its
// dependencies.
import (
    "fmt"
    "os"

    tea "github.com/charmbracelet/bubbletea"
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Bubble Tea programs are comprised of a &lt;strong&gt;model&lt;/strong&gt; that describes the application state and three simple methods on that model:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Init&lt;/strong&gt;, a function that returns an initial command for the application to run.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Update&lt;/strong&gt;, a function that handles incoming events and updates the model accordingly.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;View&lt;/strong&gt;, a function that renders the UI based on the data in the model.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;The Model&lt;/h3&gt; 
&lt;p&gt;So let's start by defining our model which will store our application's state. It can be any type, but a &lt;code&gt;struct&lt;/code&gt; usually makes the most sense.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type model struct {
    choices  []string           // items on the to-do list
    cursor   int                // which to-do list item our cursor is pointing at
    selected map[int]struct{}   // which to-do items are selected
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Initialization&lt;/h3&gt; 
&lt;p&gt;Next, we‚Äôll define our application‚Äôs initial state. In this case, we‚Äôre defining a function to return our initial model, however, we could just as easily define the initial model as a variable elsewhere, too.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func initialModel() model {
	return model{
		// Our to-do list is a grocery list
		choices:  []string{"Buy carrots", "Buy celery", "Buy kohlrabi"},

		// A map which indicates which choices are selected. We're using
		// the  map like a mathematical set. The keys refer to the indexes
		// of the `choices` slice, above.
		selected: make(map[int]struct{}),
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we define the &lt;code&gt;Init&lt;/code&gt; method. &lt;code&gt;Init&lt;/code&gt; can return a &lt;code&gt;Cmd&lt;/code&gt; that could perform some initial I/O. For now, we don't need to do any I/O, so for the command, we'll just return &lt;code&gt;nil&lt;/code&gt;, which translates to "no command."&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func (m model) Init() tea.Cmd {
    // Just return `nil`, which means "no I/O right now, please."
    return nil
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;The Update Method&lt;/h3&gt; 
&lt;p&gt;Next up is the update method. The update function is called when ‚Äùthings happen.‚Äù Its job is to look at what has happened and return an updated model in response. It can also return a &lt;code&gt;Cmd&lt;/code&gt; to make more things happen, but for now don't worry about that part.&lt;/p&gt; 
&lt;p&gt;In our case, when a user presses the down arrow, &lt;code&gt;Update&lt;/code&gt;‚Äôs job is to notice that the down arrow was pressed and move the cursor accordingly (or not).&lt;/p&gt; 
&lt;p&gt;The ‚Äúsomething happened‚Äù comes in the form of a &lt;code&gt;Msg&lt;/code&gt;, which can be any type. Messages are the result of some I/O that took place, such as a keypress, timer tick, or a response from a server.&lt;/p&gt; 
&lt;p&gt;We usually figure out which type of &lt;code&gt;Msg&lt;/code&gt; we received with a type switch, but you could also use a type assertion.&lt;/p&gt; 
&lt;p&gt;For now, we'll just deal with &lt;code&gt;tea.KeyMsg&lt;/code&gt; messages, which are automatically sent to the update function when keys are pressed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func (m model) Update(msg tea.Msg) (tea.Model, tea.Cmd) {
    switch msg := msg.(type) {

    // Is it a key press?
    case tea.KeyMsg:

        // Cool, what was the actual key pressed?
        switch msg.String() {

        // These keys should exit the program.
        case "ctrl+c", "q":
            return m, tea.Quit

        // The "up" and "k" keys move the cursor up
        case "up", "k":
            if m.cursor &amp;gt; 0 {
                m.cursor--
            }

        // The "down" and "j" keys move the cursor down
        case "down", "j":
            if m.cursor &amp;lt; len(m.choices)-1 {
                m.cursor++
            }

        // The "enter" key and the spacebar (a literal space) toggle
        // the selected state for the item that the cursor is pointing at.
        case "enter", " ":
            _, ok := m.selected[m.cursor]
            if ok {
                delete(m.selected, m.cursor)
            } else {
                m.selected[m.cursor] = struct{}{}
            }
        }
    }

    // Return the updated model to the Bubble Tea runtime for processing.
    // Note that we're not returning a command.
    return m, nil
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may have noticed that &lt;kbd&gt;ctrl+c&lt;/kbd&gt; and &lt;kbd&gt;q&lt;/kbd&gt; above return a &lt;code&gt;tea.Quit&lt;/code&gt; command with the model. That‚Äôs a special command which instructs the Bubble Tea runtime to quit, exiting the program.&lt;/p&gt; 
&lt;h3&gt;The View Method&lt;/h3&gt; 
&lt;p&gt;At last, it‚Äôs time to render our UI. Of all the methods, the view is the simplest. We look at the model in its current state and use it to return a &lt;code&gt;string&lt;/code&gt;. That string is our UI!&lt;/p&gt; 
&lt;p&gt;Because the view describes the entire UI of your application, you don‚Äôt have to worry about redrawing logic and stuff like that. Bubble Tea takes care of it for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func (m model) View() string {
    // The header
    s := "What should we buy at the market?\n\n"

    // Iterate over our choices
    for i, choice := range m.choices {

        // Is the cursor pointing at this choice?
        cursor := " " // no cursor
        if m.cursor == i {
            cursor = "&amp;gt;" // cursor!
        }

        // Is this choice selected?
        checked := " " // not selected
        if _, ok := m.selected[i]; ok {
            checked = "x" // selected!
        }

        // Render the row
        s += fmt.Sprintf("%s [%s] %s\n", cursor, checked, choice)
    }

    // The footer
    s += "\nPress q to quit.\n"

    // Send the UI for rendering
    return s
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;All Together Now&lt;/h3&gt; 
&lt;p&gt;The last step is to simply run our program. We pass our initial model to &lt;code&gt;tea.NewProgram&lt;/code&gt; and let it rip:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func main() {
    p := tea.NewProgram(initialModel())
    if _, err := p.Run(); err != nil {
        fmt.Printf("Alas, there's been an error: %v", err)
        os.Exit(1)
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What‚Äôs Next?&lt;/h2&gt; 
&lt;p&gt;This tutorial covers the basics of building an interactive terminal UI, but in the real world you'll also need to perform I/O. To learn about that have a look at the &lt;a href="https://github.com/charmbracelet/bubbletea/tree/main/tutorials/commands/"&gt;Command Tutorial&lt;/a&gt;. It's pretty simple.&lt;/p&gt; 
&lt;p&gt;There are also several &lt;a href="https://github.com/charmbracelet/bubbletea/tree/main/examples"&gt;Bubble Tea examples&lt;/a&gt; available and, of course, there are &lt;a href="https://pkg.go.dev/github.com/charmbracelet/bubbletea?tab=doc"&gt;Go Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;h3&gt;Debugging with Delve&lt;/h3&gt; 
&lt;p&gt;Since Bubble Tea apps assume control of stdin and stdout, you‚Äôll need to run delve in headless mode and then connect to it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start the debugger
$ dlv debug --headless --api-version=2 --listen=127.0.0.1:43000 .
API server listening at: 127.0.0.1:43000

# Connect to it from another terminal
$ dlv connect 127.0.0.1:43000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you do not explicitly supply the &lt;code&gt;--listen&lt;/code&gt; flag, the port used will vary per run, so passing this in makes the debugger easier to use from a script or your IDE of choice.&lt;/p&gt; 
&lt;p&gt;Additionally, we pass in &lt;code&gt;--api-version=2&lt;/code&gt; because delve defaults to version 1 for backwards compatibility reasons. However, delve recommends using version 2 for all new development and some clients may no longer work with version 1. For more information, see the &lt;a href="https://github.com/go-delve/delve/tree/master/Documentation/api"&gt;Delve documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Logging Stuff&lt;/h3&gt; 
&lt;p&gt;You can‚Äôt really log to stdout with Bubble Tea because your TUI is busy occupying that! You can, however, log to a file by including something like the following prior to starting your Bubble Tea program:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;if len(os.Getenv("DEBUG")) &amp;gt; 0 {
	f, err := tea.LogToFile("debug.log", "debug")
	if err != nil {
		fmt.Println("fatal:", err)
		os.Exit(1)
	}
	defer f.Close()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see what‚Äôs being logged in real time, run &lt;code&gt;tail -f debug.log&lt;/code&gt; while you run your program in another window.&lt;/p&gt; 
&lt;h2&gt;Libraries we use with Bubble Tea&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/bubbles"&gt;Bubbles&lt;/a&gt;: Common Bubble Tea components such as text inputs, viewports, spinners and so on&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/lipgloss"&gt;Lip Gloss&lt;/a&gt;: Style, format and layout tools for terminal applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/harmonica"&gt;Harmonica&lt;/a&gt;: A spring animation library for smooth, natural motion&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lrstanley/bubblezone"&gt;BubbleZone&lt;/a&gt;: Easy mouse event tracking for Bubble Tea components&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NimbleMarkets/ntcharts"&gt;ntcharts&lt;/a&gt;: A terminal charting library built for Bubble Tea and &lt;a href="https://github.com/charmbracelet/lipgloss"&gt;Lip Gloss&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Bubble Tea in the Wild&lt;/h2&gt; 
&lt;p&gt;There are over &lt;a href="https://github.com/charmbracelet/bubbletea/network/dependents"&gt;10,000 applications&lt;/a&gt; built with Bubble Tea! Here are a handful of ‚Äôem.&lt;/p&gt; 
&lt;h3&gt;Staff favourites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twpayne/chezmoi"&gt;chezmoi&lt;/a&gt;: securely manage your dotfiles across multiple machines&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bensadeh/circumflex"&gt;circumflex&lt;/a&gt;: read Hacker News in the terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.github.com/dlvhdr/gh-dash"&gt;gh-dash&lt;/a&gt;: a GitHub CLI extension for PRs and issues&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Broderick-Westrope/tetrigo"&gt;Tetrigo&lt;/a&gt;: Tetris in the terminal&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emprcl/signls"&gt;Signls&lt;/a&gt;: a generative midi sequencer designed for composition and live performance&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yorukot/superfile"&gt;Superfile&lt;/a&gt;: a super file manager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;In Industry&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Microsoft Azure ‚Äì&amp;nbsp;&lt;a href="https://github.com/Azure/aztfy"&gt;Aztify&lt;/a&gt;: bring Microsoft Azure resources under Terraform&lt;/li&gt; 
 &lt;li&gt;Daytona ‚Äì&amp;nbsp;&lt;a href="https://github.com/daytonaio/daytona"&gt;Daytona&lt;/a&gt;: open source dev environment manager&lt;/li&gt; 
 &lt;li&gt;Cockroach Labs ‚Äì &lt;a href="https://github.com/cockroachdb/cockroach"&gt;CockroachDB&lt;/a&gt;: a cloud-native, high-availability distributed SQL database&lt;/li&gt; 
 &lt;li&gt;Truffle Security Co. ‚Äì&amp;nbsp;&lt;a href="https://github.com/trufflesecurity/trufflehog"&gt;Trufflehog&lt;/a&gt;: find leaked credentials&lt;/li&gt; 
 &lt;li&gt;NVIDIA ‚Äì&amp;nbsp;&lt;a href="https://github.com/NVIDIA/container-canary"&gt;container-canary&lt;/a&gt;: a container validator&lt;/li&gt; 
 &lt;li&gt;AWS ‚Äì&amp;nbsp;&lt;a href="https://github.com/awslabs/eks-node-viewer"&gt;eks-node-viewer&lt;/a&gt;: a tool for visualizing dynamic node usage within an EKS cluster&lt;/li&gt; 
 &lt;li&gt;MinIO ‚Äì&amp;nbsp;&lt;a href="https://github.com/minio/mc"&gt;mc&lt;/a&gt;: the official &lt;a href="https://min.io"&gt;MinIO&lt;/a&gt; client&lt;/li&gt; 
 &lt;li&gt;Ubuntu ‚Äì&amp;nbsp;&lt;a href="https://github.com/ubuntu/authd"&gt;Authd&lt;/a&gt;: an authentication daemon for cloud-based identity providers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Charm stuff&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/glow"&gt;Glow&lt;/a&gt;: a markdown reader, browser, and online markdown stash&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/huh"&gt;Huh?&lt;/a&gt;: an interactive prompt and form toolkit&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/mods"&gt;Mods&lt;/a&gt;: AI on the CLI, built for pipelines&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/wishlist"&gt;Wishlist&lt;/a&gt;: an SSH directory (and bastion!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;There‚Äôs so much more where that came from&lt;/h3&gt; 
&lt;p&gt;For more applications built with Bubble Tea see &lt;a href="https://github.com/charm-and-friends/charm-in-the-wild"&gt;Charm &amp;amp; Friends&lt;/a&gt;. Is there something cool you made with Bubble Tea you want to share? &lt;a href="https://github.com/charm-and-friends/charm-in-the-wild"&gt;PRs&lt;/a&gt; are welcome!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://github.com/charmbracelet/bubbletea/contribute"&gt;contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Feedback&lt;/h2&gt; 
&lt;p&gt;We‚Äôd love to hear your thoughts on this project. Feel free to drop us a note!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/charmcli"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mastodon.social/@charmcli"&gt;The Fediverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.sh/chat"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Bubble Tea is based on the paradigms of &lt;a href="https://guide.elm-lang.org/architecture/"&gt;The Elm Architecture&lt;/a&gt; by Evan Czaplicki et alia and the excellent &lt;a href="https://github.com/tj/go-tea"&gt;go-tea&lt;/a&gt; by TJ Holowaychuk. It‚Äôs inspired by the many great &lt;a href="https://de.wikipedia.org/wiki/Zeichenorientierte_Benutzerschnittstelle"&gt;&lt;em&gt;Zeichenorientierte Benutzerschnittstellen&lt;/em&gt;&lt;/a&gt; of days past.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/bubbletea/raw/main/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;Part of &lt;a href="https://charm.sh"&gt;Charm&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://charm.sh/"&gt;&lt;img alt="The Charm logo" src="https://stuff.charm.sh/charm-badge.jpg" width="400"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;CharmÁÉ≠Áà±ÂºÄÊ∫ê ‚Ä¢ Charm loves open source ‚Ä¢ ŸÜÿ≠ŸÜŸè ŸÜÿ≠ÿ® ÿßŸÑŸÖÿµÿßÿØÿ± ÿßŸÑŸÖŸÅÿ™Ÿàÿ≠ÿ©&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>VictoriaMetrics/VictoriaMetrics</title>
      <link>https://github.com/VictoriaMetrics/VictoriaMetrics</link>
      <description>&lt;p&gt;VictoriaMetrics: fast, cost-effective monitoring solution and time series database&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VictoriaMetrics&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/VictoriaMetrics/VictoriaMetrics?sort=semver&amp;amp;label=&amp;amp;filter=!*-victorialogs&amp;amp;logo=github&amp;amp;labelColor=gray&amp;amp;color=gray&amp;amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Freleases%2Flatest" alt="Latest Release"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/victoriametrics/victoria-metrics?label=&amp;amp;logo=docker&amp;amp;logoColor=white&amp;amp;labelColor=2496ED&amp;amp;color=2496ED&amp;amp;link=https%3A%2F%2Fhub.docker.com%2Fr%2Fvictoriametrics%2Fvictoria-metrics" alt="Docker Pulls"&gt; &lt;a href="https://goreportcard.com/report/github.com/VictoriaMetrics/VictoriaMetrics"&gt;&lt;img src="https://goreportcard.com/badge/github.com/VictoriaMetrics/VictoriaMetrics?link=https%3A%2F%2Fgoreportcard.com%2Freport%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics" alt="Go Report"&gt;&lt;/a&gt; &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/actions/workflows/main.yml"&gt;&lt;img src="https://github.com/VictoriaMetrics/VictoriaMetrics/actions/workflows/main.yml/badge.svg?branch=master&amp;amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Factions" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/VictoriaMetrics/VictoriaMetrics"&gt;&lt;img src="https://codecov.io/gh/VictoriaMetrics/VictoriaMetrics/branch/master/graph/badge.svg?link=https%3A%2F%2Fcodecov.io%2Fgh%2FVictoriaMetrics%2FVictoriaMetrics" alt="codecov"&gt;&lt;/a&gt; &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/VictoriaMetrics/VictoriaMetrics?labelColor=green&amp;amp;label=&amp;amp;link=https%3A%2F%2Fgithub.com%2FVictoriaMetrics%2FVictoriaMetrics%2Fblob%2Fmaster%2FLICENSE" alt="License"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Join-4A154B?logo=slack&amp;amp;link=https%3A%2F%2Fslack.victoriametrics.com" alt="Slack"&gt; &lt;a href="https://x.com/VictoriaMetrics/"&gt;&lt;img src="https://img.shields.io/twitter/follow/VictoriaMetrics?style=flat&amp;amp;label=Follow&amp;amp;color=black&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;link=https%3A%2F%2Fx.com%2FVictoriaMetrics" alt="X"&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/VictoriaMetrics/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/VictoriaMetrics?style=flat&amp;amp;label=Join&amp;amp;labelColor=red&amp;amp;logoColor=white&amp;amp;logo=reddit&amp;amp;link=https%3A%2F%2Fwww.reddit.com%2Fr%2FVictoriaMetrics" alt="Reddit"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source srcset="docs/victoriametrics/logo_white.webp" media="(prefers-color-scheme: dark)"&gt; 
 &lt;source srcset="docs/victoriametrics/logo.webp" media="(prefers-color-scheme: light)"&gt; 
 &lt;img src="https://raw.githubusercontent.com/VictoriaMetrics/VictoriaMetrics/master/docs/victoriametrics/logo.webp" width="300" alt="VictoriaMetrics logo"&gt; 
&lt;/picture&gt; 
&lt;p&gt;VictoriaMetrics is a fast, cost-saving, and scalable solution for monitoring and managing time series data. It delivers high performance and reliability, making it an ideal choice for businesses of all sizes.&lt;/p&gt; 
&lt;p&gt;Here are some resources and information about VictoriaMetrics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://docs.victoriametrics.com"&gt;docs.victoriametrics.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Case studies: &lt;a href="https://docs.victoriametrics.com/victoriametrics/casestudies/"&gt;Grammarly, Roblox, Wix,...&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Available: &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/releases/latest"&gt;Binary releases&lt;/a&gt;, docker images &lt;a href="https://hub.docker.com/r/victoriametrics/victoria-metrics/"&gt;Docker Hub&lt;/a&gt; and &lt;a href="https://quay.io/repository/victoriametrics/victoria-metrics"&gt;Quay&lt;/a&gt;, &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics"&gt;Source code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Deployment types: &lt;a href="https://docs.victoriametrics.com/"&gt;Single-node version&lt;/a&gt;, &lt;a href="https://docs.victoriametrics.com/victoriametrics/cluster-victoriametrics/"&gt;Cluster version&lt;/a&gt;, and &lt;a href="https://docs.victoriametrics.com/victoriametrics/enterprise/"&gt;Enterprise version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Changelog: &lt;a href="https://docs.victoriametrics.com/victoriametrics/changelog/"&gt;CHANGELOG&lt;/a&gt;, and &lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-upgrade-victoriametrics"&gt;How to upgrade&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Community: &lt;a href="https://slack.victoriametrics.com/"&gt;Slack&lt;/a&gt;, &lt;a href="https://x.com/VictoriaMetrics"&gt;X (Twitter)&lt;/a&gt;, &lt;a href="https://www.linkedin.com/company/victoriametrics/"&gt;LinkedIn&lt;/a&gt;, &lt;a href="https://www.youtube.com/@VictoriaMetrics"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Yes, we open-source both the single-node VictoriaMetrics and the cluster version.&lt;/p&gt; 
&lt;h2&gt;Prominent features&lt;/h2&gt; 
&lt;p&gt;VictoriaMetrics is optimized for timeseries data, even when old time series are constantly replaced by new ones at a high rate, it offers a lot of features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Long-term storage for Prometheus&lt;/strong&gt; or as a drop-in replacement for Prometheus and Graphite in Grafana.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Powerful stream aggregation&lt;/strong&gt;: Can be used as a StatsD alternative.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ideal for big data&lt;/strong&gt;: Works well with large amounts of time series data from APM, Kubernetes, IoT sensors, connected cars, industrial telemetry, financial data and various &lt;a href="https://docs.victoriametrics.com/victoriametrics/enterprise/"&gt;Enterprise workloads&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Query language&lt;/strong&gt;: Supports both PromQL and the more performant MetricsQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy to setup&lt;/strong&gt;: No dependencies, single &lt;a href="https://medium.com/@valyala/stripping-dependency-bloat-in-victoriametrics-docker-image-983fb5912b0d"&gt;small binary&lt;/a&gt;, configuration through command-line flags, but the default is also fine-tuned; backup and restore with &lt;a href="https://medium.com/@valyala/how-victoriametrics-makes-instant-snapshots-for-multi-terabyte-time-series-data-e1f3fb0e0282"&gt;instant snapshots&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Global query view&lt;/strong&gt;: Multiple Prometheus instances or any other data sources may ingest data into VictoriaMetrics and queried via a single query.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Various Protocols&lt;/strong&gt;: Support metric scraping, ingestion and backfilling in various protocol. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-scrape-prometheus-exporters-such-as-node-exporter"&gt;Prometheus exporters&lt;/a&gt;, &lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/prometheus/"&gt;Prometheus remote write API&lt;/a&gt;, &lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-prometheus-exposition-format"&gt;Prometheus exposition format&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/influxdb/"&gt;InfluxDB line protocol&lt;/a&gt; over HTTP, TCP and UDP.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/graphite/#ingesting"&gt;Graphite plaintext protocol&lt;/a&gt; with &lt;a href="https://graphite.readthedocs.io/en/latest/tags.html#carbon"&gt;tags&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/opentsdb/#sending-data-via-telnet"&gt;OpenTSDB put message&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/opentsdb/#sending-data-via-http"&gt;HTTP OpenTSDB /api/put requests&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-json-line-format"&gt;JSON line format&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-csv-data"&gt;Arbitrary CSV data&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#how-to-import-data-in-native-format"&gt;Native binary format&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/datadog/"&gt;DataDog agent or DogStatsD&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/integrations/newrelic/#sending-data-from-agent"&gt;NewRelic infrastructure agent&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.victoriametrics.com/victoriametrics/single-server-victoriametrics/#sending-data-via-opentelemetry"&gt;OpenTelemetry metrics format&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;NFS-based storages&lt;/strong&gt;: Supports storing data on NFS-based storages such as Amazon EFS, Google Filestore.&lt;/li&gt; 
 &lt;li&gt;And many other features such as metrics relabeling, cardinality limiter, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Enterprise version&lt;/h2&gt; 
&lt;p&gt;In addition, the Enterprise version includes extra features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Anomaly detection&lt;/strong&gt;: Automation and simplification of your alerting rules, covering complex anomalies found in metrics data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backup automation&lt;/strong&gt;: Automates regular backup procedures.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple retentions&lt;/strong&gt;: Reducing storage costs by specifying different retentions for different datasets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Downsampling&lt;/strong&gt;: Reducing storage costs and increasing performance for queries over historical data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stable releases&lt;/strong&gt; with long-term support lines (&lt;a href="https://docs.victoriametrics.com/victoriametrics/lts-releases/"&gt;LTS&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive support&lt;/strong&gt;: First-class consulting, feature requests and technical support provided by the core VictoriaMetrics dev team.&lt;/li&gt; 
 &lt;li&gt;Many other features, which you can read about on &lt;a href="https://docs.victoriametrics.com/victoriametrics/enterprise/"&gt;the Enterprise page&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="mailto:info@victoriametrics.com"&gt;Contact us&lt;/a&gt; if you need enterprise support for VictoriaMetrics. Or you can request a free trial license &lt;a href="https://victoriametrics.com/products/enterprise/trial/"&gt;here&lt;/a&gt;, downloaded Enterprise binaries are available at &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/releases/latest"&gt;Github Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We strictly apply security measures in everything we do. VictoriaMetrics has achieved security certifications for Database Software Development and Software-Based Monitoring Services. See &lt;a href="https://victoriametrics.com/security/"&gt;Security page&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;Some good benchmarks VictoriaMetrics achieved:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Minimal memory footprint&lt;/strong&gt;: handling millions of unique timeseries with &lt;a href="https://medium.com/@valyala/insert-benchmarks-with-inch-influxdb-vs-victoriametrics-e31a41ae2893"&gt;10x less RAM&lt;/a&gt; than InfluxDB, up to &lt;a href="https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f"&gt;7x less RAM&lt;/a&gt; than Prometheus, Thanos or Cortex.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Highly scalable and performance&lt;/strong&gt; for &lt;a href="https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b"&gt;data ingestion&lt;/a&gt; and &lt;a href="https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4"&gt;querying&lt;/a&gt;, &lt;a href="https://medium.com/@valyala/insert-benchmarks-with-inch-influxdb-vs-victoriametrics-e31a41ae2893"&gt;20x outperforms&lt;/a&gt; InfluxDB and TimescaleDB.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;High data compression&lt;/strong&gt;: &lt;a href="https://medium.com/@valyala/when-size-matters-benchmarking-victoriametrics-vs-timescale-and-influxdb-6035811952d4"&gt;70x more data points&lt;/a&gt; may be stored into limited storage than TimescaleDB, &lt;a href="https://valyala.medium.com/prometheus-vs-victoriametrics-benchmark-on-node-exporter-metrics-4ca29c75590f"&gt;7x less storage&lt;/a&gt; space is required than Prometheus, Thanos or Cortex.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reducing storage costs&lt;/strong&gt;: &lt;a href="https://docs.victoriametrics.com/victoriametrics/casestudies/#grammarly"&gt;10x more effective&lt;/a&gt; than Graphite according to the Grammarly case study.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A single-node VictoriaMetrics&lt;/strong&gt; can replace medium-sized clusters built with competing solutions such as Thanos, M3DB, Cortex, InfluxDB or TimescaleDB. See &lt;a href="https://medium.com/@valyala/comparing-thanos-to-victoriametrics-cluster-b193bea1683"&gt;VictoriaMetrics vs Thanos&lt;/a&gt;, &lt;a href="https://medium.com/@valyala/measuring-vertical-scalability-for-time-series-databases-in-google-cloud-92550d78d8ae"&gt;Measuring vertical scalability&lt;/a&gt;, &lt;a href="https://promcon.io/2019-munich/talks/remote-write-storage-wars/"&gt;Remote write storage wars - PromCon 2019&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Optimized for storage&lt;/strong&gt;: &lt;a href="https://medium.com/@valyala/high-cardinality-tsdb-benchmarks-victoriametrics-vs-timescaledb-vs-influxdb-13e6ee64dd6b"&gt;Works well with high-latency IO&lt;/a&gt; and low IOPS (HDD and network storage in AWS, Google Cloud, Microsoft Azure, etc.).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community and contributions&lt;/h2&gt; 
&lt;p&gt;Feel free asking any questions regarding VictoriaMetrics:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://slack.victoriametrics.com/"&gt;Slack Inviter&lt;/a&gt; and &lt;a href="https://victoriametrics.slack.com/"&gt;Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/VictoriaMetrics/"&gt;X (Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/company/victoriametrics/"&gt;Linkedin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/VictoriaMetrics/"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/VictoriaMetrics_en"&gt;Telegram-en&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/VictoriaMetrics_ru1"&gt;Telegram-ru&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mastodon.social/@victoriametrics/"&gt;Mastodon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you like VictoriaMetrics and want to contribute, then please &lt;a href="https://docs.victoriametrics.com/victoriametrics/contributing/"&gt;read these docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;VictoriaMetrics Logo&lt;/h2&gt; 
&lt;p&gt;The provided &lt;a href="https://github.com/VictoriaMetrics/VictoriaMetrics/raw/master/VM_logo.zip"&gt;ZIP file&lt;/a&gt; contains three folders with different logo orientations. Each folder includes the following file types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JPEG: Preview files&lt;/li&gt; 
 &lt;li&gt;PNG: Preview files with transparent background&lt;/li&gt; 
 &lt;li&gt;AI: Adobe Illustrator files&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;VictoriaMetrics Logo Usage Guidelines&lt;/h3&gt; 
&lt;h4&gt;Font&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Font Used: Lato Black&lt;/li&gt; 
 &lt;li&gt;Download here: &lt;a href="https://fonts.google.com/specimen/Lato"&gt;Lato Font&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Color Palette&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Black &lt;a href="https://www.color-hex.com/color/000000"&gt;#000000&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Purple &lt;a href="https://www.color-hex.com/color/4d0e82"&gt;#4d0e82&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Orange &lt;a href="https://www.color-hex.com/color/ff2e00"&gt;#ff2e00&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;White &lt;a href="https://www.color-hex.com/color/ffffff"&gt;#ffffff&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Logo Usage Rules&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Only use the Lato Black font as specified.&lt;/li&gt; 
 &lt;li&gt;Maintain sufficient clear space around the logo for visibility.&lt;/li&gt; 
 &lt;li&gt;Do not modify the spacing, alignment, or positioning of design elements.&lt;/li&gt; 
 &lt;li&gt;You may resize the logo as needed, but ensure all proportions remain intact.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thank you for your cooperation!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>minio/minio</title>
      <link>https://github.com/minio/minio</link>
      <description>&lt;p&gt;MinIO is a high-performance, S3 compatible object store, open sourced under GNU AGPLv3 license.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MinIO Quickstart Guide&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://slack.min.io"&gt;&lt;img src="https://slack.min.io/slack?type=svg" alt="Slack"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/minio/minio/"&gt;&lt;img src="https://img.shields.io/docker/pulls/minio/minio.svg?maxAge=604800" alt="Docker Pulls"&gt;&lt;/a&gt; &lt;a href="https://github.com/minio/minio/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-AGPL%20V3-blue" alt="license"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://min.io"&gt;&lt;img src="https://raw.githubusercontent.com/minio/minio/master/.github/logo.svg?sanitize=true" alt="MinIO"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MinIO is a high-performance, S3-compatible object storage solution released under the GNU AGPL v3.0 license. Designed for speed and scalability, it powers AI/ML, analytics, and data-intensive workloads with industry-leading performance.&lt;/p&gt; 
&lt;p&gt;üîπ S3 API Compatible ‚Äì Seamless integration with existing S3 tools üîπ Built for AI &amp;amp; Analytics ‚Äì Optimized for large-scale data pipelines üîπ High Performance ‚Äì Ideal for demanding storage workloads.&lt;/p&gt; 
&lt;p&gt;AI storage documentation (&lt;a href="https://min.io/solutions/object-storage-for-ai"&gt;https://min.io/solutions/object-storage-for-ai&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;This README provides quickstart instructions on running MinIO on bare metal hardware, including container-based installations. For Kubernetes environments, use the &lt;a href="https://github.com/minio/operator/raw/master/README.md"&gt;MinIO Kubernetes Operator&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Container Installation&lt;/h2&gt; 
&lt;p&gt;Use the following commands to run a standalone MinIO server as a container.&lt;/p&gt; 
&lt;p&gt;Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href="https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html"&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; 
&lt;h3&gt;Stable&lt;/h3&gt; 
&lt;p&gt;Run the following command to run the latest stable image of MinIO as a container using an ephemeral data volume:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;podman run -p 9000:9000 -p 9001:9001 \
  quay.io/minio/minio server /data --console-address ":9001"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; 
&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc"&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href="https://min.io/docs/minio/linux/developers/minio-drivers.html"&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] To deploy MinIO on with persistent storage, you must map local persistent directories from the host OS to the container using the &lt;code&gt;podman -v&lt;/code&gt; option. For example, &lt;code&gt;-v /mnt/data:/data&lt;/code&gt; maps the host OS drive at &lt;code&gt;/mnt/data&lt;/code&gt; to &lt;code&gt;/data&lt;/code&gt; on the container.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;macOS&lt;/h2&gt; 
&lt;p&gt;Use the following commands to run a standalone MinIO server on macOS.&lt;/p&gt; 
&lt;p&gt;Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href="https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html"&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; 
&lt;h3&gt;Homebrew (recommended)&lt;/h3&gt; 
&lt;p&gt;Run the following command to install the latest stable MinIO package using &lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt;. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install minio/stable/minio
minio server /data
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you previously installed minio using &lt;code&gt;brew install minio&lt;/code&gt; then it is recommended that you reinstall minio from &lt;code&gt;minio/stable/minio&lt;/code&gt; official repo instead.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew uninstall minio
brew install minio/stable/minio
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; 
&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc"&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href="https://min.io/docs/minio/linux/developers/minio-drivers.html/"&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html/&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; 
&lt;h3&gt;Binary Download&lt;/h3&gt; 
&lt;p&gt;Use the following command to download and run a standalone MinIO server on macOS. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget https://dl.min.io/server/minio/release/darwin-amd64/minio
chmod +x minio
./minio server /data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; 
&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc"&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href="https://min.io/docs/minio/linux/developers/minio-drivers.html"&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; 
&lt;h2&gt;GNU/Linux&lt;/h2&gt; 
&lt;p&gt;Use the following command to run a standalone MinIO server on Linux hosts running 64-bit Intel/AMD architectures. Replace &lt;code&gt;/data&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget https://dl.min.io/server/minio/release/linux-amd64/minio
chmod +x minio
./minio server /data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following table lists supported architectures. Replace the &lt;code&gt;wget&lt;/code&gt; URL with the architecture for your Linux host.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Architecture&lt;/th&gt; 
   &lt;th&gt;URL&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;64-bit Intel/AMD&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dl.min.io/server/minio/release/linux-amd64/minio"&gt;https://dl.min.io/server/minio/release/linux-amd64/minio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;64-bit ARM&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dl.min.io/server/minio/release/linux-arm64/minio"&gt;https://dl.min.io/server/minio/release/linux-arm64/minio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;64-bit PowerPC LE (ppc64le)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://dl.min.io/server/minio/release/linux-ppc64le/minio"&gt;https://dl.min.io/server/minio/release/linux-ppc64le/minio&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; 
&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc"&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href="https://min.io/docs/minio/linux/developers/minio-drivers.html"&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href="https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html#"&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Microsoft Windows&lt;/h2&gt; 
&lt;p&gt;To run MinIO on 64-bit Windows hosts, download the MinIO executable from the following URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;https://dl.min.io/server/minio/release/windows-amd64/minio.exe
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the following command to run a standalone MinIO server on the Windows host. Replace &lt;code&gt;D:\&lt;/code&gt; with the path to the drive or directory in which you want MinIO to store data. You must change the terminal or powershell directory to the location of the &lt;code&gt;minio.exe&lt;/code&gt; executable, &lt;em&gt;or&lt;/em&gt; add the path to that directory to the system &lt;code&gt;$PATH&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;minio.exe server D:\
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; 
&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc"&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href="https://min.io/docs/minio/linux/developers/minio-drivers.html"&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href="https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html#"&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Install from Source&lt;/h2&gt; 
&lt;p&gt;Use the following commands to compile and run a standalone MinIO server from source. Source installation is only intended for developers and advanced users. If you do not have a working Golang environment, please follow &lt;a href="https://golang.org/doc/install"&gt;How to install Golang&lt;/a&gt;. Minimum version required is &lt;a href="https://golang.org/dl/#stable"&gt;go1.24&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/minio/minio@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; 
&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool. See &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc"&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href="https://min.io/docs/minio/linux/developers/minio-drivers.html"&gt;https://min.io/docs/minio/linux/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Standalone MinIO servers are best suited for early development and evaluation. Certain features such as versioning, object locking, and bucket replication require distributed deploying MinIO with Erasure Coding. For extended development and production, deploy MinIO with Erasure Coding enabled - specifically, with a &lt;em&gt;minimum&lt;/em&gt; of 4 drives per MinIO server. See &lt;a href="https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html"&gt;MinIO Erasure Code Overview&lt;/a&gt; for more complete documentation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MinIO strongly recommends &lt;em&gt;against&lt;/em&gt; using compiled-from-source MinIO servers for production environments.&lt;/p&gt; 
&lt;h2&gt;Deployment Recommendations&lt;/h2&gt; 
&lt;h3&gt;Allow port access for Firewalls&lt;/h3&gt; 
&lt;p&gt;By default MinIO uses the port 9000 to listen for incoming connections. If your platform blocks the port by default, you may need to enable access to the port.&lt;/p&gt; 
&lt;h3&gt;ufw&lt;/h3&gt; 
&lt;p&gt;For hosts with ufw enabled (Debian based distros), you can use &lt;code&gt;ufw&lt;/code&gt; command to allow traffic to specific ports. Use below command to allow access to port 9000&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ufw allow 9000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Below command enables all incoming traffic to ports ranging from 9000 to 9010.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ufw allow 9000:9010/tcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;firewall-cmd&lt;/h3&gt; 
&lt;p&gt;For hosts with firewall-cmd enabled (CentOS), you can use &lt;code&gt;firewall-cmd&lt;/code&gt; command to allow traffic to specific ports. Use below commands to allow access to port 9000&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;firewall-cmd --get-active-zones
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command gets the active zone(s). Now, apply port rules to the relevant zones returned above. For example if the zone is &lt;code&gt;public&lt;/code&gt;, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;firewall-cmd --zone=public --add-port=9000/tcp --permanent
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] &lt;code&gt;permanent&lt;/code&gt; makes sure the rules are persistent across firewall start, restart or reload. Finally reload the firewall for changes to take effect.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;iptables&lt;/h3&gt; 
&lt;p&gt;For hosts with iptables enabled (RHEL, CentOS, etc), you can use &lt;code&gt;iptables&lt;/code&gt; command to enable all traffic coming to specific ports. Use below command to allow access to port 9000&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;iptables -A INPUT -p tcp --dport 9000 -j ACCEPT
service iptables restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Below command enables all incoming traffic to ports ranging from 9000 to 9010.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;iptables -A INPUT -p tcp --dport 9000:9010 -j ACCEPT
service iptables restart
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Test MinIO Connectivity&lt;/h2&gt; 
&lt;h3&gt;Test using MinIO Console&lt;/h3&gt; 
&lt;p&gt;MinIO Server comes with an embedded web based object browser. Point your web browser to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; to ensure your server has started successfully.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] MinIO runs console on random port by default, if you wish to choose a specific port use &lt;code&gt;--console-address&lt;/code&gt; to pick a specific interface and port.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Things to consider&lt;/h3&gt; 
&lt;p&gt;MinIO redirects browser access requests to the configured server port (i.e. &lt;code&gt;127.0.0.1:9000&lt;/code&gt;) to the configured Console port. MinIO uses the hostname or IP address specified in the request when building the redirect URL. The URL and port &lt;em&gt;must&lt;/em&gt; be accessible by the client for the redirection to work.&lt;/p&gt; 
&lt;p&gt;For deployments behind a load balancer, proxy, or ingress rule where the MinIO host IP address or port is not public, use the &lt;code&gt;MINIO_BROWSER_REDIRECT_URL&lt;/code&gt; environment variable to specify the external hostname for the redirect. The LB/Proxy must have rules for directing traffic to the Console port specifically.&lt;/p&gt; 
&lt;p&gt;For example, consider a MinIO deployment behind a proxy &lt;code&gt;https://minio.example.net&lt;/code&gt;, &lt;code&gt;https://console.minio.example.net&lt;/code&gt; with rules for forwarding traffic on port :9000 and :9001 to MinIO and the MinIO Console respectively on the internal network. Set &lt;code&gt;MINIO_BROWSER_REDIRECT_URL&lt;/code&gt; to &lt;code&gt;https://console.minio.example.net&lt;/code&gt; to ensure the browser receives a valid reachable URL.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dashboard&lt;/th&gt; 
   &lt;th&gt;Creating a bucket&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://github.com/minio/minio/raw/master/docs/screenshots/pic1.png?raw=true" alt="Dashboard"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://github.com/minio/minio/raw/master/docs/screenshots/pic2.png?raw=true" alt="Dashboard"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;mc&lt;/code&gt; provides a modern alternative to UNIX commands like ls, cat, cp, mirror, diff etc. It supports filesystems and Amazon S3 compatible cloud storage services. Follow the MinIO Client &lt;a href="https://min.io/docs/minio/linux/reference/minio-mc.html#quickstart"&gt;Quickstart Guide&lt;/a&gt; for further instructions.&lt;/p&gt; 
&lt;h2&gt;Upgrading MinIO&lt;/h2&gt; 
&lt;p&gt;Upgrades require zero downtime in MinIO, all upgrades are non-disruptive, all transactions on MinIO are atomic. So upgrading all the servers simultaneously is the recommended way to upgrade MinIO.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] requires internet access to update directly from &lt;a href="https://dl.min.io"&gt;https://dl.min.io&lt;/a&gt;, optionally you can host any mirrors at &lt;a href="https://my-artifactory.example.com/minio/"&gt;https://my-artifactory.example.com/minio/&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;For deployments that installed the MinIO server binary by hand, use &lt;a href="https://min.io/docs/minio/linux/reference/minio-mc-admin/mc-admin-update.html"&gt;&lt;code&gt;mc admin update&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mc admin update &amp;lt;minio alias, e.g., myminio&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;For deployments without external internet access (e.g. airgapped environments), download the binary from &lt;a href="https://dl.min.io"&gt;https://dl.min.io&lt;/a&gt; and replace the existing MinIO binary let's say for example &lt;code&gt;/opt/bin/minio&lt;/code&gt;, apply executable permissions &lt;code&gt;chmod +x /opt/bin/minio&lt;/code&gt; and proceed to perform &lt;code&gt;mc admin service restart alias/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;For installations using Systemd MinIO service, upgrade via RPM/DEB packages &lt;strong&gt;parallelly&lt;/strong&gt; on all servers or replace the binary lets say &lt;code&gt;/opt/bin/minio&lt;/code&gt; on all nodes, apply executable permissions &lt;code&gt;chmod +x /opt/bin/minio&lt;/code&gt; and process to perform &lt;code&gt;mc admin service restart alias/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Upgrade Checklist&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Test all upgrades in a lower environment (DEV, QA, UAT) before applying to production. Performing blind upgrades in production environments carries significant risk.&lt;/li&gt; 
 &lt;li&gt;Read the release notes for MinIO &lt;em&gt;before&lt;/em&gt; performing any upgrade, there is no forced requirement to upgrade to latest release upon every release. Some release may not be relevant to your setup, avoid upgrading production environments unnecessarily.&lt;/li&gt; 
 &lt;li&gt;If you plan to use &lt;code&gt;mc admin update&lt;/code&gt;, MinIO process must have write access to the parent directory where the binary is present on the host system.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mc admin update&lt;/code&gt; is not supported and should be avoided in kubernetes/container environments, please upgrade containers by upgrading relevant container images.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;We do not recommend upgrading one MinIO server at a time, the product is designed to support parallel upgrades please follow our recommended guidelines.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Explore Further&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://min.io/docs/minio/linux/operations/concepts/erasure-coding.html"&gt;MinIO Erasure Code Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://min.io/docs/minio/linux/reference/minio-mc.html"&gt;Use &lt;code&gt;mc&lt;/code&gt; with MinIO Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://min.io/docs/minio/linux/developers/go/minio-go.html"&gt;Use &lt;code&gt;minio-go&lt;/code&gt; SDK with MinIO Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://min.io/docs/minio/linux/index.html"&gt;The MinIO documentation website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute to MinIO Project&lt;/h2&gt; 
&lt;p&gt;Please follow MinIO &lt;a href="https://github.com/minio/minio/raw/master/CONTRIBUTING.md"&gt;Contributor's Guide&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MinIO source is licensed under the &lt;a href="https://github.com/minio/minio/raw/master/LICENSE"&gt;GNU AGPLv3&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;MinIO &lt;a href="https://github.com/minio/minio/tree/master/docs"&gt;documentation&lt;/a&gt; is licensed under &lt;a href="https://creativecommons.org/licenses/by/4.0/"&gt;CC BY 4.0&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/minio/raw/master/COMPLIANCE.md"&gt;License Compliance&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>grpc/grpc-go</title>
      <link>https://github.com/grpc/grpc-go</link>
      <description>&lt;p&gt;The Go language implementation of gRPC. HTTP/2 based RPC&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gRPC-Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/google.golang.org/grpc"&gt;&lt;img src="https://pkg.go.dev/badge/google.golang.org/grpc" alt="GoDoc"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/grpc/grpc-go"&gt;&lt;img src="https://goreportcard.com/badge/grpc/grpc-go" alt="GoReportCard"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/grpc/grpc-go"&gt;&lt;img src="https://codecov.io/gh/grpc/grpc-go/graph/badge.svg?sanitize=true" alt="codecov"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://golang.org"&gt;Go&lt;/a&gt; implementation of &lt;a href="https://grpc.io"&gt;gRPC&lt;/a&gt;: A high performance, open source, general RPC framework that puts mobile and HTTP/2 first. For more information see the &lt;a href="https://grpc.io/docs/languages/go"&gt;Go gRPC docs&lt;/a&gt;, or jump directly into the &lt;a href="https://grpc.io/docs/languages/go/quickstart"&gt;quick start&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://golang.org"&gt;Go&lt;/a&gt;&lt;/strong&gt;: any one of the &lt;strong&gt;two latest major&lt;/strong&gt; &lt;a href="https://golang.org/doc/devel/release.html"&gt;releases&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Simply add the following import to your code, and then &lt;code&gt;go [build|run|test]&lt;/code&gt; will automatically fetch the necessary dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "google.golang.org/grpc"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are trying to access &lt;code&gt;grpc-go&lt;/code&gt; from &lt;strong&gt;China&lt;/strong&gt;, see the &lt;a href="https://raw.githubusercontent.com/grpc/grpc-go/master/#FAQ"&gt;FAQ&lt;/a&gt; below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Learn more&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://grpc.io/docs/languages/go"&gt;Go gRPC docs&lt;/a&gt;, which include a &lt;a href="https://grpc.io/docs/languages/go/quickstart"&gt;quick start&lt;/a&gt; and &lt;a href="https://pkg.go.dev/google.golang.org/grpc"&gt;API reference&lt;/a&gt; among other resources&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/grpc/grpc-go/master/Documentation"&gt;Low-level technical docs&lt;/a&gt; from this repository&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://performance-dot-grpc-testing.appspot.com/explore?dashboard=5180705743044608"&gt;Performance benchmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/grpc/grpc-go/master/examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/grpc/grpc-go/master/CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;I/O Timeout Errors&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;golang.org&lt;/code&gt; domain may be blocked from some countries. &lt;code&gt;go get&lt;/code&gt; usually produces an error like the following when this happens:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ go get -u google.golang.org/grpc
package google.golang.org/grpc: unrecognized import path "google.golang.org/grpc" (https fetch: Get https://google.golang.org/grpc?go-get=1: dial tcp 216.239.37.1:443: i/o timeout)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build Go code, there are several options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Set up a VPN and access google.golang.org through that.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;With Go module support: it is possible to use the &lt;code&gt;replace&lt;/code&gt; feature of &lt;code&gt;go mod&lt;/code&gt; to create aliases for golang.org packages. In your project's directory:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;go mod edit -replace=google.golang.org/grpc=github.com/grpc/grpc-go@latest
go mod tidy
go mod vendor
go build -mod=vendor
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Again, this will need to be done for all transitive dependencies hosted on golang.org as well. For details, refer to &lt;a href="https://github.com/golang/go/issues/28652"&gt;golang/go issue #28652&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Compiling error, undefined: grpc.SupportPackageIsVersion&lt;/h3&gt; 
&lt;p&gt;Please update to the latest version of gRPC-Go using &lt;code&gt;go get google.golang.org/grpc&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;How to turn on logging&lt;/h3&gt; 
&lt;p&gt;The default logger is controlled by environment variables. Turn everything on like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ export GRPC_GO_LOG_VERBOSITY_LEVEL=99
$ export GRPC_GO_LOG_SEVERITY_LEVEL=info
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;The RPC failed with error &lt;code&gt;"code = Unavailable desc = transport is closing"&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This error means the connection the RPC is using was closed, and there are many possible reasons, including:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;mis-configured transport credentials, connection failed on handshaking&lt;/li&gt; 
 &lt;li&gt;bytes disrupted, possibly by a proxy in between&lt;/li&gt; 
 &lt;li&gt;server shutdown&lt;/li&gt; 
 &lt;li&gt;Keepalive parameters caused connection shutdown, for example if you have configured your server to terminate connections regularly to &lt;a href="https://github.com/grpc/grpc-go/issues/3170#issuecomment-552517779"&gt;trigger DNS lookups&lt;/a&gt;. If this is the case, you may want to increase your &lt;a href="https://pkg.go.dev/google.golang.org/grpc/keepalive?tab=doc#ServerParameters"&gt;MaxConnectionAgeGrace&lt;/a&gt;, to allow longer RPC calls to finish.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;It can be tricky to debug this because the error happens on the client side but the root cause of the connection being closed is on the server side. Turn on logging on &lt;strong&gt;both client and server&lt;/strong&gt;, and see if there are any transport errors.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes-sigs/gateway-api</title>
      <link>https://github.com/kubernetes-sigs/gateway-api</link>
      <description>&lt;p&gt;Repository for the next iteration of composite service (e.g. Ingress) and load balancing APIs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes Gateway API&lt;/h1&gt; 
&lt;p&gt;The Gateway API is a part of &lt;a href="https://github.com/kubernetes/community/tree/master/sig-network"&gt;SIG Network&lt;/a&gt;, and this repository contains the specification and Custom Resource Definitions (CRDs).&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;The latest supported version is &lt;code&gt;v1&lt;/code&gt; as released by the &lt;a href="https://github.com/kubernetes-sigs/gateway-api/releases/tag/v1.3.0"&gt;v1.3.0 release&lt;/a&gt; of this project.&lt;/p&gt; 
&lt;p&gt;This version of the API is has GA level support for the following resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v1.GatewayClass&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.Gateway&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.HTTPRoute&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.GRPCRoute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For all the other APIs and their support levels please consult &lt;a href="https://gateway-api.sigs.k8s.io/reference/spec/"&gt;the spec&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;h3&gt;Website&lt;/h3&gt; 
&lt;p&gt;The API specification and detailed documentation is available on the project website: &lt;a href="https://gateway-api.sigs.k8s.io/"&gt;https://gateway-api.sigs.k8s.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Concepts&lt;/h3&gt; 
&lt;p&gt;To get started, please read through &lt;a href="https://gateway-api.sigs.k8s.io/concepts/api-overview"&gt;API concepts&lt;/a&gt; and &lt;a href="https://gateway-api.sigs.k8s.io/concepts/security-model"&gt;Security model&lt;/a&gt;. These documents give the necessary background to understand the API and the use-cases it targets.&lt;/p&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;p&gt;Once you have a good understanding of the API at a higher-level, check out &lt;a href="https://gateway-api.sigs.k8s.io/guides/"&gt;getting started&lt;/a&gt; to install your first Gateway controller and try out one of the guides.&lt;/p&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;For a complete API reference, please refer to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gateway-api.sigs.k8s.io/reference/spec/"&gt;API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/sigs.k8s.io/gateway-api"&gt;Go docs for the package&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Gateway API conformance&lt;/h2&gt; 
&lt;p&gt;If you are developing a Gateway API implementation and want to run conformance tests against your project and eventually submit the proof of conformance, visit the &lt;a href="https://gateway-api.sigs.k8s.io/concepts/conformance/"&gt;conformance documentation&lt;/a&gt; for the test suite documentation, and the conformance reports &lt;a href="https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/conformance/reports/README.md"&gt;readme&lt;/a&gt; to see the reports submission rules. If you are a user who wants to explore the features supported by the various implementations, navigate the &lt;a href="https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/conformance/reports/"&gt;conformance reports&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Community meeting schedule, notes and developer guide can be found on the &lt;a href="https://gateway-api.sigs.k8s.io/contributing/community"&gt;community page&lt;/a&gt;. Our Kubernetes Slack channel is &lt;a href="https://kubernetes.slack.com/messages/sig-network-gateway-api"&gt;#sig-network-gateway-api&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;Participation in the Kubernetes community is governed by the &lt;a href="https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/code-of-conduct.md"&gt;Kubernetes Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>netbirdio/netbird</title>
      <link>https://github.com/netbirdio/netbird</link>
      <description>&lt;p&gt;Connect your devices into a secure WireGuard¬Æ-based overlay network with SSO, MFA and granular access controls.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;p align="center"&gt; &lt;img width="234" src="https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png"&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://img.shields.io/badge/license-BSD--3-blue)"&gt; &lt;img src="https://sonarcloud.io/api/project_badges/measure?project=netbirdio_netbird&amp;amp;metric=alert_status"&gt; &lt;/a&gt; &lt;a href="https://github.com/netbirdio/netbird/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-BSD--3-blue"&gt; &lt;/a&gt; &lt;br&gt; &lt;a href="https://docs.netbird.io/slack-url"&gt; &lt;img src="https://img.shields.io/badge/slack-@netbird-red.svg?logo=slack"&gt; &lt;/a&gt; &lt;a href="https://forum.netbird.io"&gt; &lt;img src="https://img.shields.io/badge/community%20forum-@netbird-red.svg?logo=discourse"&gt; &lt;/a&gt; &lt;br&gt; &lt;a href="https://gurubase.io/g/netbird"&gt; &lt;img src="https://img.shields.io/badge/Gurubase-Ask%20NetBird%20Guru-006BFF"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt; Start using NetBird at &lt;a href="https://netbird.io/pricing"&gt;netbird.io&lt;/a&gt; &lt;br&gt; See &lt;a href="https://netbird.io/docs/"&gt;Documentation&lt;/a&gt; &lt;br&gt; Join our &lt;a href="https://docs.netbird.io/slack-url"&gt;Slack channel&lt;/a&gt; or our &lt;a href="https://forum.netbird.io"&gt;Community forum&lt;/a&gt; &lt;br&gt; &lt;/strong&gt; &lt;br&gt; &lt;a href="https://registry.terraform.io/providers/netbirdio/netbird/latest"&gt; New: NetBird terraform provider &lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p&gt;&lt;strong&gt;NetBird combines a configuration-free peer-to-peer private network and a centralized access control system in a single platform, making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Connect.&lt;/strong&gt; NetBird creates a WireGuard-based overlay network that automatically connects your machines over an encrypted tunnel, leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Secure.&lt;/strong&gt; NetBird enables secure remote access by applying granular access policies while allowing you to manage them intuitively from a single place. Works universally on any infrastructure.&lt;/p&gt; 
&lt;h3&gt;Open Source Network Security in a Single Platform&lt;/h3&gt; 
&lt;img width="1188" alt="centralized-network-management 1" src="https://github.com/user-attachments/assets/c28cc8e4-15d2-4d2f-bb97-a6433db39d56"&gt; 
&lt;h3&gt;NetBird on Lawrence Systems (Video)&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Kwrff6h0rEw"&gt;&lt;img src="https://img.youtube.com/vi/Kwrff6h0rEw/0.jpg" alt="Watch the video"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Connectivity&lt;/th&gt; 
   &lt;th&gt;Management&lt;/th&gt; 
   &lt;th&gt;Security&lt;/th&gt; 
   &lt;th&gt;Automation&lt;/th&gt; 
   &lt;th&gt;Platforms&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Kernel WireGuard&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://github.com/netbirdio/dashboard"&gt;Admin Web UI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/installation#running-net-bird-with-sso-login"&gt;SSO &amp;amp; MFA support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/api"&gt;Public API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Linux&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer connections&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Auto peer discovery and configuration&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-network-access"&gt;Access control - groups &amp;amp; rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/register-machines-using-setup-keys"&gt;Setup keys for bulk network provisioning&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Mac&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Connection relay fallback&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/identity-providers"&gt;IdP integrations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/audit-events-logging"&gt;Activity logging&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-quickstart"&gt;Self-hosting quickstart script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Windows&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/routing-traffic-to-private-networks"&gt;Routes to external networks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-dns-in-your-network"&gt;Private DNS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-posture-checks"&gt;Device posture checks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] IdP groups sync with JWT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Android&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] NAT traversal with BPF&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/add-users-to-your-network"&gt;Multiuser support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer encryption&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] iOS&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://netbird.io/knowledge-hub/the-first-quantum-resistant-mesh-vpn"&gt;Quantum-resistance with Rosenpass&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] OpenWRT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/enforce-periodic-user-authentication"&gt;Periodic re-authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/netbird-on-faas"&gt;Serverless&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Docker&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstart with NetBird Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install NetBird at &lt;a href="https://app.netbird.io/install"&gt;https://app.netbird.io/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the steps to sign-up with Google, Microsoft, GitHub or your email address.&lt;/li&gt; 
 &lt;li&gt;Check NetBird &lt;a href="https://app.netbird.io/"&gt;admin UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add more machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart with self-hosted NetBird&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to try self-hosted NetBird. It should take around 5 minutes to get started if you already have a public domain and a VM. Follow the &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-guide#advanced-guide-with-a-custom-identity-provider"&gt;Advanced guide with a custom identity provider&lt;/a&gt; for installations with different IDPs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Infrastructure requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Linux VM with at least &lt;strong&gt;1CPU&lt;/strong&gt; and &lt;strong&gt;2GB&lt;/strong&gt; of memory.&lt;/li&gt; 
 &lt;li&gt;The VM should be publicly accessible on TCP ports &lt;strong&gt;80&lt;/strong&gt; and &lt;strong&gt;443&lt;/strong&gt; and UDP ports: &lt;strong&gt;3478&lt;/strong&gt;, &lt;strong&gt;49152-65535&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Public domain&lt;/strong&gt; name pointing to the VM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Software requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker installed on the VM with the docker-compose plugin (&lt;a href="https://docs.docker.com/engine/install/"&gt;Docker installation guide&lt;/a&gt;) or docker with docker-compose in version 2 or higher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jqlang.github.io/jq/"&gt;jq&lt;/a&gt; installed. In most distributions Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install jq&lt;/code&gt; or &lt;code&gt;sudo yum install jq&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://curl.se/"&gt;curl&lt;/a&gt; installed. Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install curl&lt;/code&gt; or &lt;code&gt;sudo yum install curl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and run the installation script:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export NETBIRD_DOMAIN=netbird.example.com; curl -fsSL https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once finished, you can manage the resources via &lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every machine in the network runs &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/client/"&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; 
 &lt;li&gt;Every agent connects to &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/management/"&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to agents (peers).&lt;/li&gt; 
 &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href="https://github.com/pion/ice"&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; 
 &lt;li&gt;Connection candidates are discovered with the help of &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;STUN&lt;/a&gt; servers.&lt;/li&gt; 
 &lt;li&gt;Agents negotiate a connection through &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/signal/"&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages with candidates.&lt;/li&gt; 
 &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and a p2p connection isn't possible. When this occurs the system falls back to a relay server called &lt;a href="https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT"&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://docs.netbird.io/docs-static/img/architecture/high-level-dia.png" width="700"&gt; &lt;/p&gt; 
&lt;p&gt;See a complete &lt;a href="https://docs.netbird.io/about-netbird/how-netbird-works#architecture"&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Community projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/physk/netbird-installer"&gt;NetBird installer script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://galaxy.ansible.com/ui/repo/published/dominion_solutions/netbird/"&gt;NetBird ansible collection by Dominion Solutions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href="https://github.com/netbirdio/netbird/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support acknowledgement&lt;/h3&gt; 
&lt;p&gt;In November 2022, NetBird joined the &lt;a href="https://www.forschung-it-sicherheit-kommunikationssysteme.de/foerderung/bekanntmachungen/startup-secure"&gt;StartUpSecure program&lt;/a&gt; sponsored by The Federal Ministry of Education and Research of The Federal Republic of Germany. Together with &lt;a href="https://cispa.de/en"&gt;CISPA Helmholtz Center for Information Security&lt;/a&gt; NetBird brings the security best practices and simplicity to private networking.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/700848/203091324-c6d311a0-22b5-4b05-a288-91cbc6cdcc46.png" alt="CISPA_Logo_BLACK_EN_RZ_RGB (1)"&gt;&lt;/p&gt; 
&lt;h3&gt;Testimonials&lt;/h3&gt; 
&lt;p&gt;We use open-source technologies like &lt;a href="https://www.wireguard.com/"&gt;WireGuard¬Æ&lt;/a&gt;, &lt;a href="https://github.com/pion/ice"&gt;Pion ICE (WebRTC)&lt;/a&gt;, &lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt;, and &lt;a href="https://rosenpass.eu"&gt;Rosenpass&lt;/a&gt;. We very much appreciate the work these guys are doing and we'd greatly appreciate if you could support them in any way (e.g., by giving a star or a contribution).&lt;/p&gt; 
&lt;h3&gt;Legal&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;WireGuard&lt;/em&gt; and the &lt;em&gt;WireGuard&lt;/em&gt; logo are &lt;a href="https://www.wireguard.com/trademark-policy/"&gt;registered trademarks&lt;/a&gt; of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>opencost/opencost</title>
      <link>https://github.com/opencost/opencost</link>
      <description>&lt;p&gt;Cost monitoring for Kubernetes workloads and cloud costs&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License"&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/6219"&gt;&lt;img src="https://www.bestpractices.dev/projects/6219/badge" alt="OpenSSF Best Practices"&gt;&lt;/a&gt; &lt;a href="https://gurubase.io/g/opencost"&gt;&lt;img src="https://img.shields.io/badge/Gurubase-Ask%20OpenCost%20Guru-006BFF" alt="Gurubase"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/opencost/opencost/develop/opencost-header.png" alt=""&gt;&lt;/p&gt; 
&lt;h1&gt;OpenCost ‚Äî your favorite open source cost monitoring tool for Kubernetes and cloud spend&lt;/h1&gt; 
&lt;p&gt;OpenCost give teams visibility into current and historical Kubernetes and cloud spend and resource allocation. These models provide cost transparency in Kubernetes environments that support multiple applications, teams, departments, etc. It also provides visibility into the cloud costs across multiple providers.&lt;/p&gt; 
&lt;p&gt;OpenCost was originally developed and open sourced by &lt;a href="https://kubecost.com"&gt;Kubecost&lt;/a&gt;. This project combines a &lt;a href="https://raw.githubusercontent.com/opencost/opencost/develop/spec/"&gt;specification&lt;/a&gt; as well as a Golang implementation of these detailed requirements. The web UI is available in the &lt;a href="http://github.com/opencost/opencost-ui"&gt;opencost/opencost-ui&lt;/a&gt; repository.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/lCP4Ci9Kcdg"&gt;&lt;img src="https://raw.githubusercontent.com/opencost/opencost/develop/ui/src/thumbnail.png" alt="OpenCost UI Walkthrough"&gt;&lt;/a&gt; &lt;em&gt;OpenCost UI Walkthrough&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;To see the full functionality of OpenCost you can view &lt;a href="https://opencost.io"&gt;OpenCost features&lt;/a&gt;. Here is a summary of features enabled:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Real-time cost allocation by Kubernetes cluster, node, namespace, controller kind, controller, service, or pod&lt;/li&gt; 
 &lt;li&gt;Multi-cloud cost monitoring for all cloud services on AWS, Azure, GCP&lt;/li&gt; 
 &lt;li&gt;Dynamic on-demand k8s asset pricing enabled by integrations with AWS, Azure, and GCP billing APIs&lt;/li&gt; 
 &lt;li&gt;Supports on-prem k8s clusters with custom CSV pricing&lt;/li&gt; 
 &lt;li&gt;Allocation for in-cluster K8s resources like CPU, GPU, memory, and persistent volumes&lt;/li&gt; 
 &lt;li&gt;Easily export pricing data to Prometheus with /metrics endpoint (&lt;a href="https://www.opencost.io/docs/installation/prometheus"&gt;learn more&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Carbon costs for cloud resources&lt;/li&gt; 
 &lt;li&gt;Support for external costs like Datadog through &lt;a href="https://github.com/opencost/opencost-plugins"&gt;OpenCost Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Free and open source distribution (&lt;a href="https://raw.githubusercontent.com/opencost/opencost/develop/LICENSE"&gt;Apache2 license&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can deploy OpenCost on any Kubernetes 1.20+ cluster in a matter of minutes, if not seconds!&lt;/p&gt; 
&lt;p&gt;Visit the full documentation for &lt;a href="https://www.opencost.io/docs/installation/install"&gt;recommended installation options&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.opencost.io/docs/integrations/api"&gt;Cost APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.opencost.io/docs/integrations/kubectl-cost"&gt;CLI / kubectl cost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.opencost.io/docs/integrations/prometheus"&gt;Prometheus Metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.opencost.io/docs/installation/ui"&gt;User Interface&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We &lt;span&gt;‚ù§Ô∏è&lt;/span&gt; pull requests! See &lt;a href="https://raw.githubusercontent.com/opencost/opencost/develop/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING.md&lt;/code&gt;&lt;/a&gt; for information on building the project from source and contributing changes.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;If you need any support or have any questions on contributing to the project, you can reach us on &lt;a href="https://slack.cncf.io/"&gt;CNCF Slack&lt;/a&gt; in the &lt;a href="https://cloud-native.slack.com/archives/C03D56FPD4G"&gt;#opencost&lt;/a&gt; channel or attend the biweekly &lt;a href="https://bit.ly/opencost-meeting"&gt;OpenCost Working Group community meeting&lt;/a&gt; from the &lt;a href="https://bit.ly/opencost-calendar"&gt;Community Calendar&lt;/a&gt; to discuss OpenCost development.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;You can view &lt;a href="https://www.opencost.io/docs/FAQ"&gt;OpenCost documentation&lt;/a&gt; for a list of commonly asked questions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aaPanel/BillionMail</title>
      <link>https://github.com/aaPanel/BillionMail</link>
      <description>&lt;p&gt;BillionMail gives you open-source MailServer, NewsLetter, Email Marketing ‚Äî fully self-hosted, dev-friendly, and free from monthly fees. Join the discord: https://discord.gg/asfXzBUhZr&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a name="readme-top"&gt;&lt;/a&gt; 
 &lt;h1&gt;&lt;a href="https://www.billionmail.com/" target="_blank"&gt;BillionMail üìß&lt;/a&gt;&lt;/h1&gt; 
 &lt;h2&gt;An Open-Source MailServer, NewsLetter, Email Marketing Solution for Smarter Campaigns&lt;/h2&gt; 
 &lt;p&gt;&lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;&lt;img src="https://img.shields.io/github/license/aaPanel/BillionMail" alt=""&gt;&lt;/a&gt; &lt;a href="https://www.billionmail.com/"&gt;&lt;img src="https://img.shields.io/badge/documentation-148F76" alt=""&gt;&lt;/a&gt; &lt;a href="https://github.com/aaPanel/BillionMail/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/aaPanel/BillionMail" alt=""&gt;&lt;/a&gt; &lt;a href="https://github.com/aaPanel/BillionMail"&gt;&lt;img src="https://img.shields.io/github/stars/aaPanel/BillionMail?color=%231890FF&amp;amp;style=flat-square%C2%A0%C2%A0%C2%A0" alt=""&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/aaPanel/BillionMail/dev/README-zh_CN.md"&gt;ÁÆÄ‰Ωì‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/aaPanel/BillionMail/dev/README-ja.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;br&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/13842" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13842" alt="aaPanel%2FBillionMail | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is BillionMail?&lt;/h2&gt; 
&lt;p&gt;BillionMail is a &lt;strong&gt;future open-source Mail server, Email marketing platform&lt;/strong&gt; designed to help businesses and individuals manage their email campaigns with ease. Whether you're sending newsletters, promotional emails, or transactional messages, this tool will provide &lt;strong&gt;full control&lt;/strong&gt; over your email marketing efforts. With features like &lt;strong&gt;advanced analytics&lt;/strong&gt;, and &lt;strong&gt;customer management&lt;/strong&gt;, you'll be able to create, send, and track emails like a pro.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://www.billionmail.com/home.png?v1" alt="BillionMail Banner"&gt;&lt;/p&gt; 
&lt;h1&gt;Just 3 steps to send a billion emails!&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Billion emails. Any business. Guaranteed.&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;Step 1Ô∏è‚É£ Install BillionMail:&lt;/h3&gt; 
&lt;p&gt;‚úÖ It takes &lt;strong&gt;only 8Ô∏è‚É£ minutes&lt;/strong&gt; from installation to &lt;strong&gt;‚úÖ successful email sending&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; bash install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Step 2Ô∏è‚É£: Connect Your Domain&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add the sending domain&lt;/li&gt; 
 &lt;li&gt;Verify DNS records&lt;/li&gt; 
 &lt;li&gt;Auto-enable free SSL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Step 3Ô∏è‚É£: Build Your Campaign&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Write or paste your email&lt;/li&gt; 
 &lt;li&gt;Choose list &amp;amp; tags&lt;/li&gt; 
 &lt;li&gt;Set send time or send now&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.youtube.com/embed/UHgxZa_9jGs?si=0-f1B5hDtcWImvQv" target="_blank"&gt; &lt;img src="https://img.youtube.com/vi/UHgxZa_9jGs/maxresdefault.jpg" alt="" width="80%"&gt; &lt;br&gt; &lt;img src="https://www.iconfinder.com/icons/317714/download/png/16" alt="YouTube" width="16"&gt; &lt;b&gt;Watch on Youtube&lt;/b&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;Other installation methods&lt;/h2&gt; 
&lt;h3&gt;One-click installation on aaPanel&lt;/h3&gt; 
&lt;p&gt;üëâ &lt;a href="https://www.aapanel.com/new/download.html"&gt;https://www.aapanel.com/new/download.html&lt;/a&gt; (Log in to ‚úÖaaPanel --&amp;gt; üê≥Docker --&amp;gt; 1Ô∏è‚É£OneClick install)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; cp env_init .env &amp;amp;&amp;amp; docker compose up -d || docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Management script&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Management help&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm help&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;View Login default info&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm default&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Show domain DNS record&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm show-record&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Update BillionMail&lt;/p&gt; &lt;p&gt;&lt;code&gt;bm update&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Live Demo&lt;/h2&gt; 
&lt;p&gt;BillionMail Demo: &lt;a href="https://demo.billionmail.com/billionmail"&gt;https://demo.billionmail.com/billionmail&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Username: &lt;code&gt;billionmail&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Password: &lt;code&gt;billionmail&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;WebMail&lt;/h2&gt; 
&lt;p&gt;BillionMail has integrated &lt;strong&gt;RoundCube&lt;/strong&gt;, you can access WebMail via &lt;code&gt;/roundcube/&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Why BillionMail?&lt;/h2&gt; 
&lt;p&gt;Most email marketing platforms are either &lt;strong&gt;expensive&lt;/strong&gt;, &lt;strong&gt;closed-source&lt;/strong&gt;, or &lt;strong&gt;lack essential features&lt;/strong&gt;. BillionMail aims to be different:&lt;/p&gt; 
&lt;p&gt;‚úÖ &lt;strong&gt;Fully Open-Source&lt;/strong&gt; ‚Äì No hidden costs, no vendor lock-in.&lt;br&gt; üìä &lt;strong&gt;Advanced Analytics&lt;/strong&gt; ‚Äì Track email delivery, open rates, click-through rates, and more.&lt;br&gt; üìß &lt;strong&gt;Unlimited Sending&lt;/strong&gt; ‚Äì No restrictions on the number of emails you can send.&lt;br&gt; üé® &lt;strong&gt;Customizable Templates&lt;/strong&gt; ‚Äì Custom professional marketing templates for reuse. üîí &lt;strong&gt;Privacy-First&lt;/strong&gt; ‚Äì Your data stays with you, no third-party tracking.&lt;br&gt; üöÄ &lt;strong&gt;Self-Hosted&lt;/strong&gt; ‚Äì Run it on your own server for complete control.&lt;/p&gt; 
&lt;h2&gt;How You Can Help üåü&lt;/h2&gt; 
&lt;p&gt;BillionMail is a &lt;strong&gt;community-driven project&lt;/strong&gt;, and we need your support to get started! Here's how you can help:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Star This Repository&lt;/strong&gt;: Show your interest by starring this repo.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Spread the Word&lt;/strong&gt;: Share BillionMail with your network‚Äîdevelopers, marketers, and open-source enthusiasts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Share Feedback&lt;/strong&gt;: Let us know what features you'd like to see in BillionMail by opening an issue or joining the discussion.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Contribute&lt;/strong&gt;: Once development begins, we'll welcome contributions from the community. Stay tuned for updates!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr&gt; 
&lt;p&gt;üìß &lt;strong&gt;BillionMail ‚Äì The Future of Open-Source Email Marketing.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Issues&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues or have feature requests, please &lt;a href="https://github.com/aaPanel/BillionMail/issues"&gt;open an issue&lt;/a&gt;. Be sure to include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A clear description of the problem or request.&lt;/li&gt; 
 &lt;li&gt;Steps to reproduce the issue (if applicable).&lt;/li&gt; 
 &lt;li&gt;Screenshots or error logs (if applicable).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install Now:&lt;/h2&gt; 
&lt;p&gt;‚úÖIt takes &lt;strong&gt;only 8 minutes&lt;/strong&gt; from installation to &lt;strong&gt;successful email sending&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; bash install.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Install with Docker:&lt;/strong&gt; (Please install Docker and docker-compose-plugin manually, and modify .env file)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd /opt &amp;amp;&amp;amp; git clone https://github.com/aaPanel/BillionMail &amp;amp;&amp;amp; cd BillionMail &amp;amp;&amp;amp; cp env_init .env &amp;amp;&amp;amp; docker compose up -d || docker-compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#aapanel/billionmail&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=aapanel/billionmail&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;BillionMail is licensed under the &lt;strong&gt;AGPLv3 License&lt;/strong&gt;. This means you can:&lt;/p&gt; 
&lt;p&gt;‚úÖ Use the software for free.&lt;br&gt; ‚úÖ Modify and distribute the code.&lt;br&gt; ‚úÖ Use it privately without restrictions.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/aaPanel/BillionMail/dev/LICENSE"&gt;LICENSE&lt;/a&gt; file for more details.&lt;/p&gt; 
&lt;hr&gt; 
&lt;!-- BillionMail official link --&gt; 
&lt;!-- BillionMail Other link--&gt; 
&lt;!-- Shield link--&gt;</description>
    </item>
    
    <item>
      <title>TwiN/gatus</title>
      <link>https://github.com/TwiN/gatus</link>
      <description>&lt;p&gt;‚õë Automated developer-oriented status page&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gatus.io"&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/logo-with-dark-text.png" alt="Gatus"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/TwiN/gatus/actions/workflows/test.yml/badge.svg?sanitize=true" alt="test"&gt; &lt;a href="https://goreportcard.com/report/github.com/TwiN/gatus"&gt;&lt;img src="https://goreportcard.com/badge/github.com/TwiN/gatus?" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/TwiN/gatus"&gt;&lt;img src="https://codecov.io/gh/TwiN/gatus/branch/master/graph/badge.svg?sanitize=true" alt="codecov"&gt;&lt;/a&gt; &lt;a href="https://github.com/TwiN/gatus"&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/TwiN/gatus.svg?sanitize=true" alt="Go version"&gt;&lt;/a&gt; &lt;a href="https://cloud.docker.com/repository/docker/twinproduction/gatus"&gt;&lt;img src="https://img.shields.io/docker/pulls/twinproduction/gatus.svg?sanitize=true" alt="Docker pulls"&gt;&lt;/a&gt; &lt;a href="https://github.com/TwiN"&gt;&lt;img src="https://img.shields.io/github/followers/TwiN?label=Follow&amp;amp;style=social" alt="Follow TwiN"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gatus is a developer-oriented health dashboard that gives you the ability to monitor your services using HTTP, ICMP, TCP, and even DNS queries as well as evaluate the result of said queries by using a list of conditions on values like the status code, the response time, the certificate expiration, the body and many others. The icing on top is that each of these health checks can be paired with alerting via Slack, Teams, PagerDuty, Discord, Twilio and many more.&lt;/p&gt; 
&lt;p&gt;I personally deploy it in my Kubernetes cluster and let it monitor the status of my core applications: &lt;a href="https://status.twin.sh/"&gt;https://status.twin.sh/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Looking for a managed solution? Check out &lt;a href="https://gatus.io"&gt;Gatus.io&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Quick start&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus twinproduction/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can also use GitHub Container Registry if you prefer:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus:stable
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more details, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#usage"&gt;Usage&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ù§ Like this project? Please consider &lt;a href="https://github.com/sponsors/TwiN"&gt;sponsoring me&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/dashboard-dark.png" alt="Gatus dashboard"&gt;&lt;/p&gt; 
&lt;p&gt;Have any feedback or questions? &lt;a href="https://github.com/TwiN/gatus/discussions/new"&gt;Create a discussion&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#why-gatus"&gt;Why Gatus?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoints"&gt;Endpoints&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#external-endpoints"&gt;External Endpoints&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#conditions"&gt;Conditions&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#placeholders"&gt;Placeholders&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#functions"&gt;Functions&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#storage"&gt;Storage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-aws-ses-alerts"&gt;Configuring AWS SES alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-discord-alerts"&gt;Configuring Discord alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-email-alerts"&gt;Configuring Email alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitea-alerts"&gt;Configuring Gitea alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-github-alerts"&gt;Configuring GitHub alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitlab-alerts"&gt;Configuring GitLab alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-google-chat-alerts"&gt;Configuring Google Chat alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gotify-alerts"&gt;Configuring Gotify alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-homeassistant-alerts"&gt;Configuring HomeAssistant alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ilert-alerts"&gt;Configuring Ilert alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-incidentio-alerts"&gt;Configuring Incident.io alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-jetbrains-space-alerts"&gt;Configuring JetBrains Space alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-matrix-alerts"&gt;Configuring Matrix alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-mattermost-alerts"&gt;Configuring Mattermost alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-messagebird-alerts"&gt;Configuring Messagebird alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ntfy-alerts"&gt;Configuring Ntfy alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-opsgenie-alerts"&gt;Configuring Opsgenie alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pagerduty-alerts"&gt;Configuring PagerDuty alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pushover-alerts"&gt;Configuring Pushover alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-slack-alerts"&gt;Configuring Slack alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-alerts-deprecated"&gt;Configuring Teams alerts &lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Configuring Teams Workflow alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-telegram-alerts"&gt;Configuring Telegram alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-twilio-alerts"&gt;Configuring Twilio alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zulip-alerts"&gt;Configuring Zulip alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-custom-alerts"&gt;Configuring custom alerts&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#security"&gt;Security&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#basic-authentication"&gt;Basic Authentication&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#oidc"&gt;OIDC&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#tls-encryption"&gt;TLS Encryption&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#metrics"&gt;Metrics&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#connectivity"&gt;Connectivity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#remote-instances-experimental"&gt;Remote instances (EXPERIMENTAL)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#deployment"&gt;Deployment&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#helm-chart"&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#terraform"&gt;Terraform&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#running-the-tests"&gt;Running the tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#using-in-production"&gt;Using in Production&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#faq"&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#sending-a-graphql-request"&gt;Sending a GraphQL request&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#recommended-interval"&gt;Recommended interval&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#default-timeouts"&gt;Default timeouts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-tcp-endpoint"&gt;Monitoring a TCP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-udp-endpoint"&gt;Monitoring a UDP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-sctp-endpoint"&gt;Monitoring a SCTP endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-a-websocket-endpoint"&gt;Monitoring a WebSocket endpoint&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-icmp"&gt;Monitoring an endpoint using ICMP&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-dns-queries"&gt;Monitoring an endpoint using DNS queries&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-ssh"&gt;Monitoring an endpoint using SSH&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-starttls"&gt;Monitoring an endpoint using STARTTLS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-tls"&gt;Monitoring an endpoint using TLS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-domain-expiration"&gt;Monitoring domain expiration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#disable-monitoring-lock"&gt;disable-monitoring-lock&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#reloading-configuration-on-the-fly"&gt;Reloading configuration on the fly&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#exposing-gatus-on-a-custom-path"&gt;Exposing Gatus on a custom path&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#exposing-gatus-on-a-custom-port"&gt;Exposing Gatus on a custom port&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-a-startup-delay"&gt;Configuring a startup delay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#keeping-your-configuration-small"&gt;Keeping your configuration small&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#proxy-client-configuration"&gt;Proxy client configuration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-to-fix-431-request-header-fields-too-large-error"&gt;How to fix 431 Request Header Fields Too Large error&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#badges"&gt;Badges&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#uptime"&gt;Uptime&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#health"&gt;Health&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#health-shieldsio"&gt;Health (Shields.io)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time"&gt;Response time&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time-chart"&gt;Response time (chart)&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#how-to-change-the-color-thresholds-of-the-response-time-badge"&gt;How to change the color thresholds of the response time badge&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#api"&gt;API&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#raw-data"&gt;Raw Data&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#uptime-1"&gt;Uptime&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#response-time-1"&gt;Response Time&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#installing-as-binary"&gt;Installing as binary&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#high-level-design-overview"&gt;High level design overview&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why Gatus?&lt;/h2&gt; 
&lt;p&gt;Before getting into the specifics, I want to address the most common question:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Why would I use Gatus when I can just use Prometheus‚Äô Alertmanager, Cloudwatch or even Splunk?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Neither of these can tell you that there‚Äôs a problem if there are no clients actively calling the endpoint. In other words, it's because monitoring metrics mostly rely on existing traffic, which effectively means that unless your clients are already experiencing a problem, you won't be notified.&lt;/p&gt; 
&lt;p&gt;Gatus, on the other hand, allows you to configure health checks for each of your features, which in turn allows it to monitor these features and potentially alert you before any clients are impacted.&lt;/p&gt; 
&lt;p&gt;A sign you may want to look into Gatus is by simply asking yourself whether you'd receive an alert if your load balancer was to go down right now. Will any of your existing alerts be triggered? Your metrics won‚Äôt report an increase in errors if no traffic makes it to your applications. This puts you in a situation where your clients are the ones that will notify you about the degradation of your services rather than you reassuring them that you're working on fixing the issue before they even know about it.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;The main features of Gatus are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Highly flexible health check conditions&lt;/strong&gt;: While checking the response status may be enough for some use cases, Gatus goes much further and allows you to add conditions on the response time, the response body and even the IP address.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ability to use Gatus for user acceptance tests&lt;/strong&gt;: Thanks to the point above, you can leverage this application to create automated user acceptance tests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Very easy to configure&lt;/strong&gt;: Not only is the configuration designed to be as readable as possible, it's also extremely easy to add a new service or a new endpoint to monitor.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Alerting&lt;/strong&gt;: While having a pretty visual dashboard is useful to keep track of the state of your application(s), you probably don't want to stare at it all day. Thus, notifications via Slack, Mattermost, Messagebird, PagerDuty, Twilio, Google chat and Teams are supported out of the box with the ability to configure a custom alerting provider for any needs you might have, whether it be a different provider or a custom application that manages automated rollbacks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Metrics&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Low resource consumption&lt;/strong&gt;: As with most Go applications, the resource footprint that this application requires is negligibly small.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#badges"&gt;Badges&lt;/a&gt;&lt;/strong&gt;: &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/7d/badge.svg?sanitize=true" alt="Uptime 7d"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/badge.svg?sanitize=true" alt="Response time 24h"&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dark mode&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/dashboard-conditions.png" alt="Gatus dashboard conditions"&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Quick start&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus twinproduction/gatus
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can also use GitHub Container Registry if you prefer:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus ghcr.io/twin/gatus
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If you want to create your own configuration, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt; for information on how to mount a configuration file.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Here's a simple example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website                 # Name of your endpoint, can be anything
    url: "https://twin.sh/health"
    interval: 5m                  # Duration to wait between every status check (default: 60s)
    conditions:
      - "[STATUS] == 200"         # Status must be 200
      - "[BODY].status == UP"     # The json path "$.status" must be equal to UP
      - "[RESPONSE_TIME] &amp;lt; 300"   # Response time must be under 300ms

  - name: make-sure-header-is-rendered
    url: "https://example.org/"
    interval: 60s
    conditions:
      - "[STATUS] == 200"                          # Status must be 200
      - "[BODY] == pat(*&amp;lt;h1&amp;gt;Example Domain&amp;lt;/h1&amp;gt;*)" # Body must contain the specified header
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example would look similar to this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/example.png" alt="Simple example"&gt;&lt;/p&gt; 
&lt;p&gt;By default, the configuration file is expected to be at &lt;code&gt;config/config.yaml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can specify a custom path by setting the &lt;code&gt;GATUS_CONFIG_PATH&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;p&gt;If &lt;code&gt;GATUS_CONFIG_PATH&lt;/code&gt; points to a directory, all &lt;code&gt;*.yaml&lt;/code&gt; and &lt;code&gt;*.yml&lt;/code&gt; files inside said directory and its subdirectories are merged like so:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;All maps/objects are deep merged (i.e. you could define &lt;code&gt;alerting.slack&lt;/code&gt; in one file and &lt;code&gt;alerting.pagerduty&lt;/code&gt; in another file)&lt;/li&gt; 
 &lt;li&gt;All slices/arrays are appended (i.e. you can define &lt;code&gt;endpoints&lt;/code&gt; in multiple files and each endpoint will be added to the final list of endpoints)&lt;/li&gt; 
 &lt;li&gt;Parameters with a primitive value (e.g. &lt;code&gt;metrics&lt;/code&gt;, &lt;code&gt;alerting.slack.webhook-url&lt;/code&gt;, etc.) may only be defined once to forcefully avoid any ambiguity 
  &lt;ul&gt; 
   &lt;li&gt;To clarify, this also means that you could not define &lt;code&gt;alerting.slack.webhook-url&lt;/code&gt; in two files with different values. All files are merged into one before they are processed. This is by design.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° You can also use environment variables in the configuration file (e.g. &lt;code&gt;$DOMAIN&lt;/code&gt;, &lt;code&gt;${DOMAIN}&lt;/code&gt;)&lt;/p&gt; 
 &lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-postgres-storage/config/config.yaml"&gt;examples/docker-compose-postgres-storage/config/config.yaml&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to test it locally, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#docker"&gt;Docker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;metrics&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to expose metrics at &lt;code&gt;/metrics&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#storage"&gt;Storage configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoints"&gt;Endpoints configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#external-endpoints"&gt;External Endpoints configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#security"&gt;Security configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;disable-monitoring-lock&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#disable-monitoring-lock"&gt;disable the monitoring lock&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;skip-invalid-config-update&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to ignore invalid configuration update. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#reloading-configuration-on-the-fly"&gt;Reloading configuration on the fly&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Web configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.address&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Address to listen on.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0.0.0.0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Port to listen on.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.read-buffer-size&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Buffer size for reading requests from a connection. Also limit for the maximum header size.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;8192&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.tls.certificate-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional public certificate file for TLS in PEM format.&lt;/td&gt; 
   &lt;td align="left"&gt;``&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;web.tls.private-key-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Optional private key file for TLS in PEM format.&lt;/td&gt; 
   &lt;td align="left"&gt;``&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UI configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title"&gt;Title of the document&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Health Dashboard «Ä Gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Meta description for the page.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Gatus is an advanced...&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.header&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Header at the top of the dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;Health Status&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.logo&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL to the logo to display.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.link&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Link to open when the logo is clicked.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of buttons to display below the header.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Text to display on the button.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.buttons[].link&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Link to open when the button is clicked.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.custom-css&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom CSS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;ui.dark-mode&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable dark mode by default. Note that this is superseded by the user's operating system theme preferences.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you want more verbose logging, you may set the &lt;code&gt;GATUS_LOG_LEVEL&lt;/code&gt; environment variable to &lt;code&gt;DEBUG&lt;/code&gt;. Conversely, if you want less verbose logging, you can set the aforementioned environment variable to &lt;code&gt;WARN&lt;/code&gt;, &lt;code&gt;ERROR&lt;/code&gt; or &lt;code&gt;FATAL&lt;/code&gt;. The default value for &lt;code&gt;GATUS_LOG_LEVEL&lt;/code&gt; is &lt;code&gt;INFO&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Endpoints&lt;/h3&gt; 
&lt;p&gt;Endpoints are URLs, applications, or services that you want to monitor. Each endpoint has a list of conditions that are evaluated on an interval that you define. If any condition fails, the endpoint is considered as unhealthy. You can then configure alerts to be triggered when an endpoint is unhealthy once a certain threshold is reached.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the endpoint. Can be anything.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple endpoints together on the dashboard. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL to send the request to.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].method&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request method.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Conditions used to determine the health of the endpoint. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#conditions"&gt;Conditions&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration to wait between every status check.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;60s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].graphql&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to wrap the body in a query param (&lt;code&gt;{"query":"$body"}&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].body&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request body.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].headers&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request headers.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for an endpoint of type DNS. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-dns-queries"&gt;Monitoring an endpoint using DNS queries&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns.query-type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Query type (e.g. MX).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].dns.query-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Query name (e.g. example.com).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for an endpoint of type SSH. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#monitoring-an-endpoint-using-ssh"&gt;Monitoring an endpoint using SSH&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH username (e.g. example).&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ssh.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;SSH password (e.g. password).&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].maintenance-windows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all maintenance windows for a given endpoint. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#maintenance"&gt;Maintenance&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;UI configuration at the endpoint level.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide conditions from the results. Note that this only hides conditions from results evaluated from the moment this was enabled.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-hostname&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the hostname from the results.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the port from the results.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.hide-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to hide the URL from the results. Useful if the URL contains a token.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.dont-resolve-failed-conditions&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to resolve failed conditions for the UI.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;endpoints[].ui.badge.response-time&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of response time thresholds. Each time a threshold is reached, the badge has a different color.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[50, 200, 300, 500, 750]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You may use the following placeholders in the body (&lt;code&gt;endpoints[].body&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_NAME]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].name&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_GROUP]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].group&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_URL]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].url&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[LOCAL_ADDRESS]&lt;/code&gt; (resolves to the local IP and port like &lt;code&gt;192.0.2.1:25&lt;/code&gt; or &lt;code&gt;[2001:db8::1]:80&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RANDOM_STRING_N]&lt;/code&gt; (resolves to a random string of numbers and letters of length N)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;External Endpoints&lt;/h3&gt; 
&lt;p&gt;Unlike regular endpoints, external endpoints are not monitored by Gatus, but they are instead pushed programmatically. This allows you to monitor anything you want, even when what you want to check lives in an environment that would not normally be accessible by Gatus.&lt;/p&gt; 
&lt;p&gt;For instance:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can create your own agent that lives in a private network and pushes the status of your services to a publicly-exposed Gatus instance&lt;/li&gt; 
 &lt;li&gt;You can monitor services that are not supported by Gatus&lt;/li&gt; 
 &lt;li&gt;You can implement your own monitoring system while using Gatus as the dashboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of endpoints to monitor.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to monitor the endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Name of the endpoint. Can be anything.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Group name. Used to group multiple endpoints together on the dashboard. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#endpoint-groups"&gt;Endpoint groups&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bearer token required to push status to.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;external-endpoints[].alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#alerting"&gt;Alerting&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;external-endpoints:
  - name: ext-ep-test
    group: core
    token: "potato"
    alerts:
      - type: discord
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To push the status of an external endpoint, the request would have to look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;POST /api/v1/endpoints/{key}/external?success={success}&amp;amp;error={error}&amp;amp;duration={duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Using the example configuration above, the key would be &lt;code&gt;core_ext-ep-test&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{success}&lt;/code&gt; is a boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) value indicating whether the health check was successful or not.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{error}&lt;/code&gt; (optional): a string describing the reason for a failed health check. If {success} is false, this should contain the error message; if the check is successful.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; (optional): the time that the request took as a duration string (e.g. 10s).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You must also pass the token as a &lt;code&gt;Bearer&lt;/code&gt; token in the &lt;code&gt;Authorization&lt;/code&gt; header.&lt;/p&gt; 
&lt;h3&gt;Conditions&lt;/h3&gt; 
&lt;p&gt;Here are some examples of conditions you can use:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Condition&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Passing values&lt;/th&gt; 
   &lt;th&gt;Failing values&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] == 200&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be equal to 200&lt;/td&gt; 
   &lt;td align="left"&gt;200&lt;/td&gt; 
   &lt;td&gt;201, 404, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;lt; 300&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must lower than 300&lt;/td&gt; 
   &lt;td align="left"&gt;200, 201, 299&lt;/td&gt; 
   &lt;td&gt;301, 302, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;lt;= 299&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be less than or equal to 299&lt;/td&gt; 
   &lt;td align="left"&gt;200, 201, 299&lt;/td&gt; 
   &lt;td&gt;301, 302, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] &amp;gt; 400&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be greater than 400&lt;/td&gt; 
   &lt;td align="left"&gt;401, 402, 403, 404&lt;/td&gt; 
   &lt;td&gt;400, 200, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS] == any(200, 429)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Status must be either 200 or 429&lt;/td&gt; 
   &lt;td align="left"&gt;200, 429&lt;/td&gt; 
   &lt;td&gt;201, 400, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CONNECTED] == true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connection to host must've been successful&lt;/td&gt; 
   &lt;td align="left"&gt;true&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[RESPONSE_TIME] &amp;lt; 500&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Response time must be below 500ms&lt;/td&gt; 
   &lt;td align="left"&gt;100ms, 200ms, 300ms&lt;/td&gt; 
   &lt;td&gt;500ms, 501ms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP] == 127.0.0.1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Target IP must be 127.0.0.1&lt;/td&gt; 
   &lt;td align="left"&gt;127.0.0.1&lt;/td&gt; 
   &lt;td&gt;0.0.0.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY] == 1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The body must be equal to 1&lt;/td&gt; 
   &lt;td align="left"&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].user.name == john&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.user.name&lt;/code&gt; is equal to &lt;code&gt;john&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"user":{"name":"john"}}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].data[0].id == 1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.data[0].id&lt;/code&gt; is equal to 1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"data":[{"id":1}]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].age == [BODY].id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath value of &lt;code&gt;$.age&lt;/code&gt; is equal JSONPath &lt;code&gt;$.id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"age":1,"id":1}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].data) &amp;lt; 5&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Array at JSONPath &lt;code&gt;$.data&lt;/code&gt; has less than 5 elements&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"data":[{"id":1}]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].name) == 8&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String at JSONPath &lt;code&gt;$.name&lt;/code&gt; has a length of 8&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"name":"bob"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].errors) == false&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath &lt;code&gt;$.errors&lt;/code&gt; does not exist&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"errors":[]}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].users) == true&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JSONPath &lt;code&gt;$.users&lt;/code&gt; exists&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"users":[]}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].name == pat(john*)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String at JSONPath &lt;code&gt;$.name&lt;/code&gt; matches pattern &lt;code&gt;john*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{"name":"bob"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].id == any(1, 2)&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Value at JSONPath &lt;code&gt;$.id&lt;/code&gt; is equal to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;1, 2&lt;/td&gt; 
   &lt;td&gt;3, 4, 5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CERTIFICATE_EXPIRATION] &amp;gt; 48h&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Certificate expiration is more than 48h away&lt;/td&gt; 
   &lt;td align="left"&gt;49h, 50h, 123h&lt;/td&gt; 
   &lt;td&gt;1h, 24h, ...&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DOMAIN_EXPIRATION] &amp;gt; 720h&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The domain must expire in more than 720h&lt;/td&gt; 
   &lt;td align="left"&gt;4000h&lt;/td&gt; 
   &lt;td&gt;1h, 24h, ...&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Placeholders&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Placeholder&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Example of resolved value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[STATUS]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the HTTP status of the request&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;404&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[RESPONSE_TIME]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the response time the request took, in ms&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the IP of the target host&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;192.168.0.232&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the response body. Supports JSONPath.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{"name":"john.doe"}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CONNECTED]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into whether a connection could be established&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[CERTIFICATE_EXPIRATION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the duration before certificate expiration (valid units are "s", "m", "h".)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;24h&lt;/code&gt;, &lt;code&gt;48h&lt;/code&gt;, 0 (if not protocol with certs)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the duration before the domain expires (valid units are "s", "m", "h".)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;24h&lt;/code&gt;, &lt;code&gt;48h&lt;/code&gt;, &lt;code&gt;1234h56m78s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[DNS_RCODE]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Resolves into the DNS status of the response&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;NOERROR&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Functions&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Function&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;If the given path leads to an array, returns its length. Otherwise, the JSON at the given path is minified and converted to a string, and the resulting number of characters is returned. Works only with the &lt;code&gt;[BODY]&lt;/code&gt; placeholder.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;len([BODY].username) &amp;gt; 8&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; based on whether a given path is valid. Works only with the &lt;code&gt;[BODY]&lt;/code&gt; placeholder.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;has([BODY].errors) == false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;pat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Specifies that the string passed as parameter should be evaluated as a pattern. Works only with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[IP] == pat(192.168.*)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;any&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Specifies that any one of the values passed as parameters is a valid value. Works only with &lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[BODY].ip == any(127.0.0.1, ::1)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° Use &lt;code&gt;pat&lt;/code&gt; only when you need to. &lt;code&gt;[STATUS] == pat(2*)&lt;/code&gt; is a lot more expensive than &lt;code&gt;[STATUS] &amp;lt; 300&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Storage&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Storage configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.path&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to persist the data in. Only supported for types &lt;code&gt;sqlite&lt;/code&gt; and &lt;code&gt;postgres&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of storage. Valid types: &lt;code&gt;memory&lt;/code&gt;, &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;postgres&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"memory"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.caching&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to use write-through caching. Improves loading time for large dashboards. &lt;br&gt;Only supported if &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;sqlite&lt;/code&gt; or &lt;code&gt;postgres&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.maximum-number-of-results&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The maximum number of results that an endpoint can have&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;100&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;storage.maximum-number-of-events&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The maximum number of events that an endpoint can have&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;50&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The results for each endpoint health check as well as the data for uptime and the past events must be persisted so that they can be displayed on the dashboard. These parameters allow you to configure the storage in question.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;memory&lt;/code&gt; (default):&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Note that this is the default value, and you can omit the storage configuration altogether to achieve the same result.
# Because the data is stored in memory, the data will not survive a restart.
storage:
  type: memory
  maximum-number-of-results: 200
  maximum-number-of-events: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;sqlite&lt;/code&gt;, &lt;code&gt;storage.path&lt;/code&gt; must not be blank:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;storage:
  type: sqlite
  path: data.db
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-sqlite-storage"&gt;examples/docker-compose-sqlite-storage&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If &lt;code&gt;storage.type&lt;/code&gt; is &lt;code&gt;postgres&lt;/code&gt;, &lt;code&gt;storage.path&lt;/code&gt; must be the connection URL:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;storage:
  type: postgres
  path: "postgres://user:password@127.0.0.1:5432/gatus?sslmode=disable"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-postgres-storage"&gt;examples/docker-compose-postgres-storage&lt;/a&gt; for an example.&lt;/p&gt; 
&lt;h3&gt;Client configuration&lt;/h3&gt; 
&lt;p&gt;In order to support a wide range of environments, each monitored endpoint has a unique configuration for the client used to send the request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip verifying the server's certificate chain and host name.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.ignore-redirect&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to ignore redirects (true) or follow them (false, default).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.timeout&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration before timing out.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;10s&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.dns-resolver&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the DNS resolver using the format &lt;code&gt;{proto}://{host}:{port}&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OAuth2 client configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.token-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The token endpoint URL&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.client-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The client id which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.client-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The client secret which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.oauth2.scopes[]&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;A list of &lt;code&gt;scopes&lt;/code&gt; which should be used for the &lt;code&gt;Client credentials flow&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;[""]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.proxy-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The URL of the proxy to use for the client&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.identity-aware-proxy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Google Identity-Aware-Proxy client configuration.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.identity-aware-proxy.audience&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The Identity-Aware-Proxy audience. (client-id of the IAP oauth2 credential)&lt;/td&gt; 
   &lt;td align="left"&gt;required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.certificate-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to a client certificate (in PEM format) for mTLS configurations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.private-key-file&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Path to a client private key (in PEM format) for mTLS configurations.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.tls.renegotiation&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of renegotiation support to provide. (&lt;code&gt;never&lt;/code&gt;, &lt;code&gt;freely&lt;/code&gt;, &lt;code&gt;once&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"never"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;client.network&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The network to use for ICMP endpoint client (&lt;code&gt;ip&lt;/code&gt;, &lt;code&gt;ip4&lt;/code&gt; or &lt;code&gt;ip6&lt;/code&gt;).&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"ip"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Some of these parameters are ignored based on the type of endpoint. For instance, there's no certificate involved in ICMP requests (ping), therefore, setting &lt;code&gt;client.insecure&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for an endpoint of that type will not do anything.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This default configuration is as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;client:
  insecure: false
  ignore-redirect: false
  timeout: 10s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that this configuration is only available under &lt;code&gt;endpoints[]&lt;/code&gt;, &lt;code&gt;alerting.mattermost&lt;/code&gt; and &lt;code&gt;alerting.custom&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Here's an example with the client configuration under &lt;code&gt;endpoints[]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://twin.sh/health"
    client:
      insecure: false
      ignore-redirect: false
      timeout: 10s
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can specify a custom DNS resolver:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-dns-resolver
    url: "https://your.health.api/health"
    client:
      dns-resolver: "tcp://8.8.8.8:53"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can use the &lt;code&gt;client.oauth2&lt;/code&gt; configuration to query a backend API with &lt;code&gt;Bearer token&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-oauth2
    url: "https://your.health.api/health"
    client:
      oauth2:
        token-url: https://your-token-server/token
        client-id: 00000000-0000-0000-0000-000000000000
        client-secret: your-client-secret
        scopes: ['https://your.health.api/.default']
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example shows how you can use the &lt;code&gt;client.identity-aware-proxy&lt;/code&gt; configuration to query a backend API with &lt;code&gt;Bearer token&lt;/code&gt; using Google Identity-Aware-Proxy:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: with-custom-iap
    url: "https://my.iap.protected.app/health"
    client:
      identity-aware-proxy:
        audience: "XXXXXXXX-XXXXXXXXXXXX.apps.googleusercontent.com"
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Note that Gatus will use the &lt;a href="https://cloud.google.com/docs/authentication/application-default-credentials"&gt;gcloud default credentials&lt;/a&gt; within its environment to generate the token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This example shows you how you can use the &lt;code&gt;client.tls&lt;/code&gt; configuration to perform an mTLS query to a backend API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://your.mtls.protected.app/health"
    client:
      tls:
        certificate-file: /path/to/user_cert.pem
        private-key-file: /path/to/user_key.pem
        renegotiation: once
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Note that if running in a container, you must volume mount the certificate and key into the container.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Alerting&lt;/h3&gt; 
&lt;p&gt;Gatus supports multiple alerting providers, such as Slack and PagerDuty, and supports different alerts for each individual endpoints with configurable descriptions and thresholds.&lt;/p&gt; 
&lt;p&gt;Alerts are configured at the endpoint level like so:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of all alerts for a given endpoint.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].type&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Type of alert. &lt;br&gt;See table below for all valid types.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].failure-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of failures in a row needed before triggering the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].success-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of successes in a row before an ongoing incident is marked as resolved.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].send-on-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to send a notification once a triggered alert is marked as resolved.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Description of the alert. Will be included in the alert sent.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerts[].provider-override&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Alerting provider configuration override for the given alert type&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example of what an alert configuration might look like at the endpoint level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also override global provider configuration by using &lt;code&gt;alerts[].provider-override&lt;/code&gt;, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        provider-override:
          webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù If an alerting provider is not properly configured, all alerts configured with the provider's type will be ignored.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.awsses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;awsses&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-aws-ses-alerts"&gt;Configuring AWS SES alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for custom actions on failure or alerts. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-custom-alerts"&gt;Configuring Custom alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;discord&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-discord-alerts"&gt;Configuring Discord alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;email&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-email-alerts"&gt;Configuring Email alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitea&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitea-alerts"&gt;Configuring Gitea alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;github&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-github-alerts"&gt;Configuring GitHub alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitlab&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gitlab-alerts"&gt;Configuring GitLab alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;googlechat&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-google-chat-alerts"&gt;Configuring Google Chat alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gotify&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-gotify-alerts"&gt;Configuring Gotify alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ilert&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ilert-alerts"&gt;Configuring ilert alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;incident-io&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-incidentio-alerts"&gt;Configuring Incident.io alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;jetbrainsspace&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-jetbrains-space-alerts"&gt;Configuring JetBrains Space alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;matrix&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-matrix-alerts"&gt;Configuring Matrix alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;mattermost&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-mattermost-alerts"&gt;Configuring Mattermost alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;messagebird&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-messagebird-alerts"&gt;Configuring Messagebird alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ntfy&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-ntfy-alerts"&gt;Configuring Ntfy alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;opsgenie&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-opsgenie-alerts"&gt;Configuring Opsgenie alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pagerduty-alerts"&gt;Configuring PagerDuty alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pushover&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-pushover-alerts"&gt;Configuring Pushover alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;slack&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-slack-alerts"&gt;Configuring Slack alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;. &lt;em&gt;(Deprecated)&lt;/em&gt; &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-alerts-deprecated"&gt;Configuring Teams alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams-workflows&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Configuring Teams Workflow alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;telegram&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-telegram-alerts"&gt;Configuring Telegram alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;twilio&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-twilio-alerts"&gt;Configuring Twilio alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;zulip&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-zulip-alerts"&gt;Configuring Zulip alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.homeassistant&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;homeassistant&lt;/code&gt;. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-homeassistant-alerts"&gt;Configuring HomeAssistant alerts&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Configuring AWS SES alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;aws-ses&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.access-key-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Access Key ID&lt;/td&gt; 
   &lt;td align="left"&gt;Optional &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.secret-access-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Secret Access Key&lt;/td&gt; 
   &lt;td align="left"&gt;Optional &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.region&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;AWS Region&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The Email address to send the emails from (should be registered in SES)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Comma separated list of email address to notify&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.aws-ses.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  aws-ses:
    access-key-id: "..."
    secret-access-key: "..."
    region: "us-east-1"
    from: "status@example.com"
    to: "user@example.com"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: aws-ses
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the &lt;code&gt;access-key-id&lt;/code&gt; and &lt;code&gt;secret-access-key&lt;/code&gt; are not defined Gatus will fall back to IAM authentication.&lt;/p&gt; 
&lt;p&gt;Make sure you have the ability to use &lt;code&gt;ses:SendEmail&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Configuring Discord alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Discord Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;":helmet_with_white_cross: Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.discord.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.discord.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  discord:
    webhook-url: "https://discord.com/api/webhooks/**********/**********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: discord
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Email alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email used to send the alert&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Username of the SMTP server used to send the alert. If empty, uses &lt;code&gt;alerting.email.from&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.password&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Password of the SMTP server used to send the alert. If empty, no authentication is performed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.host&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Host of the mail server (e.g. &lt;code&gt;smtp.gmail.com&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.port&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Port the mail server is listening to (e.g. &lt;code&gt;587&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Email(s) to send the alerts to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip TLS verification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.email.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.email.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  email:
    from: "from@example.com"
    username: "from@example.com"
    password: "hunter2"
    host: "mail.example.com"
    port: 587
    to: "recipient1@example.com,recipient2@example.com"
    client:
      insecure: false
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        to: "recipient3@example.com,recipient4@example.com"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: email
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: email
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† Some mail servers are painfully slow.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Configuring Gitea alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitea&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.repository-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Gitea repository URL (e.g. &lt;code&gt;https://gitea.com/TwiN/example&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitea.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Personal access token to use for authentication. &lt;br&gt;Must have at least RW on issues and RO on metadata.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The Gitea alerting provider creates an issue prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the issue will be automatically closed when the alert is resolved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gitea:
    repository-url: "https://gitea.com/TwiN/test"
    token: "349d63f16......"

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: gitea
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gitea-alerts.png" alt="Gitea alert"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring GitHub alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;github&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.repository-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitHub repository URL (e.g. &lt;code&gt;https://github.com/TwiN/example&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Personal access token to use for authentication. &lt;br&gt;Must have at least RW on issues and RO on metadata.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.github.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The GitHub alerting provider creates an issue prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the issue will be automatically closed when the alert is resolved.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  github:
    repository-url: "https://github.com/TwiN/test"
    token: "github_pat_12345..."

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: github
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/github-alerts.png" alt="GitHub alert"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring GitLab alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gitlab&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitLab alert webhook URL (e.g. &lt;code&gt;https://gitlab.com/yourusername/example/alerts/notify/gatus/xxxxxxxxxxxxxxxx.json&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.authorization-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GitLab alert authorization key.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.severity&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override default severity (critical), can be one of &lt;code&gt;critical, high, medium, low, info, unknown&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.monitoring-tool&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the monitoring tool name (gatus)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.environment-name&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Set gitlab environment's name. Required to display alerts on a dashboard.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.service&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override endpoint display name&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gitlab.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The GitLab alerting provider creates an alert prefixed with &lt;code&gt;alert(gatus):&lt;/code&gt; and suffixed with the endpoint's display name for each alert. If &lt;code&gt;send-on-resolved&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt; on the endpoint alert, the alert will be automatically closed when the alert is resolved. See &lt;a href="https://docs.gitlab.com/ee/operations/incident_management/integrations.html#configuration"&gt;https://docs.gitlab.com/ee/operations/incident_management/integrations.html#configuration&lt;/a&gt; to configure the endpoint.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gitlab:
    webhook-url: "https://gitlab.com/hlidotbe/example/alerts/notify/gatus/xxxxxxxxxxxxxxxx.json"
    authorization-key: "12345"

endpoints:
  - name: example
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 75"
    alerts:
      - type: gitlab
        failure-threshold: 2
        success-threshold: 3
        send-on-resolved: true
        description: "Everything's burning AAAAAHHHHHHHHHHHHHHH"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gitlab-alerts.png" alt="GitLab alert"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Google Chat alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;googlechat&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Google Chat Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.googlechat.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.googlechat.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  googlechat:
    webhook-url: "https://chat.googleapis.com/v1/spaces/*******/messages?key=**********&amp;amp;token=********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: googlechat
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Gotify alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;gotify&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.server-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Gotify server URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Token that is used for authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority of the alert according to Gotify standards.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"Gatus: &amp;lt;endpoint&amp;gt;"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.gotify.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Configuring ilert alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ilert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.integration-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;ilert Alert Source integration key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ilert.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ilert.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;It is highly recommended to set &lt;code&gt;endpoints[].alerts[].send-on-resolved&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for alerts of type &lt;code&gt;ilert&lt;/code&gt;, because unlike other alerts, the operation resulting from setting said parameter to &lt;code&gt;true&lt;/code&gt; will not create another alert but mark the alert as resolved on ilert instead.&lt;/p&gt; 
&lt;p&gt;Behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;alerting.ilert.integration-key&lt;/code&gt; is used as the integration key&lt;/li&gt; 
 &lt;li&gt;If the endpoint being evaluated belongs to a group (&lt;code&gt;endpoints[].group&lt;/code&gt;) matching the value of &lt;code&gt;alerting.ilert.overrides[].group&lt;/code&gt;, the provider will use that override's integration key instead of &lt;code&gt;alerting.ilert.integration-key&lt;/code&gt;'s&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ilert:
    integration-key: "********************************"
    # You can also add group-specific integration keys, which will
    # override the integration key above for the specified groups
    overrides:
      - group: "core"
        integration-key: "********************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: ilert
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  gotify:
    server-url: "https://gotify.example"
    token: "**************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: gotify
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gotify-alerts.png" alt="Gotify notifications"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring HomeAssistant alerts&lt;/h4&gt; 
&lt;p&gt;To configure HomeAssistant alerts, you'll need to add the following to your configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  homeassistant:
    url: "http://homeassistant:8123"  # URL of your HomeAssistant instance
    token: "YOUR_LONG_LIVED_ACCESS_TOKEN"  # Long-lived access token from HomeAssistant

endpoints:
  - name: my-service
    url: "https://my-service.com"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: homeassistant
        enabled: true
        send-on-resolved: true
        description: "My service health check"
        failure-threshold: 3
        success-threshold: 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The alerts will be sent as events to HomeAssistant with the event type &lt;code&gt;gatus_alert&lt;/code&gt;. The event data includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;status&lt;/code&gt;: "triggered" or "resolved"&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;endpoint&lt;/code&gt;: The name of the monitored endpoint&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;description&lt;/code&gt;: The alert description if provided&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;conditions&lt;/code&gt;: List of conditions and their results&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;failure_count&lt;/code&gt;: Number of consecutive failures (when triggered)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;success_count&lt;/code&gt;: Number of consecutive successes (when resolved)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use these events in HomeAssistant automations to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Send notifications&lt;/li&gt; 
 &lt;li&gt;Control devices&lt;/li&gt; 
 &lt;li&gt;Trigger scenes&lt;/li&gt; 
 &lt;li&gt;Log to history&lt;/li&gt; 
 &lt;li&gt;And more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example HomeAssistant automation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;automation:
  - alias: "Gatus Alert Handler"
    trigger:
      platform: event
      event_type: gatus_alert
    action:
      - service: notify.notify
        data_template:
          title: "Gatus Alert: {{ trigger.event.data.endpoint }}"
          message: &amp;gt;
            Status: {{ trigger.event.data.status }}
            {% if trigger.event.data.description %}
            Description: {{ trigger.event.data.description }}
            {% endif %}
            {% for condition in trigger.event.data.conditions %}
            {{ '‚úÖ' if condition.success else '‚ùå' }} {{ condition.condition }}
            {% endfor %}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get your HomeAssistant long-lived access token:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open HomeAssistant&lt;/li&gt; 
 &lt;li&gt;Click on your profile name (bottom left)&lt;/li&gt; 
 &lt;li&gt;Scroll down to "Long-Lived Access Tokens"&lt;/li&gt; 
 &lt;li&gt;Click "Create Token"&lt;/li&gt; 
 &lt;li&gt;Give it a name (e.g., "Gatus")&lt;/li&gt; 
 &lt;li&gt;Copy the token - you'll only see it once!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Configuring Incident.io alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;incident-io&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;url to trigger an alert event.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.auth-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Token that is used for authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.source-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Source URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.incident-io.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.incident-io.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  incident-io:
    url: "*****************"
    auth-token: "********************************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: incident-io
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In order to get the required alert source config id and authentication token, you must configure an HTTP alert source.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;em&gt;NOTE:&lt;/em&gt;&lt;/strong&gt; the source config id is of the form &lt;code&gt;https://api.incident.io/v2/alert_events/http/$ID&lt;/code&gt; and the token is expected to be passed as a bearer token like so: &lt;code&gt;Authorization: Bearer $TOKEN&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Configuring JetBrains Space alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;jetbrainsspace&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace.project&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JetBrains Space project name&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace.channel-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;JetBrains Space Chat Channel ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Token that is used for authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.jetbrainsspace.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.jetbrainsspace.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  jetbrainsspace:
    project: myproject
    channel-id: ABCDE12345
    token: "**************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: jetbrainsspace
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/jetbrains-space-alerts.png" alt="JetBrains Space notifications"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Matrix alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;matrix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.server-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Homeserver URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://matrix-client.matrix.org&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.access-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot user access token (see &lt;a href="https://webapps.stackexchange.com/q/131056"&gt;https://webapps.stackexchange.com/q/131056&lt;/a&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.internal-room-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Internal room ID of room to send alerts to (can be found in Room Settings &amp;gt; Advanced)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.matrix.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  matrix:
    server-url: "https://matrix-client.matrix.org"
    access-token: "123456"
    internal-room-id: "!example:matrix.org"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: matrix
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Mattermost alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;mattermost&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Mattermost Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.channel&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Mattermost channel name override (optional)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.mattermost.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.mattermost.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  mattermost:
    webhook-url: "http://**********/hooks/**********"
    client:
      insecure: true

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: mattermost
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/mattermost-alerts.png" alt="Mattermost notifications"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Messagebird alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;messagebird&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.access-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Messagebird access key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.originator&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The sender of the message&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.recipients&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The recipients of the message&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.messagebird.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Example of sending &lt;strong&gt;SMS&lt;/strong&gt; text message alert using Messagebird:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  messagebird:
    access-key: "..."
    originator: "31619191918"
    recipients: "31619191919,31619191920"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: messagebird
        failure-threshold: 3
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Ntfy alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;ntfy&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.topic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Topic at which the alert will be sent&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The URL of the target server&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://ntfy.sh&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.ntfy.sh/publish/#access-tokens"&gt;Access token&lt;/a&gt; for restricted topics&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;E-mail address for additional e-mail notifications&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.click&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Website opened when notification is clicked&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The priority of the alert&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.disable-firebase&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether message push delivery via firebase should be disabled. &lt;a href="https://docs.ntfy.sh/publish/#disable-firebase"&gt;ntfy.sh defaults to enabled&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.disable-cache&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether server side message caching should be disabled. &lt;a href="https://docs.ntfy.sh/publish/#message-caching"&gt;ntfy.sh defaults to enabled&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.ntfy.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.ntfy.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://github.com/binwiederhier/ntfy"&gt;ntfy&lt;/a&gt; is an amazing project that allows you to subscribe to desktop and mobile notifications, making it an awesome addition to Gatus.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  ntfy:
    topic: "gatus-test-topic"
    priority: 2
    token: faketoken
    default-alert:
      failure-threshold: 3
      send-on-resolved: true
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "other"
        topic: "gatus-other-test-topic"
        priority: 4
        click: "https://example.com"

endpoints:
  - name: website
    interval: 5m
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: ntfy
  - name: other example
    group: other
    interval: 30m
    url: "https://example.com"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
    alerts:
      - type: ntfy
        description: example
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Opsgenie alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;opsgenie&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Opsgenie API Key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority level of the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;P1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.source&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Source field of the alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.entity-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Entity field prefix.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus-&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.alias-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Alias field prefix.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;gatus-healthcheck-&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.tags&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Tags of alert.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.opsgenie.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Opsgenie provider will automatically open and close alerts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  opsgenie:
    api-key: "00000000-0000-0000-0000-000000000000"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring PagerDuty alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;PagerDuty Events API v2 integration key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pagerduty.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.pagerduty.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;It is highly recommended to set &lt;code&gt;endpoints[].alerts[].send-on-resolved&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for alerts of type &lt;code&gt;pagerduty&lt;/code&gt;, because unlike other alerts, the operation resulting from setting said parameter to &lt;code&gt;true&lt;/code&gt; will not create another incident but mark the incident as resolved on PagerDuty instead.&lt;/p&gt; 
&lt;p&gt;Behavior:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt; is used as the integration key&lt;/li&gt; 
 &lt;li&gt;If the endpoint being evaluated belongs to a group (&lt;code&gt;endpoints[].group&lt;/code&gt;) matching the value of &lt;code&gt;alerting.pagerduty.overrides[].group&lt;/code&gt;, the provider will use that override's integration key instead of &lt;code&gt;alerting.pagerduty.integration-key&lt;/code&gt;'s&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  pagerduty:
    integration-key: "********************************"
    # You can also add group-specific integration keys, which will
    # override the integration key above for the specified groups
    overrides:
      - group: "core"
        integration-key: "********************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: pagerduty
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: pagerduty
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Pushover alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;pushover&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.application-token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Pushover application token&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.user-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;User or group key&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Fixed title for all messages sent via Pushover&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"Gatus: &amp;lt;endpoint&amp;gt;"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Priority of all messages, ranging from -2 (very low) to 2 (emergency)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.resolved-priority&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Override the priority of messages on resolved, ranging from -2 (very low) to 2 (emergency)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.sound&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Sound of all messages&lt;br&gt;See &lt;a href="https://pushover.net/api#sounds"&gt;sounds&lt;/a&gt; for all valid choices.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.ttl&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Set the Time-to-live of the message to be automatically deleted from pushover notifications&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.device&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Device to send the message to (optional)&lt;br&gt;See &lt;a href="https://pushover.net/api#identifiers"&gt;devices&lt;/a&gt; for details&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt; (all devices)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.pushover.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  pushover:
    application-token: "******************************"
    user-key: "******************************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: pushover
        failure-threshold: 3
        success-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Slack alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;slack&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Slack Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.slack.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.slack.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: slack
        description: "healthcheck failed 3 times in a row"
        send-on-resolved: true
      - type: slack
        failure-threshold: 5
        description: "healthcheck failed 5 times in a row"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/slack-alerts.png" alt="Slack notifications"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Teams alerts &lt;em&gt;(Deprecated)&lt;/em&gt;&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] &lt;strong&gt;Deprecated:&lt;/strong&gt; Office 365 Connectors within Microsoft Teams are being retired (&lt;a href="https://devblogs.microsoft.com/microsoft365dev/retirement-of-office-365-connectors-within-microsoft-teams/"&gt;Source: Microsoft DevBlog&lt;/a&gt;). Existing connectors will continue to work until December 2025. The new &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#configuring-teams-workflow-alerts"&gt;Teams Workflow Alerts&lt;/a&gt; should be used with Microsoft Workflows instead of this legacy configuration.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Teams Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"&amp;amp;#x1F6A8; Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.client.insecure&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to skip TLS verification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.teams.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  teams:
    webhook-url: "https://********.webhook.office.com/webhookb2/************"
    client:
      insecure: false
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        webhook-url: "https://********.webhook.office.com/webhookb3/************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: teams
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: teams
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/teams-alerts.png" alt="Teams notifications"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Teams Workflow alerts&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This alert is compatible with Workflows for Microsoft Teams. To setup the workflow and get the webhook URL, follow the &lt;a href="https://support.microsoft.com/en-us/office/create-incoming-webhooks-with-workflows-for-microsoft-teams-8ae491c7-0394-4861-ba59-055e33f75498"&gt;Microsoft Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;teams&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.webhook-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Teams Webhook URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Title of the notification&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;"&amp;amp;#x26D1; Gatus"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.teams-workflows.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.teams-workflows.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  teams-workflows:
    webhook-url: "https://********.webhook.office.com/webhookb2/************"
    # You can also add group-specific to keys, which will
    # override the to key above for the specified groups
    overrides:
      - group: "core"
        webhook-url: "https://********.webhook.office.com/webhookb3/************"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: teams-workflows
        description: "healthcheck failed"
        send-on-resolved: true

  - name: back-end
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
    alerts:
      - type: teams-workflows
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/teams-workflows-alerts.png" alt="Teams Workflow notifications"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Telegram alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;telegram&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram Bot Token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram User ID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.topic-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram Topic ID in a group corresponds to &lt;code&gt;message_thread_id&lt;/code&gt; in the Telegram API&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.api-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Telegram API URL&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;https://api.telegram.org&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.telegram.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.telegram.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  telegram:
    token: "123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11"
    id: "0123456789"
    topic-id: "7"

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
    alerts:
      - type: telegram
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of what the notifications look like:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/telegram-alerts.png" alt="Telegram notifications"&gt;&lt;/p&gt; 
&lt;h4&gt;Configuring Twilio alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Settings for alerts of type &lt;code&gt;twilio&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.sid&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Twilio account SID&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.token&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Twilio auth token&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.from&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number to send Twilio alerts from&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.to&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number to send twilio alerts to&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.twilio.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  twilio:
    sid: "..."
    token: "..."
    from: "+1-234-567-8901"
    to: "+1-234-567-8901"

endpoints:
  - name: website
    interval: 30s
    url: "https://twin.sh/health"
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: twilio
        failure-threshold: 5
        send-on-resolved: true
        description: "healthcheck failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring Zulip alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for alerts of type &lt;code&gt;discord&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.bot-email&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot Email&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.bot-api-key&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Bot API key&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Full organization domain (e.g.: yourZulipDomain.zulipchat.com)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.channel-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;The channel ID where Gatus will send the alerts&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of overrides that may be prioritized over the default configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides[].group&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Endpoint group for which the configuration will be overridden by this configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.zulip.overrides[].*&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;See &lt;code&gt;alerting.zulip.*&lt;/code&gt; parameters&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  zulip:
    bot-email: gatus-bot@some.zulip.org
    bot-api-key: "********************************"
    domain: some.zulip.org
    channel-id: 123456

endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: zulip
        description: "healthcheck failed"
        send-on-resolved: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring custom alerts&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Configuration for custom actions on failure or alerts&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request url&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.method&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Request method&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.body&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request body.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.headers&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Custom alerting request headers&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.client&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.custom.default-alert&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Default alert configuration. &lt;br&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#setting-a-default-alert"&gt;Setting a default alert&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While they're called alerts, you can use this feature to call anything.&lt;/p&gt; 
&lt;p&gt;For instance, you could automate rollbacks by having an application that keeps tracks of new deployments, and by leveraging Gatus, you could have Gatus call that application endpoint when an endpoint starts failing. Your application would then check if the endpoint that started failing was part of the recently deployed application, and if it was, then automatically roll it back.&lt;/p&gt; 
&lt;p&gt;Furthermore, you may use the following placeholders in the body (&lt;code&gt;alerting.custom.body&lt;/code&gt;) and in the url (&lt;code&gt;alerting.custom.url&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[ALERT_DESCRIPTION]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].alerts[].description&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_NAME]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].name&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_GROUP]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].group&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[ENDPOINT_URL]&lt;/code&gt; (resolved from &lt;code&gt;endpoints[].url&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[RESULT_ERRORS]&lt;/code&gt; (resolved from the health evaluation of a given health check)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have an alert using the &lt;code&gt;custom&lt;/code&gt; provider with &lt;code&gt;send-on-resolved&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;, you can use the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; placeholder to differentiate the notifications. The aforementioned placeholder will be replaced by &lt;code&gt;TRIGGERED&lt;/code&gt; or &lt;code&gt;RESOLVED&lt;/code&gt; accordingly, though it can be modified (details at the end of this section).&lt;/p&gt; 
&lt;p&gt;For all intents and purposes, we'll configure the custom alert with a Slack webhook, but you can call anything you want.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  custom:
    url: "https://hooks.slack.com/services/**********/**********/**********"
    method: "POST"
    body: |
      {
        "text": "[ALERT_TRIGGERED_OR_RESOLVED]: [ENDPOINT_GROUP] - [ENDPOINT_NAME] - [ALERT_DESCRIPTION] - [RESULT_ERRORS]"
      }
endpoints:
  - name: website
    url: "https://twin.sh/health"
    interval: 30s
    conditions:
      - "[STATUS] == 200"
      - "[BODY].status == UP"
      - "[RESPONSE_TIME] &amp;lt; 300"
    alerts:
      - type: custom
        failure-threshold: 10
        success-threshold: 3
        send-on-resolved: true
        description: "health check failed"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can customize the resolved values for the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; placeholder like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  custom:
    placeholders:
      ALERT_TRIGGERED_OR_RESOLVED:
        TRIGGERED: "partial_outage"
        RESOLVED: "operational"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, the &lt;code&gt;[ALERT_TRIGGERED_OR_RESOLVED]&lt;/code&gt; in the body of first example of this section would be replaced by &lt;code&gt;partial_outage&lt;/code&gt; when an alert is triggered and &lt;code&gt;operational&lt;/code&gt; when an alert is resolved.&lt;/p&gt; 
&lt;h4&gt;Setting a default alert&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to enable the alert&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.failure-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of failures in a row needed before triggering the alert&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.success-threshold&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Number of successes in a row before an ongoing incident is marked as resolved&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.send-on-resolved&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether to send a notification once a triggered alert is marked as resolved&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;alerting.*.default-alert.description&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Description of the alert. Will be included in the alert sent&lt;/td&gt; 
   &lt;td align="left"&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† You must still specify the &lt;code&gt;type&lt;/code&gt; of the alert in the endpoint configuration even if you set the default alert of a provider.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;While you can specify the alert configuration directly in the endpoint definition, it's tedious and may lead to a very long configuration file.&lt;/p&gt; 
&lt;p&gt;To avoid such problem, you can use the &lt;code&gt;default-alert&lt;/code&gt; parameter present in each provider configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
    default-alert:
      description: "health check failed"
      send-on-resolved: true
      failure-threshold: 5
      success-threshold: 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a result, your Gatus configuration looks a lot tidier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack

  - name: other-example
    url: "https://example.com"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It also allows you to do things like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
        failure-threshold: 5
      - type: slack
        failure-threshold: 10
      - type: slack
        failure-threshold: 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, you can also mix alert types:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;alerting:
  slack:
    webhook-url: "https://hooks.slack.com/services/**********/**********/**********"
    default-alert:
      failure-threshold: 3
  pagerduty:
    integration-key: "********************************"
    default-alert:
      failure-threshold: 5

endpoints:
  - name: endpoint-1
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
      - type: pagerduty

  - name: endpoint-2
    url: "https://example.org"
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: slack
      - type: pagerduty
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Maintenance&lt;/h3&gt; 
&lt;p&gt;If you have maintenance windows, you may not want to be annoyed by alerts. To do that, you'll have to use the maintenance configuration:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.enabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Whether the maintenance period is enabled&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.start&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Time at which the maintenance window starts in &lt;code&gt;hh:mm&lt;/code&gt; format (e.g. &lt;code&gt;23:00&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.duration&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Duration of the maintenance window (e.g. &lt;code&gt;1h&lt;/code&gt;, &lt;code&gt;30m&lt;/code&gt;)&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.timezone&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Timezone of the maintenance window format (e.g. &lt;code&gt;Europe/Amsterdam&lt;/code&gt;).&lt;br&gt;See &lt;a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"&gt;List of tz database time zones&lt;/a&gt; for more info&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;UTC&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;maintenance.every&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Days on which the maintenance period applies (e.g. &lt;code&gt;[Monday, Thursday]&lt;/code&gt;).&lt;br&gt;If left empty, the maintenance window applies every day&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Here's an example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;maintenance:
  start: 23:00
  duration: 1h
  timezone: "Europe/Amsterdam"
  every: [Monday, Thursday]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that you can also specify each day on separate lines:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;maintenance:
  start: 23:00
  duration: 1h
  timezone: "Europe/Amsterdam"
  every:
    - Monday
    - Thursday
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also specify maintenance windows on a per-endpoint basis:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: endpoint-1
    url: "https://example.org"
    maintenance-windows:
      - start: "07:30"
        duration: 40m
        timezone: "Europe/Berlin"
      - start: "14:30"
        duration: 1h
        timezone: "Europe/Berlin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Security&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Security configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP Basic configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OpenID Connect configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Basic Authentication&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP Basic configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic.username&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Username for Basic authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.basic.password-bcrypt-base64&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Password hashed with Bcrypt and then encoded with base64 for Basic authentication.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The example below will require that you authenticate with the username &lt;code&gt;john.doe&lt;/code&gt; and the password &lt;code&gt;hunter2&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;security:
  basic:
    username: "john.doe"
    password-bcrypt-base64: "JDJhJDEwJHRiMnRFakxWazZLdXBzRERQazB1TE8vckRLY05Yb1hSdnoxWU0yQ1FaYXZRSW1McmladDYu"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† Make sure to carefully select the cost of the bcrypt hash. The higher the cost, the longer it takes to compute the hash, and basic auth verifies the password against the hash on every request. As of 2023-01-06, I suggest a cost of 9.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;OIDC&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;OpenID Connect configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.issuer-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Issuer URL&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.redirect-url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Redirect URL. Must end with &lt;code&gt;/authorization-code/callback&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.client-id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client id&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.client-secret&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Client secret&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.scopes&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Scopes to request. The only scope you need is &lt;code&gt;openid&lt;/code&gt;.&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;security.oidc.allowed-subjects&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of subjects to allow. If empty, all subjects are allowed.&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;security:
  oidc:
    issuer-url: "https://example.okta.com"
    redirect-url: "https://status.example.com/authorization-code/callback"
    client-id: "123456789"
    client-secret: "abcdefghijk"
    scopes: ["openid"]
    # You may optionally specify a list of allowed subjects. If this is not specified, all subjects will be allowed.
    #allowed-subjects: ["johndoe@example.com"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Confused? Read &lt;a href="https://twin.sh/articles/56/securing-gatus-with-oidc-using-auth0"&gt;Securing Gatus with OIDC using Auth0&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;TLS Encryption&lt;/h3&gt; 
&lt;p&gt;Gatus supports basic encryption with TLS. To enable this, certificate files in PEM format have to be provided.&lt;/p&gt; 
&lt;p&gt;The example below shows an example configuration which makes gatus respond on port 4443 to HTTPS requests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: 4443
  tls:
    certificate-file: "certificate.crt"
    private-key-file: "private.key"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Metrics&lt;/h3&gt; 
&lt;p&gt;To enable metrics, you must set &lt;code&gt;metrics&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Doing so will expose Prometheus-friendly metrics at the &lt;code&gt;/metrics&lt;/code&gt; endpoint on the same port your application is configured to run on (&lt;code&gt;web.port&lt;/code&gt;).&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Metric name&lt;/th&gt; 
   &lt;th align="left"&gt;Type&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Labels&lt;/th&gt; 
   &lt;th align="left"&gt;Relevant endpoint types&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Number of results per endpoint per success state&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type, success&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_code_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Total number of results by code&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type, code&lt;/td&gt; 
   &lt;td align="left"&gt;DNS, HTTP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_connected_total&lt;/td&gt; 
   &lt;td align="left"&gt;counter&lt;/td&gt; 
   &lt;td align="left"&gt;Total number of results in which a connection was successfully established&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_duration_seconds&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Duration of the request in seconds&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_certificate_expiration_seconds&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Number of seconds until the certificate expires&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;HTTP, STARTTLS&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;gatus_results_endpoint_success&lt;/td&gt; 
   &lt;td align="left"&gt;gauge&lt;/td&gt; 
   &lt;td align="left"&gt;Displays whether or not the endpoint was a success (0 failure, 1 success)&lt;/td&gt; 
   &lt;td align="left"&gt;key, group, name, type&lt;/td&gt; 
   &lt;td align="left"&gt;All&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples/docker-compose-grafana-prometheus"&gt;examples/docker-compose-grafana-prometheus&lt;/a&gt; for further documentation as well as an example.&lt;/p&gt; 
&lt;h3&gt;Connectivity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connectivity configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Connectivity checker configuration&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker.target&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Host to use for validating connectivity&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;connectivity.checker.interval&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Interval at which to validate connectivity&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;1m&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While Gatus is used to monitor other services, it is possible for Gatus itself to lose connectivity to the internet. In order to prevent Gatus from reporting endpoints as unhealthy when Gatus itself is unhealthy, you may configure Gatus to periodically check for internet connectivity.&lt;/p&gt; 
&lt;p&gt;All endpoint executions are skipped while the connectivity checker deems connectivity to be down.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;connectivity:
  checker:
    target: 1.1.1.1:53
    interval: 60s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Remote instances (EXPERIMENTAL)&lt;/h3&gt; 
&lt;p&gt;This feature allows you to retrieve endpoint statuses from a remote Gatus instance.&lt;/p&gt; 
&lt;p&gt;There are two main use cases for this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You have multiple Gatus instances running on different machines, and you wish to visually expose the statuses through a single dashboard&lt;/li&gt; 
 &lt;li&gt;You have one or more Gatus instances that are not publicly accessible (e.g. behind a firewall), and you wish to retrieve&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is an experimental feature. It may be removed or updated in a breaking manner at any time. Furthermore, there are known issues with this feature. If you'd like to provide some feedback, please write a comment in &lt;a href="https://github.com/TwiN/gatus/issues/64"&gt;#64&lt;/a&gt;. Use at your own risk.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Parameter&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
   &lt;th align="left"&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Remote configuration&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;{}&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;List of remote instances&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances.endpoint-prefix&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;String to prefix all endpoint names with&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;remote.instances.url&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;URL from which to retrieve endpoint statuses&lt;/td&gt; 
   &lt;td align="left"&gt;Required &lt;code&gt;""&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;remote:
  instances:
    - endpoint-prefix: "status.example.org-"
      url: "https://status.example.org/api/v1/endpoints/statuses"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Many examples can be found in the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples"&gt;.examples&lt;/a&gt; folder, but this section will focus on the most popular ways of deploying Gatus.&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;To run Gatus locally with Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --name gatus twinproduction/gatus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Other than using one of the examples provided in the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/.examples"&gt;.examples&lt;/a&gt; folder, you can also try it out locally by creating a configuration file, we'll call it &lt;code&gt;config.yaml&lt;/code&gt; for this example, and running the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --mount type=bind,source="$(pwd)"/config.yaml,target=/config/config.yaml --name gatus twinproduction/gatus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're on Windows, replace &lt;code&gt;"$(pwd)"&lt;/code&gt; by the absolute path to your current directory, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker run -p 8080:8080 --mount type=bind,source=C:/Users/Chris/Desktop/config.yaml,target=/config/config.yaml --name gatus twinproduction/gatus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build the image locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;docker build . -t twinproduction/gatus
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Helm Chart&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://helm.sh"&gt;Helm&lt;/a&gt; must be installed to use the chart. Please refer to Helm's &lt;a href="https://helm.sh/docs/"&gt;documentation&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Once Helm is set up properly, add the repository as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;helm repo add twin https://twin.github.io/helm-charts
helm repo update
helm install gatus twin/gatus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get more details, please check &lt;a href="https://github.com/TwiN/helm-charts/raw/master/charts/gatus/README.md"&gt;chart's configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Terraform&lt;/h3&gt; 
&lt;p&gt;Gatus can be deployed on Terraform by using the following module: &lt;a href="https://github.com/TwiN/terraform-kubernetes-gatus"&gt;terraform-kubernetes-gatus&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Running the tests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;go test -v ./...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using in Production&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#deployment"&gt;Deployment&lt;/a&gt; section.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;Sending a GraphQL request&lt;/h3&gt; 
&lt;p&gt;By setting &lt;code&gt;endpoints[].graphql&lt;/code&gt; to true, the body will automatically be wrapped by the standard GraphQL &lt;code&gt;query&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;p&gt;For instance, the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: filter-users-by-gender
    url: http://localhost:8080/playground
    method: POST
    graphql: true
    body: |
      {
        users(gender: "female") {
          id
          name
          gender
          avatar
        }
      }
    conditions:
      - "[STATUS] == 200"
      - "[BODY].data.users[0].gender == female"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;will send a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;http://localhost:8080/playground&lt;/code&gt; with the following body:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{"query":"      {\n        users(gender: \"female\") {\n          id\n          name\n          gender\n          avatar\n        }\n      }"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Recommended interval&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù This does not apply if &lt;code&gt;disable-monitoring-lock&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, as the monitoring lock is what tells Gatus to only evaluate one endpoint at a time.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;To ensure that Gatus provides reliable and accurate results (i.e. response time), Gatus only evaluates one endpoint at a time In other words, even if you have multiple endpoints with the same interval, they will not execute at the same time.&lt;/p&gt; 
&lt;p&gt;You can test this yourself by running Gatus with several endpoints configured with a very short, unrealistic interval, such as 1ms. You'll notice that the response time does not fluctuate - that is because while endpoints are evaluated on different goroutines, there's a global lock that prevents multiple endpoints from running at the same time.&lt;/p&gt; 
&lt;p&gt;Unfortunately, there is a drawback. If you have a lot of endpoints, including some that are very slow or prone to timing out (the default timeout is 10s), then it means that for the entire duration of the request, no other endpoint can be evaluated.&lt;/p&gt; 
&lt;p&gt;The interval does not include the duration of the request itself, which means that if an endpoint has an interval of 30s and the request takes 2s to complete, the timestamp between two evaluations will be 32s, not 30s.&lt;/p&gt; 
&lt;p&gt;While this does not prevent Gatus' from performing health checks on all other endpoints, it may cause Gatus to be unable to respect the configured interval, for instance:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Endpoint A has an interval of 5s, and times out after 10s to complete&lt;/li&gt; 
 &lt;li&gt;Endpoint B has an interval of 5s, and takes 1ms to complete&lt;/li&gt; 
 &lt;li&gt;Endpoint B will be unable to run every 5s, because endpoint A's health evaluation takes longer than its interval&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To sum it up, while Gatus can handle any interval you throw at it, you're better off having slow requests with higher interval.&lt;/p&gt; 
&lt;p&gt;As a rule of thumb, I personally set the interval for more complex health checks to &lt;code&gt;5m&lt;/code&gt; (5 minutes) and simple health checks used for alerting (PagerDuty/Twilio) to &lt;code&gt;30s&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Default timeouts&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Endpoint type&lt;/th&gt; 
   &lt;th align="left"&gt;Timeout&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;HTTP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;TCP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;ICMP&lt;/td&gt; 
   &lt;td align="left"&gt;10s&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;To modify the timeout, see &lt;a href="https://raw.githubusercontent.com/TwiN/gatus/master/#client-configuration"&gt;Client configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Monitoring a TCP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;tcp://&lt;/code&gt;, you can monitor TCP endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: redis
    url: "tcp://127.0.0.1:6379"
    interval: 30s
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for TCP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for applications such as databases (Postgres, MySQL, etc.) and caches (Redis, Memcached, etc.).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù &lt;code&gt;[CONNECTED] == true&lt;/code&gt; does not guarantee that the endpoint itself is healthy - it only guarantees that there's something at the given address listening to the given port, and that a connection to that address was successfully established.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Monitoring a UDP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;udp://&lt;/code&gt;, you can monitor UDP endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "udp://example.org:80"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for UDP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for UDP based application.&lt;/p&gt; 
&lt;h3&gt;Monitoring a SCTP endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;sctp://&lt;/code&gt;, you can monitor Stream Control Transmission Protocol (SCTP) endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "sctp://127.0.0.1:38412"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Placeholders &lt;code&gt;[STATUS]&lt;/code&gt; and &lt;code&gt;[BODY]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].body&lt;/code&gt;, &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for SCTP endpoints.&lt;/p&gt; 
&lt;p&gt;This works for SCTP based application.&lt;/p&gt; 
&lt;h3&gt;Monitoring a WebSocket endpoint&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;ws://&lt;/code&gt; or &lt;code&gt;wss://&lt;/code&gt;, you can monitor WebSocket endpoints at a very basic level:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example
    url: "wss://example.com/"
    body: "status"
    conditions:
      - "[CONNECTED] == true"
      - "[BODY].result &amp;gt;= 0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;[BODY]&lt;/code&gt; placeholder contains the output of the query, and &lt;code&gt;[CONNECTED]&lt;/code&gt; shows whether the connection was successfully established. You can use Go template syntax. The functions LocalAddr and RandomString with a length can be used.&lt;/p&gt; 
&lt;h3&gt;Monitoring an endpoint using ICMP&lt;/h3&gt; 
&lt;p&gt;By prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;icmp://&lt;/code&gt;, you can monitor endpoints at a very basic level using ICMP, or more commonly known as "ping" or "echo":&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ping-example
    url: "icmp://example.com"
    conditions:
      - "[CONNECTED] == true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Only the placeholders &lt;code&gt;[CONNECTED]&lt;/code&gt;, &lt;code&gt;[IP]&lt;/code&gt; and &lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; are supported for endpoints of type ICMP. You can specify a domain prefixed by &lt;code&gt;icmp://&lt;/code&gt;, or an IP address prefixed by &lt;code&gt;icmp://&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If you run Gatus on Linux, please read the Linux section on &lt;a href="https://github.com/prometheus-community/pro-bing#linux"&gt;https://github.com/prometheus-community/pro-bing#linux&lt;/a&gt; if you encounter any problems.&lt;/p&gt; 
&lt;h3&gt;Monitoring an endpoint using DNS queries&lt;/h3&gt; 
&lt;p&gt;Defining a &lt;code&gt;dns&lt;/code&gt; configuration in an endpoint will automatically mark said endpoint as an endpoint of type DNS:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: example-dns-query
    url: "8.8.8.8" # Address of the DNS server to use
    dns:
      query-name: "example.com"
      query-type: "A"
    conditions:
      - "[BODY] == 93.184.215.14"
      - "[DNS_RCODE] == NOERROR"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are two placeholders that can be used in the conditions for endpoints of type DNS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The placeholder &lt;code&gt;[BODY]&lt;/code&gt; resolves to the output of the query. For instance, a query of type &lt;code&gt;A&lt;/code&gt; would return an IPv4.&lt;/li&gt; 
 &lt;li&gt;The placeholder &lt;code&gt;[DNS_RCODE]&lt;/code&gt; resolves to the name associated to the response code returned by the query, such as &lt;code&gt;NOERROR&lt;/code&gt;, &lt;code&gt;FORMERR&lt;/code&gt;, &lt;code&gt;SERVFAIL&lt;/code&gt;, &lt;code&gt;NXDOMAIN&lt;/code&gt;, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monitoring an endpoint using SSH&lt;/h3&gt; 
&lt;p&gt;You can monitor endpoints using SSH by prefixing &lt;code&gt;endpoints[].url&lt;/code&gt; with &lt;code&gt;ssh://&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ssh-example
    url: "ssh://example.com:22" # port is optional. Default is 22.
    ssh:
      username: "username"
      password: "password"
    body: |
      {
        "command": "uptime"
      }
    interval: 1m
    conditions:
      - "[CONNECTED] == true"
      - "[STATUS] == 0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;you can also use no authentication to monitor the endpoint by not specifying the username and password fields.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: ssh-example
    url: "ssh://example.com:22" # port is optional. Default is 22.
    ssh:
      username: ""
      password: ""

    interval: 1m
    conditions:
      - "[CONNECTED] == true"
      - "[STATUS] == 0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The following placeholders are supported for endpoints of type SSH:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;[CONNECTED]&lt;/code&gt; resolves to &lt;code&gt;true&lt;/code&gt; if the SSH connection was successful, &lt;code&gt;false&lt;/code&gt; otherwise&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;[STATUS]&lt;/code&gt; resolves the exit code of the command executed on the remote server (e.g. &lt;code&gt;0&lt;/code&gt; for success)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Monitoring an endpoint using STARTTLS&lt;/h3&gt; 
&lt;p&gt;If you have an email server that you want to ensure there are no problems with, monitoring it through STARTTLS will serve as a good initial indicator:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: starttls-smtp-example
    url: "starttls://smtp.gmail.com:587"
    interval: 30m
    client:
      timeout: 5s
    conditions:
      - "[CONNECTED] == true"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Monitoring an endpoint using TLS&lt;/h3&gt; 
&lt;p&gt;Monitoring endpoints using SSL/TLS encryption, such as LDAP over TLS, can help detect certificate expiration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: tls-ldaps-example
    url: "tls://ldap.example.com:636"
    interval: 30m
    client:
      timeout: 5s
    conditions:
      - "[CONNECTED] == true"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 48h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;endpoints[].body&lt;/code&gt; is set then it is sent and the first 1024 bytes of the response will be in &lt;code&gt;[BODY]&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Placeholder &lt;code&gt;[STATUS]&lt;/code&gt; as well as the fields &lt;code&gt;endpoints[].headers&lt;/code&gt;, &lt;code&gt;endpoints[].method&lt;/code&gt; and &lt;code&gt;endpoints[].graphql&lt;/code&gt; are not supported for TLS endpoints.&lt;/p&gt; 
&lt;h3&gt;Monitoring domain expiration&lt;/h3&gt; 
&lt;p&gt;You can monitor the expiration of a domain with all endpoint types except for DNS by using the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: check-domain-and-certificate-expiration
    url: "https://example.org"
    interval: 1h
    conditions:
      - "[DOMAIN_EXPIRATION] &amp;gt; 720h"
      - "[CERTIFICATE_EXPIRATION] &amp;gt; 240h"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö† The usage of the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder requires Gatus to send a request to the official IANA WHOIS service &lt;a href="https://github.com/TwiN/whois"&gt;through a library&lt;/a&gt; and in some cases, a secondary request to a TLD-specific WHOIS server (e.g. &lt;code&gt;whois.nic.sh&lt;/code&gt;). To prevent the WHOIS service from throttling your IP address if you send too many requests, Gatus will prevent you from using the &lt;code&gt;[DOMAIN_EXPIRATION]&lt;/code&gt; placeholder on an endpoint with an interval of less than &lt;code&gt;5m&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;disable-monitoring-lock&lt;/h3&gt; 
&lt;p&gt;Setting &lt;code&gt;disable-monitoring-lock&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; means that multiple endpoints could be monitored at the same time (i.e. parallel execution).&lt;/p&gt; 
&lt;p&gt;While this behavior wouldn't generally be harmful, conditions using the &lt;code&gt;[RESPONSE_TIME]&lt;/code&gt; placeholder could be impacted by the evaluation of multiple endpoints at the same time, therefore, the default value for this parameter is &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There are three main reasons why you might want to disable the monitoring lock:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You're using Gatus for load testing (each endpoint are periodically evaluated on a different goroutine, so technically, if you create 100 endpoints with a 1 seconds interval, Gatus will send 100 requests per second)&lt;/li&gt; 
 &lt;li&gt;You have a &lt;em&gt;lot&lt;/em&gt; of endpoints to monitor&lt;/li&gt; 
 &lt;li&gt;You want to test multiple endpoints at very short intervals (&amp;lt; 5s)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Reloading configuration on the fly&lt;/h3&gt; 
&lt;p&gt;For the sake of convenience, Gatus automatically reloads the configuration on the fly if the loaded configuration file is updated while Gatus is running.&lt;/p&gt; 
&lt;p&gt;By default, the application will exit if the updating configuration is invalid, but you can configure Gatus to continue running if the configuration file is updated with an invalid configuration by setting &lt;code&gt;skip-invalid-config-update&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Keep in mind that it is in your best interest to ensure the validity of the configuration file after each update you apply to the configuration file while Gatus is running by looking at the log and making sure that you do not see the following message:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;The configuration file was updated, but it is not valid. The old configuration will continue being used.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Failure to do so may result in Gatus being unable to start if the application is restarted for whatever reason.&lt;/p&gt; 
&lt;p&gt;I recommend not setting &lt;code&gt;skip-invalid-config-update&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; to avoid a situation like this, but the choice is yours to make.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;If you are not using a file storage&lt;/strong&gt;, updating the configuration while Gatus is running is effectively the same as restarting the application.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìù Updates may not be detected if the config file is bound instead of the config folder. See &lt;a href="https://github.com/TwiN/gatus/issues/151"&gt;#151&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Endpoint groups&lt;/h3&gt; 
&lt;p&gt;Endpoint groups are used for grouping multiple endpoints together on the dashboard.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: frontend
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: backend
    group: core
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: monitoring
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: nas
    group: internal
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"

  - name: random endpoint that is not part of a group
    url: "https://example.org/"
    interval: 5m
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The configuration above will result in a dashboard that looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/endpoint-groups.png" alt="Gatus Endpoint Groups"&gt;&lt;/p&gt; 
&lt;h3&gt;Exposing Gatus on a custom path&lt;/h3&gt; 
&lt;p&gt;Currently, you can expose the Gatus UI using a fully qualified domain name (FQDN) such as &lt;code&gt;status.example.org&lt;/code&gt;. However, it does not support path-based routing, which means you cannot expose it through a URL like &lt;code&gt;example.org/status/&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For more information, see &lt;a href="https://github.com/TwiN/gatus/issues/88"&gt;https://github.com/TwiN/gatus/issues/88&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Exposing Gatus on a custom port&lt;/h3&gt; 
&lt;p&gt;By default, Gatus is exposed on port &lt;code&gt;8080&lt;/code&gt;, but you may specify a different port by setting the &lt;code&gt;web.port&lt;/code&gt; parameter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: 8081
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're using a PaaS like Heroku that doesn't let you set a custom port and exposes it through an environment variable instead, you can use that environment variable directly in the configuration file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  port: ${PORT}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuring a startup delay&lt;/h3&gt; 
&lt;p&gt;If, for any reason, you need Gatus to wait for a given amount of time before monitoring the endpoints on application start, you can use the &lt;code&gt;GATUS_DELAY_START_SECONDS&lt;/code&gt; environment variable to make Gatus sleep on startup.&lt;/p&gt; 
&lt;h3&gt;Keeping your configuration small&lt;/h3&gt; 
&lt;p&gt;While not specific to Gatus, you can leverage YAML anchors to create a default configuration. If you have a large configuration file, this should help you keep things clean.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Example&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;default-endpoint: &amp;amp;defaults
  group: core
  interval: 5m
  client:
    insecure: true
    timeout: 30s
  conditions:
    - "[STATUS] == 200"

endpoints:
  - name: anchor-example-1
    &amp;lt;&amp;lt;: *defaults               # This will merge the configuration under &amp;amp;defaults with this endpoint
    url: "https://example.org"

  - name: anchor-example-2
    &amp;lt;&amp;lt;: *defaults
    group: example              # This will override the group defined in &amp;amp;defaults
    url: "https://example.com"

  - name: anchor-example-3
    &amp;lt;&amp;lt;: *defaults
    url: "https://twin.sh/health"
    conditions:                # This will override the conditions defined in &amp;amp;defaults
      - "[STATUS] == 200"
      - "[BODY].status == UP"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Proxy client configuration&lt;/h3&gt; 
&lt;p&gt;You can configure a proxy for the client to use by setting the &lt;code&gt;proxy-url&lt;/code&gt; parameter in the client configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
  - name: website
    url: "https://twin.sh/health"
    client:
      proxy-url: http://proxy.example.com:8080
    conditions:
      - "[STATUS] == 200"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;How to fix 431 Request Header Fields Too Large error&lt;/h3&gt; 
&lt;p&gt;Depending on where your environment is deployed and what kind of middleware or reverse proxy sits in front of Gatus, you may run into this issue. This could be because the request headers are too large, e.g. big cookies.&lt;/p&gt; 
&lt;p&gt;By default, &lt;code&gt;web.read-buffer-size&lt;/code&gt; is set to &lt;code&gt;8192&lt;/code&gt;, but increasing this value like so will increase the read buffer size:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;web:
  read-buffer-size: 32768
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Badges&lt;/h3&gt; 
&lt;h4&gt;Uptime&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/1h/badge.svg?sanitize=true" alt="Uptime 1h"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/24h/badge.svg?sanitize=true" alt="Uptime 24h"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/7d/badge.svg?sanitize=true" alt="Uptime 7d"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/30d/badge.svg?sanitize=true" alt="Uptime 30d"&gt;&lt;/p&gt; 
&lt;p&gt;Gatus can automatically generate an SVG badge for one of your monitored endpoints. This allows you to put badges in your individual applications' README or even create your own status page if you desire.&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/uptimes/{duration}/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the uptime during the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/uptimes/7d/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to display an endpoint that is not part of a group, you must leave the group value empty:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/_frontend/uptimes/7d/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;![Uptime 24h](https://status.twin.sh/api/v1/endpoints/core_blog-external/uptimes/24h/badge.svg)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you'd like to see a visual example of each badge available, you can simply navigate to the endpoint's detail page.&lt;/p&gt; 
&lt;h4&gt;Health&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/health/badge.svg?sanitize=true" alt="Health"&gt;&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/health/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the current status of the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/health/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Health (Shields.io)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fstatus.twin.sh%2Fapi%2Fv1%2Fendpoints%2Fcore_blog-external%2Fhealth%2Fbadge.shields" alt="Health"&gt;&lt;/p&gt; 
&lt;p&gt;The path to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/health/badge.shields
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the current status of the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/health/badge.shields
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See more information about the Shields.io badge endpoint &lt;a href="https://shields.io/badges/endpoint-badge"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Response time&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/1h/badge.svg?sanitize=true" alt="Response time 1h"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/badge.svg?sanitize=true" alt="Response time 24h"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/7d/badge.svg?sanitize=true" alt="Response time 7d"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/30d/badge.svg?sanitize=true" alt="Response time 30d"&gt;&lt;/p&gt; 
&lt;p&gt;The endpoint to generate a badge is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}/badge.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Response time (chart)&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/24h/chart.svg?sanitize=true" alt="Response time 24h"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/7d/chart.svg?sanitize=true" alt="Response time 7d"&gt; &lt;img src="https://status.twin.sh/api/v1/endpoints/core_blog-external/response-times/30d/chart.svg?sanitize=true" alt="Response time 30d"&gt;&lt;/p&gt; 
&lt;p&gt;The endpoint to generate a response time chart is the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}/chart.svg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, or &lt;code&gt;24h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;How to change the color thresholds of the response time badge&lt;/h5&gt; 
&lt;p&gt;To change the response time badges' threshold, a corresponding configuration can be added to an endpoint. The values in the array correspond to the levels [Awesome, Great, Good, Passable, Bad] All five values must be given in milliseconds (ms).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;endpoints:
- name: nas
  group: internal
  url: "https://example.org/"
  interval: 5m
  conditions:
    - "[STATUS] == 200"
  ui:
    badge:
      response-time:
        thresholds: [550, 850, 1350, 1650, 1750]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;Gatus provides a simple read-only API that can be queried in order to programmatically determine endpoint status and history.&lt;/p&gt; 
&lt;p&gt;All endpoints are available via a GET request to the following endpoint:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/statuses
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: &lt;a href="https://status.twin.sh/api/v1/endpoints/statuses"&gt;https://status.twin.sh/api/v1/endpoints/statuses&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Specific endpoints can also be queried by using the following pattern:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{group}_{endpoint}/statuses
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: &lt;a href="https://status.twin.sh/api/v1/endpoints/core_blog-home/statuses"&gt;https://status.twin.sh/api/v1/endpoints/core_blog-home/statuses&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gzip compression will be used if the &lt;code&gt;Accept-Encoding&lt;/code&gt; HTTP header contains &lt;code&gt;gzip&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The API will return a JSON payload with the &lt;code&gt;Content-Type&lt;/code&gt; response header set to &lt;code&gt;application/json&lt;/code&gt;. No such header is required to query the API.&lt;/p&gt; 
&lt;h4&gt;Raw Data&lt;/h4&gt; 
&lt;p&gt;Gatus exposes the raw data for one of your monitored endpoints. This allows you to track and aggregate data in your own applications for monitored endpoints. For instance if you want to track uptime for a period longer than 7 days.&lt;/p&gt; 
&lt;h5&gt;Uptime&lt;/h5&gt; 
&lt;p&gt;The path to get raw uptime data for an endpoint is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/uptimes/{duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the raw uptime data for the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/uptimes/24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Response Time&lt;/h5&gt; 
&lt;p&gt;The path to get raw response time data for an endpoint is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;/api/v1/endpoints/{key}/response-times/{duration}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;{duration}&lt;/code&gt; is &lt;code&gt;30d&lt;/code&gt;, &lt;code&gt;7d&lt;/code&gt;, &lt;code&gt;24h&lt;/code&gt; or &lt;code&gt;1h&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;{key}&lt;/code&gt; has the pattern &lt;code&gt;&amp;lt;GROUP_NAME&amp;gt;_&amp;lt;ENDPOINT_NAME&amp;gt;&lt;/code&gt; in which both variables have &lt;code&gt; &lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;_&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;.&lt;/code&gt; and &lt;code&gt;#&lt;/code&gt; replaced by &lt;code&gt;-&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For instance, if you want the raw response time data for the last 24 hours from the endpoint &lt;code&gt;frontend&lt;/code&gt; in the group &lt;code&gt;core&lt;/code&gt;, the URL would look like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;https://example.com/api/v1/endpoints/core_frontend/response-times/24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installing as binary&lt;/h3&gt; 
&lt;p&gt;You can download Gatus as a binary using the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/TwiN/gatus/v5@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;High level design overview&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/TwiN/gatus/master/.github/assets/gatus-diagram.jpg" alt="Gatus diagram"&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>