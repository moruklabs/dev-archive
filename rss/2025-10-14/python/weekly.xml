<rss version="2.0">
  <channel>
    <title>GitHub Python Weekly Trending</title>
    <description>Weekly Trending of Python in GitHub</description>
    <pubDate>Mon, 13 Oct 2025 01:49:21 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>ScrapeGraphAI/Scrapegraph-ai</title>
      <link>https://github.com/ScrapeGraphAI/Scrapegraph-ai</link>
      <description>&lt;p&gt;Python scraper based on AI&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;üöÄ &lt;strong&gt;Looking for an even faster and simpler way to scrape at scale (only 5 lines of code)?&lt;/strong&gt; Check out our enhanced version at &lt;a href="https://scrapegraphai.com/?utm_source=github&amp;amp;utm_medium=readme&amp;amp;utm_campaign=oss_cta&amp;amp;ut#m_content=top_banner"&gt;&lt;strong&gt;ScrapeGraphAI.com&lt;/strong&gt;&lt;/a&gt;! üöÄ&lt;/h2&gt; 
&lt;hr /&gt; 
&lt;h1&gt;üï∑Ô∏è ScrapeGraphAI: You Only Scrape Once&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/docs/chinese.md"&gt;‰∏≠Êñá&lt;/a&gt; | &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/docs/japanese.md"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/docs/korean.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/docs/russian.md"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; | &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/docs/turkish.md"&gt;T√ºrk√ße&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/ScrapeGraphAI/Scrapegraph-ai?lang=de"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/ScrapeGraphAI/Scrapegraph-ai?lang=es"&gt;Espa√±ol&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/ScrapeGraphAI/Scrapegraph-ai?lang=fr"&gt;fran√ßais&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/ScrapeGraphAI/Scrapegraph-ai?lang=pt"&gt;Portugu√™s&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pepy.tech/project/scrapegraphai"&gt;&lt;img src="https://img.shields.io/pepy/dt/scrapegraphai?style=for-the-badge" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pylint-dev/pylint"&gt;&lt;img src="https://img.shields.io/badge/linting-pylint-yellowgreen?style=for-the-badge" alt="linting: pylint" /&gt;&lt;/a&gt; &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/actions/workflows/code-quality.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/VinciGit00/Scrapegraph-ai/code-quality.yml?label=Pylint&amp;amp;logo=github&amp;amp;style=for-the-badge" alt="Pylint" /&gt;&lt;/a&gt; &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/actions/workflows/codeql.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/VinciGit00/Scrapegraph-ai/codeql.yml?label=CodeQL&amp;amp;logo=github&amp;amp;style=for-the-badge" alt="CodeQL" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?style=for-the-badge" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/gkxQDAjfeX"&gt;&lt;img src="https://dcbadge.vercel.app/api/server/gkxQDAjfeX" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://dashboard.scrapegraphai.com/login"&gt;&lt;img src="https://raw.githubusercontent.com/ScrapeGraphAI/Scrapegraph-ai/main/docs/assets/api_banner.png" alt="API Banner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/9761" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/9761" alt="VinciGit00%2FScrapegraph-ai | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p align="center"&gt; &lt;/p&gt;
&lt;p&gt;&lt;a href="https://scrapegraphai.com"&gt;ScrapeGraphAI&lt;/a&gt; is a &lt;em&gt;web scraping&lt;/em&gt; python library that uses LLM and direct graph logic to create scraping pipelines for websites and local documents (XML, HTML, JSON, Markdown, etc.).&lt;/p&gt; 
&lt;p&gt;Just say which information you want to extract and the library will do it for you!&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/VinciGit00/Scrapegraph-ai/main/docs/assets/sgai-hero.png" alt="ScrapeGraphAI Hero" style="width: 100%;" /&gt; &lt;/p&gt; 
&lt;h2&gt;üöÄ Integrations&lt;/h2&gt; 
&lt;p&gt;ScrapeGraphAI offers seamless integration with popular frameworks and tools to enhance your scraping capabilities. Whether you're building with Python or Node.js, using LLM frameworks, or working with no-code platforms, we've got you covered with our comprehensive integration options..&lt;/p&gt; 
&lt;p&gt;You can find more informations at the following &lt;a href="https://scrapegraphai.com"&gt;link&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Integrations&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt;: &lt;a href="https://docs.scrapegraphai.com/introduction"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SDKs&lt;/strong&gt;: &lt;a href="https://docs.scrapegraphai.com/sdks/python"&gt;Python&lt;/a&gt;, &lt;a href="https://docs.scrapegraphai.com/sdks/javascript"&gt;Node&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM Frameworks&lt;/strong&gt;: &lt;a href="https://docs.scrapegraphai.com/integrations/langchain"&gt;Langchain&lt;/a&gt;, &lt;a href="https://docs.scrapegraphai.com/integrations/llamaindex"&gt;Llama Index&lt;/a&gt;, &lt;a href="https://docs.scrapegraphai.com/integrations/crewai"&gt;Crew.ai&lt;/a&gt;, &lt;a href="https://docs.scrapegraphai.com/integrations/agno"&gt;Agno&lt;/a&gt;, &lt;a href="https://github.com/camel-ai/camel"&gt;CamelAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Low-code Frameworks&lt;/strong&gt;: &lt;a href="https://pipedream.com/apps/scrapegraphai"&gt;Pipedream&lt;/a&gt;, &lt;a href="https://bubble.io/plugin/scrapegraphai-1745408893195x213542371433906180"&gt;Bubble&lt;/a&gt;, &lt;a href="https://zapier.com/apps/scrapegraphai/integrations"&gt;Zapier&lt;/a&gt;, &lt;a href="http://localhost:5001/dashboard"&gt;n8n&lt;/a&gt;, &lt;a href="https://dify.ai"&gt;Dify&lt;/a&gt;, &lt;a href="https://app.toolhouse.ai/mcp-servers/scrapegraph_smartscraper"&gt;Toolhouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP server&lt;/strong&gt;: &lt;a href="https://smithery.ai/server/@ScrapeGraphAI/scrapegraph-mcp"&gt;Link&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ Quick install&lt;/h2&gt; 
&lt;p&gt;The reference page for Scrapegraph-ai is available on the official page of PyPI: &lt;a href="https://pypi.org/project/scrapegraphai/"&gt;pypi&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install scrapegraphai

# IMPORTANT (for fetching websites content)
playwright install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: it is recommended to install the library in a virtual environment to avoid conflicts with other libraries üê±&lt;/p&gt; 
&lt;h2&gt;üíª Usage&lt;/h2&gt; 
&lt;p&gt;There are multiple standard scraping pipelines that can be used to extract information from a website (or local file).&lt;/p&gt; 
&lt;p&gt;The most common one is the &lt;code&gt;SmartScraperGraph&lt;/code&gt;, which extracts information from a single page given a user prompt and a source URL.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from scrapegraphai.graphs import SmartScraperGraph

# Define the configuration for the scraping pipeline
graph_config = {
    "llm": {
        "model": "ollama/llama3.2",
        "model_tokens": 8192
    },
    "verbose": True,
    "headless": False,
}

# Create the SmartScraperGraph instance
smart_scraper_graph = SmartScraperGraph(
    prompt="Extract useful information from the webpage, including a description of what the company does, founders and social media links",
    source="https://scrapegraphai.com/",
    config=graph_config
)

# Run the pipeline
result = smart_scraper_graph.run()

import json
print(json.dumps(result, indent=4))
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] For OpenAI and other models you just need to change the llm config!&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-python"&gt;graph_config = {
   "llm": {
       "api_key": "YOUR_OPENAI_API_KEY",
       "model": "openai/gpt-4o-mini",
   },
   "verbose": True,
   "headless": False,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The output will be a dictionary like the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;{
    "description": "ScrapeGraphAI transforms websites into clean, organized data for AI agents and data analytics. It offers an AI-powered API for effortless and cost-effective data extraction.",
    "founders": [
        {
            "name": "",
            "role": "Founder &amp;amp; Technical Lead",
            "linkedin": "https://www.linkedin.com/in/perinim/"
        },
        {
            "name": "Marco Vinciguerra",
            "role": "Founder &amp;amp; Software Engineer",
            "linkedin": "https://www.linkedin.com/in/marco-vinciguerra-7ba365242/"
        },
        {
            "name": "Lorenzo Padoan",
            "role": "Founder &amp;amp; Product Engineer",
            "linkedin": "https://www.linkedin.com/in/lorenzo-padoan-4521a2154/"
        }
    ],
    "social_media_links": {
        "linkedin": "https://www.linkedin.com/company/101881123",
        "twitter": "https://x.com/scrapegraphai",
        "github": "https://github.com/ScrapeGraphAI/Scrapegraph-ai"
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are other pipelines that can be used to extract information from multiple pages, generate Python scripts, or even generate audio files.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Pipeline Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SmartScraperGraph&lt;/td&gt; 
   &lt;td&gt;Single-page scraper that only needs a user prompt and an input source.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SearchGraph&lt;/td&gt; 
   &lt;td&gt;Multi-page scraper that extracts information from the top n search results of a search engine.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SpeechGraph&lt;/td&gt; 
   &lt;td&gt;Single-page scraper that extracts information from a website and generates an audio file.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ScriptCreatorGraph&lt;/td&gt; 
   &lt;td&gt;Single-page scraper that extracts information from a website and generates a Python script.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SmartScraperMultiGraph&lt;/td&gt; 
   &lt;td&gt;Multi-page scraper that extracts information from multiple pages given a single prompt and a list of sources.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ScriptCreatorMultiGraph&lt;/td&gt; 
   &lt;td&gt;Multi-page scraper that generates a Python script for extracting information from multiple pages and sources.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For each of these graphs there is the multi version. It allows to make calls of the LLM in parallel.&lt;/p&gt; 
&lt;p&gt;It is possible to use different LLM through APIs, such as &lt;strong&gt;OpenAI&lt;/strong&gt;, &lt;strong&gt;Groq&lt;/strong&gt;, &lt;strong&gt;Azure&lt;/strong&gt; and &lt;strong&gt;Gemini&lt;/strong&gt;, or local models using &lt;strong&gt;Ollama&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Remember to have &lt;a href="https://ollama.com/"&gt;Ollama&lt;/a&gt; installed and download the models using the &lt;strong&gt;ollama pull&lt;/strong&gt; command, if you want to use local models.&lt;/p&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://colab.research.google.com/drive/1sEZBonBMGP44CtO6GQTwAlL0BGJXjtfd?usp=sharing"&gt;&lt;img src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" alt="Open In Colab" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The documentation for ScrapeGraphAI can be found &lt;a href="https://scrapegraph-ai.readthedocs.io/en/latest/"&gt;here&lt;/a&gt;. Check out also the Docusaurus &lt;a href="https://docs-oss.scrapegraphai.com/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;Feel free to contribute and join our Discord server to discuss with us improvements and give us suggestions!&lt;/p&gt; 
&lt;p&gt;Please see the &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/uJN7TYcpNa"&gt;&lt;img src="https://skillicons.dev/icons?i=discord" alt="My Skills" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/scrapegraphai/"&gt;&lt;img src="https://skillicons.dev/icons?i=linkedin" alt="My Skills" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/scrapegraphai"&gt;&lt;img src="https://skillicons.dev/icons?i=twitter" alt="My Skills" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üîó ScrapeGraph API &amp;amp; SDKs&lt;/h2&gt; 
&lt;p&gt;If you are looking for a quick solution to integrate ScrapeGraph in your system, check out our powerful API &lt;a href="https://dashboard.scrapegraphai.com/login"&gt;here!&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/VinciGit00/Scrapegraph-ai/main/docs/assets/api-banner.png" alt="ScrapeGraph API Banner" style="width: 100%;" /&gt; &lt;/p&gt; 
&lt;p&gt;We offer SDKs in both Python and Node.js, making it easy to integrate into your projects. Check them out below:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;SDK&lt;/th&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;GitHub Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python SDK&lt;/td&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ScrapeGraphAI/scrapegraph-sdk/tree/main/scrapegraph-py"&gt;scrapegraph-py&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Node.js SDK&lt;/td&gt; 
   &lt;td&gt;Node.js&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ScrapeGraphAI/scrapegraph-sdk/tree/main/scrapegraph-js"&gt;scrapegraph-js&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The Official API Documentation can be found &lt;a href="https://docs.scrapegraphai.com/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üìà Telemetry&lt;/h2&gt; 
&lt;p&gt;We collect anonymous usage metrics to enhance our package's quality and user experience. The data helps us prioritize improvements and ensure compatibility. If you wish to opt-out, set the environment variable SCRAPEGRAPHAI_TELEMETRY_ENABLED=false. For more information, please refer to the documentation &lt;a href="https://scrapegraph-ai.readthedocs.io/en/latest/scrapers/telemetry.html"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;‚ù§Ô∏è Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=VinciGit00/Scrapegraph-ai" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üéì Citations&lt;/h2&gt; 
&lt;p&gt;If you have used our library for research purposes please quote us with the following reference:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;  @misc{scrapegraph-ai,
    author = {Lorenzo Padoan, Marco Vinciguerra},
    title = {Scrapegraph-ai},
    year = {2024},
    url = {https://github.com/VinciGit00/Scrapegraph-ai},
    note = {A Python library for scraping leveraging large language models}
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Contact Info&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Marco Vinciguerra&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.linkedin.com/in/marco-vinciguerra-7ba365242/"&gt;&lt;img src="https://img.shields.io/badge/-Linkedin-blue?style=flat&amp;amp;logo=Linkedin&amp;amp;logoColor=white" alt="Linkedin Badge" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Lorenzo Padoan&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.linkedin.com/in/lorenzo-padoan-4521a2154/"&gt;&lt;img src="https://img.shields.io/badge/-Linkedin-blue?style=flat&amp;amp;logo=Linkedin&amp;amp;logoColor=white" alt="Linkedin Badge" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;üìú License&lt;/h2&gt; 
&lt;p&gt;ScrapeGraphAI is licensed under the MIT License. See the &lt;a href="https://github.com/VinciGit00/Scrapegraph-ai/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;We would like to thank all the contributors to the project and the open-source community for their support.&lt;/li&gt; 
 &lt;li&gt;ScrapeGraphAI is meant to be used for data exploration and research purposes only. We are not responsible for any misuse of the library.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Made with ‚ù§Ô∏è by &lt;a href="https://scrapegraphai.com"&gt;ScrapeGraph AI&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://static.scarf.sh/a.png?x-pxid=102d4b8c-cd6a-4b9e-9a16-d6d141b9212d"&gt;Scarf tracking&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>daveebbelaar/ai-cookbook</title>
      <link>https://github.com/daveebbelaar/ai-cookbook</link>
      <description>&lt;p&gt;Examples and tutorials to help developers build AI systems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Introduction&lt;/h1&gt; 
&lt;p&gt;This Cookbook contains examples and tutorials to help developers build AI systems, offering copy/paste code snippets that you can easily integrate into your own projects.&lt;/p&gt; 
&lt;h2&gt;About Me&lt;/h2&gt; 
&lt;p&gt;Hi! I'm Dave, AI Engineer and founder of Datalumina¬Æ. On my &lt;a href="https://www.youtube.com/@daveebbelaar?sub_confirmation=1"&gt;YouTube channel&lt;/a&gt;, I share practical tutorials that teach developers how to build AI systems that actually work in the real world. Beyond these tutorials, I also help people start successful freelancing careers. Check out the links below to learn more.&lt;/p&gt; 
&lt;h3&gt;Explore More Resources&lt;/h3&gt; 
&lt;p&gt;Continue learning ‚Äì wherever you are in your AI journey.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;üß† &lt;strong&gt;Getting Started with AI &amp;amp; Python&lt;/strong&gt;&lt;br /&gt; Dive into foundational content to build your technical base&lt;br /&gt; ‚ñ∂Ô∏é &lt;a href="https://go.datalumina.com/XRPBiLb"&gt;Learn Python for AI&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üõ†Ô∏è &lt;strong&gt;Learn production-ready AI engineering&lt;/strong&gt;&lt;br /&gt; Learn the full GenAI stack, from basics to deployment&lt;br /&gt; ‚ñ∂Ô∏é &lt;a href="https://go.datalumina.com/CkIsMAK"&gt;Join the GenAI Accelerator&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;üí∏ &lt;strong&gt;Launch or grow your freelance AI business&lt;/strong&gt;&lt;br /&gt; Discover how to land clients, structure work, and scale&lt;br /&gt; ‚ñ∂Ô∏é &lt;a href="https://go.datalumina.com/MVWhVn9"&gt;Find Freelance Projects&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-agents-python</title>
      <link>https://github.com/openai/openai-agents-python</link>
      <description>&lt;p&gt;A lightweight, powerful framework for multi-agent workflows&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI Agents SDK&lt;/h1&gt; 
&lt;p&gt;The OpenAI Agents SDK is a lightweight yet powerful framework for building multi-agent workflows. It is provider-agnostic, supporting the OpenAI Responses and Chat Completions APIs, as well as 100+ other LLMs.&lt;/p&gt; 
&lt;img src="https://cdn.openai.com/API/docs/images/orchestration.png" alt="Image of the Agents Tracing UI" style="max-height: 803px;" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Looking for the JavaScript/TypeScript version? Check out &lt;a href="https://github.com/openai/openai-agents-js"&gt;Agents SDK JS/TS&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Core concepts:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/agents"&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/a&gt;: LLMs configured with instructions, tools, guardrails, and handoffs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/handoffs/"&gt;&lt;strong&gt;Handoffs&lt;/strong&gt;&lt;/a&gt;: A specialized tool call used by the Agents SDK for transferring control between agents&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/guardrails/"&gt;&lt;strong&gt;Guardrails&lt;/strong&gt;&lt;/a&gt;: Configurable safety checks for input and output validation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/#sessions"&gt;&lt;strong&gt;Sessions&lt;/strong&gt;&lt;/a&gt;: Automatic conversation history management across agent runs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.github.io/openai-agents-python/tracing/"&gt;&lt;strong&gt;Tracing&lt;/strong&gt;&lt;/a&gt;: Built-in tracking of agent runs, allowing you to view, debug and optimize your workflows&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Explore the &lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/examples"&gt;examples&lt;/a&gt; directory to see the SDK in action, and read our &lt;a href="https://openai.github.io/openai-agents-python/"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;To get started, set up your Python environment (Python 3.9 or newer required), and then install OpenAI Agents SDK package.&lt;/p&gt; 
&lt;h3&gt;venv&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -m venv .venv
source .venv/bin/activate  # On Windows: .venv\Scripts\activate
pip install openai-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For voice support, install with the optional &lt;code&gt;voice&lt;/code&gt; group: &lt;code&gt;pip install 'openai-agents[voice]'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For Redis session support, install with the optional &lt;code&gt;redis&lt;/code&gt; group: &lt;code&gt;pip install 'openai-agents[redis]'&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;uv&lt;/h3&gt; 
&lt;p&gt;If you're familiar with &lt;a href="https://docs.astral.sh/uv/"&gt;uv&lt;/a&gt;, using the tool would be even similar:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv init
uv add openai-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For voice support, install with the optional &lt;code&gt;voice&lt;/code&gt; group: &lt;code&gt;uv add 'openai-agents[voice]'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For Redis session support, install with the optional &lt;code&gt;redis&lt;/code&gt; group: &lt;code&gt;uv add 'openai-agents[redis]'&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Hello world example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner

agent = Agent(name="Assistant", instructions="You are a helpful assistant")

result = Runner.run_sync(agent, "Write a haiku about recursion in programming.")
print(result.final_output)

# Code within the code,
# Functions calling themselves,
# Infinite loop's dance.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(&lt;em&gt;If running this, ensure you set the &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; environment variable&lt;/em&gt;)&lt;/p&gt; 
&lt;p&gt;(&lt;em&gt;For Jupyter notebook users, see &lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/examples/basic/hello_world_jupyter.ipynb"&gt;hello_world_jupyter.ipynb&lt;/a&gt;&lt;/em&gt;)&lt;/p&gt; 
&lt;h2&gt;Handoffs example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner
import asyncio

spanish_agent = Agent(
    name="Spanish agent",
    instructions="You only speak Spanish.",
)

english_agent = Agent(
    name="English agent",
    instructions="You only speak English",
)

triage_agent = Agent(
    name="Triage agent",
    instructions="Handoff to the appropriate agent based on the language of the request.",
    handoffs=[spanish_agent, english_agent],
)


async def main():
    result = await Runner.run(triage_agent, input="Hola, ¬øc√≥mo est√°s?")
    print(result.final_output)
    # ¬°Hola! Estoy bien, gracias por preguntar. ¬øY t√∫, c√≥mo est√°s?


if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Functions example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import asyncio

from agents import Agent, Runner, function_tool


@function_tool
def get_weather(city: str) -&amp;gt; str:
    return f"The weather in {city} is sunny."


agent = Agent(
    name="Hello world",
    instructions="You are a helpful agent.",
    tools=[get_weather],
)


async def main():
    result = await Runner.run(agent, input="What's the weather in Tokyo?")
    print(result.final_output)
    # The weather in Tokyo is sunny.


if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;The agent loop&lt;/h2&gt; 
&lt;p&gt;When you call &lt;code&gt;Runner.run()&lt;/code&gt;, we run a loop until we get a final output.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We call the LLM, using the model and settings on the agent, and the message history.&lt;/li&gt; 
 &lt;li&gt;The LLM returns a response, which may include tool calls.&lt;/li&gt; 
 &lt;li&gt;If the response has a final output (see below for more on this), we return it and end the loop.&lt;/li&gt; 
 &lt;li&gt;If the response has a handoff, we set the agent to the new agent and go back to step 1.&lt;/li&gt; 
 &lt;li&gt;We process the tool calls (if any) and append the tool responses messages. Then we go to step 1.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;There is a &lt;code&gt;max_turns&lt;/code&gt; parameter that you can use to limit the number of times the loop executes.&lt;/p&gt; 
&lt;h3&gt;Final output&lt;/h3&gt; 
&lt;p&gt;Final output is the last thing the agent produces in the loop.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If you set an &lt;code&gt;output_type&lt;/code&gt; on the agent, the final output is when the LLM returns something of that type. We use &lt;a href="https://platform.openai.com/docs/guides/structured-outputs"&gt;structured outputs&lt;/a&gt; for this.&lt;/li&gt; 
 &lt;li&gt;If there's no &lt;code&gt;output_type&lt;/code&gt; (i.e. plain text responses), then the first LLM response without any tool calls or handoffs is considered as the final output.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;As a result, the mental model for the agent loop is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If the current agent has an &lt;code&gt;output_type&lt;/code&gt;, the loop runs until the agent produces structured output matching that type.&lt;/li&gt; 
 &lt;li&gt;If the current agent does not have an &lt;code&gt;output_type&lt;/code&gt;, the loop runs until the current agent produces a message without any tool calls/handoffs.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Common agent patterns&lt;/h2&gt; 
&lt;p&gt;The Agents SDK is designed to be highly flexible, allowing you to model a wide range of LLM workflows including deterministic flows, iterative loops, and more. See examples in &lt;a href="https://raw.githubusercontent.com/openai/openai-agents-python/main/examples/agent_patterns"&gt;&lt;code&gt;examples/agent_patterns&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tracing&lt;/h2&gt; 
&lt;p&gt;The Agents SDK automatically traces your agent runs, making it easy to track and debug the behavior of your agents. Tracing is extensible by design, supporting custom spans and a wide variety of external destinations, including &lt;a href="https://logfire.pydantic.dev/docs/integrations/llms/openai/#openai-agents"&gt;Logfire&lt;/a&gt;, &lt;a href="https://docs.agentops.ai/v1/integrations/agentssdk"&gt;AgentOps&lt;/a&gt;, &lt;a href="https://braintrust.dev/docs/guides/traces/integrations#openai-agents-sdk"&gt;Braintrust&lt;/a&gt;, &lt;a href="https://docs.scorecard.io/docs/documentation/features/tracing#openai-agents-sdk-integration"&gt;Scorecard&lt;/a&gt;, and &lt;a href="https://docs.keywordsai.co/integration/development-frameworks/openai-agent"&gt;Keywords AI&lt;/a&gt;. For more details about how to customize or disable tracing, see &lt;a href="http://openai.github.io/openai-agents-python/tracing"&gt;Tracing&lt;/a&gt;, which also includes a larger list of &lt;a href="http://openai.github.io/openai-agents-python/tracing/#external-tracing-processors-list"&gt;external tracing processors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Long running agents &amp;amp; human-in-the-loop&lt;/h2&gt; 
&lt;p&gt;You can use the Agents SDK &lt;a href="https://temporal.io/"&gt;Temporal&lt;/a&gt; integration to run durable, long-running workflows, including human-in-the-loop tasks. View a demo of Temporal and the Agents SDK working in action to complete long-running tasks &lt;a href="https://www.youtube.com/watch?v=fFBZqzT4DD8"&gt;in this video&lt;/a&gt;, and &lt;a href="https://github.com/temporalio/sdk-python/tree/main/temporalio/contrib/openai_agents"&gt;view docs here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sessions&lt;/h2&gt; 
&lt;p&gt;The Agents SDK provides built-in session memory to automatically maintain conversation history across multiple agent runs, eliminating the need to manually handle &lt;code&gt;.to_input_list()&lt;/code&gt; between turns.&lt;/p&gt; 
&lt;h3&gt;Quick start&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner, SQLiteSession

# Create agent
agent = Agent(
    name="Assistant",
    instructions="Reply very concisely.",
)

# Create a session instance
session = SQLiteSession("conversation_123")

# First turn
result = await Runner.run(
    agent,
    "What city is the Golden Gate Bridge in?",
    session=session
)
print(result.final_output)  # "San Francisco"

# Second turn - agent automatically remembers previous context
result = await Runner.run(
    agent,
    "What state is it in?",
    session=session
)
print(result.final_output)  # "California"

# Also works with synchronous runner
result = Runner.run_sync(
    agent,
    "What's the population?",
    session=session
)
print(result.final_output)  # "Approximately 39 million"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Session options&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;No memory&lt;/strong&gt; (default): No session memory when session parameter is omitted&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session: Session = DatabaseSession(...)&lt;/code&gt;&lt;/strong&gt;: Use a Session instance to manage conversation history&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents import Agent, Runner, SQLiteSession

# SQLite - file-based or in-memory database
session = SQLiteSession("user_123", "conversations.db")

# Redis - for scalable, distributed deployments
# from agents.extensions.memory import RedisSession
# session = RedisSession.from_url("user_123", url="redis://localhost:6379/0")

agent = Agent(name="Assistant")

# Different session IDs maintain separate conversation histories
result1 = await Runner.run(
    agent,
    "Hello",
    session=session
)
result2 = await Runner.run(
    agent,
    "Hello",
    session=SQLiteSession("user_456", "conversations.db")
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom session implementations&lt;/h3&gt; 
&lt;p&gt;You can implement your own session memory by creating a class that follows the &lt;code&gt;Session&lt;/code&gt; protocol:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agents.memory import Session
from typing import List

class MyCustomSession:
    """Custom session implementation following the Session protocol."""

    def __init__(self, session_id: str):
        self.session_id = session_id
        # Your initialization here

    async def get_items(self, limit: int | None = None) -&amp;gt; List[dict]:
        # Retrieve conversation history for the session
        pass

    async def add_items(self, items: List[dict]) -&amp;gt; None:
        # Store new items for the session
        pass

    async def pop_item(self) -&amp;gt; dict | None:
        # Remove and return the most recent item from the session
        pass

    async def clear_session(self) -&amp;gt; None:
        # Clear all items for the session
        pass

# Use your custom session
agent = Agent(name="Assistant")
result = await Runner.run(
    agent,
    "Hello",
    session=MyCustomSession("my_session")
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development (only needed if you need to edit the SDK/examples)&lt;/h2&gt; 
&lt;ol start="0"&gt; 
 &lt;li&gt;Ensure you have &lt;a href="https://docs.astral.sh/uv/"&gt;&lt;code&gt;uv&lt;/code&gt;&lt;/a&gt; installed.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make sync
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;(After making changes) lint/test&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;make check # run tests linter and typechecker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or to run them individually:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make tests  # run tests
make mypy   # run typechecker
make lint   # run linter
make format-check # run style checker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;We'd like to acknowledge the excellent work of the open-source community, especially:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.pydantic.dev/latest/"&gt;Pydantic&lt;/a&gt; (data validation) and &lt;a href="https://ai.pydantic.dev/"&gt;PydanticAI&lt;/a&gt; (advanced agent framework)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt; (unified interface for 100+ LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/squidfunk/mkdocs-material"&gt;MkDocs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mkdocstrings/griffe"&gt;Griffe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/astral-sh/uv"&gt;uv&lt;/a&gt; and &lt;a href="https://github.com/astral-sh/ruff"&gt;ruff&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We're committed to continuing to build the Agents SDK as an open source framework so others in the community can expand on our approach.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/BitNet</title>
      <link>https://github.com/microsoft/BitNet</link>
      <description>&lt;p&gt;Official inference framework for 1-bit LLMs&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;bitnet.cpp&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/version-1.0-blue" alt="version" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://huggingface.co/microsoft/BitNet-b1.58-2B-4T"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/BitNet/main/assets/header_model_release.png" alt="BitNet Model on Hugging Face" width="800" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Try it out via this &lt;a href="https://bitnet-demo.azurewebsites.net/"&gt;demo&lt;/a&gt;, or build and run it on your own &lt;a href="https://github.com/microsoft/BitNet?tab=readme-ov-file#build-from-source"&gt;CPU&lt;/a&gt; or &lt;a href="https://github.com/microsoft/BitNet/raw/main/gpu/README.md"&gt;GPU&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;bitnet.cpp is the official inference framework for 1-bit LLMs (e.g., BitNet b1.58). It offers a suite of optimized kernels, that support &lt;strong&gt;fast&lt;/strong&gt; and &lt;strong&gt;lossless&lt;/strong&gt; inference of 1.58-bit models on CPU and GPU (NPU support will coming next).&lt;/p&gt; 
&lt;p&gt;The first release of bitnet.cpp is to support inference on CPUs. bitnet.cpp achieves speedups of &lt;strong&gt;1.37x&lt;/strong&gt; to &lt;strong&gt;5.07x&lt;/strong&gt; on ARM CPUs, with larger models experiencing greater performance gains. Additionally, it reduces energy consumption by &lt;strong&gt;55.4%&lt;/strong&gt; to &lt;strong&gt;70.0%&lt;/strong&gt;, further boosting overall efficiency. On x86 CPUs, speedups range from &lt;strong&gt;2.37x&lt;/strong&gt; to &lt;strong&gt;6.17x&lt;/strong&gt; with energy reductions between &lt;strong&gt;71.9%&lt;/strong&gt; to &lt;strong&gt;82.2%&lt;/strong&gt;. Furthermore, bitnet.cpp can run a 100B BitNet b1.58 model on a single CPU, achieving speeds comparable to human reading (5-7 tokens per second), significantly enhancing the potential for running LLMs on local devices. Please refer to the &lt;a href="https://arxiv.org/abs/2410.16144"&gt;technical report&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/microsoft/BitNet/main/assets/m2_performance.jpg" alt="m2_performance" width="800" /&gt; 
&lt;img src="https://raw.githubusercontent.com/microsoft/BitNet/main/assets/intel_performance.jpg" alt="m2_performance" width="800" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The tested models are dummy setups used in a research context to demonstrate the inference performance of bitnet.cpp.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;A demo of bitnet.cpp running a BitNet b1.58 3B model on Apple M2:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/7f46b736-edec-4828-b809-4be780a3e5b1"&gt;https://github.com/user-attachments/assets/7f46b736-edec-4828-b809-4be780a3e5b1&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What's New:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;05/20/2025 &lt;a href="https://github.com/microsoft/BitNet/raw/main/gpu/README.md"&gt;BitNet Official GPU inference kernel&lt;/a&gt; &lt;img src="https://img.shields.io/badge/NEW-red" alt="NEW" /&gt;&lt;/li&gt; 
 &lt;li&gt;04/14/2025 &lt;a href="https://huggingface.co/microsoft/BitNet-b1.58-2B-4T"&gt;BitNet Official 2B Parameter Model on Hugging Face&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;02/18/2025 &lt;a href="https://arxiv.org/abs/2502.11880"&gt;Bitnet.cpp: Efficient Edge Inference for Ternary LLMs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;11/08/2024 &lt;a href="https://arxiv.org/abs/2411.04965"&gt;BitNet a4.8: 4-bit Activations for 1-bit LLMs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10/21/2024 &lt;a href="https://arxiv.org/abs/2410.16144"&gt;1-bit AI Infra: Part 1.1, Fast and Lossless BitNet b1.58 Inference on CPUs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10/17/2024 bitnet.cpp 1.0 released.&lt;/li&gt; 
 &lt;li&gt;03/21/2024 &lt;a href="https://github.com/microsoft/unilm/raw/master/bitnet/The-Era-of-1-bit-LLMs__Training_Tips_Code_FAQ.pdf"&gt;The-Era-of-1-bit-LLMs__Training_Tips_Code_FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;02/27/2024 &lt;a href="https://arxiv.org/abs/2402.17764"&gt;The Era of 1-bit LLMs: All Large Language Models are in 1.58 Bits&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;10/17/2023 &lt;a href="https://arxiv.org/abs/2310.11453"&gt;BitNet: Scaling 1-bit Transformers for Large Language Models&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;This project is based on the &lt;a href="https://github.com/ggerganov/llama.cpp"&gt;llama.cpp&lt;/a&gt; framework. We would like to thank all the authors for their contributions to the open-source community. Also, bitnet.cpp's kernels are built on top of the Lookup Table methodologies pioneered in &lt;a href="https://github.com/microsoft/T-MAC/"&gt;T-MAC&lt;/a&gt;. For inference of general low-bit LLMs beyond ternary models, we recommend using T-MAC.&lt;/p&gt; 
&lt;h2&gt;Official Models&lt;/h2&gt; 
&lt;table&gt;  
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th rowspan="2"&gt;Model&lt;/th&gt; 
   &lt;th rowspan="2"&gt;Parameters&lt;/th&gt; 
   &lt;th rowspan="2"&gt;CPU&lt;/th&gt; 
   &lt;th colspan="3"&gt;Kernel&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th&gt;I2_S&lt;/th&gt; 
   &lt;th&gt;TL1&lt;/th&gt; 
   &lt;th&gt;TL2&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/microsoft/BitNet-b1.58-2B-4T"&gt;BitNet-b1.58-2B-4T&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;2.4B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Supported Models&lt;/h2&gt; 
&lt;p&gt;‚ùóÔ∏è&lt;strong&gt;We use existing 1-bit LLMs available on &lt;a href="https://huggingface.co/"&gt;Hugging Face&lt;/a&gt; to demonstrate the inference capabilities of bitnet.cpp. We hope the release of bitnet.cpp will inspire the development of 1-bit LLMs in large-scale settings in terms of model size and training tokens.&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt;  
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th rowspan="2"&gt;Model&lt;/th&gt; 
   &lt;th rowspan="2"&gt;Parameters&lt;/th&gt; 
   &lt;th rowspan="2"&gt;CPU&lt;/th&gt; 
   &lt;th colspan="3"&gt;Kernel&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th&gt;I2_S&lt;/th&gt; 
   &lt;th&gt;TL1&lt;/th&gt; 
   &lt;th&gt;TL2&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/1bitLLM/bitnet_b1_58-large"&gt;bitnet_b1_58-large&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;0.7B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/1bitLLM/bitnet_b1_58-3B"&gt;bitnet_b1_58-3B&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;3.3B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/HF1BitLLM/Llama3-8B-1.58-100B-tokens"&gt;Llama3-8B-1.58-100B-tokens&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;8.0B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/collections/tiiuae/falcon3-67605ae03578be86e4e87026"&gt;Falcon3 Family&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;1B-10B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td rowspan="2"&gt;&lt;a href="https://huggingface.co/collections/tiiuae/falcon-edge-series-6804fd13344d6d8a8fa71130"&gt;Falcon-E Family&lt;/a&gt;&lt;/td&gt; 
   &lt;td rowspan="2"&gt;1B-3B&lt;/td&gt; 
   &lt;td&gt;x86&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ARM&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚úÖ&lt;/td&gt; 
   &lt;td&gt;‚ùå&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;python&amp;gt;=3.9&lt;/li&gt; 
 &lt;li&gt;cmake&amp;gt;=3.22&lt;/li&gt; 
 &lt;li&gt;clang&amp;gt;=18 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;For Windows users, install &lt;a href="https://visualstudio.microsoft.com/downloads/"&gt;Visual Studio 2022&lt;/a&gt;. In the installer, toggle on at least the following options(this also automatically installs the required additional tools like CMake):&lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Desktop-development with C++&lt;/li&gt; 
     &lt;li&gt;C++-CMake Tools for Windows&lt;/li&gt; 
     &lt;li&gt;Git for Windows&lt;/li&gt; 
     &lt;li&gt;C++-Clang Compiler for Windows&lt;/li&gt; 
     &lt;li&gt;MS-Build Support for LLVM-Toolset (clang)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;For Debian/Ubuntu users, you can download with &lt;a href="https://apt.llvm.org/"&gt;Automatic installation script&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;conda (highly recommend)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you are using Windows, please remember to always use a Developer Command Prompt / PowerShell for VS2022 for the following commands. Please refer to the FAQs below if you see any issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repo&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --recursive https://github.com/microsoft/BitNet.git
cd BitNet
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Install the dependencies&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# (Recommended) Create a new conda environment
conda create -n bitnet-cpp python=3.9
conda activate bitnet-cpp

pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Build the project&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Manually download the model and run with local path
huggingface-cli download microsoft/BitNet-b1.58-2B-4T-gguf --local-dir models/BitNet-b1.58-2B-4T
python setup_env.py -md models/BitNet-b1.58-2B-4T -q i2_s

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;
usage: setup_env.py [-h] [--hf-repo {1bitLLM/bitnet_b1_58-large,1bitLLM/bitnet_b1_58-3B,HF1BitLLM/Llama3-8B-1.58-100B-tokens,tiiuae/Falcon3-1B-Instruct-1.58bit,tiiuae/Falcon3-3B-Instruct-1.58bit,tiiuae/Falcon3-7B-Instruct-1.58bit,tiiuae/Falcon3-10B-Instruct-1.58bit}] [--model-dir MODEL_DIR] [--log-dir LOG_DIR] [--quant-type {i2_s,tl1}] [--quant-embd]
                    [--use-pretuned]

Setup the environment for running inference

optional arguments:
  -h, --help            show this help message and exit
  --hf-repo {1bitLLM/bitnet_b1_58-large,1bitLLM/bitnet_b1_58-3B,HF1BitLLM/Llama3-8B-1.58-100B-tokens,tiiuae/Falcon3-1B-Instruct-1.58bit,tiiuae/Falcon3-3B-Instruct-1.58bit,tiiuae/Falcon3-7B-Instruct-1.58bit,tiiuae/Falcon3-10B-Instruct-1.58bit}, -hr {1bitLLM/bitnet_b1_58-large,1bitLLM/bitnet_b1_58-3B,HF1BitLLM/Llama3-8B-1.58-100B-tokens,tiiuae/Falcon3-1B-Instruct-1.58bit,tiiuae/Falcon3-3B-Instruct-1.58bit,tiiuae/Falcon3-7B-Instruct-1.58bit,tiiuae/Falcon3-10B-Instruct-1.58bit}
                        Model used for inference
  --model-dir MODEL_DIR, -md MODEL_DIR
                        Directory to save/load the model
  --log-dir LOG_DIR, -ld LOG_DIR
                        Directory to save the logging info
  --quant-type {i2_s,tl1}, -q {i2_s,tl1}
                        Quantization type
  --quant-embd          Quantize the embeddings to f16
  --use-pretuned, -p    Use the pretuned kernel parameters
&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run inference with the quantized model
python run_inference.py -m models/BitNet-b1.58-2B-4T/ggml-model-i2_s.gguf -p "You are a helpful assistant" -cnv
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;
usage: run_inference.py [-h] [-m MODEL] [-n N_PREDICT] -p PROMPT [-t THREADS] [-c CTX_SIZE] [-temp TEMPERATURE] [-cnv]

Run inference

optional arguments:
  -h, --help            show this help message and exit
  -m MODEL, --model MODEL
                        Path to model file
  -n N_PREDICT, --n-predict N_PREDICT
                        Number of tokens to predict when generating text
  -p PROMPT, --prompt PROMPT
                        Prompt to generate text from
  -t THREADS, --threads THREADS
                        Number of threads to use
  -c CTX_SIZE, --ctx-size CTX_SIZE
                        Size of the prompt context
  -temp TEMPERATURE, --temperature TEMPERATURE
                        Temperature, a hyperparameter that controls the randomness of the generated text
  -cnv, --conversation  Whether to enable chat mode or not (for instruct models.)
                        (When this option is turned on, the prompt specified by -p will be used as the system prompt.)
&lt;/pre&gt; 
&lt;h3&gt;Benchmark&lt;/h3&gt; 
&lt;p&gt;We provide scripts to run the inference benchmark providing a model.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;usage: e2e_benchmark.py -m MODEL [-n N_TOKEN] [-p N_PROMPT] [-t THREADS]  
   
Setup the environment for running the inference  
   
required arguments:  
  -m MODEL, --model MODEL  
                        Path to the model file. 
   
optional arguments:  
  -h, --help  
                        Show this help message and exit. 
  -n N_TOKEN, --n-token N_TOKEN  
                        Number of generated tokens. 
  -p N_PROMPT, --n-prompt N_PROMPT  
                        Prompt to generate text from. 
  -t THREADS, --threads THREADS  
                        Number of threads to use. 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's a brief explanation of each argument:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-m&lt;/code&gt;, &lt;code&gt;--model&lt;/code&gt;: The path to the model file. This is a required argument that must be provided when running the script.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-n&lt;/code&gt;, &lt;code&gt;--n-token&lt;/code&gt;: The number of tokens to generate during the inference. It is an optional argument with a default value of 128.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-p&lt;/code&gt;, &lt;code&gt;--n-prompt&lt;/code&gt;: The number of prompt tokens to use for generating text. This is an optional argument with a default value of 512.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-t&lt;/code&gt;, &lt;code&gt;--threads&lt;/code&gt;: The number of threads to use for running the inference. It is an optional argument with a default value of 2.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-h&lt;/code&gt;, &lt;code&gt;--help&lt;/code&gt;: Show the help message and exit. Use this argument to display usage information.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;python utils/e2e_benchmark.py -m /path/to/model -n 200 -p 256 -t 4  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command would run the inference benchmark using the model located at &lt;code&gt;/path/to/model&lt;/code&gt;, generating 200 tokens from a 256 token prompt, utilizing 4 threads.&lt;/p&gt; 
&lt;p&gt;For the model layout that do not supported by any public model, we provide scripts to generate a dummy model with the given model layout, and run the benchmark on your machine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python utils/generate-dummy-bitnet-model.py models/bitnet_b1_58-large --outfile models/dummy-bitnet-125m.tl1.gguf --outtype tl1 --model-size 125M

# Run benchmark with the generated model, use -m to specify the model path, -p to specify the prompt processed, -n to specify the number of token to generate
python utils/e2e_benchmark.py -m models/dummy-bitnet-125m.tl1.gguf -p 512 -n 128
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Convert from &lt;code&gt;.safetensors&lt;/code&gt; Checkpoints&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Prepare the .safetensors model file
huggingface-cli download microsoft/bitnet-b1.58-2B-4T-bf16 --local-dir ./models/bitnet-b1.58-2B-4T-bf16

# Convert to gguf model
python ./utils/convert-helper-bitnet.py ./models/bitnet-b1.58-2B-4T-bf16
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FAQ (Frequently Asked Questions)üìå&lt;/h3&gt; 
&lt;h4&gt;Q1: The build dies with errors building llama.cpp due to issues with std::chrono in log.cpp?&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; This is an issue introduced in recent version of llama.cpp. Please refer to this &lt;a href="https://github.com/tinglou/llama.cpp/commit/4e3db1e3d78cc1bcd22bcb3af54bd2a4628dd323"&gt;commit&lt;/a&gt; in the &lt;a href="https://github.com/abetlen/llama-cpp-python/issues/1942"&gt;discussion&lt;/a&gt; to fix this issue.&lt;/p&gt; 
&lt;h4&gt;Q2: How to build with clang in conda environment on windows?&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;A:&lt;/strong&gt; Before building the project, verify your clang installation and access to Visual Studio tools by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;clang -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command checks that you are using the correct version of clang and that the Visual Studio tools are available. If you see an error message such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;'clang' is not recognized as an internal or external command, operable program or batch file.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It indicates that your command line window is not properly initialized for Visual Studio tools.&lt;/p&gt; 
&lt;p&gt;‚Ä¢ If you are using Command Prompt, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\Tools\VsDevCmd.bat" -startdir=none -arch=x64 -host_arch=x64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Ä¢ If you are using Windows PowerShell, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Import-Module "C:\Program Files\Microsoft Visual Studio\2022\Professional\Common7\Tools\Microsoft.VisualStudio.DevShell.dll" Enter-VsDevShell 3f0e31ad -SkipAutomaticLocation -DevCmdArguments "-arch=x64 -host_arch=x64"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These steps will initialize your environment and allow you to use the correct Visual Studio tools.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MODSetter/SurfSense</title>
      <link>https://github.com/MODSetter/SurfSense</link>
      <description>&lt;p&gt;Open Source Alternative to NotebookLM / Perplexity, connected to external sources such as Search Engines, Slack, Linear, Jira, ClickUp, Confluence, Notion, YouTube, GitHub, Discord and more. Join our discord: https://discord.gg/ejRNvftDp9&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e236b764-0ddc-42ff-a1f1-8fbb3d2e0e65" alt="new_header" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://discord.gg/ejRNvftDp9"&gt; &lt;img src="https://img.shields.io/discord/1359368468260192417" alt="Discord" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;SurfSense&lt;/h1&gt; 
&lt;p&gt;While tools like NotebookLM and Perplexity are impressive and highly effective for conducting research on any topic/query, SurfSense elevates this capability by integrating with your personal knowledge base. It is a highly customizable AI research agent, connected to external sources such as Search Engines (Tavily, LinkUp), Slack, Linear, Jira, ClickUp, Confluence, Gmail, Notion, YouTube, GitHub, Discord, Airtable, Google Calendar, Luma and more to come.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://trendshift.io/repositories/13606" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13606" alt="MODSetter%2FSurfSense | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Video&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/d9221908-e0de-4b2f-ac3a-691cf4b202da"&gt;https://github.com/user-attachments/assets/d9221908-e0de-4b2f-ac3a-691cf4b202da&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Podcast Sample&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/a0a16566-6967-4374-ac51-9b3e07fbecd7"&gt;https://github.com/user-attachments/assets/a0a16566-6967-4374-ac51-9b3e07fbecd7&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;h3&gt;üí° &lt;strong&gt;Idea&lt;/strong&gt;:&lt;/h3&gt; 
&lt;p&gt;Have your own highly customizable private NotebookLM and Perplexity integrated with external sources.&lt;/p&gt; 
&lt;h3&gt;üìÅ &lt;strong&gt;Multiple File Format Uploading Support&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Save content from your own personal files &lt;em&gt;(Documents, images, videos and supports &lt;strong&gt;50+ file extensions&lt;/strong&gt;)&lt;/em&gt; to your own personal knowledge base .&lt;/p&gt; 
&lt;h3&gt;üîç &lt;strong&gt;Powerful Search&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Quickly research or find anything in your saved content .&lt;/p&gt; 
&lt;h3&gt;üí¨ &lt;strong&gt;Chat with your Saved Content&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Interact in Natural Language and get cited answers.&lt;/p&gt; 
&lt;h3&gt;üìÑ &lt;strong&gt;Cited Answers&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Get Cited answers just like Perplexity.&lt;/p&gt; 
&lt;h3&gt;üîî &lt;strong&gt;Privacy &amp;amp; Local LLM Support&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Works Flawlessly with Ollama local LLMs.&lt;/p&gt; 
&lt;h3&gt;üè† &lt;strong&gt;Self Hostable&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Open source and easy to deploy locally.&lt;/p&gt; 
&lt;h3&gt;üéôÔ∏è Podcasts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Blazingly fast podcast generation agent. (Creates a 3-minute podcast in under 20 seconds.)&lt;/li&gt; 
 &lt;li&gt;Convert your chat conversations into engaging audio content&lt;/li&gt; 
 &lt;li&gt;Support for local TTS providers (Kokoro TTS)&lt;/li&gt; 
 &lt;li&gt;Support for multiple TTS providers (OpenAI, Azure, Google Vertex AI)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìä &lt;strong&gt;Advanced RAG Techniques&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports 100+ LLM's&lt;/li&gt; 
 &lt;li&gt;Supports 6000+ Embedding Models.&lt;/li&gt; 
 &lt;li&gt;Supports all major Rerankers (Pinecode, Cohere, Flashrank etc)&lt;/li&gt; 
 &lt;li&gt;Uses Hierarchical Indices (2 tiered RAG setup).&lt;/li&gt; 
 &lt;li&gt;Utilizes Hybrid Search (Semantic + Full Text Search combined with Reciprocal Rank Fusion).&lt;/li&gt; 
 &lt;li&gt;RAG as a Service API Backend.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‚ÑπÔ∏è &lt;strong&gt;External Sources&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Search Engines (Tavily, LinkUp)&lt;/li&gt; 
 &lt;li&gt;Slack&lt;/li&gt; 
 &lt;li&gt;Linear&lt;/li&gt; 
 &lt;li&gt;Jira&lt;/li&gt; 
 &lt;li&gt;ClickUp&lt;/li&gt; 
 &lt;li&gt;Confluence&lt;/li&gt; 
 &lt;li&gt;Notion&lt;/li&gt; 
 &lt;li&gt;Gmail&lt;/li&gt; 
 &lt;li&gt;Youtube Videos&lt;/li&gt; 
 &lt;li&gt;GitHub&lt;/li&gt; 
 &lt;li&gt;Discord&lt;/li&gt; 
 &lt;li&gt;Airtable&lt;/li&gt; 
 &lt;li&gt;Google Calendar&lt;/li&gt; 
 &lt;li&gt;Luma&lt;/li&gt; 
 &lt;li&gt;and more to come.....&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìÑ &lt;strong&gt;Supported File Extensions&lt;/strong&gt;&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: File format support depends on your ETL service configuration. LlamaCloud supports 50+ formats, Unstructured supports 34+ core formats, and Docling (core formats, local processing, privacy-focused, no API key).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Documents &amp;amp; Text&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.doc&lt;/code&gt;, &lt;code&gt;.docx&lt;/code&gt;, &lt;code&gt;.docm&lt;/code&gt;, &lt;code&gt;.dot&lt;/code&gt;, &lt;code&gt;.dotm&lt;/code&gt;, &lt;code&gt;.rtf&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.xml&lt;/code&gt;, &lt;code&gt;.epub&lt;/code&gt;, &lt;code&gt;.odt&lt;/code&gt;, &lt;code&gt;.wpd&lt;/code&gt;, &lt;code&gt;.pages&lt;/code&gt;, &lt;code&gt;.key&lt;/code&gt;, &lt;code&gt;.numbers&lt;/code&gt;, &lt;code&gt;.602&lt;/code&gt;, &lt;code&gt;.abw&lt;/code&gt;, &lt;code&gt;.cgm&lt;/code&gt;, &lt;code&gt;.cwk&lt;/code&gt;, &lt;code&gt;.hwp&lt;/code&gt;, &lt;code&gt;.lwp&lt;/code&gt;, &lt;code&gt;.mw&lt;/code&gt;, &lt;code&gt;.mcw&lt;/code&gt;, &lt;code&gt;.pbd&lt;/code&gt;, &lt;code&gt;.sda&lt;/code&gt;, &lt;code&gt;.sdd&lt;/code&gt;, &lt;code&gt;.sdp&lt;/code&gt;, &lt;code&gt;.sdw&lt;/code&gt;, &lt;code&gt;.sgl&lt;/code&gt;, &lt;code&gt;.sti&lt;/code&gt;, &lt;code&gt;.sxi&lt;/code&gt;, &lt;code&gt;.sxw&lt;/code&gt;, &lt;code&gt;.stw&lt;/code&gt;, &lt;code&gt;.sxg&lt;/code&gt;, &lt;code&gt;.uof&lt;/code&gt;, &lt;code&gt;.uop&lt;/code&gt;, &lt;code&gt;.uot&lt;/code&gt;, &lt;code&gt;.vor&lt;/code&gt;, &lt;code&gt;.wps&lt;/code&gt;, &lt;code&gt;.zabw&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.doc&lt;/code&gt;, &lt;code&gt;.docx&lt;/code&gt;, &lt;code&gt;.odt&lt;/code&gt;, &lt;code&gt;.rtf&lt;/code&gt;, &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.xml&lt;/code&gt;, &lt;code&gt;.txt&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.rst&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.org&lt;/code&gt;, &lt;code&gt;.epub&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.pdf&lt;/code&gt;, &lt;code&gt;.docx&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.htm&lt;/code&gt;, &lt;code&gt;.xhtml&lt;/code&gt;, &lt;code&gt;.adoc&lt;/code&gt;, &lt;code&gt;.asciidoc&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Presentations&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.ppt&lt;/code&gt;, &lt;code&gt;.pptx&lt;/code&gt;, &lt;code&gt;.pptm&lt;/code&gt;, &lt;code&gt;.pot&lt;/code&gt;, &lt;code&gt;.potm&lt;/code&gt;, &lt;code&gt;.potx&lt;/code&gt;, &lt;code&gt;.odp&lt;/code&gt;, &lt;code&gt;.key&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.ppt&lt;/code&gt;, &lt;code&gt;.pptx&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.pptx&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Spreadsheets &amp;amp; Data&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.xlsx&lt;/code&gt;, &lt;code&gt;.xls&lt;/code&gt;, &lt;code&gt;.xlsm&lt;/code&gt;, &lt;code&gt;.xlsb&lt;/code&gt;, &lt;code&gt;.xlw&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt;, &lt;code&gt;.tsv&lt;/code&gt;, &lt;code&gt;.ods&lt;/code&gt;, &lt;code&gt;.fods&lt;/code&gt;, &lt;code&gt;.numbers&lt;/code&gt;, &lt;code&gt;.dbf&lt;/code&gt;, &lt;code&gt;.123&lt;/code&gt;, &lt;code&gt;.dif&lt;/code&gt;, &lt;code&gt;.sylk&lt;/code&gt;, &lt;code&gt;.slk&lt;/code&gt;, &lt;code&gt;.prn&lt;/code&gt;, &lt;code&gt;.et&lt;/code&gt;, &lt;code&gt;.uos1&lt;/code&gt;, &lt;code&gt;.uos2&lt;/code&gt;, &lt;code&gt;.wk1&lt;/code&gt;, &lt;code&gt;.wk2&lt;/code&gt;, &lt;code&gt;.wk3&lt;/code&gt;, &lt;code&gt;.wk4&lt;/code&gt;, &lt;code&gt;.wks&lt;/code&gt;, &lt;code&gt;.wq1&lt;/code&gt;, &lt;code&gt;.wq2&lt;/code&gt;, &lt;code&gt;.wb1&lt;/code&gt;, &lt;code&gt;.wb2&lt;/code&gt;, &lt;code&gt;.wb3&lt;/code&gt;, &lt;code&gt;.qpw&lt;/code&gt;, &lt;code&gt;.xlr&lt;/code&gt;, &lt;code&gt;.eth&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.xls&lt;/code&gt;, &lt;code&gt;.xlsx&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt;, &lt;code&gt;.tsv&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.xlsx&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Images&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;LlamaCloud&lt;/strong&gt;: &lt;code&gt;.jpg&lt;/code&gt;, &lt;code&gt;.jpeg&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.gif&lt;/code&gt;, &lt;code&gt;.bmp&lt;/code&gt;, &lt;code&gt;.svg&lt;/code&gt;, &lt;code&gt;.tiff&lt;/code&gt;, &lt;code&gt;.webp&lt;/code&gt;, &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.htm&lt;/code&gt;, &lt;code&gt;.web&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.jpg&lt;/code&gt;, &lt;code&gt;.jpeg&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.bmp&lt;/code&gt;, &lt;code&gt;.tiff&lt;/code&gt;, &lt;code&gt;.heic&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docling&lt;/strong&gt;: &lt;code&gt;.jpg&lt;/code&gt;, &lt;code&gt;.jpeg&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, &lt;code&gt;.bmp&lt;/code&gt;, &lt;code&gt;.tiff&lt;/code&gt;, &lt;code&gt;.tif&lt;/code&gt;, &lt;code&gt;.webp&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Audio &amp;amp; Video &lt;em&gt;(Always Supported)&lt;/em&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;.mp3&lt;/code&gt;, &lt;code&gt;.mpga&lt;/code&gt;, &lt;code&gt;.m4a&lt;/code&gt;, &lt;code&gt;.wav&lt;/code&gt;, &lt;code&gt;.mp4&lt;/code&gt;, &lt;code&gt;.mpeg&lt;/code&gt;, &lt;code&gt;.webm&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Email &amp;amp; Communication&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Unstructured&lt;/strong&gt;: &lt;code&gt;.eml&lt;/code&gt;, &lt;code&gt;.msg&lt;/code&gt;, &lt;code&gt;.p7s&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;üîñ Cross Browser Extension&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;The SurfSense extension can be used to save any webpage you like.&lt;/li&gt; 
 &lt;li&gt;Its main usecase is to save any webpages protected beyond authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FEATURE REQUESTS AND FUTURE&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;SurfSense is actively being developed.&lt;/strong&gt; While it's not yet production-ready, you can help us speed up the process.&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href="https://discord.gg/ejRNvftDp9"&gt;SurfSense Discord&lt;/a&gt; and help shape the future of SurfSense!&lt;/p&gt; 
&lt;h2&gt;üöÄ Roadmap&lt;/h2&gt; 
&lt;p&gt;Stay up to date with our development progress and upcoming features!&lt;br /&gt; Check out our public roadmap and contribute your ideas or feedback:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;View the Roadmap:&lt;/strong&gt; &lt;a href="https://github.com/users/MODSetter/projects/2"&gt;SurfSense Roadmap on GitHub Projects&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How to get started?&lt;/h2&gt; 
&lt;h3&gt;Installation Options&lt;/h3&gt; 
&lt;p&gt;SurfSense provides two installation methods:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.surfsense.net/docs/docker-installation"&gt;Docker Installation&lt;/a&gt;&lt;/strong&gt; - The easiest way to get SurfSense up and running with all dependencies containerized.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Includes pgAdmin for database management through a web UI&lt;/li&gt; 
   &lt;li&gt;Supports environment variable customization via &lt;code&gt;.env&lt;/code&gt; file&lt;/li&gt; 
   &lt;li&gt;Flexible deployment options (full stack or core services only)&lt;/li&gt; 
   &lt;li&gt;No need to manually edit configuration files between environments&lt;/li&gt; 
   &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/MODSetter/SurfSense/main/DOCKER_SETUP.md"&gt;Docker Setup Guide&lt;/a&gt; for detailed instructions&lt;/li&gt; 
   &lt;li&gt;For deployment scenarios and options, see &lt;a href="https://raw.githubusercontent.com/MODSetter/SurfSense/main/DEPLOYMENT_GUIDE.md"&gt;Deployment Guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.surfsense.net/docs/manual-installation"&gt;Manual Installation (Recommended)&lt;/a&gt;&lt;/strong&gt; - For users who prefer more control over their setup or need to customize their deployment.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Both installation guides include detailed OS-specific instructions for Windows, macOS, and Linux.&lt;/p&gt; 
&lt;p&gt;Before installation, make sure to complete the &lt;a href="https://www.surfsense.net/docs/"&gt;prerequisite setup steps&lt;/a&gt; including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;PGVector setup&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Processing ETL Service&lt;/strong&gt; (choose one): 
  &lt;ul&gt; 
   &lt;li&gt;Unstructured.io API key (supports 34+ formats)&lt;/li&gt; 
   &lt;li&gt;LlamaIndex API key (enhanced parsing, supports 50+ formats)&lt;/li&gt; 
   &lt;li&gt;Docling (local processing, no API key required, supports PDF, Office docs, images, HTML, CSV)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Other required API keys&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Research Agent&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e22c5d86-f511-4c72-8c50-feba0c1561b4" alt="updated_researcher" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Search Spaces&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/e254c38c-f937-44b6-9e9d-770db583d099" alt="search_spaces" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Manage Documents&lt;/strong&gt; &lt;img src="https://github.com/user-attachments/assets/7001e306-eb06-4009-89c6-8fadfdc3fc4d" alt="documents" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Podcast Agent&lt;/strong&gt; &lt;img src="https://github.com/user-attachments/assets/6cb82ffd-9e14-4172-bc79-67faf34c4c1c" alt="podcasts" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Agent Chat&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/bb352d52-1c6d-4020-926b-722d0b98b491" alt="git_chat" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Browser Extension&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/1f042b7a-6349-422b-94fb-d40d0df16c40" alt="ext1" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a9b9f1aa-2677-404d-b0a0-c1b2dddf24a7" alt="ext2" /&gt;&lt;/p&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;BackEnd&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;: Modern, fast web framework for building APIs with Python&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;PostgreSQL with pgvector&lt;/strong&gt;: Database with vector search capabilities for similarity searches&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;SQLAlchemy&lt;/strong&gt;: SQL toolkit and ORM (Object-Relational Mapping) for database interactions&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Alembic&lt;/strong&gt;: A database migrations tool for SQLAlchemy.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;FastAPI Users&lt;/strong&gt;: Authentication and user management with JWT and OAuth support&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LangGraph&lt;/strong&gt;: Framework for developing AI-agents.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LangChain&lt;/strong&gt;: Framework for developing AI-powered applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LLM Integration&lt;/strong&gt;: Integration with LLM models through LiteLLM&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Rerankers&lt;/strong&gt;: Advanced result ranking for improved search relevance&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Hybrid Search&lt;/strong&gt;: Combines vector similarity and full-text search for optimal results using Reciprocal Rank Fusion (RRF)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vector Embeddings&lt;/strong&gt;: Document and text embeddings for semantic search&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;pgvector&lt;/strong&gt;: PostgreSQL extension for efficient vector similarity operations&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chonkie&lt;/strong&gt;: Advanced document chunking and embedding library&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Uses &lt;code&gt;AutoEmbeddings&lt;/code&gt; for flexible embedding model selection&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;LateChunker&lt;/code&gt; for optimized document chunking based on embedding model's max sequence length&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;&lt;strong&gt;FrontEnd&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Next.js 15.2.3&lt;/strong&gt;: React framework featuring App Router, server components, automatic code-splitting, and optimized rendering.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;React 19.0.0&lt;/strong&gt;: JavaScript library for building user interfaces.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: Static type-checking for JavaScript, enhancing code quality and developer experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vercel AI SDK Kit UI Stream Protocol&lt;/strong&gt;: To create scalable chat UI.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Tailwind CSS 4.x&lt;/strong&gt;: Utility-first CSS framework for building custom UI designs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Shadcn&lt;/strong&gt;: Headless components library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lucide React&lt;/strong&gt;: Icon set implemented as React components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Framer Motion&lt;/strong&gt;: Animation library for React.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Sonner&lt;/strong&gt;: Toast notification library.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Geist&lt;/strong&gt;: Font family from Vercel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;React Hook Form&lt;/strong&gt;: Form state management and validation.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Zod&lt;/strong&gt;: TypeScript-first schema validation with static type inference.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;@hookform/resolvers&lt;/strong&gt;: Resolvers for using validation libraries with React Hook Form.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;@tanstack/react-table&lt;/strong&gt;: Headless UI for building powerful tables &amp;amp; datagrids.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;DevOps&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;: Container platform for consistent deployment across environments&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Docker Compose&lt;/strong&gt;: Tool for defining and running multi-container Docker applications&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;pgAdmin&lt;/strong&gt;: Web-based PostgreSQL administration tool included in Docker setup&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Extension&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Manifest v3 on Plasmo&lt;/p&gt; 
&lt;h2&gt;Future Work&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add More Connectors.&lt;/li&gt; 
 &lt;li&gt;Patch minor bugs.&lt;/li&gt; 
 &lt;li&gt;Document Podcasts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Contributions are very welcome! A contribution can be as small as a ‚≠ê or even finding and creating issues. Fine-tuning the Backend is always desired.&lt;/p&gt; 
&lt;p&gt;For detailed contribution guidelines, please see our &lt;a href="https://raw.githubusercontent.com/MODSetter/SurfSense/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#MODSetter/SurfSense&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=MODSetter/SurfSense&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/user-attachments/assets/329c9bc2-6005-4aed-a629-700b5ae296b4" alt="Catalyst Project" width="200" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>roboflow/rf-detr</title>
      <link>https://github.com/roboflow/rf-detr</link>
      <description>&lt;p&gt;RF-DETR is a real-time object detection and segmentation model architecture developed by Roboflow, SOTA on COCO and designed for fine-tuning.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;RF-DETR: SOTA Real-Time Detection and Segmentation Model&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://badge.fury.io/py/rfdetr"&gt;&lt;img src="https://badge.fury.io/py/rfdetr.svg?sanitize=true" alt="version" /&gt;&lt;/a&gt; &lt;a href="https://pypistats.org/packages/rfdetr"&gt;&lt;img src="https://img.shields.io/pypi/dm/rfdetr" alt="downloads" /&gt;&lt;/a&gt; &lt;a href="https://badge.fury.io/py/rfdetr"&gt;&lt;img src="https://img.shields.io/pypi/pyversions/rfdetr" alt="python-version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/roboflow/rfdetr/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202.0-blue" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://huggingface.co/spaces/SkalskiP/RF-DETR"&gt;&lt;img src="https://img.shields.io/badge/%F0%9F%A4%97%20Hugging%20Face-Spaces-blue" alt="hf space" /&gt;&lt;/a&gt; &lt;a href="https://colab.research.google.com/github/roboflow-ai/notebooks/blob/main/notebooks/how-to-finetune-rf-detr-on-detection-dataset.ipynb"&gt;&lt;img src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" alt="colab" /&gt;&lt;/a&gt; &lt;a href="https://blog.roboflow.com/rf-detr"&gt;&lt;img src="https://raw.githubusercontent.com/roboflow-ai/notebooks/main/assets/badges/roboflow-blogpost.svg?sanitize=true" alt="roboflow" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/GbfgXGJ8Bk"&gt;&lt;img src="https://img.shields.io/discord/1159501506232451173?logo=discord&amp;amp;label=discord&amp;amp;labelColor=fff&amp;amp;color=5865f2&amp;amp;link=https%3A%2F%2Fdiscord.gg%2FGbfgXGJ8Bk" alt="discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;RF-DETR is a real-time, transformer-based object detection and instance segmentation model architecture developed by Roboflow and released under the Apache 2.0 license.&lt;/p&gt; 
&lt;p&gt;RF-DETR is the first real-time model to exceed 60 AP on the &lt;a href="https://cocodataset.org/#home"&gt;Microsoft COCO object detection benchmark&lt;/a&gt; alongside competitive performance at base sizes. It also achieves state-of-the-art performance on &lt;a href="https://github.com/roboflow/rf100-vl"&gt;RF100-VL&lt;/a&gt;, an object detection benchmark that measures model domain adaptability to real world problems. RF-DETR is fastest and most accurate for its size when compared current real-time objection models.&lt;/p&gt; 
&lt;p&gt;On image segmentation, RF-DETR Seg (Preview) is 3x faster and more accurate than the largest YOLO when evaluated on the Microsoft COCO Segmentation benchmark, defining a new real-time state-of-the-art for the industry-standard benchmark in segmentation model evaluation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/-OvpdLAElFA"&gt;&lt;img src="https://github.com/user-attachments/assets/555a45c3-96e8-4d8a-ad29-f23403c8edfd" alt="rf-detr-tutorial-banner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;2025/10/02&lt;/code&gt;: We release RF-DETR-Seg (Preview), a preview of our instance segmentation head for RF-DETR.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025/07/23&lt;/code&gt;: We release three new checkpoints for RF-DETR: Nano, Small, and Medium. 
  &lt;ul&gt; 
   &lt;li&gt;RF-DETR Base is now deprecated. We recommend using RF-DETR Medium which offers subtantially better accuracy at comparable latency.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025/03/20&lt;/code&gt;: We release RF-DETR real-time object detection model. &lt;strong&gt;Code and checkpoint for RF-DETR-large and RF-DETR-base are available.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025/04/03&lt;/code&gt;: We release early stopping, gradient checkpointing, metrics saving, training resume, TensorBoard and W&amp;amp;B logging support.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;2025/05/16&lt;/code&gt;: We release an 'optimize_for_inference' method which speeds up native PyTorch by up to 2x, depending on platform.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Results&lt;/h2&gt; 
&lt;p&gt;RF-DETR achieves state-of-the-art performance on both the Microsoft COCO and the RF100-VL benchmarks.&lt;/p&gt; 
&lt;p&gt;The below tables shows how RF-DETR performs when validated on the Microsoft COCO benchmark for object detection and image segmentation.&lt;/p&gt; 
&lt;h3&gt;Object Detection Benchmarks&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://media.roboflow.com/rfdetr/pareto1.png" alt="rf-detr-coco-rf100-vl-9" /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Architecture&lt;/th&gt; 
   &lt;th align="center"&gt;COCO AP&lt;sub&gt;50&lt;/sub&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;COCO AP&lt;sub&gt;50:95&lt;/sub&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;RF100VL AP&lt;sub&gt;50&lt;/sub&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;RF100VL AP&lt;sub&gt;50:95&lt;/sub&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;Latency (ms)&lt;/th&gt; 
   &lt;th align="center"&gt;Params (M)&lt;/th&gt; 
   &lt;th align="center"&gt;Resolution&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;RF-DETR-N&lt;/td&gt; 
   &lt;td align="center"&gt;67.6&lt;/td&gt; 
   &lt;td align="center"&gt;48.4&lt;/td&gt; 
   &lt;td align="center"&gt;84.1&lt;/td&gt; 
   &lt;td align="center"&gt;57.1&lt;/td&gt; 
   &lt;td align="center"&gt;2.32&lt;/td&gt; 
   &lt;td align="center"&gt;30.5&lt;/td&gt; 
   &lt;td align="center"&gt;384x384&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;RF-DETR-S&lt;/td&gt; 
   &lt;td align="center"&gt;72.1&lt;/td&gt; 
   &lt;td align="center"&gt;53.0&lt;/td&gt; 
   &lt;td align="center"&gt;85.9&lt;/td&gt; 
   &lt;td align="center"&gt;59.6&lt;/td&gt; 
   &lt;td align="center"&gt;3.52&lt;/td&gt; 
   &lt;td align="center"&gt;32.1&lt;/td&gt; 
   &lt;td align="center"&gt;512x512&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;RF-DETR-M&lt;/td&gt; 
   &lt;td align="center"&gt;73.6&lt;/td&gt; 
   &lt;td align="center"&gt;54.7&lt;/td&gt; 
   &lt;td align="center"&gt;86.6&lt;/td&gt; 
   &lt;td align="center"&gt;60.6&lt;/td&gt; 
   &lt;td align="center"&gt;4.52&lt;/td&gt; 
   &lt;td align="center"&gt;33.7&lt;/td&gt; 
   &lt;td align="center"&gt;576x576&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;YOLO11-N&lt;/td&gt; 
   &lt;td align="center"&gt;52.0&lt;/td&gt; 
   &lt;td align="center"&gt;37.4&lt;/td&gt; 
   &lt;td align="center"&gt;81.4&lt;/td&gt; 
   &lt;td align="center"&gt;55.3&lt;/td&gt; 
   &lt;td align="center"&gt;2.49&lt;/td&gt; 
   &lt;td align="center"&gt;2.6&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;YOLO11-S&lt;/td&gt; 
   &lt;td align="center"&gt;59.7&lt;/td&gt; 
   &lt;td align="center"&gt;44.4&lt;/td&gt; 
   &lt;td align="center"&gt;82.3&lt;/td&gt; 
   &lt;td align="center"&gt;56.2&lt;/td&gt; 
   &lt;td align="center"&gt;3.16&lt;/td&gt; 
   &lt;td align="center"&gt;9.4&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;YOLO11-M&lt;/td&gt; 
   &lt;td align="center"&gt;64.1&lt;/td&gt; 
   &lt;td align="center"&gt;48.6&lt;/td&gt; 
   &lt;td align="center"&gt;82.5&lt;/td&gt; 
   &lt;td align="center"&gt;56.5&lt;/td&gt; 
   &lt;td align="center"&gt;5.13&lt;/td&gt; 
   &lt;td align="center"&gt;20.1&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;YOLO11-L&lt;/td&gt; 
   &lt;td align="center"&gt;65.3&lt;/td&gt; 
   &lt;td align="center"&gt;50.2&lt;/td&gt; 
   &lt;td align="center"&gt;x&lt;/td&gt; 
   &lt;td align="center"&gt;x&lt;/td&gt; 
   &lt;td align="center"&gt;6.65&lt;/td&gt; 
   &lt;td align="center"&gt;25.3&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;YOLO11-X&lt;/td&gt; 
   &lt;td align="center"&gt;66.5&lt;/td&gt; 
   &lt;td align="center"&gt;51.2&lt;/td&gt; 
   &lt;td align="center"&gt;x&lt;/td&gt; 
   &lt;td align="center"&gt;x&lt;/td&gt; 
   &lt;td align="center"&gt;11.92&lt;/td&gt; 
   &lt;td align="center"&gt;56.9&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;LW-DETR-T&lt;/td&gt; 
   &lt;td align="center"&gt;60.7&lt;/td&gt; 
   &lt;td align="center"&gt;42.9&lt;/td&gt; 
   &lt;td align="center"&gt;x&lt;/td&gt; 
   &lt;td align="center"&gt;x&lt;/td&gt; 
   &lt;td align="center"&gt;1.91&lt;/td&gt; 
   &lt;td align="center"&gt;12.1&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;LW-DETR-S&lt;/td&gt; 
   &lt;td align="center"&gt;66.8&lt;/td&gt; 
   &lt;td align="center"&gt;48.0&lt;/td&gt; 
   &lt;td align="center"&gt;84.5&lt;/td&gt; 
   &lt;td align="center"&gt;58.0&lt;/td&gt; 
   &lt;td align="center"&gt;2.62&lt;/td&gt; 
   &lt;td align="center"&gt;14.6&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;LW-DETR-M&lt;/td&gt; 
   &lt;td align="center"&gt;72.0&lt;/td&gt; 
   &lt;td align="center"&gt;52.6&lt;/td&gt; 
   &lt;td align="center"&gt;85.2&lt;/td&gt; 
   &lt;td align="center"&gt;59.4&lt;/td&gt; 
   &lt;td align="center"&gt;4.49&lt;/td&gt; 
   &lt;td align="center"&gt;28.2&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;D-FINE-N&lt;/td&gt; 
   &lt;td align="center"&gt;60.2&lt;/td&gt; 
   &lt;td align="center"&gt;42.7&lt;/td&gt; 
   &lt;td align="center"&gt;83.6&lt;/td&gt; 
   &lt;td align="center"&gt;57.7&lt;/td&gt; 
   &lt;td align="center"&gt;2.12&lt;/td&gt; 
   &lt;td align="center"&gt;3.8&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;D-FINE-S&lt;/td&gt; 
   &lt;td align="center"&gt;67.6&lt;/td&gt; 
   &lt;td align="center"&gt;50.7&lt;/td&gt; 
   &lt;td align="center"&gt;84.5&lt;/td&gt; 
   &lt;td align="center"&gt;59.9&lt;/td&gt; 
   &lt;td align="center"&gt;3.55&lt;/td&gt; 
   &lt;td align="center"&gt;10.2&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;D-FINE-M&lt;/td&gt; 
   &lt;td align="center"&gt;72.6&lt;/td&gt; 
   &lt;td align="center"&gt;55.1&lt;/td&gt; 
   &lt;td align="center"&gt;84.6&lt;/td&gt; 
   &lt;td align="center"&gt;60.2&lt;/td&gt; 
   &lt;td align="center"&gt;5.68&lt;/td&gt; 
   &lt;td align="center"&gt;19.2&lt;/td&gt; 
   &lt;td align="center"&gt;640x640&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://rfdetr.roboflow.com/learn/benchmarks/"&gt;See our benchmark notes in the RF-DETR documentation.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;We are actively working on RF-DETR Large and X-Large models using the same techniques we used to achieve the strong accuracy that RF-DETR Medium attains. This is why RF-DETR Large and X-Large is not yet reported on our pareto charts and why we haven't benchmarked other models at similar sizes. Check back in the next few weeks for the launch of new RF-DETR Large and X-Large models.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Instance Segmentation Benchmarks&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://media.roboflow.com/rfdetr/pareto_segmentation.png" alt="rf-detr-coco-rf100-vl-9" /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model Name&lt;/th&gt; 
   &lt;th&gt;Reported Latency&lt;/th&gt; 
   &lt;th&gt;Reported mAP&lt;/th&gt; 
   &lt;th&gt;Measured Latency&lt;/th&gt; 
   &lt;th&gt;Measured mAP&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RF-DETR Seg-Preview@312&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;3.3&lt;/td&gt; 
   &lt;td&gt;39.4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLO11n-Seg&lt;/td&gt; 
   &lt;td&gt;1.8&lt;/td&gt; 
   &lt;td&gt;32.0&lt;/td&gt; 
   &lt;td&gt;3.6&lt;/td&gt; 
   &lt;td&gt;30.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLOv8n-Seg&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;30.5&lt;/td&gt; 
   &lt;td&gt;3.5&lt;/td&gt; 
   &lt;td&gt;28.3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RF-DETR Seg-Preview@384&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;4.5&lt;/td&gt; 
   &lt;td&gt;42.7&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLO11s-Seg&lt;/td&gt; 
   &lt;td&gt;2.9&lt;/td&gt; 
   &lt;td&gt;37.8&lt;/td&gt; 
   &lt;td&gt;4.6&lt;/td&gt; 
   &lt;td&gt;35.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLOv8s-Seg&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;36.8&lt;/td&gt; 
   &lt;td&gt;4.2&lt;/td&gt; 
   &lt;td&gt;34.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RF-DETR Seg-Preview@432&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;5.6&lt;/td&gt; 
   &lt;td&gt;44.3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLO11m-Seg&lt;/td&gt; 
   &lt;td&gt;6.3&lt;/td&gt; 
   &lt;td&gt;41.5&lt;/td&gt; 
   &lt;td&gt;6.9&lt;/td&gt; 
   &lt;td&gt;38.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLOv8m-Seg&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;40.8&lt;/td&gt; 
   &lt;td&gt;7.0&lt;/td&gt; 
   &lt;td&gt;37.3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLO11l-Seg&lt;/td&gt; 
   &lt;td&gt;7.8&lt;/td&gt; 
   &lt;td&gt;42.9&lt;/td&gt; 
   &lt;td&gt;8.3&lt;/td&gt; 
   &lt;td&gt;39.5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLOv8l-Seg&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;42.6&lt;/td&gt; 
   &lt;td&gt;9.7&lt;/td&gt; 
   &lt;td&gt;39.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLO11x-Seg&lt;/td&gt; 
   &lt;td&gt;15.8&lt;/td&gt; 
   &lt;td&gt;43.8&lt;/td&gt; 
   &lt;td&gt;13.7&lt;/td&gt; 
   &lt;td&gt;40.1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;YOLOv8x-Seg&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;43.4&lt;/td&gt; 
   &lt;td&gt;14.0&lt;/td&gt; 
   &lt;td&gt;39.5&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For more information on measuring end-to-end latency for models, see our open source &lt;a href="https://github.com/roboflow/single_artifact_benchmarking"&gt;Single Artifact Benchmarking tool&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install RF-DETR, install the &lt;code&gt;rfdetr&lt;/code&gt; package in a &lt;a href="https://www.python.org/"&gt;&lt;strong&gt;Python&amp;gt;=3.9&lt;/strong&gt;&lt;/a&gt; environment with &lt;code&gt;pip&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install rfdetr
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Install from source&lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p&gt;By installing RF-DETR from source, you can explore the most recent features and enhancements that have not yet been officially released. Please note that these updates are still in development and may not be as stable as the latest published release.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;pip install git+https://github.com/roboflow/rf-detr.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Inference&lt;/h2&gt; 
&lt;p&gt;The easiest path to deployment is using Roboflow's &lt;a href="https://github.com/roboflow/inference"&gt;Inference&lt;/a&gt; package.&lt;/p&gt; 
&lt;p&gt;The code below lets you run &lt;code&gt;rfdetr-base&lt;/code&gt; on an image:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import os
import supervision as sv
from inference import get_model
from PIL import Image
from io import BytesIO
import requests

url = "https://media.roboflow.com/dog.jpeg"
image = Image.open(BytesIO(requests.get(url).content))

model = get_model("rfdetr-base")

predictions = model.infer(image, confidence=0.5)[0]

detections = sv.Detections.from_inference(predictions)

labels = [prediction.class_name for prediction in predictions.predictions]

annotated_image = image.copy()
annotated_image = sv.BoxAnnotator(color=sv.ColorPalette.ROBOFLOW).annotate(annotated_image, detections)
annotated_image = sv.LabelAnnotator(color=sv.ColorPalette.ROBOFLOW).annotate(annotated_image, detections, labels)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use segmentation, use the &lt;code&gt;rfdetr-seg-preview&lt;/code&gt; model ID. This model will return segmentation masks from a RF-DETR-Seg (Preview) model trained on the Microsoft COCO dataset.&lt;/p&gt; 
&lt;h2&gt;Predict&lt;/h2&gt; 
&lt;p&gt;You can also use the .predict method to perform inference during local development. The &lt;code&gt;.predict()&lt;/code&gt; method accepts various input formats, including file paths, PIL images, NumPy arrays, and torch tensors. Please ensure inputs use RGB channel order. For &lt;code&gt;torch.Tensor&lt;/code&gt; inputs specifically, they must have a shape of &lt;code&gt;(3, H, W)&lt;/code&gt; with values normalized to the &lt;code&gt;[0..1)&lt;/code&gt; range. If you don't plan to modify the image or batch size dynamically at runtime, you can also use &lt;code&gt;.optimize_for_inference()&lt;/code&gt; to get up to 2x end-to-end speedup, depending on platform.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import io
import requests
import supervision as sv
from PIL import Image
from rfdetr import RFDETRBase
from rfdetr.util.coco_classes import COCO_CLASSES

model = RFDETRBase()

model.optimize_for_inference()

url = "https://media.roboflow.com/notebooks/examples/dog-2.jpeg"

image = Image.open(io.BytesIO(requests.get(url).content))
detections = model.predict(image, threshold=0.5)

labels = [
    f"{COCO_CLASSES[class_id]} {confidence:.2f}"
    for class_id, confidence
    in zip(detections.class_id, detections.confidence)
]

annotated_image = image.copy()
annotated_image = sv.BoxAnnotator().annotate(annotated_image, detections)
annotated_image = sv.LabelAnnotator().annotate(annotated_image, detections, labels)

sv.plot_image(annotated_image)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Train a Model&lt;/h3&gt; 
&lt;p&gt;You can fine-tune an RF-DETR Nano, Small, Medium, and Base model with a custom dataset using the &lt;code&gt;rfdetr&lt;/code&gt; Python package.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://rfdetr.roboflow.com/learn/train/"&gt;Learn how to train an RF-DETR model.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit our &lt;a href="https://rfdetr.roboflow.com"&gt;documentation website&lt;/a&gt; to learn more about how to use RF-DETR.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Both the code and the weights pretrained on the COCO dataset are released under the &lt;a href="https://github.com/roboflow/r-flow/raw/main/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Our work is built upon &lt;a href="https://arxiv.org/pdf/2406.03459"&gt;LW-DETR&lt;/a&gt;, &lt;a href="https://arxiv.org/pdf/2304.07193"&gt;DINOv2&lt;/a&gt;, and &lt;a href="https://arxiv.org/pdf/2010.04159"&gt;Deformable DETR&lt;/a&gt;. Thanks to their authors for their excellent work!&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find our work helpful for your research, please consider citing the following BibTeX entry.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@software{rf-detr,
  author = {Robinson, Isaac and Robicheaux, Peter and Popov, Matvei and Ramanan, Deva and Peri, Neehar},
  license = {Apache-2.0},
  title = {RF-DETR},
  howpublished = {\url{https://github.com/roboflow/rf-detr}},
  year = {2025},
  note = {SOTA Real-Time Object Detection Model}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;We welcome and appreciate all contributions! If you notice any issues or bugs, have questions, or would like to suggest new features, please &lt;a href="https://github.com/roboflow/rf-detr/issues/new"&gt;open an issue&lt;/a&gt; or pull request. By sharing your ideas and improvements, you help make RF-DETR better for everyone.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://youtube.com/roboflow"&gt; &lt;img src="https://media.roboflow.com/notebooks/template/icons/purple/youtube.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949634652" width="3%" /&gt; &lt;/a&gt; 
 &lt;img src="https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png" width="3%" /&gt; 
 &lt;a href="https://roboflow.com"&gt; &lt;img src="https://media.roboflow.com/notebooks/template/icons/purple/roboflow-app.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949746649" width="3%" /&gt; &lt;/a&gt; 
 &lt;img src="https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png" width="3%" /&gt; 
 &lt;a href="https://www.linkedin.com/company/roboflow-ai/"&gt; &lt;img src="https://media.roboflow.com/notebooks/template/icons/purple/linkedin.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949633691" width="3%" /&gt; &lt;/a&gt; 
 &lt;img src="https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png" width="3%" /&gt; 
 &lt;a href="https://docs.roboflow.com"&gt; &lt;img src="https://media.roboflow.com/notebooks/template/icons/purple/knowledge.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949634511" width="3%" /&gt; &lt;/a&gt; 
 &lt;img src="https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png" width="3%" /&gt; 
 &lt;a href="https://discuss.roboflow.com"&gt; &lt;img src="https://media.roboflow.com/notebooks/template/icons/purple/forum.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949633584" width="3%" /&gt; &lt;img src="https://raw.githubusercontent.com/ultralytics/assets/main/social/logo-transparent.png" width="3%" /&gt; &lt;/a&gt;
 &lt;a href="https://blog.roboflow.com"&gt; &lt;img src="https://media.roboflow.com/notebooks/template/icons/purple/blog.png?ik-sdk-version=javascript-1.4.3&amp;amp;updatedAt=1672949633605" width="3%" /&gt; &lt;/a&gt;  
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>dgtlmoon/changedetection.io</title>
      <link>https://github.com/dgtlmoon/changedetection.io</link>
      <description>&lt;p&gt;Best and simplest tool for website change detection, web page monitoring, and website change alerts. Perfect for tracking content changes, price drops, restock alerts, and website defacement monitoring‚Äîall for free or enjoy our SaaS plan!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Detect Website Changes Automatically ‚Äî Monitor Web Page Changes in Real Time&lt;/h1&gt; 
&lt;p&gt;Monitor websites for updates ‚Äî get notified via Discord, Email, Slack, Telegram, Webhook and many more.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Detect web page content changes and get instant alerts.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Ideal for monitoring price changes, content edits, conditional changes and more.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png" style="max-width:100%;" alt="Web site page change monitoring" title="Web site page change monitoring" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dgtlmoon/changedetection.io/releases"&gt;&lt;img src="https://img.shields.io:/github/v/release/dgtlmoon/changedetection.io?style=for-the-badge" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/dgtlmoon/changedetection.io"&gt;&lt;img src="https://img.shields.io/docker/pulls/dgtlmoon/changedetection.io?style=for-the-badge" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/LICENSE.md"&gt;&lt;img src="https://img.shields.io/github/license/dgtlmoon/changedetection.io.svg?style=for-the-badge" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/dgtlmoon/changedetection.io/actions/workflows/test-only.yml/badge.svg?branch=master" alt="changedetection.io" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io"&gt;&lt;strong&gt;Get started with website page change monitoring straight away. Don't have time? Try our $8.99/month subscription, use our proxies and support!&lt;/strong&gt;&lt;/a&gt; , &lt;em&gt;half the price of other website change monitoring services!&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chrome browser included.&lt;/li&gt; 
 &lt;li&gt;Nothing to install, access via browser login after signup.&lt;/li&gt; 
 &lt;li&gt;Super fast, no registration needed setup.&lt;/li&gt; 
 &lt;li&gt;Get started watching and receiving website change notifications straight away.&lt;/li&gt; 
 &lt;li&gt;See our &lt;a href="https://changedetection.io/tutorials"&gt;tutorials and how-to page for more inspiration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Target specific parts of the webpage using the Visual Selector tool.&lt;/h3&gt; 
&lt;p&gt;Available when connected to a &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Playwright-content-fetcher"&gt;playwright content fetcher&lt;/a&gt; (included as part of our subscription service)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/visualselector-anim.gif" style="max-width:100%;" alt="Select parts and elements of a web page to monitor for changes" title="Select parts and elements of a web page to monitor for changes" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Easily see what changed, examine by word, line, or individual character.&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-diff.png" style="max-width:100%;" alt="Self-hosted web page change monitoring context difference " title="Self-hosted web page change monitoring context difference " /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Perform interactive browser steps&lt;/h3&gt; 
&lt;p&gt;Fill in text boxes, click buttons and more, setup your changedetection scenario.&lt;/p&gt; 
&lt;p&gt;Using the &lt;strong&gt;Browser Steps&lt;/strong&gt; configuration, add basic steps before performing change detection, such as logging into websites, adding a product to a cart, accept cookie logins, entering dates and refining searches.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/browsersteps-anim.gif" style="max-width:100%;" alt="Website change detection with interactive browser steps, detect changes behind login and password, search queries and more" title="Website change detection with interactive browser steps, detect changes behind login and password, search queries and more" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;After &lt;strong&gt;Browser Steps&lt;/strong&gt; have been run, then visit the &lt;strong&gt;Visual Selector&lt;/strong&gt; tab to refine the content you're interested in. Requires Playwright to be enabled.&lt;/p&gt; 
&lt;h3&gt;Awesome restock and price change notifications&lt;/h3&gt; 
&lt;p&gt;Enable the &lt;em&gt;"Re-stock &amp;amp; Price detection for single product pages"&lt;/em&gt; option to activate the best way to monitor product pricing, this will extract any meta-data in the HTML page and give you many options to follow the pricing of the product.&lt;/p&gt; 
&lt;p&gt;Easily organise and monitor prices for products from the dashboard, get alerts and notifications when the price of a product changes or comes back in stock again!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/restock-overview.png" style="max-width:100%;" alt="Easily keep an eye on product price changes directly from the UI" title="Easily keep an eye on product price changes directly from the UI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Set price change notification parameters, upper and lower price, price change percentage and more. Always know when a product for sale drops in price.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://changedetection.io?src=github"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/restock-settings.png" style="max-width:100%;" alt="Set upper lower and percentage price change notification values" title="Set upper lower and percentage price change notification values" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Example use cases&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Products and services have a change in pricing&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Out of stock notification&lt;/em&gt; and &lt;em&gt;Back In stock notification&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Monitor and track PDF file changes, know when a PDF file has text changes.&lt;/li&gt; 
 &lt;li&gt;Governmental department updates (changes are often only on their websites)&lt;/li&gt; 
 &lt;li&gt;New software releases, security advisories when you're not on their mailing list.&lt;/li&gt; 
 &lt;li&gt;Festivals with changes&lt;/li&gt; 
 &lt;li&gt;Discogs restock alerts and monitoring&lt;/li&gt; 
 &lt;li&gt;Realestate listing changes&lt;/li&gt; 
 &lt;li&gt;Know when your favourite whiskey is on sale, or other special deals are announced before anyone else&lt;/li&gt; 
 &lt;li&gt;COVID related news from government websites&lt;/li&gt; 
 &lt;li&gt;University/organisation news from their website&lt;/li&gt; 
 &lt;li&gt;Detect and monitor changes in JSON API responses&lt;/li&gt; 
 &lt;li&gt;JSON API monitoring and alerting&lt;/li&gt; 
 &lt;li&gt;Changes in legal and other documents&lt;/li&gt; 
 &lt;li&gt;Trigger API calls via notifications when text appears on a website&lt;/li&gt; 
 &lt;li&gt;Glue together APIs using the JSON filter and JSON notifications&lt;/li&gt; 
 &lt;li&gt;Create RSS feeds based on changes in web content&lt;/li&gt; 
 &lt;li&gt;Monitor HTML source code for unexpected changes, strengthen your PCI compliance&lt;/li&gt; 
 &lt;li&gt;You have a very sensitive list of URLs to watch and you do &lt;em&gt;not&lt;/em&gt; want to use the paid alternatives. (Remember, &lt;em&gt;you&lt;/em&gt; are the product)&lt;/li&gt; 
 &lt;li&gt;Get notified when certain keywords appear in Twitter search results&lt;/li&gt; 
 &lt;li&gt;Proactively search for jobs, get notified when companies update their careers page, search job portals for keywords.&lt;/li&gt; 
 &lt;li&gt;Get alerts when new job positions are open on Bamboo HR and other job platforms&lt;/li&gt; 
 &lt;li&gt;Website defacement monitoring&lt;/li&gt; 
 &lt;li&gt;Pok√©mon Card Restock Tracker / Pok√©mon TCG Tracker&lt;/li&gt; 
 &lt;li&gt;RegTech - stay ahead of regulatory changes, regulatory compliance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Need an actual Chrome runner with Javascript support? We support fetching via WebDriver and Playwright!&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;Key Features&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lots of trigger filters, such as "Trigger on text", "Remove text by selector", "Ignore text", "Extract text", also using regular-expressions!&lt;/li&gt; 
 &lt;li&gt;Target elements with xPath 1 and xPath 2, CSS Selectors, Easily monitor complex JSON with JSONPath or jq&lt;/li&gt; 
 &lt;li&gt;Switch between fast non-JS and Chrome JS based "fetchers"&lt;/li&gt; 
 &lt;li&gt;Track changes in PDF files (Monitor text changed in the PDF, Also monitor PDF filesize and checksums)&lt;/li&gt; 
 &lt;li&gt;Easily specify how often a site should be checked&lt;/li&gt; 
 &lt;li&gt;Execute JS before extracting text (Good for logging in, see examples in the UI!)&lt;/li&gt; 
 &lt;li&gt;Override Request Headers, Specify &lt;code&gt;POST&lt;/code&gt; or &lt;code&gt;GET&lt;/code&gt; and other methods&lt;/li&gt; 
 &lt;li&gt;Use the "Visual Selector" to help target specific elements&lt;/li&gt; 
 &lt;li&gt;Configurable &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration"&gt;proxy per watch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Send a screenshot with the notification when a change is detected in the web page&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We &lt;a href="https://brightdata.grsm.io/n0r16zf7eivq"&gt;recommend and use Bright Data&lt;/a&gt; global proxy services, Bright Data will match any first deposit up to $150 using our signup link.&lt;/p&gt; 
&lt;p&gt;Please &lt;span&gt;‚≠ê&lt;/span&gt; star &lt;span&gt;‚≠ê&lt;/span&gt; this project and help it grow! &lt;a href="https://github.com/dgtlmoon/changedetection.io/"&gt;https://github.com/dgtlmoon/changedetection.io/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Conditional web page changes&lt;/h3&gt; 
&lt;p&gt;Easily &lt;a href="https://changedetection.io/tutorial/conditional-actions-web-page-changes"&gt;configure conditional actions&lt;/a&gt;, for example, only trigger when a price is above or below a preset amount, or &lt;a href="https://changedetection.io/tutorial/how-monitor-keywords-any-website"&gt;when a web page includes (or does not include) a keyword&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/web-page-change-conditions.png" style="max-width:80%;" alt="Conditional web page changes" title="Conditional web page changes" /&gt; 
&lt;h3&gt;Schedule web page watches in any timezone, limit by day of week and time.&lt;/h3&gt; 
&lt;p&gt;Easily set a re-check schedule, for example you could limit the web page change detection to only operate during business hours. Or perhaps based on a foreign timezone (for example, you want to check for the latest news-headlines in a foreign country at 0900 AM),&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/scheduler.png" style="max-width:80%;" alt="How to monitor web page changes according to a schedule" title="How to monitor web page changes according to a schedule" /&gt; 
&lt;p&gt;Includes quick short-cut buttons to setup a schedule for &lt;strong&gt;business hours only&lt;/strong&gt;, or &lt;strong&gt;weekends&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;We have a Chrome extension!&lt;/h3&gt; 
&lt;p&gt;Easily add the current web page to your changedetection.io tool, simply install the extension and click "Sync" to connect it to your existing changedetection.io install.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/changedetectionio-website/kefcfmgmlhmankjmnbijimhofdjekbop"&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/chrome-extension-screenshot.png" style="max-width:80%;" alt="Chrome Extension to easily add the current web-page to detect a change." title="Chrome Extension to easily add the current web-page to detect a change." /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://chromewebstore.google.com/detail/changedetectionio-website/kefcfmgmlhmankjmnbijimhofdjekbop"&gt;Goto the Chrome Webstore to download the extension.&lt;/a&gt; ( Or check out the &lt;a href="https://github.com/dgtlmoon/changedetection.io-browser-extension"&gt;GitHub repo&lt;/a&gt; )&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;With Docker composer, just clone this repository and..&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Docker standalone&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ docker run -d --restart always -p "127.0.0.1:5000:5000" -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;:latest&lt;/code&gt; tag is our latest stable release, &lt;code&gt;:dev&lt;/code&gt; tag is our bleeding edge &lt;code&gt;master&lt;/code&gt; branch.&lt;/p&gt; 
&lt;p&gt;Alternative docker repository over at ghcr - &lt;a href="https://ghcr.io/dgtlmoon/changedetection.io"&gt;ghcr.io/dgtlmoon/changedetection.io&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;See the install instructions at the wiki &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows"&gt;https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Python Pip&lt;/h3&gt; 
&lt;p&gt;Check out our pypi page &lt;a href="https://pypi.org/project/changedetection.io/"&gt;https://pypi.org/project/changedetection.io/&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ pip3 install changedetection.io
$ changedetection.io -d /path/to/empty/data/dir -p 5000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://127.0.0.1:5000"&gt;http://127.0.0.1:5000&lt;/a&gt; , You should now be able to access the UI.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Now with per-site configurable support for using a fast built in HTTP fetcher or use a Chrome based fetcher for monitoring of JavaScript websites!&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Updating changedetection.io&lt;/h2&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;docker pull dgtlmoon/changedetection.io
docker kill $(docker ps -a -f name=changedetection.io -q)
docker rm $(docker ps -a -f name=changedetection.io -q)
docker run -d --restart always -p "127.0.0.1:5000:5000" -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;docker compose&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose pull &amp;amp;&amp;amp; docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the wiki for more information &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki"&gt;https://github.com/dgtlmoon/changedetection.io/wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Filters&lt;/h2&gt; 
&lt;p&gt;XPath(1.0), JSONPath, jq, and CSS support comes baked in! You can be as specific as you need, use XPath exported from various XPath element query creation tools. (We support LXML &lt;code&gt;re:test&lt;/code&gt;, &lt;code&gt;re:match&lt;/code&gt; and &lt;code&gt;re:replace&lt;/code&gt;.)&lt;/p&gt; 
&lt;h2&gt;Notifications&lt;/h2&gt; 
&lt;p&gt;ChangeDetection.io supports a massive amount of notifications (including email, office365, custom APIs, etc) when a web-page has a change detected thanks to the &lt;a href="https://github.com/caronc/apprise"&gt;apprise&lt;/a&gt; library. Simply set one or more notification URL's in the &lt;em&gt;[edit]&lt;/em&gt; tab of that watch.&lt;/p&gt; 
&lt;p&gt;Just some examples&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;discord://webhook_id/webhook_token
flock://app_token/g:channel_id
gitter://token/room
gchat://workspace/key/token
msteams://TokenA/TokenB/TokenC/
o365://TenantID:AccountEmail/ClientID/ClientSecret/TargetEmail
rocket://user:password@hostname/#Channel
mailto://user:pass@example.com?to=receivingAddress@example.com
json://someserver.com/custom-api
syslog://
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/caronc/apprise#popular-notification-services"&gt;And everything else in this list!&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-notifications.png" style="max-width:100%;" alt="Self-hosted web page change monitoring notifications" title="Self-hosted web page change monitoring notifications" /&gt; 
&lt;p&gt;Now you can also customise your notification content and use &lt;a target="_new" href="https://jinja.palletsprojects.com/en/3.0.x/templates/"&gt;Jinja2 templating&lt;/a&gt; for their title and body!&lt;/p&gt; 
&lt;h2&gt;JSON API Monitoring&lt;/h2&gt; 
&lt;p&gt;Detect changes and monitor data in JSON API's by using either JSONPath or jq to filter, parse, and restructure JSON as needed.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-filter-field-example.png" alt="image" /&gt;&lt;/p&gt; 
&lt;p&gt;This will re-parse the JSON and apply formatting to the text, making it super easy to monitor and detect changes in JSON API results&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-diff-example.png" alt="image" /&gt;&lt;/p&gt; 
&lt;h3&gt;JSONPath or jq?&lt;/h3&gt; 
&lt;p&gt;For more complex parsing, filtering, and modifying of JSON data, jq is recommended due to the built-in operators and functions. Refer to the &lt;a href="https://stedolan.github.io/jq/manual/"&gt;documentation&lt;/a&gt; for more specific information on jq.&lt;/p&gt; 
&lt;p&gt;One big advantage of &lt;code&gt;jq&lt;/code&gt; is that you can use logic in your JSON filter, such as filters to only show items that have a value greater than/less than etc.&lt;/p&gt; 
&lt;p&gt;See the wiki &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/JSON-Selector-Filter-help"&gt;https://github.com/dgtlmoon/changedetection.io/wiki/JSON-Selector-Filter-help&lt;/a&gt; for more information and examples&lt;/p&gt; 
&lt;h3&gt;Parse JSON embedded in HTML!&lt;/h3&gt; 
&lt;p&gt;When you enable a &lt;code&gt;json:&lt;/code&gt; or &lt;code&gt;jq:&lt;/code&gt; filter, you can even automatically extract and parse embedded JSON inside a HTML page! Amazingly handy for sites that build content based on JSON, such as many e-commerce websites.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
...
&amp;lt;script type="application/ld+json"&amp;gt;

{
   "@context":"http://schema.org/",
   "@type":"Product",
   "offers":{
      "@type":"Offer",
      "availability":"http://schema.org/InStock",
      "price":"3949.99",
      "priceCurrency":"USD",
      "url":"https://www.newegg.com/p/3D5-000D-001T1"
   },
   "description":"Cobratype King Cobra Hero Desktop Gaming PC",
   "name":"Cobratype King Cobra Hero Desktop Gaming PC",
   "sku":"3D5-000D-001T1",
   "itemCondition":"NewCondition"
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;json:$..price&lt;/code&gt; or &lt;code&gt;jq:..price&lt;/code&gt; would give &lt;code&gt;3949.99&lt;/code&gt;, or you can extract the whole structure (use a JSONpath test website to validate with)&lt;/p&gt; 
&lt;p&gt;The application also supports notifying you that it can follow this information automatically&lt;/p&gt; 
&lt;h2&gt;Proxy Configuration&lt;/h2&gt; 
&lt;p&gt;See the wiki &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration"&gt;https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration&lt;/a&gt; , we also support using &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration#brightdata-proxy-support"&gt;Bright Data proxy services where possible&lt;/a&gt; and &lt;a href="https://oxylabs.go2cloud.org/SH2d"&gt;Oxylabs&lt;/a&gt; proxy services.&lt;/p&gt; 
&lt;h2&gt;Raspberry Pi support?&lt;/h2&gt; 
&lt;p&gt;Raspberry Pi and linux/arm/v6 linux/arm/v7 arm64 devices are supported! See the wiki for &lt;a href="https://github.com/dgtlmoon/changedetection.io/wiki/Fetching-pages-with-WebDriver"&gt;details&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Import support&lt;/h2&gt; 
&lt;p&gt;Easily &lt;a href="https://changedetection.io/tutorial/how-import-your-website-change-detection-lists-excel"&gt;import your list of websites to watch for changes in Excel .xslx file format&lt;/a&gt;, or paste in lists of website URLs as plaintext.&lt;/p&gt; 
&lt;p&gt;Excel import is recommended - that way you can better organise tags/groups of websites and other features.&lt;/p&gt; 
&lt;h2&gt;API Support&lt;/h2&gt; 
&lt;p&gt;Full REST API for programmatic management of watches, tags, notifications and more.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://changedetection.io/docs/api_v1/index.html"&gt;Interactive API Documentation&lt;/a&gt;&lt;/strong&gt; - Complete API reference with live testing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/api-spec.yaml"&gt;OpenAPI Specification&lt;/a&gt;&lt;/strong&gt; - Generate SDKs for any programming language&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support us&lt;/h2&gt; 
&lt;p&gt;Do you use changedetection.io to make money? does it save you time or money? Does it make your life easier? less stressful? Remember, we write this software when we should be doing actual paid work, we have to buy food and pay rent just like you.&lt;/p&gt; 
&lt;p&gt;Consider taking out an officially supported &lt;a href="https://changedetection.io?src=github"&gt;website change detection subscription&lt;/a&gt; , even if you don't use it, you still get the warm fuzzy feeling of helping out the project. (And who knows, you might just use it!)&lt;/p&gt; 
&lt;h2&gt;Commercial Support&lt;/h2&gt; 
&lt;p&gt;I offer commercial support, this software is depended on by network security, aerospace , data-science and data-journalist professionals just to name a few, please reach out at &lt;a href="mailto:dgtlmoon@gmail.com"&gt;dgtlmoon@gmail.com&lt;/a&gt; for any enquiries, I am more than glad to work with your organisation to further the possibilities of what can be done with changedetection.io&lt;/p&gt; 
&lt;h2&gt;Commercial Licencing&lt;/h2&gt; 
&lt;p&gt;If you are reselling this software either in part or full as part of any commercial arrangement, you must abide by our COMMERCIAL_LICENCE.md found in our code repository, please contact &lt;a href="mailto:dgtlmoon@gmail.com"&gt;dgtlmoon@gmail.com&lt;/a&gt; and &lt;a href="mailto:contact@changedetection.io"&gt;contact@changedetection.io&lt;/a&gt; .&lt;/p&gt; 
&lt;h2&gt;Third-party licenses&lt;/h2&gt; 
&lt;p&gt;changedetectionio.html_tools.elementpath_tostring: Copyright (c), 2018-2021, SISSA (Scuola Internazionale Superiore di Studi Avanzati), Licensed under &lt;a href="https://github.com/sissaschool/elementpath/raw/master/LICENSE"&gt;MIT license&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Recognition of fantastic contributors to the project&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Constantin Hong &lt;a href="https://github.com/Constantin1489"&gt;https://github.com/Constantin1489&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microsoft/agent-framework</title>
      <link>https://github.com/microsoft/agent-framework</link>
      <description>&lt;p&gt;A framework for building, orchestrating and deploying AI agents and multi-agent workflows with support for Python and .NET.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/agent-framework/main/docs/assets/readme-banner.png" alt="Microsoft Agent Framework" /&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome to Microsoft Agent Framework!&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/b5zjErwbQM"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/b5zjErwbQM?style=flat" alt="Microsoft Azure AI Foundry Discord" /&gt;&lt;/a&gt; &lt;a href="https://learn.microsoft.com/en-us/agent-framework/"&gt;&lt;img src="https://img.shields.io/badge/MS%20Learn-Documentation-blue" alt="MS Learn Documentation" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/agent-framework/"&gt;&lt;img src="https://img.shields.io/pypi/v/agent-framework" alt="PyPI" /&gt;&lt;/a&gt; &lt;a href="https://www.nuget.org/profiles/MicrosoftAgentFramework/"&gt;&lt;img src="https://img.shields.io/nuget/v/Microsoft.Agents.AI" alt="NuGet" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Welcome to Microsoft's comprehensive multi-language framework for building, orchestrating, and deploying AI agents with support for both .NET and Python implementations. This framework provides everything from simple chat agents to complex multi-agent workflows with graph-based orchestration.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=AAgdMhftj8w" title="Watch the full Agent Framework introduction (30 min)"&gt; &lt;img src="https://img.youtube.com/vi/AAgdMhftj8w/hqdefault.jpg" alt="Watch the full Agent Framework introduction (30 min)" width="480" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=AAgdMhftj8w"&gt; Watch the full Agent Framework introduction (30 min) &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;üìã Getting Started&lt;/h2&gt; 
&lt;h3&gt;üì¶ Installation&lt;/h3&gt; 
&lt;p&gt;Python&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install agent-framework --pre
# This will install all sub-packages, see `python/packages` for individual packages.
# It may take a minute on first install on Windows.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;.NET&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;dotnet add package Microsoft.Agents.AI
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üìö Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/agent-framework/overview/agent-framework-overview"&gt;Overview&lt;/a&gt;&lt;/strong&gt; - High level overview of the framework&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/agent-framework/tutorials/quick-start"&gt;Quick Start&lt;/a&gt;&lt;/strong&gt; - Get started with a simple agent&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/agent-framework/tutorials/overview"&gt;Tutorials&lt;/a&gt;&lt;/strong&gt; - Step by step tutorials&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/en-us/agent-framework/user-guide/overview"&gt;User Guide&lt;/a&gt;&lt;/strong&gt; - In-depth user guide for building agents and workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/en-us/agent-framework/migration-guide/from-semantic-kernel"&gt;Migration from Semantic Kernel&lt;/a&gt;&lt;/strong&gt; - Guide to migrate from Semantic Kernel&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/en-us/agent-framework/migration-guide/from-autogen"&gt;Migration from AutoGen&lt;/a&gt;&lt;/strong&gt; - Guide to migrate from AutoGen&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;‚ú® &lt;strong&gt;Highlights&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Graph-based Workflows&lt;/strong&gt;: Connect agents and deterministic functions using data flows with streaming, checkpointing, human-in-the-loop, and time-travel capabilities 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/workflows/"&gt;Python workflows&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Workflows/"&gt;.NET workflows&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AF Labs&lt;/strong&gt;: Experimental packages for cutting-edge features including benchmarking, reinforcement learning, and research initiatives 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/packages/lab/"&gt;Labs directory&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DevUI&lt;/strong&gt;: Interactive developer UI for agent development, testing, and debugging workflows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/packages/devui/"&gt;DevUI package&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=mOAaGY4WPvc"&gt; &lt;img src="https://img.youtube.com/vi/mOAaGY4WPvc/hqdefault.jpg" alt="See the DevUI in action" width="480" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.youtube.com/watch?v=mOAaGY4WPvc"&gt; See the DevUI in action (1 min) &lt;/a&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python and C#/.NET Support&lt;/strong&gt;: Full framework support for both Python and C#/.NET implementations with consistent APIs 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/packages/"&gt;Python packages&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/src/"&gt;.NET source&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt;: Built-in OpenTelemetry integration for distributed tracing, monitoring, and debugging 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/observability/"&gt;Python observability&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/AgentOpenTelemetry/"&gt;.NET telemetry&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Agent Provider Support&lt;/strong&gt;: Support for various LLM providers with more being added continuously 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/agents/"&gt;Python examples&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/AgentProviders/"&gt;.NET examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Middleware&lt;/strong&gt;: Flexible middleware system for request/response processing, exception handling, and custom pipelines 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/middleware/"&gt;Python middleware&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Agents/Agent_Step14_Middleware/"&gt;.NET middleware&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üí¨ &lt;strong&gt;We want your feedback!&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;For bugs, please file a &lt;a href="https://github.com/microsoft/agent-framework/issues"&gt;GitHub issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Basic Agent - Python&lt;/h3&gt; 
&lt;p&gt;Create a simple Azure Responses Agent that writes a haiku about the Microsoft Agent Framework&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# pip install agent-framework --pre
# Use `az login` to authenticate with Azure CLI
import os
import asyncio
from agent_framework.azure import AzureOpenAIResponsesClient
from azure.identity import AzureCliCredential


async def main():
    # Initialize a chat agent with Azure OpenAI Responses
    # the endpoint, deployment name, and api version can be set via environment variables
    # or they can be passed in directly to the AzureOpenAIResponsesClient constructor
    agent = AzureOpenAIResponsesClient(
        # endpoint=os.environ["AZURE_OPENAI_ENDPOINT"],
        # deployment_name=os.environ["AZURE_OPENAI_RESPONSES_DEPLOYMENT_NAME"],
        # api_version=os.environ["AZURE_OPENAI_API_VERSION"],
        # api_key=os.environ["AZURE_OPENAI_API_KEY"],  # Optional if using AzureCliCredential
        credential=AzureCliCredential(), # Optional, if using api_key
    ).create_agent(
        name="HaikuBot",
        instructions="You are an upbeat assistant that writes beautifully.",
    )

    print(await agent.run("Write a haiku about Microsoft Agent Framework."))

if __name__ == "__main__":
    asyncio.run(main())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Basic Agent - .NET&lt;/h3&gt; 
&lt;p&gt;Create a simple Agent, using OpenAI Responses, that writes a haiku about the Microsoft Agent Framework&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c#"&gt;// dotnet add package Microsoft.Agents.AI.OpenAI --prerelease
using System;
using OpenAI;

// Replace the &amp;lt;apikey&amp;gt; with your OpenAI API key.
var agent = new OpenAIClient("&amp;lt;apikey&amp;gt;")
    .GetOpenAIResponseClient("gpt-4o-mini")
    .CreateAIAgent(name: "HaikuBot", instructions: "You are an upbeat assistant that writes beautifully.");

Console.WriteLine(await agent.RunAsync("Write a haiku about Microsoft Agent Framework."));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a simple Agent, using Azure OpenAI Responses with token based auth, that writes a haiku about the Microsoft Agent Framework&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-c#"&gt;// dotnet add package Microsoft.Agents.AI.OpenAI --prerelease
// dotnet add package Azure.Identity
// Use `az login` to authenticate with Azure CLI
using System;
using OpenAI;

// Replace &amp;lt;resource&amp;gt; and gpt-4o-mini with your Azure OpenAI resource name and deployment name.
var agent = new OpenAIClient(
    new BearerTokenPolicy(new AzureCliCredential(), "https://ai.azure.com/.default"),
    new OpenAIClientOptions() { Endpoint = new Uri("https://&amp;lt;resource&amp;gt;.openai.azure.com/openai/v1") })
    .GetOpenAIResponseClient("gpt-4o-mini")
    .CreateAIAgent(name: "HaikuBot", instructions: "You are an upbeat assistant that writes beautifully.");

Console.WriteLine(await agent.RunAsync("Write a haiku about Microsoft Agent Framework."));
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;More Examples &amp;amp; Samples&lt;/h2&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/agents"&gt;Getting Started with Agents&lt;/a&gt;: basic agent creation and tool usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/chat_client"&gt;Chat Client Examples&lt;/a&gt;: direct chat client usage patterns&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/samples/getting_started/workflows"&gt;Getting Started with Workflows&lt;/a&gt;: basic workflow creation and integration with agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;.NET&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Agents"&gt;Getting Started with Agents&lt;/a&gt;: basic agent creation and tool usage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/AgentProviders"&gt;Agent Provider Samples&lt;/a&gt;: samples showing different agent providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/dotnet/samples/GettingStarted/Workflows"&gt;Workflow Samples&lt;/a&gt;: advanced multi-agent patterns and workflow orchestration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributor Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/python/DEV_SETUP.md"&gt;Python Development Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/docs/design"&gt;Design Documents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/agent-framework/main/docs/decisions"&gt;Architectural Decision Records&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Important Notes&lt;/h2&gt; 
&lt;p&gt;If you use the Microsoft Agent Framework to build applications that operate with third-party servers or agents, you do so at your own risk. We recommend reviewing all data being shared with third-party servers or agents and being cognizant of third-party practices for retention and location of data. It is your responsibility to manage whether your data will flow outside of your organization's Azure compliance and geographic boundaries and any related implications.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>simular-ai/Agent-S</title>
      <link>https://github.com/simular-ai/Agent-S</link>
      <description>&lt;p&gt;Agent S: an open agentic framework that uses computers like a human&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/simular-ai/Agent-S/main/images/agent_s.png" alt="Logo" style="vertical-align:middle" width="60" /&gt; Agent S: &lt;small&gt;Use Computer Like a Human&lt;/small&gt; &lt;/h1&gt; 
&lt;p align="center"&gt;&amp;nbsp; üåê &lt;a href="https://www.simular.ai/articles/agent-s3"&gt;[S3 blog]&lt;/a&gt;&amp;nbsp; üìÑ &lt;a href="https://arxiv.org/abs/2510.02250"&gt;[S3 Paper]&lt;/a&gt;&amp;nbsp; üé• &lt;a href="https://www.youtube.com/watch?v=VHr0a3UBsh4"&gt;[S3 Video]&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;&amp;nbsp; üåê &lt;a href="https://www.simular.ai/articles/agent-s2-technical-review"&gt;[S2 blog]&lt;/a&gt;&amp;nbsp; üìÑ &lt;a href="https://arxiv.org/abs/2504.00906"&gt;[S2 Paper (COLM 2025)]&lt;/a&gt;&amp;nbsp; üé• &lt;a href="https://www.youtube.com/watch?v=wUGVQl7c0eg"&gt;[S2 Video]&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;&amp;nbsp; üåê &lt;a href="https://www.simular.ai/agent-s"&gt;[S1 blog]&lt;/a&gt;&amp;nbsp; üìÑ &lt;a href="https://arxiv.org/abs/2410.08164"&gt;[S1 Paper (ICLR 2025)]&lt;/a&gt;&amp;nbsp; üé• &lt;a href="https://www.youtube.com/watch?v=OBDE3Knte0g"&gt;[S1 Video]&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;&amp;nbsp; &lt;a href="https://trendshift.io/repositories/13151" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13151" alt="simular-ai%2FAgent-S | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://img.shields.io/badge/OS-Windows-blue?logo=windows&amp;amp;logoColor=white" alt="Windows" /&gt; &lt;img src="https://img.shields.io/badge/OS-macOS-black?logo=apple&amp;amp;logoColor=white" alt="macOS" /&gt; &lt;img src="https://img.shields.io/badge/OS-Linux-yellow?logo=linux&amp;amp;logoColor=black" alt="Linux" /&gt; &lt;a href="https://discord.gg/E2XfsK9fPV"&gt; &lt;img src="https://dcbadge.limes.pink/api/server/https://discord.gg/E2XfsK9fPV?style=flat" alt="Discord" /&gt; &lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;a href="https://pepy.tech/projects/gui-agents"&gt; &lt;img src="https://static.pepy.tech/badge/gui-agents" alt="PyPI Downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=de"&gt;Deutsch&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=es"&gt;Espa√±ol&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=fr"&gt;fran√ßais&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=ja"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=ko"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=pt"&gt;Portugu√™s&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=ru"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; | 
 &lt;a href="https://www.readme-i18n.com/simular-ai/Agent-S?lang=zh"&gt;‰∏≠Êñá&lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt;
  &amp;nbsp;&amp;nbsp; 
 &lt;p&gt;Skip the setup? Try Agent S in &lt;a href="https://cloud.simular.ai/"&gt;Simular Cloud&lt;/a&gt; &lt;/p&gt;
&lt;/div&gt; 
&lt;h2&gt;ü•≥ Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/10/02&lt;/strong&gt;: Released Agent S3 and its &lt;a href="https://arxiv.org/abs/2510.02250"&gt;technical paper&lt;/a&gt;, setting a new SOTA of &lt;strong&gt;69.9%&lt;/strong&gt; on OSWorld (approaching 72% human performance), with strong generalizability on WindowsAgentArena and AndroidWorld! It is also simpler, faster, and more flexible.&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/08/01&lt;/strong&gt;: Agent S2.5 is released (gui-agents v0.2.5): simpler, better, and faster! New SOTA on &lt;a href="https://os-world.github.io"&gt;OSWorld-Verified&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/07/07&lt;/strong&gt;: The &lt;a href="https://arxiv.org/abs/2504.00906"&gt;Agent S2 paper&lt;/a&gt; is accepted to COLM 2025! See you in Montreal!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/04/27&lt;/strong&gt;: The Agent S paper won the Best Paper Award üèÜ at ICLR 2025 Agentic AI for Science Workshop!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/04/01&lt;/strong&gt;: Released the &lt;a href="https://arxiv.org/abs/2504.00906"&gt;Agent S2 paper&lt;/a&gt; with new SOTA results on OSWorld, WindowsAgentArena, and AndroidWorld!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/03/12&lt;/strong&gt;: Released Agent S2 along with v0.2.0 of &lt;a href="https://github.com/simular-ai/Agent-S"&gt;gui-agents&lt;/a&gt;, the new state-of-the-art for computer use agents (CUA), outperforming OpenAI's CUA/Operator and Anthropic's Claude 3.7 Sonnet Computer-Use!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/01/22&lt;/strong&gt;: The &lt;a href="https://arxiv.org/abs/2410.08164"&gt;Agent S paper&lt;/a&gt; is accepted to ICLR 2025!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2025/01/21&lt;/strong&gt;: Released v0.1.2 of &lt;a href="https://github.com/simular-ai/Agent-S"&gt;gui-agents&lt;/a&gt; library, with support for Linux and Windows!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2024/12/05&lt;/strong&gt;: Released v0.1.0 of &lt;a href="https://github.com/simular-ai/Agent-S"&gt;gui-agents&lt;/a&gt; library, allowing you to use Agent-S for Mac, OSWorld, and WindowsAgentArena with ease!&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;2024/10/10&lt;/strong&gt;: Released the &lt;a href="https://arxiv.org/abs/2410.08164"&gt;Agent S paper&lt;/a&gt; and codebase!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-introduction"&gt;üí° Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-current-results"&gt;üéØ Current Results&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#%EF%B8%8F-installation--setup"&gt;üõ†Ô∏è Installation &amp;amp; Setup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-usage"&gt;üöÄ Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-acknowledgements"&gt;ü§ù Acknowledgements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/#-citation"&gt;üí¨ Citation&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üí° Introduction&lt;/h2&gt; 
&lt;p&gt;Welcome to &lt;strong&gt;Agent S&lt;/strong&gt;, an open-source framework designed to enable autonomous interaction with computers through Agent-Computer Interface. Our mission is to build intelligent GUI agents that can learn from past experiences and perform complex tasks autonomously on your computer.&lt;/p&gt; 
&lt;p&gt;Whether you're interested in AI, automation, or contributing to cutting-edge agent-based systems, we're excited to have you here!&lt;/p&gt; 
&lt;h2&gt;üéØ Current Results&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/simular-ai/Agent-S/main/images/s3_results.png" alt="Agent S3 Results" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;On OSWorld, Agent S3 alone reaches 62.6% in the 100-step setting, already exceeding the previous state of the art of 61.4% (Claude Sonnet 4.5). With the addition of Behavior Best-of-N, performance climbs even higher to 69.9%, bringing computer-use agents to within just a few points of human-level accuracy (72%).&lt;/p&gt; 
&lt;p&gt;Agent S3 also demonstrates strong zero-shot generalization. On WindowsAgentArena, accuracy rises from 50.2% using only Agent S3 to 56.6% by selecting from 3 rollouts. Similarly on AndroidWorld, performance improves from 68.1% to 71.6%&lt;/p&gt; 
&lt;h2&gt;üõ†Ô∏è Installation &amp;amp; Setup&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Single Monitor&lt;/strong&gt;: Our agent is designed for single monitor screens&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security&lt;/strong&gt;: The agent runs Python code to control your computer - use with care&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Supported Platforms&lt;/strong&gt;: Linux, Mac, and Windows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;To install Agent S3 without cloning the repository, run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install gui-agents
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you would like to test Agent S3 while making changes, clone the repository and install using&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pip install -e .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Don't forget to also &lt;code&gt;brew install tesseract&lt;/code&gt;! Pytesseract requires this extra installation to work.&lt;/p&gt; 
&lt;h3&gt;API Configuration&lt;/h3&gt; 
&lt;h4&gt;Option 1: Environment Variables&lt;/h4&gt; 
&lt;p&gt;Add to your &lt;code&gt;.bashrc&lt;/code&gt; (Linux) or &lt;code&gt;.zshrc&lt;/code&gt; (MacOS):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY=&amp;lt;YOUR_API_KEY&amp;gt;
export ANTHROPIC_API_KEY=&amp;lt;YOUR_ANTHROPIC_API_KEY&amp;gt;
export HF_TOKEN=&amp;lt;YOUR_HF_TOKEN&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Option 2: Python Script&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import os
os.environ["OPENAI_API_KEY"] = "&amp;lt;YOUR_API_KEY&amp;gt;"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Supported Models&lt;/h3&gt; 
&lt;p&gt;We support Azure OpenAI, Anthropic, Gemini, Open Router, and vLLM inference. See &lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/models.md"&gt;models.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Grounding Models (Required)&lt;/h3&gt; 
&lt;p&gt;For optimal performance, we recommend &lt;a href="https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B"&gt;UI-TARS-1.5-7B&lt;/a&gt; hosted on Hugging Face Inference Endpoints or another provider. See &lt;a href="https://huggingface.co/learn/cookbook/en/enterprise_dedicated_endpoints"&gt;Hugging Face Inference Endpoints&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;üöÄ Usage&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö°Ô∏è &lt;strong&gt;Recommended Setup:&lt;/strong&gt;&lt;br /&gt; For the best configuration, we recommend using &lt;strong&gt;OpenAI gpt-5-2025-08-07&lt;/strong&gt; as the main model, paired with &lt;strong&gt;UI-TARS-1.5-7B&lt;/strong&gt; for grounding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;CLI&lt;/h3&gt; 
&lt;p&gt;Note, this is running Agent S3, our improved agent, without bBoN.&lt;/p&gt; 
&lt;p&gt;Run Agent S3 with the required parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;agent_s \
    --provider openai \
    --model gpt-5-2025-08-07 \
    --ground_provider huggingface \
    --ground_url http://localhost:8080 \
    --ground_model ui-tars-1.5-7b \
    --grounding_width 1920 \
    --grounding_height 1080
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Local Coding Environment (Optional)&lt;/h4&gt; 
&lt;p&gt;For tasks that require code execution (e.g., data processing, file manipulation, system automation), you can enable the local coding environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;agent_s \
    --provider openai \
    --model gpt-5-2025-08-07 \
    --ground_provider huggingface \
    --ground_url http://localhost:8080 \
    --ground_model ui-tars-1.5-7b \
    --grounding_width 1920 \
    --grounding_height 1080 \
    --enable_local_env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚ö†Ô∏è &lt;strong&gt;WARNING&lt;/strong&gt;: The local coding environment executes arbitrary Python and Bash code locally on your machine. Only use this feature in trusted environments and with trusted inputs.&lt;/p&gt; 
&lt;h4&gt;Required Parameters&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--provider&lt;/code&gt;&lt;/strong&gt;: Main generation model provider (e.g., openai, anthropic, etc.) - Default: "openai"&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model&lt;/code&gt;&lt;/strong&gt;: Main generation model name (e.g., gpt-5-2025-08-07) - Default: "gpt-5-2025-08-07"&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_provider&lt;/code&gt;&lt;/strong&gt;: The provider for the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_url&lt;/code&gt;&lt;/strong&gt;: The URL of the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_model&lt;/code&gt;&lt;/strong&gt;: The model name for the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--grounding_width&lt;/code&gt;&lt;/strong&gt;: Width of the output coordinate resolution from the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--grounding_height&lt;/code&gt;&lt;/strong&gt;: Height of the output coordinate resolution from the grounding model - &lt;strong&gt;Required&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Optional Parameters&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model_temperature&lt;/code&gt;&lt;/strong&gt;: The temperature to fix all model calls to (necessary to set to 1.0 for models like o3 but can be left blank for other models)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Grounding Model Dimensions&lt;/h4&gt; 
&lt;p&gt;The grounding width and height should match the output coordinate resolution of your grounding model:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;UI-TARS-1.5-7B&lt;/strong&gt;: Use &lt;code&gt;--grounding_width 1920 --grounding_height 1080&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI-TARS-72B&lt;/strong&gt;: Use &lt;code&gt;--grounding_width 1000 --grounding_height 1000&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Optional Parameters&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model_url&lt;/code&gt;&lt;/strong&gt;: Custom API URL for main generation model - Default: ""&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--model_api_key&lt;/code&gt;&lt;/strong&gt;: API key for main generation model - Default: ""&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--ground_api_key&lt;/code&gt;&lt;/strong&gt;: API key for grounding model endpoint - Default: ""&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--max_trajectory_length&lt;/code&gt;&lt;/strong&gt;: Maximum number of image turns to keep in trajectory - Default: 8&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--enable_reflection&lt;/code&gt;&lt;/strong&gt;: Enable reflection agent to assist the worker agent - Default: True&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;--enable_local_env&lt;/code&gt;&lt;/strong&gt;: Enable local coding environment for code execution (WARNING: Executes arbitrary code locally) - Default: False&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Local Coding Environment Details&lt;/h4&gt; 
&lt;p&gt;The local coding environment enables Agent S3 to execute Python and Bash code directly on your machine. This is particularly useful for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data Processing&lt;/strong&gt;: Manipulating spreadsheets, CSV files, or databases&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Operations&lt;/strong&gt;: Bulk file processing, content extraction, or file organization&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Automation&lt;/strong&gt;: Configuration changes, system setup, or automation scripts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Development&lt;/strong&gt;: Writing, editing, or executing code files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Text Processing&lt;/strong&gt;: Document manipulation, content editing, or formatting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When enabled, the agent can use the &lt;code&gt;call_code_agent&lt;/code&gt; action to execute code blocks for tasks that can be completed through programming rather than GUI interaction.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt;: The same Python interpreter used to run Agent S3 (automatically detected)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Bash&lt;/strong&gt;: Available at &lt;code&gt;/bin/bash&lt;/code&gt; (standard on macOS and Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Permissions&lt;/strong&gt;: The agent runs with the same permissions as the user executing it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Security Considerations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The local environment executes arbitrary code with the same permissions as the user running the agent&lt;/li&gt; 
 &lt;li&gt;Only enable this feature in trusted environments&lt;/li&gt; 
 &lt;li&gt;Be cautious when the agent generates code for system-level operations&lt;/li&gt; 
 &lt;li&gt;Consider running in a sandboxed environment for untrusted tasks&lt;/li&gt; 
 &lt;li&gt;Bash scripts are executed with a 30-second timeout to prevent hanging processes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;gui_agents&lt;/code&gt; SDK&lt;/h3&gt; 
&lt;p&gt;First, we import the necessary modules. &lt;code&gt;AgentS3&lt;/code&gt; is the main agent class for Agent S3. &lt;code&gt;OSWorldACI&lt;/code&gt; is our grounding agent that translates agent actions into executable python code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import pyautogui
import io
from gui_agents.s3.agents.agent_s import AgentS3
from gui_agents.s3.agents.grounding import OSWorldACI
from gui_agents.s3.utils.local_env import LocalEnv  # Optional: for local coding environment

# Load in your API keys.
from dotenv import load_dotenv
load_dotenv()

current_platform = "linux"  # "darwin", "windows"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, we define our engine parameters. &lt;code&gt;engine_params&lt;/code&gt; is used for the main agent, and &lt;code&gt;engine_params_for_grounding&lt;/code&gt; is for grounding. For &lt;code&gt;engine_params_for_grounding&lt;/code&gt;, we support custom endpoints like HuggingFace TGI, vLLM, and Open Router.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;engine_params = {
  "engine_type": provider,
  "model": model,
  "base_url": model_url,           # Optional
  "api_key": model_api_key,        # Optional
  "temperature": model_temperature # Optional
}

# Load the grounding engine from a custom endpoint
ground_provider = "&amp;lt;your_ground_provider&amp;gt;"
ground_url = "&amp;lt;your_ground_url&amp;gt;"
ground_model = "&amp;lt;your_ground_model&amp;gt;"
ground_api_key = "&amp;lt;your_ground_api_key&amp;gt;"

# Set grounding dimensions based on your model's output coordinate resolution
# UI-TARS-1.5-7B: grounding_width=1920, grounding_height=1080
# UI-TARS-72B: grounding_width=1000, grounding_height=1000
grounding_width = 1920  # Width of output coordinate resolution
grounding_height = 1080  # Height of output coordinate resolution

engine_params_for_grounding = {
  "engine_type": ground_provider,
  "model": ground_model,
  "base_url": ground_url,
  "api_key": ground_api_key,  # Optional
  "grounding_width": grounding_width,
  "grounding_height": grounding_height,
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, we define our grounding agent and Agent S3.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Optional: Enable local coding environment
enable_local_env = False  # Set to True to enable local code execution
local_env = LocalEnv() if enable_local_env else None

grounding_agent = OSWorldACI(
    env=local_env,  # Pass local_env for code execution capability
    platform=current_platform,
    engine_params_for_generation=engine_params,
    engine_params_for_grounding=engine_params_for_grounding,
    width=1920,  # Optional: screen width
    height=1080  # Optional: screen height
)

agent = AgentS3(
    engine_params,
    grounding_agent,
    platform=current_platform,
    max_trajectory_length=8,  # Optional: maximum image turns to keep
    enable_reflection=True     # Optional: enable reflection agent
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, let's query the agent!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Get screenshot.
screenshot = pyautogui.screenshot()
buffered = io.BytesIO() 
screenshot.save(buffered, format="PNG")
screenshot_bytes = buffered.getvalue()

obs = {
  "screenshot": screenshot_bytes,
}

instruction = "Close VS Code"
info, action = agent.predict(instruction=instruction, observation=obs)

exec(action[0])
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to &lt;code&gt;gui_agents/s3/cli_app.py&lt;/code&gt; for more details on how the inference loop works.&lt;/p&gt; 
&lt;h3&gt;OSWorld&lt;/h3&gt; 
&lt;p&gt;To deploy Agent S3 in OSWorld, follow the &lt;a href="https://raw.githubusercontent.com/simular-ai/Agent-S/main/osworld_setup/s3/OSWorld.md"&gt;OSWorld Deployment instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üí¨ Citations&lt;/h2&gt; 
&lt;p&gt;If you find this codebase useful, please cite:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@misc{Agent-S3,
      title={The Unreasonable Effectiveness of Scaling Agents for Computer Use}, 
      author={Gonzalo Gonzalez-Pumariega and Vincent Tu and Chih-Lun Lee and Jiachen Yang and Ang Li and Xin Eric Wang},
      year={2025},
      eprint={2510.02250},
      archivePrefix={arXiv},
      primaryClass={cs.AI},
      url={https://arxiv.org/abs/2510.02250}, 
}

@misc{Agent-S2,
      title={Agent S2: A Compositional Generalist-Specialist Framework for Computer Use Agents}, 
      author={Saaket Agashe and Kyle Wong and Vincent Tu and Jiachen Yang and Ang Li and Xin Eric Wang},
      year={2025},
      eprint={2504.00906},
      archivePrefix={arXiv},
      primaryClass={cs.AI},
      url={https://arxiv.org/abs/2504.00906}, 
}

@inproceedings{Agent-S,
    title={{Agent S: An Open Agentic Framework that Uses Computers Like a Human}},
    author={Saaket Agashe and Jiuzhou Han and Shuyu Gan and Jiachen Yang and Ang Li and Xin Eric Wang},
    booktitle={International Conference on Learning Representations (ICLR)},
    year={2025},
    url={https://arxiv.org/abs/2410.08164}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#simular-ai/Agent-S&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=simular-ai/Agent-S&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>swisskyrepo/PayloadsAllTheThings</title>
      <link>https://github.com/swisskyrepo/PayloadsAllTheThings</link>
      <description>&lt;p&gt;A list of useful payloads and bypass for Web Application Security and Pentest/CTF&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Payloads All The Things&lt;/h1&gt; 
&lt;p&gt;A list of useful payloads and bypasses for Web Application Security. Feel free to improve with your payloads and techniques!&lt;/p&gt; 
&lt;p&gt;You can also contribute with a &lt;span&gt;üçª&lt;/span&gt; IRL, or using the sponsor button.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/swisskyrepo"&gt;&lt;img src="https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;link=https://github.com/sponsors/swisskyrepo" alt="Sponsor" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/tweet?text=Payloads%20All%20The%20Things,%20a%20list%20of%20useful%20payloads%20and%20bypasses%20for%20Web%20Application%20Security%20-%20by%20@pentest_swissky&amp;amp;url=https://github.com/swisskyrepo/PayloadsAllTheThings/"&gt;&lt;img src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" alt="Tweet" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An alternative display version is available at &lt;a href="https://swisskyrepo.github.io/PayloadsAllTheThings/"&gt;PayloadsAllTheThingsWeb&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/swisskyrepo/PayloadsAllTheThings/master/.github/banner.png" alt="banner" /&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;üìñ&lt;/span&gt; Documentation&lt;/h2&gt; 
&lt;p&gt;Every section contains the following files, you can use the &lt;code&gt;_template_vuln&lt;/code&gt; folder to create a new chapter:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;README.md - vulnerability description and how to exploit it, including several payloads&lt;/li&gt; 
 &lt;li&gt;Intruder - a set of files to give to Burp Intruder&lt;/li&gt; 
 &lt;li&gt;Images - pictures for the README.md&lt;/li&gt; 
 &lt;li&gt;Files - some files referenced in the README.md&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You might also like the other projects from the AllTheThings family :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://swisskyrepo.github.io/InternalAllTheThings/"&gt;InternalAllTheThings&lt;/a&gt; - Active Directory and Internal Pentest Cheatsheets&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://swisskyrepo.github.io/HardwareAllTheThings/"&gt;HardwareAllTheThings&lt;/a&gt; - Hardware/IOT Pentesting Wiki&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You want more? Check the &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/raw/master/_LEARNING_AND_SOCIALS/BOOKS.md"&gt;Books&lt;/a&gt; and &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/raw/master/_LEARNING_AND_SOCIALS/YOUTUBE.md"&gt;YouTube channel&lt;/a&gt; selections.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;üßëüíª&lt;/span&gt; Contributions&lt;/h2&gt; 
&lt;p&gt;Be sure to read &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/raw/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/swisskyrepo/PayloadsAllTheThings/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=swisskyrepo/PayloadsAllTheThings&amp;amp;max=36" alt="sponsors-list" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Thanks again for your contribution! &lt;span&gt;‚ù§Ô∏è&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;üçª&lt;/span&gt; Sponsors&lt;/h2&gt; 
&lt;p&gt;This project is proudly sponsored by these companies.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Logo&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://serpapi.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34724717?s=40&amp;amp;v=4" alt="sponsor-serpapi" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;SerpApi&lt;/strong&gt; is a real time API to access Google search results. It solves the issues of having to rent proxies, solving captchas, and JSON parsing.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://projectdiscovery.io/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50994705?s=40&amp;amp;v=4" alt="sponsor-projectdiscovery" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;ProjectDiscovery&lt;/strong&gt; - Detect real, exploitable vulnerabilities. Harness the power of Nuclei for fast and accurate findings without false positives.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.vaadata.com/"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48131541?s=40&amp;amp;v=4" alt="sponsor-vaadata" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;VAADATA&lt;/strong&gt; - Ethical Hacking Services&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>OpenBB-finance/OpenBB</title>
      <link>https://github.com/OpenBB-finance/OpenBB</link>
      <description>&lt;p&gt;Financial data platform for analysts, quants and AI agents.&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;img src="https://github.com/OpenBB-finance/OpenBB/raw/develop/images/platform-light.svg?raw=true#gh-light-mode-only" alt="OpenBB Platform logo" width="600" /&gt; 
&lt;img src="https://github.com/OpenBB-finance/OpenBB/raw/develop/images/platform-dark.svg?raw=true#gh-dark-mode-only" alt="OpenBB Platform logo" width="600" /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://x.com/openbb_finance"&gt;&lt;img src="https://img.shields.io/twitter/url/https/twitter.com/openbb_finance.svg?style=social&amp;amp;label=Follow%20%40openbb_finance" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/xPHTuHCmuV"&gt;&lt;img src="https://img.shields.io/discord/831165782750789672" alt="Discord Shield" /&gt;&lt;/a&gt; &lt;a href="https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/OpenBB-finance/OpenBB"&gt;&lt;img src="https://img.shields.io/static/v1?label=Dev%20Containers&amp;amp;message=Open&amp;amp;color=blue&amp;amp;logo=visualstudiocode" alt="Open in Dev Containers" /&gt;&lt;/a&gt; &lt;a href="https://codespaces.new/OpenBB-finance/OpenBB"&gt; &lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" height="20" /&gt; &lt;/a&gt; &lt;a target="_blank" href="https://colab.research.google.com/github/OpenBB-finance/OpenBB/blob/develop/examples/googleColab.ipynb"&gt; &lt;img src="https://colab.research.google.com/assets/colab-badge.svg?sanitize=true" alt="Open In Colab" /&gt; &lt;/a&gt; &lt;a href="https://pypi.org/project/openbb/"&gt;&lt;img src="https://img.shields.io/pypi/v/openbb?color=blue&amp;amp;label=PyPI%20Package" alt="PyPI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The first financial Platform that is open source.&lt;/p&gt; 
&lt;p&gt;The OpenBB Platform offers access to equity, options, crypto, forex, macro economy, fixed income, and more while also offering a broad range of extensions to enhance the user experience according to their needs.&lt;/p&gt; 
&lt;p&gt;Get started with: &lt;code&gt;pip install openbb&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from openbb import obb
output = obb.equity.price.historical("AAPL")
df = output.to_dataframe()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Data integrations available can be found here: &lt;a href="https://docs.openbb.co/platform/reference"&gt;https://docs.openbb.co/platform/reference&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;OpenBB Workspace&lt;/h2&gt; 
&lt;p&gt;While the OpenBB Platform is all about an integration to dozens of different data vendors, the interface is either Python or a CLI.&lt;/p&gt; 
&lt;p&gt;If you want an enterprise UI to visualize this datasets and use AI agents on top, you can find OpenBB Workspace at &lt;a href="https://pro.openbb.co"&gt;https://pro.openbb.co&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://pro.openbb.co"&gt; 
 &lt;div align="center"&gt; 
  &lt;img src="https://openbb-cms.directus.app/assets/f69b6aaf-0821-4bc8-a43c-715e03a924ef.png" alt="Logo" width="1000" /&gt; 
 &lt;/div&gt; &lt;/a&gt; 
&lt;p&gt;Data integration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can learn more about adding data to the OpenBB workspace from the &lt;a href="https://docs.openbb.co/workspace"&gt;docs&lt;/a&gt; or &lt;a href="https://github.com/OpenBB-finance/backends-for-openbb"&gt;this open source repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI Agents integration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can learn more about adding AI agents to the OpenBB workspace from &lt;a href="https://github.com/OpenBB-finance/agents-for-openbb"&gt;this open source repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Integrating OpenBB Platform to the OpenBB Workspace&lt;/h3&gt; 
&lt;p&gt;Connect this library to the OpenBB Workspace with a few simple commands, in a Python (3.9.21 - 3.12) environment.&lt;/p&gt; 
&lt;h4&gt;Run OpenBB Platform backend&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install the packages.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pip install "openbb[all]"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Start the API server over localhost.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;openbb-api
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will launch a FastAPI server, via Uvicorn, at &lt;code&gt;127.0.0.1:6900&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can check that it works by going to &lt;a href="http://127.0.0.1:6900"&gt;http://127.0.0.1:6900&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Integrate OpenBB Platform Backend to OpenBB Workspace&lt;/h4&gt; 
&lt;p&gt;Sign-in to the &lt;a href="https://pro.openbb.co/"&gt;OpenBB Workspace&lt;/a&gt;, and follow the following steps:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/75cffb4a-5e95-470a-b9d0-6ffd4067e069" alt="CleanShot 2025-05-17 at 09 51 56@2x" /&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the "Apps" tab&lt;/li&gt; 
 &lt;li&gt;Click on "Connect backend"&lt;/li&gt; 
 &lt;li&gt;Fill in the form with: Name: OpenBB Platform URL: &lt;a href="http://127.0.0.1:6900"&gt;http://127.0.0.1:6900&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Click on "Test". You should get a "Test successful" with the number of apps found.&lt;/li&gt; 
 &lt;li&gt;Click on "Add".&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;That's it.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;!-- TABLE OF CONTENTS --&gt; 
&lt;details closed="closed"&gt; 
 &lt;summary&gt;&lt;h2 style="display: inline-block"&gt;Table of Contents&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#1-installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#2-contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#3-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#4-disclaimer"&gt;Disclaimer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#5-contacts"&gt;Contacts&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#6-star-history"&gt;Star History&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/OpenBB-finance/OpenBB/develop/#7-contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;1. Installation&lt;/h2&gt; 
&lt;p&gt;The OpenBB Platform can be installed as a &lt;a href="https://pypi.org/project/openbb/"&gt;PyPI package&lt;/a&gt; by running &lt;code&gt;pip install openbb&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or by cloning the repository directly with &lt;code&gt;git clone https://github.com/OpenBB-finance/OpenBB.git&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please find more about the installation process, in the &lt;a href="https://docs.openbb.co/platform/installation"&gt;OpenBB Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;OpenBB Platform CLI installation&lt;/h3&gt; 
&lt;p&gt;The OpenBB Platform CLI is a command-line interface that allows you to access the OpenBB Platform directly from your command line.&lt;/p&gt; 
&lt;p&gt;It can be installed by running &lt;code&gt;pip install openbb-cli&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or by cloning the repository directly with &lt;code&gt;git clone https://github.com/OpenBB-finance/OpenBB.git&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Please find more about the installation process in the &lt;a href="https://docs.openbb.co/cli/installation"&gt;OpenBB Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;2. Contributing&lt;/h2&gt; 
&lt;p&gt;There are three main ways of contributing to this project. (Hopefully you have starred the project by now ‚≠êÔ∏è)&lt;/p&gt; 
&lt;h3&gt;Become a Contributor&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;More information on our &lt;a href="https://docs.openbb.co/platform/developer_guide/misc/contributing"&gt;Contributing Documentation&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Create a GitHub ticket&lt;/h3&gt; 
&lt;p&gt;Before creating a ticket make sure the one you are creating doesn't exist already &lt;a href="https://github.com/OpenBB-finance/OpenBB/issues"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenBB-finance/OpenBB/issues/new?assignees=&amp;amp;labels=bug&amp;amp;template=bug_report.md&amp;amp;title=%5BBug%5D"&gt;Report bug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenBB-finance/OpenBB/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;template=enhancement.md&amp;amp;title=%5BIMPROVE%5D"&gt;Suggest improvement&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/OpenBB-finance/OpenBB/issues/new?assignees=&amp;amp;labels=new+feature&amp;amp;template=feature_request.md&amp;amp;title=%5BFR%5D"&gt;Request a feature&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Provide feedback&lt;/h3&gt; 
&lt;p&gt;We are most active on &lt;a href="https://openbb.co/discord"&gt;our Discord&lt;/a&gt;, but feel free to reach out to us in any of &lt;a href="https://openbb.co/links"&gt;our social media&lt;/a&gt; for feedback.&lt;/p&gt; 
&lt;h2&gt;3. License&lt;/h2&gt; 
&lt;p&gt;Distributed under the AGPLv3 License. See &lt;a href="https://github.com/OpenBB-finance/OpenBB/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;4. Disclaimer&lt;/h2&gt; 
&lt;p&gt;Trading in financial instruments involves high risks including the risk of losing some, or all, of your investment amount, and may not be suitable for all investors.&lt;/p&gt; 
&lt;p&gt;Before deciding to trade in a financial instrument you should be fully informed of the risks and costs associated with trading the financial markets, carefully consider your investment objectives, level of experience, and risk appetite, and seek professional advice where needed.&lt;/p&gt; 
&lt;p&gt;The data contained in the OpenBB Platform is not necessarily accurate.&lt;/p&gt; 
&lt;p&gt;OpenBB and any provider of the data contained in this website will not accept liability for any loss or damage as a result of your trading, or your reliance on the information displayed.&lt;/p&gt; 
&lt;p&gt;All names, logos, and brands of third parties that may be referenced in our sites, products or documentation are trademarks of their respective owners. Unless otherwise specified, OpenBB and its products and services are not endorsed by, sponsored by, or affiliated with these third parties.&lt;/p&gt; 
&lt;p&gt;Our use of these names, logos, and brands is for identification purposes only, and does not imply any such endorsement, sponsorship, or affiliation.&lt;/p&gt; 
&lt;h2&gt;5. Contacts&lt;/h2&gt; 
&lt;p&gt;If you have any questions about the platform or anything OpenBB, feel free to email us at &lt;code&gt;support@openbb.co&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you want to say hi, or are interested in partnering with us, feel free to reach us at &lt;code&gt;hello@openbb.co&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Any of our social media platforms: &lt;a href="https://openbb.co/links"&gt;openbb.co/links&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;6. Star History&lt;/h2&gt; 
&lt;p&gt;This is a proxy of our growth and that we are just getting started.&lt;/p&gt; 
&lt;p&gt;But for more metrics important to us check &lt;a href="https://openbb.co/open"&gt;openbb.co/open&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://api.star-history.com/svg?repos=openbb-finance/OpenBB&amp;amp;type=Date&amp;amp;theme=dark"&gt;&lt;img src="https://api.star-history.com/svg?repos=openbb-finance/OpenBB&amp;amp;type=Date&amp;amp;theme=dark" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;7. Contributors&lt;/h2&gt; 
&lt;p&gt;OpenBB wouldn't be OpenBB without you. If we are going to disrupt financial industry, every contribution counts. Thank you for being part of this journey.&lt;/p&gt; 
&lt;a href="https://github.com/OpenBB-finance/OpenBB/graphs/contributors"&gt; &lt;img src="https://contributors-img.web.app/image?repo=OpenBB-finance/OpenBB" width="800" /&gt; &lt;/a&gt; 
&lt;!-- MARKDOWN LINKS &amp; IMAGES --&gt; 
&lt;!-- https://www.markdownguide.org/basic-syntax/#reference-style-links --&gt;</description>
    </item>
    
    <item>
      <title>geerlingguy/ansible-for-devops</title>
      <link>https://github.com/geerlingguy/ansible-for-devops</link>
      <description>&lt;p&gt;Ansible for DevOps examples.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ansible for DevOps Examples&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/geerlingguy/ansible-for-devops/actions?query=workflow%3ACI"&gt;&lt;img src="https://github.com/geerlingguy/ansible-for-devops/workflows/CI/badge.svg?event=push" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/geerlingguy/ansible-for-devops/actions?query=workflow%3A%22Molecule+CI%22"&gt;&lt;img src="https://github.com/geerlingguy/ansible-for-devops/workflows/Molecule%20CI/badge.svg?event=push" alt="Molecule CI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains Ansible examples developed to support different sections of &lt;a href="https://www.ansiblefordevops.com/"&gt;Ansible for DevOps&lt;/a&gt;, a book on &lt;a href="http://www.ansible.com/"&gt;Ansible&lt;/a&gt; by &lt;a href="https://www.jeffgeerling.com/"&gt;Jeff Geerling&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Many examples use Vagrant, VirtualBox, and Ansible to boot and configure VMs on your local workstation.&lt;/p&gt; 
&lt;p&gt;Not all playbooks follow all of Ansible's best practices, as they illustrate particular Ansible features in an instructive manner.&lt;/p&gt; 
&lt;h2&gt;Manuscript&lt;/h2&gt; 
&lt;p&gt;The book's manuscript is released under the CC BY-SA license, and is publicly available in a separate repository: &lt;a href="https://github.com/geerlingguy/ansible-for-devops-manuscript"&gt;Ansible for DevOps - Manuscript&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples and Chapters in which they're used&lt;/h2&gt; 
&lt;p&gt;Here is an outline of all the examples contained in this repository, by chapter:&lt;/p&gt; 
&lt;h3&gt;Chapter 1&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;N/A&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 2&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/first-ansible-playbook/"&gt;&lt;code&gt;first-ansible-playbook&lt;/code&gt;&lt;/a&gt;: A very basic playbook that installs &lt;code&gt;chronyd&lt;/code&gt; on CentOS and ensures it is running.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 3&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/orchestration/"&gt;&lt;code&gt;orchestration&lt;/code&gt;&lt;/a&gt;: A simple multiple-VM Vagrant configuration and Ansible inventory to allow testing of multi-server orchestration with &lt;code&gt;ansible&lt;/code&gt; ad-hoc commands.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 4&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/drupal/"&gt;&lt;code&gt;drupal&lt;/code&gt;&lt;/a&gt;: A single-file playbook which configures the LAMP stack on a Linux host and installs Drupal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/includes/"&gt;&lt;code&gt;includes&lt;/code&gt;&lt;/a&gt;: The same playbook as the &lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/drupal/"&gt;&lt;code&gt;drupal&lt;/code&gt;&lt;/a&gt; example, but using &lt;code&gt;include&lt;/code&gt;s to make the playbook more understandable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/nodejs/"&gt;&lt;code&gt;nodejs&lt;/code&gt;&lt;/a&gt;: A single-file playbook which configures a Node.js app to run on a Linux host.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/solr/"&gt;&lt;code&gt;solr&lt;/code&gt;&lt;/a&gt;: A single-file playbook which installs Apache Solr on a Linux host.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 5&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;N/A&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 6&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/nodejs-role/"&gt;&lt;code&gt;nodejs-role&lt;/code&gt;&lt;/a&gt;: The same playbook as the &lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/nodejs/"&gt;&lt;code&gt;nodejs&lt;/code&gt;&lt;/a&gt; example, but using a role to break out the Node.js aspects into a separate &lt;code&gt;nodejs&lt;/code&gt; role.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/galaxy-role-servers/"&gt;&lt;code&gt;galaxy-role-servers&lt;/code&gt;&lt;/a&gt;: A couple very short playbooks that demonstrate how easy it is to get new servers running leveraging the power of community Ansible Galaxy roles.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 7&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/test-plugin/"&gt;&lt;code&gt;test-plugin&lt;/code&gt;&lt;/a&gt;: A simple test plugin that verifies a given value is representative of the color blue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/collection/"&gt;&lt;code&gt;collection&lt;/code&gt;&lt;/a&gt;: An example local collection to demonstrate the basic structure of content collections.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 8&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/dynamic-inventory/"&gt;&lt;code&gt;dynamic-inventory&lt;/code&gt;&lt;/a&gt;: Two example dynamic inventory scripts (one in PHP, one in Python) for use with Ansible.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 9&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/lamp-infrastructure/"&gt;&lt;code&gt;lamp-infrastructure&lt;/code&gt;&lt;/a&gt;: A multi-server LAMP-based web application infrastructure focused on high-availability and performance for a LAMP-stack app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/elk/"&gt;&lt;code&gt;elk&lt;/code&gt;&lt;/a&gt;: A two-server example of the Elasticsearch-Logstash-Kibana stack, which uses one server to store and visualize logs centrally, and another server to send logs via Filebeat.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/gluster/"&gt;&lt;code&gt;gluster&lt;/code&gt;&lt;/a&gt;: A two-server example of building a fast networked storage setup using Gluster.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 10&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/deployments/"&gt;&lt;code&gt;deployments&lt;/code&gt;&lt;/a&gt;: A playbook that deploys a Ruby on Rails application into an environment that runs Passenger and Nginx to handle web requests.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/deployments-balancer/"&gt;&lt;code&gt;deployments-balancer&lt;/code&gt;&lt;/a&gt;: A playbook that handles zero-downtime deployments to webservers running behind an HAProxy load balancer.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/deployments-rolling/"&gt;&lt;code&gt;deployments-rolling&lt;/code&gt;&lt;/a&gt;: A playbook that demonstrates rolling deployments to multiple servers for a Node.js app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 11&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/security/"&gt;&lt;code&gt;security&lt;/code&gt;&lt;/a&gt;: A playbook containing many security automation tasks to demonstrate how Ansible helps automate security hardening.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 12&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/jenkins/"&gt;&lt;code&gt;jenkins&lt;/code&gt;&lt;/a&gt;: A playbook that installs and configures Jenkins for CI/CD.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 13&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/molecule/"&gt;&lt;code&gt;molecule&lt;/code&gt;&lt;/a&gt;: A Molecule example used for testing and developing an Ansible playbook, or for testing in a Continuous Integration (CI) environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/.github/workflows/molecule-ci.yml"&gt;&lt;code&gt;molecule-ci.yml&lt;/code&gt; GitHub Actions workflow&lt;/a&gt;: A GitHub Actions workflow which runs the &lt;code&gt;molecule&lt;/code&gt; example in a CI environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 14&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/https-self-signed/"&gt;&lt;code&gt;https-self-signed&lt;/code&gt;&lt;/a&gt;: A playbook that generates self-signed certificates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/https-letsencrypt/"&gt;&lt;code&gt;https-letsencrypt&lt;/code&gt;&lt;/a&gt;: A playbook that demonstrates automated certificate management with Let's Encrypt and Ansible.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/https-nginx-proxy/"&gt;&lt;code&gt;https-nginx-proxy&lt;/code&gt;&lt;/a&gt;: A playbook that demonstrates proxying HTTPS traffic through Nginx to HTTP backends.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 15&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/docker/"&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/a&gt;: Very simple playbook demonstrating Ansible's ability to manage Docker container images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/docker-hubot/"&gt;&lt;code&gt;docker-hubot&lt;/code&gt;&lt;/a&gt;: Slightly more involved example of Ansible's ability to manage and run Docker container images.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/docker-flask/"&gt;&lt;code&gt;docker-flask&lt;/code&gt;&lt;/a&gt;: A sample Flask app built with Ansible playbooks running inside the container.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chapter 16&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/geerlingguy/ansible-for-devops/master/kubernetes/"&gt;&lt;code&gt;kubernetes&lt;/code&gt;&lt;/a&gt;: A playbook that builds a three-node Kubernetes cluster.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tinypilotkvm.com"&gt;TinyPilot&lt;/a&gt;: An open-source, low-cost KVM over IP for managing your servers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The above sponsor(s) are supporting Jeff Geerling on &lt;a href="https://github.com/sponsors/geerlingguy"&gt;GitHub Sponsors&lt;/a&gt;. You can sponsor Jeff's work too, to help him continue improving this book and Ansible open source work!&lt;/p&gt; 
&lt;h2&gt;Buy the Book&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.ansiblefordevops.com/"&gt;&lt;img src="https://s3.amazonaws.com/titlepages.leanpub.com/ansible-for-devops/medium" alt="Ansible for DevOps Cover" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Buy &lt;a href="https://www.ansiblefordevops.com/"&gt;Ansible for DevOps&lt;/a&gt; for your e-reader or in paperback format.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trycua/cua</title>
      <link>https://github.com/trycua/cua</link>
      <description>&lt;p&gt;Open-source infrastructure for Computer-Use Agents. Sandboxes, SDKs, and benchmarks to train and evaluate AI agents that can control full desktops (macOS, Linux, Windows).&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" alt="Cua logo" height="150" srcset="img/logo_white.png" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" alt="Cua logo" height="150" srcset="img/logo_black.png" /&gt; 
  &lt;img alt="Cua logo" height="150" src="https://raw.githubusercontent.com/trycua/cua/main/img/logo_black.png" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/#"&gt;&lt;img src="https://img.shields.io/badge/Python-333333?logo=python&amp;amp;logoColor=white&amp;amp;labelColor=333333" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/#"&gt;&lt;img src="https://img.shields.io/badge/Swift-F05138?logo=swift&amp;amp;logoColor=white" alt="Swift" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/#"&gt;&lt;img src="https://img.shields.io/badge/macOS-000000?logo=apple&amp;amp;logoColor=F0F0F0" alt="macOS" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/mVnXXpdE85"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://trendshift.io/repositories/13685" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13685" alt="trycua%2Fcua | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We‚Äôre hosting the &lt;strong&gt;Computer-Use Agents SOTA Challenge&lt;/strong&gt; at &lt;a href="https://hackthenorth.com"&gt;Hack the North&lt;/a&gt; and online!&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Track A (On-site @ UWaterloo)&lt;/strong&gt;: Reserved for participants accepted to Hack the North. üèÜ Prize: &lt;strong&gt;YC interview guaranteed&lt;/strong&gt;.&lt;br /&gt; &lt;strong&gt;Track B (Remote)&lt;/strong&gt;: Open to everyone worldwide. üèÜ Prize: &lt;strong&gt;Cash award&lt;/strong&gt;.&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;üëâ Sign up here: &lt;a href="https://www.trycua.com/hackathon"&gt;trycua.com/hackathon&lt;/a&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;cua&lt;/strong&gt; ("koo-ah") is Docker for &lt;a href="https://www.oneusefulthing.org/p/when-you-give-a-claude-a-mouse"&gt;Computer-Use Agents&lt;/a&gt; - it enables AI agents to control full operating systems in virtual containers and deploy them locally or to the cloud.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;video src="https://github.com/user-attachments/assets/c619b4ea-bb8e-4382-860e-f3757e36af20" width="600" controls&gt;&lt;/video&gt; 
&lt;/div&gt; 
&lt;p&gt;With the Computer SDK, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;automate Windows, Linux, and macOS VMs with a consistent, &lt;a href="https://docs.trycua.com/docs/libraries/computer#interface-actions"&gt;pyautogui-like API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;create &amp;amp; manage VMs &lt;a href="https://docs.trycua.com/docs/computer-sdk/computers#cua-local-containers"&gt;locally&lt;/a&gt; or using &lt;a href="https://www.trycua.com/"&gt;cua cloud&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the Agent SDK, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;run computer-use models with a &lt;a href="https://docs.trycua.com/docs/agent-sdk/message-format"&gt;consistent schema&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;benchmark on OSWorld-Verified, SheetBench-V2, and more &lt;a href="https://docs.trycua.com/docs/agent-sdk/integrations/hud"&gt;with a single line of code using HUD&lt;/a&gt; (&lt;a href="https://github.com/trycua/cua/raw/main/notebooks/eval_osworld.ipynb"&gt;Notebook&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;combine UI grounding models with any LLM using &lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/composed-agents"&gt;composed agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;use new UI agent models and UI grounding models from the Model Zoo below with just a model string (e.g., &lt;code&gt;ComputerAgent(model="openai/computer-use-preview")&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;use API or local inference by changing a prefix (e.g., &lt;code&gt;openai/&lt;/code&gt;, &lt;code&gt;openrouter/&lt;/code&gt;, &lt;code&gt;ollama/&lt;/code&gt;, &lt;code&gt;huggingface-local/&lt;/code&gt;, &lt;code&gt;mlx/&lt;/code&gt;, &lt;a href="https://docs.litellm.ai/docs/providers"&gt;etc.&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CUA Model Zoo üê®&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/computer-use-agents"&gt;All-in-one CUAs&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/composed-agents"&gt;UI Grounding Models&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/composed-agents"&gt;UI Planning Models&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;anthropic/claude-sonnet-4-5-20250929&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/xlangai/OpenCUA-{7B,32B}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any all-in-one CUA&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;openai/computer-use-preview&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/HelloKKMe/GTA1-{7B,32B,72B}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any VLM (using liteLLM, requires &lt;code&gt;tools&lt;/code&gt; parameter)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;openrouter/z-ai/glm-4.5v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/Hcompany/Holo1.5-{3B,7B,72B}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any LLM (using liteLLM, requires &lt;code&gt;moondream3+&lt;/code&gt; prefix )&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/OpenGVLab/InternVL3_5-{1B,2B,4B,8B,...}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;any all-in-one CUA&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;huggingface-local/ByteDance-Seed/UI-TARS-1.5-7B&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;moondream3+{ui planning}&lt;/code&gt; (supports text-only models)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;omniparser+{ui planning}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;{ui grounding}+{ui planning}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;human/human&lt;/code&gt; ‚Üí &lt;a href="https://docs.trycua.com/docs/agent-sdk/supported-agents/human-in-the-loop"&gt;Human-in-the-Loop&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Missing a model? &lt;a href="https://github.com/trycua/cua/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;title=%5BAgent%5D%3A+Add+model+support+for+"&gt;Raise a feature request&lt;/a&gt; or &lt;a href="https://github.com/trycua/cua/raw/main/CONTRIBUTING.md"&gt;contribute&lt;/a&gt;!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h1&gt;Quick Start&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.trycua.com/docs/quickstart-ui"&gt;Get started with a Computer-Use Agent UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.trycua.com/docs/quickstart-cli"&gt;Get started with the Computer-Use Agent CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.trycua.com/docs/quickstart-devs"&gt;Get started with the Python SDKs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h1&gt;Usage (&lt;a href="https://docs.trycua.com/docs"&gt;Docs&lt;/a&gt;)&lt;/h1&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install cua-agent[all]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from agent import ComputerAgent

agent = ComputerAgent(
    model="anthropic/claude-3-5-sonnet-20241022",
    tools=[computer],
    max_trajectory_budget=5.0
)

messages = [{"role": "user", "content": "Take a screenshot and tell me what you see"}]

async for result in agent.run(messages):
    for item in result["output"]:
        if item["type"] == "message":
            print(item["content"][0]["text"])
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Output format (OpenAI Agent Responses Format):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{ 
  "output": [
    # user input
    {
        "role": "user",
        "content": "go to trycua on gh"
    },
    # first agent turn adds the model output to the history
    {
        "summary": [
            {
                "text": "Searching Firefox for Trycua GitHub",
                "type": "summary_text"
            }
        ],
        "type": "reasoning"
    },
    {
        "action": {
            "text": "Trycua GitHub",
            "type": "type"
        },
        "call_id": "call_QI6OsYkXxl6Ww1KvyJc4LKKq",
        "status": "completed",
        "type": "computer_call"
    },
    # second agent turn adds the computer output to the history
    {
        "type": "computer_call_output",
        "call_id": "call_QI6OsYkXxl6Ww1KvyJc4LKKq",
        "output": {
            "type": "input_image",
            "image_url": "data:image/png;base64,..."
        }
    },
    # final agent turn adds the agent output text to the history
    {
        "type": "message",
        "role": "assistant",
        "content": [
          {
            "text": "Success! The Trycua GitHub page has been opened.",
            "type": "output_text"
          }
        ]
    }
  ], 
  "usage": {
      "prompt_tokens": 150,
      "completion_tokens": 75,
      "total_tokens": 225,
      "response_cost": 0.01,
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Computer (&lt;a href="https://docs.trycua.com/docs/computer-sdk/computers"&gt;Docs&lt;/a&gt;)&lt;/h1&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install cua-computer[all]
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from computer import Computer

async with Computer(
    os_type="linux",
    provider_type="cloud",
    name="your-container-name",
    api_key="your-api-key"
) as computer:
    # Take screenshot
    screenshot = await computer.interface.screenshot()

    # Click and type
    await computer.interface.left_click(100, 100)
    await computer.interface.type("Hello!")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/mcp-server/README.md"&gt;How to use the MCP Server with Claude Desktop or other MCP clients&lt;/a&gt; - One of the easiest ways to get started with Cua&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/agent/README.md"&gt;How to use OpenAI Computer-Use, Anthropic, OmniParser, or UI-TARS for your Computer-Use Agent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/lume/README.md"&gt;How to use Lume CLI for managing desktops&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.trycua.com/blog/training-computer-use-models-trajectories-1"&gt;Training Computer-Use Models: Collecting Human Trajectories with Cua (Part 1)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Modules&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Module&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Installation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/lume/README.md"&gt;&lt;strong&gt;Lume&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;VM management for macOS/Linux using Apple's Virtualization.Framework&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;curl -fsSL https://raw.githubusercontent.com/trycua/cua/main/libs/lume/scripts/install.sh | bash&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/lumier/README.md"&gt;&lt;strong&gt;Lumier&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Docker interface for macOS and Linux VMs&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;docker pull trycua/lumier:latest&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/computer/README.md"&gt;&lt;strong&gt;Computer (Python)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python Interface for controlling virtual machines&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install "cua-computer[all]"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/typescript/computer/README.md"&gt;&lt;strong&gt;Computer (Typescript)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Typescript Interface for controlling virtual machines&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npm install @trycua/computer&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/agent/README.md"&gt;&lt;strong&gt;Agent&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AI agent framework for automating tasks&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install "cua-agent[all]"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/mcp-server/README.md"&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;MCP server for using CUA with Claude Desktop&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-mcp-server&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/som/README.md"&gt;&lt;strong&gt;SOM&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Self-of-Mark library for Agent&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-som&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/computer-server/README.md"&gt;&lt;strong&gt;Computer Server&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Server component for Computer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-computer-server&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/python/core/README.md"&gt;&lt;strong&gt;Core (Python)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Python Core utilities&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;pip install cua-core&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/typescript/core/README.md"&gt;&lt;strong&gt;Core (Typescript)&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Typescript Core utilities&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npm install @trycua/core&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.com/invite/mVnXXpdE85"&gt;Discord community&lt;/a&gt; to discuss ideas, get assistance, or share your demos!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Cua is open-sourced under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/LICENSE.md"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;Portions of this project, specifically components adapted from Kasm Technologies Inc., are also licensed under the MIT License. See &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/libs/kasm/LICENSE"&gt;libs/kasm/LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;Microsoft's OmniParser, which is used in this project, is licensed under the Creative Commons Attribution 4.0 International License (CC-BY-4.0). See the &lt;a href="https://github.com/microsoft/OmniParser/raw/master/LICENSE"&gt;OmniParser LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Third-Party Licenses and Optional Components&lt;/h3&gt; 
&lt;p&gt;Some optional extras for this project depend on third-party packages that are licensed under terms different from the MIT License.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The optional "omni" extra (installed via &lt;code&gt;pip install "cua-agent[omni]"&lt;/code&gt;) installs the &lt;code&gt;cua-som&lt;/code&gt; module, which includes &lt;code&gt;ultralytics&lt;/code&gt; and is licensed under the AGPL-3.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When you choose to install and use such optional extras, your use, modification, and distribution of those third-party components are governed by their respective licenses (e.g., AGPL-3.0 for &lt;code&gt;ultralytics&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to Cua! Please refer to our &lt;a href="https://raw.githubusercontent.com/trycua/cua/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;Apple, macOS, and Apple Silicon are trademarks of Apple Inc.&lt;br /&gt; Ubuntu and Canonical are registered trademarks of Canonical Ltd.&lt;br /&gt; Microsoft is a registered trademark of Microsoft Corporation.&lt;/p&gt; 
&lt;p&gt;This project is not affiliated with, endorsed by, or sponsored by Apple Inc., Canonical Ltd., Microsoft Corporation, or Kasm Technologies.&lt;/p&gt; 
&lt;h2&gt;Stargazers&lt;/h2&gt; 
&lt;p&gt;Thank you to all our supporters!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/trycua/cua"&gt;&lt;img src="https://starchart.cc/trycua/cua.svg?variant=adaptive" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Thank you to all our &lt;a href="https://github.com/sponsors/trycua"&gt;GitHub Sponsors&lt;/a&gt;!&lt;/p&gt; 
&lt;img width="300" alt="coderabbit-cli" src="https://github.com/user-attachments/assets/23a98e38-7897-4043-8ef7-eb990520dccc" /&gt;</description>
    </item>
    
    <item>
      <title>hsliuping/TradingAgents-CN</title>
      <link>https://github.com/hsliuping/TradingAgents-CN</link>
      <description>&lt;p&gt;Âü∫‰∫éÂ§öÊô∫ËÉΩ‰ΩìLLMÁöÑ‰∏≠ÊñáÈáëËûç‰∫§ÊòìÊ°ÜÊû∂ - TradingAgents‰∏≠ÊñáÂ¢ûÂº∫Áâà&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;TradingAgents ‰∏≠ÊñáÂ¢ûÂº∫Áâà&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.python.org/"&gt;&lt;img src="https://img.shields.io/badge/Python-3.10%2B-blue.svg?sanitize=true" alt="Python" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/VERSION"&gt;&lt;img src="https://img.shields.io/badge/Version-cn--0.1.15-green.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;&lt;img src="https://img.shields.io/badge/docs-%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3-green.svg?sanitize=true" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;&lt;img src="https://img.shields.io/badge/%E5%9F%BA%E4%BA%8E-TauricResearch/TradingAgents-orange.svg?sanitize=true" alt="Original" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üöÄ &lt;strong&gt;ÊúÄÊñ∞ÁâàÊú¨ cn-0.1.15&lt;/strong&gt;: ÂºÄÂèëËÄÖ‰ΩìÈ™å‰∏éLLMÁîüÊÄÅÁ≥ªÁªüÂ§ßÂçáÁ∫ßÔºÅÊñ∞Â¢ûÂçÉÂ∏ÜÂ§ßÊ®°ÂûãÊîØÊåÅ„ÄÅÂÆåÊï¥ÂºÄÂèëÂ∑•ÂÖ∑Èìæ„ÄÅÂ≠¶ÊúØÁ†îÁ©∂ËµÑÊñô„ÄÅ‰ºÅ‰∏öÁ∫ßÂ∑•‰ΩúÊµÅËßÑËåÉÔºÅ&lt;/p&gt; 
 &lt;p&gt;üéØ &lt;strong&gt;Ê†∏ÂøÉÂäüËÉΩ&lt;/strong&gt;: ÂéüÁîüOpenAIÊîØÊåÅ | Google AIÂÖ®Èù¢ÈõÜÊàê | Ëá™ÂÆö‰πâÁ´ØÁÇπÈÖçÁΩÆ | Êô∫ËÉΩÊ®°ÂûãÈÄâÊã© | Â§öLLMÊèê‰æõÂïÜÊîØÊåÅ | Ê®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ | DockerÂÆπÂô®ÂåñÈÉ®ÁΩ≤ | ‰∏ì‰∏öÊä•ÂëäÂØºÂá∫ | ÂÆåÊï¥AËÇ°ÊîØÊåÅ | ‰∏≠ÊñáÊú¨Âú∞Âåñ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Âü∫‰∫éÂ§öÊô∫ËÉΩ‰ΩìÂ§ßËØ≠Ë®ÄÊ®°ÂûãÁöÑ&lt;strong&gt;‰∏≠ÊñáÈáëËûç‰∫§ÊòìÂÜ≥Á≠ñÊ°ÜÊû∂&lt;/strong&gt;„ÄÇ‰∏ì‰∏∫‰∏≠ÊñáÁî®Êà∑‰ºòÂåñÔºåÊèê‰æõÂÆåÊï¥ÁöÑAËÇ°/Ê∏ØËÇ°/ÁæéËÇ°ÂàÜÊûêËÉΩÂäõ„ÄÇ&lt;/p&gt; 
&lt;h2&gt;üôè Ëá¥Êï¨Ê∫êÈ°πÁõÆ&lt;/h2&gt; 
&lt;p&gt;ÊÑüË∞¢ &lt;a href="https://github.com/TauricResearch"&gt;Tauric Research&lt;/a&gt; Âõ¢ÈòüÂàõÈÄ†ÁöÑÈù©ÂëΩÊÄßÂ§öÊô∫ËÉΩ‰Ωì‰∫§ÊòìÊ°ÜÊû∂ &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TradingAgents&lt;/a&gt;ÔºÅ&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üéØ Êàë‰ª¨ÁöÑ‰ΩøÂëΩ&lt;/strong&gt;: ‰∏∫‰∏≠ÂõΩÁî®Êà∑Êèê‰æõÂÆåÊï¥ÁöÑ‰∏≠ÊñáÂåñ‰ΩìÈ™åÔºåÊîØÊåÅAËÇ°/Ê∏ØËÇ°Â∏ÇÂú∫ÔºåÈõÜÊàêÂõΩ‰∫ßÂ§ßÊ®°ÂûãÔºåÊé®Âä®AIÈáëËûçÊäÄÊúØÂú®‰∏≠ÊñáÁ§æÂå∫ÁöÑÊôÆÂèäÂ∫îÁî®„ÄÇ&lt;/p&gt; 
&lt;h2&gt;üÜï v0.1.15 ÈáçÂ§ßÊõ¥Êñ∞&lt;/h2&gt; 
&lt;h3&gt;ü§ñ LLMÁîüÊÄÅÁ≥ªÁªüÂ§ßÂçáÁ∫ß&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂçÉÂ∏ÜÂ§ßÊ®°ÂûãÊîØÊåÅ&lt;/strong&gt;: Êñ∞Â¢ûÁôæÂ∫¶ÂçÉÂ∏Ü(ERNIE)Â§ßÊ®°ÂûãÂÆåÊï¥ÈõÜÊàê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLMÈÄÇÈÖçÂô®ÈáçÊûÑ&lt;/strong&gt;: Áªü‰∏ÄÁöÑOpenAIÂÖºÂÆπÈÄÇÈÖçÂô®Êû∂ÊûÑ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â§öÂéÇÂïÜÊîØÊåÅ&lt;/strong&gt;: ÊîØÊåÅÊõ¥Â§öÂõΩ‰∫ßÂ§ßÊ®°ÂûãÊèê‰æõÂïÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈõÜÊàêÊåáÂçó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑLLMÈõÜÊàêÂºÄÂèëÊñáÊ°£ÂíåÊµãËØïÂ∑•ÂÖ∑&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìö Â≠¶ÊúØÁ†îÁ©∂ÊîØÊåÅ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;TradingAgentsËÆ∫Êñá&lt;/strong&gt;: ÂÆåÊï¥ÁöÑ‰∏≠ÊñáÁøªËØëÁâàÊú¨ÂíåÊ∑±Â∫¶Ëß£ËØª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊäÄÊúØÂçöÂÆ¢&lt;/strong&gt;: ËØ¶ÁªÜÁöÑÊäÄÊúØÂàÜÊûêÂíåÂÆûÁé∞ÂéüÁêÜËß£ËØª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â≠¶ÊúØËµÑÊñô&lt;/strong&gt;: PDFËÆ∫ÊñáÂíåÁõ∏ÂÖ≥Á†îÁ©∂ËµÑÊñô&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºïÁî®ÊîØÊåÅ&lt;/strong&gt;: Ê†áÂáÜÁöÑÂ≠¶ÊúØÂºïÁî®Ê†ºÂºèÂíåÂèÇËÄÉÊñáÁåÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üõ†Ô∏è ÂºÄÂèëËÄÖ‰ΩìÈ™åÂçáÁ∫ß&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÂèëÂ∑•‰ΩúÊµÅ&lt;/strong&gt;: Ê†áÂáÜÂåñÁöÑÂºÄÂèëÊµÅÁ®ãÂíåÂàÜÊîØÁÆ°ÁêÜËßÑËåÉ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆâË£ÖÈ™åËØÅ&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÂÆâË£ÖÊµãËØïÂíåÈ™åËØÅËÑöÊú¨&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊñáÊ°£ÈáçÊûÑ&lt;/strong&gt;: ÁªìÊûÑÂåñÁöÑÊñáÊ°£Á≥ªÁªüÂíåÂø´ÈÄüÂºÄÂßãÊåáÂçó&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PRÊ®°Êùø&lt;/strong&gt;: Ê†áÂáÜÂåñÁöÑPull RequestÊ®°ÊùøÂíå‰ª£Á†ÅÂÆ°Êü•ÊµÅÁ®ã&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîß ‰ºÅ‰∏öÁ∫ßÂ∑•ÂÖ∑Èìæ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂàÜÊîØ‰øùÊä§&lt;/strong&gt;: GitHubÂàÜÊîØ‰øùÊä§Á≠ñÁï•ÂíåÂÆâÂÖ®ËßÑÂàô&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Á¥ßÊÄ•Á®ãÂ∫è&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁ¥ßÊÄ•Â§ÑÁêÜÂíåÊïÖÈöúÊÅ¢Â§çÁ®ãÂ∫è&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊµãËØïÊ°ÜÊû∂&lt;/strong&gt;: Â¢ûÂº∫ÁöÑÊµãËØïË¶ÜÁõñÂíåÈ™åËØÅÂ∑•ÂÖ∑&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÉ®ÁΩ≤ÊåáÂçó&lt;/strong&gt;: ‰ºÅ‰∏öÁ∫ßÈÉ®ÁΩ≤ÂíåÈÖçÁΩÆÁÆ°ÁêÜ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìã v0.1.14 ÂäüËÉΩÂõûÈ°æ&lt;/h2&gt; 
&lt;h3&gt;üë• Áî®Êà∑ÊùÉÈôêÁÆ°ÁêÜÁ≥ªÁªü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆåÊï¥Áî®Êà∑ÁÆ°ÁêÜ&lt;/strong&gt;: Êñ∞Â¢ûÁî®Êà∑Ê≥®ÂÜå„ÄÅÁôªÂΩï„ÄÅÊùÉÈôêÊéßÂà∂ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËßíËâ≤ÊùÉÈôê&lt;/strong&gt;: ÊîØÊåÅÂ§öÁ∫ßÁî®Êà∑ËßíËâ≤ÂíåÊùÉÈôêÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‰ºöËØùÁÆ°ÁêÜ&lt;/strong&gt;: ÂÆâÂÖ®ÁöÑÁî®Êà∑‰ºöËØùÂíåÁä∂ÊÄÅÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑Ê¥ªÂä®Êó•Âøó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁî®Êà∑Êìç‰ΩúËÆ∞ÂΩïÂíåÂÆ°ËÆ°ÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîê WebÁî®Êà∑ËÆ§ËØÅÁ≥ªÁªü&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÁôªÂΩïÁªÑ‰ª∂&lt;/strong&gt;: Áé∞‰ª£ÂåñÁöÑÁî®Êà∑ÁôªÂΩïÁïåÈù¢&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËÆ§ËØÅÁÆ°ÁêÜÂô®&lt;/strong&gt;: Áªü‰∏ÄÁöÑÁî®Êà∑ËÆ§ËØÅÂíåÊéàÊùÉÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆâÂÖ®Â¢ûÂº∫&lt;/strong&gt;: ÂØÜÁ†ÅÂä†ÂØÜ„ÄÅ‰ºöËØùÂÆâÂÖ®Á≠âÂÆâÂÖ®Êú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑‰ª™Ë°®Êùø&lt;/strong&gt;: ‰∏™ÊÄßÂåñÁöÑÁî®Êà∑Ê¥ªÂä®‰ª™Ë°®Êùø&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üóÑÔ∏è Êï∞ÊçÆÁÆ°ÁêÜ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MongoDBÈõÜÊàêÂ¢ûÂº∫&lt;/strong&gt;: ÊîπËøõÁöÑMongoDBËøûÊé•ÂíåÊï∞ÊçÆÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êï∞ÊçÆÁõÆÂΩïÈáçÁªÑ&lt;/strong&gt;: ‰ºòÂåñÁöÑÊï∞ÊçÆÂ≠òÂÇ®ÁªìÊûÑÂíåÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êï∞ÊçÆËøÅÁßªËÑöÊú¨&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÊï∞ÊçÆËøÅÁßªÂíåÂ§á‰ªΩÂ∑•ÂÖ∑&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁºìÂ≠ò‰ºòÂåñ&lt;/strong&gt;: ÊèêÂçáÊï∞ÊçÆÂä†ËΩΩÂíåÂàÜÊûêÁªìÊûúÁºìÂ≠òÊÄßËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üß™ ÊµãËØïË¶ÜÁõñÂ¢ûÂº∫&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂäüËÉΩÊµãËØïËÑöÊú¨&lt;/strong&gt;: Êñ∞Â¢û6‰∏™‰∏ìÈ°πÂäüËÉΩÊµãËØïËÑöÊú¨&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â∑•ÂÖ∑Â§ÑÁêÜÂô®ÊµãËØï&lt;/strong&gt;: GoogleÂ∑•ÂÖ∑Â§ÑÁêÜÂô®‰øÆÂ§çÈ™åËØÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºïÂØºËá™Âä®ÈöêËóèÊµãËØï&lt;/strong&gt;: UI‰∫§‰∫íÂäüËÉΩÊµãËØï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Âú®Á∫øÂ∑•ÂÖ∑ÈÖçÁΩÆÊµãËØï&lt;/strong&gt;: Â∑•ÂÖ∑ÈÖçÁΩÆÂíåÈÄâÊã©ÈÄªËæëÊµãËØï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁúüÂÆûÂú∫ÊôØÊµãËØï&lt;/strong&gt;: ÂÆûÈôÖ‰ΩøÁî®Âú∫ÊôØÁöÑÁ´ØÂà∞Á´ØÊµãËØï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁæéËÇ°Áã¨Á´ãÊÄßÊµãËØï&lt;/strong&gt;: ÁæéËÇ°ÂàÜÊûêÂäüËÉΩÁã¨Á´ãÊÄßÈ™åËØÅ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üÜï v0.1.13 ÈáçÂ§ßÊõ¥Êñ∞&lt;/h2&gt; 
&lt;h3&gt;ü§ñ ÂéüÁîüOpenAIÁ´ØÁÇπÊîØÊåÅ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Ëá™ÂÆö‰πâOpenAIÁ´ØÁÇπ&lt;/strong&gt;: ÊîØÊåÅÈÖçÁΩÆ‰ªªÊÑèOpenAIÂÖºÂÆπÁöÑAPIÁ´ØÁÇπ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁÅµÊ¥ªÊ®°ÂûãÈÄâÊã©&lt;/strong&gt;: ÂèØ‰ª•‰ΩøÁî®‰ªª‰ΩïOpenAIÊ†ºÂºèÁöÑÊ®°ÂûãÔºå‰∏çÈôê‰∫éÂÆòÊñπÊ®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÈÄÇÈÖçÂô®&lt;/strong&gt;: Êñ∞Â¢ûÂéüÁîüOpenAIÈÄÇÈÖçÂô®ÔºåÊèê‰æõÊõ¥Â•ΩÁöÑÂÖºÂÆπÊÄßÂíåÊÄßËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆÁÆ°ÁêÜ&lt;/strong&gt;: Áªü‰∏ÄÁöÑÁ´ØÁÇπÂíåÊ®°ÂûãÈÖçÁΩÆÁÆ°ÁêÜÁ≥ªÁªü&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üß† Google AIÁîüÊÄÅÁ≥ªÁªüÂÖ®Èù¢ÈõÜÊàê&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;‰∏âÂ§ßGoogle AIÂåÖÊîØÊåÅ&lt;/strong&gt;: langchain-google-genai„ÄÅgoogle-generativeai„ÄÅgoogle-genai&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;9‰∏™È™åËØÅÊ®°Âûã&lt;/strong&gt;: gemini-2.5-pro, gemini-2.5-flash, gemini-2.0-flashÁ≠âÊúÄÊñ∞Ê®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GoogleÂ∑•ÂÖ∑Â§ÑÁêÜÂô®&lt;/strong&gt;: ‰∏ìÈó®ÁöÑGoogle AIÂ∑•ÂÖ∑Ë∞ÉÁî®Â§ÑÁêÜÂô®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÈôçÁ∫ßÊú∫Âà∂&lt;/strong&gt;: È´òÁ∫ßÂäüËÉΩÂ§±Ë¥•Êó∂Ëá™Âä®ÈôçÁ∫ßÂà∞Âü∫Á°ÄÂäüËÉΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîß LLMÈÄÇÈÖçÂô®Êû∂ÊûÑ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GoogleOpenAIAdapter&lt;/strong&gt;: Êñ∞Â¢ûGoogle AIÁöÑOpenAIÂÖºÂÆπÈÄÇÈÖçÂô®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áªü‰∏ÄÊé•Âè£&lt;/strong&gt;: ÊâÄÊúâLLMÊèê‰æõÂïÜ‰ΩøÁî®Áªü‰∏ÄÁöÑË∞ÉÁî®Êé•Âè£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈîôËØØÂ§ÑÁêÜÂ¢ûÂº∫&lt;/strong&gt;: ÊîπËøõÁöÑÂºÇÂ∏∏Â§ÑÁêÜÂíåËá™Âä®ÈáçËØïÊú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊÄßËÉΩÁõëÊéß&lt;/strong&gt;: Ê∑ªÂä†LLMË∞ÉÁî®ÊÄßËÉΩÁõëÊéßÂíåÁªüËÆ°&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üé® WebÁïåÈù¢Êô∫ËÉΩ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÊ®°ÂûãÈÄâÊã©&lt;/strong&gt;: Ê†πÊçÆÂèØÁî®ÊÄßËá™Âä®ÈÄâÊã©ÊúÄ‰Ω≥Ê®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;KeyError‰øÆÂ§ç&lt;/strong&gt;: ÂΩªÂ∫ïËß£ÂÜ≥Ê®°ÂûãÈÄâÊã©‰∏≠ÁöÑKeyErrorÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UIÂìçÂ∫î‰ºòÂåñ&lt;/strong&gt;: ÊîπËøõÊ®°ÂûãÂàáÊç¢ÁöÑÂìçÂ∫îÈÄüÂ∫¶ÂíåÁî®Êà∑‰ΩìÈ™å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈîôËØØÊèêÁ§∫&lt;/strong&gt;: Êõ¥ÂèãÂ•ΩÁöÑÈîôËØØÊèêÁ§∫ÂíåËß£ÂÜ≥Âª∫ËÆÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üÜï v0.1.12 ÈáçÂ§ßÊõ¥Êñ∞&lt;/h2&gt; 
&lt;h3&gt;üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûêÊ®°Âùó&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÊñ∞ÈóªËøáÊª§Âô®&lt;/strong&gt;: Âü∫‰∫éAIÁöÑÊñ∞ÈóªÁõ∏ÂÖ≥ÊÄßËØÑÂàÜÂíåË¥®ÈáèËØÑ‰º∞&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Â§öÂ±ÇÊ¨°ËøáÊª§Êú∫Âà∂&lt;/strong&gt;: Âü∫Á°ÄËøáÊª§„ÄÅÂ¢ûÂº∫ËøáÊª§„ÄÅÈõÜÊàêËøáÊª§‰∏âÁ∫ßÂ§ÑÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êñ∞ÈóªË¥®ÈáèËØÑ‰º∞&lt;/strong&gt;: Ëá™Âä®ËØÜÂà´ÂíåËøáÊª§‰ΩéË¥®Èáè„ÄÅÈáçÂ§ç„ÄÅÊó†ÂÖ≥Êñ∞Èóª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑&lt;/strong&gt;: Êï¥ÂêàÂ§ö‰∏™Êñ∞ÈóªÊ∫êÔºåÊèê‰æõÁªü‰∏ÄÁöÑÊñ∞ÈóªËé∑ÂèñÊé•Âè£&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üîß ÊäÄÊúØ‰øÆÂ§çÂíå‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;DashScopeÈÄÇÈÖçÂô®‰øÆÂ§ç&lt;/strong&gt;: Ëß£ÂÜ≥Â∑•ÂÖ∑Ë∞ÉÁî®ÂÖºÂÆπÊÄßÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DeepSeekÊ≠ªÂæ™ÁéØ‰øÆÂ§ç&lt;/strong&gt;: ‰øÆÂ§çÊñ∞ÈóªÂàÜÊûêÂ∏àÁöÑÊó†ÈôêÂæ™ÁéØÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLMÂ∑•ÂÖ∑Ë∞ÉÁî®Â¢ûÂº∫&lt;/strong&gt;: ÊèêÂçáÂ∑•ÂÖ∑Ë∞ÉÁî®ÁöÑÂèØÈù†ÊÄßÂíåÁ®≥ÂÆöÊÄß&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êñ∞ÈóªÊ£ÄÁ¥¢Âô®‰ºòÂåñ&lt;/strong&gt;: Â¢ûÂº∫Êñ∞ÈóªÊï∞ÊçÆËé∑ÂèñÂíåÂ§ÑÁêÜËÉΩÂäõ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìö ÂÆåÂñÑÊµãËØïÂíåÊñáÊ°£&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÖ®Èù¢ÊµãËØïË¶ÜÁõñ&lt;/strong&gt;: Êñ∞Â¢û15+‰∏™ÊµãËØïÊñá‰ª∂ÔºåË¶ÜÁõñÊâÄÊúâÊñ∞ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËØ¶ÁªÜÊäÄÊúØÊñáÊ°£&lt;/strong&gt;: Êñ∞Â¢û8‰∏™ÊäÄÊúØÂàÜÊûêÊä•ÂëäÂíå‰øÆÂ§çÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑ÊåáÂçóÂÆåÂñÑ&lt;/strong&gt;: Êñ∞Â¢ûÊñ∞ÈóªËøáÊª§‰ΩøÁî®ÊåáÂçóÂíåÊúÄ‰Ω≥ÂÆûË∑µ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊºîÁ§∫ËÑöÊú¨&lt;/strong&gt;: Êèê‰æõÂÆåÊï¥ÁöÑÊñ∞ÈóªËøáÊª§ÂäüËÉΩÊºîÁ§∫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üóÇÔ∏è È°πÁõÆÁªìÊûÑ‰ºòÂåñ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÊñáÊ°£ÂàÜÁ±ªÊï¥ÁêÜ&lt;/strong&gt;: ÊåâÂäüËÉΩÂ∞ÜÊñáÊ°£ÂàÜÁ±ªÂà∞docsÂ≠êÁõÆÂΩï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Á§∫‰æã‰ª£Á†ÅÂΩí‰Ωç&lt;/strong&gt;: ÊºîÁ§∫ËÑöÊú¨Áªü‰∏ÄÂà∞examplesÁõÆÂΩï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ê†πÁõÆÂΩïÊï¥Ê¥Å&lt;/strong&gt;: ‰øùÊåÅÊ†πÁõÆÂΩïÁÆÄÊ¥ÅÔºåÊèêÂçáÈ°πÁõÆ‰∏ì‰∏öÂ∫¶&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üéØ Ê†∏ÂøÉÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;ü§ñ Â§öÊô∫ËÉΩ‰ΩìÂçè‰ΩúÊû∂ÊûÑ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;‰∏ì‰∏öÂàÜÂ∑•&lt;/strong&gt;: Âü∫Êú¨Èù¢„ÄÅÊäÄÊúØÈù¢„ÄÅÊñ∞ÈóªÈù¢„ÄÅÁ§æ‰∫§Â™í‰ΩìÂõõÂ§ßÂàÜÊûêÂ∏à&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÁªìÊûÑÂåñËæ©ËÆ∫&lt;/strong&gt;: ÁúãÊ∂®/ÁúãË∑åÁ†îÁ©∂ÂëòËøõË°åÊ∑±Â∫¶ÂàÜÊûê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êô∫ËÉΩÂÜ≥Á≠ñ&lt;/strong&gt;: ‰∫§ÊòìÂëòÂü∫‰∫éÊâÄÊúâËæìÂÖ•ÂÅöÂá∫ÊúÄÁªàÊäïËµÑÂª∫ËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;È£éÈô©ÁÆ°ÁêÜ&lt;/strong&gt;: Â§öÂ±ÇÊ¨°È£éÈô©ËØÑ‰º∞ÂíåÁÆ°ÁêÜÊú∫Âà∂&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üñ•Ô∏è WebÁïåÈù¢Â±ïÁ§∫&lt;/h2&gt; 
&lt;h3&gt;üì∏ ÁïåÈù¢Êà™Âõæ&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üé® &lt;strong&gt;Áé∞‰ª£ÂåñWebÁïåÈù¢&lt;/strong&gt;: Âü∫‰∫éStreamlitÊûÑÂª∫ÁöÑÂìçÂ∫îÂºèWebÂ∫îÁî®ÔºåÊèê‰æõÁõ¥ËßÇÁöÑËÇ°Á•®ÂàÜÊûê‰ΩìÈ™å&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;üè† ‰∏ªÁïåÈù¢ - ÂàÜÊûêÈÖçÁΩÆ&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003162925.png" alt="1755003162925" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002619976.png" alt="1755002619976" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Êô∫ËÉΩÈÖçÁΩÆÈù¢ÊùøÔºåÊîØÊåÅÂ§öÂ∏ÇÂú∫ËÇ°Á•®ÂàÜÊûêÔºå5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶ÈÄâÊã©&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;üìä ÂÆûÊó∂ÂàÜÊûêËøõÂ∫¶&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002731483.png" alt="1755002731483" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;ÂÆûÊó∂ËøõÂ∫¶Ë∑üË∏™ÔºåÂèØËßÜÂåñÂàÜÊûêËøáÁ®ãÔºåÊô∫ËÉΩÊó∂Èó¥È¢Ñ‰º∞&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;üìà ÂàÜÊûêÁªìÊûúÂ±ïÁ§∫&lt;/h4&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002901204.png" alt="1755002901204" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002924844.png" alt="1755002924844" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002939905.png" alt="1755002939905" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002968608.png" alt="1755002968608" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755002985903.png" alt="1755002985903" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003004403.png" alt="1755003004403" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003019759.png" alt="1755003019759" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003033939.png" alt="1755003033939" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003048242.png" alt="1755003048242" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003064598.png" alt="1755003064598" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/images/README/1755003090603.png" alt="1755003090603" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;‰∏ì‰∏öÊäïËµÑÊä•ÂëäÔºåÂ§öÁª¥Â∫¶ÂàÜÊûêÁªìÊûúÔºå‰∏ÄÈîÆÂØºÂá∫ÂäüËÉΩ&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;üéØ Ê†∏ÂøÉÂäüËÉΩÁâπËâ≤&lt;/h3&gt; 
&lt;h4&gt;üìã &lt;strong&gt;Êô∫ËÉΩÂàÜÊûêÈÖçÁΩÆ&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üåç Â§öÂ∏ÇÂú∫ÊîØÊåÅ&lt;/strong&gt;: ÁæéËÇ°„ÄÅAËÇ°„ÄÅÊ∏ØËÇ°‰∏ÄÁ´ôÂºèÂàÜÊûê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ 5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶&lt;/strong&gt;: ‰ªé2ÂàÜÈíüÂø´ÈÄüÂàÜÊûêÂà∞25ÂàÜÈíüÂÖ®Èù¢Á†îÁ©∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü§ñ Êô∫ËÉΩ‰ΩìÈÄâÊã©&lt;/strong&gt;: Â∏ÇÂú∫ÊäÄÊúØ„ÄÅÂü∫Êú¨Èù¢„ÄÅÊñ∞Èóª„ÄÅÁ§æ‰∫§Â™í‰ΩìÂàÜÊûêÂ∏à&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÖ ÁÅµÊ¥ªÊó∂Èó¥ËÆæÁΩÆ&lt;/strong&gt;: ÊîØÊåÅÂéÜÂè≤‰ªªÊÑèÊó∂Èó¥ÁÇπÂàÜÊûê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;ÂÆûÊó∂ËøõÂ∫¶Ë∑üË∏™&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìä ÂèØËßÜÂåñËøõÂ∫¶&lt;/strong&gt;: ÂÆûÊó∂ÊòæÁ§∫ÂàÜÊûêËøõÂ±ïÂíåÂâ©‰ΩôÊó∂Èó¥&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Êô∫ËÉΩÊ≠•È™§ËØÜÂà´&lt;/strong&gt;: Ëá™Âä®ËØÜÂà´ÂΩìÂâçÂàÜÊûêÈò∂ÊÆµ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚è±Ô∏è ÂáÜÁ°ÆÊó∂Èó¥È¢Ñ‰º∞&lt;/strong&gt;: Âü∫‰∫éÂéÜÂè≤Êï∞ÊçÆÁöÑÊô∫ËÉΩÊó∂Èó¥ËÆ°ÁÆó&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ Áä∂ÊÄÅÊåÅ‰πÖÂåñ&lt;/strong&gt;: È°µÈù¢Âà∑Êñ∞‰∏ç‰∏¢Â§±ÂàÜÊûêËøõÂ∫¶&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üìà &lt;strong&gt;‰∏ì‰∏öÁªìÊûúÂ±ïÁ§∫&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ ÊäïËµÑÂÜ≥Á≠ñ&lt;/strong&gt;: ÊòéÁ°ÆÁöÑ‰π∞ÂÖ•/ÊåÅÊúâ/ÂçñÂá∫Âª∫ËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä Â§öÁª¥ÂàÜÊûê&lt;/strong&gt;: ÊäÄÊúØÈù¢„ÄÅÂü∫Êú¨Èù¢„ÄÅÊñ∞ÈóªÈù¢ÁªºÂêàËØÑ‰º∞&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üî¢ ÈáèÂåñÊåáÊ†á&lt;/strong&gt;: ÁΩÆ‰ø°Â∫¶„ÄÅÈ£éÈô©ËØÑÂàÜ„ÄÅÁõÆÊ†á‰ª∑‰Ωç&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÑ ‰∏ì‰∏öÊä•Âëä&lt;/strong&gt;: ÊîØÊåÅMarkdown/Word/PDFÊ†ºÂºèÂØºÂá∫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;ü§ñ &lt;strong&gt;Â§öLLMÊ®°ÂûãÁÆ°ÁêÜ&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üåê 4Â§ßÊèê‰æõÂïÜ&lt;/strong&gt;: DashScope„ÄÅDeepSeek„ÄÅGoogle AI„ÄÅOpenRouter&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ 60+Ê®°ÂûãÈÄâÊã©&lt;/strong&gt;: ‰ªéÁªèÊµéÂûãÂà∞ÊóóËà∞Á∫ßÊ®°ÂûãÂÖ®Ë¶ÜÁõñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ ÈÖçÁΩÆÊåÅ‰πÖÂåñ&lt;/strong&gt;: URLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅËÆæÁΩÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° Âø´ÈÄüÂàáÊç¢&lt;/strong&gt;: 5‰∏™ÁÉ≠Èó®Ê®°Âûã‰∏ÄÈîÆÈÄâÊã©ÊåâÈíÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üéÆ WebÁïåÈù¢Êìç‰ΩúÊåáÂçó&lt;/h3&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;Âø´ÈÄüÂºÄÂßãÊµÅÁ®ã&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ÂêØÂä®Â∫îÁî®&lt;/strong&gt;: &lt;code&gt;python start_web.py&lt;/code&gt; Êàñ &lt;code&gt;docker-compose up -d&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËÆøÈóÆÁïåÈù¢&lt;/strong&gt;: ÊµèËßàÂô®ÊâìÂºÄ &lt;code&gt;http://localhost:8501&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆÊ®°Âûã&lt;/strong&gt;: ‰æßËæπÊ†èÈÄâÊã©LLMÊèê‰æõÂïÜÂíåÊ®°Âûã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËæìÂÖ•ËÇ°Á•®&lt;/strong&gt;: ËæìÂÖ•ËÇ°Á•®‰ª£Á†ÅÔºàÂ¶Ç AAPL„ÄÅ000001„ÄÅ0700.HKÔºâ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÄâÊã©Ê∑±Â∫¶&lt;/strong&gt;: Ê†πÊçÆÈúÄÊ±ÇÈÄâÊã©1-5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÂßãÂàÜÊûê&lt;/strong&gt;: ÁÇπÂáª"üöÄ ÂºÄÂßãÂàÜÊûê"ÊåâÈíÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êü•ÁúãÁªìÊûú&lt;/strong&gt;: ÂÆûÊó∂Ë∑üË∏™ËøõÂ∫¶ÔºåÊü•ÁúãÂàÜÊûêÊä•Âëä&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂØºÂá∫Êä•Âëä&lt;/strong&gt;: ‰∏ÄÈîÆÂØºÂá∫‰∏ì‰∏öÊ†ºÂºèÊä•Âëä&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üìä &lt;strong&gt;ÊîØÊåÅÁöÑËÇ°Á•®‰ª£Á†ÅÊ†ºÂºè&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üá∫üá∏ ÁæéËÇ°&lt;/strong&gt;: &lt;code&gt;AAPL&lt;/code&gt;, &lt;code&gt;TSLA&lt;/code&gt;, &lt;code&gt;MSFT&lt;/code&gt;, &lt;code&gt;NVDA&lt;/code&gt;, &lt;code&gt;GOOGL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üá®üá≥ AËÇ°&lt;/strong&gt;: &lt;code&gt;000001&lt;/code&gt;, &lt;code&gt;600519&lt;/code&gt;, &lt;code&gt;300750&lt;/code&gt;, &lt;code&gt;002415&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üá≠üá∞ Ê∏ØËÇ°&lt;/strong&gt;: &lt;code&gt;0700.HK&lt;/code&gt;, &lt;code&gt;9988.HK&lt;/code&gt;, &lt;code&gt;3690.HK&lt;/code&gt;, &lt;code&gt;1810.HK&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üéØ &lt;strong&gt;Á†îÁ©∂Ê∑±Â∫¶ËØ¥Êòé&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;1Á∫ß (2-4ÂàÜÈíü)&lt;/strong&gt;: Âø´ÈÄüÊ¶ÇËßàÔºåÂü∫Á°ÄÊäÄÊúØÊåáÊ†á&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2Á∫ß (4-6ÂàÜÈíü)&lt;/strong&gt;: Ê†áÂáÜÂàÜÊûêÔºåÊäÄÊúØ+Âü∫Êú¨Èù¢&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3Á∫ß (6-10ÂàÜÈíü)&lt;/strong&gt;: Ê∑±Â∫¶ÂàÜÊûêÔºåÂä†ÂÖ•Êñ∞ÈóªÊÉÖÁª™ ‚≠ê &lt;strong&gt;Êé®Ëçê&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Á∫ß (10-15ÂàÜÈíü)&lt;/strong&gt;: ÂÖ®Èù¢ÂàÜÊûêÔºåÂ§öËΩÆÊô∫ËÉΩ‰ΩìËæ©ËÆ∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;5Á∫ß (15-25ÂàÜÈíü)&lt;/strong&gt;: ÊúÄÊ∑±Â∫¶ÂàÜÊûêÔºåÂÆåÊï¥Á†îÁ©∂Êä•Âëä&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üí° &lt;strong&gt;‰ΩøÁî®ÊäÄÂ∑ß&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ ÂÆûÊó∂Âà∑Êñ∞&lt;/strong&gt;: ÂàÜÊûêËøáÁ®ã‰∏≠ÂèØÈöèÊó∂Âà∑Êñ∞È°µÈù¢ÔºåËøõÂ∫¶‰∏ç‰∏¢Â§±&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üì± ÁßªÂä®ÈÄÇÈÖç&lt;/strong&gt;: ÊîØÊåÅÊâãÊú∫ÂíåÂπ≥ÊùøËÆæÂ§áËÆøÈóÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üé® Ê∑±Ëâ≤Ê®°Âºè&lt;/strong&gt;: Ëá™Âä®ÈÄÇÈÖçÁ≥ªÁªü‰∏ªÈ¢òËÆæÁΩÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚å®Ô∏è Âø´Êç∑ÈîÆ&lt;/strong&gt;: ÊîØÊåÅEnterÈîÆÂø´ÈÄüÊèê‰∫§ÂàÜÊûê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìã ÂéÜÂè≤ËÆ∞ÂΩï&lt;/strong&gt;: Ëá™Âä®‰øùÂ≠òÊúÄËøëÁöÑÂàÜÊûêÈÖçÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìñ &lt;strong&gt;ËØ¶ÁªÜÊåáÂçó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑWebÁïåÈù¢‰ΩøÁî®ËØ¥ÊòéËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/web-interface-detailed-guide.md"&gt;üñ•Ô∏è WebÁïåÈù¢ËØ¶ÁªÜ‰ΩøÁî®ÊåáÂçó&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üéØ ÂäüËÉΩÁâπÊÄß&lt;/h2&gt; 
&lt;h3&gt;üöÄ Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê‚ú® &lt;strong&gt;v0.1.12ÈáçÂ§ßÂçáÁ∫ß&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÂäüËÉΩÁâπÊÄß&lt;/th&gt; 
   &lt;th&gt;Áä∂ÊÄÅ&lt;/th&gt; 
   &lt;th&gt;ËØ¶ÁªÜËØ¥Êòé&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.12&lt;/td&gt; 
   &lt;td&gt;AIÊñ∞ÈóªËøáÊª§ÔºåË¥®ÈáèËØÑ‰º∞ÔºåÁõ∏ÂÖ≥ÊÄßÂàÜÊûê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üîß Êñ∞ÈóªËøáÊª§Âô®&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.12&lt;/td&gt; 
   &lt;td&gt;Â§öÂ±ÇÊ¨°ËøáÊª§ÔºåÂü∫Á°Ä/Â¢ûÂº∫/ÈõÜÊàê‰∏âÁ∫ßÂ§ÑÁêÜ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üì∞ Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.12&lt;/td&gt; 
   &lt;td&gt;Êï¥ÂêàÂ§öÊ∫êÊñ∞ÈóªÔºåÁªü‰∏ÄÊé•Âè£ÔºåÊô∫ËÉΩÊ£ÄÁ¥¢&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ü§ñ Â§öLLMÊèê‰æõÂïÜ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.11&lt;/td&gt; 
   &lt;td&gt;4Â§ßÊèê‰æõÂïÜÔºå60+Ê®°ÂûãÔºåÊô∫ËÉΩÂàÜÁ±ªÁÆ°ÁêÜ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üíæ Ê®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.11&lt;/td&gt; 
   &lt;td&gt;URLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅÔºåÈÖçÁΩÆÂàÜ‰∫´&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üéØ Âø´ÈÄüÈÄâÊã©ÊåâÈíÆ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;üÜï v0.1.11&lt;/td&gt; 
   &lt;td&gt;‰∏ÄÈîÆÂàáÊç¢ÁÉ≠Èó®Ê®°ÂûãÔºåÊèêÂçáÊìç‰ΩúÊïàÁéá&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üìä ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ v0.1.10&lt;/td&gt; 
   &lt;td&gt;ÂºÇÊ≠•ËøõÂ∫¶Ë∑üË∏™ÔºåÊô∫ËÉΩÊ≠•È™§ËØÜÂà´ÔºåÂáÜÁ°ÆÊó∂Èó¥ËÆ°ÁÆó&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üíæ Êô∫ËÉΩ‰ºöËØùÁÆ°ÁêÜ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ v0.1.10&lt;/td&gt; 
   &lt;td&gt;Áä∂ÊÄÅÊåÅ‰πÖÂåñÔºåËá™Âä®ÈôçÁ∫ßÔºåË∑®È°µÈù¢ÊÅ¢Â§ç&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üéØ ‰∏ÄÈîÆÊü•ÁúãÊä•Âëä&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ v0.1.10&lt;/td&gt; 
   &lt;td&gt;ÂàÜÊûêÂÆåÊàêÂêé‰∏ÄÈîÆÊü•ÁúãÔºåÊô∫ËÉΩÁªìÊûúÊÅ¢Â§ç&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üñ•Ô∏è StreamlitÁïåÈù¢&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Áé∞‰ª£ÂåñÂìçÂ∫îÂºèÁïåÈù¢ÔºåÂÆûÊó∂‰∫§‰∫íÂíåÊï∞ÊçÆÂèØËßÜÂåñ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‚öôÔ∏è ÈÖçÁΩÆÁÆ°ÁêÜ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;WebÁ´ØAPIÂØÜÈí•ÁÆ°ÁêÜÔºåÊ®°ÂûãÈÄâÊã©ÔºåÂèÇÊï∞ÈÖçÁΩÆ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;üé® CLIÁî®Êà∑‰ΩìÈ™å ‚ú® &lt;strong&gt;v0.1.9‰ºòÂåñ&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÂäüËÉΩÁâπÊÄß&lt;/th&gt; 
   &lt;th&gt;Áä∂ÊÄÅ&lt;/th&gt; 
   &lt;th&gt;ËØ¶ÁªÜËØ¥Êòé&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üñ•Ô∏è ÁïåÈù¢‰∏éÊó•ÂøóÂàÜÁ¶ª&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Áî®Êà∑ÁïåÈù¢Ê∏ÖÁàΩÁæéËßÇÔºåÊäÄÊúØÊó•ÂøóÁã¨Á´ãÁÆ°ÁêÜ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üîÑ Êô∫ËÉΩËøõÂ∫¶ÊòæÁ§∫&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Â§öÈò∂ÊÆµËøõÂ∫¶Ë∑üË∏™ÔºåÈò≤Ê≠¢ÈáçÂ§çÊèêÁ§∫&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‚è±Ô∏è Êó∂Èó¥È¢Ñ‰º∞ÂäüËÉΩ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;Êô∫ËÉΩÂàÜÊûêÈò∂ÊÆµÊòæÁ§∫È¢ÑËÆ°ËÄóÊó∂&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåà RichÂΩ©Ëâ≤ËæìÂá∫&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÂÆåÊï¥ÊîØÊåÅ&lt;/td&gt; 
   &lt;td&gt;ÂΩ©Ëâ≤ËøõÂ∫¶ÊåáÁ§∫ÔºåÁä∂ÊÄÅÂõæÊ†áÔºåËßÜËßâÊïàÊûúÊèêÂçá&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;üß† LLMÊ®°ÂûãÊîØÊåÅ ‚ú® &lt;strong&gt;v0.1.13ÂÖ®Èù¢ÂçáÁ∫ß&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Ê®°ÂûãÊèê‰æõÂïÜ&lt;/th&gt; 
   &lt;th&gt;ÊîØÊåÅÊ®°Âûã&lt;/th&gt; 
   &lt;th&gt;ÁâπËâ≤ÂäüËÉΩ&lt;/th&gt; 
   &lt;th&gt;Êñ∞Â¢ûÂäüËÉΩ&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá®üá≥ ÈòøÈáåÁôæÁÇº&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;qwen-turbo/plus/max&lt;/td&gt; 
   &lt;td&gt;‰∏≠Êñá‰ºòÂåñÔºåÊàêÊú¨ÊïàÁõäÈ´ò&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá®üá≥ DeepSeek&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;deepseek-chat&lt;/td&gt; 
   &lt;td&gt;Â∑•ÂÖ∑Ë∞ÉÁî®ÔºåÊÄß‰ª∑ÊØîÊûÅÈ´ò&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåç Google AI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;9‰∏™È™åËØÅÊ®°Âûã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞Gemini 2.5Á≥ªÂàó&lt;/td&gt; 
   &lt;td&gt;üÜï ÂçáÁ∫ß&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;ÊúÄÊñ∞ÊóóËà∞&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.5-pro/flash&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞ÊóóËà∞ÔºåË∂ÖÂø´ÂìçÂ∫î&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;Á®≥ÂÆöÊé®Ëçê&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.0-flash&lt;/td&gt; 
   &lt;td&gt;Êé®Ëçê‰ΩøÁî®ÔºåÂπ≥Ë°°ÊÄßËÉΩ&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;ÁªèÂÖ∏Âº∫Â§ß&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-1.5-pro/flash&lt;/td&gt; 
   &lt;td&gt;ÁªèÂÖ∏Á®≥ÂÆöÔºåÈ´òË¥®ÈáèÂàÜÊûê&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îî‚îÄ&lt;strong&gt;ËΩªÈáèÂø´ÈÄü&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;gemini-2.5-flash-lite&lt;/td&gt; 
   &lt;td&gt;ËΩªÈáèÁ∫ß‰ªªÂä°ÔºåÂø´ÈÄüÂìçÂ∫î&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåê ÂéüÁîüOpenAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Ëá™ÂÆö‰πâÁ´ØÁÇπÊîØÊåÅ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‰ªªÊÑèOpenAIÂÖºÂÆπÁ´ØÁÇπ&lt;/td&gt; 
   &lt;td&gt;üÜï Êñ∞Â¢û&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üåê OpenRouter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;60+Ê®°ÂûãËÅöÂêàÂπ≥Âè∞&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‰∏Ä‰∏™APIËÆøÈóÆÊâÄÊúâ‰∏ªÊµÅÊ®°Âûã&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;OpenAI&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;o4-mini-high, o3-pro, GPT-4o&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞oÁ≥ªÂàóÔºåÊé®ÁêÜ‰∏ì‰∏öÁâà&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;Anthropic&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Claude 4 Opus/Sonnet/Haiku&lt;/td&gt; 
   &lt;td&gt;È°∂Á∫ßÊÄßËÉΩÔºåÂπ≥Ë°°ÁâàÊú¨&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îú‚îÄ&lt;strong&gt;Meta&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Llama 4 Maverick/Scout&lt;/td&gt; 
   &lt;td&gt;ÊúÄÊñ∞Llama 4Á≥ªÂàó&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;‚îî‚îÄ&lt;strong&gt;Ëá™ÂÆö‰πâ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;‰ªªÊÑèOpenRouterÊ®°ÂûãID&lt;/td&gt; 
   &lt;td&gt;Êó†ÈôêÊâ©Â±ïÔºå‰∏™ÊÄßÂåñÈÄâÊã©&lt;/td&gt; 
   &lt;td&gt;‚úÖ ÈõÜÊàê&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;üéØ Âø´ÈÄüÈÄâÊã©&lt;/strong&gt;: 5‰∏™ÁÉ≠Èó®Ê®°ÂûãÂø´ÈÄüÊåâÈíÆ | &lt;strong&gt;üíæ ÊåÅ‰πÖÂåñ&lt;/strong&gt;: URLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅ | &lt;strong&gt;üîÑ Êô∫ËÉΩÂàáÊç¢&lt;/strong&gt;: ‰∏ÄÈîÆÂàáÊç¢‰∏çÂêåÊèê‰æõÂïÜ&lt;/p&gt; 
&lt;h3&gt;üìä Êï∞ÊçÆÊ∫ê‰∏éÂ∏ÇÂú∫&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Â∏ÇÂú∫Á±ªÂûã&lt;/th&gt; 
   &lt;th&gt;Êï∞ÊçÆÊ∫ê&lt;/th&gt; 
   &lt;th&gt;Ë¶ÜÁõñËåÉÂõ¥&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá®üá≥ AËÇ°&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Tushare, AkShare, ÈÄöËææ‰ø°&lt;/td&gt; 
   &lt;td&gt;Ê≤™Ê∑±‰∏§Â∏ÇÔºåÂÆûÊó∂Ë°åÊÉÖÔºåË¥¢Êä•Êï∞ÊçÆ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá≠üá∞ Ê∏ØËÇ°&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;AkShare, Yahoo Finance&lt;/td&gt; 
   &lt;td&gt;Ê∏Ø‰∫§ÊâÄÔºåÂÆûÊó∂Ë°åÊÉÖÔºåÂü∫Êú¨Èù¢&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üá∫üá∏ ÁæéËÇ°&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;FinnHub, Yahoo Finance&lt;/td&gt; 
   &lt;td&gt;NYSE, NASDAQÔºåÂÆûÊó∂Êï∞ÊçÆ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;üì∞ Êñ∞Èóª&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Google News&lt;/td&gt; 
   &lt;td&gt;ÂÆûÊó∂Êñ∞ÈóªÔºåÂ§öËØ≠Ë®ÄÊîØÊåÅ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;ü§ñ Êô∫ËÉΩ‰ΩìÂõ¢Èòü&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ÂàÜÊûêÂ∏àÂõ¢Èòü&lt;/strong&gt;: üìàÂ∏ÇÂú∫ÂàÜÊûê | üí∞Âü∫Êú¨Èù¢ÂàÜÊûê | üì∞Êñ∞ÈóªÂàÜÊûê | üí¨ÊÉÖÁª™ÂàÜÊûê &lt;strong&gt;Á†îÁ©∂Âõ¢Èòü&lt;/strong&gt;: üêÇÁúãÊ∂®Á†îÁ©∂Âëò | üêªÁúãË∑åÁ†îÁ©∂Âëò | üéØ‰∫§ÊòìÂÜ≥Á≠ñÂëò &lt;strong&gt;ÁÆ°ÁêÜÂ±Ç&lt;/strong&gt;: üõ°Ô∏èÈ£éÈô©ÁÆ°ÁêÜÂëò | üëîÁ†îÁ©∂‰∏ªÁÆ°&lt;/p&gt; 
&lt;h2&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; 
&lt;h3&gt;üê≥ DockerÈÉ®ÁΩ≤ (Êé®Ëçê)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂÖãÈöÜÈ°πÁõÆ
git clone https://github.com/hsliuping/TradingAgents-CN.git
cd TradingAgents-CN

# 2. ÈÖçÁΩÆÁéØÂ¢ÉÂèòÈáè
cp .env.example .env
# ÁºñËæë .env Êñá‰ª∂ÔºåÂ°´ÂÖ•APIÂØÜÈí•

# 3. ÂêØÂä®ÊúçÂä°
# È¶ñÊ¨°ÂêØÂä®Êàñ‰ª£Á†ÅÂèòÊõ¥Êó∂ÔºàÈúÄË¶ÅÊûÑÂª∫ÈïúÂÉèÔºâ
docker-compose up -d --build

# Êó•Â∏∏ÂêØÂä®ÔºàÈïúÂÉèÂ∑≤Â≠òÂú®ÔºåÊó†‰ª£Á†ÅÂèòÊõ¥Ôºâ
docker-compose up -d

# Êô∫ËÉΩÂêØÂä®ÔºàËá™Âä®Âà§Êñ≠ÊòØÂê¶ÈúÄË¶ÅÊûÑÂª∫Ôºâ
# WindowsÁéØÂ¢É
powershell -ExecutionPolicy Bypass -File scripts\smart_start.ps1

# Linux/MacÁéØÂ¢É
chmod +x scripts/smart_start.sh &amp;amp;&amp;amp; ./scripts/smart_start.sh

# 4. ËÆøÈóÆÂ∫îÁî®
# WebÁïåÈù¢: http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üíª Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂçáÁ∫ßpip (ÈáçË¶ÅÔºÅÈÅøÂÖçÂÆâË£ÖÈîôËØØ)
python -m pip install --upgrade pip

# 2. ÂÆâË£Ö‰æùËµñ
pip install -e .

# 3. ÂêØÂä®Â∫îÁî®
python start_web.py

# 4. ËÆøÈóÆ http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üìä ÂºÄÂßãÂàÜÊûê&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÄâÊã©Ê®°Âûã&lt;/strong&gt;: DeepSeek V3 / ÈÄö‰πâÂçÉÈóÆ / Gemini&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ËæìÂÖ•ËÇ°Á•®&lt;/strong&gt;: &lt;code&gt;000001&lt;/code&gt; (AËÇ°) / &lt;code&gt;AAPL&lt;/code&gt; (ÁæéËÇ°) / &lt;code&gt;0700.HK&lt;/code&gt; (Ê∏ØËÇ°)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÂßãÂàÜÊûê&lt;/strong&gt;: ÁÇπÂáª"üöÄ ÂºÄÂßãÂàÜÊûê"ÊåâÈíÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆûÊó∂Ë∑üË∏™&lt;/strong&gt;: ËßÇÂØüÂÆûÊó∂ËøõÂ∫¶ÂíåÂàÜÊûêÊ≠•È™§&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êü•ÁúãÊä•Âëä&lt;/strong&gt;: ÁÇπÂáª"üìä Êü•ÁúãÂàÜÊûêÊä•Âëä"ÊåâÈíÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂØºÂá∫Êä•Âëä&lt;/strong&gt;: ÊîØÊåÅWord/PDF/MarkdownÊ†ºÂºè&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üîê Áî®Êà∑ÊùÉÈôêÁÆ°ÁêÜ&lt;/h2&gt; 
&lt;h3&gt;üîë ÈªòËÆ§Ë¥¶Âè∑‰ø°ÊÅØ&lt;/h3&gt; 
&lt;p&gt;Á≥ªÁªüÊèê‰æõ‰ª•‰∏ãÈªòËÆ§Ë¥¶Âè∑ÔºåÈ¶ñÊ¨°ÂêØÂä®Êó∂Ëá™Âä®ÂàõÂª∫Ôºö&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Áî®Êà∑Âêç&lt;/th&gt; 
   &lt;th&gt;ÂØÜÁ†Å&lt;/th&gt; 
   &lt;th&gt;ËßíËâ≤&lt;/th&gt; 
   &lt;th&gt;ÊùÉÈôêËØ¥Êòé&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;admin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;admin123&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÁÆ°ÁêÜÂëò&lt;/td&gt; 
   &lt;td&gt;ÂÆåÊï¥Á≥ªÁªüÊùÉÈôêÔºåÁî®Êà∑ÁÆ°ÁêÜÔºåÁ≥ªÁªüÈÖçÁΩÆ&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;user&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;user123&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÊôÆÈÄöÁî®Êà∑&lt;/td&gt; 
   &lt;td&gt;ËÇ°Á•®ÂàÜÊûêÔºåÊä•ÂëäÊü•ÁúãÔºåÂü∫Á°ÄÂäüËÉΩ&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;ÂÆâÂÖ®ÊèêÈÜí&lt;/strong&gt;: È¶ñÊ¨°ÁôªÂΩïÂêéËØ∑Á´ãÂç≥‰øÆÊîπÈªòËÆ§ÂØÜÁ†ÅÔºÅ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üõ°Ô∏è ÊùÉÈôêÊéßÂà∂‰ΩìÁ≥ª&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üîê ÁôªÂΩïËÆ§ËØÅ&lt;/strong&gt;: Âü∫‰∫éÁî®Êà∑ÂêçÂØÜÁ†ÅÁöÑÂÆâÂÖ®ËÆ§ËØÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üë• ËßíËâ≤ÁÆ°ÁêÜ&lt;/strong&gt;: ÁÆ°ÁêÜÂëò„ÄÅÊôÆÈÄöÁî®Êà∑Á≠âÂ§öÁ∫ßÊùÉÈôê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚è∞ ‰ºöËØùÁÆ°ÁêÜ&lt;/strong&gt;: Ëá™Âä®Ë∂ÖÊó∂‰øùÊä§ÔºåÂÆâÂÖ®ÁôªÂá∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä Êìç‰ΩúÊó•Âøó&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁî®Êà∑Ê¥ªÂä®ËÆ∞ÂΩï&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üõ†Ô∏è Áî®Êà∑ÁÆ°ÁêÜÂ∑•ÂÖ∑&lt;/h3&gt; 
&lt;p&gt;Á≥ªÁªüÊèê‰æõÂÆåÊï¥ÁöÑÂëΩ‰ª§Ë°åÁî®Êà∑ÁÆ°ÁêÜÂ∑•ÂÖ∑Ôºö&lt;/p&gt; 
&lt;h4&gt;Windows Áî®Êà∑&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;# ‰ΩøÁî® PowerShell ËÑöÊú¨
.\scripts\user_manager.ps1 list                    # ÂàóÂá∫ÊâÄÊúâÁî®Êà∑
.\scripts\user_manager.ps1 change-password admin   # ‰øÆÊîπÂØÜÁ†Å
.\scripts\user_manager.ps1 create newuser trader  # ÂàõÂª∫Êñ∞Áî®Êà∑
.\scripts\user_manager.ps1 delete olduser         # Âà†Èô§Áî®Êà∑

# Êàñ‰ΩøÁî®ÊâπÂ§ÑÁêÜÊñá‰ª∂
.\scripts\user_manager.bat list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Python ËÑöÊú¨ÔºàË∑®Âπ≥Âè∞Ôºâ&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Áõ¥Êé•‰ΩøÁî® Python ËÑöÊú¨
python scripts/user_password_manager.py list
python scripts/user_password_manager.py change-password admin
python scripts/user_password_manager.py create newuser --role trader
python scripts/user_password_manager.py delete olduser
python scripts/user_password_manager.py reset  # ÈáçÁΩÆ‰∏∫ÈªòËÆ§ÈÖçÁΩÆ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üìã ÊîØÊåÅÁöÑÁî®Êà∑Êìç‰Ωú&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìù ÂàóÂá∫Áî®Êà∑&lt;/strong&gt;: Êü•ÁúãÊâÄÊúâÁî®Êà∑ÂèäÂÖ∂ËßíËâ≤ÊùÉÈôê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîë ‰øÆÊîπÂØÜÁ†Å&lt;/strong&gt;: ÂÆâÂÖ®ÁöÑÂØÜÁ†ÅÊõ¥Êñ∞Êú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üë§ ÂàõÂª∫Áî®Êà∑&lt;/strong&gt;: ÊîØÊåÅËá™ÂÆö‰πâËßíËâ≤ÂíåÊùÉÈôê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üóëÔ∏è Âà†Èô§Áî®Êà∑&lt;/strong&gt;: ÂÆâÂÖ®ÁöÑÁî®Êà∑Âà†Èô§ÂäüËÉΩ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ ÈáçÁΩÆÈÖçÁΩÆ&lt;/strong&gt;: ÊÅ¢Â§çÈªòËÆ§Áî®Êà∑ËÆæÁΩÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìÅ ÈÖçÁΩÆÊñá‰ª∂‰ΩçÁΩÆ&lt;/h3&gt; 
&lt;p&gt;Áî®Êà∑ÈÖçÁΩÆÂ≠òÂÇ®Âú®Ôºö&lt;code&gt;web/config/users.json&lt;/code&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;ËØ¶ÁªÜÊñáÊ°£&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÁî®Êà∑ÁÆ°ÁêÜÊåáÂçóËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/scripts/USER_MANAGEMENT.md"&gt;scripts/USER_MANAGEMENT.md&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üöß ÂΩìÂâçÁâàÊú¨ÈôêÂà∂&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ùå ÊöÇ‰∏çÊîØÊåÅÂú®Á∫øÁî®Êà∑Ê≥®ÂÜå&lt;/li&gt; 
 &lt;li&gt;‚ùå ÊöÇ‰∏çÊîØÊåÅWebÁïåÈù¢ÁöÑËßíËâ≤ÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅÂÆåÊï¥ÁöÑÂëΩ‰ª§Ë°åÁî®Êà∑ÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅÂÆåÊï¥ÁöÑÊùÉÈôêÊéßÂà∂Ê°ÜÊû∂&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üéØ Ê†∏ÂøÉ‰ºòÂäø&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê&lt;/strong&gt;: v0.1.12Êñ∞Â¢ûAIÈ©±Âä®ÁöÑÊñ∞ÈóªËøáÊª§ÂíåË¥®ÈáèËØÑ‰º∞Á≥ªÁªü&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîß Â§öÂ±ÇÊ¨°ËøáÊª§&lt;/strong&gt;: Âü∫Á°Ä„ÄÅÂ¢ûÂº∫„ÄÅÈõÜÊàê‰∏âÁ∫ßÊñ∞ÈóªËøáÊª§Êú∫Âà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üì∞ Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑&lt;/strong&gt;: Êï¥ÂêàÂ§öÊ∫êÊñ∞ÈóªÔºåÊèê‰æõÁªü‰∏ÄÁöÑÊô∫ËÉΩÊ£ÄÁ¥¢Êé•Âè£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üÜï Â§öLLMÈõÜÊàê&lt;/strong&gt;: v0.1.11Êñ∞Â¢û4Â§ßÊèê‰æõÂïÜÔºå60+Ê®°ÂûãÔºå‰∏ÄÁ´ôÂºèAI‰ΩìÈ™å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ ÈÖçÁΩÆÊåÅ‰πÖÂåñ&lt;/strong&gt;: Ê®°ÂûãÈÄâÊã©ÁúüÊ≠£ÊåÅ‰πÖÂåñÔºåURLÂèÇÊï∞Â≠òÂÇ®ÔºåÂà∑Êñ∞‰øùÊåÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ Âø´ÈÄüÂàáÊç¢&lt;/strong&gt;: 5‰∏™ÁÉ≠Èó®Ê®°ÂûãÂø´ÈÄüÊåâÈíÆÔºå‰∏ÄÈîÆÂàáÊç¢‰∏çÂêåAI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üÜï ÂÆûÊó∂ËøõÂ∫¶&lt;/strong&gt;: v0.1.10ÂºÇÊ≠•ËøõÂ∫¶Ë∑üË∏™ÔºåÂëäÂà´ÈªëÁõíÁ≠âÂæÖ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíæ Êô∫ËÉΩ‰ºöËØù&lt;/strong&gt;: Áä∂ÊÄÅÊåÅ‰πÖÂåñÔºåÈ°µÈù¢Âà∑Êñ∞‰∏ç‰∏¢Â§±ÂàÜÊûêÁªìÊûú&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîê Áî®Êà∑ÊùÉÈôê&lt;/strong&gt;: v0.1.14Êñ∞Â¢ûÂÆåÊï¥ÁöÑÁî®Êà∑ËÆ§ËØÅÂíåÊùÉÈôêÁÆ°ÁêÜ‰ΩìÁ≥ª&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üá®üá≥ ‰∏≠ÂõΩ‰ºòÂåñ&lt;/strong&gt;: AËÇ°/Ê∏ØËÇ°Êï∞ÊçÆ + ÂõΩ‰∫ßLLM + ‰∏≠ÊñáÁïåÈù¢&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üê≥ ÂÆπÂô®Âåñ&lt;/strong&gt;: Docker‰∏ÄÈîÆÈÉ®ÁΩ≤ÔºåÁéØÂ¢ÉÈöîÁ¶ªÔºåÂø´ÈÄüÊâ©Â±ï&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìÑ ‰∏ì‰∏öÊä•Âëä&lt;/strong&gt;: Â§öÊ†ºÂºèÂØºÂá∫ÔºåËá™Âä®ÁîüÊàêÊäïËµÑÂª∫ËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Á®≥ÂÆöÂèØÈù†&lt;/strong&gt;: Â§öÂ±ÇÊï∞ÊçÆÊ∫êÔºåÊô∫ËÉΩÈôçÁ∫ßÔºåÈîôËØØÊÅ¢Â§ç&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîß ÊäÄÊúØÊû∂ÊûÑ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Ê†∏ÂøÉÊäÄÊúØ&lt;/strong&gt;: Python 3.10+ | LangChain | Streamlit | MongoDB | Redis &lt;strong&gt;AIÊ®°Âûã&lt;/strong&gt;: DeepSeek V3 | ÈòøÈáåÁôæÁÇº | Google AI | OpenRouter(60+Ê®°Âûã) | OpenAI &lt;strong&gt;Êï∞ÊçÆÊ∫ê&lt;/strong&gt;: Tushare | AkShare | FinnHub | Yahoo Finance &lt;strong&gt;ÈÉ®ÁΩ≤&lt;/strong&gt;: Docker | Docker Compose | Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/p&gt; 
&lt;h2&gt;üìö ÊñáÊ°£ÂíåÊîØÊåÅ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìñ ÂÆåÊï¥ÊñáÊ°£&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;docs/&lt;/a&gt; - ÂÆâË£ÖÊåáÂçó„ÄÅ‰ΩøÁî®ÊïôÁ®ã„ÄÅAPIÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üö® ÊïÖÈöúÊéíÈô§&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/troubleshooting/"&gt;troubleshooting/&lt;/a&gt; - Â∏∏ËßÅÈóÆÈ¢òËß£ÂÜ≥ÊñπÊ°à&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Êõ¥Êñ∞Êó•Âøó&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/releases/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; - ËØ¶ÁªÜÁâàÊú¨ÂéÜÂè≤&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/QUICKSTART.md"&gt;QUICKSTART.md&lt;/a&gt; - 5ÂàÜÈíüÂø´ÈÄüÈÉ®ÁΩ≤ÊåáÂçó&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üÜö ‰∏≠ÊñáÂ¢ûÂº∫ÁâπËâ≤&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Áõ∏ÊØîÂéüÁâàÊñ∞Â¢û&lt;/strong&gt;: Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûê | Â§öÂ±ÇÊ¨°Êñ∞ÈóªËøáÊª§ | Êñ∞ÈóªË¥®ÈáèËØÑ‰º∞ | Áªü‰∏ÄÊñ∞ÈóªÂ∑•ÂÖ∑ | Â§öLLMÊèê‰æõÂïÜÈõÜÊàê | Ê®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ | Âø´ÈÄüÂàáÊç¢ÊåâÈíÆ | | ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫ | Êô∫ËÉΩ‰ºöËØùÁÆ°ÁêÜ | ‰∏≠ÊñáÁïåÈù¢ | AËÇ°Êï∞ÊçÆ | ÂõΩ‰∫ßLLM | DockerÈÉ®ÁΩ≤ | ‰∏ì‰∏öÊä•ÂëäÂØºÂá∫ | Áªü‰∏ÄÊó•ÂøóÁÆ°ÁêÜ | WebÈÖçÁΩÆÁïåÈù¢ | ÊàêÊú¨‰ºòÂåñ&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;DockerÈÉ®ÁΩ≤ÂåÖÂê´ÁöÑÊúçÂä°&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üåê &lt;strong&gt;WebÂ∫îÁî®&lt;/strong&gt;: TradingAgents-CN‰∏ªÁ®ãÂ∫è&lt;/li&gt; 
 &lt;li&gt;üóÑÔ∏è &lt;strong&gt;MongoDB&lt;/strong&gt;: Êï∞ÊçÆÊåÅ‰πÖÂåñÂ≠òÂÇ®&lt;/li&gt; 
 &lt;li&gt;‚ö° &lt;strong&gt;Redis&lt;/strong&gt;: È´òÈÄüÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;MongoDB Express&lt;/strong&gt;: Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁïåÈù¢&lt;/li&gt; 
 &lt;li&gt;üéõÔ∏è &lt;strong&gt;Redis Commander&lt;/strong&gt;: ÁºìÂ≠òÁÆ°ÁêÜÁïåÈù¢&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üíª ÊñπÂºè‰∫åÔºöÊú¨Âú∞ÈÉ®ÁΩ≤&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;ÈÄÇÁî®Âú∫ÊôØ&lt;/strong&gt;: ÂºÄÂèëÁéØÂ¢É„ÄÅËá™ÂÆö‰πâÈÖçÁΩÆ„ÄÅÁ¶ªÁ∫ø‰ΩøÁî®&lt;/p&gt; 
&lt;h3&gt;ÁéØÂ¢ÉË¶ÅÊ±Ç&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python 3.10+ (Êé®Ëçê 3.11)&lt;/li&gt; 
 &lt;li&gt;4GB+ RAM (Êé®Ëçê 8GB+)&lt;/li&gt; 
 &lt;li&gt;Á®≥ÂÆöÁöÑÁΩëÁªúËøûÊé•&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂÆâË£ÖÊ≠•È™§&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÂÖãÈöÜÈ°πÁõÆ
git clone https://github.com/hsliuping/TradingAgents-CN.git
cd TradingAgents-CN

# 2. ÂàõÂª∫ËôöÊãüÁéØÂ¢É
python -m venv env
# Windows
env\Scripts\activate
# Linux/macOS
source env/bin/activate

# 3. ÂçáÁ∫ßpip
python -m pip install --upgrade pip

# 4. ÂÆâË£ÖÊâÄÊúâ‰æùËµñ
pip install -r requirements.txt
#ÊàñËÄÖ‰ΩøÁî®pip install -e .
pip install -e .

# Ê≥®ÊÑèÔºörequirements.txtÂ∑≤ÂåÖÂê´ÊâÄÊúâÂøÖÈúÄ‰æùËµñÔºö
# - Êï∞ÊçÆÂ∫ìÊîØÊåÅ (MongoDB + Redis)
# - Â§öÂ∏ÇÂú∫Êï∞ÊçÆÊ∫ê (Tushare, AKShare, FinnHubÁ≠â)
# - WebÁïåÈù¢ÂíåÊä•ÂëäÂØºÂá∫ÂäüËÉΩ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÈÖçÁΩÆAPIÂØÜÈí•&lt;/h3&gt; 
&lt;h4&gt;üá®üá≥ Êé®ËçêÔºö‰ΩøÁî®ÈòøÈáåÁôæÁÇºÔºàÂõΩ‰∫ßÂ§ßÊ®°ÂûãÔºâ&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Â§çÂà∂ÈÖçÁΩÆÊ®°Êùø
cp .env.example .env

# ÁºñËæë .env Êñá‰ª∂ÔºåÈÖçÁΩÆ‰ª•‰∏ãÂøÖÈúÄÁöÑAPIÂØÜÈí•Ôºö
DASHSCOPE_API_KEY=your_dashscope_api_key_here
FINNHUB_API_KEY=your_finnhub_api_key_here

# Êé®ËçêÔºöTushare APIÔºà‰∏ì‰∏öAËÇ°Êï∞ÊçÆÔºâ
TUSHARE_TOKEN=your_tushare_token_here
TUSHARE_ENABLED=true

# ÂèØÈÄâÔºöÂÖ∂‰ªñAIÊ®°ÂûãAPI
GOOGLE_API_KEY=your_google_api_key_here
DEEPSEEK_API_KEY=your_deepseek_api_key_here

# Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàÂèØÈÄâÔºåÊèêÂçáÊÄßËÉΩÔºâ
# Êú¨Âú∞ÈÉ®ÁΩ≤‰ΩøÁî®Ê†áÂáÜÁ´ØÂè£
MONGODB_ENABLED=false  # ËÆæ‰∏∫trueÂêØÁî®MongoDB
REDIS_ENABLED=false    # ËÆæ‰∏∫trueÂêØÁî®Redis
MONGODB_HOST=localhost
MONGODB_PORT=27017     # Ê†áÂáÜMongoDBÁ´ØÂè£
REDIS_HOST=localhost
REDIS_PORT=6379        # Ê†áÂáÜRedisÁ´ØÂè£

# DockerÈÉ®ÁΩ≤Êó∂ÈúÄË¶Å‰øÆÊîπ‰∏ªÊú∫Âêç
# MONGODB_HOST=mongodb
# REDIS_HOST=redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üìã ÈÉ®ÁΩ≤Ê®°ÂºèÈÖçÁΩÆËØ¥Êòé&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Êú¨Âú∞ÈÉ®ÁΩ≤Ê®°Âºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàÊú¨Âú∞ÈÉ®ÁΩ≤Ôºâ
MONGODB_ENABLED=true
REDIS_ENABLED=true
MONGODB_HOST=localhost      # Êú¨Âú∞‰∏ªÊú∫
MONGODB_PORT=27017         # Ê†áÂáÜÁ´ØÂè£
REDIS_HOST=localhost       # Êú¨Âú∞‰∏ªÊú∫
REDIS_PORT=6379           # Ê†áÂáÜÁ´ØÂè£
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;DockerÈÉ®ÁΩ≤Ê®°Âºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàDockerÈÉ®ÁΩ≤Ôºâ
MONGODB_ENABLED=true
REDIS_ENABLED=true
MONGODB_HOST=mongodb       # DockerÂÆπÂô®ÊúçÂä°Âêç
MONGODB_PORT=27017        # Ê†áÂáÜÁ´ØÂè£
REDIS_HOST=redis          # DockerÂÆπÂô®ÊúçÂä°Âêç
REDIS_PORT=6379          # Ê†áÂáÜÁ´ØÂè£
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° &lt;strong&gt;ÈÖçÁΩÆÊèêÁ§∫&lt;/strong&gt;Ôºö&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Êú¨Âú∞ÈÉ®ÁΩ≤ÔºöÈúÄË¶ÅÊâãÂä®ÂêØÂä®MongoDBÂíåRedisÊúçÂä°&lt;/li&gt; 
  &lt;li&gt;DockerÈÉ®ÁΩ≤ÔºöÊï∞ÊçÆÂ∫ìÊúçÂä°ÈÄöËøádocker-composeËá™Âä®ÂêØÂä®&lt;/li&gt; 
  &lt;li&gt;Á´ØÂè£ÂÜ≤Á™ÅÔºöÂ¶ÇÊûúÊú¨Âú∞Â∑≤ÊúâÊï∞ÊçÆÂ∫ìÊúçÂä°ÔºåÂèØ‰øÆÊîπdocker-compose.yml‰∏≠ÁöÑÁ´ØÂè£Êò†Â∞Ñ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;üåç ÂèØÈÄâÔºö‰ΩøÁî®ÂõΩÂ§ñÊ®°Âûã&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# OpenAI (ÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë)
OPENAI_API_KEY=your_openai_api_key

# Anthropic (ÈúÄË¶ÅÁßëÂ≠¶‰∏äÁΩë)
ANTHROPIC_API_KEY=your_anthropic_api_key
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üóÑÔ∏è Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÔºàMongoDB + RedisÔºâ&lt;/h3&gt; 
&lt;h4&gt;È´òÊÄßËÉΩÊï∞ÊçÆÂ≠òÂÇ®ÊîØÊåÅ&lt;/h4&gt; 
&lt;p&gt;Êú¨È°πÁõÆÊîØÊåÅ &lt;strong&gt;MongoDB&lt;/strong&gt; Âíå &lt;strong&gt;Redis&lt;/strong&gt; Êï∞ÊçÆÂ∫ìÔºåÊèê‰æõÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìä ËÇ°Á•®Êï∞ÊçÆÁºìÂ≠ò&lt;/strong&gt;: ÂáèÂ∞ëAPIË∞ÉÁî®ÔºåÊèêÂçáÂìçÂ∫îÈÄüÂ∫¶&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ Êô∫ËÉΩÈôçÁ∫ßÊú∫Âà∂&lt;/strong&gt;: MongoDB ‚Üí API ‚Üí Êú¨Âú∞ÁºìÂ≠òÁöÑÂ§öÂ±ÇÊï∞ÊçÆÊ∫ê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° È´òÊÄßËÉΩÁºìÂ≠ò&lt;/strong&gt;: RedisÁºìÂ≠òÁÉ≠ÁÇπÊï∞ÊçÆÔºåÊØ´ÁßíÁ∫ßÂìçÂ∫î&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Êï∞ÊçÆÊåÅ‰πÖÂåñ&lt;/strong&gt;: MongoDBÂ≠òÂÇ®ÂéÜÂè≤Êï∞ÊçÆÔºåÊîØÊåÅÁ¶ªÁ∫øÂàÜÊûê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÈÉ®ÁΩ≤ÊñπÂºè&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;üê≥ DockerÈÉ®ÁΩ≤ÔºàÊé®ËçêÔºâ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®DockerÈÉ®ÁΩ≤ÔºåÊï∞ÊçÆÂ∫ìÂ∑≤Ëá™Âä®ÂåÖÂê´Âú®ÂÜÖÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# DockerÈÉ®ÁΩ≤‰ºöËá™Âä®ÂêØÂä®ÊâÄÊúâÊúçÂä°ÔºåÂåÖÊã¨Ôºö
docker-compose up -d --build
# - WebÂ∫îÁî® (Á´ØÂè£8501)
# - MongoDB (Á´ØÂè£27017)
# - Redis (Á´ØÂè£6379)
# - Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÁïåÈù¢ (Á´ØÂè£8081, 8082)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;üíª Êú¨Âú∞ÈÉ®ÁΩ≤ - Êï∞ÊçÆÂ∫ìÈÖçÁΩÆ&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®Êú¨Âú∞ÈÉ®ÁΩ≤ÔºåÂèØ‰ª•ÈÄâÊã©‰ª•‰∏ãÊñπÂºèÔºö&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÊñπÂºè‰∏ÄÔºö‰ªÖÂêØÂä®Êï∞ÊçÆÂ∫ìÊúçÂä°&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ‰ªÖÂêØÂä® MongoDB + Redis ÊúçÂä°Ôºà‰∏çÂêØÂä®WebÂ∫îÁî®Ôºâ
docker-compose up -d mongodb redis mongo-express redis-commander

# Êü•ÁúãÊúçÂä°Áä∂ÊÄÅ
docker-compose ps

# ÂÅúÊ≠¢ÊúçÂä°
docker-compose down
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÊñπÂºè‰∫åÔºöÂÆåÂÖ®Êú¨Âú∞ÂÆâË£Ö&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êï∞ÊçÆÂ∫ì‰æùËµñÂ∑≤ÂåÖÂê´Âú®requirements.txt‰∏≠ÔºåÊó†ÈúÄÈ¢ùÂ§ñÂÆâË£Ö

# ÂêØÂä® MongoDB (ÈªòËÆ§Á´ØÂè£ 27017)
mongod --dbpath ./data/mongodb

# ÂêØÂä® Redis (ÈªòËÆ§Á´ØÂè£ 6379)
redis-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;‚ö†Ô∏è &lt;strong&gt;ÈáçË¶ÅËØ¥Êòé&lt;/strong&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;üê≥ DockerÈÉ®ÁΩ≤&lt;/strong&gt;: Êï∞ÊçÆÂ∫ìËá™Âä®ÂåÖÂê´ÔºåÊó†ÈúÄÈ¢ùÂ§ñÈÖçÁΩÆ&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;üíª Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/strong&gt;: ÂèØÈÄâÊã©‰ªÖÂêØÂä®Êï∞ÊçÆÂ∫ìÊúçÂä°ÊàñÂÆåÂÖ®Êú¨Âú∞ÂÆâË£Ö&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;üìã Êé®Ëçê&lt;/strong&gt;: ‰ΩøÁî®DockerÈÉ®ÁΩ≤‰ª•Ëé∑ÂæóÊúÄ‰Ω≥‰ΩìÈ™åÂíå‰∏ÄËá¥ÊÄß&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÈÖçÁΩÆÈÄâÈ°π&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ&lt;/strong&gt;ÔºàÊé®ËçêÔºâÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# MongoDB ÈÖçÁΩÆ
MONGODB_HOST=localhost
MONGODB_PORT=27017
MONGODB_DATABASE=trading_agents
MONGODB_USERNAME=admin
MONGODB_PASSWORD=your_password

# Redis ÈÖçÁΩÆ
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password
REDIS_DB=0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÈÖçÁΩÆÊñá‰ª∂ÊñπÂºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# config/database_config.py
DATABASE_CONFIG = {
    'mongodb': {
        'host': 'localhost',
        'port': 27017,
        'database': 'trading_agents',
        'username': 'admin',
        'password': 'your_password'
    },
    'redis': {
        'host': 'localhost',
        'port': 6379,
        'password': 'your_redis_password',
        'db': 0
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÂäüËÉΩÁâπÊÄß&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;MongoDB ÂäüËÉΩ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ ËÇ°Á•®Âü∫Á°Ä‰ø°ÊÅØÂ≠òÂÇ®&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÂéÜÂè≤‰ª∑Ê†ºÊï∞ÊçÆÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÂàÜÊûêÁªìÊûúÊåÅ‰πÖÂåñ&lt;/li&gt; 
 &lt;li&gt;‚úÖ Áî®Êà∑ÈÖçÁΩÆÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚úÖ Ëá™Âä®Êï∞ÊçÆÂêåÊ≠•&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Redis ÂäüËÉΩ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ö° ÂÆûÊó∂‰ª∑Ê†ºÊï∞ÊçÆÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;‚ö° APIÂìçÂ∫îÁªìÊûúÁºìÂ≠ò&lt;/li&gt; 
 &lt;li&gt;‚ö° ‰ºöËØùÁä∂ÊÄÅÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;‚ö° ÁÉ≠ÁÇπÊï∞ÊçÆÈ¢ÑÂä†ËΩΩ&lt;/li&gt; 
 &lt;li&gt;‚ö° ÂàÜÂ∏ÉÂºèÈîÅÊîØÊåÅ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Êô∫ËÉΩÈôçÁ∫ßÊú∫Âà∂&lt;/h4&gt; 
&lt;p&gt;Á≥ªÁªüÈááÁî®Â§öÂ±ÇÊï∞ÊçÆÊ∫êÈôçÁ∫ßÁ≠ñÁï•ÔºåÁ°Æ‰øùÈ´òÂèØÁî®ÊÄßÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;üìä Êï∞ÊçÆËé∑ÂèñÊµÅÁ®ãÔºö
1. üîç Ê£ÄÊü• Redis ÁºìÂ≠ò (ÊØ´ÁßíÁ∫ß)
2. üìö Êü•ËØ¢ MongoDB Â≠òÂÇ® (ÁßíÁ∫ß)
3. üåê Ë∞ÉÁî®ÈÄöËææ‰ø°API (ÁßíÁ∫ß)
4. üíæ Êú¨Âú∞Êñá‰ª∂ÁºìÂ≠ò (Â§áÁî®)
5. ‚ùå ËøîÂõûÈîôËØØ‰ø°ÊÅØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÈÖçÁΩÆÈôçÁ∫ßÁ≠ñÁï•&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# Âú® .env Êñá‰ª∂‰∏≠ÈÖçÁΩÆ
ENABLE_MONGODB=true
ENABLE_REDIS=true
ENABLE_FALLBACK=true

# ÁºìÂ≠òËøáÊúüÊó∂Èó¥ÔºàÁßíÔºâ
REDIS_CACHE_TTL=300
MONGODB_CACHE_TTL=3600
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÊÄßËÉΩ‰ºòÂåñÂª∫ËÆÆ&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Áîü‰∫ßÁéØÂ¢ÉÈÖçÁΩÆ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# MongoDB ‰ºòÂåñ
MONGODB_MAX_POOL_SIZE=50
MONGODB_MIN_POOL_SIZE=5
MONGODB_MAX_IDLE_TIME=30000

# Redis ‰ºòÂåñ
REDIS_MAX_CONNECTIONS=20
REDIS_CONNECTION_POOL_SIZE=10
REDIS_SOCKET_TIMEOUT=5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜÂ∑•ÂÖ∑&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÂàùÂßãÂåñÊï∞ÊçÆÂ∫ì
python scripts/setup/init_database.py

# Á≥ªÁªüÁä∂ÊÄÅÊ£ÄÊü•
python scripts/validation/check_system_status.py

# Ê∏ÖÁêÜÁºìÂ≠òÂ∑•ÂÖ∑
python scripts/maintenance/cleanup_cache.py --days 7
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;ÊïÖÈöúÊéíÈô§&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Â∏∏ËßÅÈóÆÈ¢òËß£ÂÜ≥&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ü™ü Windows 10 ChromaDBÂÖºÂÆπÊÄßÈóÆÈ¢ò&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;ÈóÆÈ¢òÁé∞Ë±°&lt;/strong&gt;ÔºöÂú®Windows 10‰∏äÂá∫Áé∞ &lt;code&gt;Configuration error: An instance of Chroma already exists for ephemeral with different settings&lt;/code&gt; ÈîôËØØÔºåËÄåWindows 11Ê≠£Â∏∏„ÄÇ&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Âø´ÈÄüËß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;Ôºö&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# ÊñπÊ°à1ÔºöÁ¶ÅÁî®ÂÜÖÂ≠òÂäüËÉΩÔºàÊé®ËçêÔºâ
# Âú® .env Êñá‰ª∂‰∏≠Ê∑ªÂä†Ôºö
MEMORY_ENABLED=false

# ÊñπÊ°à2Ôºö‰ΩøÁî®‰∏ìÁî®‰øÆÂ§çËÑöÊú¨
powershell -ExecutionPolicy Bypass -File scripts\fix_chromadb_win10.ps1

# ÊñπÊ°à3ÔºöÁÆ°ÁêÜÂëòÊùÉÈôêËøêË°å
# Âè≥ÈîÆPowerShell -&amp;gt; "‰ª•ÁÆ°ÁêÜÂëòË∫´‰ªΩËøêË°å"
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;ËØ¶ÁªÜËß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;ÔºöÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/troubleshooting/windows10-chromadb-fix.md"&gt;Windows 10ÂÖºÂÆπÊÄßÊåáÂçó&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MongoDBËøûÊé•Â§±Ë¥•&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;DockerÈÉ®ÁΩ≤&lt;/strong&gt;Ôºö&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•ÊúçÂä°Áä∂ÊÄÅ
docker-compose logs mongodb

# ÈáçÂêØÊúçÂä°
docker-compose restart mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Êú¨Âú∞ÈÉ®ÁΩ≤&lt;/strong&gt;Ôºö&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•MongoDBËøõÁ®ã
ps aux | grep mongod

# ÈáçÂêØMongoDB
sudo systemctl restart mongod  # Linux
brew services restart mongodb  # macOS
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;RedisËøûÊé•Ë∂ÖÊó∂&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•RedisÁä∂ÊÄÅ
redis-cli ping

# Ê∏ÖÁêÜRedisÁºìÂ≠ò
redis-cli flushdb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;ÁºìÂ≠òÈóÆÈ¢ò&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# Ê£ÄÊü•Á≥ªÁªüÁä∂ÊÄÅÂíåÁºìÂ≠ò
python scripts/validation/check_system_status.py

# Ê∏ÖÁêÜËøáÊúüÁºìÂ≠ò
python scripts/maintenance/cleanup_cache.py --days 7
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° &lt;strong&gt;ÊèêÁ§∫&lt;/strong&gt;: Âç≥‰Ωø‰∏çÈÖçÁΩÆÊï∞ÊçÆÂ∫ìÔºåÁ≥ªÁªü‰ªçÂèØÊ≠£Â∏∏ËøêË°åÔºå‰ºöËá™Âä®ÈôçÁ∫ßÂà∞APIÁõ¥Êé•Ë∞ÉÁî®Ê®°Âºè„ÄÇÊï∞ÊçÆÂ∫ìÈÖçÁΩÆÊòØÂèØÈÄâÁöÑÊÄßËÉΩ‰ºòÂåñÂäüËÉΩ„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;ËØ¶ÁªÜÊñáÊ°£&lt;/strong&gt;: Êõ¥Â§öÊï∞ÊçÆÂ∫ìÈÖçÁΩÆ‰ø°ÊÅØËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/database-architecture.md"&gt;Êï∞ÊçÆÂ∫ìÊû∂ÊûÑÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üì§ Êä•ÂëäÂØºÂá∫ÂäüËÉΩ&lt;/h3&gt; 
&lt;h4&gt;Êñ∞Â¢ûÂäüËÉΩÔºö‰∏ì‰∏öÂàÜÊûêÊä•ÂëäÂØºÂá∫&lt;/h4&gt; 
&lt;p&gt;Êú¨È°πÁõÆÁé∞Â∑≤ÊîØÊåÅÂ∞ÜËÇ°Á•®ÂàÜÊûêÁªìÊûúÂØºÂá∫‰∏∫Â§öÁßç‰∏ì‰∏öÊ†ºÂºèÔºö&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ÊîØÊåÅÁöÑÂØºÂá∫Ê†ºÂºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üìÑ Markdown (.md)&lt;/strong&gt; - ËΩªÈáèÁ∫ßÊ†áËÆ∞ËØ≠Ë®ÄÔºåÈÄÇÂêàÊäÄÊúØÁî®Êà∑ÂíåÁâàÊú¨ÊéßÂà∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìù Word (.docx)&lt;/strong&gt; - Microsoft WordÊñáÊ°£ÔºåÈÄÇÂêàÂïÜÂä°Êä•ÂëäÂíåËøõ‰∏ÄÊ≠•ÁºñËæë&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä PDF (.pdf)&lt;/strong&gt; - ‰æøÊê∫ÂºèÊñáÊ°£Ê†ºÂºèÔºåÈÄÇÂêàÊ≠£ÂºèÂàÜ‰∫´ÂíåÊâìÂç∞&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Êä•ÂëäÂÜÖÂÆπÁªìÊûÑ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üéØ &lt;strong&gt;ÊäïËµÑÂÜ≥Á≠ñÊëòË¶Å&lt;/strong&gt; - ‰π∞ÂÖ•/ÊåÅÊúâ/ÂçñÂá∫Âª∫ËÆÆÔºåÁΩÆ‰ø°Â∫¶ÔºåÈ£éÈô©ËØÑÂàÜ&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;ËØ¶ÁªÜÂàÜÊûêÊä•Âëä&lt;/strong&gt; - ÊäÄÊúØÂàÜÊûêÔºåÂü∫Êú¨Èù¢ÂàÜÊûêÔºåÂ∏ÇÂú∫ÊÉÖÁª™ÔºåÊñ∞Èóª‰∫ã‰ª∂&lt;/li&gt; 
 &lt;li&gt;‚ö†Ô∏è &lt;strong&gt;È£éÈô©ÊèêÁ§∫&lt;/strong&gt; - ÂÆåÊï¥ÁöÑÊäïËµÑÈ£éÈô©Â£∞ÊòéÂíåÂÖçË¥£Êù°Ê¨æ&lt;/li&gt; 
 &lt;li&gt;üìã &lt;strong&gt;ÈÖçÁΩÆ‰ø°ÊÅØ&lt;/strong&gt; - ÂàÜÊûêÂèÇÊï∞ÔºåÊ®°Âûã‰ø°ÊÅØÔºåÁîüÊàêÊó∂Èó¥&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‰ΩøÁî®ÊñπÊ≥ï&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÂÆåÊàêËÇ°Á•®ÂàÜÊûêÂêéÔºåÂú®ÁªìÊûúÈ°µÈù¢Â∫ïÈÉ®ÊâæÂà∞"üì§ ÂØºÂá∫Êä•Âëä"ÈÉ®ÂàÜ&lt;/li&gt; 
 &lt;li&gt;ÈÄâÊã©ÈúÄË¶ÅÁöÑÊ†ºÂºèÔºöMarkdown„ÄÅWordÊàñPDF&lt;/li&gt; 
 &lt;li&gt;ÁÇπÂáªÂØºÂá∫ÊåâÈíÆÔºåÁ≥ªÁªüËá™Âä®ÁîüÊàêÂπ∂Êèê‰æõ‰∏ãËΩΩ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;ÂÆâË£ÖÂØºÂá∫‰æùËµñ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÂÆâË£ÖPython‰æùËµñ
pip install markdown pypandoc

# ÂÆâË£ÖÁ≥ªÁªüÂ∑•ÂÖ∑ÔºàÁî®‰∫éPDFÂØºÂá∫Ôºâ
# Windows: choco install pandoc wkhtmltopdf
# macOS: brew install pandoc wkhtmltopdf
# Linux: sudo apt-get install pandoc wkhtmltopdf
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üìö &lt;strong&gt;ËØ¶ÁªÜÊñáÊ°£&lt;/strong&gt;: ÂÆåÊï¥ÁöÑÂØºÂá∫ÂäüËÉΩ‰ΩøÁî®ÊåáÂçóËØ∑ÂèÇËÄÉ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/EXPORT_GUIDE.md"&gt;ÂØºÂá∫ÂäüËÉΩÊåáÂçó&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üöÄ ÂêØÂä®Â∫îÁî®&lt;/h3&gt; 
&lt;h4&gt;üê≥ DockerÂêØÂä®ÔºàÊé®ËçêÔºâ&lt;/h4&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®DockerÈÉ®ÁΩ≤ÔºåÂ∫îÁî®Â∑≤ÁªèËá™Âä®ÂêØÂä®Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Â∫îÁî®Â∑≤Âú®Docker‰∏≠ËøêË°åÔºåÁõ¥Êé•ËÆøÈóÆÔºö
# WebÁïåÈù¢: http://localhost:8501
# Êï∞ÊçÆÂ∫ìÁÆ°ÁêÜ: http://localhost:8081
# ÁºìÂ≠òÁÆ°ÁêÜ: http://localhost:8082

# Êü•ÁúãËøêË°åÁä∂ÊÄÅ
docker-compose ps

# Êü•ÁúãÊó•Âøó
docker-compose logs -f web
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üíª Êú¨Âú∞ÂêØÂä®&lt;/h4&gt; 
&lt;p&gt;Â¶ÇÊûúÊÇ®‰ΩøÁî®Êú¨Âú∞ÈÉ®ÁΩ≤Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. ÊøÄÊ¥ªËôöÊãüÁéØÂ¢É
# Windows
.\env\Scripts\activate
# Linux/macOS
source env/bin/activate

# 2. ÂÆâË£ÖÈ°πÁõÆÂà∞ËôöÊãüÁéØÂ¢ÉÔºàÈáçË¶ÅÔºÅÔºâ
pip install -e .

# 3. ÂêØÂä®WebÁÆ°ÁêÜÁïåÈù¢
# ÊñπÊ≥ï1Ôºö‰ΩøÁî®È°πÁõÆÂêØÂä®ËÑöÊú¨ÔºàÊé®ËçêÔºâ
python start_web.py

# ÊñπÊ≥ï2Ôºö‰ΩøÁî®ÂéüÂßãÂêØÂä®ËÑöÊú¨
python web/run_web.py

# ÊñπÊ≥ï3ÔºöÁõ¥Êé•‰ΩøÁî®streamlitÔºàÈúÄË¶ÅÂÖàÂÆâË£ÖÈ°πÁõÆÔºâ
streamlit run web/app.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;ÁÑ∂ÂêéÂú®ÊµèËßàÂô®‰∏≠ËÆøÈóÆ &lt;code&gt;http://localhost:8501&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;WebÁïåÈù¢ÁâπËâ≤ÂäüËÉΩ&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üá∫üá∏ &lt;strong&gt;ÁæéËÇ°ÂàÜÊûê&lt;/strong&gt;: ÊîØÊåÅ AAPL, TSLA, NVDA Á≠âÁæéËÇ°‰ª£Á†Å&lt;/li&gt; 
 &lt;li&gt;üá®üá≥ &lt;strong&gt;AËÇ°ÂàÜÊûê&lt;/strong&gt;: ÊîØÊåÅ 000001, 600519, 300750 Á≠âAËÇ°‰ª£Á†Å&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;ÂÆûÊó∂Êï∞ÊçÆ&lt;/strong&gt;: ÈÄöËææ‰ø°APIÊèê‰æõAËÇ°ÂÆûÊó∂Ë°åÊÉÖÊï∞ÊçÆ&lt;/li&gt; 
 &lt;li&gt;ü§ñ &lt;strong&gt;Êô∫ËÉΩ‰ΩìÈÄâÊã©&lt;/strong&gt;: ÂèØÈÄâÊã©‰∏çÂêåÁöÑÂàÜÊûêÂ∏àÁªÑÂêà&lt;/li&gt; 
 &lt;li&gt;üì§ &lt;strong&gt;Êä•ÂëäÂØºÂá∫&lt;/strong&gt;: ‰∏ÄÈîÆÂØºÂá∫Markdown/Word/PDFÊ†ºÂºè‰∏ì‰∏öÂàÜÊûêÊä•Âëä&lt;/li&gt; 
 &lt;li&gt;üéØ &lt;strong&gt;5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶&lt;/strong&gt;: ‰ªéÂø´ÈÄüÂàÜÊûê(2-4ÂàÜÈíü)Âà∞ÂÖ®Èù¢ÂàÜÊûê(15-25ÂàÜÈíü)&lt;/li&gt; 
 &lt;li&gt;üìä &lt;strong&gt;Êô∫ËÉΩÂàÜÊûêÂ∏àÈÄâÊã©&lt;/strong&gt;: Â∏ÇÂú∫ÊäÄÊúØ„ÄÅÂü∫Êú¨Èù¢„ÄÅÊñ∞Èóª„ÄÅÁ§æ‰∫§Â™í‰ΩìÂàÜÊûêÂ∏à&lt;/li&gt; 
 &lt;li&gt;üîÑ &lt;strong&gt;ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫&lt;/strong&gt;: ÂèØËßÜÂåñÂàÜÊûêËøáÁ®ãÔºåÈÅøÂÖçÁ≠âÂæÖÁÑ¶Ëôë&lt;/li&gt; 
 &lt;li&gt;üìà &lt;strong&gt;ÁªìÊûÑÂåñÁªìÊûú&lt;/strong&gt;: ÊäïËµÑÂª∫ËÆÆ„ÄÅÁõÆÊ†á‰ª∑‰Ωç„ÄÅÁΩÆ‰ø°Â∫¶„ÄÅÈ£éÈô©ËØÑ‰º∞&lt;/li&gt; 
 &lt;li&gt;üá®üá≥ &lt;strong&gt;ÂÆåÂÖ®‰∏≠ÊñáÂåñ&lt;/strong&gt;: ÁïåÈù¢ÂíåÂàÜÊûêÁªìÊûúÂÖ®‰∏≠ÊñáÊòæÁ§∫&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Á†îÁ©∂Ê∑±Â∫¶Á∫ßÂà´ËØ¥Êòé&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;1Á∫ß - Âø´ÈÄüÂàÜÊûê&lt;/strong&gt; (2-4ÂàÜÈíü): Êó•Â∏∏ÁõëÊéßÔºåÂü∫Á°ÄÂÜ≥Á≠ñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2Á∫ß - Âü∫Á°ÄÂàÜÊûê&lt;/strong&gt; (4-6ÂàÜÈíü): Â∏∏ËßÑÊäïËµÑÔºåÂπ≥Ë°°ÈÄüÂ∫¶&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;3Á∫ß - Ê†áÂáÜÂàÜÊûê&lt;/strong&gt; (6-10ÂàÜÈíü): ÈáçË¶ÅÂÜ≥Á≠ñÔºåÊé®ËçêÈªòËÆ§&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;4Á∫ß - Ê∑±Â∫¶ÂàÜÊûê&lt;/strong&gt; (10-15ÂàÜÈíü): ÈáçÂ§ßÊäïËµÑÔºåËØ¶ÁªÜÁ†îÁ©∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;5Á∫ß - ÂÖ®Èù¢ÂàÜÊûê&lt;/strong&gt; (15-25ÂàÜÈíü): ÊúÄÈáçË¶ÅÂÜ≥Á≠ñÔºåÊúÄÂÖ®Èù¢ÂàÜÊûê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;üíª ‰ª£Á†ÅË∞ÉÁî®ÔºàÈÄÇÂêàÂºÄÂèëËÄÖÔºâ&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from tradingagents.graph.trading_graph import TradingAgentsGraph
from tradingagents.default_config import DEFAULT_CONFIG

# ÈÖçÁΩÆÈòøÈáåÁôæÁÇº
config = DEFAULT_CONFIG.copy()
config["llm_provider"] = "dashscope"
config["deep_think_llm"] = "qwen-plus"      # Ê∑±Â∫¶ÂàÜÊûê
config["quick_think_llm"] = "qwen-turbo"    # Âø´ÈÄü‰ªªÂä°

# ÂàõÂª∫‰∫§ÊòìÊô∫ËÉΩ‰Ωì
ta = TradingAgentsGraph(debug=True, config=config)

# ÂàÜÊûêËÇ°Á•® (‰ª•ËãπÊûúÂÖ¨Âè∏‰∏∫‰æã)
state, decision = ta.propagate("AAPL", "2024-01-15")

# ËæìÂá∫ÂàÜÊûêÁªìÊûú
print(f"Êé®ËçêÂä®‰Ωú: {decision['action']}")
print(f"ÁΩÆ‰ø°Â∫¶: {decision['confidence']:.1%}")
print(f"È£éÈô©ËØÑÂàÜ: {decision['risk_score']:.1%}")
print(f"Êé®ÁêÜËøáÁ®ã: {decision['reasoning']}")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Âø´ÈÄüÂêØÂä®ËÑöÊú¨&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÈòøÈáåÁôæÁÇºÊºîÁ§∫ÔºàÊé®Ëçê‰∏≠ÊñáÁî®Êà∑Ôºâ
python examples/dashscope/demo_dashscope_chinese.py

# ÈòøÈáåÁôæÁÇºÂÆåÊï¥ÊºîÁ§∫
python examples/dashscope/demo_dashscope.py

# ÈòøÈáåÁôæÁÇºÁÆÄÂåñÊµãËØï
python examples/dashscope/demo_dashscope_simple.py

# OpenAIÊºîÁ§∫ÔºàÈúÄË¶ÅÂõΩÂ§ñAPIÔºâ
python examples/openai/demo_openai.py

# ÈõÜÊàêÊµãËØï
python tests/integration/test_dashscope_integration.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;üìÅ Êï∞ÊçÆÁõÆÂΩïÈÖçÁΩÆ&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;Êñ∞ÂäüËÉΩ&lt;/strong&gt;: ÁÅµÊ¥ªÈÖçÁΩÆÊï∞ÊçÆÂ≠òÂÇ®Ë∑ØÂæÑÔºåÊîØÊåÅÂ§öÁßçÈÖçÁΩÆÊñπÂºèÔºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êü•ÁúãÂΩìÂâçÊï∞ÊçÆÁõÆÂΩïÈÖçÁΩÆ
python -m cli.main data-config --show

# ËÆæÁΩÆËá™ÂÆö‰πâÊï∞ÊçÆÁõÆÂΩï
python -m cli.main data-config --set /path/to/your/data

# ÈáçÁΩÆ‰∏∫ÈªòËÆ§ÈÖçÁΩÆ
python -m cli.main data-config --reset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÁéØÂ¢ÉÂèòÈáèÈÖçÁΩÆ&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Windows
set TRADING_AGENTS_DATA_DIR=C:\MyTradingData

# Linux/macOS
export TRADING_AGENTS_DATA_DIR=/home/user/trading_data
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Á®ãÂ∫èÂåñÈÖçÁΩÆ&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from tradingagents.config_manager import ConfigManager

# ËÆæÁΩÆÊï∞ÊçÆÁõÆÂΩï
config_manager = ConfigManager()
config_manager.set_data_directory("/path/to/data")

# Ëé∑ÂèñÈÖçÁΩÆ
data_dir = config_manager.get_data_directory()
print(f"Êï∞ÊçÆÁõÆÂΩï: {data_dir}")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÈÖçÁΩÆ‰ºòÂÖàÁ∫ß&lt;/strong&gt;: Á®ãÂ∫èËÆæÁΩÆ &amp;gt; ÁéØÂ¢ÉÂèòÈáè &amp;gt; ÈÖçÁΩÆÊñá‰ª∂ &amp;gt; ÈªòËÆ§ÂÄº&lt;/p&gt; 
&lt;p&gt;ËØ¶ÁªÜËØ¥ÊòéËØ∑ÂèÇËÄÉ: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/data-directory-configuration.md"&gt;üìÅ Êï∞ÊçÆÁõÆÂΩïÈÖçÁΩÆÊåáÂçó&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;‰∫§‰∫íÂºèÂàÜÊûê&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÂêØÂä®‰∫§‰∫íÂºèÂëΩ‰ª§Ë°åÁïåÈù¢
python -m cli.main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üéØ &lt;strong&gt;Âø´ÈÄüÂØºËà™&lt;/strong&gt; - ÊâæÂà∞ÊÇ®ÈúÄË¶ÅÁöÑÂÜÖÂÆπ&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;üéØ&lt;strong&gt;ÊàëÊÉ≥Ë¶Å...&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;üìñ&lt;strong&gt;Êé®ËçêÊñáÊ°£&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;‚è±Ô∏è&lt;strong&gt;ÈòÖËØªÊó∂Èó¥&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Âø´ÈÄü‰∏äÊâã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;10ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‰∫ÜËß£Êû∂ÊûÑ&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;15ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Áúã‰ª£Á†ÅÁ§∫‰æã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;20ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ëß£ÂÜ≥ÈóÆÈ¢ò&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;5ÂàÜÈíü&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ê∑±Â∫¶Â≠¶‰π†&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/#-%E8%AF%A6%E7%BB%86%E6%96%87%E6%A1%A3%E7%9B%AE%E5%BD%95"&gt;üìÅ ÂÆåÊï¥ÊñáÊ°£ÁõÆÂΩï&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;2Â∞èÊó∂+&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;üí° &lt;strong&gt;ÊèêÁ§∫&lt;/strong&gt;: Êàë‰ª¨ÁöÑ &lt;code&gt;docs/&lt;/code&gt; ÁõÆÂΩïÂåÖÂê´‰∫Ü &lt;strong&gt;50,000+Â≠ó&lt;/strong&gt; ÁöÑËØ¶ÁªÜ‰∏≠ÊñáÊñáÊ°£ÔºåËøôÊòØ‰∏éÂéüÁâàÊúÄÂ§ßÁöÑÂå∫Âà´ÔºÅ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üìö ÂÆåÊï¥ÊñáÊ°£‰ΩìÁ≥ª - Ê†∏ÂøÉ‰∫ÆÁÇπ&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;üåü ËøôÊòØÊú¨È°πÁõÆ‰∏éÂéüÁâàÊúÄÂ§ßÁöÑÂå∫Âà´ÔºÅ&lt;/strong&gt; Êàë‰ª¨ÊûÑÂª∫‰∫Ü‰∏öÁïåÊúÄÂÆåÊï¥ÁöÑ‰∏≠ÊñáÈáëËûçAIÊ°ÜÊû∂ÊñáÊ°£‰ΩìÁ≥ªÔºåÂåÖÂê´Ë∂ÖËøá &lt;strong&gt;50,000Â≠ó&lt;/strong&gt; ÁöÑËØ¶ÁªÜÊäÄÊúØÊñáÊ°£Ôºå&lt;strong&gt;20+&lt;/strong&gt; ‰∏™‰∏ì‰∏öÊñáÊ°£Êñá‰ª∂Ôºå&lt;strong&gt;100+&lt;/strong&gt; ‰∏™‰ª£Á†ÅÁ§∫‰æã„ÄÇ&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;üéØ ‰∏∫‰ªÄ‰πàÈÄâÊã©Êàë‰ª¨ÁöÑÊñáÊ°£Ôºü&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;ÂØπÊØîÁª¥Â∫¶&lt;/th&gt; 
   &lt;th&gt;ÂéüÁâà TradingAgents&lt;/th&gt; 
   &lt;th&gt;üöÄ&lt;strong&gt;‰∏≠ÊñáÂ¢ûÂº∫Áâà&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ÊñáÊ°£ËØ≠Ë®Ä&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ëã±ÊñáÂü∫Á°ÄËØ¥Êòé&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;ÂÆåÊï¥‰∏≠Êñá‰ΩìÁ≥ª&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ÊñáÊ°£Ê∑±Â∫¶&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;ÁÆÄÂçï‰ªãÁªç&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Ê∑±Â∫¶ÊäÄÊúØÂâñÊûê&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Êû∂ÊûÑËØ¥Êòé&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Ê¶ÇÂøµÊÄßÊèèËø∞&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;ËØ¶ÁªÜËÆæËÆ°ÊñáÊ°£ + Êû∂ÊûÑÂõæ&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‰ΩøÁî®ÊåáÂçó&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Âü∫Á°ÄÁ§∫‰æã&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;‰ªéÂÖ•Èó®Âà∞‰∏ìÂÆ∂ÁöÑÂÆåÊï¥Ë∑ØÂæÑ&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;ÊïÖÈöúÊéíÈô§&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Êó†&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;ËØ¶ÁªÜFAQ + Ëß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;‰ª£Á†ÅÁ§∫‰æã&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Â∞ëÈáèÁ§∫‰æã&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;100+ ÂÆûÁî®Á§∫‰æã&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;üìñ ÊñáÊ°£ÂØºËà™ - ÊåâÂ≠¶‰π†Ë∑ØÂæÑÁªÑÁªá&lt;/h3&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;Êñ∞ÊâãÂÖ•Èó®Ë∑ØÂæÑ&lt;/strong&gt; (Êé®Ëçê‰ªéËøôÈáåÂºÄÂßã)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;üìã È°πÁõÆÊ¶ÇËø∞&lt;/a&gt; - &lt;strong&gt;‰∫ÜËß£È°πÁõÆËÉåÊôØÂíåÊ†∏ÂøÉ‰ª∑ÂÄº&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/installation.md"&gt;‚öôÔ∏è ËØ¶ÁªÜÂÆâË£Ö&lt;/a&gt; - &lt;strong&gt;ÂêÑÂπ≥Âè∞ËØ¶ÁªÜÂÆâË£ÖÊåáÂçó&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/a&gt; - &lt;strong&gt;10ÂàÜÈíü‰∏äÊâãÊåáÂçó&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt; - &lt;strong&gt;8‰∏™ÂÆûÁî®ÁöÑÂÖ•Èó®Á§∫‰æã&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üèóÔ∏è &lt;strong&gt;Êû∂ÊûÑÁêÜËß£Ë∑ØÂæÑ&lt;/strong&gt; (Ê∑±ÂÖ•‰∫ÜËß£Á≥ªÁªüËÆæËÆ°)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt; - &lt;strong&gt;ÂÆåÊï¥ÁöÑÁ≥ªÁªüÊû∂ÊûÑËÆæËÆ°&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊû∂ÊûÑ&lt;/a&gt; - &lt;strong&gt;Â§öÊô∫ËÉΩ‰ΩìÂçè‰ΩúÊú∫Âà∂&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;üìä Êï∞ÊçÆÊµÅÊû∂ÊûÑ&lt;/a&gt; - &lt;strong&gt;Êï∞ÊçÆÂ§ÑÁêÜÂÖ®ÊµÅÁ®ã&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/graph-structure.md"&gt;üîÑ ÂõæÁªìÊûÑËÆæËÆ°&lt;/a&gt; - &lt;strong&gt;LangGraphÂ∑•‰ΩúÊµÅÁ®ã&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;ü§ñ &lt;strong&gt;Êô∫ËÉΩ‰ΩìÊ∑±Â∫¶Ëß£Êûê&lt;/strong&gt; (‰∫ÜËß£ÊØè‰∏™Êô∫ËÉΩ‰ΩìÁöÑËÆæËÆ°)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/analysts.md"&gt;üìà ÂàÜÊûêÂ∏àÂõ¢Èòü&lt;/a&gt; - &lt;strong&gt;ÂõõÁ±ª‰∏ì‰∏öÂàÜÊûêÂ∏àËØ¶Ëß£&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;üî¨ Á†îÁ©∂ÂëòÂõ¢Èòü&lt;/a&gt; - &lt;strong&gt;ÁúãÊ∂®/ÁúãË∑åËæ©ËÆ∫Êú∫Âà∂&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/trader.md"&gt;üíº ‰∫§ÊòìÂëòÊô∫ËÉΩ‰Ωì&lt;/a&gt; - &lt;strong&gt;‰∫§ÊòìÂÜ≥Á≠ñÂà∂ÂÆöÊµÅÁ®ã&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/risk-management.md"&gt;üõ°Ô∏è È£éÈô©ÁÆ°ÁêÜ&lt;/a&gt; - &lt;strong&gt;Â§öÂ±ÇÊ¨°È£éÈô©ËØÑ‰º∞&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/managers.md"&gt;üëî ÁÆ°ÁêÜÂ±ÇÊô∫ËÉΩ‰Ωì&lt;/a&gt; - &lt;strong&gt;ÂçèË∞ÉÂíåÂÜ≥Á≠ñÁÆ°ÁêÜ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üìä &lt;strong&gt;Êï∞ÊçÆÂ§ÑÁêÜ‰∏ìÈ¢ò&lt;/strong&gt; (ÊéåÊè°Êï∞ÊçÆÂ§ÑÁêÜÊäÄÊúØ)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-sources.md"&gt;üîå Êï∞ÊçÆÊ∫êÈõÜÊàê&lt;/a&gt; - &lt;strong&gt;Â§öÊï∞ÊçÆÊ∫êAPIÈõÜÊàê&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-processing.md"&gt;‚öôÔ∏è Êï∞ÊçÆÂ§ÑÁêÜÊµÅÁ®ã&lt;/a&gt; - &lt;strong&gt;Êï∞ÊçÆÊ∏ÖÊ¥óÂíåËΩ¨Êç¢&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;üíæ ÁºìÂ≠òÁ≠ñÁï•&lt;/a&gt; - &lt;strong&gt;Â§öÂ±ÇÁºìÂ≠ò‰ºòÂåñÊÄßËÉΩ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;‚öôÔ∏è &lt;strong&gt;ÈÖçÁΩÆÂíå‰ºòÂåñ&lt;/strong&gt; (ÊÄßËÉΩË∞É‰ºòÂíåÂÆöÂà∂)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/config-guide.md"&gt;üìù ÈÖçÁΩÆÊåáÂçó&lt;/a&gt; - &lt;strong&gt;ËØ¶ÁªÜÈÖçÁΩÆÈÄâÈ°πËØ¥Êòé&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;üß† LLMÈÖçÁΩÆ&lt;/a&gt; - &lt;strong&gt;Â§ßËØ≠Ë®ÄÊ®°Âûã‰ºòÂåñ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üí° &lt;strong&gt;È´òÁ∫ßÂ∫îÁî®&lt;/strong&gt; (Êâ©Â±ïÂºÄÂèëÂíåÂÆûÊàò)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt; - &lt;strong&gt;8‰∏™ÂÆûÁî®Âü∫Á°ÄÁ§∫‰æã&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/advanced-examples.md"&gt;üöÄ È´òÁ∫ßÁ§∫‰æã&lt;/a&gt; - &lt;strong&gt;Â§çÊùÇÂú∫ÊôØÂíåÊâ©Â±ïÂºÄÂèë&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;‚ùì &lt;strong&gt;ÈóÆÈ¢òËß£ÂÜ≥&lt;/strong&gt; (ÈÅáÂà∞ÈóÆÈ¢òÊó∂Êü•Áúã)&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt; - &lt;strong&gt;ËØ¶ÁªÜFAQÂíåËß£ÂÜ≥ÊñπÊ°à&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üìä ÊñáÊ°£ÁªüËÆ°Êï∞ÊçÆ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìÑ &lt;strong&gt;ÊñáÊ°£Êñá‰ª∂Êï∞&lt;/strong&gt;: 20+ ‰∏™‰∏ì‰∏öÊñáÊ°£&lt;/li&gt; 
 &lt;li&gt;üìù &lt;strong&gt;ÊÄªÂ≠óÊï∞&lt;/strong&gt;: 50,000+ Â≠óËØ¶ÁªÜÂÜÖÂÆπ&lt;/li&gt; 
 &lt;li&gt;üíª &lt;strong&gt;‰ª£Á†ÅÁ§∫‰æã&lt;/strong&gt;: 100+ ‰∏™ÂÆûÁî®Á§∫‰æã&lt;/li&gt; 
 &lt;li&gt;üìà &lt;strong&gt;Êû∂ÊûÑÂõæË°®&lt;/strong&gt;: 10+ ‰∏™‰∏ì‰∏öÂõæË°®&lt;/li&gt; 
 &lt;li&gt;üéØ &lt;strong&gt;Ë¶ÜÁõñËåÉÂõ¥&lt;/strong&gt;: ‰ªéÂÖ•Èó®Âà∞‰∏ìÂÆ∂ÁöÑÂÆåÊï¥Ë∑ØÂæÑ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üé® ÊñáÊ°£ÁâπËâ≤&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üá®üá≥ ÂÆåÂÖ®‰∏≠ÊñáÂåñ&lt;/strong&gt;: ‰∏ì‰∏∫‰∏≠ÊñáÁî®Êà∑‰ºòÂåñÁöÑË°®ËææÊñπÂºè&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä ÂõæÊñáÂπ∂ËåÇ&lt;/strong&gt;: ‰∏∞ÂØåÁöÑÊû∂ÊûÑÂõæÂíåÊµÅÁ®ãÂõæ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíª ‰ª£Á†Å‰∏∞ÂØå&lt;/strong&gt;: ÊØè‰∏™Ê¶ÇÂøµÈÉΩÊúâÂØπÂ∫îÁöÑ‰ª£Á†ÅÁ§∫‰æã&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîç Ê∑±Â∫¶ÂâñÊûê&lt;/strong&gt;: ‰∏ç‰ªÖÂëäËØâ‰Ω†ÊÄé‰πàÂÅöÔºåËøòÂëäËØâ‰Ω†‰∏∫‰ªÄ‰πàËøôÊ†∑ÂÅö&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ†Ô∏è ÂÆûÁî®ÂØºÂêë&lt;/strong&gt;: ÊâÄÊúâÊñáÊ°£ÈÉΩÈù¢ÂêëÂÆûÈôÖÂ∫îÁî®Âú∫ÊôØ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üìö ËØ¶ÁªÜÊñáÊ°£ÁõÆÂΩï&lt;/h2&gt; 
&lt;h3&gt;üìÅ &lt;strong&gt;docs/ ÁõÆÂΩïÁªìÊûÑ&lt;/strong&gt; - ÂÆåÊï¥ÁöÑÁü•ËØÜ‰ΩìÁ≥ª&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;docs/
‚îú‚îÄ‚îÄ üìñ overview/              # È°πÁõÆÊ¶ÇËßà - Êñ∞ÊâãÂøÖËØª
‚îÇ   ‚îú‚îÄ‚îÄ project-overview.md   # üìã È°πÁõÆËØ¶ÁªÜ‰ªãÁªç
‚îÇ   ‚îú‚îÄ‚îÄ quick-start.md        # üöÄ 10ÂàÜÈíüÂø´ÈÄü‰∏äÊâã
‚îÇ   ‚îî‚îÄ‚îÄ installation.md       # ‚öôÔ∏è ËØ¶ÁªÜÂÆâË£ÖÊåáÂçó
‚îÇ
‚îú‚îÄ‚îÄ üèóÔ∏è architecture/          # Á≥ªÁªüÊû∂ÊûÑ - Ê∑±Â∫¶ÁêÜËß£
‚îÇ   ‚îú‚îÄ‚îÄ system-architecture.md    # üèõÔ∏è Êï¥‰ΩìÊû∂ÊûÑËÆæËÆ°
‚îÇ   ‚îú‚îÄ‚îÄ agent-architecture.md     # ü§ñ Êô∫ËÉΩ‰ΩìÂçè‰ΩúÊú∫Âà∂
‚îÇ   ‚îú‚îÄ‚îÄ data-flow-architecture.md # üìä Êï∞ÊçÆÊµÅÂ§ÑÁêÜÊû∂ÊûÑ
‚îÇ   ‚îî‚îÄ‚îÄ graph-structure.md        # üîÑ LangGraphÂ∑•‰ΩúÊµÅ
‚îÇ
‚îú‚îÄ‚îÄ ü§ñ agents/               # Êô∫ËÉΩ‰ΩìËØ¶Ëß£ - Ê†∏ÂøÉÁªÑ‰ª∂
‚îÇ   ‚îú‚îÄ‚îÄ analysts.md          # üìà ÂõõÁ±ª‰∏ì‰∏öÂàÜÊûêÂ∏à
‚îÇ   ‚îú‚îÄ‚îÄ researchers.md       # üî¨ ÁúãÊ∂®/ÁúãË∑åËæ©ËÆ∫Êú∫Âà∂
‚îÇ   ‚îú‚îÄ‚îÄ trader.md           # üíº ‰∫§ÊòìÂÜ≥Á≠ñÂà∂ÂÆö
‚îÇ   ‚îú‚îÄ‚îÄ risk-management.md  # üõ°Ô∏è Â§öÂ±ÇÈ£éÈô©ËØÑ‰º∞
‚îÇ   ‚îî‚îÄ‚îÄ managers.md         # üëî ÁÆ°ÁêÜÂ±ÇÂçèË∞É
‚îÇ
‚îú‚îÄ‚îÄ üìä data/                 # Êï∞ÊçÆÂ§ÑÁêÜ - ÊäÄÊúØÊ†∏ÂøÉ
‚îÇ   ‚îú‚îÄ‚îÄ data-sources.md      # üîå Â§öÊï∞ÊçÆÊ∫êÈõÜÊàê
‚îÇ   ‚îú‚îÄ‚îÄ data-processing.md   # ‚öôÔ∏è Êï∞ÊçÆÂ§ÑÁêÜÊµÅÁ®ã
‚îÇ   ‚îî‚îÄ‚îÄ caching.md          # üíæ ÁºìÂ≠ò‰ºòÂåñÁ≠ñÁï•
‚îÇ
‚îú‚îÄ‚îÄ ‚öôÔ∏è configuration/        # ÈÖçÁΩÆ‰ºòÂåñ - ÊÄßËÉΩË∞É‰ºò
‚îÇ   ‚îú‚îÄ‚îÄ config-guide.md      # üìù ËØ¶ÁªÜÈÖçÁΩÆËØ¥Êòé
‚îÇ   ‚îî‚îÄ‚îÄ llm-config.md       # üß† LLMÊ®°Âûã‰ºòÂåñ
‚îÇ
‚îú‚îÄ‚îÄ üí° examples/             # Á§∫‰æãÊïôÁ®ã - ÂÆûÊàòÂ∫îÁî®
‚îÇ   ‚îú‚îÄ‚îÄ basic-examples.md    # üìö 8‰∏™Âü∫Á°ÄÁ§∫‰æã
‚îÇ   ‚îî‚îÄ‚îÄ advanced-examples.md # üöÄ È´òÁ∫ßÂºÄÂèëÁ§∫‰æã
‚îÇ
‚îî‚îÄ‚îÄ ‚ùì faq/                  # ÈóÆÈ¢òËß£ÂÜ≥ - ÁñëÈöæËß£Á≠î
    ‚îî‚îÄ‚îÄ faq.md              # üÜò Â∏∏ËßÅÈóÆÈ¢òFAQ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;üéØ &lt;strong&gt;ÈáçÁÇπÊé®ËçêÊñáÊ°£&lt;/strong&gt; (ÂøÖËØªÁ≤æÈÄâ)&lt;/h3&gt; 
&lt;h4&gt;üî• &lt;strong&gt;ÊúÄÂèóÊ¨¢ËøéÁöÑÊñáÊ°£&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;üìã È°πÁõÆÊ¶ÇËø∞&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;‰∫ÜËß£È°πÁõÆÁöÑÊ†∏ÂøÉ‰ª∑ÂÄºÂíåÊäÄÊúØÁâπËâ≤Ôºå5ÂàÜÈíüËØªÊáÇÊï¥‰∏™Ê°ÜÊû∂&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Ê∑±Â∫¶Ëß£ÊûêÂ§öÊô∫ËÉΩ‰ΩìÂçè‰ΩúÊú∫Âà∂ÔºåÂåÖÂê´ËØ¶ÁªÜÊû∂ÊûÑÂõæ&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;8‰∏™ÂÆûÁî®Á§∫‰æãÔºå‰ªéËÇ°Á•®ÂàÜÊûêÂà∞ÊäïËµÑÁªÑÂêà‰ºòÂåñ&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üöÄ &lt;strong&gt;ÊäÄÊúØÊ∑±Â∫¶ÊñáÊ°£&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊû∂ÊûÑ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Â§öÊô∫ËÉΩ‰ΩìËÆæËÆ°Ê®°ÂºèÂíåÂçè‰ΩúÊú∫Âà∂ËØ¶Ëß£&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;üìä Êï∞ÊçÆÊµÅÊû∂ÊûÑ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Êï∞ÊçÆËé∑Âèñ„ÄÅÂ§ÑÁêÜ„ÄÅÁºìÂ≠òÁöÑÂÆåÊï¥ÊµÅÁ®ã&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;üî¨ Á†îÁ©∂ÂëòÂõ¢Èòü&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;ÁúãÊ∂®/ÁúãË∑åÁ†îÁ©∂ÂëòËæ©ËÆ∫Êú∫Âà∂ÁöÑÂàõÊñ∞ËÆæËÆ°&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;üíº &lt;strong&gt;ÂÆûÁî®Â∑•ÂÖ∑ÊñáÊ°£&lt;/strong&gt;&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/web-interface-guide.md"&gt;üåê WebÁïåÈù¢ÊåáÂçó&lt;/a&gt;&lt;/strong&gt; - ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;ÂÆåÊï¥ÁöÑWebÁïåÈù¢‰ΩøÁî®ÊïôÁ®ãÔºåÂåÖÂê´5Á∫ßÁ†îÁ©∂Ê∑±Â∫¶ËØ¶ÁªÜËØ¥Êòé&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/usage/investment_analysis_guide.md"&gt;üí∞ ÊäïËµÑÂàÜÊûêÊåáÂçó&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;‰ªéÂü∫Á°ÄÂà∞È´òÁ∫ßÁöÑÂÆåÊï¥ÊäïËµÑÂàÜÊûêÊïôÁ®ã&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;üß† LLMÈÖçÁΩÆ&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Â§öLLMÊ®°ÂûãÈÖçÁΩÆÂíåÊàêÊú¨‰ºòÂåñÁ≠ñÁï•&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;üíæ ÁºìÂ≠òÁ≠ñÁï•&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;Â§öÂ±ÇÁºìÂ≠òËÆæËÆ°ÔºåÊòæËëóÈôç‰ΩéAPIË∞ÉÁî®ÊàêÊú¨&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;ËØ¶ÁªÜÁöÑFAQÂíåÊïÖÈöúÊéíÈô§ÊåáÂçó&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üìñ &lt;strong&gt;ÊåâÊ®°ÂùóÊµèËßàÊñáÊ°£&lt;/strong&gt;&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üìñ Ê¶ÇËßàÊñáÊ°£&lt;/strong&gt; - È°πÁõÆÂÖ•Èó®ÂøÖËØª&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/project-overview.md"&gt;üìã È°πÁõÆÊ¶ÇËø∞&lt;/a&gt; - ËØ¶ÁªÜÁöÑÈ°πÁõÆËÉåÊôØÂíåÁâπÊÄß‰ªãÁªç&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/quick-start.md"&gt;üöÄ Âø´ÈÄüÂºÄÂßã&lt;/a&gt; - ‰ªéÂÆâË£ÖÂà∞Á¨¨‰∏ÄÊ¨°ËøêË°åÁöÑÂÆåÊï¥ÊåáÂçó&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/overview/installation.md"&gt;‚öôÔ∏è ËØ¶ÁªÜÂÆâË£Ö&lt;/a&gt; - ÂêÑÂπ≥Âè∞ËØ¶ÁªÜÂÆâË£ÖËØ¥Êòé&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üèóÔ∏è Êû∂ÊûÑÊñáÊ°£&lt;/strong&gt; - Ê∑±Â∫¶ÁêÜËß£Á≥ªÁªüËÆæËÆ°&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/system-architecture.md"&gt;üèõÔ∏è Á≥ªÁªüÊû∂ÊûÑ&lt;/a&gt; - ÂÆåÊï¥ÁöÑÁ≥ªÁªüÊû∂ÊûÑËÆæËÆ°&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/agent-architecture.md"&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊû∂ÊûÑ&lt;/a&gt; - Êô∫ËÉΩ‰ΩìËÆæËÆ°Ê®°ÂºèÂíåÂçè‰ΩúÊú∫Âà∂&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/data-flow-architecture.md"&gt;üìä Êï∞ÊçÆÊµÅÊû∂ÊûÑ&lt;/a&gt; - Êï∞ÊçÆËé∑Âèñ„ÄÅÂ§ÑÁêÜÂíåÂàÜÂèëÊµÅÁ®ã&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/architecture/graph-structure.md"&gt;üîÑ ÂõæÁªìÊûÑËÆæËÆ°&lt;/a&gt; - LangGraphÂ∑•‰ΩúÊµÅÁ®ãËÆæËÆ°&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;ü§ñ Êô∫ËÉΩ‰ΩìÊñáÊ°£&lt;/strong&gt; - Ê†∏ÂøÉÁªÑ‰ª∂ËØ¶Ëß£&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/analysts.md"&gt;üìà ÂàÜÊûêÂ∏àÂõ¢Èòü&lt;/a&gt; - ÂõõÁ±ª‰∏ì‰∏öÂàÜÊûêÂ∏àËØ¶Ëß£&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/researchers.md"&gt;üî¨ Á†îÁ©∂ÂëòÂõ¢Èòü&lt;/a&gt; - ÁúãÊ∂®/ÁúãË∑åÁ†îÁ©∂ÂëòÂíåËæ©ËÆ∫Êú∫Âà∂&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/trader.md"&gt;üíº ‰∫§ÊòìÂëòÊô∫ËÉΩ‰Ωì&lt;/a&gt; - ‰∫§ÊòìÂÜ≥Á≠ñÂà∂ÂÆöÊµÅÁ®ã&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/risk-management.md"&gt;üõ°Ô∏è È£éÈô©ÁÆ°ÁêÜ&lt;/a&gt; - Â§öÂ±ÇÊ¨°È£éÈô©ËØÑ‰º∞‰ΩìÁ≥ª&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/agents/managers.md"&gt;üëî ÁÆ°ÁêÜÂ±ÇÊô∫ËÉΩ‰Ωì&lt;/a&gt; - ÂçèË∞ÉÂíåÂÜ≥Á≠ñÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üìä Êï∞ÊçÆÂ§ÑÁêÜ&lt;/strong&gt; - ÊäÄÊúØÊ†∏ÂøÉÂÆûÁé∞&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-sources.md"&gt;üîå Êï∞ÊçÆÊ∫êÈõÜÊàê&lt;/a&gt; - ÊîØÊåÅÁöÑÊï∞ÊçÆÊ∫êÂíåAPIÈõÜÊàê&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/data-processing.md"&gt;‚öôÔ∏è Êï∞ÊçÆÂ§ÑÁêÜÊµÅÁ®ã&lt;/a&gt; - Êï∞ÊçÆÊ∏ÖÊ¥ó„ÄÅËΩ¨Êç¢ÂíåÈ™åËØÅ&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/data/caching.md"&gt;üíæ ÁºìÂ≠òÁ≠ñÁï•&lt;/a&gt; - Â§öÂ±ÇÁºìÂ≠ò‰ºòÂåñÊÄßËÉΩ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;‚öôÔ∏è ÈÖçÁΩÆ‰∏éÈÉ®ÁΩ≤&lt;/strong&gt; - ÊÄßËÉΩË∞É‰ºòÊåáÂçó&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/config-guide.md"&gt;üìù ÈÖçÁΩÆÊåáÂçó&lt;/a&gt; - ËØ¶ÁªÜÁöÑÈÖçÁΩÆÈÄâÈ°πËØ¥Êòé&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/configuration/llm-config.md"&gt;üß† LLMÈÖçÁΩÆ&lt;/a&gt; - Â§ßËØ≠Ë®ÄÊ®°ÂûãÈÖçÁΩÆ‰ºòÂåñ&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;üí° Á§∫‰æãÂíåÊïôÁ®ã&lt;/strong&gt; - ÂÆûÊàòÂ∫îÁî®ÊåáÂçó&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/basic-examples.md"&gt;üìö Âü∫Á°ÄÁ§∫‰æã&lt;/a&gt; - 8‰∏™ÂÆûÁî®ÁöÑÂü∫Á°ÄÁ§∫‰æã&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/examples/advanced-examples.md"&gt;üöÄ È´òÁ∫ßÁ§∫‰æã&lt;/a&gt; - Â§çÊùÇÂú∫ÊôØÂíåÊâ©Â±ïÂºÄÂèë&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;‚ùì Â∏ÆÂä©ÊñáÊ°£&lt;/strong&gt; - ÈóÆÈ¢òËß£ÂÜ≥ÊñπÊ°à&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/faq/faq.md"&gt;üÜò Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt; - ËØ¶ÁªÜÁöÑFAQÂíåËß£ÂÜ≥ÊñπÊ°à&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;üí∞ ÊàêÊú¨ÊéßÂà∂&lt;/h2&gt; 
&lt;h3&gt;ÂÖ∏Âûã‰ΩøÁî®ÊàêÊú¨&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ÁªèÊµéÊ®°Âºè&lt;/strong&gt;: $0.01-0.05/Ê¨°ÂàÜÊûê (‰ΩøÁî® gpt-4o-mini)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ê†áÂáÜÊ®°Âºè&lt;/strong&gt;: $0.05-0.15/Ê¨°ÂàÜÊûê (‰ΩøÁî® gpt-4o)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;È´òÁ≤æÂ∫¶Ê®°Âºè&lt;/strong&gt;: $0.10-0.30/Ê¨°ÂàÜÊûê (‰ΩøÁî® gpt-4o + Â§öËΩÆËæ©ËÆ∫)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÊàêÊú¨‰ºòÂåñÂª∫ËÆÆ&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# ‰ΩéÊàêÊú¨ÈÖçÁΩÆÁ§∫‰æã
cost_optimized_config = {
    "deep_think_llm": "gpt-4o-mini",
    "quick_think_llm": "gpt-4o-mini", 
    "max_debate_rounds": 1,
    "online_tools": False  # ‰ΩøÁî®ÁºìÂ≠òÊï∞ÊçÆ
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;ü§ù Ë¥°ÁåÆÊåáÂçó&lt;/h2&gt; 
&lt;p&gt;Êàë‰ª¨Ê¨¢ËøéÂêÑÁßçÂΩ¢ÂºèÁöÑË¥°ÁåÆÔºö&lt;/p&gt; 
&lt;h3&gt;Ë¥°ÁåÆÁ±ªÂûã&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Bug‰øÆÂ§ç&lt;/strong&gt; - ÂèëÁé∞Âπ∂‰øÆÂ§çÈóÆÈ¢ò&lt;/li&gt; 
 &lt;li&gt;‚ú® &lt;strong&gt;Êñ∞ÂäüËÉΩ&lt;/strong&gt; - Ê∑ªÂä†Êñ∞ÁöÑÂäüËÉΩÁâπÊÄß&lt;/li&gt; 
 &lt;li&gt;üìö &lt;strong&gt;ÊñáÊ°£ÊîπËøõ&lt;/strong&gt; - ÂÆåÂñÑÊñáÊ°£ÂíåÊïôÁ®ã&lt;/li&gt; 
 &lt;li&gt;üåê &lt;strong&gt;Êú¨Âú∞Âåñ&lt;/strong&gt; - ÁøªËØëÂíåÊú¨Âú∞ÂåñÂ∑•‰Ωú&lt;/li&gt; 
 &lt;li&gt;üé® &lt;strong&gt;‰ª£Á†Å‰ºòÂåñ&lt;/strong&gt; - ÊÄßËÉΩ‰ºòÂåñÂíå‰ª£Á†ÅÈáçÊûÑ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ë¥°ÁåÆÊµÅÁ®ã&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork Êú¨‰ªìÂ∫ì&lt;/li&gt; 
 &lt;li&gt;ÂàõÂª∫ÁâπÊÄßÂàÜÊîØ (&lt;code&gt;git checkout -b feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Êèê‰∫§Êõ¥Êîπ (&lt;code&gt;git commit -m 'Add some AmazingFeature'&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Êé®ÈÄÅÂà∞ÂàÜÊîØ (&lt;code&gt;git push origin feature/AmazingFeature&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;ÂàõÂª∫ Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;üìã Êü•ÁúãË¥°ÁåÆËÄÖ&lt;/h3&gt; 
&lt;p&gt;Êü•ÁúãÊâÄÊúâË¥°ÁåÆËÄÖÂíåËØ¶ÁªÜË¥°ÁåÆÂÜÖÂÆπÔºö&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/CONTRIBUTORS.md"&gt;ü§ù Ë¥°ÁåÆËÄÖÂêçÂçï&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;üìÑ ËÆ∏ÂèØËØÅ&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆÂü∫‰∫é Apache 2.0 ËÆ∏ÂèØËØÅÂºÄÊ∫ê„ÄÇËØ¶ËßÅ &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/LICENSE"&gt;LICENSE&lt;/a&gt; Êñá‰ª∂„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ËÆ∏ÂèØËØÅËØ¥Êòé&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ ÂïÜ‰∏ö‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;‚úÖ ‰øÆÊîπÂíåÂàÜÂèë&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÁßÅ‰∫∫‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;‚úÖ ‰∏ìÂà©‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;‚ùó ÈúÄË¶Å‰øùÁïôÁâàÊùÉÂ£∞Êòé&lt;/li&gt; 
 &lt;li&gt;‚ùó ÈúÄË¶ÅÂåÖÂê´ËÆ∏ÂèØËØÅÂâØÊú¨&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üôè Ëá¥Ë∞¢‰∏éÊÑüÊÅ©&lt;/h2&gt; 
&lt;h3&gt;üåü ÂêëÊ∫êÈ°πÁõÆÂºÄÂèëËÄÖËá¥Êï¨&lt;/h3&gt; 
&lt;p&gt;Êàë‰ª¨Âêë &lt;a href="https://github.com/TauricResearch"&gt;Tauric Research&lt;/a&gt; Âõ¢ÈòüË°®ËææÊúÄÊ∑±ÁöÑÊï¨ÊÑèÂíåÊÑüË∞¢Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üéØ ÊÑøÊôØÈ¢ÜÂØºËÄÖ&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨Âú®AIÈáëËûçÈ¢ÜÂüüÁöÑÂâçÁûªÊÄßÊÄùËÄÉÂíåÂàõÊñ∞ÂÆûË∑µ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üíé ÁèçË¥µÊ∫êÁ†Å&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ÂºÄÊ∫êÁöÑÊØè‰∏ÄË°å‰ª£Á†ÅÔºåÂÆÉ‰ª¨ÂáùËÅöÁùÄÊó†Êï∞ÁöÑÊô∫ÊÖßÂíåÂøÉË°Ä&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üèóÔ∏è Êû∂ÊûÑÂ§ßÂ∏à&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ËÆæËÆ°‰∫ÜÂ¶ÇÊ≠§‰ºòÈõÖ„ÄÅÂèØÊâ©Â±ïÁöÑÂ§öÊô∫ËÉΩ‰ΩìÊ°ÜÊû∂&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üí° ÊäÄÊúØÂÖàÈ©±&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨Â∞ÜÂâçÊ≤øAIÊäÄÊúØ‰∏éÈáëËûçÂÆûÂä°ÂÆåÁæéÁªìÂêà&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîÑ ÊåÅÁª≠Ë¥°ÁåÆ&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ÊåÅÁª≠ÁöÑÁª¥Êä§„ÄÅÊõ¥Êñ∞ÂíåÊîπËøõÂ∑•‰Ωú&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ü§ù Á§æÂå∫Ë¥°ÁåÆËÄÖËá¥Ë∞¢&lt;/h3&gt; 
&lt;p&gt;ÊÑüË∞¢ÊâÄÊúâ‰∏∫TradingAgents-CNÈ°πÁõÆÂÅöÂá∫Ë¥°ÁåÆÁöÑÂºÄÂèëËÄÖÂíåÁî®Êà∑ÔºÅ&lt;/p&gt; 
&lt;p&gt;ËØ¶ÁªÜÁöÑË¥°ÁåÆËÄÖÂêçÂçïÂíåË¥°ÁåÆÂÜÖÂÆπËØ∑Êü•ÁúãÔºö&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/CONTRIBUTORS.md"&gt;üìã Ë¥°ÁåÆËÄÖÂêçÂçï&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;ÂåÖÊã¨‰ΩÜ‰∏çÈôê‰∫éÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üê≥ &lt;strong&gt;DockerÂÆπÂô®Âåñ&lt;/strong&gt; - ÈÉ®ÁΩ≤ÊñπÊ°à‰ºòÂåñ&lt;/li&gt; 
 &lt;li&gt;üìÑ &lt;strong&gt;Êä•ÂëäÂØºÂá∫ÂäüËÉΩ&lt;/strong&gt; - Â§öÊ†ºÂºèËæìÂá∫ÊîØÊåÅ&lt;/li&gt; 
 &lt;li&gt;üêõ &lt;strong&gt;Bug‰øÆÂ§ç&lt;/strong&gt; - Á≥ªÁªüÁ®≥ÂÆöÊÄßÊèêÂçá&lt;/li&gt; 
 &lt;li&gt;üîß &lt;strong&gt;‰ª£Á†Å‰ºòÂåñ&lt;/strong&gt; - Áî®Êà∑‰ΩìÈ™åÊîπËøõ&lt;/li&gt; 
 &lt;li&gt;üìù &lt;strong&gt;ÊñáÊ°£ÂÆåÂñÑ&lt;/strong&gt; - ‰ΩøÁî®ÊåáÂçóÂíåÊïôÁ®ã&lt;/li&gt; 
 &lt;li&gt;üåç &lt;strong&gt;Á§æÂå∫Âª∫ËÆæ&lt;/strong&gt; - ÈóÆÈ¢òÂèçÈ¶àÂíåÊé®Âπø&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üåç ÂºÄÊ∫êË¥°ÁåÆ&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨ÈÄâÊã©Apache 2.0ÂçèËÆÆÔºåÁªô‰∫àÂºÄÂèëËÄÖÊúÄÂ§ßÁöÑËá™Áî±&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìö Áü•ËØÜÂàÜ‰∫´&lt;/strong&gt;: ÊÑüË∞¢ÊÇ®‰ª¨Êèê‰æõÁöÑËØ¶ÁªÜÊñáÊ°£ÂíåÊúÄ‰Ω≥ÂÆûË∑µÊåáÂØº&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;ÁâπÂà´ÊÑüË∞¢&lt;/strong&gt;Ôºö&lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TradingAgents&lt;/a&gt; È°πÁõÆ‰∏∫Êàë‰ª¨Êèê‰æõ‰∫ÜÂùöÂÆûÁöÑÊäÄÊúØÂü∫Á°Ä„ÄÇËôΩÁÑ∂Apache 2.0ÂçèËÆÆËµã‰∫à‰∫ÜÊàë‰ª¨‰ΩøÁî®Ê∫êÁ†ÅÁöÑÊùÉÂà©Ôºå‰ΩÜÊàë‰ª¨Ê∑±Áü•ÊØè‰∏ÄË°å‰ª£Á†ÅÁöÑÁèçË¥µ‰ª∑ÂÄºÔºåÂ∞ÜÊ∞∏ËøúÈì≠ËÆ∞Âπ∂ÊÑüË∞¢ÊÇ®‰ª¨ÁöÑÊó†ÁßÅË¥°ÁåÆ„ÄÇ&lt;/p&gt; 
&lt;h3&gt;üá®üá≥ Êé®Âπø‰ΩøÂëΩÁöÑÂàùÂøÉ&lt;/h3&gt; 
&lt;p&gt;ÂàõÂª∫Ëøô‰∏™‰∏≠ÊñáÂ¢ûÂº∫ÁâàÊú¨ÔºåÊàë‰ª¨ÊÄÄÁùÄ‰ª•‰∏ãÂàùÂøÉÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üåâ ÊäÄÊúØ‰º†Êí≠&lt;/strong&gt;: ËÆ©‰ºòÁßÄÁöÑTradingAgentsÊäÄÊúØÂú®‰∏≠ÂõΩÂæóÂà∞Êõ¥ÂπøÊ≥õÁöÑÂ∫îÁî®&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üéì ÊïôËÇ≤ÊôÆÂèä&lt;/strong&gt;: ‰∏∫‰∏≠ÂõΩÁöÑAIÈáëËûçÊïôËÇ≤Êèê‰æõÊõ¥Â•ΩÁöÑÂ∑•ÂÖ∑ÂíåËµÑÊ∫ê&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü§ù ÊñáÂåñÊ°•Ê¢Å&lt;/strong&gt;: Âú®‰∏≠Ë•øÊñπÊäÄÊúØÁ§æÂå∫‰πãÈó¥Êê≠Âª∫‰∫§ÊµÅÂêà‰ΩúÁöÑÊ°•Ê¢Å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üöÄ ÂàõÊñ∞Êé®Âä®&lt;/strong&gt;: Êé®Âä®‰∏≠ÂõΩÈáëËûçÁßëÊäÄÈ¢ÜÂüüÁöÑAIÊäÄÊúØÂàõÊñ∞ÂíåÂ∫îÁî®&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üåç ÂºÄÊ∫êÁ§æÂå∫&lt;/h3&gt; 
&lt;p&gt;ÊÑüË∞¢ÊâÄÊúâ‰∏∫Êú¨È°πÁõÆË¥°ÁåÆ‰ª£Á†Å„ÄÅÊñáÊ°£„ÄÅÂª∫ËÆÆÂíåÂèçÈ¶àÁöÑÂºÄÂèëËÄÖÂíåÁî®Êà∑„ÄÇÊ≠£ÊòØÂõ†‰∏∫Êúâ‰∫ÜÂ§ßÂÆ∂ÁöÑÊîØÊåÅÔºåÊàë‰ª¨ÊâçËÉΩÊõ¥Â•ΩÂú∞ÊúçÂä°‰∏≠ÊñáÁî®Êà∑Á§æÂå∫„ÄÇ&lt;/p&gt; 
&lt;h3&gt;ü§ù Âêà‰ΩúÂÖ±Ëµ¢&lt;/h3&gt; 
&lt;p&gt;Êàë‰ª¨ÊâøËØ∫Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Â∞äÈáçÂéüÂàõ&lt;/strong&gt;: ÂßãÁªàÂ∞äÈáçÊ∫êÈ°πÁõÆÁöÑÁü•ËØÜ‰∫ßÊùÉÂíåÂºÄÊ∫êÂçèËÆÆ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂèçÈ¶àË¥°ÁåÆ&lt;/strong&gt;: Â∞ÜÊúâ‰ª∑ÂÄºÁöÑÊîπËøõÂíåÂàõÊñ∞ÂèçÈ¶àÁªôÊ∫êÈ°πÁõÆÂíåÂºÄÊ∫êÁ§æÂå∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊåÅÁª≠ÊîπËøõ&lt;/strong&gt;: ‰∏çÊñ≠ÂÆåÂñÑ‰∏≠ÊñáÂ¢ûÂº∫ÁâàÊú¨ÔºåÊèê‰æõÊõ¥Â•ΩÁöÑÁî®Êà∑‰ΩìÈ™å&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂºÄÊîæÂêà‰Ωú&lt;/strong&gt;: Ê¨¢Ëøé‰∏éÊ∫êÈ°πÁõÆÂõ¢ÈòüÂíåÂÖ®ÁêÉÂºÄÂèëËÄÖËøõË°åÊäÄÊúØ‰∫§ÊµÅ‰∏éÂêà‰Ωú&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìà ÁâàÊú¨ÂéÜÂè≤&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.13&lt;/strong&gt; (2025-08-02): ü§ñ ÂéüÁîüOpenAIÊîØÊåÅ‰∏éGoogle AIÁîüÊÄÅÁ≥ªÁªüÂÖ®Èù¢ÈõÜÊàê ‚ú® &lt;strong&gt;ÊúÄÊñ∞ÁâàÊú¨&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.12&lt;/strong&gt; (2025-07-29): üß† Êô∫ËÉΩÊñ∞ÈóªÂàÜÊûêÊ®°Âùó‰∏éÈ°πÁõÆÁªìÊûÑ‰ºòÂåñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.11&lt;/strong&gt; (2025-07-27): ü§ñ Â§öLLMÊèê‰æõÂïÜÈõÜÊàê‰∏éÊ®°ÂûãÈÄâÊã©ÊåÅ‰πÖÂåñ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.10&lt;/strong&gt; (2025-07-18): üöÄ WebÁïåÈù¢ÂÆûÊó∂ËøõÂ∫¶ÊòæÁ§∫‰∏éÊô∫ËÉΩ‰ºöËØùÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.9&lt;/strong&gt; (2025-07-16): üéØ CLIÁî®Êà∑‰ΩìÈ™åÈáçÂ§ß‰ºòÂåñ‰∏éÁªü‰∏ÄÊó•ÂøóÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.8&lt;/strong&gt; (2025-07-15): üé® WebÁïåÈù¢ÂÖ®Èù¢‰ºòÂåñ‰∏éÁî®Êà∑‰ΩìÈ™åÊèêÂçá&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.7&lt;/strong&gt; (2025-07-13): üê≥ ÂÆπÂô®ÂåñÈÉ®ÁΩ≤‰∏é‰∏ì‰∏öÊä•ÂëäÂØºÂá∫&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.6&lt;/strong&gt; (2025-07-11): üîß ÈòøÈáåÁôæÁÇº‰øÆÂ§ç‰∏éÊï∞ÊçÆÊ∫êÂçáÁ∫ß&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.5&lt;/strong&gt; (2025-07-08): üìä Ê∑ªÂä†DeepseekÊ®°ÂûãÊîØÊåÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.4&lt;/strong&gt; (2025-07-05): üèóÔ∏è Êû∂ÊûÑ‰ºòÂåñ‰∏éÈÖçÁΩÆÁÆ°ÁêÜÈáçÊûÑ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.3&lt;/strong&gt; (2025-06-28): üá®üá≥ AËÇ°Â∏ÇÂú∫ÂÆåÊï¥ÊîØÊåÅ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.2&lt;/strong&gt; (2025-06-15): üåê WebÁïåÈù¢ÂíåÈÖçÁΩÆÁÆ°ÁêÜ&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;v0.1.1&lt;/strong&gt; (2025-06-01): üß† ÂõΩ‰∫ßLLMÈõÜÊàê&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;üìã &lt;strong&gt;ËØ¶ÁªÜÊõ¥Êñ∞Êó•Âøó&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/releases/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üìû ËÅîÁ≥ªÊñπÂºè&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/hsliuping/TradingAgents-CN/issues"&gt;Êèê‰∫§ÈóÆÈ¢òÂíåÂª∫ËÆÆ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÇÆÁÆ±&lt;/strong&gt;: &lt;a href="mailto:hsliup@163.com"&gt;hsliup@163.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;È°πÁõÆÔº±Ôº±Áæ§Ôºö187537480&lt;/li&gt; 
 &lt;li&gt;È°πÁõÆÂæÆ‰ø°ÂÖ¨‰ºóÂè∑ÔºöTradingAgents-CN&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂéüÈ°πÁõÆ&lt;/strong&gt;: &lt;a href="https://github.com/TauricResearch/TradingAgents"&gt;TauricResearch/TradingAgents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÊñáÊ°£&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;ÂÆåÊï¥ÊñáÊ°£ÁõÆÂΩï&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö†Ô∏è È£éÈô©ÊèêÁ§∫&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;ÈáçË¶ÅÂ£∞Êòé&lt;/strong&gt;: Êú¨Ê°ÜÊû∂‰ªÖÁî®‰∫éÁ†îÁ©∂ÂíåÊïôËÇ≤ÁõÆÁöÑÔºå‰∏çÊûÑÊàêÊäïËµÑÂª∫ËÆÆ„ÄÇ&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üìä ‰∫§ÊòìË°®Áé∞ÂèØËÉΩÂõ†Â§öÁßçÂõ†Á¥†ËÄåÂºÇ&lt;/li&gt; 
 &lt;li&gt;ü§ñ AIÊ®°ÂûãÁöÑÈ¢ÑÊµãÂ≠òÂú®‰∏çÁ°ÆÂÆöÊÄß&lt;/li&gt; 
 &lt;li&gt;üí∞ ÊäïËµÑÊúâÈ£éÈô©ÔºåÂÜ≥Á≠ñÈúÄË∞®ÊÖé&lt;/li&gt; 
 &lt;li&gt;üë®‚Äçüíº Âª∫ËÆÆÂí®ËØ¢‰∏ì‰∏öË¥¢Âä°È°æÈóÆ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;üåü Â¶ÇÊûúËøô‰∏™È°πÁõÆÂØπÊÇ®ÊúâÂ∏ÆÂä©ÔºåËØ∑ÁªôÊàë‰ª¨‰∏Ä‰∏™ StarÔºÅ&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/hsliuping/TradingAgents-CN"&gt;‚≠ê Star this repo&lt;/a&gt; | &lt;a href="https://github.com/hsliuping/TradingAgents-CN/fork"&gt;üç¥ Fork this repo&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/hsliuping/TradingAgents-CN/main/docs/"&gt;üìñ Read the docs&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>BeehiveInnovations/zen-mcp-server</title>
      <link>https://github.com/BeehiveInnovations/zen-mcp-server</link>
      <description>&lt;p&gt;The power of Claude Code / GeminiCLI / CodexCLI + [Gemini / OpenAI / OpenRouter / Azure / Grok / Ollama / Custom Model / All Of The Above] working as one.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Zen MCP: Many Workflows. One Context.&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0d26061e-5f21-4ab1-b7d0-f883ddc2c3da"&gt;Zen in action&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#-watch-tools-in-action"&gt;Watch more examples&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;h3&gt;Your CLI + Multiple Models = Your AI Dev Team&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;Use the ü§ñ CLI you love:&lt;/strong&gt;&lt;br /&gt; &lt;a href="https://www.anthropic.com/claude-code"&gt;Claude Code&lt;/a&gt; ¬∑ &lt;a href="https://github.com/google-gemini/gemini-cli"&gt;Gemini CLI&lt;/a&gt; ¬∑ &lt;a href="https://github.com/openai/codex"&gt;Codex CLI&lt;/a&gt; ¬∑ &lt;a href="https://qwenlm.github.io/qwen-code-docs/"&gt;Qwen Code CLI&lt;/a&gt; ¬∑ &lt;a href="https://cursor.com"&gt;Cursor&lt;/a&gt; ¬∑ &lt;em&gt;and more&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;With multiple models within a single prompt:&lt;/strong&gt;&lt;br /&gt; Gemini ¬∑ OpenAI ¬∑ Anthropic ¬∑ Grok ¬∑ Azure ¬∑ Ollama ¬∑ OpenRouter ¬∑ DIAL ¬∑ On-Device Model&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üÜï Now with CLI-to-CLI Bridge&lt;/h2&gt; 
&lt;p&gt;The new &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/clink.md"&gt;&lt;code&gt;clink&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; (CLI + Link) tool connects external AI CLIs directly into your workflow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Connect external CLIs&lt;/strong&gt; like &lt;a href="https://github.com/google-gemini/gemini-cli"&gt;Gemini CLI&lt;/a&gt;, &lt;a href="https://github.com/openai/codex"&gt;Codex CLI&lt;/a&gt;, and &lt;a href="https://www.anthropic.com/claude-code"&gt;Claude Code&lt;/a&gt; directly into your workflow&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CLI Subagents&lt;/strong&gt; - Launch isolated CLI instances from &lt;em&gt;within&lt;/em&gt; your current CLI! Claude Code can spawn Codex subagents, Codex can spawn Gemini CLI subagents, etc. Offload heavy tasks (code reviews, bug hunting) to fresh contexts while your main session's context window remains unpolluted. Each subagent returns only final results.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context Isolation&lt;/strong&gt; - Run separate investigations without polluting your primary workspace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role Specialization&lt;/strong&gt; - Spawn &lt;code&gt;planner&lt;/code&gt;, &lt;code&gt;codereviewer&lt;/code&gt;, or custom role agents with specialized system prompts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full CLI Capabilities&lt;/strong&gt; - Web search, file inspection, MCP tool access, latest documentation lookups&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Seamless Continuity&lt;/strong&gt; - Sub-CLIs participate as first-class members with full conversation context between tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Codex spawns Codex subagent for isolated code review in fresh context
clink with codex codereviewer to audit auth module for security issues
# Subagent reviews in isolation, returns final report without cluttering your context as codex reads each file and walks the directory structure

# Consensus from different AI models ‚Üí Implementation handoff with full context preservation between tools
Use consensus with gpt-5 and gemini-pro to decide: dark mode or offline support next
Continue with clink gemini - implement the recommended feature
# Gemini receives full debate context and starts coding immediately
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/clink.md"&gt;Learn more about clink&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Why Zen MCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Why rely on one AI model when you can orchestrate them all?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A Model Context Protocol server that supercharges tools like &lt;a href="https://www.anthropic.com/claude-code"&gt;Claude Code&lt;/a&gt;, &lt;a href="https://developers.openai.com/codex/cli"&gt;Codex CLI&lt;/a&gt;, and IDE clients such as &lt;a href="https://cursor.com"&gt;Cursor&lt;/a&gt; or the &lt;a href="https://marketplace.visualstudio.com/items?itemName=Anthropic.claude-vscode"&gt;Claude Dev VS Code extension&lt;/a&gt;. &lt;strong&gt;Zen MCP connects your favorite AI tool to multiple AI models&lt;/strong&gt; for enhanced code analysis, problem-solving, and collaborative development.&lt;/p&gt; 
&lt;h3&gt;True AI Collaboration with Conversation Continuity&lt;/h3&gt; 
&lt;p&gt;Zen supports &lt;strong&gt;conversation threading&lt;/strong&gt; so your CLI can &lt;strong&gt;discuss ideas with multiple AI models, exchange reasoning, get second opinions, and even run collaborative debates between models&lt;/strong&gt; to help you reach deeper insights and better solutions.&lt;/p&gt; 
&lt;p&gt;Your CLI always stays in control but gets perspectives from the best AI for each subtask. Context carries forward seamlessly across tools and models, enabling complex workflows like: code reviews with multiple models ‚Üí automated planning ‚Üí implementation ‚Üí pre-commit validation.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;You're in control.&lt;/strong&gt; Your CLI of choice orchestrates the AI team, but you decide the workflow. Craft powerful prompts that bring in Gemini Pro, GPT 5, Flash, or local offline models exactly when needed.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Reasons to Use Zen MCP&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;A typical workflow with Claude Code as an example:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-Model Orchestration&lt;/strong&gt; - Claude coordinates with Gemini Pro, O3, GPT-5, and 50+ other models to get the best analysis for each task&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Context Revival Magic&lt;/strong&gt; - Even after Claude's context resets, continue conversations seamlessly by having other models "remind" Claude of the discussion&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Guided Workflows&lt;/strong&gt; - Enforces systematic investigation phases that prevent rushed analysis and ensure thorough code examination&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Extended Context Windows&lt;/strong&gt; - Break Claude's limits by delegating to Gemini (1M tokens) or O3 (200K tokens) for massive codebases&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;True Conversation Continuity&lt;/strong&gt; - Full context flows across tools and models - Gemini remembers what O3 said 10 steps ago&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Model-Specific Strengths&lt;/strong&gt; - Extended thinking with Gemini Pro, blazing speed with Flash, strong reasoning with O3, privacy with local Ollama&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Professional Code Reviews&lt;/strong&gt; - Multi-pass analysis with severity levels, actionable feedback, and consensus from multiple AI experts&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Smart Debugging Assistant&lt;/strong&gt; - Systematic root cause analysis with hypothesis tracking and confidence levels&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic Model Selection&lt;/strong&gt; - Claude intelligently picks the right model for each subtask (or you can specify)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Vision Capabilities&lt;/strong&gt; - Analyze screenshots, diagrams, and visual content with vision-enabled models&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Local Model Support&lt;/strong&gt; - Run Llama, Mistral, or other models locally for complete privacy and zero API costs&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Bypass MCP Token Limits&lt;/strong&gt; - Automatically works around MCP's 25K limit for large prompts and responses&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;&lt;strong&gt;The Killer Feature:&lt;/strong&gt; When Claude's context resets, just ask to "continue with O3" - the other model's response magically revives Claude's understanding without re-ingesting documents!&lt;/p&gt; 
 &lt;h4&gt;Example: Multi-Model Code Review Workflow&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;code&gt;Perform a codereview using gemini pro and o3 and use planner to generate a detailed plan, implement the fixes and do a final precommit check by continuing from the previous codereview&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;This triggers a &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/codereview.md"&gt;&lt;code&gt;codereview&lt;/code&gt;&lt;/a&gt; workflow where Claude walks the code, looking for all kinds of issues&lt;/li&gt; 
  &lt;li&gt;After multiple passes, collects relevant code and makes note of issues along the way&lt;/li&gt; 
  &lt;li&gt;Maintains a &lt;code&gt;confidence&lt;/code&gt; level between &lt;code&gt;exploring&lt;/code&gt;, &lt;code&gt;low&lt;/code&gt;, &lt;code&gt;medium&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt; and &lt;code&gt;certain&lt;/code&gt; to track how confidently it's been able to find and identify issues&lt;/li&gt; 
  &lt;li&gt;Generates a detailed list of critical -&amp;gt; low issues&lt;/li&gt; 
  &lt;li&gt;Shares the relevant files, findings, etc with &lt;strong&gt;Gemini Pro&lt;/strong&gt; to perform a deep dive for a second &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/codereview.md"&gt;&lt;code&gt;codereview&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Comes back with a response and next does the same with o3, adding to the prompt if a new discovery comes to light&lt;/li&gt; 
  &lt;li&gt;When done, Claude takes in all the feedback and combines a single list of all critical -&amp;gt; low issues, including good patterns in your code. The final list includes new findings or revisions in case Claude misunderstood or missed something crucial and one of the other models pointed this out&lt;/li&gt; 
  &lt;li&gt;It then uses the &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/planner.md"&gt;&lt;code&gt;planner&lt;/code&gt;&lt;/a&gt; workflow to break the work down into simpler steps if a major refactor is required&lt;/li&gt; 
  &lt;li&gt;Claude then performs the actual work of fixing highlighted issues&lt;/li&gt; 
  &lt;li&gt;When done, Claude returns to Gemini Pro for a &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/precommit.md"&gt;&lt;code&gt;precommit&lt;/code&gt;&lt;/a&gt; review&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;All within a single conversation thread! Gemini Pro in step 11 &lt;em&gt;knows&lt;/em&gt; what was recommended by O3 in step 7! Taking that context and review into consideration to aid with its final pre-commit review.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Think of it as Claude Code &lt;em&gt;for&lt;/em&gt; Claude Code.&lt;/strong&gt; This MCP isn't magic. It's just &lt;strong&gt;super-glue&lt;/strong&gt;.&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Remember:&lt;/strong&gt; Claude stays in full control ‚Äî but &lt;strong&gt;YOU&lt;/strong&gt; call the shots. Zen is designed to have Claude engage other models only when needed ‚Äî and to follow through with meaningful back-and-forth. &lt;strong&gt;You're&lt;/strong&gt; the one who crafts the powerful prompt that makes Claude bring in Gemini, Flash, O3 ‚Äî or fly solo. You're the guide. The prompter. The puppeteer.&lt;/p&gt; 
  &lt;h4&gt;You are the AI - &lt;strong&gt;Actually Intelligent&lt;/strong&gt;.&lt;/h4&gt; 
 &lt;/blockquote&gt; 
&lt;/details&gt; 
&lt;h4&gt;Recommended AI Stack&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;For Claude Code Users&lt;/summary&gt; 
 &lt;p&gt;For best results when using &lt;a href="https://claude.ai/code"&gt;Claude Code&lt;/a&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Sonnet 4.5&lt;/strong&gt; - All agentic work and orchestration&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; OR &lt;strong&gt;GPT-5-Pro&lt;/strong&gt; - Deep thinking, additional code reviews, debugging and validations, pre-commit analysis&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;For Codex Users&lt;/summary&gt; 
 &lt;p&gt;For best results when using &lt;a href="https://developers.openai.com/codex/cli"&gt;Codex CLI&lt;/a&gt;:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;GPT-5 Codex Medium&lt;/strong&gt; - All agentic work and orchestration&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gemini 2.5 Pro&lt;/strong&gt; OR &lt;strong&gt;GPT-5-Pro&lt;/strong&gt; - Deep thinking, additional code reviews, debugging and validations, pre-commit analysis&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Quick Start (5 minutes)&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Python 3.10+, Git, &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;uv installed&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;1. Get API Keys&lt;/strong&gt; (choose one or more):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://openrouter.ai/"&gt;OpenRouter&lt;/a&gt;&lt;/strong&gt; - Access multiple models with one API&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://makersuite.google.com/app/apikey"&gt;Gemini&lt;/a&gt;&lt;/strong&gt; - Google's latest models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://platform.openai.com/api-keys"&gt;OpenAI&lt;/a&gt;&lt;/strong&gt; - O3, GPT-5 series&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://learn.microsoft.com/azure/ai-services/openai/"&gt;Azure OpenAI&lt;/a&gt;&lt;/strong&gt; - Enterprise deployments of GPT-4o, GPT-4.1, GPT-5 family&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://console.x.ai/"&gt;X.AI&lt;/a&gt;&lt;/strong&gt; - Grok models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://dialx.ai/"&gt;DIAL&lt;/a&gt;&lt;/strong&gt; - Vendor-agnostic model access&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://ollama.ai/"&gt;Ollama&lt;/a&gt;&lt;/strong&gt; - Local models (free)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;2. Install&lt;/strong&gt; (choose one):&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option A: Clone and Automatic Setup&lt;/strong&gt; (recommended)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/BeehiveInnovations/zen-mcp-server.git
cd zen-mcp-server

# Handles everything: setup, config, API keys from system environment. 
# Auto-configures Claude Desktop, Claude Code, Gemini CLI, Codex CLI, Qwen CLI
# Enable / disable additional settings in .env
./run-server.sh  
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Option B: Instant Setup with &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;uvx&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// Add to ~/.claude/settings.json or .mcp.json
// Don't forget to add your API keys under env
{
  "mcpServers": {
    "zen": {
      "command": "bash",
      "args": ["-c", "for p in $(which uvx 2&amp;gt;/dev/null) $HOME/.local/bin/uvx /opt/homebrew/bin/uvx /usr/local/bin/uvx uvx; do [ -x \"$p\" ] &amp;amp;&amp;amp; exec \"$p\" --from git+https://github.com/BeehiveInnovations/zen-mcp-server.git zen-mcp-server; done; echo 'uvx not found' &amp;gt;&amp;amp;2; exit 1"],
      "env": {
        "PATH": "/usr/local/bin:/usr/bin:/bin:/opt/homebrew/bin:~/.local/bin",
        "GEMINI_API_KEY": "your-key-here",
        "DISABLED_TOOLS": "analyze,refactor,testgen,secaudit,docgen,tracer",
        "DEFAULT_MODEL": "auto"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;3. Start Using!&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Use zen to analyze this code for security issues with gemini pro"
"Debug this error with o3 and then get flash to suggest optimizations"
"Plan the migration strategy with zen, get consensus from multiple models"
"clink with cli_name=\"gemini\" role=\"planner\" to draft a phased rollout plan"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/getting-started.md"&gt;Complete Setup Guide&lt;/a&gt;&lt;/strong&gt; with detailed installation, configuration for Gemini / Codex / Qwen, and troubleshooting üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/getting-started.md#ide-clients"&gt;Cursor &amp;amp; VS Code Setup&lt;/a&gt;&lt;/strong&gt; for IDE integration instructions üì∫ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#-watch-tools-in-action"&gt;Watch tools in action&lt;/a&gt;&lt;/strong&gt; to see real-world examples&lt;/p&gt; 
&lt;h2&gt;Provider Configuration&lt;/h2&gt; 
&lt;p&gt;Zen activates any provider that has credentials in your &lt;code&gt;.env&lt;/code&gt;. See &lt;code&gt;.env.example&lt;/code&gt; for deeper customization.&lt;/p&gt; 
&lt;h2&gt;Core Tools&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Each tool comes with its own multi-step workflow, parameters, and descriptions that consume valuable context window space even when not in use. To optimize performance, some tools are disabled by default. See &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;Tool Configuration&lt;/a&gt; below to enable them.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Collaboration &amp;amp; Planning&lt;/strong&gt; &lt;em&gt;(Enabled by default)&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/clink.md"&gt;&lt;code&gt;clink&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Bridge requests to external AI CLIs (Gemini planner, codereviewer, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/chat.md"&gt;&lt;code&gt;chat&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Brainstorm ideas, get second opinions, validate approaches. With capable models (GPT-5 Pro, Gemini 2.5 Pro), generates complete code / implementation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/thinkdeep.md"&gt;&lt;code&gt;thinkdeep&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Extended reasoning, edge case analysis, alternative perspectives&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/planner.md"&gt;&lt;code&gt;planner&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Break down complex projects into structured, actionable plans&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/consensus.md"&gt;&lt;code&gt;consensus&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Get expert opinions from multiple AI models with stance steering&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Code Analysis &amp;amp; Quality&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/debug.md"&gt;&lt;code&gt;debug&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Systematic investigation and root cause analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/precommit.md"&gt;&lt;code&gt;precommit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Validate changes before committing, prevent regressions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/codereview.md"&gt;&lt;code&gt;codereview&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Professional reviews with severity levels and actionable feedback&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/analyze.md"&gt;&lt;code&gt;analyze&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;(disabled by default - &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;enable&lt;/a&gt;)&lt;/em&gt; - Understand architecture, patterns, dependencies across entire codebases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Development Tools&lt;/strong&gt; &lt;em&gt;(Disabled by default - &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;enable&lt;/a&gt;)&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/refactor.md"&gt;&lt;code&gt;refactor&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Intelligent code refactoring with decomposition focus&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/testgen.md"&gt;&lt;code&gt;testgen&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Comprehensive test generation with edge cases&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/secaudit.md"&gt;&lt;code&gt;secaudit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Security audits with OWASP Top 10 analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/docgen.md"&gt;&lt;code&gt;docgen&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Generate documentation with complexity analysis&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Utilities&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/apilookup.md"&gt;&lt;code&gt;apilookup&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Forces current-year API/SDK documentation lookups in a sub-process (saves tokens within the current context window), prevents outdated training data responses&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/challenge.md"&gt;&lt;code&gt;challenge&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; - Prevent "You're absolutely right!" responses with critical analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/tracer.md"&gt;&lt;code&gt;tracer&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; &lt;em&gt;(disabled by default - &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/#tool-configuration"&gt;enable&lt;/a&gt;)&lt;/em&gt; - Static analysis prompts for call-flow mapping&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b id="tool-configuration"&gt;üëâ Tool Configuration&lt;/b&gt;&lt;/summary&gt; 
 &lt;h3&gt;Default Configuration&lt;/h3&gt; 
 &lt;p&gt;To optimize context window usage, only essential tools are enabled by default:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Enabled by default:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;chat&lt;/code&gt;, &lt;code&gt;thinkdeep&lt;/code&gt;, &lt;code&gt;planner&lt;/code&gt;, &lt;code&gt;consensus&lt;/code&gt; - Core collaboration tools&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;codereview&lt;/code&gt;, &lt;code&gt;precommit&lt;/code&gt;, &lt;code&gt;debug&lt;/code&gt; - Essential code quality tools&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;apilookup&lt;/code&gt; - Rapid API/SDK information lookup&lt;/li&gt; 
  &lt;li&gt;&lt;code&gt;challenge&lt;/code&gt; - Critical thinking utility&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;Disabled by default:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;analyze&lt;/code&gt;, &lt;code&gt;refactor&lt;/code&gt;, &lt;code&gt;testgen&lt;/code&gt;, &lt;code&gt;secaudit&lt;/code&gt;, &lt;code&gt;docgen&lt;/code&gt;, &lt;code&gt;tracer&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h3&gt;Enabling Additional Tools&lt;/h3&gt; 
 &lt;p&gt;To enable additional tools, remove them from the &lt;code&gt;DISABLED_TOOLS&lt;/code&gt; list:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Option 1: Edit your .env file&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Default configuration (from .env.example)
DISABLED_TOOLS=analyze,refactor,testgen,secaudit,docgen,tracer

# To enable specific tools, remove them from the list
# Example: Enable analyze tool
DISABLED_TOOLS=refactor,testgen,secaudit,docgen,tracer

# To enable ALL tools
DISABLED_TOOLS=
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Option 2: Configure in MCP settings&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;// In ~/.claude/settings.json or .mcp.json
{
  "mcpServers": {
    "zen": {
      "env": {
        // Tool configuration
        "DISABLED_TOOLS": "refactor,testgen,secaudit,docgen,tracer",
        "DEFAULT_MODEL": "pro",
        "DEFAULT_THINKING_MODE_THINKDEEP": "high",
        
        // API configuration
        "GEMINI_API_KEY": "your-gemini-key",
        "OPENAI_API_KEY": "your-openai-key",
        "OPENROUTER_API_KEY": "your-openrouter-key",
        
        // Logging and performance
        "LOG_LEVEL": "INFO",
        "CONVERSATION_TIMEOUT_HOURS": "6",
        "MAX_CONVERSATION_TURNS": "50"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Option 3: Enable all tools&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;// Remove or empty the DISABLED_TOOLS to enable everything
{
  "mcpServers": {
    "zen": {
      "env": {
        "DISABLED_TOOLS": ""
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Essential tools (&lt;code&gt;version&lt;/code&gt;, &lt;code&gt;listmodels&lt;/code&gt;) cannot be disabled&lt;/li&gt; 
  &lt;li&gt;After changing tool configuration, restart your Claude session for changes to take effect&lt;/li&gt; 
  &lt;li&gt;Each tool adds to context window usage, so only enable what you need&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;üì∫ Watch Tools In Action&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Chat Tool&lt;/b&gt; - Collaborative decision making and multi-turn conversations&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Picking Redis vs Memcached:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/41076cfe-dd49-4dfc-82f5-d7461b34705d"&gt;Chat Redis or Memcached_web.webm&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Multi-turn conversation with continuation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/37bd57ca-e8a6-42f7-b5fb-11de271e95db"&gt;Chat With Gemini_web.webm&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Consensus Tool&lt;/b&gt; - Multi-model debate and decision making&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Multi-model consensus debate:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/76a23dd5-887a-4382-9cf0-642f5cf6219e"&gt;Zen Consensus Debate&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;PreCommit Tool&lt;/b&gt; - Comprehensive change validation&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Pre-commit validation workflow:&lt;/strong&gt;&lt;/p&gt; 
 &lt;div align="center"&gt; 
  &lt;img src="https://github.com/user-attachments/assets/584adfa6-d252-49b4-b5b0-0cd6e97fb2c6" width="950" /&gt; 
 &lt;/div&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;API Lookup Tool&lt;/b&gt; - Current vs outdated API documentation&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Without Zen - outdated APIs:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/01a79dc9-ad16-4264-9ce1-76a56c3580ee"&gt;API without Zen&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;With Zen - current APIs:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/5c847326-4b66-41f7-8f30-f380453dce22"&gt;API with Zen&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Challenge Tool&lt;/b&gt; - Critical thinking vs reflexive agreement&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;Without Zen:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/64f3c9fb-7ca9-4876-b687-25e847edfd87" alt="without_zen@2x" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;With Zen:&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/9d72f444-ba53-4ab1-83e5-250062c6ee70" alt="with_zen@2x" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;AI Orchestration&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Auto model selection&lt;/strong&gt; - Claude picks the right AI for each task&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-model workflows&lt;/strong&gt; - Chain different models in single conversations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conversation continuity&lt;/strong&gt; - Context preserved across tools and models&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/context-revival.md"&gt;Context revival&lt;/a&gt;&lt;/strong&gt; - Continue conversations even after context resets&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Model Support&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple providers&lt;/strong&gt; - Gemini, OpenAI, Azure, X.AI, OpenRouter, DIAL, Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Latest models&lt;/strong&gt; - GPT-5, Gemini 2.5 Pro, O3, Grok-4, local Llama&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md#thinking-modes"&gt;Thinking modes&lt;/a&gt;&lt;/strong&gt; - Control reasoning depth vs cost&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Vision support&lt;/strong&gt; - Analyze images, diagrams, screenshots&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Developer Experience&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Guided workflows&lt;/strong&gt; - Systematic investigation prevents rushed analysis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart file handling&lt;/strong&gt; - Auto-expand directories, manage token limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web search integration&lt;/strong&gt; - Access current documentation and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md#working-with-large-prompts"&gt;Large prompt support&lt;/a&gt;&lt;/strong&gt; - Bypass MCP's 25K token limit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example Workflows&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Multi-model Code Review:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Perform a codereview using gemini pro and o3, then use planner to create a fix strategy"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Üí Claude reviews code systematically ‚Üí Consults Gemini Pro ‚Üí Gets O3's perspective ‚Üí Creates unified action plan&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Collaborative Debugging:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Debug this race condition with max thinking mode, then validate the fix with precommit"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Üí Deep investigation ‚Üí Expert analysis ‚Üí Solution implementation ‚Üí Pre-commit validation&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Architecture Planning:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Plan our microservices migration, get consensus from pro and o3 on the approach"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;‚Üí Structured planning ‚Üí Multiple expert opinions ‚Üí Consensus building ‚Üí Implementation roadmap&lt;/p&gt; 
&lt;p&gt;üëâ &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md"&gt;Advanced Usage Guide&lt;/a&gt;&lt;/strong&gt; for complex workflows, model configuration, and power-user features&lt;/p&gt; 
&lt;h2&gt;Quick Links&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;üìñ Documentation&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/index.md"&gt;Docs Overview&lt;/a&gt; - High-level map of major guides&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/getting-started.md"&gt;Getting Started&lt;/a&gt; - Complete setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/tools/"&gt;Tools Reference&lt;/a&gt; - All tools with examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/advanced-usage.md"&gt;Advanced Usage&lt;/a&gt; - Power user features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/configuration.md"&gt;Configuration&lt;/a&gt; - Environment variables, restrictions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/adding_providers.md"&gt;Adding Providers&lt;/a&gt; - Provider-specific setup (OpenAI, Azure, custom gateways)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/model_ranking.md"&gt;Model Ranking Guide&lt;/a&gt; - How intelligence scores drive auto-mode suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üîß Setup &amp;amp; Support&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/wsl-setup.md"&gt;WSL Setup&lt;/a&gt; - Windows users&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/troubleshooting.md"&gt;Troubleshooting&lt;/a&gt; - Common issues&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/docs/contributions.md"&gt;Contributing&lt;/a&gt; - Code standards, PR process&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 License - see &lt;a href="https://raw.githubusercontent.com/BeehiveInnovations/zen-mcp-server/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;p&gt;Built with the power of &lt;strong&gt;Multi-Model AI&lt;/strong&gt; collaboration ü§ù&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;ctual &lt;strong&gt;I&lt;/strong&gt;ntelligence by real Humans&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://modelcontextprotocol.com"&gt;MCP (Model Context Protocol)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.openai.com/codex/cli"&gt;Codex CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://claude.ai/code"&gt;Claude Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ai.google.dev/"&gt;Gemini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/azure/ai-services/openai/"&gt;Azure OpenAI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Star History&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#BeehiveInnovations/zen-mcp-server&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=BeehiveInnovations/zen-mcp-server&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jiji262/douyin-downloader</title>
      <link>https://github.com/jiji262/douyin-downloader</link>
      <description>&lt;p&gt;ÊäñÈü≥ÊâπÈáè‰∏ãËΩΩÂ∑•ÂÖ∑ÔºåÂéªÊ∞¥Âç∞ÔºåÊîØÊåÅËßÜÈ¢ë„ÄÅÂõæÈõÜ„ÄÅÂêàÈõÜ„ÄÅÈü≥‰πê(ÂéüÂ£∞)„ÄÇÂÖçË¥πÔºÅÂÖçË¥πÔºÅÂÖçË¥πÔºÅ&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;ÊäñÈü≥‰∏ãËΩΩÂô® - Êó†Ê∞¥Âç∞ÊâπÈáè‰∏ãËΩΩÂ∑•ÂÖ∑&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://socialify.git.ci/jiji262/douyin-downloader/image?custom_description=%E6%8A%96%E9%9F%B3%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7%EF%BC%8C%E5%8E%BB%E6%B0%B4%E5%8D%B0%EF%BC%8C%E6%94%AF%E6%8C%81%E8%A7%86%E9%A2%91%E3%80%81%E5%9B%BE%E9%9B%86%E3%80%81%E5%90%88%E9%9B%86%E3%80%81%E9%9F%B3%E4%B9%90%28%E5%8E%9F%E5%A3%B0%29%E3%80%82%0A%E5%85%8D%E8%B4%B9%EF%BC%81%E5%85%8D%E8%B4%B9%EF%BC%81%E5%85%8D%E8%B4%B9%EF%BC%81&amp;amp;description=1&amp;amp;font=Jost&amp;amp;forks=1&amp;amp;logo=https%3A%2F%2Fraw.githubusercontent.com%2Fjiji262%2Fdouyin-downloader%2Frefs%2Fheads%2Fmain%2Fimg%2Flogo.png&amp;amp;name=1&amp;amp;owner=1&amp;amp;pattern=Circuit+Board&amp;amp;pulls=1&amp;amp;stargazers=1&amp;amp;theme=Light" alt="douyin-downloader" /&gt;&lt;/p&gt; 
&lt;p&gt;‰∏Ä‰∏™ÂäüËÉΩÂº∫Â§ßÁöÑÊäñÈü≥ÂÜÖÂÆπÊâπÈáè‰∏ãËΩΩÂ∑•ÂÖ∑ÔºåÊîØÊåÅËßÜÈ¢ë„ÄÅÂõæÈõÜ„ÄÅÈü≥‰πê„ÄÅÁõ¥Êí≠Á≠âÂ§öÁßçÂÜÖÂÆπÁ±ªÂûãÁöÑ‰∏ãËΩΩ„ÄÇÊèê‰æõ‰∏§‰∏™ÁâàÊú¨ÔºöV1.0ÔºàÁ®≥ÂÆöÁâàÔºâÂíå V2.0ÔºàÂ¢ûÂº∫ÁâàÔºâ„ÄÇ&lt;/p&gt; 
&lt;h2&gt;üìã ÁõÆÂΩï&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"&gt;Âø´ÈÄüÂºÄÂßã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-%E7%89%88%E6%9C%AC%E8%AF%B4%E6%98%8E"&gt;ÁâàÊú¨ËØ¥Êòé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-v10-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97"&gt;V1.0 ‰ΩøÁî®ÊåáÂçó&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-v20-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97"&gt;V2.0 ‰ΩøÁî®ÊåáÂçó&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-cookie-%E9%85%8D%E7%BD%AE%E5%B7%A5%E5%85%B7"&gt;Cookie ÈÖçÁΩÆÂ∑•ÂÖ∑&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-%E6%94%AF%E6%8C%81%E7%9A%84%E9%93%BE%E6%8E%A5%E7%B1%BB%E5%9E%8B"&gt;ÊîØÊåÅÁöÑÈìæÊé•Á±ªÂûã&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"&gt;Â∏∏ËßÅÈóÆÈ¢ò&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/#-%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97"&gt;Êõ¥Êñ∞Êó•Âøó&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö° Âø´ÈÄüÂºÄÂßã&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/img/fuye.jpg" alt="qun" /&gt;&lt;/p&gt; 
&lt;h3&gt;ÁéØÂ¢ÉË¶ÅÊ±Ç&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Python 3.9+&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Êìç‰ΩúÁ≥ªÁªü&lt;/strong&gt;ÔºöWindows„ÄÅmacOS„ÄÅLinux&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂÆâË£ÖÊ≠•È™§&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÖãÈöÜÈ°πÁõÆ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/jiji262/douyin-downloader.git
cd douyin-downloader
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;ÂÆâË£Ö‰æùËµñ&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install -r requirements.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆ Cookie&lt;/strong&gt;ÔºàÈ¶ñÊ¨°‰ΩøÁî®ÈúÄË¶ÅÔºâ&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÊñπÂºè1ÔºöËá™Âä®Ëé∑ÂèñÔºàÊé®ËçêÔºâ
python cookie_extractor.py

# ÊñπÂºè2ÔºöÊâãÂä®Ëé∑Âèñ
python get_cookies_manual.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üì¶ ÁâàÊú¨ËØ¥Êòé&lt;/h2&gt; 
&lt;h3&gt;V1.0 (DouYinCommand.py) - Á®≥ÂÆöÁâà&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;ÁªèËøáÈ™åËØÅ&lt;/strong&gt;ÔºöÁ®≥ÂÆöÂèØÈù†ÔºåÁªèËøáÂ§ßÈáèÊµãËØï&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;ÁÆÄÂçïÊòìÁî®&lt;/strong&gt;ÔºöÈÖçÁΩÆÊñá‰ª∂È©±Âä®Ôºå‰ΩøÁî®ÁÆÄÂçï&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;ÂäüËÉΩÂÆåÊï¥&lt;/strong&gt;ÔºöÊîØÊåÅÊâÄÊúâÂÜÖÂÆπÁ±ªÂûã‰∏ãËΩΩ&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Âçï‰∏™ËßÜÈ¢ë‰∏ãËΩΩ&lt;/strong&gt;ÔºöÂÆåÂÖ®Ê≠£Â∏∏Â∑•‰Ωú&lt;/li&gt; 
 &lt;li&gt;‚ö†Ô∏è &lt;strong&gt;ÈúÄË¶ÅÊâãÂä®ÈÖçÁΩÆ&lt;/strong&gt;ÔºöÈúÄË¶ÅÊâãÂä®Ëé∑ÂèñÂíåÈÖçÁΩÆ Cookie&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V2.0 (downloader.py) - Â¢ûÂº∫Áâà&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;Ëá™Âä® Cookie ÁÆ°ÁêÜ&lt;/strong&gt;ÔºöÊîØÊåÅËá™Âä®Ëé∑ÂèñÂíåÂà∑Êñ∞ Cookie&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;Áªü‰∏ÄÂÖ•Âè£&lt;/strong&gt;ÔºöÊï¥ÂêàÊâÄÊúâÂäüËÉΩÂà∞Âçï‰∏ÄËÑöÊú¨&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;ÂºÇÊ≠•Êû∂ÊûÑ&lt;/strong&gt;ÔºöÊÄßËÉΩÊõ¥‰ºòÔºåÊîØÊåÅÂπ∂Âèë‰∏ãËΩΩ&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;Êô∫ËÉΩÈáçËØï&lt;/strong&gt;ÔºöËá™Âä®ÈáçËØïÂíåÈîôËØØÊÅ¢Â§ç&lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;strong&gt;Â¢ûÈáè‰∏ãËΩΩ&lt;/strong&gt;ÔºöÊîØÊåÅÂ¢ûÈáèÊõ¥Êñ∞ÔºåÈÅøÂÖçÈáçÂ§ç‰∏ãËΩΩ&lt;/li&gt; 
 &lt;li&gt;‚ö†Ô∏è &lt;strong&gt;Âçï‰∏™ËßÜÈ¢ë‰∏ãËΩΩ&lt;/strong&gt;ÔºöÁõÆÂâç API ËøîÂõûÁ©∫ÂìçÂ∫îÔºàÂ∑≤Áü•ÈóÆÈ¢òÔºâ&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Áî®Êà∑‰∏ªÈ°µ‰∏ãËΩΩ&lt;/strong&gt;ÔºöÂÆåÂÖ®Ê≠£Â∏∏Â∑•‰Ωú&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üéØ V1.0 ‰ΩøÁî®ÊåáÂçó&lt;/h2&gt; 
&lt;h3&gt;ÈÖçÁΩÆÊñá‰ª∂ËÆæÁΩÆ&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ÁºñËæëÈÖçÁΩÆÊñá‰ª∂&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp config.example.yml config.yml
# ÁºñËæë config.yml Êñá‰ª∂
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆÁ§∫‰æã&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# ‰∏ãËΩΩÈìæÊé•
link:
  - https://v.douyin.com/xxxxx/                    # Âçï‰∏™ËßÜÈ¢ë
  - https://www.douyin.com/user/xxxxx              # Áî®Êà∑‰∏ªÈ°µ
  - https://www.douyin.com/collection/xxxxx        # ÂêàÈõÜ

# ‰øùÂ≠òË∑ØÂæÑ
path: ./Downloaded/

# CookieÈÖçÁΩÆÔºàÂøÖÂ°´Ôºâ
cookies:
  msToken: YOUR_MS_TOKEN_HERE
  ttwid: YOUR_TTWID_HERE
  odin_tt: YOUR_ODIN_TT_HERE
  passport_csrf_token: YOUR_PASSPORT_CSRF_TOKEN_HERE
  sid_guard: YOUR_SID_GUARD_HERE

# ‰∏ãËΩΩÈÄâÈ°π
music: True    # ‰∏ãËΩΩÈü≥‰πê
cover: True    # ‰∏ãËΩΩÂ∞ÅÈù¢
avatar: True   # ‰∏ãËΩΩÂ§¥ÂÉè
json: True     # ‰øùÂ≠òJSONÊï∞ÊçÆ

# ‰∏ãËΩΩÊ®°Âºè
mode:
  - post       # ‰∏ãËΩΩÂèëÂ∏ÉÁöÑ‰ΩúÂìÅ
  # - like     # ‰∏ãËΩΩÂñúÊ¨¢ÁöÑ‰ΩúÂìÅ
  # - mix      # ‰∏ãËΩΩÂêàÈõÜ

# ‰∏ãËΩΩÊï∞ÈáèÔºà0Ë°®Á§∫ÂÖ®ÈÉ®Ôºâ
number:
  post: 0      # ÂèëÂ∏É‰ΩúÂìÅÊï∞Èáè
  like: 0      # ÂñúÊ¨¢‰ΩúÂìÅÊï∞Èáè
  allmix: 0    # ÂêàÈõÜÊï∞Èáè
  mix: 0       # Âçï‰∏™ÂêàÈõÜÂÜÖ‰ΩúÂìÅÊï∞Èáè

# ÂÖ∂‰ªñËÆæÁΩÆ
thread: 5      # ‰∏ãËΩΩÁ∫øÁ®ãÊï∞
database: True # ‰ΩøÁî®Êï∞ÊçÆÂ∫ìËÆ∞ÂΩï
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ËøêË°åÁ®ãÂ∫è&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ‰ΩøÁî®ÈÖçÁΩÆÊñá‰ª∂ËøêË°å
python DouYinCommand.py

# ÊàñËÄÖ‰ΩøÁî®ÂëΩ‰ª§Ë°åÂèÇÊï∞
python DouYinCommand.py --cmd False
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;‰ΩøÁî®Á§∫‰æã&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ‰∏ãËΩΩÂçï‰∏™ËßÜÈ¢ë
# Âú® config.yml ‰∏≠ËÆæÁΩÆ link ‰∏∫Âçï‰∏™ËßÜÈ¢ëÈìæÊé•
python DouYinCommand.py

# ‰∏ãËΩΩÁî®Êà∑‰∏ªÈ°µ
# Âú® config.yml ‰∏≠ËÆæÁΩÆ link ‰∏∫Áî®Êà∑‰∏ªÈ°µÈìæÊé•
python DouYinCommand.py

# ‰∏ãËΩΩÂêàÈõÜ
# Âú® config.yml ‰∏≠ËÆæÁΩÆ link ‰∏∫ÂêàÈõÜÈìæÊé•
python DouYinCommand.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üöÄ V2.0 ‰ΩøÁî®ÊåáÂçó&lt;/h2&gt; 
&lt;h3&gt;ÂëΩ‰ª§Ë°å‰ΩøÁî®&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ‰∏ãËΩΩÂçï‰∏™ËßÜÈ¢ëÔºàÈúÄË¶ÅÂÖàÈÖçÁΩÆ CookieÔºâ
python downloader.py -u "https://v.douyin.com/xxxxx/"

# ‰∏ãËΩΩÁî®Êà∑‰∏ªÈ°µÔºàÊé®ËçêÔºâ
python downloader.py -u "https://www.douyin.com/user/xxxxx"

# Ëá™Âä®Ëé∑Âèñ Cookie Âπ∂‰∏ãËΩΩ
python downloader.py --auto-cookie -u "https://www.douyin.com/user/xxxxx"

# ÊåáÂÆö‰øùÂ≠òË∑ØÂæÑ
python downloader.py -u "ÈìæÊé•" --path "./my_videos/"

# ‰ΩøÁî®ÈÖçÁΩÆÊñá‰ª∂
python downloader.py --config
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÈÖçÁΩÆÊñá‰ª∂‰ΩøÁî®&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;ÂàõÂª∫ÈÖçÁΩÆÊñá‰ª∂&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cp config.example.yml config_simple.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;ÈÖçÁΩÆÁ§∫‰æã&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# ‰∏ãËΩΩÈìæÊé•
link:
  - https://www.douyin.com/user/xxxxx

# ‰øùÂ≠òË∑ØÂæÑ
path: ./Downloaded/

# Ëá™Âä® Cookie ÁÆ°ÁêÜ
auto_cookie: true

# ‰∏ãËΩΩÈÄâÈ°π
music: true
cover: true
avatar: true
json: true

# ‰∏ãËΩΩÊ®°Âºè
mode:
  - post

# ‰∏ãËΩΩÊï∞Èáè
number:
  post: 10

# Â¢ûÈáè‰∏ãËΩΩ
increase:
  post: false

# Êï∞ÊçÆÂ∫ì
database: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;ËøêË°åÁ®ãÂ∫è&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python downloader.py --config
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ÂëΩ‰ª§Ë°åÂèÇÊï∞&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python downloader.py [ÈÄâÈ°π] [ÈìæÊé•...]

ÈÄâÈ°πÔºö
  -u, --url URL          ‰∏ãËΩΩÈìæÊé•
  -p, --path PATH        ‰øùÂ≠òË∑ØÂæÑ
  -c, --config           ‰ΩøÁî®ÈÖçÁΩÆÊñá‰ª∂
  --auto-cookie          Ëá™Âä®Ëé∑Âèñ Cookie
  --cookies COOKIES      ÊâãÂä®ÊåáÂÆö Cookie
  -h, --help            ÊòæÁ§∫Â∏ÆÂä©‰ø°ÊÅØ
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üç™ Cookie ÈÖçÁΩÆÂ∑•ÂÖ∑&lt;/h2&gt; 
&lt;h3&gt;1. cookie_extractor.py - Ëá™Âä®Ëé∑ÂèñÂ∑•ÂÖ∑&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ÂäüËÉΩ&lt;/strong&gt;Ôºö‰ΩøÁî® Playwright Ëá™Âä®ÊâìÂºÄÊµèËßàÂô®ÔºåËá™Âä®Ëé∑Âèñ Cookie&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;‰ΩøÁî®ÊñπÂºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# ÂÆâË£Ö Playwright
pip install playwright
playwright install chromium

# ËøêË°åËá™Âä®Ëé∑Âèñ
python cookie_extractor.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÁâπÁÇπ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ Ëá™Âä®ÊâìÂºÄÊµèËßàÂô®&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅÊâ´Á†ÅÁôªÂΩï&lt;/li&gt; 
 &lt;li&gt;‚úÖ Ëá™Âä®Ê£ÄÊµãÁôªÂΩïÁä∂ÊÄÅ&lt;/li&gt; 
 &lt;li&gt;‚úÖ Ëá™Âä®‰øùÂ≠òÂà∞ÈÖçÁΩÆÊñá‰ª∂&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅÂ§öÁßçÁôªÂΩïÊñπÂºè&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‰ΩøÁî®Ê≠•È™§&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;ËøêË°å &lt;code&gt;python cookie_extractor.py&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;ÈÄâÊã©ÊèêÂèñÊñπÂºèÔºàÊé®ËçêÈÄâÊã©1Ôºâ&lt;/li&gt; 
 &lt;li&gt;Âú®ÊâìÂºÄÁöÑÊµèËßàÂô®‰∏≠ÂÆåÊàêÁôªÂΩï&lt;/li&gt; 
 &lt;li&gt;Á®ãÂ∫èËá™Âä®ÊèêÂèñÂπ∂‰øùÂ≠ò Cookie&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;2. get_cookies_manual.py - ÊâãÂä®Ëé∑ÂèñÂ∑•ÂÖ∑&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;ÂäüËÉΩ&lt;/strong&gt;ÔºöÈÄöËøáÊµèËßàÂô®ÂºÄÂèëËÄÖÂ∑•ÂÖ∑ÊâãÂä®Ëé∑Âèñ Cookie&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;‰ΩøÁî®ÊñπÂºè&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python get_cookies_manual.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;ÁâπÁÇπ&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ Êó†ÈúÄÂÆâË£Ö Playwright&lt;/li&gt; 
 &lt;li&gt;‚úÖ ËØ¶ÁªÜÁöÑÊìç‰ΩúÊïôÁ®ã&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅ Cookie È™åËØÅ&lt;/li&gt; 
 &lt;li&gt;‚úÖ Ëá™Âä®‰øùÂ≠òÂà∞ÈÖçÁΩÆÊñá‰ª∂&lt;/li&gt; 
 &lt;li&gt;‚úÖ ÊîØÊåÅÂ§á‰ªΩÂíåÊÅ¢Â§ç&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‰ΩøÁî®Ê≠•È™§&lt;/strong&gt;Ôºö&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;ËøêË°å &lt;code&gt;python get_cookies_manual.py&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;ÈÄâÊã©"Ëé∑ÂèñÊñ∞ÁöÑCookie"&lt;/li&gt; 
 &lt;li&gt;ÊåâÁÖßÊïôÁ®ãÂú®ÊµèËßàÂô®‰∏≠Ëé∑Âèñ Cookie&lt;/li&gt; 
 &lt;li&gt;Á≤òË¥¥ Cookie ÂÜÖÂÆπ&lt;/li&gt; 
 &lt;li&gt;Á®ãÂ∫èËá™Âä®Ëß£ÊûêÂπ∂‰øùÂ≠ò&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Cookie Ëé∑ÂèñÊïôÁ®ã&lt;/h3&gt; 
&lt;h4&gt;ÊñπÊ≥ï‰∏ÄÔºöÊµèËßàÂô®ÂºÄÂèëËÄÖÂ∑•ÂÖ∑&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;ÊâìÂºÄÊµèËßàÂô®ÔºåËÆøÈóÆ &lt;a href="https://www.douyin.com"&gt;ÊäñÈü≥ÁΩëÈ°µÁâà&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ÁôªÂΩï‰Ω†ÁöÑÊäñÈü≥Ë¥¶Âè∑&lt;/li&gt; 
 &lt;li&gt;Êåâ &lt;code&gt;F12&lt;/code&gt; ÊâìÂºÄÂºÄÂèëËÄÖÂ∑•ÂÖ∑&lt;/li&gt; 
 &lt;li&gt;ÂàáÊç¢Âà∞ &lt;code&gt;Network&lt;/code&gt; Ê†áÁ≠æÈ°µ&lt;/li&gt; 
 &lt;li&gt;Âà∑Êñ∞È°µÈù¢ÔºåÊâæÂà∞‰ªªÊÑèËØ∑Ê±Ç&lt;/li&gt; 
 &lt;li&gt;Âú®ËØ∑Ê±ÇÂ§¥‰∏≠ÊâæÂà∞ &lt;code&gt;Cookie&lt;/code&gt; Â≠óÊÆµ&lt;/li&gt; 
 &lt;li&gt;Â§çÂà∂‰ª•‰∏ãÂÖ≥ÈîÆ cookie ÂÄºÔºö 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;msToken&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;ttwid&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;odin_tt&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;passport_csrf_token&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;sid_guard&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;ÊñπÊ≥ï‰∫åÔºö‰ΩøÁî®Ëá™Âä®Â∑•ÂÖ∑&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Êé®Ëçê‰ΩøÁî®Ëá™Âä®Â∑•ÂÖ∑
python cookie_extractor.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üìã ÊîØÊåÅÁöÑÈìæÊé•Á±ªÂûã&lt;/h2&gt; 
&lt;h3&gt;üé¨ ËßÜÈ¢ëÂÜÖÂÆπ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Âçï‰∏™ËßÜÈ¢ëÂàÜ‰∫´ÈìæÊé•&lt;/strong&gt;Ôºö&lt;code&gt;https://v.douyin.com/xxxxx/&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Âçï‰∏™ËßÜÈ¢ëÁõ¥Èìæ&lt;/strong&gt;Ôºö&lt;code&gt;https://www.douyin.com/video/xxxxx&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ÂõæÈõÜ‰ΩúÂìÅ&lt;/strong&gt;Ôºö&lt;code&gt;https://www.douyin.com/note/xxxxx&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üë§ Áî®Êà∑ÂÜÖÂÆπ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑‰∏ªÈ°µ&lt;/strong&gt;Ôºö&lt;code&gt;https://www.douyin.com/user/xxxxx&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ÊîØÊåÅ‰∏ãËΩΩÁî®Êà∑ÂèëÂ∏ÉÁöÑÊâÄÊúâ‰ΩúÂìÅ&lt;/li&gt; 
   &lt;li&gt;ÊîØÊåÅ‰∏ãËΩΩÁî®Êà∑ÂñúÊ¨¢ÁöÑ‰ΩúÂìÅÔºàÈúÄË¶ÅÊùÉÈôêÔºâ&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìö ÂêàÈõÜÂÜÖÂÆπ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Áî®Êà∑ÂêàÈõÜ&lt;/strong&gt;Ôºö&lt;code&gt;https://www.douyin.com/collection/xxxxx&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Èü≥‰πêÂêàÈõÜ&lt;/strong&gt;Ôºö&lt;code&gt;https://www.douyin.com/music/xxxxx&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üî¥ Áõ¥Êí≠ÂÜÖÂÆπ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Áõ¥Êí≠Èó¥&lt;/strong&gt;Ôºö&lt;code&gt;https://live.douyin.com/xxxxx&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîß Â∏∏ËßÅÈóÆÈ¢ò&lt;/h2&gt; 
&lt;h3&gt;Q: ‰∏∫‰ªÄ‰πàÂçï‰∏™ËßÜÈ¢ë‰∏ãËΩΩÂ§±Ë¥•Ôºü&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;V1.0ÔºöËØ∑Ê£ÄÊü• Cookie ÊòØÂê¶ÊúâÊïàÔºåÁ°Æ‰øùÂåÖÂê´ÂøÖË¶ÅÁöÑÂ≠óÊÆµ&lt;/li&gt; 
 &lt;li&gt;V2.0ÔºöÁõÆÂâçÂ∑≤Áü•ÈóÆÈ¢òÔºåAPI ËøîÂõûÁ©∫ÂìçÂ∫îÔºåÂª∫ËÆÆ‰ΩøÁî®Áî®Êà∑‰∏ªÈ°µ‰∏ãËΩΩ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q: Cookie ËøáÊúüÊÄé‰πàÂäûÔºü&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ΩøÁî® &lt;code&gt;python cookie_extractor.py&lt;/code&gt; ÈáçÊñ∞Ëé∑Âèñ&lt;/li&gt; 
 &lt;li&gt;Êàñ‰ΩøÁî® &lt;code&gt;python get_cookies_manual.py&lt;/code&gt; ÊâãÂä®Ëé∑Âèñ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q: ‰∏ãËΩΩÈÄüÂ∫¶ÊÖ¢ÊÄé‰πàÂäûÔºü&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ë∞ÉÊï¥ &lt;code&gt;thread&lt;/code&gt; ÂèÇÊï∞Â¢ûÂä†Âπ∂ÂèëÊï∞&lt;/li&gt; 
 &lt;li&gt;Ê£ÄÊü•ÁΩëÁªúËøûÊé•&lt;/li&gt; 
 &lt;li&gt;ÈÅøÂÖçÂêåÊó∂‰∏ãËΩΩËøáÂ§öÂÜÖÂÆπ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q: Â¶Ç‰ΩïÊâπÈáè‰∏ãËΩΩÔºü&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;V1.0ÔºöÂú® &lt;code&gt;config.yml&lt;/code&gt; ‰∏≠Ê∑ªÂä†Â§ö‰∏™ÈìæÊé•&lt;/li&gt; 
 &lt;li&gt;V2.0Ôºö‰ΩøÁî®ÂëΩ‰ª§Ë°å‰º†ÂÖ•Â§ö‰∏™ÈìæÊé•Êàñ‰ΩøÁî®ÈÖçÁΩÆÊñá‰ª∂&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Q: ÊîØÊåÅÂì™‰∫õÊ†ºÂºèÔºü&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;ËßÜÈ¢ëÔºöMP4 Ê†ºÂºèÔºàÊó†Ê∞¥Âç∞Ôºâ&lt;/li&gt; 
 &lt;li&gt;ÂõæÁâáÔºöJPG Ê†ºÂºè&lt;/li&gt; 
 &lt;li&gt;Èü≥È¢ëÔºöMP3 Ê†ºÂºè&lt;/li&gt; 
 &lt;li&gt;Êï∞ÊçÆÔºöJSON Ê†ºÂºè&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìù Êõ¥Êñ∞Êó•Âøó&lt;/h2&gt; 
&lt;h3&gt;V2.0 (2025-08)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Áªü‰∏ÄÂÖ•Âè£&lt;/strong&gt;ÔºöÊï¥ÂêàÊâÄÊúâÂäüËÉΩÂà∞ &lt;code&gt;downloader.py&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Ëá™Âä® Cookie ÁÆ°ÁêÜ&lt;/strong&gt;ÔºöÊîØÊåÅËá™Âä®Ëé∑ÂèñÂíåÂà∑Êñ∞&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;ÂºÇÊ≠•Êû∂ÊûÑ&lt;/strong&gt;ÔºöÊÄßËÉΩ‰ºòÂåñÔºåÊîØÊåÅÂπ∂Âèë‰∏ãËΩΩ&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Êô∫ËÉΩÈáçËØï&lt;/strong&gt;ÔºöËá™Âä®ÈáçËØïÂíåÈîôËØØÊÅ¢Â§ç&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Â¢ûÈáè‰∏ãËΩΩ&lt;/strong&gt;ÔºöÊîØÊåÅÂ¢ûÈáèÊõ¥Êñ∞&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Áî®Êà∑‰∏ªÈ°µ‰∏ãËΩΩ&lt;/strong&gt;ÔºöÂÆåÂÖ®Ê≠£Â∏∏Â∑•‰Ωú&lt;/li&gt; 
 &lt;li&gt;‚ö†Ô∏è &lt;strong&gt;Âçï‰∏™ËßÜÈ¢ë‰∏ãËΩΩ&lt;/strong&gt;ÔºöAPI ËøîÂõûÁ©∫ÂìçÂ∫îÔºàÂ∑≤Áü•ÈóÆÈ¢òÔºâ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;V1.0 (2024-12)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Á®≥ÂÆöÂèØÈù†&lt;/strong&gt;ÔºöÁªèËøáÂ§ßÈáèÊµãËØïÈ™åËØÅ&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;ÂäüËÉΩÂÆåÊï¥&lt;/strong&gt;ÔºöÊîØÊåÅÊâÄÊúâÂÜÖÂÆπÁ±ªÂûã&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Âçï‰∏™ËßÜÈ¢ë‰∏ãËΩΩ&lt;/strong&gt;ÔºöÂÆåÂÖ®Ê≠£Â∏∏Â∑•‰Ωú&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;ÈÖçÁΩÆÊñá‰ª∂È©±Âä®&lt;/strong&gt;ÔºöÁÆÄÂçïÊòìÁî®&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Êï∞ÊçÆÂ∫ìÊîØÊåÅ&lt;/strong&gt;ÔºöËÆ∞ÂΩï‰∏ãËΩΩÂéÜÂè≤&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚öñÔ∏è Ê≥ïÂæãÂ£∞Êòé&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Êú¨È°πÁõÆ‰ªÖ‰æõ&lt;strong&gt;Â≠¶‰π†‰∫§ÊµÅ&lt;/strong&gt;‰ΩøÁî®&lt;/li&gt; 
 &lt;li&gt;ËØ∑ÈÅµÂÆàÁõ∏ÂÖ≥Ê≥ïÂæãÊ≥ïËßÑÂíåÂπ≥Âè∞ÊúçÂä°Êù°Ê¨æ&lt;/li&gt; 
 &lt;li&gt;‰∏çÂæóÁî®‰∫éÂïÜ‰∏öÁî®ÈÄîÊàñ‰æµÁäØ‰ªñ‰∫∫ÊùÉÁõä&lt;/li&gt; 
 &lt;li&gt;‰∏ãËΩΩÂÜÖÂÆπËØ∑Â∞äÈáçÂéü‰ΩúËÄÖÁâàÊùÉ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ù Ë¥°ÁåÆÊåáÂçó&lt;/h2&gt; 
&lt;p&gt;Ê¨¢ËøéÊèê‰∫§ Issue Âíå Pull RequestÔºÅ&lt;/p&gt; 
&lt;h3&gt;Êä•ÂëäÈóÆÈ¢ò&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;‰ΩøÁî® &lt;a href="https://github.com/jiji262/douyin-downloader/issues"&gt;Issues&lt;/a&gt; Êä•Âëä bug&lt;/li&gt; 
 &lt;li&gt;ËØ∑Êèê‰æõËØ¶ÁªÜÁöÑÈîôËØØ‰ø°ÊÅØÂíåÂ§çÁé∞Ê≠•È™§&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ÂäüËÉΩÂª∫ËÆÆ&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Âú® Issues ‰∏≠ÊèêÂá∫Êñ∞ÂäüËÉΩÂª∫ËÆÆ&lt;/li&gt; 
 &lt;li&gt;ËØ¶ÁªÜÊèèËø∞ÂäüËÉΩÈúÄÊ±ÇÂíå‰ΩøÁî®Âú∫ÊôØ&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìÑ ËÆ∏ÂèØËØÅ&lt;/h2&gt; 
&lt;p&gt;Êú¨È°πÁõÆÈááÁî® &lt;a href="https://raw.githubusercontent.com/jiji262/douyin-downloader/main/LICENSE"&gt;MIT License&lt;/a&gt; ÂºÄÊ∫êËÆ∏ÂèØËØÅ„ÄÇ&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;Â¶ÇÊûúËøô‰∏™È°πÁõÆÂØπ‰Ω†ÊúâÂ∏ÆÂä©ÔºåËØ∑Áªô‰∏™ ‚≠ê Star ÊîØÊåÅ‰∏Ä‰∏ãÔºÅ&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/jiji262/douyin-downloader/issues"&gt;üêõ Êä•ÂëäÈóÆÈ¢ò&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/jiji262/douyin-downloader/issues"&gt;üí° ÂäüËÉΩÂª∫ËÆÆ&lt;/a&gt; ‚Ä¢ &lt;a href="https://github.com/jiji262/douyin-downloader/wiki"&gt;üìñ Êü•ÁúãÊñáÊ°£&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Made with ‚ù§Ô∏è by &lt;a href="https://github.com/jiji262"&gt;jiji262&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>airweave-ai/airweave</title>
      <link>https://github.com/airweave-ai/airweave</link>
      <description>&lt;p&gt;Airweave lets agents search any app&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="frontend/public/logo-airweave-darkbg.svg" /&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="frontend/public/logo-airweave-lightbg.svg" /&gt; 
 &lt;img width="1673" alt="airweave-lettermark" style="padding-bottom: 12px;" src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/public/logo-airweave-darkbg.svg?sanitize=true" /&gt; 
&lt;/picture&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;Make Any App Searchable for AI Agents&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://github.com/airweave-ai/airweave/actions/workflows/ruff.yml"&gt;&lt;img src="https://github.com/airweave-ai/airweave/actions/workflows/ruff.yml/badge.svg?sanitize=true" alt="Ruff" /&gt;&lt;/a&gt; &lt;a href="https://github.com/airweave-ai/airweave/actions/workflows/eslint.yml"&gt;&lt;img src="https://github.com/airweave-ai/airweave/actions/workflows/eslint.yml/badge.svg?sanitize=true" alt="ESLint" /&gt;&lt;/a&gt; &lt;a href="https://github.com/airweave-ai/airweave/actions/workflows/test-public-api.yml"&gt;&lt;img src="https://github.com/airweave-ai/airweave/actions/workflows/test-public-api.yml/badge.svg?sanitize=true" alt="System Tests" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/airweave-ai/airweave"&gt;&lt;img src="https://codecov.io/gh/airweave-ai/airweave/branch/main/graph/badge.svg?sanitize=true" alt="Codecov" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/gDuebsWGkn"&gt;&lt;img src="https://img.shields.io/discord/1323415085011701870?label=Discord&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Discord" /&gt;&lt;/a&gt; &lt;br /&gt;&lt;/p&gt; 
 &lt;div style="padding-top: 16px;"&gt; 
  &lt;a href="https://trendshift.io/repositories/13748" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13748" alt="airweave-ai%2Fairweave | Trendshift" style="width: 250px; height: 55px; margin-right: 24px;" width="250" height="55" /&gt;&lt;/a&gt;&amp;nbsp;&amp;nbsp;
  &lt;a href="https://www.ycombinator.com/launches/NX7-airweave-let-agents-search-any-app" target="_blank"&gt;&lt;img src="https://www.ycombinator.com/launches/NX7-airweave-let-agents-search-any-app/upvote_embed.svg?sanitize=true" alt="Launch YC: Airweave - Let Agents Search Any App" style="margin-left: 12px;" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;br /&gt; 
 &lt;p&gt;‚≠ê &lt;strong&gt;Help us reach more developers and grow the Airweave community. Star this repo!&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Airweave is a tool that lets agents search any app.&lt;/strong&gt; It connects to apps, productivity tools, databases, or document stores and transforms their contents into searchable knowledge bases, accessible through a standardized interface for agents.&lt;/p&gt; 
&lt;p&gt;The search interface is exposed via REST API or MCP. When using MCP, Airweave essentially builds a semantically searchable MCP server. The platform handles everything from auth and extraction to embedding and serving.&lt;/p&gt; 
&lt;p&gt;üì∫ Check out the quick demo below:&lt;/p&gt; 
&lt;p&gt;
 &lt;video width="100%" src="https://github.com/user-attachments/assets/995e4a36-3f88-4d8e-b401-6ca43db0c7bf" controls&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/airweave-ai/airweave/tree/main/examples"&gt;&lt;strong&gt;üîó Example notebooks&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#airweave"&gt;Airweave&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#overview"&gt;Overview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-quick-start"&gt;üöÄ Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-supported-integrations"&gt;üîå Supported Integrations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-usage"&gt;üíª Usage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#frontend"&gt;Frontend&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#api"&gt;API&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-sdks"&gt;üì¶ SDKs&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#python"&gt;Python&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#typescriptjavascript"&gt;TypeScript/JavaScript&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-key-features"&gt;üîë Key Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-tech-stack"&gt;üîß Technology Stack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-contributing"&gt;üë• Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-license"&gt;üìÑ License&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/#-connect"&gt;üîó Connect&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; 
&lt;h3&gt;Managed Service: &lt;a href="https://app.airweave.ai/"&gt;Airweave Cloud&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Self-hosted:&lt;/h3&gt; 
&lt;p&gt;Make sure docker and docker-compose are installed, then...&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone the repository
git clone https://github.com/airweave-ai/airweave.git
cd airweave

# 2. Build and run
chmod +x start.sh
./start.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That's it! Access the dashboard at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üîå Supported Integrations&lt;/h2&gt; 
&lt;!-- START_APP_GRID --&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;div style="display: inline-block; text-align: center; padding: 4px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/airtable.svg?sanitize=true" alt="Airtable" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/asana.svg?sanitize=true" alt="Asana" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/attio.svg?sanitize=true" alt="Attio" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/bitbucket.svg?sanitize=true" alt="Bitbucket" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/box.svg?sanitize=true" alt="Box" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/clickup.svg?sanitize=true" alt="ClickUp" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/confluence.svg?sanitize=true" alt="Confluence" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/ctti.svg?sanitize=true" alt="CTTI" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/dropbox.svg?sanitize=true" alt="Dropbox" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/github.svg?sanitize=true" alt="Github" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/gitlab.svg?sanitize=true" alt="Gitlab" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/gmail.svg?sanitize=true" alt="Gmail" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/google_calendar.svg?sanitize=true" alt="Google Calendar" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/google_drive.svg?sanitize=true" alt="Google Drive" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/hubspot.svg?sanitize=true" alt="Hubspot" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/jira.svg?sanitize=true" alt="Jira" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/linear.svg?sanitize=true" alt="Linear" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/monday.svg?sanitize=true" alt="Monday" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/notion.svg?sanitize=true" alt="Notion" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/onedrive.svg?sanitize=true" alt="Onedrive" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/outlook_calendar.svg?sanitize=true" alt="Outlook Calendar" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/outlook_mail.svg?sanitize=true" alt="Outlook Mail" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/postgresql.svg?sanitize=true" alt="Postgresql" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/salesforce.svg?sanitize=true" alt="Salesforce" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/sharepoint.svg?sanitize=true" alt="Sharepoint" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/slack.svg?sanitize=true" alt="Slack" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/stripe.svg?sanitize=true" alt="Stripe" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/teams.svg?sanitize=true" alt="Teams" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/todoist.svg?sanitize=true" alt="Todoist" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/trello.svg?sanitize=true" alt="Trello" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt;
 &lt;img src="https://raw.githubusercontent.com/airweave-ai/airweave/main/frontend/src/components/icons/apps/zendesk.svg?sanitize=true" alt="Zendesk" width="40" height="40" style="margin: 4px; padding: 2px;" /&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;!-- END_APP_GRID --&gt; 
&lt;h2&gt;üíª Usage&lt;/h2&gt; 
&lt;h3&gt;Frontend&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Access the UI at &lt;code&gt;http://localhost:8080&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Connect sources, configure syncs, and query data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Swagger docs: &lt;code&gt;http://localhost:8001/docs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Create connections, trigger syncs, and search data&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üì¶ SDKs&lt;/h2&gt; 
&lt;h3&gt;Python&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install airweave-sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from airweave import AirweaveSDK

client = AirweaveSDK(
    api_key="YOUR_API_KEY",
    base_url="http://localhost:8001"
)
client.collections.create(
    name="name",
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;TypeScript/JavaScript&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @airweave/sdk
# or
yarn add @airweave/sdk
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;import { AirweaveSDKClient, AirweaveSDKEnvironment } from "@airweave/sdk";

const client = new AirweaveSDKClient({
    apiKey: "YOUR_API_KEY",
    environment: AirweaveSDKEnvironment.Local
});
await client.collections.create({
    name: "name",
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;üîë Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data synchronization&lt;/strong&gt; from 30+ sources with minimal config&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Entity extraction&lt;/strong&gt; and transformation pipeline&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-tenant&lt;/strong&gt; architecture with OAuth2&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Incremental updates&lt;/strong&gt; using content hashing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Semantic search&lt;/strong&gt; for agent queries&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versioning&lt;/strong&gt; for data changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîß Tech Stack&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Frontend&lt;/strong&gt;: React/TypeScript with ShadCN&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backend&lt;/strong&gt;: FastAPI (Python)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Databases&lt;/strong&gt;: PostgreSQL (metadata), Qdrant (vectors)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workers&lt;/strong&gt;: Temporal (workflow orchestration), Redis (pub/sub)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deployment&lt;/strong&gt;: Docker Compose (dev), Kubernetes (prod)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üë• Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Please check &lt;a href="https://github.com/airweave-ai/airweave/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;Airweave is released under the &lt;a href="https://raw.githubusercontent.com/airweave-ai/airweave/main/LICENSE"&gt;MIT&lt;/a&gt; license.&lt;/p&gt; 
&lt;h2&gt;üîó Connect&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.com/invite/484HY9Ehxt"&gt;Discord&lt;/a&gt;&lt;/strong&gt; - Get help and discuss features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/airweave-ai/airweave/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Report bugs or request features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://x.com/airweave_ai"&gt;Twitter&lt;/a&gt;&lt;/strong&gt; - Follow for updates&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>