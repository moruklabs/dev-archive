<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Sun, 07 Sep 2025 01:38:06 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>blakeblackshear/frigate</title>
      <link>https://github.com/blakeblackshear/frigate</link>
      <description>&lt;p&gt;NVR with realtime local object detection for IP cameras&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img align="center" alt="logo" src="https://raw.githubusercontent.com/blakeblackshear/frigate/dev/docs/static/img/frigate.png" /&gt; &lt;/p&gt; 
&lt;h1&gt;Frigate - NVR With Realtime Object Detection for IP Cameras&lt;/h1&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/language-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;[English] | &lt;a href="https://github.com/blakeblackshear/frigate/raw/dev/README_CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A complete and local NVR designed for &lt;a href="https://www.home-assistant.io"&gt;Home Assistant&lt;/a&gt; with AI object detection. Uses OpenCV and Tensorflow to perform realtime object detection locally for IP cameras.&lt;/p&gt; 
&lt;p&gt;Use of a GPU or AI accelerator such as a &lt;a href="https://coral.ai/products/"&gt;Google Coral&lt;/a&gt; or &lt;a href="https://hailo.ai/"&gt;Hailo&lt;/a&gt; is highly recommended. AI accelerators will outperform even the best CPUs with very little overhead.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Tight integration with Home Assistant via a &lt;a href="https://github.com/blakeblackshear/frigate-hass-integration"&gt;custom component&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Designed to minimize resource use and maximize performance by only looking for objects when and where it is necessary&lt;/li&gt; 
 &lt;li&gt;Leverages multiprocessing heavily with an emphasis on realtime over processing every frame&lt;/li&gt; 
 &lt;li&gt;Uses a very low overhead motion detection to determine where to run object detection&lt;/li&gt; 
 &lt;li&gt;Object detection with TensorFlow runs in separate processes for maximum FPS&lt;/li&gt; 
 &lt;li&gt;Communicates over MQTT for easy integration into other systems&lt;/li&gt; 
 &lt;li&gt;Records video with retention settings based on detected objects&lt;/li&gt; 
 &lt;li&gt;24/7 recording&lt;/li&gt; 
 &lt;li&gt;Re-streaming via RTSP to reduce the number of connections to your camera&lt;/li&gt; 
 &lt;li&gt;WebRTC &amp;amp; MSE support for low-latency live view&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;View the documentation at &lt;a href="https://docs.frigate.video"&gt;https://docs.frigate.video&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donations&lt;/h2&gt; 
&lt;p&gt;If you would like to make a donation to support development, please use &lt;a href="https://github.com/sponsors/blakeblackshear"&gt;Github Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Live dashboard&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Live dashboard" src="https://github.com/blakeblackshear/frigate/assets/569905/5e713cb9-9db5-41dc-947a-6937c3bc376e" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Streamlined review workflow&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Streamlined review workflow" src="https://github.com/blakeblackshear/frigate/assets/569905/6fed96e8-3b18-40e5-9ddc-31e6f3c9f2ff" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Multi-camera scrubbing&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d6788a15-0eeb-4427-a8d4-80b93cae3d74" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;Built-in mask and zone editor&lt;/h3&gt; 
&lt;div&gt; 
 &lt;img width="800" alt="Multi-camera scrubbing" src="https://github.com/blakeblackshear/frigate/assets/569905/d7885fc3-bfe6-452f-b7d0-d957cb3e31f5" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://hosted.weblate.org/projects/frigate-nvr/"&gt;Weblate&lt;/a&gt; to support language translations. Contributions are always welcome.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/frigate-nvr/"&gt; &lt;img src="https://hosted.weblate.org/widget/frigate-nvr/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>microsoft/poml</title>
      <link>https://github.com/microsoft/poml</link>
      <description>&lt;p&gt;Prompt Orchestration Markup Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;POML: Prompt Orchestration Markup Language&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://microsoft.github.io/poml/"&gt;&lt;img src="https://img.shields.io/badge/docs-microsoft.github.io-blue" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=poml-team.poml"&gt;&lt;img src="https://img.shields.io/visual-studio-marketplace/v/poml-team.poml" alt="VSCode Extension" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/poml/"&gt;&lt;img src="https://img.shields.io/pypi/v/poml" alt="PyPI" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/pomljs"&gt;&lt;img src="https://img.shields.io/npm/v/pomljs" alt="npm (latest)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/poml/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/microsoft/poml/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Test Status" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/FhMCqWzAn6"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join-5865F2?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;POML (Prompt Orchestration Markup Language)&lt;/strong&gt; is a novel markup language designed to bring structure, maintainability, and versatility to advanced prompt engineering for Large Language Models (LLMs). It addresses common challenges in prompt development, such as lack of structure, complex data integration, format sensitivity, and inadequate tooling. POML provides a systematic way to organize prompt components, integrate diverse data types seamlessly, and manage presentation variations, empowering developers to create more sophisticated and reliable LLM applications.&lt;/p&gt; 
&lt;h2&gt;Demo Video&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/b9WDcFsKixo"&gt;&lt;img src="https://i3.ytimg.com/vi/b9WDcFsKixo/maxresdefault.jpg" alt="The 5-minute guide to POML" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Structured Prompting Markup&lt;/strong&gt;: Employs an HTML-like syntax with semantic components such as &lt;code&gt;&amp;lt;role&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;task&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;example&amp;gt;&lt;/code&gt; to encourage modular design, enhancing prompt readability, reusability, and maintainability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Data Handling&lt;/strong&gt;: Incorporates specialized data components (e.g., &lt;code&gt;&amp;lt;document&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;) that seamlessly embed or reference external data sources like text files, spreadsheets, and images, with customizable formatting options.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Decoupled Presentation Styling&lt;/strong&gt;: Features a CSS-like styling system that separates content from presentation. This allows developers to modify styling (e.g., verbosity, syntax format) via &lt;code&gt;&amp;lt;stylesheet&amp;gt;&lt;/code&gt; definitions or inline attributes without altering core prompt logic, mitigating LLM format sensitivity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integrated Templating Engine&lt;/strong&gt;: Includes a built-in templating engine with support for variables (&lt;code&gt;{{ }}&lt;/code&gt;), loops (&lt;code&gt;for&lt;/code&gt;), conditionals (&lt;code&gt;if&lt;/code&gt;), and variable definitions (&lt;code&gt;&amp;lt;let&amp;gt;&lt;/code&gt;) for dynamically generating complex, data-driven prompts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich Development Toolkit&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;IDE Extension (Visual Studio Code)&lt;/strong&gt;: Provides essential development aids like syntax highlighting, context-aware auto-completion, hover documentation, real-time previews, inline diagnostics for error checking, and integrated interactive testing.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Software Development Kits (SDKs)&lt;/strong&gt;: Offers SDKs for Node.js (JavaScript/TypeScript) and Python for seamless integration into various application workflows and popular LLM frameworks.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Here's a very simple POML example. Please put it in a file named &lt;code&gt;example.poml&lt;/code&gt;. Make sure it resides in the same directory as the &lt;code&gt;photosynthesis_diagram.png&lt;/code&gt; image file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;poml&amp;gt;
  &amp;lt;role&amp;gt;You are a patient teacher explaining concepts to a 10-year-old.&amp;lt;/role&amp;gt;
  &amp;lt;task&amp;gt;Explain the concept of photosynthesis using the provided image as a reference.&amp;lt;/task&amp;gt;

  &amp;lt;img src="photosynthesis_diagram.png" alt="Diagram of photosynthesis" /&amp;gt;

  &amp;lt;output-format&amp;gt;
    Keep the explanation simple, engaging, and under 100 words.
    Start with "Hey there, future scientist!".
  &amp;lt;/output-format&amp;gt;
&amp;lt;/poml&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example defines a role and task for the LLM, includes an image for context, and specifies the desired output format. With the POML toolkit, the prompt can be easily rendered with a flexible format, and tested with a vision LLM.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Visual Studio Code Extension&lt;/h3&gt; 
&lt;p&gt;Install from &lt;a href="https://marketplace.visualstudio.com/items?itemName=poml-team.poml"&gt;Visual Studio Code Marketplace&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also install the extension manually by downloading the &lt;code&gt;.vsix&lt;/code&gt; file from our &lt;a href="https://github.com/microsoft/poml/releases"&gt;GitHub releases page&lt;/a&gt; and installing it in VS Code via the Extensions view.&lt;/p&gt; 
&lt;p&gt;Before testing prompts with the POML toolkit, make sure you have configured your preferred LLM model, API key, and endpoint. If these are not set, prompt testing will not work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;To configure in Visual Studio Code:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the extension settings (open "Settings" and search for "POML").&lt;/li&gt; 
 &lt;li&gt;Set your model provider (e.g., OpenAI, Azure, Google), API key, and endpoint URL in the POML section.&lt;/li&gt; 
 &lt;li&gt;Alternatively, you can add these settings directly to your &lt;code&gt;settings.json&lt;/code&gt; file.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Node.js (via npm)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install pomljs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python (via pip)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install poml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For development or local installation, you might use &lt;code&gt;pip install -e .&lt;/code&gt; from a cloned repository.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Refer to the &lt;a href="https://microsoft.github.io/poml"&gt;documentation&lt;/a&gt; for more details on installing the nightly build.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For detailed information on POML syntax, components, styling, templating, SDKs, and the VS Code extension, please refer to our &lt;a href="https://microsoft.github.io/poml"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Watch our Demo Video on YouTube:&lt;/strong&gt; &lt;a href="https://youtu.be/b9WDcFsKixo"&gt;POML Introduction &amp;amp; Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join our Discord community:&lt;/strong&gt; Connect with the team and other users on our &lt;a href="https://discord.gg/FhMCqWzAn6"&gt;Discord server&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Read the Prompt Orchestration Markup Language paper:&lt;/strong&gt; &lt;a href="https://arxiv.org/abs/2508.13948"&gt;Prompt Orchestration Markup Language&lt;/a&gt; presents the design of POML and its impact on prompt engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explore Content-Format Integrated Prompt Optimization:&lt;/strong&gt; &lt;a href="https://arxiv.org/abs/2502.04295"&gt;Beyond Prompt Content: Enhancing LLM Performance via Content-Format Integrated Prompt Optimization&lt;/a&gt; proposes an iterative approach that jointly optimizes prompt content and formatting to improve LLM performance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find POML useful or related to your research, please cite the following paper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{zhang2025promptorchestrationmarkuplanguage,
      title={Prompt Orchestration Markup Language},
      author={Yuge Zhang and Nan Chen and Jiahang Xu and Yuqing Yang},
      year={2025},
      eprint={2508.13948},
      archivePrefix={arXiv},
      primaryClass={cs.HC},
      url={https://arxiv.org/abs/2508.13948},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Ecosystem &amp;amp; Community Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linmx0130/mini-poml-rs"&gt;mini-poml-rs&lt;/a&gt; – Experimental Rust-based POML renderer for environments without JavaScript or Python interpreters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GhennadiiMir/poml"&gt;poml-ruby&lt;/a&gt; – Ruby gem implementation of POML for Ruby applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hereandnowai/ai-chatbot-with-python-and-angular"&gt;ai-chatbot-with-python-and-angular&lt;/a&gt; – A chatbot built with Python and Angular (version 20), utilizing POML for prompting and the Langchain framework. Developed by HERE AND NOW AI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.opensource.microsoft.com"&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt; 
&lt;h2&gt;Responsible AI&lt;/h2&gt; 
&lt;p&gt;This project has been evaluated and certified to comply with the Microsoft Responsible AI Standard. The team will continue to monitor and maintain the repository, addressing any severe issues, including potential harms, if they arise. For more details, refer to the &lt;a href="https://raw.githubusercontent.com/microsoft/poml/main/RAI_README.md"&gt;Responsible AI Readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/microsoft/poml/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>EvolutionAPI/evolution-api</title>
      <link>https://github.com/EvolutionAPI/evolution-api</link>
      <description>&lt;p&gt;Evolution API is an open-source WhatsApp integration API&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Evolution Api&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://hub.docker.com/r/evoapicloud/evolution-api"&gt;&lt;img src="https://img.shields.io/badge/Docker-image-blue" alt="Docker Image" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/whatsapp"&gt;&lt;img src="https://img.shields.io/badge/Group-WhatsApp-%2322BC18" alt="Whatsapp Group" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/discord"&gt;&lt;img src="https://img.shields.io/badge/Discord-Community-blue" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://evolution-api.com/postman"&gt;&lt;img src="https://img.shields.io/badge/Postman-Collection-orange" alt="Postman Collection" /&gt;&lt;/a&gt; &lt;a href="https://doc.evolution-api.com"&gt;&lt;img src="https://img.shields.io/badge/Documentation-Official-green" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache--2.0-blue" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://app.picpay.com/user/davidsongomes1998"&gt;&lt;img src="https://img.shields.io/badge/Donation-picpay-green" alt="Support" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;&lt;img src="https://img.shields.io/badge/Github-sponsor-orange" alt="Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt;
 &lt;img src="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/public/images/cover.png" /&gt;
&lt;/div&gt; 
&lt;h2&gt;Evolution API&lt;/h2&gt; 
&lt;p&gt;Evolution API began as a WhatsApp controller API based on &lt;a href="https://github.com/code-chat-br/whatsapp-api"&gt;CodeChat&lt;/a&gt;, which in turn implemented the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys&lt;/a&gt; library. While originally focused on WhatsApp, Evolution API has grown into a comprehensive platform supporting multiple messaging services and integrations. We continue to acknowledge CodeChat for laying the groundwork.&lt;/p&gt; 
&lt;p&gt;Today, Evolution API is not limited to WhatsApp. It integrates with various platforms such as Typebot, Chatwoot, Dify, and OpenAI, offering a broad array of functionalities beyond messaging. Evolution API supports both the Baileys-based WhatsApp API and the official WhatsApp Business API, with upcoming support for Instagram and Messenger.&lt;/p&gt; 
&lt;h2&gt;Looking for a Lightweight Version?&lt;/h2&gt; 
&lt;p&gt;For those who need a more streamlined and performance-optimized version, check out &lt;a href="https://github.com/EvolutionAPI/evolution-api-lite"&gt;Evolution API Lite&lt;/a&gt;. It's designed specifically for microservices, focusing solely on connectivity without integrations or audio conversion features. Ideal for environments that prioritize simplicity and efficiency.&lt;/p&gt; 
&lt;h2&gt;Types of Connections&lt;/h2&gt; 
&lt;p&gt;Evolution API supports multiple types of connections to WhatsApp, enabling flexible and powerful integration options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp API - Baileys&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;A free API based on WhatsApp Web, leveraging the &lt;a href="https://github.com/WhiskeySockets/Baileys"&gt;Baileys library&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;This connection type allows control over WhatsApp Web functionalities through a RESTful API, suitable for multi-service chats, service bots, and other WhatsApp-integrated systems.&lt;/li&gt; 
   &lt;li&gt;Note: This method relies on the web version of WhatsApp and may have limitations compared to official APIs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;WhatsApp Cloud API&lt;/em&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The official API provided by Meta (formerly Facebook).&lt;/li&gt; 
   &lt;li&gt;This connection type offers a robust and reliable solution designed for businesses needing higher volumes of messaging and better integration support.&lt;/li&gt; 
   &lt;li&gt;The Cloud API supports features such as end-to-end encryption, advanced analytics, and more comprehensive customer service tools.&lt;/li&gt; 
   &lt;li&gt;To use this API, you must comply with Meta's policies and potentially pay for usage based on message volume and other factors.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;Evolution API supports various integrations to enhance its functionality. Below is a list of available integrations and their uses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://typebot.io/"&gt;Typebot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Build conversational bots using Typebot, integrated directly into Evolution with trigger management.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.chatwoot.com/"&gt;Chatwoot&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Direct integration with Chatwoot for handling customer service for your business.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.rabbitmq.com/"&gt;RabbitMQ&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via RabbitMQ.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://aws.amazon.com/pt/sqs/"&gt;Amazon SQS&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via Amazon SQS.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://socket.io/"&gt;Socket.io&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Receive events from the Evolution API via WebSocket.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://dify.ai/"&gt;Dify&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API directly with Dify AI for seamless trigger management and multiple agents.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://openai.com/"&gt;OpenAI&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Integrate your Evolution API with OpenAI for AI capabilities, including audio-to-text conversion, available across all Evolution integrations.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Amazon S3 / Minio:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Store media files received in &lt;a href="https://aws.amazon.com/pt/s3/"&gt;Amazon S3&lt;/a&gt; or &lt;a href="https://min.io/"&gt;Minio&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Telemetry Notice&lt;/h2&gt; 
&lt;p&gt;To continuously improve our services, we have implemented telemetry that collects data on the routes used, the most accessed routes, and the version of the API in use. We would like to assure you that no sensitive or personal data is collected during this process. The telemetry helps us identify improvements and provide a better experience for users.&lt;/p&gt; 
&lt;h2&gt;Evolution Support Premium&lt;/h2&gt; 
&lt;p&gt;Join our Evolution Pro community for expert support and a weekly call to answer questions. Visit the link below to learn more and subscribe:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://evolution-api.com/suporte-pro"&gt;Click here to learn more&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Donate to the project.&lt;/h1&gt; 
&lt;h4&gt;Github Sponsors&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/EvolutionAPI"&gt;https://github.com/sponsors/EvolutionAPI&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Content Creator Partners&lt;/h1&gt; 
&lt;p&gt;We are proud to collaborate with the following content creators who have contributed valuable insights and tutorials about Evolution API:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@promovaweb"&gt;Promovaweb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@canalsandeco"&gt;Sandeco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@ComunidadeZDG"&gt;Comunidade ZDG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@FrancisMNO"&gt;Francis MNO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@pablocabral"&gt;Pablo Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@xpopdigital"&gt;XPop Digital&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@costarwagnerdev"&gt;Costar Wagner Dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@dantetesta_"&gt;Dante Testa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/channel/UCnYGZIE2riiLqaN9sI6riig"&gt;Rubén Salazar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/OrionDesign_Oficial"&gt;OrionDesign&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/EvolutionAPI/evolution-api/main/youtube.com/@impa365_ofc"&gt;IMPA 365&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/@comunidadehubconnect"&gt;Comunidade Hub Connect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCG7DjUmAxtYyURlOGAIryNQ?view_as=subscriber"&gt;dSantana Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@edisonmartinsmkt"&gt;Edison Martins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@astraonlineweb"&gt;Astra Online&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@sevenautomacoes"&gt;MKT Seven Automações&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/vamosautomatizar"&gt;Vamos automatizar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Evolution API is licensed under the Apache License 2.0, with the following additional conditions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;LOGO and copyright information&lt;/strong&gt;: In the process of using Evolution API's frontend components, you may not remove or modify the LOGO or copyright information in the Evolution API console or applications. This restriction is inapplicable to uses of Evolution API that do not involve its frontend components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Usage Notification Requirement&lt;/strong&gt;: If Evolution API is used as part of any project, including closed-source systems (e.g., proprietary software), the user is required to display a clear notification within the system that Evolution API is being utilized. This notification should be visible to system administrators and accessible from the system's documentation or settings page. Failure to comply with this requirement may result in the necessity for a commercial license, as determined by the producer.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Please contact &lt;a href="mailto:contato@evolution-api.com"&gt;contato@evolution-api.com&lt;/a&gt; to inquire about licensing matters.&lt;/p&gt; 
&lt;p&gt;Apart from the specific conditions mentioned above, all other rights and restrictions follow the Apache License 2.0. Detailed information about the Apache License 2.0 can be found at &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;© 2025 Evolution API&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>amplication/amplication</title>
      <link>https://github.com/amplication/amplication</link>
      <description>&lt;p&gt;Amplication brings order to the chaos of large-scale software development by creating Golden Paths for developers - streamlined workflows that drive consistency, enable high-quality code practices, simplify onboarding, and accelerate standardized delivery across teams.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://amplication.com/#gh-light-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/amplication/amplication/master/.github/assets/amplication-logo-light-mode.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://amplication.com/#gh-dark-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/amplication/amplication/master/.github/assets/amplication-logo-dark-mode.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;i align="center"&gt;Transform platform engineering with tailor-made live templates and service catalog 🚀&lt;/i&gt; &lt;/p&gt; 
&lt;h4 align="center"&gt; &lt;a href="https://github.com/amplication/amplication/actions/workflows/ci.yml"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/amplication/amplication/ci.yml?branch=master&amp;amp;label=pipeline&amp;amp;style=flat-square" alt="continuous integration" style="height: 20px;" /&gt; &lt;/a&gt; &lt;a href="https://github.com/amplication/amplication/graphs/contributors"&gt; &lt;img src="https://img.shields.io/github/contributors-anon/amplication/amplication?color=yellow&amp;amp;style=flat-square" alt="contributors" style="height: 20px;" /&gt; &lt;/a&gt; &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt; &lt;img src="https://img.shields.io/badge/apache%202.0-blue.svg?style=flat-square&amp;amp;label=license" alt="license" style="height: 20px;" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://amplication.com/discord"&gt; &lt;img src="https://img.shields.io/badge/discord-7289da.svg?style=flat-square&amp;amp;logo=discord" alt="discord" style="height: 20px;" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/amplication"&gt; &lt;img src="https://img.shields.io/twitter/follow/amplication?style=social" alt="twitter" style="height: 20px;" /&gt; &lt;/a&gt; &lt;a href="https://www.youtube.com/c/Amplicationcom"&gt; &lt;img src="https://img.shields.io/badge/youtube-d95652.svg?style=flat-square&amp;amp;logo=youtube" alt="youtube" style="height: 20px;" /&gt; &lt;/a&gt; &lt;/h4&gt; 
&lt;p align="center"&gt; &lt;img src="https://github.com/amplication/amplication/assets/149934977/80ed0d00-2f08-4bd8-92b1-1a347bb30ba6" alt="dashboard" /&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Amplication&lt;/code&gt; enables you to quickly build, maintain, and scale backend services that embed your company’s best practices and standards.&lt;/p&gt; 
&lt;p&gt;With Amplication you can create your own live templates embedding your organization’s best practices and standards, to ensure consistency and compliance from the start.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Leveraging AI-powered automation, Amplication will generate microservices in no time, with everything that is needed to support your business domain: APIs, data models, DTOs and more, allowing engineers to focus on business logic.&lt;/p&gt; 
&lt;p&gt;Now your live applications will be always up-to-date. Amplication automatically handles package updates, patches, and versioning, reducing technical debt and ensuring consistency across your services.&amp;nbsp;&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt; Features &lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; &lt;img width="49%" src="https://github.com/amplication/amplication/assets/73097785/9908a54a-7d49-4dbb-8f5e-3e99b7cadf30.png" alt="apis" /&gt; &amp;nbsp; &lt;img width="49%" src="https://github.com/amplication/amplication/assets/73097785/ff406403-27f7-42b5-9569-d011432f16e5.png" alt="data-models" /&gt; &lt;/p&gt; 
 &lt;p align="center"&gt; &lt;img width="49%" src="https://github.com/amplication/amplication/assets/73097785/62c8d533-8475-4290-abc8-c433c095e68a.png" alt="plugins" /&gt; &amp;nbsp; &lt;img width="49%" src="https://github.com/amplication/amplication/assets/73097785/9c67a354-a06f-47d1-a118-ab89b775bf91.png" alt="microservices" /&gt; &lt;/p&gt; 
 &lt;p align="center"&gt; &lt;img width="49%" src="https://github.com/amplication/amplication/assets/149934977/4daf03a4-0866-49c9-8dd6-a340f3465c73" alt="own-your-code" /&gt; &amp;nbsp; &lt;img width="49%" src="https://github.com/amplication/amplication/assets/73097785/1cca9721-b8d6-425b-a1a9-d10d3cdcc9b8.png" alt="customize-code" /&gt; &lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;To get started with Amplication, the hosted version of the product can be used. You can get started immediately at &lt;a href="https://app.amplication.com"&gt;app.amplication.com&lt;/a&gt;. After the login page, you will be guided through creating your first service. The &lt;a href="https://amplication.com"&gt;website&lt;/a&gt; provides an overview of the application, additional information on the product and guides can be found in the &lt;a href="https://docs.amplication.com"&gt;docs&lt;/a&gt;.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt; Tutorials &lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://docs.amplication.com/tutorials/angular-todos"&gt;To-do application using Amplication and Angular&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://docs.amplication.com/tutorials/react-todos"&gt;To-do application using Amplication and React&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;Alternatively, instead of using the hosted version of the product, Amplication can be run locally for code generation purposes or contributions - if so, please refer to our &lt;a href="https://raw.githubusercontent.com/amplication/amplication/master/#contributing_anchor"&gt;contributing&lt;/a&gt; section.&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt; Pre-requisites &lt;/summary&gt; 
 &lt;br /&gt; To be able to start development on Amplication, make sure that you have the following prerequisites installed: 
 &lt;h3&gt;&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Node.js&lt;/li&gt; 
  &lt;li&gt;Docker&lt;/li&gt; 
  &lt;li&gt;Git&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details open&gt; 
 &lt;summary&gt; Running Amplication &lt;/summary&gt; 
 &lt;br /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; It is also possible to start development with GitHub Codespaces, when navigating to &lt;code&gt;&amp;lt; &amp;gt; Code&lt;/code&gt;, select &lt;code&gt;Codespaces&lt;/code&gt; instead of &lt;code&gt;Local&lt;/code&gt;. Click on either the &lt;code&gt;+&lt;/code&gt;-sign or the &lt;code&gt;Create codespace on master&lt;/code&gt;-button.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;Amplication is using a monorepo architecture - powered by &lt;a href="https://nx.dev"&gt;Nx Workspaces&lt;/a&gt; - where multiple applications and libraries exist in a single repository. To setup a local development environment the following steps can be followed:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;BEFORE&lt;/strong&gt; you run the following steps make sure:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;You have typescript installed locally on you machine &lt;code&gt;npm install -g typescript&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;You are using a supported node version (check &lt;code&gt;engines&lt;/code&gt; &lt;code&gt;node&lt;/code&gt; in the &lt;a href="https://raw.githubusercontent.com/amplication/amplication/master/package.json"&gt;package.json&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;You are using a supported npm version (check &lt;code&gt;engines&lt;/code&gt; &lt;code&gt;npm&lt;/code&gt; in the &lt;a href="https://raw.githubusercontent.com/amplication/amplication/master/package.json"&gt;package.json&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;You have &lt;code&gt;docker&lt;/code&gt; installed and running on your machine&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Clone the repository and install dependencies:&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/amplication/amplication.git &amp;amp;&amp;amp; cd amplication &amp;amp;&amp;amp; npm install
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="2"&gt; 
  &lt;li&gt;Run the setup script, which takes care of installing dependencies, building packages, and setting up the workspace:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;npm run setup:dev
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="3"&gt; 
  &lt;li&gt;Option 1: Running the required infrastructure - view infrastructure component logs&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;npm run docker:dev
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="3"&gt; 
  &lt;li&gt;Option 2: Running the required infrastructure - run the infrastructure components in background&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;npm run docker:dev -- -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;Apply database migrations&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;npm run db:migrate:deploy
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="5"&gt; 
  &lt;li&gt;To start developing, run one or more of the applications available under &lt;code&gt;serve:[application]&lt;/code&gt; scripts of the package.json.&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# running the server component
npm run serve:server

# running the client component
npm run serve:client

# running the data-service-generator component
npm run serve:dsg

# running the git-sync-manager component
npm run serve:git

# running the plugin-api component
npm run serve:plugins
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; In order to run the Amplication client properly, both the client and server need to be started by the &lt;code&gt;npm run serve:[application]&lt;/code&gt; command, as well as an additional component for development on a specific component.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;The development environment should now be set up. Additional information on the different application components can be found under packages/&lt;code&gt;[application]&lt;/code&gt;/README.md file. Happy hacking! 👾&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://amplication.com"&gt;Website&lt;/a&gt;&lt;/strong&gt; overview of the product.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.amplication.com"&gt;Docs&lt;/a&gt;&lt;/strong&gt; for comprehensive documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://amplication.com/blog"&gt;Blog&lt;/a&gt;&lt;/strong&gt; for guides and technical comparisons.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://amplication.com/discord"&gt;Discord&lt;/a&gt;&lt;/strong&gt; for support and discussions with the community and the team.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/amplication/amplication"&gt;GitHub&lt;/a&gt;&lt;/strong&gt; for source code, project board, issues, and pull requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://twitter.com/amplication"&gt;Twitter&lt;/a&gt;&lt;/strong&gt; for the latest updates on the product and published blogs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/c/Amplicationcom"&gt;YouTube&lt;/a&gt;&lt;/strong&gt; for guides and technical talks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a name="contributing_anchor"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The majority of Amplication code is open-source. We are committed to a transparent development process and highly appreciate any contributions. Whether you are helping us fix bugs, proposing new features, improving our documentation or spreading the word - we would love to have you as a part of the Amplication community. Please refer to our &lt;a href="https://raw.githubusercontent.com/amplication/amplication/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/amplication/amplication/master/CODE_OF_CONDUCT.md"&gt;code of conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Bug Report: If you see an error message or encounter an issue while using Amplication, please create a &lt;a href="https://github.com/amplication/amplication/issues/new?assignees=&amp;amp;labels=type%3A+bug&amp;amp;template=bug.yaml&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+"&gt;bug report&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Feature Request: If you have an idea or if there is a capability that is missing and would make development easier and more robust, please submit a &lt;a href="https://github.com/amplication/amplication/issues/new?assignees=&amp;amp;labels=type%3A+feature+request&amp;amp;template=feature.yml"&gt;feature request&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Documentation Request: If you're reading the Amplication docs and feel like you're missing something, please submit a &lt;a href="https://github.com/amplication/amplication/issues/new?assignees=&amp;amp;labels=type%3A+docs&amp;amp;template=documentation-request.yaml&amp;amp;title=%F0%9F%93%96+Documentation%3A+"&gt;documentation request&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Not sure where to start? Join our discord and we will help you get started!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://amplication.com/discord"&gt;&lt;img src="https://amplication.com/images/discord_banner_purple.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;!--
npx contributor-faces --exclude "*bot*" --limit 70 --repo "https://github.com/amplication/amplication"

change the height and width for each of the contributors from 80 to 50.
---&gt; 
&lt;p&gt;&lt;a href="https://github.com/yuval-hazaz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43705455?v=4" title="yuval-hazaz" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/iddan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12671072?v=4" title="iddan" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tupe12334"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61761153?v=4" title="tupe12334" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/abrl91"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39680385?v=4" title="abrl91" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/morhag90"&gt;&lt;img src="https://avatars.githubusercontent.com/u/97830649?v=4" title="morhag90" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/arielweinberger"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4976416?v=4" title="arielweinberger" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/EugeneTseitlin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6080188?v=4" title="EugeneTseitlin" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mshidlov"&gt;&lt;img src="https://avatars.githubusercontent.com/u/91742238?v=4" title="mshidlov" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/barshimi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4712526?v=4" title="barshimi" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/overbit"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2861984?v=4" title="overbit" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/germanilia"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34738985?v=4" title="germanilia" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/shaharblanksela"&gt;&lt;img src="https://avatars.githubusercontent.com/u/91251849?v=4" title="shaharblanksela" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GalCegla"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62651890?v=4" title="GalCegla" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/belkind27"&gt;&lt;img src="https://avatars.githubusercontent.com/u/71218434?v=4" title="belkind27" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/levivannoort"&gt;&lt;img src="https://avatars.githubusercontent.com/u/73097785?v=4" title="levivannoort" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jainpawan21"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39362422?v=4" title="jainpawan21" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/g-traub"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33841027?v=4" title="g-traub" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lalit8347"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74647848?v=4" title="lalit8347" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/alonram"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40050499?v=4" title="alonram" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/muhsinkamil"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62111075?v=4" title="muhsinkamil" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lokeswaran-aj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74011196?v=4" title="lokeswaran-aj" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meeroslava"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20791516?v=4" title="meeroslava" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/udanna"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8627181?v=4" title="udanna" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CKanishka"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30779692?v=4" title="CKanishka" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gitstart"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1501599?v=4" title="gitstart" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/almogbhl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/32982671?v=4" title="almogbhl" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chaiwattsw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30198386?v=4" title="chaiwattsw" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/astitva0011"&gt;&lt;img src="https://avatars.githubusercontent.com/u/113434018?v=4" title="astitva0011" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kalmanl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9283404?v=4" title="kalmanl" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/akshay-bharadva"&gt;&lt;img src="https://avatars.githubusercontent.com/u/52954931?v=4" title="akshay-bharadva" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/souravjain540"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53312820?v=4" title="souravjain540" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/MoFoGo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/96979533?v=4" title="MoFoGo" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/molaycule"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20028628?v=4" title="molaycule" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/theamanbhargava"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23207069?v=4" title="theamanbhargava" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/MichaelSolati"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11811422?v=4" title="MichaelSolati" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/b4s36t4"&gt;&lt;img src="https://avatars.githubusercontent.com/u/59088937?v=4" title="b4s36t4" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gabimoncha"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39256258?v=4" title="gabimoncha" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ShabanaNaik"&gt;&lt;img src="https://avatars.githubusercontent.com/u/76608039?v=4" title="ShabanaNaik" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Spid3rrr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38404399?v=4" title="Spid3rrr" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mulygottlieb"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1912933?v=4" title="mulygottlieb" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TheLearneer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23402178?v=4" title="TheLearneer" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wiseaidev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62179149?v=4" title="wiseaidev" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/VoidCupboard"&gt;&lt;img src="https://avatars.githubusercontent.com/u/82395440?v=4" title="VoidCupboard" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kabhamo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74118584?v=4" title="kabhamo" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/michizhou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33012425?v=4" title="michizhou" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Himanxu1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/80101755?v=4" title="Himanxu1" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ahlavorato"&gt;&lt;img src="https://avatars.githubusercontent.com/u/114295834?v=4" title="ahlavorato" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/munyoudoum"&gt;&lt;img src="https://avatars.githubusercontent.com/u/60089135?v=4" title="munyoudoum" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rkshaw20"&gt;&lt;img src="https://avatars.githubusercontent.com/u/73245914?v=4" title="rkshaw20" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yonantan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9935021?v=4" title="yonantan" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/alexbass86"&gt;&lt;img src="https://avatars.githubusercontent.com/u/96179897?v=4" title="alexbass86" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jatinparmar96"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15108177?v=4" title="jatinparmar96" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/AllMikeNoIke"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20914059?v=4" title="AllMikeNoIke" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ilovetensor"&gt;&lt;img src="https://avatars.githubusercontent.com/u/96976448?v=4" title="ilovetensor" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/asharonbaltazar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58940073?v=4" title="asharonbaltazar" width="50" height="50" /&gt;&lt;/a&gt; &lt;a href="https://github.com/goingdust"&gt;&lt;img src="https://avatars.githubusercontent.com/u/87334449?v=4" title="goingdust" width="50" height="50" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;A large part of this project is licensed under the &lt;a href="https://raw.githubusercontent.com/amplication/amplication/master/LICENSE"&gt;Apache 2.0&lt;/a&gt; license. The only exception are the components under the &lt;code&gt;ee&lt;/code&gt; (enterprise edition) directory, these are licensed under the &lt;a href="https://raw.githubusercontent.com/amplication/amplication/master/ee/LICENSE"&gt;Amplication Enterprise Edition&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bytebot-ai/bytebot</title>
      <link>https://github.com/bytebot-ai/bytebot</link>
      <description>&lt;p&gt;Bytebot is a self-hosted AI desktop agent that automates computer tasks through natural language commands, operating within a containerized Linux desktop environment.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/bytebot-ai/bytebot/main/docs/images/bytebot-logo.png" width="500" alt="Bytebot Logo" /&gt; 
 &lt;h1&gt;Bytebot: Open-Source AI Desktop Agent&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/14624" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14624" alt="bytebot-ai%2Fbytebot | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;An AI that has its own computer to complete tasks for you&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://railway.com/deploy/bytebot?referralCode=L9lKXQ"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/bytebot-ai/bytebot/tree/main/docker"&gt;&lt;img src="https://img.shields.io/badge/docker-ready-blue.svg?sanitize=true" alt="Docker" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/bytebot-ai/bytebot/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-Apache%202.0-green.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;&lt;img src="https://img.shields.io/discord/1232768900274585720?color=7289da&amp;amp;label=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://bytebot.ai"&gt;🌐 Website&lt;/a&gt; • &lt;a href="https://docs.bytebot.ai"&gt;📚 Documentation&lt;/a&gt; • &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;💬 Discord&lt;/a&gt; • &lt;a href="https://x.com/bytebot_ai"&gt;𝕏 Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/f271282a-27a3-43f3-9b99-b34007fdd169"&gt;https://github.com/user-attachments/assets/f271282a-27a3-43f3-9b99-b34007fdd169&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/72a43cf2-bd87-44c5-a582-e7cbe176f37f"&gt;https://github.com/user-attachments/assets/72a43cf2-bd87-44c5-a582-e7cbe176f37f&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is a Desktop Agent?&lt;/h2&gt; 
&lt;p&gt;A desktop agent is an AI that has its own computer. Unlike browser-only agents or traditional RPA tools, Bytebot comes with a full virtual desktop where it can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use any application (browsers, email clients, office tools, IDEs)&lt;/li&gt; 
 &lt;li&gt;Download and organize files with its own file system&lt;/li&gt; 
 &lt;li&gt;Log into websites and applications using password managers&lt;/li&gt; 
 &lt;li&gt;Read and process documents, PDFs, and spreadsheets&lt;/li&gt; 
 &lt;li&gt;Complete complex multi-step workflows across different programs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Think of it as a virtual employee with their own computer who can see the screen, move the mouse, type on the keyboard, and complete tasks just like a human would.&lt;/p&gt; 
&lt;h2&gt;Why Give AI Its Own Computer?&lt;/h2&gt; 
&lt;p&gt;When AI has access to a complete desktop environment, it unlocks capabilities that aren't possible with browser-only agents or API integrations:&lt;/p&gt; 
&lt;h3&gt;Complete Task Autonomy&lt;/h3&gt; 
&lt;p&gt;Give Bytebot a task like "Download all invoices from our vendor portals and organize them into a folder" and it will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the browser&lt;/li&gt; 
 &lt;li&gt;Navigate to each portal&lt;/li&gt; 
 &lt;li&gt;Handle authentication (including 2FA via password managers)&lt;/li&gt; 
 &lt;li&gt;Download the files to its local file system&lt;/li&gt; 
 &lt;li&gt;Organize them into a folder&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Process Documents&lt;/h3&gt; 
&lt;p&gt;Upload files directly to Bytebot's desktop and it can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Read entire PDFs into its context&lt;/li&gt; 
 &lt;li&gt;Extract data from complex documents&lt;/li&gt; 
 &lt;li&gt;Cross-reference information across multiple files&lt;/li&gt; 
 &lt;li&gt;Create new documents based on analysis&lt;/li&gt; 
 &lt;li&gt;Handle formats that APIs can't access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Use Real Applications&lt;/h3&gt; 
&lt;p&gt;Bytebot isn't limited to web interfaces. It can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use desktop applications like text editors, VS Code, or email clients&lt;/li&gt; 
 &lt;li&gt;Run scripts and command-line tools&lt;/li&gt; 
 &lt;li&gt;Install new software as needed&lt;/li&gt; 
 &lt;li&gt;Configure applications for specific workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Deploy in 2 Minutes&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Option 1: Railway (Easiest)&lt;/strong&gt; &lt;a href="https://railway.com/deploy/bytebot?referralCode=L9lKXQ"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Just click and add your AI provider API key.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Option 2: Docker Compose&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Add your AI provider key (choose one)
echo "ANTHROPIC_API_KEY=sk-ant-..." &amp;gt; docker/.env
# Or: echo "OPENAI_API_KEY=sk-..." &amp;gt; docker/.env
# Or: echo "GEMINI_API_KEY=..." &amp;gt; docker/.env

docker-compose -f docker/docker-compose.yml up -d

# Open http://localhost:9992
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://docs.bytebot.ai/quickstart"&gt;Full deployment guide →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How It Works&lt;/h2&gt; 
&lt;p&gt;Bytebot consists of four integrated components:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Virtual Desktop&lt;/strong&gt;: A complete Ubuntu Linux environment with pre-installed applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Agent&lt;/strong&gt;: Understands your tasks and controls the desktop to complete them&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Interface&lt;/strong&gt;: Web UI where you create tasks and watch Bytebot work&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;APIs&lt;/strong&gt;: REST endpoints for programmatic task creation and desktop control&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Natural Language Tasks&lt;/strong&gt;: Just describe what you need done&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Uploads&lt;/strong&gt;: Drop files onto tasks for Bytebot to process&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Live Desktop View&lt;/strong&gt;: Watch Bytebot work in real-time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Takeover Mode&lt;/strong&gt;: Take control when you need to help or configure something&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Password Manager Support&lt;/strong&gt;: Install 1Password, Bitwarden, etc. for automatic authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Persistent Environment&lt;/strong&gt;: Install programs and they stay available for future tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example Tasks&lt;/h2&gt; 
&lt;h3&gt;Basic Examples&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;"Go to Wikipedia and create a summary of quantum computing"
"Research flights from NYC to London and create a comparison document"
"Take screenshots of the top 5 news websites"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Document Processing&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;"Read the uploaded contracts.pdf and extract all payment terms and deadlines"
"Process these 5 invoice PDFs and create a summary report"
"Download and analyze the latest financial report and answer: What were the key risks mentioned?"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multi-Application Workflows&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;"Download last month's bank statements from our three banks and consolidate them"
"Check all our vendor portals for new invoices and create a summary report"
"Log into our CRM, export the customer list, and update records in the ERP system"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Programmatic Control&lt;/h2&gt; 
&lt;h3&gt;Create Tasks via API&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import requests

# Simple task
response = requests.post('http://localhost:9991/tasks', json={
    'description': 'Download the latest sales report and create a summary'
})

# Task with file upload
files = {'files': open('contracts.pdf', 'rb')}
response = requests.post('http://localhost:9991/tasks',
    data={'description': 'Review these contracts for important dates'},
    files=files
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Direct Desktop Control&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Take a screenshot
curl -X POST http://localhost:9990/computer-use \
  -H "Content-Type: application/json" \
  -d '{"action": "screenshot"}'

# Click at specific coordinates
curl -X POST http://localhost:9990/computer-use \
  -H "Content-Type: application/json" \
  -d '{"action": "click_mouse", "coordinate": [500, 300]}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://docs.bytebot.ai/api-reference/introduction"&gt;Full API documentation →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Setting Up Your Desktop Agent&lt;/h2&gt; 
&lt;h3&gt;1. Deploy Bytebot&lt;/h3&gt; 
&lt;p&gt;Use one of the deployment methods above to get Bytebot running.&lt;/p&gt; 
&lt;h3&gt;2. Configure the Desktop&lt;/h3&gt; 
&lt;p&gt;Use the Desktop tab in the UI to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install additional programs you need&lt;/li&gt; 
 &lt;li&gt;Set up password managers for authentication&lt;/li&gt; 
 &lt;li&gt;Configure applications with your preferences&lt;/li&gt; 
 &lt;li&gt;Log into websites you want Bytebot to access&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;3. Start Giving Tasks&lt;/h3&gt; 
&lt;p&gt;Create tasks in natural language and watch Bytebot complete them using the configured desktop.&lt;/p&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;h3&gt;Business Process Automation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Invoice processing and data extraction&lt;/li&gt; 
 &lt;li&gt;Multi-system data synchronization&lt;/li&gt; 
 &lt;li&gt;Report generation from multiple sources&lt;/li&gt; 
 &lt;li&gt;Compliance checking across platforms&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development &amp;amp; Testing&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Automated UI testing&lt;/li&gt; 
 &lt;li&gt;Cross-browser compatibility checks&lt;/li&gt; 
 &lt;li&gt;Documentation generation with screenshots&lt;/li&gt; 
 &lt;li&gt;Code deployment verification&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Research &amp;amp; Analysis&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Competitive analysis across websites&lt;/li&gt; 
 &lt;li&gt;Data gathering from multiple sources&lt;/li&gt; 
 &lt;li&gt;Document analysis and summarization&lt;/li&gt; 
 &lt;li&gt;Market research compilation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;Bytebot is built with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Desktop&lt;/strong&gt;: Ubuntu 22.04 with XFCE, Firefox, VS Code, and other tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent&lt;/strong&gt;: NestJS service that coordinates AI and desktop actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: Next.js application for task management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Support&lt;/strong&gt;: Works with Anthropic Claude, OpenAI GPT, Google Gemini&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Deployment&lt;/strong&gt;: Docker containers for easy self-hosting&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why Self-Host?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Data Privacy&lt;/strong&gt;: Everything runs on your infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Full Control&lt;/strong&gt;: Customize the desktop environment as needed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No Limits&lt;/strong&gt;: Use your own AI API keys without platform restrictions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexibility&lt;/strong&gt;: Install any software, access any systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Advanced Features&lt;/h2&gt; 
&lt;h3&gt;Multiple AI Providers&lt;/h3&gt; 
&lt;p&gt;Use any AI provider through our &lt;a href="https://docs.bytebot.ai/deployment/litellm"&gt;LiteLLM integration&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Azure OpenAI&lt;/li&gt; 
 &lt;li&gt;AWS Bedrock&lt;/li&gt; 
 &lt;li&gt;Local models via Ollama&lt;/li&gt; 
 &lt;li&gt;100+ other providers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Enterprise Deployment&lt;/h3&gt; 
&lt;p&gt;Deploy on Kubernetes with Helm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository
git clone https://github.com/bytebot-ai/bytebot.git
cd bytebot

# Install with Helm
helm install bytebot ./helm \
  --set agent.env.ANTHROPIC_API_KEY=sk-ant-...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://docs.bytebot.ai/deployment/helm"&gt;Enterprise deployment guide →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt;: &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;Join our community&lt;/a&gt; for help and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Comprehensive guides at &lt;a href="https://docs.bytebot.ai"&gt;docs.bytebot.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: Report bugs and request features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Whether it's:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🐛 Bug fixes&lt;/li&gt; 
 &lt;li&gt;✨ New features&lt;/li&gt; 
 &lt;li&gt;📚 Documentation improvements&lt;/li&gt; 
 &lt;li&gt;🌐 Translations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check existing &lt;a href="https://github.com/bytebot-ai/bytebot/issues"&gt;issues&lt;/a&gt; first&lt;/li&gt; 
 &lt;li&gt;Open an issue to discuss major changes&lt;/li&gt; 
 &lt;li&gt;Submit PRs with clear descriptions&lt;/li&gt; 
 &lt;li&gt;Join our &lt;a href="https://discord.com/invite/d9ewZkWPTP"&gt;Discord&lt;/a&gt; to discuss ideas&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Bytebot is open source under the Apache 2.0 license.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;Give your AI its own computer. See what it can do.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://railway.com/deploy/bytebot?referralCode=L9lKXQ"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;Built by &lt;a href="https://tantl.com"&gt;Tantl Labs&lt;/a&gt; and the open source community&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>PlasmoHQ/plasmo</title>
      <link>https://github.com/PlasmoHQ/plasmo</link>
      <description>&lt;p&gt;🧩 The Browser Extension Framework&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://plasmo.com"&gt; &lt;img alt="plasmo logo" width="75%" src="https://www.plasmo.com/assets/banner-black-on-white.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="License" href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/LICENSE"&gt; &lt;img alt="See License" src="https://img.shields.io/npm/l/plasmo" /&gt; &lt;/a&gt; &lt;a aria-label="NPM" href="https://www.npmjs.com/package/plasmo"&gt; &lt;img alt="NPM Install" src="https://img.shields.io/npm/v/plasmo?logo=npm" /&gt; &lt;/a&gt; &lt;a aria-label="Twitter" href="https://www.twitter.com/plasmohq"&gt; &lt;img alt="Follow PlasmoHQ on Twitter" src="https://img.shields.io/twitter/follow/plasmohq?logo=twitter" /&gt; &lt;/a&gt; &lt;a aria-label="Twitch Stream" href="https://www.twitch.tv/plasmohq"&gt; &lt;img alt="Watch our Live DEMO every Friday" src="https://img.shields.io/twitch/status/plasmohq?logo=twitch&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a aria-label="Discord" href="https://www.plasmo.com/s/d"&gt; &lt;img alt="Join our Discord for support and chat about our projects" src="https://img.shields.io/discord/946290204443025438?logo=discord&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; English | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.zh-CN.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.vi-VN.md"&gt;Tiếng Việt&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.de-DE.md"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.fr-FR.md"&gt;French&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.id-ID.md"&gt;Indonesian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.ru-RU.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.tr-TR.md"&gt;Turkish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.ja-JP.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/PlasmoHQ/plasmo/main/cli/plasmo/i18n/README.ko-KR.md"&gt;한국어&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Production Cloud:&lt;/strong&gt; We've built a cloud offering for browser extensions called &lt;a href="https://itero.plasmo.com"&gt;Itero&lt;/a&gt;. Check it out if you want instant beta testing and more awesome features.&lt;/p&gt; 
&lt;h1&gt;Plasmo Framework&lt;/h1&gt; 
&lt;p&gt;The &lt;a href="https://www.plasmo.com/"&gt;Plasmo&lt;/a&gt; Framework is a battery-packed browser extension SDK made by hackers for hackers. Build your product and stop worrying about config files and the odd peculiarities of building browser extensions.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It's like &lt;a href="https://nextjs.org/"&gt;Next.js&lt;/a&gt; for browser extensions!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://www.plasmo.com/assets/plasmo-cli-demo.gif" alt="CLI Demo" /&gt;&lt;/p&gt; 
&lt;h2&gt;Highlighted Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;First-class &lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; + &lt;a href="https://www.typescriptlang.org/"&gt;Typescript&lt;/a&gt; Support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/framework#where-is-the-manifestjson-file"&gt;Declarative Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/csui"&gt;Content Scripts UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/framework/tab-pages"&gt;Tab Pages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Live-reloading + React HMR&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/framework/env"&gt;&lt;code&gt;.env*&lt;/code&gt; files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/framework/storage"&gt;Storage API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/framework/messaging"&gt;Messaging API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/framework/remote-code"&gt;Remote code bundling&lt;/a&gt; (e.g., for Google Analytics)&lt;/li&gt; 
 &lt;li&gt;Targeting &lt;a href="https://docs.plasmo.com/framework/workflows/build#with-specific-target"&gt;multiple browser and manifest pairs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.plasmo.com/framework/workflows/submit"&gt;Automated deployment via BPP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Optional support for &lt;a href="https://github.com/PlasmoHQ/with-svelte"&gt;Svelte&lt;/a&gt; and &lt;a href="https://github.com/PlasmoHQ/with-vue"&gt;Vue&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And many, many more! 🚀&lt;/p&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 16.x or later&lt;/li&gt; 
 &lt;li&gt;MacOS, Windows, or Linux&lt;/li&gt; 
 &lt;li&gt;(Strongly Recommended) &lt;a href="https://pnpm.io/"&gt;pnpm&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have examples showcasing how one can use Plasmo with &lt;a href="https://github.com/PlasmoHQ/examples/tree/main/with-firebase-auth"&gt;Firebase Authentication&lt;/a&gt;, &lt;a href="https://github.com/PlasmoHQ/examples/tree/main/with-redux"&gt;Redux&lt;/a&gt;, &lt;a href="https://github.com/PlasmoHQ/examples/tree/main/with-supabase"&gt;Supabase authentication&lt;/a&gt;, &lt;a href="https://github.com/PlasmoHQ/examples/tree/main/with-tailwindcss"&gt;Tailwind&lt;/a&gt;, and many more. To check them out, &lt;a href="https://github.com/PlasmoHQ/examples"&gt;visit our examples repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://docs.plasmo.com/"&gt;documentation&lt;/a&gt; to get a more in-depth view into the Plasmo Framework.&lt;/p&gt; 
&lt;h2&gt;Browser Extensions Book&lt;/h2&gt; 
&lt;p&gt;For a more in-depth view into how browser extensions work, and how to develop them, we highly recommend Matt Frisbie's new book &lt;a href="https://buildingbrowserextensions.com/plasmo"&gt;"Building Browser Extensions"&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;pnpm create plasmo example-dir
cd example-dir
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The road ahead is filled with many turns.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Popup changes go in &lt;code&gt;popup.tsx&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Options page changes go in &lt;code&gt;options.tsx&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Content script changes go in &lt;code&gt;content.ts&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Background service worker changes go in &lt;code&gt;background.ts&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Directories&lt;/h3&gt; 
&lt;p&gt;You can also organize these files in their own directories:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ext-dir
├───assets
|   └───icon.png
├───popup
|   ├───index.tsx
|   └───button.tsx
├───options
|   ├───index.tsx
|   ├───utils.ts
|   └───input.tsx
├───contents
|   ├───site-one.ts
|   ├───site-two.ts
|   └───site-three.ts
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, you can also avoid putting source code in your root directory by putting them in a &lt;code&gt;src&lt;/code&gt; sub-directory, &lt;a href="https://docs.plasmo.com/framework/customization/src"&gt;following this guide&lt;/a&gt;. Note that &lt;code&gt;assets&lt;/code&gt; and other config files will still need to be in the root directory.&lt;/p&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;To see a list of supported browser targets, &lt;a href="https://docs.plasmo.com/framework/workflows/faq#what-are-the-officially-supported-browser-targets"&gt;please refer to our documentation here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Plasmo community can be found on &lt;a href="https://www.plasmo.com/s/d"&gt;Discord&lt;/a&gt;. This is the appropriate channel to get help with using the Plasmo Framework.&lt;/p&gt; 
&lt;p&gt;Our &lt;a href="https://github.com/PlasmoHQ/plasmo/raw/main/.github/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Plasmo community channels.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://github.com/PlasmoHQ/plasmo/raw/main/.github/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to learn more.&lt;/p&gt; 
&lt;p&gt;A big thanks to all of our amazing &lt;a href="https://github.com/PlasmoHQ/plasmo/graphs/contributors"&gt;contributors&lt;/a&gt; ❤️&lt;/p&gt; 
&lt;p&gt;Feel free to join the fun and send a PR!&lt;/p&gt; 
&lt;h3&gt;Plasmo Framework&lt;/h3&gt; 
&lt;a href="https://github.com/PlasmoHQ/plasmo/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=PlasmoHQ/plasmo" /&gt; &lt;/a&gt; 
&lt;h3&gt;&lt;a href="https://github.com/PlasmoHQ/examples"&gt;Plasmo Examples&lt;/a&gt;&lt;/h3&gt; 
&lt;a href="https://github.com/PlasmoHQ/examples/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=PlasmoHQ/examples" /&gt; &lt;/a&gt; 
&lt;h3&gt;&lt;a href="https://github.com/PlasmoHQ/storage"&gt;Plasmo Storage&lt;/a&gt;&lt;/h3&gt; 
&lt;a href="https://github.com/PlasmoHQ/storage/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=PlasmoHQ/storage" /&gt; &lt;/a&gt; 
&lt;h3&gt;&lt;a href="https://github.com/PlasmoHQ/bpp"&gt;Browser Platform Publisher&lt;/a&gt;&lt;/h3&gt; 
&lt;a href="https://github.com/PlasmoHQ/bpp/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=PlasmoHQ/bpp" /&gt; &lt;/a&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;Plasmo is currently alpha software, and some things might change from version to version, so please be mindful and use it at your own risk.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/PlasmoHQ/plasmo/raw/main/LICENSE"&gt;MIT&lt;/a&gt; ⭐ &lt;a href="https://www.plasmo.com"&gt;Plasmo&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>apple/embedding-atlas</title>
      <link>https://github.com/apple/embedding-atlas</link>
      <description>&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Embedding Atlas&lt;/h1&gt; 
&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🏷️ &lt;strong&gt;Automatic data clustering &amp;amp; labeling:&lt;/strong&gt; Interactively visualize and navigate overall data structure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🫧 &lt;strong&gt;Kernel density estimation &amp;amp; density contours:&lt;/strong&gt; Easily explore and distinguish between dense regions of data and outliers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧊 &lt;strong&gt;Order-independent transparency:&lt;/strong&gt; Ensure clear, accurate rendering of overlapping points.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Real-time search &amp;amp; nearest neighbors:&lt;/strong&gt; Find similar data to a given query or existing data point.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;WebGPU implementation (with WebGL 2 fallback):&lt;/strong&gt; Fast, smooth performance (up to few million points) with modern rendering stack.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📊 &lt;strong&gt;Multi-coordinated views for metadata exploration:&lt;/strong&gt; Interactively link and filter data across metadata columns.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please visit &lt;a href="https://apple.github.io/embedding-atlas"&gt;https://apple.github.io/embedding-atlas&lt;/a&gt; for a demo and documentation.&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="./packages/docs/assets/embedding-atlas-dark.png" /&gt; 
 &lt;img alt="screenshot of Embedding Atlas" src="https://raw.githubusercontent.com/apple/embedding-atlas/main/packages/docs/assets/embedding-atlas-light.png" /&gt; 
&lt;/picture&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;To use Embedding Atlas with Python:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install embedding-atlas

embedding-atlas &amp;lt;your-dataset.parquet&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the command line tool, Embedding Atlas is also available as a Jupyter widget:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from embedding_atlas.widget import EmbeddingAtlasWidget

# Show the Embedding Atlas widget for your data frame:
EmbeddingAtlasWidget(df)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, components from Embedding Atlas are also available in an npm package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install embedding-atlas
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas";

// or with React:
import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas/react";

// or Svelte:
import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas/svelte";
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, please visit &lt;a href="https://apple.github.io/embedding-atlas/overview.html"&gt;https://apple.github.io/embedding-atlas/overview.html&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;BibTeX&lt;/h2&gt; 
&lt;p&gt;For the Embedding Atlas tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{ren2025embedding,
  title={Embedding Atlas: Low-Friction, Interactive Embedding Visualization},
  author={Donghao Ren and Fred Hohman and Halden Lin and Dominik Moritz},
  year={2025},
  eprint={2505.06386},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2505.06386},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the algorithm that automatically produces clusters and labels in the embedding view:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{ren2025scalable,
  title={A Scalable Approach to Clustering Embedding Projections},
  author={Donghao Ren and Fred Hohman and Dominik Moritz},
  year={2025},
  eprint={2504.07285},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2504.07285},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;This repo contains multiple sub-packages:&lt;/p&gt; 
&lt;p&gt;Frontend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/component&lt;/code&gt;: The &lt;code&gt;EmbeddingView&lt;/code&gt; and &lt;code&gt;EmbeddingViewMosaic&lt;/code&gt; components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/table&lt;/code&gt;: The &lt;code&gt;Table&lt;/code&gt; component.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/viewer&lt;/code&gt;: The frontend application for visualizing embedding and other columns. It also provides the &lt;code&gt;EmbeddingAtlas&lt;/code&gt; component that can be embedded in other applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/density-clustering&lt;/code&gt;: The density clustering algorithm, written in Rust.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/umap-wasm&lt;/code&gt;: An implementation of UMAP algorithm in WebAssembly (with the &lt;a href="https://github.com/libscran/umappp"&gt;umappp&lt;/a&gt; C++ library).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/embedding-atlas&lt;/code&gt;: The &lt;code&gt;embedding-atlas&lt;/code&gt; package that get published. It imports all of the above and exposes their API in a single package.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Python:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;packages/backend&lt;/code&gt;: A Python package named &lt;code&gt;embedding-atlas&lt;/code&gt; that provides the &lt;code&gt;embedding-atlas&lt;/code&gt; command line tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;packages/docs&lt;/code&gt;: The documentation website.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, please visit &lt;a href="https://apple.github.io/embedding-atlas/develop.html"&gt;https://apple.github.io/embedding-atlas/develop.html&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is released under the &lt;a href="https://raw.githubusercontent.com/apple/embedding-atlas/main/LICENSE"&gt;&lt;code&gt;MIT license&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/lexical</title>
      <link>https://github.com/facebook/lexical</link>
      <description>&lt;p&gt;Lexical is an extensible text editor framework that provides excellent reliability, accessibility and performance.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://lexical.dev"&gt;Lexical&lt;/a&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img alt="GitHub Workflow Status" src="https://img.shields.io/github/actions/workflow/status/facebook/lexical/tests.yml" /&gt; &lt;a href="https://www.npmjs.com/package/lexical"&gt; &lt;img alt="Visit the NPM page" src="https://img.shields.io/npm/v/lexical" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/KmG4wQnnD9"&gt; &lt;img alt="Add yourself to our Discord" src="https://img.shields.io/discord/953974421008293909" /&gt; &lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=lexicaljs"&gt; &lt;img alt="Follow us on X" src="https://img.shields.io/twitter/follow/lexicaljs?style=social" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Lexical is an extensible JavaScript web text-editor framework with an emphasis on reliability, accessibility, and performance. Lexical aims to provide a best-in-class developer experience, so you can easily prototype and build features with confidence. Combined with a highly extensible architecture, Lexical allows developers to create unique text editing experiences that scale in size and functionality.&lt;/p&gt; 
&lt;p&gt;For documentation and more information about Lexical, be sure to &lt;a href="https://lexical.dev"&gt;visit the Lexical website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Here are some examples of what you can do with Lexical:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://playground.lexical.dev"&gt;Lexical Playground&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackblitz.com/github/facebook/lexical/tree/main/examples/react-plain-text?embed=1&amp;amp;file=src%2FApp.tsx&amp;amp;terminalHeight=0&amp;amp;ctl=1&amp;amp;showSidebar=0&amp;amp;devtoolsheight=0&amp;amp;view=preview"&gt;Plain text sandbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackblitz.com/github/facebook/lexical/tree/main/examples/react-rich?embed=1&amp;amp;file=src%2FApp.tsx&amp;amp;terminalHeight=0&amp;amp;ctl=1&amp;amp;showSidebar=0&amp;amp;devtoolsheight=0&amp;amp;view=preview"&gt;Rich text sandbox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Overview:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/facebook/lexical/main/#getting-started-with-react"&gt;Getting started with React&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/facebook/lexical/main/#lexical-is-a-framework"&gt;Lexical is a framework&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/facebook/lexical/main/#working-with-lexical"&gt;Working with Lexical&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/facebook/lexical/main/#contributing-to-lexical"&gt;Contributing to Lexical&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Getting started with React&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Lexical is not only limited to React. Lexical can support any underlying DOM based library once bindings for that library have been created.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Install &lt;code&gt;lexical&lt;/code&gt; and &lt;code&gt;@lexical/react&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install --save lexical @lexical/react
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Below is an example of a basic plain text editor using &lt;code&gt;lexical&lt;/code&gt; and &lt;code&gt;@lexical/react&lt;/code&gt; (&lt;a href="https://stackblitz.com/github/facebook/lexical/tree/main/examples/react-plain-text?embed=1&amp;amp;file=src%2FApp.tsx&amp;amp;terminalHeight=0&amp;amp;ctl=1&amp;amp;showSidebar=0&amp;amp;devtoolsheight=0&amp;amp;view=preview"&gt;try it yourself&lt;/a&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import {$getRoot, $getSelection} from 'lexical';
import {useEffect} from 'react';

import {LexicalComposer} from '@lexical/react/LexicalComposer';
import {PlainTextPlugin} from '@lexical/react/LexicalPlainTextPlugin';
import {ContentEditable} from '@lexical/react/LexicalContentEditable';
import {HistoryPlugin} from '@lexical/react/LexicalHistoryPlugin';
import {OnChangePlugin} from '@lexical/react/LexicalOnChangePlugin';
import {useLexicalComposerContext} from '@lexical/react/LexicalComposerContext';
import {LexicalErrorBoundary} from '@lexical/react/LexicalErrorBoundary';

const theme = {
  // Theme styling goes here
  // ...
}

// When the editor changes, you can get notified via the
// LexicalOnChangePlugin!
function onChange(editorState) {
  editorState.read(() =&amp;gt; {
    // Read the contents of the EditorState here.
    const root = $getRoot();
    const selection = $getSelection();

    console.log(root, selection);
  });
}

// Lexical React plugins are React components, which makes them
// highly composable. Furthermore, you can lazy load plugins if
// desired, so you don't pay the cost for plugins until you
// actually use them.
function MyCustomAutoFocusPlugin() {
  const [editor] = useLexicalComposerContext();

  useEffect(() =&amp;gt; {
    // Focus the editor when the effect fires!
    editor.focus();
  }, [editor]);

  return null;
}

// Catch any errors that occur during Lexical updates and log them
// or throw them as needed. If you don't throw them, Lexical will
// try to recover gracefully without losing user data.
function onError(error) {
  console.error(error);
}

function Editor() {
  const initialConfig = {
    namespace: 'MyEditor',
    theme,
    onError,
  };

  return (
    &amp;lt;LexicalComposer initialConfig={initialConfig}&amp;gt;
      &amp;lt;PlainTextPlugin
        contentEditable={
          &amp;lt;ContentEditable
            aria-placeholder={'Enter some text...'}
            placeholder={&amp;lt;div&amp;gt;Enter some text...&amp;lt;/div&amp;gt;}
          /&amp;gt;
        }
        ErrorBoundary={LexicalErrorBoundary}
      /&amp;gt;
      &amp;lt;OnChangePlugin onChange={onChange} /&amp;gt;
      &amp;lt;HistoryPlugin /&amp;gt;
      &amp;lt;MyCustomAutoFocusPlugin /&amp;gt;
    &amp;lt;/LexicalComposer&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Lexical is a framework&lt;/h2&gt; 
&lt;p&gt;The core of Lexical is a dependency-free text editor framework that allows developers to build powerful, simple and complex, editor surfaces. Lexical has a few concepts that are worth exploring:&lt;/p&gt; 
&lt;h3&gt;Editor instances&lt;/h3&gt; 
&lt;p&gt;Editor instances are the core thing that wires everything together. You can attach a contenteditable DOM element to editor instances, and also register listeners and commands. Most importantly, the editor allows for updates to its &lt;code&gt;EditorState&lt;/code&gt;. You can create an editor instance using the &lt;code&gt;createEditor()&lt;/code&gt; API, however you normally don't have to worry when using framework bindings such as &lt;code&gt;@lexical/react&lt;/code&gt; as this is handled for you.&lt;/p&gt; 
&lt;h3&gt;Editor States&lt;/h3&gt; 
&lt;p&gt;An Editor State is the underlying data model that represents what you want to show on the DOM. Editor States contain two parts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;a Lexical node tree&lt;/li&gt; 
 &lt;li&gt;a Lexical selection object&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Editor States are immutable once created, and in order to create one, you must do so via &lt;code&gt;editor.update(() =&amp;gt; {...})&lt;/code&gt;. However, you can also "hook" into an existing update using node transforms or command handlers – which are invoked as part of an existing update workflow to prevent cascading/waterfalling of updates. You can retrieve the current editor state using &lt;code&gt;editor.getEditorState()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Editor States are also fully serializable to JSON and can easily be serialized back into the editor using &lt;code&gt;editor.parseEditorState()&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Reading and Updating Editor State&lt;/h3&gt; 
&lt;p&gt;When you want to read and/or update the Lexical node tree, you must do it via &lt;code&gt;editor.update(() =&amp;gt; {...})&lt;/code&gt;. You may also do read-only operations with the editor state via &lt;code&gt;editor.read(() =&amp;gt; {...})&lt;/code&gt; or &lt;code&gt;editor.getEditorState().read(() =&amp;gt; {...})&lt;/code&gt;. The closure passed to the update or read call is important, and must be synchronous. It's the only place where you have full "lexical" context of the active editor state, and providing you with access to the Editor State's node tree. We promote using the convention of using &lt;code&gt;$&lt;/code&gt; prefixed functions (such as &lt;code&gt;$getRoot()&lt;/code&gt;) to convey that these functions must be called in this context. Attempting to use them outside of a read or update will trigger a runtime error.&lt;/p&gt; 
&lt;p&gt;For those familiar with React Hooks, you can think of these $functions as having similar functionality:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;em&gt;Feature&lt;/em&gt;&lt;/th&gt; 
   &lt;th&gt;React Hooks&lt;/th&gt; 
   &lt;th&gt;Lexical $functions&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Naming Convention&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;useFunction&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;$function&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Context Required&lt;/td&gt; 
   &lt;td&gt;Can only be called while rendering&lt;/td&gt; 
   &lt;td&gt;Can only be called while in an update or read&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can be composed&lt;/td&gt; 
   &lt;td&gt;Hooks can call other hooks&lt;/td&gt; 
   &lt;td&gt;$functions can call other $functions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Must be synchronous&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Other rules&lt;/td&gt; 
   &lt;td&gt;❌ Must be called unconditionally in the same order&lt;/td&gt; 
   &lt;td&gt;✅ None&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Node Transforms and Command Listeners are called with an implicit &lt;code&gt;editor.update(() =&amp;gt; {...})&lt;/code&gt; context.&lt;/p&gt; 
&lt;p&gt;It is permitted to do nested updates, or nested reads, but an update should not be nested in a read or vice versa. For example, &lt;code&gt;editor.update(() =&amp;gt; editor.update(() =&amp;gt; {...}))&lt;/code&gt; is allowed. It is permitted to nest an &lt;code&gt;editor.read&lt;/code&gt; at the end of an &lt;code&gt;editor.update&lt;/code&gt;, but this will immediately flush the update and any additional update in that callback will throw an error.&lt;/p&gt; 
&lt;p&gt;All Lexical Nodes are dependent on the associated Editor State. With few exceptions, you should only call methods and access properties of a Lexical Node while in a read or update call (just like &lt;code&gt;$&lt;/code&gt; functions). Methods on Lexical Nodes will first attempt to locate the latest (and possibly a writable) version of the node from the active editor state using the node's unique key. All versions of a logical node have the same key. These keys are managed by the Editor, are only present at runtime (not serialized), and should be considered to be random and opaque (do not write tests that assume hard-coded values for keys).&lt;/p&gt; 
&lt;p&gt;This is done because the editor state's node tree is recursively frozen after reconciliation to support efficient time travel (undo/redo and similar use cases). Methods that update nodes first call &lt;code&gt;node.getWritable()&lt;/code&gt;, which will create a writable clone of a frozen node. This would normally mean that any existing references (such as local variables) would refer to a stale version of the node, but having Lexical Nodes always refer to the editor state allows for a simpler and less error-prone data model.&lt;/p&gt; 
&lt;p&gt;:::tip&lt;/p&gt; 
&lt;p&gt;If you use &lt;code&gt;editor.read(() =&amp;gt; { /* callback */ })&lt;/code&gt; it will first flush any pending updates, so you will always see a consistent state. When you are in an &lt;code&gt;editor.update&lt;/code&gt;, you will always be working with the pending state, where node transforms and DOM reconciliation may not have run yet. &lt;code&gt;editor.getEditorState().read()&lt;/code&gt; will use the latest reconciled &lt;code&gt;EditorState&lt;/code&gt; (after any node transforms, DOM reconciliation, etc. have already run), any pending &lt;code&gt;editor.update&lt;/code&gt; mutations will not yet be visible.&lt;/p&gt; 
&lt;p&gt;:::&lt;/p&gt; 
&lt;h3&gt;DOM Reconciler&lt;/h3&gt; 
&lt;p&gt;Lexical has its own DOM reconciler that takes a set of Editor States (always the "current" and the "pending") and applies a "diff" on them. It then uses this diff to update only the parts of the DOM that need changing. You can think of this as a kind-of virtual DOM, except Lexical is able to skip doing much of the diffing work, as it knows what was mutated in a given update. The DOM reconciler adopts performance optimizations that benefit the typical heuristics of a content editable – and is able to ensure consistency for LTR and RTL languages automatically.&lt;/p&gt; 
&lt;h3&gt;Listeners, Node Transforms and Commands&lt;/h3&gt; 
&lt;p&gt;Outside of invoking updates, the bulk of work done with Lexical is via listeners, node transforms and commands. These all stem from the editor and are prefixed with &lt;code&gt;register&lt;/code&gt;. Another important feature is that all the register methods return a function to easily unsubscribe them. For example here is how you listen to an update to a Lexical editor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const unregisterListener = editor.registerUpdateListener(({editorState}) =&amp;gt; {
  // An update has occurred!
  console.log(editorState);
});

// Ensure we remove the listener later!
unregisterListener();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Commands are the communication system used to wire everything together in Lexical. Custom commands can be created using &lt;code&gt;createCommand()&lt;/code&gt; and dispatched to an editor using &lt;code&gt;editor.dispatchCommand(command, payload)&lt;/code&gt;. Lexical dispatches commands internally when key presses are triggered and when other important signals occur. Commands can also be handled using &lt;code&gt;editor.registerCommand(handler, priority)&lt;/code&gt;, and incoming commands are propagated through all handlers by priority until a handler stops the propagation (in a similar way to event propagation in the browser).&lt;/p&gt; 
&lt;h2&gt;Working with Lexical&lt;/h2&gt; 
&lt;p&gt;This section covers how to use Lexical, independently of any framework or library. For those intending to use Lexical in their React applications, it's advisable to &lt;a href="https://github.com/facebook/lexical/tree/main/packages/lexical-react/src"&gt;check out the source-code for the hooks that are shipped in &lt;code&gt;@lexical/react&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Creating an editor and using it&lt;/h3&gt; 
&lt;p&gt;When you work with Lexical, you normally work with a single editor instance. An editor instance can be thought of as the one responsible for wiring up an EditorState with the DOM. The editor is also the place where you can register custom nodes, add listeners, and transforms.&lt;/p&gt; 
&lt;p&gt;An editor instance can be created from the &lt;code&gt;lexical&lt;/code&gt; package and accepts an optional configuration object that allows for theming and other options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import {createEditor} from 'lexical';

const config = {
  namespace: 'MyEditor',
  theme: {
    ...
  },
};

const editor = createEditor(config);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once you have an editor instance, when ready, you can associate the editor instance with a content editable &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element in your document:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const contentEditableElement = document.getElementById('editor');

editor.setRootElement(contentEditableElement);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to clear the editor instance from the element, you can pass &lt;code&gt;null&lt;/code&gt;. Alternatively, you can switch to another element if need be, just pass an alternative element reference to &lt;code&gt;setRootElement()&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Working with Editor States&lt;/h3&gt; 
&lt;p&gt;With Lexical, the source of truth is not the DOM, but rather an underlying state model that Lexical maintains and associates with an editor instance. You can get the latest editor state from an editor by calling &lt;code&gt;editor.getEditorState()&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Editor states are serializable to JSON, and the editor instance provides a useful method to deserialize stringified editor states.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const stringifiedEditorState = JSON.stringify(editor.getEditorState().toJSON());

const newEditorState = editor.parseEditorState(stringifiedEditorState);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updating an editor&lt;/h3&gt; 
&lt;p&gt;There are a few ways to update an editor instance:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trigger an update with &lt;code&gt;editor.update()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Setting the editor state via &lt;code&gt;editor.setEditorState()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Applying a change as part of an existing update via &lt;code&gt;editor.registerNodeTransform()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Using a command listener with &lt;code&gt;editor.registerCommand(EXAMPLE_COMMAND, () =&amp;gt; {...}, priority)&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The most common way to update the editor is to use &lt;code&gt;editor.update()&lt;/code&gt;. Calling this function requires a function to be passed in that will provide access to mutate the underlying editor state. When starting a fresh update, the current editor state is cloned and used as the starting point. From a technical perspective, this means that Lexical leverages a technique called double-buffering during updates. There's an editor state to represent what is current on the screen, and another work-in-progress editor state that represents future changes.&lt;/p&gt; 
&lt;p&gt;Reconciling an update is typically an async process that allows Lexical to batch multiple synchronous updates of the editor state together in a single update to the DOM – improving performance. When Lexical is ready to commit the update to the DOM, the underlying mutations and changes in the update batch will form a new immutable editor state. Calling &lt;code&gt;editor.getEditorState()&lt;/code&gt; will then return the latest editor state based on the changes from the update.&lt;/p&gt; 
&lt;p&gt;Here's an example of how you can update an editor instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import {$getRoot, $getSelection, $createParagraphNode} from 'lexical';

// Inside the `editor.update` you can use special $ prefixed helper functions.
// These functions cannot be used outside the closure, and will error if you try.
// (If you're familiar with React, you can imagine these to be a bit like using a hook
// outside of a React function component).
editor.update(() =&amp;gt; {
  // Get the RootNode from the EditorState
  const root = $getRoot();

  // Get the selection from the EditorState
  const selection = $getSelection();

  // Create a new ParagraphNode
  const paragraphNode = $createParagraphNode();

  // Create a new TextNode
  const textNode = $createTextNode('Hello world');

  // Append the text node to the paragraph
  paragraphNode.append(textNode);

  // Finally, append the paragraph to the root
  root.append(paragraphNode);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to know when the editor updates so you can react to the changes, you can add an update listener to the editor, as shown below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;editor.registerUpdateListener(({editorState}) =&amp;gt; {
  // The latest EditorState can be found as `editorState`.
  // To read the contents of the EditorState, use the following API:

  editorState.read(() =&amp;gt; {
    // Just like editor.update(), .read() expects a closure where you can use
    // the $ prefixed helper functions.
  });
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing to Lexical&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://github.com/facebook/lexical/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Optional but recommended, use VSCode for development&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download and install VSCode&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Download from &lt;a href="https://code.visualstudio.com/download"&gt;here&lt;/a&gt; (it’s recommended to use the unmodified version)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install extensions&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=flowtype.flow-for-vscode"&gt;Flow Language Support&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Make sure to follow the setup steps in the README&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode"&gt;Prettier&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Set prettier as the default formatter in &lt;code&gt;editor.defaultFormatter&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;Optional: set format on save &lt;code&gt;editor.formatOnSave&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint"&gt;ESlint&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lexical.dev/docs/intro"&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lexical.dev/docs/concepts/editor-state"&gt;Concepts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lexical.dev/docs/design"&gt;How Lexical was designed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lexical.dev/docs/testing"&gt;Testing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lexical.dev/docs/maintainers-guide"&gt;Maintainers' Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Browser Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Firefox 52+&lt;/li&gt; 
 &lt;li&gt;Chrome 49+&lt;/li&gt; 
 &lt;li&gt;Edge 79+ (when Edge switched to Chromium)&lt;/li&gt; 
 &lt;li&gt;Safari 11+&lt;/li&gt; 
 &lt;li&gt;iOS 11+ (Safari)&lt;/li&gt; 
 &lt;li&gt;iPad OS 13+ (Safari)&lt;/li&gt; 
 &lt;li&gt;Android Chrome 72+&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note: Lexical does not support Internet Explorer or legacy versions of Edge.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a new branch 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;git checkout -b my-new-branch&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Commit your changes 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;git commit -a -m 'Description of the changes'&lt;/code&gt; 
    &lt;ul&gt; 
     &lt;li&gt;There are many ways of doing this and this is just a suggestion&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Push your branch to GitHub 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;git push origin my-new-branch&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Go to the repository page in GitHub and click on "Compare &amp;amp; pull request" 
  &lt;ul&gt; 
   &lt;li&gt;The &lt;a href="https://cli.github.com/manual/gh_pr_create"&gt;GitHub CLI&lt;/a&gt; allows you to skip the web interface for this step (and much more)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you have any questions about Lexical, would like to discuss a bug report, or have questions about new integrations, feel free to join us at &lt;a href="https://discord.gg/KmG4wQnnD9"&gt;our Discord server&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Lexical engineers are checking this regularly.&lt;/p&gt; 
&lt;h2&gt;Running tests&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run test-unit&lt;/code&gt; runs only unit tests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test-e2e-chromium&lt;/code&gt; runs only chromium e2e tests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run debug-test-e2e-chromium&lt;/code&gt; runs only chromium e2e tests in head mode for debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test-e2e-firefox&lt;/code&gt; runs only firefox e2e tests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run debug-test-e2e-firefox&lt;/code&gt; runs only firefox e2e tests in head mode for debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test-e2e-webkit&lt;/code&gt; runs only webkit e2e tests.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run debug-test-e2e-webkit&lt;/code&gt; runs only webkit e2e tests in head mode for debugging.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;Lexical is &lt;a href="https://github.com/facebook/lexical/raw/main/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>angular/angular</title>
      <link>https://github.com/angular/angular</link>
      <description>&lt;p&gt;Deliver web apps with confidence 🚀&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;Angular - The modern web developer's platform&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/angular/angular/main/adev/src/assets/images/press-kit/angular_icon_gradient.gif" alt="angular-logo" width="120px" height="120px" /&gt; &lt;br /&gt; &lt;em&gt;Angular is a development platform for building mobile and desktop web applications &lt;br /&gt; using TypeScript/JavaScript and other languages.&lt;/em&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://angular.dev/"&gt;&lt;strong&gt;angular.dev&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/angular/angular/main/CONTRIBUTING.md"&gt;Contributing Guidelines&lt;/a&gt; · &lt;a href="https://github.com/angular/angular/issues"&gt;Submit an Issue&lt;/a&gt; · &lt;a href="https://blog.angular.dev/"&gt;Blog&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/@angular/core"&gt; &lt;img src="https://img.shields.io/npm/v/@angular/core.svg?logo=npm&amp;amp;logoColor=fff&amp;amp;label=NPM+package&amp;amp;color=limegreen" alt="Angular on npm" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Get started with Angular, learn the fundamentals and explore advanced topics on our documentation website.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/tutorials/learn-angular"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/essentials"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/tutorials/learn-angular/1-components-in-angular"&gt;Components and Templates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/tutorials/learn-angular/15-forms"&gt;Forms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/api"&gt;API&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/guide/elements"&gt;Angular Elements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/guide/ssr"&gt;Server Side Rendering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/tools/cli/schematics"&gt;Schematics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/guide/ngmodules/lazy-loading"&gt;Lazy Loading&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/guide/animations"&gt;Animations&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local Development&lt;/h3&gt; 
&lt;p&gt;To contribute to the Angular Docs, check out the &lt;a href="https://raw.githubusercontent.com/angular/angular/main/adev/README.md"&gt;Angular.dev README&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development Setup&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; which includes &lt;a href="https://www.npmjs.com/get-npm"&gt;Node Package Manager&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Setting Up a Project&lt;/h3&gt; 
&lt;p&gt;Install the Angular CLI globally:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install -g @angular/cli
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create workspace:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ng new [PROJECT NAME]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the application:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;cd [PROJECT NAME]
ng serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Angular is cross-platform, fast, scalable, has incredible tooling, and is loved by millions.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://angular.dev/tutorials/learn-angular"&gt;Get started in 5 minutes&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt; &lt;img src="https://raw.githubusercontent.com/angular/angular/main/contributing-docs/images/angular-ecosystem-logos.png" alt="angular ecosystem logos" width="500px" height="auto" /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://angular.dev/tools/cli"&gt;Angular Command Line (CLI)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://material.angular.dev/"&gt;Angular Material&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/angular/angular/main/CHANGELOG.md"&gt;Learn about the latest improvements&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href="https://angular.dev/update-guide/"&gt;upgrade guide&lt;/a&gt; to find out the best way to upgrade your project.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Contributing Guidelines&lt;/h3&gt; 
&lt;p&gt;Read through our &lt;a href="https://raw.githubusercontent.com/angular/angular/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; to learn about our submission process, coding rules, and more.&lt;/p&gt; 
&lt;h3&gt;Want to Help?&lt;/h3&gt; 
&lt;p&gt;Want to report a bug, contribute some code, or improve the documentation? Excellent! Read up on our guidelines for &lt;a href="https://raw.githubusercontent.com/angular/angular/main/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; and then check out one of our issues labeled as &lt;kbd&gt;&lt;a href="https://github.com/angular/angular/labels/help%20wanted"&gt;help wanted&lt;/a&gt;&lt;/kbd&gt; or &lt;kbd&gt;&lt;a href="https://github.com/angular/angular/labels/good%20first%20issue"&gt;good first issue&lt;/a&gt;&lt;/kbd&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of Conduct&lt;/h3&gt; 
&lt;p&gt;Help us keep Angular open and inclusive. Please read and follow our &lt;a href="https://raw.githubusercontent.com/angular/angular/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join the conversation and help the community.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.twitter.com/angular"&gt;X (formerly Twitter)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bsky.app/profile/angular.dev"&gt;Bluesky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/angular"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtube.com/angular"&gt;YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/angular"&gt;StackOverflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Find a Local &lt;a href="https://www.meetup.com/find/?keywords=angular"&gt;Meetup&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://www.github.com/angular/angular"&gt;&lt;img src="https://img.shields.io/badge/angular-love-blue?logo=angular&amp;amp;angular=love" alt="Love Angular badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Love Angular? Give our repo a star &lt;span&gt;⭐&lt;/span&gt; &lt;span&gt;⬆&lt;/span&gt;.&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gristlabs/grist-core</title>
      <link>https://github.com/gristlabs/grist-core</link>
      <description>&lt;p&gt;Grist is the evolution of spreadsheets.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Grist&lt;/h1&gt; 
&lt;p&gt;Grist is a modern relational spreadsheet. It combines the flexibility of a spreadsheet with the robustness of a database.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;grist-core&lt;/code&gt; (this repo) has what you need to run a powerful server for hosting spreadsheets.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/gristlabs/grist-desktop"&gt;&lt;code&gt;grist-desktop&lt;/code&gt;&lt;/a&gt; is a Linux/macOS/Windows desktop app for viewing and editing spreadsheets stored locally.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/gristlabs/grist-static"&gt;&lt;code&gt;grist-static&lt;/code&gt;&lt;/a&gt; is a fully in-browser build of Grist for displaying spreadsheets on a website without back-end support.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Grist is developed by &lt;a href="https://www.linkedin.com/company/grist-labs/"&gt;Grist Labs&lt;/a&gt;, an NYC-based company 🇺🇸🗽. The French government 🇫🇷 organizations &lt;a href="https://donnees.incubateur.anct.gouv.fr/toolbox/grist"&gt;ANCT Données et Territoires&lt;/a&gt; and &lt;a href="https://www.numerique.gouv.fr/dinum/"&gt;DINUM (Direction Interministérielle du Numérique)&lt;/a&gt; have also made significant contributions to the codebase.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;grist-core&lt;/code&gt;, &lt;code&gt;grist-desktop&lt;/code&gt;, and &lt;code&gt;grist-static&lt;/code&gt; repositories are all open source (Apache License, Version 2.0). Grist Labs offers free and paid hosted services at &lt;a href="https://getgrist.com"&gt;getgrist.com&lt;/a&gt;, sells an Enterprise product, and offers &lt;a href="https://support.getgrist.com/install/grist-builder-edition/"&gt;cloud packaging&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Questions? Feedback? Want to share what you're building with Grist? Join our &lt;a href="https://discord.gg/MYKpYQ3fbP"&gt;official Discord server&lt;/a&gt; or visit our &lt;a href="https://community.getgrist.com/"&gt;Community forum&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/118367/151245587-892e50a6-41f5-4b74-9786-fe3566f6b1fb.mp4"&gt;https://user-images.githubusercontent.com/118367/151245587-892e50a6-41f5-4b74-9786-fe3566f6b1fb.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features in &lt;code&gt;grist-core&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;To see exactly what is present in &lt;code&gt;grist-core&lt;/code&gt;, you can run the &lt;a href="https://github.com/gristlabs/grist-desktop"&gt;desktop app&lt;/a&gt;, or use &lt;a href="https://raw.githubusercontent.com/gristlabs/grist-core/main/#using-grist"&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/a&gt;. The absolute fastest way to try Grist out is to visit &lt;a href="https://docs.getgrist.com"&gt;docs.getgrist.com&lt;/a&gt; and play with a spreadsheet there immediately –&amp;nbsp;though if you do, please read the list of &lt;a href="https://raw.githubusercontent.com/gristlabs/grist-core/main/#features-not-in-grist-core"&gt;extra extensions&lt;/a&gt; that are not in &lt;code&gt;grist-core&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;However you try it, you'll quickly see that Grist is a hybrid database/spreadsheet, meaning that:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Columns work like they do in databases: they are named, and they hold one kind of data.&lt;/li&gt; 
 &lt;li&gt;Columns can be filled by formula, spreadsheet-style, with automatic updates when referenced cells change.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This difference can confuse people coming directly from Excel or Google Sheets. Give it a chance! There's also a &lt;a href="https://www.getgrist.com/blog/grist-for-spreadsheet-users/"&gt;Grist for Spreadsheet Users&lt;/a&gt; article to help get you oriented. If you're coming from Airtable, you'll find the model familiar (and there's also our &lt;a href="https://www.getgrist.com/blog/grist-v-airtable/"&gt;Grist vs Airtable&lt;/a&gt; article for a direct comparison).&lt;/p&gt; 
&lt;p&gt;Here are some specific feature highlights of Grist:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Python formulas. 
  &lt;ul&gt; 
   &lt;li&gt;Full &lt;a href="https://support.getgrist.com/formulas/#python"&gt;Python syntax is supported&lt;/a&gt;, including the standard library.&lt;/li&gt; 
   &lt;li&gt;Many &lt;a href="https://support.getgrist.com/functions/"&gt;Excel functions&lt;/a&gt; also available.&lt;/li&gt; 
   &lt;li&gt;An &lt;a href="https://www.getgrist.com/ai-formula-assistant/"&gt;AI Assistant&lt;/a&gt; specifically tuned for formula generation (using OpenAI gpt-3.5-turbo or &lt;a href="https://ai.meta.com/llama/"&gt;Llama&lt;/a&gt; via &lt;a href="https://github.com/abetlen/llama-cpp-python"&gt;llama-cpp-python&lt;/a&gt;).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;A portable, self-contained format. 
  &lt;ul&gt; 
   &lt;li&gt;Based on SQLite, the most widely deployed database engine.&lt;/li&gt; 
   &lt;li&gt;Any tool that can read SQLite can read numeric and text data from a Grist file.&lt;/li&gt; 
   &lt;li&gt;Enables &lt;a href="https://support.getgrist.com/exports/#backing-up-an-entire-document"&gt;backups&lt;/a&gt; that you can confidently restore in full.&lt;/li&gt; 
   &lt;li&gt;Great for moving between different hosts.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Can be displayed on a static website with &lt;a href="https://github.com/gristlabs/grist-static"&gt;&lt;code&gt;grist-static&lt;/code&gt;&lt;/a&gt; – no special server needed.&lt;/li&gt; 
 &lt;li&gt;A self-contained desktop app for viewing and editing locally: &lt;a href="https://github.com/gristlabs/grist-desktop"&gt;&lt;code&gt;grist-desktop&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Convenient editing and formatting features. 
  &lt;ul&gt; 
   &lt;li&gt;Choices and &lt;a href="https://support.getgrist.com/col-types/#choice-list-columns"&gt;choice lists&lt;/a&gt;, for adding colorful tags to records.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://support.getgrist.com/col-refs/#creating-a-new-reference-list-column"&gt;References&lt;/a&gt; and reference lists, for cross-referencing records in other tables.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://support.getgrist.com/col-types/#attachment-columns"&gt;Attachments&lt;/a&gt;, to include media or document files in records.&lt;/li&gt; 
   &lt;li&gt;Dates and times, toggles, and special numerics such as currency all have specialized editors and formatting options.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://support.getgrist.com/conditional-formatting/"&gt;Conditional Formatting&lt;/a&gt;, letting you control the style of cells with formulas to draw attention to important information.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Drag-and-drop dashboards. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://support.getgrist.com/widget-chart/"&gt;Charts&lt;/a&gt;, &lt;a href="https://support.getgrist.com/widget-card/"&gt;card views&lt;/a&gt; and a &lt;a href="https://support.getgrist.com/widget-calendar/"&gt;calendar widget&lt;/a&gt; for visualization.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://support.getgrist.com/summary-tables/"&gt;Summary tables&lt;/a&gt; for summing and counting across groups.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://support.getgrist.com/linking-widgets/"&gt;Widget linking&lt;/a&gt; streamlines filtering and editing data. Grist has a unique approach to visualization, where you can lay out and link distinct widgets to show together, without cramming mixed material into a table.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://support.getgrist.com/search-sort-filter/#filter-buttons"&gt;Filter bar&lt;/a&gt; for quick slicing and dicing.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/imports/#updating-existing-records"&gt;Incremental imports&lt;/a&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;Import a CSV of the last three months activity from your bank...&lt;/li&gt; 
   &lt;li&gt;...and import new activity a month later without fuss or duplication.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/widget-form/"&gt;Native forms&lt;/a&gt;. Create forms that feed directly into your spreadsheet without fuss.&lt;/li&gt; 
 &lt;li&gt;Integrations. 
  &lt;ul&gt; 
   &lt;li&gt;A &lt;a href="https://support.getgrist.com/api/"&gt;REST API&lt;/a&gt;, &lt;a href="https://support.getgrist.com/integrators/#integrations-via-zapier"&gt;Zapier actions/triggers&lt;/a&gt;, and support from similar &lt;a href="https://support.getgrist.com/integrators/"&gt;integrators&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Import/export to Google drive, Excel format, CSV.&lt;/li&gt; 
   &lt;li&gt;Link data with &lt;a href="https://support.getgrist.com/widget-custom/#_top"&gt;custom widgets&lt;/a&gt;, hosted externally.&lt;/li&gt; 
   &lt;li&gt;Configurable outgoing webhooks.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://templates.getgrist.com/"&gt;Many templates&lt;/a&gt; to get you started, from investment research to organizing treasure hunts.&lt;/li&gt; 
 &lt;li&gt;Access control options. 
  &lt;ul&gt; 
   &lt;li&gt;(You'll need SSO logins set up to make use of these options; &lt;a href="https://github.com/gristlabs/grist-omnibus"&gt;&lt;code&gt;grist-omnibus&lt;/code&gt;&lt;/a&gt; has a prepackaged solution if configuring this feels daunting)&lt;/li&gt; 
   &lt;li&gt;Share &lt;a href="https://support.getgrist.com/sharing/"&gt;individual documents&lt;/a&gt;, workspaces, or &lt;a href="https://support.getgrist.com/team-sharing/"&gt;team sites&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Control access to &lt;a href="https://support.getgrist.com/access-rules/"&gt;individual rows, columns, and tables&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Control access based on cell values and user attributes.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Self-maintainable. 
  &lt;ul&gt; 
   &lt;li&gt;Useful for intranet operation and specific compliance requirements.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Sandboxing options for untrusted documents. 
  &lt;ul&gt; 
   &lt;li&gt;On Linux or with Docker, you can enable &lt;a href="https://github.com/google/gvisor"&gt;gVisor&lt;/a&gt; sandboxing at the individual document level.&lt;/li&gt; 
   &lt;li&gt;On macOS, you can use native sandboxing.&lt;/li&gt; 
   &lt;li&gt;On any OS, including Windows, you can use a wasm-based sandbox.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Translated to many languages.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;F1&lt;/code&gt; key brings up some quick help. This used to go without saying, but in general Grist has good keyboard support.&lt;/li&gt; 
 &lt;li&gt;We post progress on &lt;a href="https://twitter.com/getgrist"&gt;𝕏 or Twitter or whatever&lt;/a&gt; and publish &lt;a href="https://support.getgrist.com/newsletters/"&gt;monthly newsletters&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you are curious about where Grist is heading, see &lt;a href="https://github.com/gristlabs/grist-core/projects/1"&gt;our roadmap&lt;/a&gt;, drop a question in &lt;a href="https://community.getgrist.com"&gt;our forum&lt;/a&gt;, or browse &lt;a href="https://support.getgrist.com"&gt;our extensive documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features not in &lt;code&gt;grist-core&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;If you evaluate Grist by using the hosted version at &lt;a href="https://getgrist.com"&gt;getgrist.com&lt;/a&gt;, be aware that it includes some extensions to Grist that aren't present in &lt;code&gt;grist-core&lt;/code&gt;. To be sure you're seeing exactly what is present in &lt;code&gt;grist-core&lt;/code&gt;, you can run the &lt;a href="https://github.com/gristlabs/grist-desktop"&gt;desktop app&lt;/a&gt;, or use &lt;a href="https://raw.githubusercontent.com/gristlabs/grist-core/main/#using-grist"&gt;&lt;code&gt;docker&lt;/code&gt;&lt;/a&gt;. Here is a list of features you may see in Grist Labs' hosting or Enterprise offerings that are not in &lt;code&gt;grist-core&lt;/code&gt;, in chronological order of creation. If self-hosting, you can get access to a free trial of all of them using the Enterprise toggle on the &lt;a href="https://support.getgrist.com/admin-panel/"&gt;Admin Panel&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/install/grist-connect/"&gt;GristConnect&lt;/a&gt; (2022) 
  &lt;ul&gt; 
   &lt;li&gt;Any site that has plugins for letting Discourse use its logins (such as WordPress) can also let Grist use its logins.&lt;/li&gt; 
   &lt;li&gt;GristConnect is a niche feature built for a specific client which you probably don't care about – &lt;code&gt;OIDC&lt;/code&gt; and &lt;code&gt;SAML&lt;/code&gt; support &lt;em&gt;is&lt;/em&gt; part of &lt;code&gt;grist-core&lt;/code&gt; and covers most authentication use cases.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/install/cloud-storage/#azure"&gt;Azure back-end for document storage&lt;/a&gt; (2022) 
  &lt;ul&gt; 
   &lt;li&gt;With &lt;code&gt;grist-core&lt;/code&gt; you can store document versions in anything S3-compatible, which covers a lot of services, but not Azure specifically. The Azure back-end fills that gap.&lt;/li&gt; 
   &lt;li&gt;Unless you are a Microsoft shop you probably don't care about this.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/install/audit-log-streaming/"&gt;Audit log streaming&lt;/a&gt; (2024) 
  &lt;ul&gt; 
   &lt;li&gt;With &lt;code&gt;grist-core&lt;/code&gt; a lot of useful information is logged, but not organized specifically with auditing in mind. Audit log streaming supplies that organization, and a UI for setting things up.&lt;/li&gt; 
   &lt;li&gt;Enterprises may care about this.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/admin-controls/"&gt;Advanced Admin Controls&lt;/a&gt; (2025) 
  &lt;ul&gt; 
   &lt;li&gt;This is a special page for a Grist installation administrator to monitor and edit user access to resources.&lt;/li&gt; 
   &lt;li&gt;It uses a special set of administrative endpoints not present on &lt;code&gt;grist-core&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;If you're going to be running a large Grist installation, with employees coming and going, you may care about this.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/assistant/#assistant"&gt;Grist Assistant&lt;/a&gt; (2025) 
  &lt;ul&gt; 
   &lt;li&gt;An AI Formula Assistant - limited to working with formulas - is present in &lt;code&gt;grist-core&lt;/code&gt;, but the newer Assistant can help with a wider range of tasks like building tables and dashboards and modifying data.&lt;/li&gt; 
   &lt;li&gt;If you have many users who need help building documents or working with data, you may care about this one.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/self-managed/#how-do-i-set-up-email-notifications"&gt;Invite Notifications&lt;/a&gt; (2025) 
  &lt;ul&gt; 
   &lt;li&gt;When a user is added to a document, or a workspace, or a site, with email notifications they will get emailed a link to access the resource.&lt;/li&gt; 
   &lt;li&gt;This link isn't special, with &lt;code&gt;grist-core&lt;/code&gt; you can just send a link yourself or a colleague.&lt;/li&gt; 
   &lt;li&gt;For a big Grist installation with users who aren't in close communication, emails might be nice? Hard to guess if you'll care about this one.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://support.getgrist.com/document-settings/#notifications"&gt;Document Change and Comment Notifications&lt;/a&gt; (2025) 
  &lt;ul&gt; 
   &lt;li&gt;You can achieve change notifications in &lt;code&gt;grist-core&lt;/code&gt; using webhooks, but it is less convenient.&lt;/li&gt; 
   &lt;li&gt;People have been asking for this one for years. If you need an excuse to get your boss to pay for Grist, this might finally be the one that works?&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Grist&lt;/h2&gt; 
&lt;p&gt;To get the default version of &lt;code&gt;grist-core&lt;/code&gt; running on your computer with &lt;a href="https://www.docker.com/get-started"&gt;Docker&lt;/a&gt;, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker pull gristlabs/grist
docker run -p 8484:8484 -it gristlabs/grist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;code&gt;http://localhost:8484&lt;/code&gt; in your browser. You'll be able to create, edit, import, and export documents. To preserve your work across docker runs, share a directory as &lt;code&gt;/persist&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run -p 8484:8484 -v $PWD/persist:/persist -it gristlabs/grist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Get templates at &lt;a href="https://templates.getgrist.com"&gt;templates.getgrist.com&lt;/a&gt; for payroll, inventory management, invoicing, D&amp;amp;D encounter tracking, and a lot more, or use any document you've created on &lt;a href="https://docs.getgrist.com"&gt;docs.getgrist.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you need to change the port Grist runs on, set a &lt;code&gt;PORT&lt;/code&gt; variable, don't just change the port mapping:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --env PORT=9999 -p 9999:9999 -v $PWD/persist:/persist -it gristlabs/grist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To enable gVisor sandboxing, set &lt;code&gt;--env GRIST_SANDBOX_FLAVOR=gvisor&lt;/code&gt;. This should work with default docker settings, but may not work in all environments.&lt;/p&gt; 
&lt;p&gt;You can find a lot more about configuring Grist, setting up authentication, and running it on a public server in our &lt;a href="https://support.getgrist.com/self-managed/"&gt;Self-Managed Grist&lt;/a&gt; handbook.&lt;/p&gt; 
&lt;h2&gt;Using Grist with OpenRouter for Model Agnostic and Claude Support&lt;/h2&gt; 
&lt;p&gt;(Instructions contributed by @lshalon)&lt;/p&gt; 
&lt;p&gt;Grist's AI Formula Assistant can be configured to use OpenRouter instead of connecting directly to OpenAI, allowing you to access a wide range of AI models including Anthropic's Claude models. This isn't the only way to use Claude models, but it's a good option if you want to use Claude models with Grist or intend to use other cheaper, faster, or potentially newer models. That's because this configuration gives you more flexibility in choosing the AI model that works best for your formula generation needs. To set up OpenRouter integration, configure the following environment variables:&lt;/p&gt; 
&lt;h3&gt;Required: Set the endpoint to OpenRouter's API&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ASSISTANT_CHAT_COMPLETION_ENDPOINT=https://openrouter.ai/api/v1/chat/completions
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Required: Your OpenRouter API key&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ASSISTANT_API_KEY=your_openrouter_api_key_here
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sign up for an OpenRouter API key at &lt;a href="https://openrouter.ai/"&gt;https://openrouter.ai/&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Optional: Specify which model to use (examples below)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ASSISTANT_MODEL=anthropic/claude-3.7-sonnet
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;or other options like&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ASSISTANT_MODEL=deepseek/deepseek-r1-zero:free
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;ASSISTANT_MODEL=qwen/qwq-32b:free
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code&gt;ASSISTANT_MODEL=mistralai/mistral-saba
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Optional: Set a larger context model for fallback&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ASSISTANT_LONGER_CONTEXT_MODEL=anthropic/claude-3-opus-20240229
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With this configuration, Grist's AI Formula Assistant will route requests through OpenRouter to your specified model. This allows you to:&lt;/p&gt; 
&lt;p&gt;Access Anthropic's Claude models which excel at understanding context and generating accurate formulas Switch between different AI models without changing your Grist configuration Take advantage of OpenRouter's routing capabilities to optimize for cost, speed, or quality&lt;/p&gt; 
&lt;p&gt;You can find the available models and their identifiers on the OpenRouter website. Note: Make sure not to set the OPENAI_API_KEY variable when using OpenRouter, as this would override the OpenRouter configuration.&lt;/p&gt; 
&lt;h2&gt;Available Docker images&lt;/h2&gt; 
&lt;p&gt;The default Docker image is &lt;code&gt;gristlabs/grist&lt;/code&gt;. This contains all of the standard Grist functionality, as well as extra source-available code for enterprise customers taken from the &lt;a href="https://github.com/gristlabs/grist-ee"&gt;grist-ee&lt;/a&gt; repository. This extra code is not under a free or open source license. By default, however, the code from the &lt;code&gt;grist-ee&lt;/code&gt; repository is completely inert and inactive. This code becomes active only when enabled from the administrator panel.&lt;/p&gt; 
&lt;p&gt;If you would rather use an image that contains exclusively free and open source code, the &lt;code&gt;gristlabs/grist-oss&lt;/code&gt; Docker image is available for this purpose. It is by default functionally equivalent to the &lt;code&gt;gristlabs/grist&lt;/code&gt; image.&lt;/p&gt; 
&lt;h2&gt;The administrator panel&lt;/h2&gt; 
&lt;p&gt;You can turn on a special admininistrator panel to inspect the status of your installation. Just visit &lt;code&gt;/admin&lt;/code&gt; on your Grist server for instructions. Since it is useful for the admin panel to be available even when authentication isn't set up, you can give it a special access key by setting &lt;code&gt;GRIST_BOOT_KEY&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -p 8484:8484 -e GRIST_BOOT_KEY=secret -it gristlabs/grist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The boot page should then be available at &lt;code&gt;/admin?boot-key=&amp;lt;GRIST_BOOT_KEY&amp;gt;&lt;/code&gt;. We are collecting probes for common problems there. If you hit a problem that isn't covered, it would be great if you could add a probe for it in &lt;a href="https://github.com/gristlabs/grist-core/raw/main/app/server/lib/BootProbes.ts"&gt;BootProbes&lt;/a&gt;. You may instead file an issue so someone else can add it.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;To build Grist from source, follow these steps:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn install
yarn run build
yarn run install:python
yarn start
# Grist will be available at http://localhost:8484/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Grist formulas in documents will be run using Python executed directly on your machine. You can configure sandboxing using a &lt;code&gt;GRIST_SANDBOX_FLAVOR&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;On macOS, &lt;code&gt;export GRIST_SANDBOX_FLAVOR=macSandboxExec&lt;/code&gt; uses the native &lt;code&gt;sandbox-exec&lt;/code&gt; command for sandboxing.&lt;/li&gt; 
 &lt;li&gt;On Linux with &lt;a href="https://github.com/google/gvisor"&gt;gVisor's runsc&lt;/a&gt; installed, &lt;code&gt;export GRIST_SANDBOX_FLAVOR=gvisor&lt;/code&gt; is an option.&lt;/li&gt; 
 &lt;li&gt;On any OS including Windows, &lt;code&gt;export GRIST_SANDBOX_FLAVOR=pyodide&lt;/code&gt; is available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These sandboxing methods have been written for our own use at Grist Labs and may need tweaking to work in your own environment - pull requests very welcome here!&lt;/p&gt; 
&lt;h2&gt;Logins&lt;/h2&gt; 
&lt;p&gt;Like git, Grist has features to track document revision history. So for full operation, Grist expects to know who the user modifying a document is. Until it does, it operates in a limited anonymous mode. To get you going, the docker image is configured so that when you click on the "sign in" button Grist will attribute your work to &lt;code&gt;you@example.com&lt;/code&gt;. Change this by setting &lt;code&gt;GRIST_DEFAULT_EMAIL&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run --env GRIST_DEFAULT_EMAIL=my@email -p 8484:8484 -v $PWD/persist:/persist -it gristlabs/grist
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can change your name in &lt;code&gt;Profile Settings&lt;/code&gt; in the &lt;a href="https://support.getgrist.com/glossary/#user-menu"&gt;User Menu&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For multi-user operation, or if you wish to access Grist across the public internet, you'll want to connect it to your own Single Sign-On service. There are a lot of ways to do this, including &lt;a href="https://support.getgrist.com/self-managed/#how-do-i-set-up-authentication"&gt;SAML and forward authentication&lt;/a&gt;. Grist has been tested with &lt;a href="https://goauthentik.io/"&gt;Authentik&lt;/a&gt;, &lt;a href="https://auth0.com/"&gt;Auth0&lt;/a&gt;, and Google/Microsoft sign-ins via &lt;a href="https://dexidp.io/"&gt;Dex&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://hosted.weblate.org/engage/grist/"&gt;Weblate&lt;/a&gt; to manage translations. Thanks to everyone who is pitching in. Thanks especially to the ANCT developers who did the hard work of making a good chunk of the application localizable. Merci beaucoup !&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/grist/"&gt; &lt;img src="https://hosted.weblate.org/widgets/grist/-/open-graph.png" alt="Translation status" width="480" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/grist/"&gt;&lt;img src="https://hosted.weblate.org/widgets/grist/-/multi-green.svg?sanitize=true" alt="Translation detail" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why free and open source software&lt;/h2&gt; 
&lt;p&gt;This repository, &lt;code&gt;grist-core&lt;/code&gt;, is maintained by Grist Labs. Our flagship product available at &lt;a href="https://www.getgrist.com"&gt;getgrist.com&lt;/a&gt; is built from the code you see here, combined with business-specific software designed to scale to many users, handle billing, etc.&lt;/p&gt; 
&lt;p&gt;Grist Labs is an open-core company. We offer Grist hosting as a service, with free and paid plans. We also develop and sell features related to Grist using a proprietary license, targeted at the needs of enterprises with large self-managed installations.&lt;/p&gt; 
&lt;p&gt;We see data portability and autonomy as a key value, and &lt;code&gt;grist-core&lt;/code&gt; is an essential part of that. We are committed to maintaining and improving the &lt;code&gt;grist-core&lt;/code&gt; codebase, and to be thoughtful about how proprietary offerings impact data portability and autonomy.&lt;/p&gt; 
&lt;p&gt;By opening its source code and offering an &lt;a href="https://opensource.org/"&gt;OSI&lt;/a&gt;-approved free license, Grist benefits its users:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Developer community.&lt;/strong&gt; The freedom to examine source code, make bug fixes, and develop new features is a big deal for a general-purpose spreadsheet-like product, where there is a very long tail of features vital to someone somewhere.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Increased trust.&lt;/strong&gt; Because anyone can examine the source code, “security by obscurity” is not an option. Vulnerabilities in the code can be found by others and reported before they cause damage.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Independence.&lt;/strong&gt; Grist is available to you regardless of the fortunes of the Grist Labs business, since it is open source and can be self-hosted. Using our hosted solution is convenient, but you are not locked in.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Price flexibility.&lt;/strong&gt; If you are low on funds but have time to invest, self-hosting is a great option to have. And DIY users may have the technical savvy and motivation to delve in and make improvements, which can benefit all users of Grist.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensibility.&lt;/strong&gt; For developers, having the source open makes it easier to build extensions (such as &lt;a href="https://support.getgrist.com/widget-custom/"&gt;Custom Widgets&lt;/a&gt;). You can more easily include Grist in your pipeline. And if a feature is missing, you can just take the source code and build on top of it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more on Grist Labs' history and principles, see our &lt;a href="https://www.getgrist.com/about/"&gt;About Us&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.dotphoton.com/"&gt; &lt;img width="11%" src="https://user-images.githubusercontent.com/11277225/228914729-ae581352-b37a-4ca8-b220-b1463dd1ade0.png" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Reviews&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.producthunt.com/posts/grist-2"&gt;Grist on ProductHunt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://appsumo.com/products/grist/"&gt;Grist on AppSumo&lt;/a&gt; (life-time deal is sold out)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.capterra.com/p/232821/Grist/#reviews"&gt;Capterra&lt;/a&gt;, &lt;a href="https://www.g2.com/products/grist/reviews"&gt;G2&lt;/a&gt;, &lt;a href="https://www.trustradius.com/products/grist/reviews"&gt;TrustRadius&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment variables&lt;/h2&gt; 
&lt;p&gt;Grist can be configured in many ways. Here are the main environment variables it is sensitive to:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ALLOWED_WEBHOOK_DOMAINS&lt;/td&gt; 
   &lt;td&gt;comma-separated list of permitted domains to use in webhooks (e.g. webhook.site,zapier.com). You can set this to &lt;code&gt;*&lt;/code&gt; to allow all domains, but if doing so, we recommend using a carefully locked-down proxy (see &lt;code&gt;GRIST_PROXY_FOR_UNTRUSTED_URLS&lt;/code&gt;) if you do not entirely trust users. Otherwise services on your internal network may become vulnerable to manipulation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APP_DOC_URL&lt;/td&gt; 
   &lt;td&gt;doc worker url, set when starting an individual doc worker (other servers will find doc worker urls via redis)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APP_DOC_INTERNAL_URL&lt;/td&gt; 
   &lt;td&gt;like &lt;code&gt;APP_DOC_URL&lt;/code&gt; but used by the home server to reach the server using an internal domain name resolution (like in a docker environment). It only makes sense to define this value in the doc worker. Defaults to &lt;code&gt;APP_DOC_URL&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APP_HOME_URL&lt;/td&gt; 
   &lt;td&gt;url prefix for home api (home and doc servers need this)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APP_HOME_INTERNAL_URL&lt;/td&gt; 
   &lt;td&gt;like &lt;code&gt;APP_HOME_URL&lt;/code&gt; but used by the home and the doc servers to reach any home workers using an internal domain name resolution (like in a docker environment). Defaults to &lt;code&gt;APP_HOME_URL&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APP_STATIC_URL&lt;/td&gt; 
   &lt;td&gt;url prefix for static resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APP_STATIC_INCLUDE_CUSTOM_CSS&lt;/td&gt; 
   &lt;td&gt;set to "true" to include custom.css (from APP_STATIC_URL) in static pages&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;APP_UNTRUSTED_URL&lt;/td&gt; 
   &lt;td&gt;URL at which to serve/expect plugin content.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ACTION_HISTORY_MAX_ROWS&lt;/td&gt; 
   &lt;td&gt;Maximum number of rows allowed in ActionHistory before pruning (up to a 1.25 grace factor). Defaults to 1000. ⚠️ A too low value may make the "&lt;a href="https://support.getgrist.com/newsletters/2021-06/#work-on-a-copy"&gt;Work on a copy&lt;/a&gt;" feature &lt;a href="https://github.com/gristlabs/grist-core/issues/1121#issuecomment-2248112023"&gt;malfunction&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ACTION_HISTORY_MAX_BYTES&lt;/td&gt; 
   &lt;td&gt;Maximum number of rows allowed in ActionHistory before pruning (up to a 1.25 grace factor). Defaults to 1Gb. ⚠️ A too low value may make the "&lt;a href="https://support.getgrist.com/newsletters/2021-06/#work-on-a-copy"&gt;Work on a copy&lt;/a&gt;" feature &lt;a href="https://github.com/gristlabs/grist-core/issues/1121#issuecomment-2248112023"&gt;malfunction&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ADAPT_DOMAIN&lt;/td&gt; 
   &lt;td&gt;set to "true" to support multiple base domains (careful, host header should be trustworthy)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ALLOW_AUTOMATIC_VERSION_CHECKING&lt;/td&gt; 
   &lt;td&gt;Whether Grist is allowed to automatically check if a newer Grist version is available. Defaults to "true" on the default &lt;code&gt;grist&lt;/code&gt; and &lt;code&gt;grist-ee&lt;/code&gt; Docker images. Defaults false in &lt;code&gt;grist-oss&lt;/code&gt; and everywhere else.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ALLOW_DEPRECATED_BARE_ORG_DELETE&lt;/td&gt; 
   &lt;td&gt;If set, the deprecated DELETE /api/orgs/:orgId endpoint is available.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_APP_ROOT&lt;/td&gt; 
   &lt;td&gt;directory containing Grist sandbox and assets (specifically the sandbox and static subdirectories).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ATTACHMENT_THRESHOLD_MB&lt;/td&gt; 
   &lt;td&gt;attachment storage limit per document beyond which Grist will recommend external storage (if available). Defaults to 50MB.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_BACKUP_DELAY_SECS&lt;/td&gt; 
   &lt;td&gt;wait this long after a doc change before making a backup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_BOOT_KEY&lt;/td&gt; 
   &lt;td&gt;if set, offer diagnostics at /boot/GRIST_BOOT_KEY&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_DATA_DIR&lt;/td&gt; 
   &lt;td&gt;Directory in which to store documents. Defaults to &lt;code&gt;docs/&lt;/code&gt; relative to the Grist application directory. In Grist's default Docker image, its default value is /persist/docs so that it will be used as a mounted volume.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_DEFAULT_EMAIL&lt;/td&gt; 
   &lt;td&gt;if set, login as this user if no other credentials presented&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_DEFAULT_PRODUCT&lt;/td&gt; 
   &lt;td&gt;if set, this controls enabled features and limits of new sites. See names of PRODUCTS in Product.ts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_DEFAULT_LOCALE&lt;/td&gt; 
   &lt;td&gt;Locale to use as fallback when Grist cannot honour the browser locale.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_DOMAIN&lt;/td&gt; 
   &lt;td&gt;in hosted Grist, Grist is served from subdomains of this domain. Defaults to "getgrist.com".&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_EXPERIMENTAL_PLUGINS&lt;/td&gt; 
   &lt;td&gt;enables experimental plugins&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_EXTERNAL_ATTACHMENTS_MODE&lt;/td&gt; 
   &lt;td&gt;required to enable external storage for attachments. Set to "snapshots" to enable external storage. Default value is "none". Note that when enabled, a &lt;a href="https://support.getgrist.com/self-managed/#how-do-i-set-up-snapshots"&gt;snapshot storage has to be configured&lt;/a&gt; as well.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ENABLE_REQUEST_FUNCTION&lt;/td&gt; 
   &lt;td&gt;enables the REQUEST function. This function performs HTTP requests in a similar way to &lt;code&gt;requests.request&lt;/code&gt;. This function presents a significant security risk, since it can let users call internal endpoints when Grist is available publicly. This function can also cause performance issues. Unset by default.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_HIDE_UI_ELEMENTS&lt;/td&gt; 
   &lt;td&gt;comma-separated list of UI features to disable. Allowed names of parts: &lt;code&gt;helpCenter&lt;/code&gt;, &lt;code&gt;billing&lt;/code&gt;, &lt;code&gt;templates&lt;/code&gt;, &lt;code&gt;createSite&lt;/code&gt;, &lt;code&gt;multiSite&lt;/code&gt;, &lt;code&gt;multiAccounts&lt;/code&gt;, &lt;code&gt;sendToDrive&lt;/code&gt;, &lt;code&gt;tutorials&lt;/code&gt;, &lt;code&gt;supportGrist&lt;/code&gt;, &lt;code&gt;themes&lt;/code&gt;. If a part also exists in GRIST_UI_FEATURES, it will still be disabled.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_HOST&lt;/td&gt; 
   &lt;td&gt;hostname to use when listening on a port.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_PROXY_FOR_UNTRUSTED_URLS&lt;/td&gt; 
   &lt;td&gt;Full URL of proxy for delivering webhook payloads. Default value is &lt;code&gt;direct&lt;/code&gt; for delivering payloads without proxying.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTPS_PROXY or https_proxy&lt;/td&gt; 
   &lt;td&gt;Full URL of reverse web proxy (corporate proxy) for fetching the custom widgets repository or the OIDC config from the issuer.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ID_PREFIX&lt;/td&gt; 
   &lt;td&gt;for subdomains of form o-&lt;em&gt;, expect or produce o-${GRIST_ID_PREFIX}&lt;/em&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_IGNORE_SESSION&lt;/td&gt; 
   &lt;td&gt;if set, Grist will not use a session for authentication.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_INCLUDE_CUSTOM_SCRIPT_URL&lt;/td&gt; 
   &lt;td&gt;if set, will load the referenced URL in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag on all app pages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_INST_DIR&lt;/td&gt; 
   &lt;td&gt;path to Grist instance configuration files, for Grist server.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_LIST_PUBLIC_SITES&lt;/td&gt; 
   &lt;td&gt;if set to true, sites shared with the public will be listed for anonymous users. Defaults to false.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_MANAGED_WORKERS&lt;/td&gt; 
   &lt;td&gt;if set, Grist can assume that if a url targeted at a doc worker returns a 404, that worker is gone&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_MAX_NEW_USER_INVITES_PER_ORG&lt;/td&gt; 
   &lt;td&gt;if set, limits the number of invites to new users per org. Once exceeded, additional invites are blocked until invited users log in for the first time or are uninvited&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_MAX_BILLING_MANAGERS_PER_ORG&lt;/td&gt; 
   &lt;td&gt;if set, limits the number of billing managers per org&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_MAX_PARALLEL_REQUESTS_PER_DOC&lt;/td&gt; 
   &lt;td&gt;max number of concurrent API requests allowed per document (default is 10, set to 0 for unlimited)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_MAX_UPLOAD_ATTACHMENT_MB&lt;/td&gt; 
   &lt;td&gt;max allowed size for attachments (0 or empty for unlimited).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_MAX_UPLOAD_IMPORT_MB&lt;/td&gt; 
   &lt;td&gt;max allowed size for imports (except .grist files) (0 or empty for unlimited).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_OFFER_ALL_LANGUAGES&lt;/td&gt; 
   &lt;td&gt;if set, all translated langauages are offered to the user (by default, only languages with a special 'good enough' key set are offered to user).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ORG_IN_PATH&lt;/td&gt; 
   &lt;td&gt;if true, encode org in path rather than domain&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_PAGE_TITLE_SUFFIX&lt;/td&gt; 
   &lt;td&gt;a string to append to the end of the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; in HTML documents. Defaults to &lt;code&gt;" - Grist"&lt;/code&gt;. Set to &lt;code&gt;_blank&lt;/code&gt; for no suffix at all.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;del&gt;GRIST_PROXY_AUTH_HEADER&lt;/del&gt;&lt;/td&gt; 
   &lt;td&gt;Deprecated, and interpreted as a synonym for GRIST_FORWARD_AUTH_HEADER.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ROUTER_URL&lt;/td&gt; 
   &lt;td&gt;optional url for an api that allows servers to be (un)registered with a load balancer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SERVE_SAME_ORIGIN&lt;/td&gt; 
   &lt;td&gt;set to "true" to access home server and doc workers on the same protocol-host-port as the top-level page, same as for custom domains (careful, host header should be trustworthy)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SERVERS&lt;/td&gt; 
   &lt;td&gt;the types of server to setup. Comma separated values which may contain "home", "docs", static" and/or "app". Defaults to "home,docs,static".&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SESSION_COOKIE&lt;/td&gt; 
   &lt;td&gt;if set, overrides the name of Grist's cookie&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SESSION_DOMAIN&lt;/td&gt; 
   &lt;td&gt;if set, associates the cookie with the given domain - otherwise defaults to GRIST_DOMAIN&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SESSION_SECRET&lt;/td&gt; 
   &lt;td&gt;a key used to encode sessions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SKIP_BUNDLED_WIDGETS&lt;/td&gt; 
   &lt;td&gt;if set, Grist will ignore any bundled widgets included via NPM packages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SQLITE_MODE&lt;/td&gt; 
   &lt;td&gt;if set to &lt;code&gt;wal&lt;/code&gt;, use SQLite in &lt;a href="https://www.sqlite.org/wal.html"&gt;WAL mode&lt;/a&gt;, if set to &lt;code&gt;sync&lt;/code&gt;, use SQLite with &lt;a href="https://www.sqlite.org/pragma.html#pragma_synchronous"&gt;SYNCHRONOUS=full&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ANON_PLAYGROUND&lt;/td&gt; 
   &lt;td&gt;When set to &lt;code&gt;false&lt;/code&gt; deny anonymous users access to the home page (but documents can still be shared to anonymous users). Defaults to &lt;code&gt;true&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_FORCE_LOGIN&lt;/td&gt; 
   &lt;td&gt;Setting it to &lt;code&gt;true&lt;/code&gt; is similar to setting &lt;code&gt;GRIST_ANON_PLAYGROUND: false&lt;/code&gt; but it blocks any anonymous access (thus any document shared publicly actually requires the users to be authenticated before consulting them)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SINGLE_ORG&lt;/td&gt; 
   &lt;td&gt;set to an org "domain" to pin client to that org&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TEMPLATE_ORG&lt;/td&gt; 
   &lt;td&gt;set to an org "domain" to show public docs from that org&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_HELP_CENTER&lt;/td&gt; 
   &lt;td&gt;set the help center link ref&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TERMS_OF_SERVICE_URL&lt;/td&gt; 
   &lt;td&gt;if set, adds terms of service link&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FREE_COACHING_CALL_URL&lt;/td&gt; 
   &lt;td&gt;set the link to the human help (example: email adress or meeting scheduling tool)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_CONTACT_SUPPORT_URL&lt;/td&gt; 
   &lt;td&gt;set the link to contact support on error pages (example: email adress or online form)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ONBOARDING_VIDEO_ID&lt;/td&gt; 
   &lt;td&gt;set the ID of the YouTube video shown on the homepage and during onboarding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_CUSTOM_COMMON_URLS&lt;/td&gt; 
   &lt;td&gt;overwrite the default commons URLs. Its value is expected to be a JSON object and a subset of the &lt;a href="https://raw.githubusercontent.com/gristlabs/grist-core/main/app/common/ICommonUrls.ts"&gt;ICommonUrls interface&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SUPPORT_ANON&lt;/td&gt; 
   &lt;td&gt;if set to 'true', show UI for anonymous access (not shown by default)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SUPPORT_EMAIL&lt;/td&gt; 
   &lt;td&gt;if set, give a user with the specified email support powers. The main extra power is the ability to share sites, workspaces, and docs with all users in a listed way.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_OPEN_GRAPH_PREVIEW_IMAGE&lt;/td&gt; 
   &lt;td&gt;the URL of the preview image when sharing the link on websites like social medias or chat applications.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TELEMETRY_LEVEL&lt;/td&gt; 
   &lt;td&gt;the telemetry level. Can be set to: &lt;code&gt;off&lt;/code&gt; (default), &lt;code&gt;limited&lt;/code&gt;, or &lt;code&gt;full&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_THROTTLE_CPU&lt;/td&gt; 
   &lt;td&gt;if set, CPU throttling is enabled&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TRUST_PLUGINS&lt;/td&gt; 
   &lt;td&gt;if set, plugins are expect to be served from the same host as the rest of the Grist app, rather than from a distinct host. Ordinarily, plugins are served from a distinct host so that the cookies used by the Grist app are not automatically available to them. Enable this only if you understand the security implications.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_USER_ROOT&lt;/td&gt; 
   &lt;td&gt;an extra path to look for plugins in - Grist will scan for plugins in &lt;code&gt;$GRIST_USER_ROOT/plugins&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_UI_FEATURES&lt;/td&gt; 
   &lt;td&gt;comma-separated list of UI features to enable. Allowed names of parts: &lt;code&gt;helpCenter&lt;/code&gt;, &lt;code&gt;billing&lt;/code&gt;, &lt;code&gt;templates&lt;/code&gt;, &lt;code&gt;createSite&lt;/code&gt;, &lt;code&gt;multiSite&lt;/code&gt;, &lt;code&gt;multiAccounts&lt;/code&gt;, &lt;code&gt;sendToDrive&lt;/code&gt;, &lt;code&gt;tutorials&lt;/code&gt;, &lt;code&gt;supportGrist&lt;/code&gt;, &lt;code&gt;themes&lt;/code&gt;. If a part also exists in GRIST_HIDE_UI_ELEMENTS, it won't be enabled.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_UNTRUSTED_PORT&lt;/td&gt; 
   &lt;td&gt;if set, plugins will be served from the given port. This is an alternative to setting APP_UNTRUSTED_URL.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_WIDGET_LIST_URL&lt;/td&gt; 
   &lt;td&gt;a url pointing to a widget manifest, by default &lt;a href="https://github.com/gristlabs/grist-widget/releases/download/latest/manifest.json"&gt;https://github.com/gristlabs/grist-widget/releases/download/latest/manifest.json&lt;/a&gt; is used&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_LOG_HTTP&lt;/td&gt; 
   &lt;td&gt;When set to &lt;code&gt;true&lt;/code&gt;, log HTTP requests and responses information. Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_LOG_HTTP_BODY&lt;/td&gt; 
   &lt;td&gt;When this variable and &lt;code&gt;GRIST_LOG_HTTP&lt;/code&gt; are set to &lt;code&gt;true&lt;/code&gt; , log the body along with the HTTP requests. &lt;span&gt;⚠&lt;/span&gt; Be aware it may leak confidential information in the logs.&lt;span&gt;⚠&lt;/span&gt; Defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_LOG_AS_JSON&lt;/td&gt; 
   &lt;td&gt;When this variable is set to &lt;code&gt;true&lt;/code&gt; or a truthy value, output log lines in JSON as opposed to a plain text format.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_LOG_API_DETAILS&lt;/td&gt; 
   &lt;td&gt;When this variable is set to &lt;code&gt;true&lt;/code&gt; or a truthy value, log the API calls details.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;COOKIE_MAX_AGE&lt;/td&gt; 
   &lt;td&gt;session cookie max age, defaults to 90 days; can be set to "none" to make it a session cookie&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HOME_PORT&lt;/td&gt; 
   &lt;td&gt;port number to listen on for REST API server; if set to "share", add API endpoints to regular grist port.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PORT&lt;/td&gt; 
   &lt;td&gt;port number to listen on for Grist server&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;REDIS_URL&lt;/td&gt; 
   &lt;td&gt;optional redis server for browser sessions and db query caching&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SNAPSHOT_TIME_CAP&lt;/td&gt; 
   &lt;td&gt;optional. Define the caps for tracking buckets. Usage: {"hour": 25, "day": 32, "isoWeek": 12, "month": 96, "year": 1000}&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SNAPSHOT_KEEP&lt;/td&gt; 
   &lt;td&gt;optional. Number of recent snapshots to retain unconditionally for a document, regardless of when they were made&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_PROMCLIENT_PORT&lt;/td&gt; 
   &lt;td&gt;optional. If set, serve the Prometheus metrics on the specified port number. ⚠️ Be sure to use a port which is not publicly exposed ⚠️.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ENABLE_SCIM&lt;/td&gt; 
   &lt;td&gt;optional. If set, enable the &lt;a href="https://support.getgrist.com/install/scim/"&gt;SCIM API Endpoint&lt;/a&gt; (experimental)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_OIDC_...&lt;/td&gt; 
   &lt;td&gt;optional. Environment variables used to configure OpenID authentification. See &lt;a href="https://support.getgrist.com/install/oidc/"&gt;OpenID Connect&lt;/a&gt; documentation for full related list of environment variables.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SAML_...&lt;/td&gt; 
   &lt;td&gt;optional. Environment variables used to configure SAML authentification. See &lt;a href="https://support.getgrist.com/install/saml/"&gt;SAML&lt;/a&gt; documentation for full related list of environment variables.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_IDP_EXTRA_PROPS&lt;/td&gt; 
   &lt;td&gt;optional. If set, defines which extra fields returned by your identity provider will be stored in the users table of the home database (in the &lt;code&gt;options.ssoExtraInfo&lt;/code&gt; object). Usage: 'onekey,anotherkey'.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_FEATURE_FORM_FRAMING&lt;/td&gt; 
   &lt;td&gt;optional. Configures a border around a rendered form that is added for security reasons; Can be set to: &lt;code&gt;border&lt;/code&gt; or &lt;code&gt;minimal&lt;/code&gt;. Defaults to &lt;code&gt;border&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TRUTHY_VALUES&lt;/td&gt; 
   &lt;td&gt;optional. Comma-separated list of extra words that should be considered as truthy by the data engine beyond english defaults. Ex: "oui,ja,si"&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_FALSY_VALUES&lt;/td&gt; 
   &lt;td&gt;optional. Comma-separated list of extra words that should be considered as falsy by the data engine beyond english defaults. Ex: "non,nein,no"&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_ENABLE_USER_PRESENCE&lt;/td&gt; 
   &lt;td&gt;optional, disabled by default. If set to 'false', disables all user presence features.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;AI Formula Assistant related variables (all optional):&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ASSISTANT_API_KEY&lt;/td&gt; 
   &lt;td&gt;optional. An API key to pass when making requests to an external AI conversational endpoint.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ASSISTANT_CHAT_COMPLETION_ENDPOINT&lt;/td&gt; 
   &lt;td&gt;optional. A chat-completion style endpoint to call. Not needed if OpenAI is being used.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ASSISTANT_MODEL&lt;/td&gt; 
   &lt;td&gt;optional. If set, this string is passed along in calls to the AI conversational endpoint.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ASSISTANT_LONGER_CONTEXT_MODEL&lt;/td&gt; 
   &lt;td&gt;optional. If set, requests that fail because of a context length limitation will be retried with this model set.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OPENAI_API_KEY&lt;/td&gt; 
   &lt;td&gt;optional. Synonym for ASSISTANT_API_KEY that assumes an OpenAI endpoint is being used. Sign up for an account on OpenAI and then generate a secret key &lt;a href="https://platform.openai.com/account/api-keys"&gt;here&lt;/a&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;At the time of writing, the AI Assistant is known to function against OpenAI chat completion endpoints (those ending in &lt;code&gt;/v1/chat/completions&lt;/code&gt;). It is also known to function against the chat completion endpoint provided by &lt;a href="https://github.com/abetlen/llama-cpp-python"&gt;llama-cpp-python&lt;/a&gt; and by &lt;a href="https://lmstudio.ai/"&gt;LM Studio&lt;/a&gt;. For useful results, the LLM should be on par with GPT 3.5 or above.&lt;/p&gt; 
&lt;h4&gt;Sandbox related variables:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SANDBOX_FLAVOR&lt;/td&gt; 
   &lt;td&gt;can be gvisor, pynbox, unsandboxed, docker, or macSandboxExec. If set, forces Grist to use the specified kind of sandbox.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_SANDBOX&lt;/td&gt; 
   &lt;td&gt;a program or image name to run as the sandbox. See NSandbox.ts for nerdy details.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Forward authentication variables:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_FORWARD_AUTH_HEADER&lt;/td&gt; 
   &lt;td&gt;if set, trust the specified header (e.g. "x-forwarded-user") to contain authorized user emails, and enable "forward auth" logins.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_FORWARD_AUTH_LOGIN_PATH&lt;/td&gt; 
   &lt;td&gt;if GRIST_FORWARD_AUTH_HEADER is set, Grist will listen at this path for logins. Defaults to &lt;code&gt;/auth/login&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_FORWARD_AUTH_LOGOUT_PATH&lt;/td&gt; 
   &lt;td&gt;if GRIST_FORWARD_AUTH_HEADER is set, Grist will forward to this path when user logs out.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Forward authentication supports two modes, distinguished by &lt;code&gt;GRIST_IGNORE_SESSION&lt;/code&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;With sessions, and forward-auth on login endpoints.&lt;/p&gt; &lt;p&gt;For example, using traefik reverse proxy with &lt;a href="https://github.com/thomseddon/traefik-forward-auth"&gt;traefik-forward-auth&lt;/a&gt; middleware:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;GRIST_IGNORE_SESSION&lt;/code&gt;: do NOT set, or set to a falsy value.&lt;/li&gt; 
   &lt;li&gt;Make sure your reverse proxy applies the forward auth middleware to &lt;code&gt;GRIST_FORWARD_AUTH_LOGIN_PATH&lt;/code&gt; and &lt;code&gt;GRIST_FORWARD_AUTH_LOGOUT_PATH&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;If you want to allow anonymous access in some cases, make sure all other paths are free of the forward auth middleware. Grist will trigger it as needed by redirecting to &lt;code&gt;GRIST_FORWARD_AUTH_LOGIN_PATH&lt;/code&gt;. Once the user is logged in, Grist will use sessions to identify the user until logout.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;With no sessions, and forward-auth on all endpoints.&lt;/p&gt; &lt;p&gt;For example, using HTTP Basic Auth and server configuration that sets the header (specified in &lt;code&gt;GRIST_FORWARD_AUTH_HEADER&lt;/code&gt;) to the logged-in user.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GRIST_IGNORE_SESSION&lt;/code&gt;: set to &lt;code&gt;true&lt;/code&gt;. Grist sessions will not be used.&lt;/li&gt; 
 &lt;li&gt;Make sure your reverse proxy sets the header you specified for all requests that may need login information. It is imperative that this header cannot be spoofed by the user, since Grist will trust whatever is in it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When using forward authentication, you may wish to also set the following variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GRIST_FORCE_LOGIN=true&lt;/code&gt; to disable anonymous access.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Plugins:&lt;/h4&gt; 
&lt;p&gt;Grist has a plugin system, used internally. One useful thing you can do with it is include custom widgets in a build of Grist. Custom widgets are usually made available just by setting &lt;code&gt;GRIST_WIDGET_LIST_URL&lt;/code&gt;, but that has the downside of being an external dependency, which can be awkward for offline use or for archiving. Plugins offer an alternative.&lt;/p&gt; 
&lt;p&gt;To "bundle" custom widgets as a plugin:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add a subdirectory of &lt;code&gt;plugins&lt;/code&gt;, e.g. &lt;code&gt;plugins/my-widgets&lt;/code&gt;. Alternatively, you can set the &lt;code&gt;GRIST_USER_ROOT&lt;/code&gt; environment variable to any path you want, and then create &lt;code&gt;plugins/my-widgets&lt;/code&gt; within that.&lt;/li&gt; 
 &lt;li&gt;Add a &lt;code&gt;manifest.yml&lt;/code&gt; file in that subdirectory that looks like this:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;name: My Widgets
components:
  widgets: widgets.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;widgets.json&lt;/code&gt; file should be in the format produced by the &lt;a href="https://github.com/gristlabs/grist-widget"&gt;grist-widget&lt;/a&gt; repository, and should be placed in the same directory as &lt;code&gt;manifest.yml&lt;/code&gt;. Any material in &lt;code&gt;plugins/my-widgets&lt;/code&gt; will be served by Grist, and relative URLs can be used in &lt;code&gt;widgets.json&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Once all files are in place, restart Grist. Your widgets should now be available in the custom widgets dropdown, along with any others from &lt;code&gt;GRIST_WIDGET_LIST_URL&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If you like, you can add multiple plugin subdirectories, with multiple sets of widgets, and they'll all be made available.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Google Drive integrations:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GOOGLE_CLIENT_ID&lt;/td&gt; 
   &lt;td&gt;set to the Google Client Id to be used with Google API client&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GOOGLE_CLIENT_SECRET&lt;/td&gt; 
   &lt;td&gt;set to the Google Client Secret to be used with Google API client&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GOOGLE_API_KEY&lt;/td&gt; 
   &lt;td&gt;set to the Google API Key to be used with Google API client (accessing public files)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GOOGLE_DRIVE_SCOPE&lt;/td&gt; 
   &lt;td&gt;set to the scope requested for Google Drive integration (defaults to drive.file)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Database variables:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_DATABASE&lt;/td&gt; 
   &lt;td&gt;database filename for sqlite or database name for other db types&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_HOST&lt;/td&gt; 
   &lt;td&gt;host for db&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_LOGGING&lt;/td&gt; 
   &lt;td&gt;set to 'true' to see all sql queries&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_PASSWORD&lt;/td&gt; 
   &lt;td&gt;password to use&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_PORT&lt;/td&gt; 
   &lt;td&gt;port number for db if not the default for that db type&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_TYPE&lt;/td&gt; 
   &lt;td&gt;set to 'sqlite' or 'postgres'&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_USERNAME&lt;/td&gt; 
   &lt;td&gt;username to connect as&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TYPEORM_EXTRA&lt;/td&gt; 
   &lt;td&gt;any other properties to pass to TypeORM in JSON format&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Docker-only variables:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_DOCKER_USER&lt;/td&gt; 
   &lt;td&gt;optional. When the container runs as the root user, this is the user the Grist services run as. Overrides the default.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_DOCKER_GROUP&lt;/td&gt; 
   &lt;td&gt;optional. When the container runs as the root user, this is the group the Grist services run as. Overrides the default.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Testing:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TESTING_SOCKET&lt;/td&gt; 
   &lt;td&gt;a socket used for out-of-channel communication during tests only.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TEST_HTTPS_OFFSET&lt;/td&gt; 
   &lt;td&gt;if set, adds https ports at the specified offset. This is useful in testing.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TEST_SSL_CERT&lt;/td&gt; 
   &lt;td&gt;if set, contains filename of SSL certificate.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TEST_SSL_KEY&lt;/td&gt; 
   &lt;td&gt;if set, contains filename of SSL private key.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TEST_LOGIN&lt;/td&gt; 
   &lt;td&gt;allow fake unauthenticated test logins (suitable for dev environment only).&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GRIST_TEST_ROUTER&lt;/td&gt; 
   &lt;td&gt;if set, then the home server will serve a mock version of router api at /test/router&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GREP_TESTS&lt;/td&gt; 
   &lt;td&gt;pattern for selecting specific tests to run (e.g. &lt;code&gt;env GREP_TESTS=ActionLog yarn test&lt;/code&gt;).&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;p&gt;Tests are run automatically as part of CI when a PR is opened. However, it can be helpful to run tests locally before pushing your changes to GitHub. First, you'll want to make sure you've installed all dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn install
yarn install:python
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, you can run the main test suite like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Python tests may also be run locally. (Note: currently requires Python 3.10 - 3.11.)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yarn test:python
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For running specific tests, you can specify a pattern with the &lt;code&gt;GREP_TESTS&lt;/code&gt; variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;env GREP_TESTS=ChoiceList yarn test
env GREP_TESTS=summary yarn test:python
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository, &lt;code&gt;grist-core&lt;/code&gt;, is released under the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache License, Version 2.0&lt;/a&gt;, which is an &lt;a href="https://opensource.org/"&gt;OSI&lt;/a&gt;-approved free software license. See LICENSE.txt and NOTICE.txt for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>langgenius/dify</title>
      <link>https://github.com/langgenius/dify</link>
      <description>&lt;p&gt;Production-ready platform for agentic workflow development.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/langgenius/dify/main/images/GitHub_README_if.png" alt="cover-v5-optimized" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; 📌 &lt;a href="https://dify.ai/blog/introducing-dify-workflow-file-upload-a-demo-on-ai-podcast"&gt;Introducing Dify Workflow File Upload: Recreate Google NotebookLM Podcast&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://cloud.dify.ai"&gt;Dify Cloud&lt;/a&gt; · &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted"&gt;Self-hosting&lt;/a&gt; · &lt;a href="https://docs.dify.ai"&gt;Documentation&lt;/a&gt; · &lt;a href="https://dify.ai/pricing"&gt;Dify edition overview&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://dify.ai" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/Product-F04438" /&gt;&lt;/a&gt; &lt;a href="https://dify.ai/pricing" target="_blank"&gt; &lt;img alt="Static Badge" src="https://img.shields.io/badge/free-pricing?logo=free&amp;amp;color=%20%23155EEF&amp;amp;label=pricing&amp;amp;labelColor=%20%23528bff" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/FngNHpbcY7" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1082486657678311454?logo=discord&amp;amp;labelColor=%20%235462eb&amp;amp;logoColor=%20%23f5f5f5&amp;amp;color=%20%235462eb" alt="chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://reddit.com/r/difyai" target="_blank"&gt; &lt;img src="https://img.shields.io/reddit/subreddit-subscribers/difyai?style=plastic&amp;amp;logo=reddit&amp;amp;label=r%2Fdifyai&amp;amp;labelColor=white" alt="join Reddit" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=dify_ai" target="_blank"&gt; &lt;img src="https://img.shields.io/twitter/follow/dify_ai?logo=X&amp;amp;color=%20%23f5f5f5" alt="follow on X(Twitter)" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/langgenius/" target="_blank"&gt; &lt;img src="https://custom-icon-badges.demolab.com/badge/LinkedIn-0A66C2?logo=linkedin-white&amp;amp;logoColor=fff" alt="follow on LinkedIn" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/u/langgenius" target="_blank"&gt; &lt;img alt="Docker Pulls" src="https://img.shields.io/docker/pulls/langgenius/dify-web?labelColor=%20%23FDB062&amp;amp;color=%20%23f79009" /&gt;&lt;/a&gt; &lt;a href="https://github.com/langgenius/dify/graphs/commit-activity" target="_blank"&gt; &lt;img alt="Commits last month" src="https://img.shields.io/github/commit-activity/m/langgenius/dify?labelColor=%20%2332b583&amp;amp;color=%20%2312b76a" /&gt;&lt;/a&gt; &lt;a href="https://github.com/langgenius/dify/" target="_blank"&gt; &lt;img alt="Issues closed" src="https://img.shields.io/github/issues-search?query=repo%3Alanggenius%2Fdify%20is%3Aclosed&amp;amp;label=issues%20closed&amp;amp;labelColor=%20%237d89b0&amp;amp;color=%20%235d6b98" /&gt;&lt;/a&gt; &lt;a href="https://github.com/langgenius/dify/discussions/" target="_blank"&gt; &lt;img alt="Discussion posts" src="https://img.shields.io/github/discussions/langgenius/dify?labelColor=%20%239b8afb&amp;amp;color=%20%237a5af8" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README.md"&gt;&lt;img alt="README in English" src="https://img.shields.io/badge/English-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_TW.md"&gt;&lt;img alt="繁體中文文件" src="https://img.shields.io/badge/繁體中文-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_CN.md"&gt;&lt;img alt="简体中文版自述文件" src="https://img.shields.io/badge/简体中文-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_JA.md"&gt;&lt;img alt="日本語のREADME" src="https://img.shields.io/badge/日本語-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_ES.md"&gt;&lt;img alt="README en Español" src="https://img.shields.io/badge/Español-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_FR.md"&gt;&lt;img alt="README en Français" src="https://img.shields.io/badge/Français-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_KL.md"&gt;&lt;img alt="README tlhIngan Hol" src="https://img.shields.io/badge/Klingon-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_KR.md"&gt;&lt;img alt="README in Korean" src="https://img.shields.io/badge/한국어-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_AR.md"&gt;&lt;img alt="README بالعربية" src="https://img.shields.io/badge/العربية-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_TR.md"&gt;&lt;img alt="Türkçe README" src="https://img.shields.io/badge/Türkçe-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_VI.md"&gt;&lt;img alt="README Tiếng Việt" src="https://img.shields.io/badge/Ti%E1%BA%BFng%20Vi%E1%BB%87t-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_DE.md"&gt;&lt;img alt="README in Deutsch" src="https://img.shields.io/badge/German-d9d9d9" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/README_BN.md"&gt;&lt;img alt="README in বাংলা" src="https://img.shields.io/badge/বাংলা-d9d9d9" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Dify is an open-source platform for developing LLM applications. Its intuitive interface combines agentic AI workflows, RAG pipelines, agent capabilities, model management, observability features, and more—allowing you to quickly move from prototype to production.&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Before installing Dify, make sure your machine meets the following minimum system requirements:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;CPU &amp;gt;= 2 Core&lt;/li&gt; 
  &lt;li&gt;RAM &amp;gt;= 4 GiB&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;br /&gt; 
&lt;p&gt;The easiest way to start the Dify server is through &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/docker/docker-compose.yaml"&gt;Docker Compose&lt;/a&gt;. Before running Dify with the following commands, make sure that &lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt; and &lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose&lt;/a&gt; are installed on your machine:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd dify
cd docker
cp .env.example .env
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running, you can access the Dify dashboard in your browser at &lt;a href="http://localhost/install"&gt;http://localhost/install&lt;/a&gt; and start the initialization process.&lt;/p&gt; 
&lt;h4&gt;Seeking help&lt;/h4&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted/faqs"&gt;FAQ&lt;/a&gt; if you encounter problems setting up Dify. Reach out to &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/#community--contact"&gt;the community and us&lt;/a&gt; if you are still having issues.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you'd like to contribute to Dify or do additional development, refer to our &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted/local-source-code"&gt;guide to deploying from source code&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Key features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;1. Workflow&lt;/strong&gt;: Build and test powerful AI workflows on a visual canvas, leveraging all the following features and beyond.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;2. Comprehensive model support&lt;/strong&gt;: Seamless integration with hundreds of proprietary / open-source LLMs from dozens of inference providers and self-hosted solutions, covering GPT, Mistral, Llama3, and any OpenAI API-compatible models. A full list of supported model providers can be found &lt;a href="https://docs.dify.ai/getting-started/readme/model-providers"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/langgenius/dify/assets/13230914/5a17bdbe-097a-4100-8363-40255b70f6e3" alt="providers-v5" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3. Prompt IDE&lt;/strong&gt;: Intuitive interface for crafting prompts, comparing model performance, and adding additional features such as text-to-speech to a chat-based app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;4. RAG Pipeline&lt;/strong&gt;: Extensive RAG capabilities that cover everything from document ingestion to retrieval, with out-of-box support for text extraction from PDFs, PPTs, and other common document formats.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;5. Agent capabilities&lt;/strong&gt;: You can define agents based on LLM Function Calling or ReAct, and add pre-built or custom tools for the agent. Dify provides 50+ built-in tools for AI agents, such as Google Search, DALL·E, Stable Diffusion and WolframAlpha.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;6. LLMOps&lt;/strong&gt;: Monitor and analyze application logs and performance over time. You could continuously improve prompts, datasets, and models based on production data and annotations.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;7. Backend-as-a-Service&lt;/strong&gt;: All of Dify's offerings come with corresponding APIs, so you could effortlessly integrate Dify into your own business logic.&lt;/p&gt; 
&lt;h2&gt;Using Dify&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cloud &lt;br /&gt;&lt;/strong&gt; We host a &lt;a href="https://dify.ai"&gt;Dify Cloud&lt;/a&gt; service for anyone to try with zero setup. It provides all the capabilities of the self-deployed version, and includes 200 free GPT-4 calls in the sandbox plan.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Self-hosting Dify Community Edition&lt;br /&gt;&lt;/strong&gt; Quickly get Dify running in your environment with this &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/#quick-start"&gt;starter guide&lt;/a&gt;. Use our &lt;a href="https://docs.dify.ai"&gt;documentation&lt;/a&gt; for further references and more in-depth instructions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dify for enterprise / organizations&lt;br /&gt;&lt;/strong&gt; We provide additional enterprise-centric features. &lt;a href="https://udify.app/chat/22L1zSxg6yW1cWQg"&gt;Log your questions for us through this chatbot&lt;/a&gt; or &lt;a href="mailto:business@dify.ai?subject=%5BGitHub%5DBusiness%20License%20Inquiry"&gt;send us an email&lt;/a&gt; to discuss enterprise needs. &lt;br /&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;For startups and small businesses using AWS, check out &lt;a href="https://aws.amazon.com/marketplace/pp/prodview-t22mebxzwjhu6"&gt;Dify Premium on AWS Marketplace&lt;/a&gt; and deploy it to your own AWS VPC with one click. It's an affordable AMI offering with the option to create apps with custom logo and branding.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Staying ahead&lt;/h2&gt; 
&lt;p&gt;Star Dify on GitHub and be instantly notified of new releases.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/langgenius/dify/assets/13230914/b823edc1-6388-4e25-ad45-2f6b187adbb4" alt="star-us" /&gt;&lt;/p&gt; 
&lt;h2&gt;Advanced Setup&lt;/h2&gt; 
&lt;p&gt;If you need to customize the configuration, please refer to the comments in our &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/docker/.env.example"&gt;.env.example&lt;/a&gt; file and update the corresponding values in your &lt;code&gt;.env&lt;/code&gt; file. Additionally, you might need to make adjustments to the &lt;code&gt;docker-compose.yaml&lt;/code&gt; file itself, such as changing image versions, port mappings, or volume mounts, based on your specific deployment environment and requirements. After making any changes, please re-run &lt;code&gt;docker-compose up -d&lt;/code&gt;. You can find the full list of available environment variables &lt;a href="https://docs.dify.ai/getting-started/install-self-hosted/environments"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you'd like to configure a highly-available setup, there are community-contributed &lt;a href="https://helm.sh/"&gt;Helm Charts&lt;/a&gt; and YAML files which allow Dify to be deployed on Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/douban/charts/tree/master/charts/dify"&gt;Helm Chart by @LeoQuote&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BorisPolonsky/dify-helm"&gt;Helm Chart by @BorisPolonsky&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/magicsong/ai-charts"&gt;Helm Chart by @magicsong&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Winson-030/dify-kubernetes"&gt;YAML file by @Winson-030&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wyy-holding/dify-k8s"&gt;YAML file by @wyy-holding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zhoneym/DifyAI-Kubernetes"&gt;🚀 NEW! YAML files (Supports Dify v1.6.0) by @Zhoneym&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using Terraform for Deployment&lt;/h4&gt; 
&lt;p&gt;Deploy Dify to Cloud Platform with a single click using &lt;a href="https://www.terraform.io/"&gt;terraform&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;Azure Global&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikawang/dify-azure-terraform"&gt;Azure Terraform by @nikawang&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h5&gt;Google Cloud&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DeNA/dify-google-cloud-terraform"&gt;Google Cloud Terraform by @sotazum&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using AWS CDK for Deployment&lt;/h4&gt; 
&lt;p&gt;Deploy Dify to AWS with &lt;a href="https://aws.amazon.com/cdk/"&gt;CDK&lt;/a&gt;&lt;/p&gt; 
&lt;h5&gt;AWS&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/solution-for-deploying-dify-on-aws"&gt;AWS CDK by @KevinZhao (EKS based)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/dify-self-hosted-on-aws"&gt;AWS CDK by @tmokmss (ECS based)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Using Alibaba Cloud Computing Nest&lt;/h4&gt; 
&lt;p&gt;Quickly deploy Dify to Alibaba cloud with &lt;a href="https://computenest.console.aliyun.com/service/instance/create/default?type=user&amp;amp;ServiceName=Dify%E7%A4%BE%E5%8C%BA%E7%89%88"&gt;Alibaba Cloud Computing Nest&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Using Alibaba Cloud Data Management&lt;/h4&gt; 
&lt;p&gt;One-Click deploy Dify to Alibaba Cloud with &lt;a href="https://www.alibabacloud.com/help/en/dms/dify-in-invitational-preview/"&gt;Alibaba Cloud Data Management&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Deploy to AKS with Azure Devops Pipeline&lt;/h4&gt; 
&lt;p&gt;One-Click deploy Dify to AKS with &lt;a href="https://github.com/Ruiruiz30/Dify-helm-chart-AKS"&gt;Azure Devops Pipeline Helm Chart by @LeoZhang&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For those who'd like to contribute code, see our &lt;a href="https://github.com/langgenius/dify/raw/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;. At the same time, please consider supporting Dify by sharing it on social media and at events and conferences.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We are looking for contributors to help translate Dify into languages other than Mandarin or English. If you are interested in helping, please see the &lt;a href="https://github.com/langgenius/dify/raw/main/web/i18n-config/README.md"&gt;i18n README&lt;/a&gt; for more information, and leave us a comment in the &lt;code&gt;global-users&lt;/code&gt; channel of our &lt;a href="https://discord.gg/8Tpq4AcN9c"&gt;Discord Community Server&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Community &amp;amp; contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify/discussions"&gt;GitHub Discussion&lt;/a&gt;. Best for: sharing feedback and asking questions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify/issues"&gt;GitHub Issues&lt;/a&gt;. Best for: bugs you encounter using Dify.AI, and feature proposals. See our &lt;a href="https://github.com/langgenius/dify/raw/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FngNHpbcY7"&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/dify_ai"&gt;X(Twitter)&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;/p&gt; 
&lt;a href="https://github.com/langgenius/dify/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=langgenius/dify" /&gt; &lt;/a&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#langgenius/dify&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=langgenius/dify&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Security disclosure&lt;/h2&gt; 
&lt;p&gt;To protect your privacy, please avoid posting security issues on GitHub. Instead, report issues to &lt;a href="mailto:security@dify.ai"&gt;security@dify.ai&lt;/a&gt;, and our team will respond with detailed answer.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the &lt;a href="https://raw.githubusercontent.com/langgenius/dify/main/LICENSE"&gt;Dify Open Source License&lt;/a&gt;, based on Apache 2.0 with additional conditions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mastra-ai/mastra</title>
      <link>https://github.com/mastra-ai/mastra</link>
      <description>&lt;p&gt;The TypeScript AI agent framework. ⚡ Assistants, RAG, observability. Supports any LLM: GPT-4, Claude, Gemini, Llama.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mastra&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@mastra/core"&gt;&lt;img src="https://badge.fury.io/js/@mastra%2Fcore.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mastra-ai/mastra/actions/workflows/github-code-scanning/codeql"&gt;&lt;img src="https://github.com/mastra-ai/mastra/actions/workflows/github-code-scanning/codeql/badge.svg?sanitize=true" alt="CodeQl" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mastra-ai/mastra/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/mastra-ai/mastra" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/BTYqqHKUrf"&gt;&lt;img src="https://img.shields.io/discord/1309558646228779139?logo=discord&amp;amp;label=Discord&amp;amp;labelColor=white&amp;amp;color=7289DA" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://x.com/mastra_ai"&gt;&lt;img src="https://img.shields.io/twitter/follow/mastra_ai?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@mastra/core"&gt;&lt;img src="https://img.shields.io/npm/dm/%40mastra%252Fcore" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.ycombinator.com/companies?batch=W25"&gt;&lt;img src="https://img.shields.io/badge/Y%20Combinator-W25-orange" alt="Static Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Mastra is the Typescript framework for building AI agents and assistants. It’s used by some of the largest companies in the world to build internal AI automation tooling and customer-facing agents.&lt;/p&gt; 
&lt;p&gt;You can run Mastra on your local machine, bundle it into a Node.js server with Hono, or deploy to a serverless cloud.&lt;/p&gt; 
&lt;p&gt;The main Mastra features are:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Features&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLM Models&lt;/td&gt; 
   &lt;td&gt;Mastra uses the &lt;a href="https://sdk.vercel.ai/docs/introduction"&gt;Vercel AI SDK&lt;/a&gt; for model routing, providing a unified interface to interact with any LLM provider including OpenAI, Anthropic, and Google Gemini. You can choose the specific model and provider, and decide whether to stream the response.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mastra.ai/docs/agents/overview"&gt;Agents&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Agents are systems where the language model chooses a sequence of actions. In Mastra, agents provide LLM models with tools, workflows, and synced data. Agents can call your own functions or APIs of third-party integrations and access knowledge bases you build.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mastra.ai/docs/agents/adding-tools"&gt;Tools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Tools are typed functions that can be executed by agents or workflows, with built-in integration access and parameter validation. Each tool has a schema that defines its inputs, an executor function that implements its logic, and access to configured integrations.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mastra.ai/docs/workflows/overview"&gt;Workflows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Workflows are durable graph-based state machines. They have loops, branching, wait for human input, embed other workflows, do error handling, retries, parsing and so on. They can be built in code or with a visual editor. Each step in a workflow has built-in OpenTelemetry tracing.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mastra.ai/docs/rag/overview"&gt;RAG&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Retrieval-augmented generation (RAG) lets you construct a knowledge base for agents. RAG is an ETL pipeline with specific querying techniques, including chunking, embedding, and vector search.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mastra.ai/docs/integrations"&gt;Integrations&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;In Mastra, integrations are auto-generated, type-safe API clients for third-party services that can be used as tools for agents or steps in workflows.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://mastra.ai/docs/08-running-evals"&gt;Evals&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Evals are automated tests that evaluate LLM outputs using model-graded, rule-based, and statistical methods. Each eval returns a normalized score between 0-1 that can be logged and compared. Evals can be customized with your own prompts and scoring functions.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (v20.0+)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Get an LLM provider API key&lt;/h2&gt; 
&lt;p&gt;If you don't have an API key for an LLM provider, you can get one from the following services:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://platform.openai.com/"&gt;OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://console.anthropic.com/settings/keys"&gt;Anthropic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ai.google.dev/gemini-api/docs"&gt;Google Gemini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://console.groq.com/docs/overview"&gt;Groq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://inference-docs.cerebras.ai/introduction"&gt;Cerebras&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you don't have an account with these providers, you can sign up and get an API key. Anthropic require a credit card to get an API key. Some OpenAI models and Gemini do not and have a generous free tier for its API.&lt;/p&gt; 
&lt;h2&gt;Create a new project&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started with Mastra is by using &lt;code&gt;create-mastra&lt;/code&gt;. This CLI tool enables you to quickly start building a new Mastra application, with everything set up for you.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx create-mastra@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run the script&lt;/h3&gt; 
&lt;p&gt;Finally, run &lt;code&gt;mastra dev&lt;/code&gt; to open the Mastra playground.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're using Anthropic, set the &lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;. If you're using Gemini, set the &lt;code&gt;GOOGLE_GENERATIVE_AI_API_KEY&lt;/code&gt;.&lt;/p&gt; 
&lt;h1&gt;MCP Server (&lt;a href="https://www.npmjs.com/package/@mastra/mcp-docs-server"&gt;@mastra/mcp-docs-server&lt;/a&gt;)&lt;/h1&gt; 
&lt;p&gt;Use our MCP server &lt;a href="https://www.npmjs.com/package/@mastra/mcp-docs-server"&gt;@mastra/mcp-docs-server&lt;/a&gt; to teach your LLM how to use Mastra.&lt;/p&gt; 
&lt;p&gt;This is a Model Context Protocol (MCP) server that provides AI assistants with direct access to Mastra.ai's complete knowledge base.&lt;/p&gt; 
&lt;h2&gt;In Cursor&lt;/h2&gt; 
&lt;p&gt;Create or update .cursor/mcp.json in your project root:&lt;/p&gt; 
&lt;h3&gt;MacOS/Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;{
  "mcpServers": {
    "mastra": {
      "command": "npx",
      "args": ["-y", "@mastra/mcp-docs-server"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;{
  "mcpServers": {
    "mastra": {
      "command": "cmd",
      "args": ["/c", "npx", "-y", "@mastra/mcp-docs-server"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will make all Mastra documentation tools available in your Cursor workspace. Note that the MCP server wont be enabled by default. You'll need to go to Cursor settings -&amp;gt; MCP settings and click "enable" on the Mastra MCP server.&lt;/p&gt; 
&lt;h2&gt;In Windsurf&lt;/h2&gt; 
&lt;p&gt;Create or update ~/.codeium/windsurf/mcp_config.json:&lt;/p&gt; 
&lt;h3&gt;MacOS/Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;{
  "mcpServers": {
    "mastra": {
      "command": "npx",
      "args": ["-y", "@mastra/mcp-docs-server"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more installation options visit &lt;a href="https://www.npmjs.com/package/@mastra/mcp-docs-server"&gt;https://www.npmjs.com/package/@mastra/mcp-docs-server&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Looking to contribute? All types of help are appreciated, from coding to testing and feature specification.&lt;/p&gt; 
&lt;p&gt;If you are a developer and would like to contribute with code, please open an issue to discuss before opening a Pull Request.&lt;/p&gt; 
&lt;p&gt;Information about the project setup can be found in the &lt;a href="https://raw.githubusercontent.com/mastra-ai/mastra/main/DEVELOPMENT.md"&gt;development documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;We have an &lt;a href="https://discord.gg/BTYqqHKUrf"&gt;open community Discord&lt;/a&gt;. Come and say hello and let us know if you have any questions or need any help getting things running.&lt;/p&gt; 
&lt;p&gt;It's also super helpful if you leave the project a star here at the &lt;a href="https://github.com/mastra-ai/mastra"&gt;top of the page&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;We are committed to maintaining the security of this repo and of Mastra as a whole. If you discover a security finding we ask you to please responsibly disclose this to us at &lt;a href="mailto:security@mastra.ai"&gt;security@mastra.ai&lt;/a&gt; and we will get back to you.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fastapi/full-stack-fastapi-template</title>
      <link>https://github.com/fastapi/full-stack-fastapi-template</link>
      <description>&lt;p&gt;Full stack, modern web application template. Using FastAPI, React, SQLModel, PostgreSQL, Docker, GitHub Actions, automatic HTTPS and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Full Stack FastAPI Template&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template/actions?query=workflow%3ATest" target="_blank"&gt;&lt;img src="https://github.com/fastapi/full-stack-fastapi-template/workflows/Test/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/full-stack-fastapi-template" target="_blank"&gt;&lt;img src="https://coverage-badge.samuelcolvin.workers.dev/fastapi/full-stack-fastapi-template.svg?sanitize=true" alt="Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Technology Stack and Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ &lt;a href="https://fastapi.tiangolo.com"&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/a&gt; for the Python backend API. 
  &lt;ul&gt; 
   &lt;li&gt;🧰 &lt;a href="https://sqlmodel.tiangolo.com"&gt;SQLModel&lt;/a&gt; for the Python SQL database interactions (ORM).&lt;/li&gt; 
   &lt;li&gt;🔍 &lt;a href="https://docs.pydantic.dev"&gt;Pydantic&lt;/a&gt;, used by FastAPI, for the data validation and settings management.&lt;/li&gt; 
   &lt;li&gt;💾 &lt;a href="https://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; as the SQL database.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🚀 &lt;a href="https://react.dev"&gt;React&lt;/a&gt; for the frontend. 
  &lt;ul&gt; 
   &lt;li&gt;💃 Using TypeScript, hooks, Vite, and other parts of a modern frontend stack.&lt;/li&gt; 
   &lt;li&gt;🎨 &lt;a href="https://chakra-ui.com"&gt;Chakra UI&lt;/a&gt; for the frontend components.&lt;/li&gt; 
   &lt;li&gt;🤖 An automatically generated frontend client.&lt;/li&gt; 
   &lt;li&gt;🧪 &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for End-to-End testing.&lt;/li&gt; 
   &lt;li&gt;🦇 Dark mode support.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🐋 &lt;a href="https://www.docker.com"&gt;Docker Compose&lt;/a&gt; for development and production.&lt;/li&gt; 
 &lt;li&gt;🔒 Secure password hashing by default.&lt;/li&gt; 
 &lt;li&gt;🔑 JWT (JSON Web Token) authentication.&lt;/li&gt; 
 &lt;li&gt;📫 Email based password recovery.&lt;/li&gt; 
 &lt;li&gt;✅ Tests with &lt;a href="https://pytest.org"&gt;Pytest&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;📞 &lt;a href="https://traefik.io"&gt;Traefik&lt;/a&gt; as a reverse proxy / load balancer.&lt;/li&gt; 
 &lt;li&gt;🚢 Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.&lt;/li&gt; 
 &lt;li&gt;🏭 CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dashboard Login&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/login.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Admin&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Create User&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-create.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Items&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-items.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - User Settings&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-user-settings.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Dark Mode&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-dark.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Interactive API Documentation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/docs.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How To Use It&lt;/h2&gt; 
&lt;p&gt;You can &lt;strong&gt;just fork or clone&lt;/strong&gt; this repository and use it as is.&lt;/p&gt; 
&lt;p&gt;✨ It just works. ✨&lt;/p&gt; 
&lt;h3&gt;How to Use a Private Repository&lt;/h3&gt; 
&lt;p&gt;If you want to have a private repository, GitHub won't allow you to simply fork it as it doesn't allow changing the visibility of forks.&lt;/p&gt; 
&lt;p&gt;But you can do the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new GitHub repo, for example &lt;code&gt;my-full-stack&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Clone this repository manually, set the name with the name of the project you want to use, for example &lt;code&gt;my-full-stack&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:fastapi/full-stack-fastapi-template.git my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter into the new directory:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the new origin to your new repository, copy it from the GitHub interface, for example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote set-url origin git@github.com:octocat/my-full-stack.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add this repo as another "remote" to allow you to get updates later:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote add upstream git@github.com:fastapi/full-stack-fastapi-template.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Push the code to your new repository:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update From the Original Template&lt;/h3&gt; 
&lt;p&gt;After cloning the repository, and after doing changes, you might want to get the latest changes from this original template.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you added the original repository as a remote, you can check it with:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote -v

origin    git@github.com:octocat/my-full-stack.git (fetch)
origin    git@github.com:octocat/my-full-stack.git (push)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (fetch)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (push)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull the latest changes without merging:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull --no-commit upstream master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will download the latest changes from this template without committing them, that way you can check everything is right before committing.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If there are conflicts, solve them in your editor.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once you are done, commit the changes:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git merge --continue
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure&lt;/h3&gt; 
&lt;p&gt;You can then update configs in the &lt;code&gt;.env&lt;/code&gt; files to customize your configurations.&lt;/p&gt; 
&lt;p&gt;Before deploying it, make sure you change at least the values for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FIRST_SUPERUSER_PASSWORD&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POSTGRES_PASSWORD&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can (and should) pass these as environment variables from secrets.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt; docs for more details.&lt;/p&gt; 
&lt;h3&gt;Generate Secret Keys&lt;/h3&gt; 
&lt;p&gt;Some environment variables in the &lt;code&gt;.env&lt;/code&gt; file have a default value of &lt;code&gt;changethis&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You have to change them with a secret key, to generate secret keys you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -c "import secrets; print(secrets.token_urlsafe(32))"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy the content and use that as password / secret key. And run that again to generate another secure key.&lt;/p&gt; 
&lt;h2&gt;How To Use It - Alternative With Copier&lt;/h2&gt; 
&lt;p&gt;This repository also supports generating a new project using &lt;a href="https://copier.readthedocs.io"&gt;Copier&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It will copy all the files, ask you configuration questions, and update the &lt;code&gt;.env&lt;/code&gt; files with your answers.&lt;/p&gt; 
&lt;h3&gt;Install Copier&lt;/h3&gt; 
&lt;p&gt;You can install Copier with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or better, if you have &lt;a href="https://pipx.pypa.io/"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt;, you can run it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have &lt;code&gt;pipx&lt;/code&gt;, installing copier is optional, you could run it directly.&lt;/p&gt; 
&lt;h3&gt;Generate a Project With Copier&lt;/h3&gt; 
&lt;p&gt;Decide a name for your new project's directory, you will use it below. For example, &lt;code&gt;my-awesome-project&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Go to the directory that will be the parent of your project, and run the command with your project's name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have &lt;code&gt;pipx&lt;/code&gt; and you didn't install &lt;code&gt;copier&lt;/code&gt;, you can run it directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx run copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; the &lt;code&gt;--trust&lt;/code&gt; option is necessary to be able to execute a &lt;a href="https://github.com/fastapi/full-stack-fastapi-template/raw/master/.copier/update_dotenv.py"&gt;post-creation script&lt;/a&gt; that updates your &lt;code&gt;.env&lt;/code&gt; files.&lt;/p&gt; 
&lt;h3&gt;Input Variables&lt;/h3&gt; 
&lt;p&gt;Copier will ask you for some data, you might want to have at hand before generating the project.&lt;/p&gt; 
&lt;p&gt;But don't worry, you can just update any of that in the &lt;code&gt;.env&lt;/code&gt; files afterwards.&lt;/p&gt; 
&lt;p&gt;The input variables, with their default values (some auto generated) are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;project_name&lt;/code&gt;: (default: &lt;code&gt;"FastAPI Project"&lt;/code&gt;) The name of the project, shown to API users (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stack_name&lt;/code&gt;: (default: &lt;code&gt;"fastapi-project"&lt;/code&gt;) The name of the stack used for Docker Compose labels and project name (no spaces, no periods) (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;secret_key&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The secret key for the project, used for security, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser&lt;/code&gt;: (default: &lt;code&gt;"admin@example.com"&lt;/code&gt;) The email of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_host&lt;/code&gt;: (default: "") The SMTP server host to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_user&lt;/code&gt;: (default: "") The SMTP server user to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_password&lt;/code&gt;: (default: "") The SMTP server password to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;emails_from_email&lt;/code&gt;: (default: &lt;code&gt;"info@example.com"&lt;/code&gt;) The email account to send emails from, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;postgres_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password for the PostgreSQL database, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sentry_dsn&lt;/code&gt;: (default: "") The DSN for Sentry, if you are using it, you can set it later in .env.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backend Development&lt;/h2&gt; 
&lt;p&gt;Backend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/backend/README.md"&gt;backend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frontend Development&lt;/h2&gt; 
&lt;p&gt;Frontend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/frontend/README.md"&gt;frontend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Deployment docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;General development docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/development.md"&gt;development.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This includes using Docker Compose, custom local domains, &lt;code&gt;.env&lt;/code&gt; configurations, etc.&lt;/p&gt; 
&lt;h2&gt;Release Notes&lt;/h2&gt; 
&lt;p&gt;Check the file &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/release-notes.md"&gt;release-notes.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Full Stack FastAPI Template is licensed under the terms of the MIT license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bluesky-social/social-app</title>
      <link>https://github.com/bluesky-social/social-app</link>
      <description>&lt;p&gt;The Bluesky Social application for Web, iOS, and Android&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Bluesky Social App&lt;/h1&gt; 
&lt;p&gt;Welcome friends! This is the codebase for the Bluesky Social app.&lt;/p&gt; 
&lt;p&gt;Get the app itself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Web: &lt;a href="https://bsky.app"&gt;bsky.app&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;iOS: &lt;a href="https://apps.apple.com/us/app/bluesky-social/id6444370199"&gt;App Store&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Android: &lt;a href="https://play.google.com/store/apps/details?id=xyz.blueskyweb.app"&gt;Play Store&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development Resources&lt;/h2&gt; 
&lt;p&gt;This is a &lt;a href="https://reactnative.dev/"&gt;React Native&lt;/a&gt; application, written in the TypeScript programming language. It builds on the &lt;code&gt;atproto&lt;/code&gt; TypeScript packages (like &lt;a href="https://www.npmjs.com/package/@atproto/api"&gt;&lt;code&gt;@atproto/api&lt;/code&gt;&lt;/a&gt;), which are also open source, but in &lt;a href="https://github.com/bluesky-social/atproto"&gt;a different git repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There is a small amount of Go language source code (in &lt;code&gt;./bskyweb/&lt;/code&gt;), for a web service that returns the React Native Web application.&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/bluesky-social/social-app/main/docs/build.md"&gt;Build Instructions&lt;/a&gt; are a good place to get started with the app itself.&lt;/p&gt; 
&lt;p&gt;The Authenticated Transfer Protocol ("AT Protocol" or "atproto") is a decentralized social media protocol. You don't &lt;em&gt;need&lt;/em&gt; to understand AT Protocol to work with this application, but it can help. Learn more at:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://atproto.com/guides/overview"&gt;Overview and Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bluesky-social/atproto/discussions"&gt;GitHub Discussions&lt;/a&gt; 👈 Great place to ask questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atproto.com/specs/atp"&gt;Protocol Specifications&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bsky.social/about/blog/3-6-2022-a-self-authenticating-social-protocol"&gt;Blogpost on self-authenticating data structures&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Bluesky Social application encompasses a set of schemas and APIs built in the overall AT Protocol framework. The namespace for these "Lexicons" is &lt;code&gt;app.bsky.*&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] While we do accept contributions, we prioritize high quality issues and pull requests. Adhering to the below guidelines will ensure a more timely review.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Rules:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We may not respond to your issue or PR.&lt;/li&gt; 
 &lt;li&gt;We may close an issue or PR without much feedback.&lt;/li&gt; 
 &lt;li&gt;We may lock discussions or contributions if our attention is getting DDOSed.&lt;/li&gt; 
 &lt;li&gt;We're not going to provide support for build issues.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Guidelines:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check for existing issues before filing a new one please.&lt;/li&gt; 
 &lt;li&gt;Open an issue and give some time for discussion before submitting a PR.&lt;/li&gt; 
 &lt;li&gt;Stay away from PRs like... 
  &lt;ul&gt; 
   &lt;li&gt;Changing "Post" to "Skeet."&lt;/li&gt; 
   &lt;li&gt;Refactoring the codebase, e.g., to replace React Query with Redux Toolkit or something.&lt;/li&gt; 
   &lt;li&gt;Adding entirely new features without prior discussion.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Remember, we serve a wide community of users. Our day-to-day involves us constantly asking "which top priority is our top priority." If you submit well-written PRs that solve problems concisely, that's an awesome contribution. Otherwise, as much as we'd love to accept your ideas and contributions, we really don't have the bandwidth. That's what forking is for!&lt;/p&gt; 
&lt;h2&gt;Forking guidelines&lt;/h2&gt; 
&lt;p&gt;You have our blessing 🪄✨ to fork this application! However, it's very important to be clear to users when you're giving them a fork.&lt;/p&gt; 
&lt;p&gt;Please be sure to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Change all branding in the repository and UI to clearly differentiate from Bluesky.&lt;/li&gt; 
 &lt;li&gt;Change any support links (feedback, email, terms of service, etc) to your own systems.&lt;/li&gt; 
 &lt;li&gt;Replace any analytics or error-collection systems with your own so we don't get super confused.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security disclosures&lt;/h2&gt; 
&lt;p&gt;If you discover any security issues, please send an email to &lt;a href="mailto:security@bsky.app"&gt;security@bsky.app&lt;/a&gt;. The email is automatically CC'd to the entire team and we'll respond promptly.&lt;/p&gt; 
&lt;h2&gt;Are you a developer interested in building on atproto?&lt;/h2&gt; 
&lt;p&gt;Bluesky is an open social network built on the AT Protocol, a flexible technology that will never lock developers out of the ecosystems that they help build. With atproto, third-party integration can be as seamless as first-party through custom feeds, federated services, clients, and more.&lt;/p&gt; 
&lt;h2&gt;License (MIT)&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bluesky-social/social-app/main/LICENSE"&gt;./LICENSE&lt;/a&gt; for the full license.&lt;/p&gt; 
&lt;h2&gt;P.S.&lt;/h2&gt; 
&lt;p&gt;We ❤️ you and all of the ways you support us. Thank you for making Bluesky a great place!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hoppscotch/hoppscotch</title>
      <link>https://github.com/hoppscotch/hoppscotch</link>
      <description>&lt;p&gt;Open source API development ecosystem - https://hoppscotch.io (open-source alternative to Postman, Insomnia)&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://hoppscotch.io"&gt; &lt;img src="https://avatars.githubusercontent.com/u/56705483" alt="Hoppscotch" height="64" /&gt; &lt;/a&gt; 
 &lt;h3&gt; &lt;b&gt; Hoppscotch &lt;/b&gt; &lt;/h3&gt; 
 &lt;b&gt; Open Source API Development Ecosystem &lt;/b&gt; 
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CODE_OF_CONDUCT.md"&gt;&lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen?logo=github" alt="contributions welcome" /&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io"&gt;&lt;img src="https://img.shields.io/website?url=https%3A%2F%2Fhoppscotch.io&amp;amp;logo=hoppscotch" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hoppscotch/hoppscotch/actions"&gt;&lt;img src="https://github.com/hoppscotch/hoppscotch/actions/workflows/tests.yml/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/share?text=%F0%9F%91%BD%20Hoppscotch%20%E2%80%A2%20Open%20source%20API%20development%20ecosystem%20-%20Helps%20you%20create%20requests%20faster,%20saving%20precious%20time%20on%20development.&amp;amp;url=https://hoppscotch.io&amp;amp;hashtags=hoppscotch&amp;amp;via=hoppscotch_io"&gt;&lt;img src="https://img.shields.io/twitter/url?url=https%3A%2F%2Fhoppscotch.io%2F" alt="Tweet" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;/p&gt; 
 &lt;p&gt; &lt;sub&gt; Built with ❤︎ by &lt;a href="https://github.com/hoppscotch/hoppscotch/graphs/contributors"&gt; contributors &lt;/a&gt; &lt;/sub&gt; &lt;/p&gt; 
 &lt;br /&gt; 
 &lt;p&gt; &lt;a href="https://hoppscotch.io"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="./packages/hoppscotch-common/public/images/banner-dark.png" /&gt; 
    &lt;source media="(prefers-color-scheme: light)" srcset="./packages/hoppscotch-common/public/images/banner-light.png" /&gt; 
    &lt;img alt="Hoppscotch" src="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/packages/hoppscotch-common/public/images/banner-dark.png" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;em&gt;We highly recommend you take a look at the &lt;a href="https://docs.hoppscotch.io"&gt;&lt;strong&gt;Hoppscotch Documentation&lt;/strong&gt;&lt;/a&gt; to learn more about the app.&lt;/em&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Support&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://hoppscotch.io/discord"&gt;&lt;img src="https://img.shields.io/badge/chat-Discord-7289DA?logo=discord" alt="Chat on Discord" /&gt;&lt;/a&gt; &lt;a href="https://hoppscotch.io/telegram"&gt;&lt;img src="https://img.shields.io/badge/chat-Telegram-2CA5E0?logo=telegram" alt="Chat on Telegram" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hoppscotch/hoppscotch/discussions"&gt;&lt;img src="https://img.shields.io/badge/discussions-GitHub-333333?logo=github" alt="Discuss on GitHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;❤️ &lt;strong&gt;Lightweight:&lt;/strong&gt; Crafted with minimalistic UI design.&lt;/p&gt; 
&lt;p&gt;⚡️ &lt;strong&gt;Fast:&lt;/strong&gt; Send requests and get responses in real time.&lt;/p&gt; 
&lt;p&gt;🗄️ &lt;strong&gt;HTTP Methods:&lt;/strong&gt; Request methods define the type of action you are requesting to be performed.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;GET&lt;/code&gt; - Requests retrieve resource information&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POST&lt;/code&gt; - The server creates a new entry in a database&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PUT&lt;/code&gt; - Updates an existing resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;PATCH&lt;/code&gt; - Very similar to &lt;code&gt;PUT&lt;/code&gt; but makes a partial update on a resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;DELETE&lt;/code&gt; - Deletes resource or related component&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;HEAD&lt;/code&gt; - Retrieve response headers identical to those of a GET request, but without the response body.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;CONNECT&lt;/code&gt; - Establishes a tunnel to the server identified by the target resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;OPTIONS&lt;/code&gt; - Describe the communication options for the target resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TRACE&lt;/code&gt; - Performs a message loop-back test along the path to the target resource&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;custom&amp;gt;&lt;/code&gt; - Some APIs use custom request methods such as &lt;code&gt;LIST&lt;/code&gt;. Type in your custom methods.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌈 &lt;strong&gt;Theming:&lt;/strong&gt; Customizable combinations for background, foreground, and accent colors — &lt;a href="https://hoppscotch.io/settings"&gt;customize now&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Choose a theme: System preference, Light, Dark, and Black&lt;/li&gt; 
 &lt;li&gt;Choose accent colors: Green, Teal, Blue, Indigo, Purple, Yellow, Orange, Red, and Pink&lt;/li&gt; 
 &lt;li&gt;Distraction-free Zen mode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Customized themes are synced with your cloud/local session.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;🔥 &lt;strong&gt;PWA:&lt;/strong&gt; Install as a &lt;a href="https://web.dev/progressive-web-apps"&gt;Progressive Web App&lt;/a&gt; on your device.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Instant loading with Service Workers&lt;/li&gt; 
 &lt;li&gt;Offline support&lt;/li&gt; 
 &lt;li&gt;Low RAM/memory and CPU usage&lt;/li&gt; 
 &lt;li&gt;Add to Home Screen&lt;/li&gt; 
 &lt;li&gt;Desktop PWA&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🚀 &lt;strong&gt;Request:&lt;/strong&gt; Retrieve response from endpoint instantly.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Choose &lt;code&gt;method&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Enter &lt;code&gt;URL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Send&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy/share public "Share URL"&lt;/li&gt; 
 &lt;li&gt;Generate/copy request code snippets for 10+ languages and frameworks&lt;/li&gt; 
 &lt;li&gt;Import &lt;code&gt;cURL&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Label requests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🔌 &lt;strong&gt;WebSocket:&lt;/strong&gt; Establish full-duplex communication channels over a single TCP connection.&lt;/p&gt; 
&lt;p&gt;📡 &lt;strong&gt;Server-Sent Events:&lt;/strong&gt; Receive a stream of updates from a server over an HTTP connection without resorting to polling.&lt;/p&gt; 
&lt;p&gt;🌩 &lt;strong&gt;Socket.IO:&lt;/strong&gt; Send and Receive data with the SocketIO server.&lt;/p&gt; 
&lt;p&gt;🦟 &lt;strong&gt;MQTT:&lt;/strong&gt; Subscribe and Publish to topics of an MQTT Broker.&lt;/p&gt; 
&lt;p&gt;🔮 &lt;strong&gt;GraphQL:&lt;/strong&gt; GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set endpoint and get schema&lt;/li&gt; 
 &lt;li&gt;Multi-column docs&lt;/li&gt; 
 &lt;li&gt;Set custom request headers&lt;/li&gt; 
 &lt;li&gt;Query schema&lt;/li&gt; 
 &lt;li&gt;Get query response&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🔐 &lt;strong&gt;Authorization:&lt;/strong&gt; Allows to identify the end-user.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;None&lt;/li&gt; 
 &lt;li&gt;Basic&lt;/li&gt; 
 &lt;li&gt;Bearer Token&lt;/li&gt; 
 &lt;li&gt;OAuth 2.0&lt;/li&gt; 
 &lt;li&gt;OIDC Access Token/PKCE&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📢 &lt;strong&gt;Headers:&lt;/strong&gt; Describes the format the body of your request is being sent in.&lt;/p&gt; 
&lt;p&gt;📫 &lt;strong&gt;Parameters:&lt;/strong&gt; Use request parameters to set varying parts in simulated requests.&lt;/p&gt; 
&lt;p&gt;📃 &lt;strong&gt;Request Body:&lt;/strong&gt; Used to send and receive data via the REST API.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set &lt;code&gt;Content Type&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;FormData, JSON, and many more&lt;/li&gt; 
 &lt;li&gt;Toggle between key-value and RAW input parameter list&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📮 &lt;strong&gt;Response:&lt;/strong&gt; Contains the status line, headers, and the message/response body.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copy the response to the clipboard&lt;/li&gt; 
 &lt;li&gt;Download the response as a file&lt;/li&gt; 
 &lt;li&gt;View response headers&lt;/li&gt; 
 &lt;li&gt;View raw and preview HTML, image, JSON, and XML responses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⏰ &lt;strong&gt;History:&lt;/strong&gt; Request entries are synced with your cloud/local session storage.&lt;/p&gt; 
&lt;p&gt;📁 &lt;strong&gt;Collections:&lt;/strong&gt; Keep your API requests organized with collections and folders. Reuse them with a single click.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unlimited collections, folders, and requests&lt;/li&gt; 
 &lt;li&gt;Nested folders&lt;/li&gt; 
 &lt;li&gt;Export and import as a file or GitHub gist&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Collections are synced with your cloud/local session storage.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;📜 &lt;strong&gt;Pre-Request Scripts:&lt;/strong&gt; Snippets of code associated with a request that is executed before the request is sent.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set environment variables&lt;/li&gt; 
 &lt;li&gt;Include timestamp in the request headers&lt;/li&gt; 
 &lt;li&gt;Send a random alphanumeric string in the URL parameters&lt;/li&gt; 
 &lt;li&gt;Any JavaScript functions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;👨‍👩‍👧‍👦 &lt;strong&gt;Teams:&lt;/strong&gt; Helps you collaborate across your teams to design, develop, and test APIs faster.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create unlimited teams&lt;/li&gt; 
 &lt;li&gt;Create unlimited shared collections&lt;/li&gt; 
 &lt;li&gt;Create unlimited team members&lt;/li&gt; 
 &lt;li&gt;Role-based access control&lt;/li&gt; 
 &lt;li&gt;Cloud sync&lt;/li&gt; 
 &lt;li&gt;Multiple devices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;👥 &lt;strong&gt;Workspaces:&lt;/strong&gt; Organize your personal and team collections environments into workspaces. Easily switch between workspaces to manage multiple projects.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create unlimited workspaces&lt;/li&gt; 
 &lt;li&gt;Switch between personal and team workspaces&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⌨️ &lt;strong&gt;Keyboard Shortcuts:&lt;/strong&gt; Optimized for efficiency.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://docs.hoppscotch.io/documentation/features/shortcuts"&gt;Read our documentation on Keyboard Shortcuts&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;🌐 &lt;strong&gt;Proxy:&lt;/strong&gt; Enable Proxy Mode from Settings to access blocked APIs.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hide your IP address&lt;/li&gt; 
 &lt;li&gt;Fixes &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;&lt;code&gt;CORS&lt;/code&gt;&lt;/a&gt; (Cross-Origin Resource Sharing) issues&lt;/li&gt; 
 &lt;li&gt;Access APIs served in non-HTTPS (&lt;code&gt;http://&lt;/code&gt;) endpoints&lt;/li&gt; 
 &lt;li&gt;Use your Proxy URL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Official proxy server is hosted by Hoppscotch - &lt;strong&gt;&lt;a href="https://github.com/hoppscotch/proxyscotch"&gt;GitHub&lt;/a&gt;&lt;/strong&gt; - &lt;strong&gt;&lt;a href="https://docs.hoppscotch.io/support/privacy"&gt;Privacy Policy&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;🌎 &lt;strong&gt;i18n:&lt;/strong&gt; Experience the app in your language.&lt;/p&gt; 
&lt;p&gt;Help us to translate Hoppscotch. Please read &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/TRANSLATIONS.md"&gt;&lt;code&gt;TRANSLATIONS&lt;/code&gt;&lt;/a&gt; for details on our &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CODE_OF_CONDUCT.md"&gt;&lt;code&gt;CODE OF CONDUCT&lt;/code&gt;&lt;/a&gt; and the process for submitting pull requests to us.&lt;/p&gt; 
&lt;p&gt;☁️ &lt;strong&gt;Auth + Sync:&lt;/strong&gt; Sign in and sync your data in real-time across all your devices.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Sign in with:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub&lt;/li&gt; 
 &lt;li&gt;Google&lt;/li&gt; 
 &lt;li&gt;Microsoft&lt;/li&gt; 
 &lt;li&gt;Email&lt;/li&gt; 
 &lt;li&gt;SSO (Single Sign-On)[^EE]&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;🔄 Synchronize your data:&lt;/strong&gt; Handoff to continue tasks on your other devices.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Workspaces&lt;/li&gt; 
 &lt;li&gt;History&lt;/li&gt; 
 &lt;li&gt;Collections&lt;/li&gt; 
 &lt;li&gt;Environments&lt;/li&gt; 
 &lt;li&gt;Settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✅ &lt;strong&gt;Post-Request Tests:&lt;/strong&gt; Write tests associated with a request that is executed after the request's response.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check the status code as an integer&lt;/li&gt; 
 &lt;li&gt;Filter response headers&lt;/li&gt; 
 &lt;li&gt;Parse the response data&lt;/li&gt; 
 &lt;li&gt;Set environment variables&lt;/li&gt; 
 &lt;li&gt;Write JavaScript code&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🌱 &lt;strong&gt;Environments:&lt;/strong&gt; Environment variables allow you to store and reuse values in your requests and scripts.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unlimited environments and variables&lt;/li&gt; 
 &lt;li&gt;Initialize through the pre-request script&lt;/li&gt; 
 &lt;li&gt;Export as / import from GitHub gist&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;i&gt;Use-cases&lt;/i&gt;&lt;/summary&gt; 
 &lt;hr /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;By storing a value in a variable, you can reference it throughout your request section&lt;/li&gt; 
  &lt;li&gt;If you need to update the value, you only have to change it in one place&lt;/li&gt; 
  &lt;li&gt;Using variables increases your ability to work efficiently and minimizes the likelihood of error&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;p&gt;🚚 &lt;strong&gt;Bulk Edit:&lt;/strong&gt; Edit key-value pairs in bulk.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Entries are separated by newline&lt;/li&gt; 
 &lt;li&gt;Keys and values are separated by &lt;code&gt;:&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Prepend &lt;code&gt;#&lt;/code&gt; to any row you want to add but keep disabled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;🎛️ &lt;strong&gt;Admin dashboard:&lt;/strong&gt; Manage your team and invite members.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Insights&lt;/li&gt; 
 &lt;li&gt;Manage users&lt;/li&gt; 
 &lt;li&gt;Manage teams&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;📦 &lt;strong&gt;Add-ons:&lt;/strong&gt; Official add-ons for hoppscotch.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch/tree/main/packages/hoppscotch-cli"&gt;Hoppscotch CLI&lt;/a&gt;&lt;/strong&gt; - Command-line interface for Hoppscotch.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/hoppscotch/proxyscotch"&gt;Proxy&lt;/a&gt;&lt;/strong&gt; - A simple proxy server created for Hoppscotch.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/hoppscotch/hoppscotch-extension"&gt;Browser Extensions&lt;/a&gt;&lt;/strong&gt; - Browser extensions that enhance your Hoppscotch experience.&lt;/p&gt; &lt;p&gt;&lt;a href="https://addons.mozilla.org/en-US/firefox/addon/hoppscotch"&gt;&lt;img src="https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_16x16.png" alt="Firefox" /&gt; &lt;strong&gt;Firefox&lt;/strong&gt;&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://chrome.google.com/webstore/detail/hoppscotch-extension-for-c/amknoiejhlmhancpahfcfcfhllgkpbld"&gt;&lt;img src="https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_16x16.png" alt="Chrome" /&gt; &lt;strong&gt;Chrome&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;strong&gt;Extensions fix &lt;code&gt;CORS&lt;/code&gt; issues.&lt;/strong&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;Add-ons are developed and maintained under &lt;strong&gt;&lt;a href="https://github.com/hoppscotch"&gt;Hoppscotch Organization&lt;/a&gt;&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For a complete list of features, please read our &lt;a href="https://docs.hoppscotch.io"&gt;documentation&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Demo&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Web : &lt;a href="https://hoppscotch.io"&gt;hoppscotch.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Windows/Linux/macOS : &lt;a href="https://docs.hoppscotch.io/documentation/clients/desktop#download-hoppscotch-desktop-app"&gt;Desktop Apps&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Provide your API endpoint in the URL field&lt;/li&gt; 
 &lt;li&gt;Click "Send" to simulate the request&lt;/li&gt; 
 &lt;li&gt;View the response&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developing&lt;/h2&gt; 
&lt;p&gt;Follow our &lt;a href="https://docs.hoppscotch.io/documentation/self-host/getting-started"&gt;self-hosting documentation&lt;/a&gt; to get started with the development environment.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please contribute using &lt;a href="https://guides.github.com/introduction/flow"&gt;GitHub Flow&lt;/a&gt;. Create a branch, add commits, and &lt;a href="https://github.com/hoppscotch/hoppscotch/compare"&gt;open a pull request&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please read &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CONTRIBUTING.md"&gt;&lt;code&gt;CONTRIBUTING&lt;/code&gt;&lt;/a&gt; for details on our &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CODE_OF_CONDUCT.md"&gt;&lt;code&gt;CODE OF CONDUCT&lt;/code&gt;&lt;/a&gt;, and the process for submitting pull requests to us.&lt;/p&gt; 
&lt;h2&gt;Continuous Integration&lt;/h2&gt; 
&lt;p&gt;We use &lt;a href="https://github.com/features/actions"&gt;GitHub Actions&lt;/a&gt; for continuous integration. Check out our &lt;a href="https://github.com/hoppscotch/hoppscotch/actions"&gt;build workflows&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CHANGELOG.md"&gt;&lt;code&gt;CHANGELOG&lt;/code&gt;&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;p&gt;This project owes its existence to the collective efforts of all those who contribute — &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/CONTRIBUTING.md"&gt;contribute now&lt;/a&gt;.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/hoppscotch/hoppscotch/graphs/contributors"&gt; &lt;img src="https://opencollective.com/hoppscotch/contributors.svg?width=840&amp;amp;button=false" alt="Contributors" width="100%" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt; — see the &lt;a href="https://raw.githubusercontent.com/hoppscotch/hoppscotch/main/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; file for details.&lt;/p&gt; 
&lt;p&gt;[^EE]: Enterprise edition feature. &lt;a href="https://docs.hoppscotch.io/documentation/self-host/getting-started"&gt;Learn more&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>expo/expo</title>
      <link>https://github.com/expo/expo</link>
      <description>&lt;p&gt;An open-source framework for making universal native apps with React. Expo runs on Android, iOS, and the web.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://expo.dev/"&gt; &lt;img alt="Expo logo" height="128" src="https://raw.githubusercontent.com/expo/expo/main/.github/resources/banner.png" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://expo.dev/"&gt;Expo&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://expo.dev/"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="SDK version" href="https://www.npmjs.com/package/expo" target="_blank"&gt; &lt;img alt="Expo SDK version" src="https://img.shields.io/npm/v/expo.svg?style=flat-square&amp;amp;label=SDK&amp;amp;labelColor=000000&amp;amp;color=4630EB" /&gt; &lt;/a&gt; &lt;a aria-label="Chat or ask a question" href="https://chat.expo.dev" target="_blank"&gt; &lt;img alt="Chat or ask a question" src="https://img.shields.io/discord/695411232856997968.svg?style=flat-square&amp;amp;labelColor=000000&amp;amp;color=4630EB&amp;amp;logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=Chat%20with%20us" /&gt; &lt;/a&gt; &lt;a aria-label="Expo is free to use" href="https://github.com/expo/expo/raw/main/LICENSE" target="_blank"&gt; &lt;img alt="License: MIT" src="https://img.shields.io/badge/License-MIT-success.svg?style=flat-square&amp;amp;color=33CC12" target="_blank" /&gt; &lt;/a&gt; &lt;a aria-label="expo downloads" href="http://www.npmtrends.com/expo" target="_blank"&gt; &lt;img alt="Downloads" src="https://img.shields.io/npm/dm/expo.svg?style=flat-square&amp;amp;labelColor=gray&amp;amp;color=33CC12&amp;amp;label=Downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a aria-label="try expo with snack" href="https://snack.expo.dev"&gt;&lt;b&gt;Try Expo in the Browser&lt;/b&gt;&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;Read the Documentation&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.dev/blog"&gt;Learn more on our blog&lt;/a&gt;  •  &lt;a aria-label="expo documentation" href="https://expo.canny.io/feature-requests"&gt;Request a feature&lt;/a&gt; &lt;/p&gt; 
&lt;h6 align="center"&gt;Follow us on&lt;/h6&gt; 
&lt;p align="center"&gt; &lt;a aria-label="Follow @expo on X" href="https://x.com/intent/follow?screen_name=expo" target="_blank"&gt; &lt;img alt="Expo on X" src="https://img.shields.io/badge/X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on GitHub" href="https://github.com/expo" target="_blank"&gt; &lt;img alt="Expo on GitHub" src="https://img.shields.io/badge/GitHub-222222?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Reddit" href="https://www.reddit.com/r/expo/" target="_blank"&gt; &lt;img alt="Expo on Reddit" src="https://img.shields.io/badge/Reddit-FF4500?style=for-the-badge&amp;amp;logo=reddit&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on Bluesky" href="https://bsky.app/profile/expo.dev" target="_blank"&gt; &lt;img alt="Expo on Bluesky" src="https://img.shields.io/badge/Bluesky-1DA1F2?style=for-the-badge&amp;amp;logo=bluesky&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt;&amp;nbsp; &lt;a aria-label="Follow @expo on LinkedIn" href="https://www.linkedin.com/company/expo-dev" target="_blank"&gt; &lt;img alt="Expo on LinkedIn" src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white" target="_blank" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Expo is an open-source platform for making universal native apps that run on Android, iOS, and the web. It includes a universal runtime and libraries that let you build native apps by writing React and JavaScript.&lt;/p&gt; 
&lt;p&gt;This repository includes the Expo SDK, Modules API, Go app, CLI, Router, documentation, and various other supporting tools. &lt;a href="https://expo.dev/eas"&gt;Expo Application Services (EAS)&lt;/a&gt; is a platform of hosted services that are deeply integrated with Expo open source tools. EAS helps you build, ship, and iterate on your app as an individual or a team.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://expo.dev/guidelines"&gt;Expo Community Guidelines&lt;/a&gt; before interacting in the repository. Thank you for helping keep the Expo community open and welcoming!&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-documentation"&gt;📚 Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-project-layout"&gt;🗺 Project Layout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-badges"&gt;🏅 Badges&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-contributing"&gt;👏 Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-faq"&gt;❓ FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#-the-team"&gt;💙 The Team&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;p&gt;Learn about building and deploying universal apps &lt;a aria-label="expo documentation" href="https://docs.expo.dev"&gt;in our official docs!&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/versions/latest/"&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.expo.dev/workflow/customizing/"&gt;Using Custom Native Modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🗺 Project Layout&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/packages"&gt;&lt;code&gt;packages&lt;/code&gt;&lt;/a&gt; All the source code for Expo modules, if you want to edit a library or just see how it works this is where you'll find it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps"&gt;&lt;code&gt;apps&lt;/code&gt;&lt;/a&gt; This is where you can find Expo projects which are linked to the development modules. You'll do most of your testing in here.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go"&gt;&lt;code&gt;apps/expo-go&lt;/code&gt;&lt;/a&gt; This is where you can find the source code for Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/apps/expo-go/ios"&gt;&lt;code&gt;apps/expo-go/ios/Exponent.xcworkspace&lt;/code&gt;&lt;/a&gt; is the Xcode workspace. When developing iOS, always open this instead of &lt;code&gt;Exponent.xcodeproj&lt;/code&gt; because the workspace also loads the CocoaPods dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/docs"&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/a&gt; The source code for &lt;strong&gt;&lt;a href="https://docs.expo.dev"&gt;https://docs.expo.dev&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/templates"&gt;&lt;code&gt;templates&lt;/code&gt;&lt;/a&gt; The template projects you get when you run &lt;code&gt;npx create-expo-app&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/react-native-lab"&gt;&lt;code&gt;react-native-lab&lt;/code&gt;&lt;/a&gt; This is our fork of &lt;code&gt;react-native&lt;/code&gt; used to build Expo Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/guides"&gt;&lt;code&gt;guides&lt;/code&gt;&lt;/a&gt; In-depth tutorials for advanced topics like contributing to the client.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/tools"&gt;&lt;code&gt;tools&lt;/code&gt;&lt;/a&gt; contain build and configuration tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files"&gt;&lt;code&gt;template-files&lt;/code&gt;&lt;/a&gt; contains templates for files that require private keys. They are populated using the keys in &lt;code&gt;template-files/keys.json&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expo/expo/main/template-files/ios/dependencies.json"&gt;&lt;code&gt;template-files/ios/dependencies.json&lt;/code&gt;&lt;/a&gt; specifies the CocoaPods dependencies of the app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏅 Badges&lt;/h2&gt; 
&lt;p&gt;Let everyone know your app can be run instantly in the &lt;em&gt;Expo Go&lt;/em&gt; app! &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://expo.dev/client"&gt;&lt;img src="https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000" alt="runs with Expo Go" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-000.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)

[![runs with Expo Go](https://img.shields.io/badge/Runs%20with%20Expo%20Go-4630EB.svg?style=flat-square&amp;amp;logo=EXPO&amp;amp;labelColor=f3f3f3&amp;amp;logoColor=000)](https://expo.dev/client)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;👏 Contributing&lt;/h2&gt; 
&lt;p&gt;If you like Expo and want to help make it better then check out our &lt;a href="https://raw.githubusercontent.com/expo/expo/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;! Check out the &lt;a href="https://github.com/expo/expo/tree/main/packages/%40expo/cli"&gt;CLI package&lt;/a&gt; to work on the Expo CLI.&lt;/p&gt; 
&lt;h2&gt;❓ FAQ&lt;/h2&gt; 
&lt;p&gt;If you have questions about Expo and want answers, then check out our &lt;a href="https://docs.expo.dev/faq/"&gt;Frequently Asked Questions&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;If you still have questions you can ask them on our &lt;a href="https://chat.expo.dev"&gt;Discord and Forums&lt;/a&gt; or X &lt;a href="https://x.com/expo"&gt;@expo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💙 The Team&lt;/h2&gt; 
&lt;p&gt;Curious about who makes Expo? Here are our &lt;a href="https://expo.dev/about"&gt;team members&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Expo source code is made available under the &lt;a href="https://raw.githubusercontent.com/expo/expo/main/LICENSE"&gt;MIT license&lt;/a&gt;. Some of the dependencies are licensed differently, with the BSD license, for example.&lt;/p&gt; 
&lt;img alt="Star the Expo repo on GitHub to support the project" src="https://user-images.githubusercontent.com/9664363/185428788-d762fd5d-97b3-4f59-8db7-f72405be9677.gif" width="50%" /&gt;</description>
    </item>
    
  </channel>
</rss>