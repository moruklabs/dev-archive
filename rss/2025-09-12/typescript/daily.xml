<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Thu, 11 Sep 2025 01:39:51 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>JOYCEQL/magic-resume</title>
      <link>https://github.com/JOYCEQL/magic-resume</link>
      <description>&lt;p&gt;free online AI resume editor&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;✨ Magic Resume ✨&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Next.js-14.0-black" alt="Next.js" /&gt; &lt;img src="https://img.shields.io/badge/Framer_Motion-10.0-purple" alt="Framer Motion" /&gt;&lt;/p&gt; 
 &lt;p&gt;简体中文 | &lt;a href="https://raw.githubusercontent.com/JOYCEQL/magic-resume/main/README.en-US.md"&gt;English&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Magic Resume 是一个现代化的在线简历编辑器，让创建专业简历变得简单有趣。基于 Next.js 和 Motion 构建，支持实时预览和自定义主题。&lt;/p&gt; 
&lt;h2&gt;📸 项目截图&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/d59f7582-799c-468d-becf-59ee6453acfd" alt="782shots_so" /&gt;&lt;/p&gt; 
&lt;h2&gt;✨ 特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 基于 Next.js 14+ 构建&lt;/li&gt; 
 &lt;li&gt;💫 流畅的动画效果 (Motion)&lt;/li&gt; 
 &lt;li&gt;🎨 自定义主题支持&lt;/li&gt; 
 &lt;li&gt;🌙 深色模式&lt;/li&gt; 
 &lt;li&gt;📤 导出为 PDF&lt;/li&gt; 
 &lt;li&gt;🔄 实时预览&lt;/li&gt; 
 &lt;li&gt;💾 自动保存&lt;/li&gt; 
 &lt;li&gt;🔒 硬盘级存储&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛠️ 技术栈&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Next.js 14+&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;Motion&lt;/li&gt; 
 &lt;li&gt;Tiptap&lt;/li&gt; 
 &lt;li&gt;Tailwind CSS&lt;/li&gt; 
 &lt;li&gt;Zustand&lt;/li&gt; 
 &lt;li&gt;Shadcn/ui&lt;/li&gt; 
 &lt;li&gt;Lucide Icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 快速开始&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;克隆项目&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:JOYCEQL/magic-resume.git
cd magic-resume
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;安装依赖&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;启动开发服务器&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;打开浏览器访问 &lt;code&gt;http://localhost:3000&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📦 构建打包&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;⚡ Vercel 部署&lt;/h2&gt; 
&lt;p&gt;你可以一键部署自己的 Magic Resume 实例：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2FJOYCEQL%2Fmagic-resume"&gt;&lt;img src="https://vercel.com/button" alt="使用 Vercel 部署" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🐳 Docker 部署&lt;/h2&gt; 
&lt;h3&gt;Docker Compose&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;确保你已经安装了 Docker 和 Docker Compose&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;在项目根目录运行：&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;这将会：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;自动构建应用镜像&lt;/li&gt; 
 &lt;li&gt;在后台启动容器&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Docker Hub&lt;/h3&gt; 
&lt;p&gt;最新版本的 Magic Resume 已经发布在 Docker Hub：&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/siyueqingchen/magic-resume/"&gt;Docker Hub&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull siyueqingchen/magic-resume:main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📝 开源协议&lt;/h2&gt; 
&lt;p&gt;本项目采用 Apache 2.0 协议，但有一些自定义的部分 - 查看 &lt;a href="https://raw.githubusercontent.com/JOYCEQL/magic-resume/main/LICENSE"&gt;LICENSE&lt;/a&gt; 了解详情&lt;/p&gt; 
&lt;h2&gt;🗺️ 路线图&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; AI 辅助编写&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 多语言支持&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 支持更多简历模板&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 更多格式导出&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 自定义模型&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 智能一页&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 导入 PDF, Markdown 等&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; 在线简历托管&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📞 联系方式&lt;/h2&gt; 
&lt;p&gt;可以通过以下方式关注最新动态:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;作者：SiYue&lt;/li&gt; 
 &lt;li&gt;X: @GuangzhouY81070&lt;/li&gt; 
 &lt;li&gt;Discord: 欢迎加入群组 &lt;a href="https://discord.gg/9mWgZrW3VN"&gt;https://discord.gg/9mWgZrW3VN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;用户群：加微信 qingchensiyue&lt;/li&gt; 
 &lt;li&gt;邮箱：&lt;a href="mailto:18806723365@163.com"&gt;18806723365@163.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;项目主页：&lt;a href="https://github.com/JOYCEQL/magic-resume"&gt;https://github.com/JOYCEQL/magic-resume&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌟 支持项目&lt;/h2&gt; 
&lt;p&gt;项目接口成本现正在持续上升中，如果对你有所帮助，可以赞赏作者，支持开源～&lt;/p&gt; 
&lt;img src="https://github.com/JOYCEQL/picx-images-hosting/raw/master/pintu-fulicat.com-1741081632544.26lmg2uc2m.webp" width="320" alt="图片描述" /&gt;</description>
    </item>
    
    <item>
      <title>jackyzha0/quartz</title>
      <link>https://github.com/jackyzha0/quartz</link>
      <description>&lt;p&gt;🌱 a fast, batteries-included static-site generator that transforms Markdown content into fully functional websites&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Quartz v4&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.” — Richard Hamming&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Quartz is a set of tools that helps you publish your &lt;a href="https://jzhao.xyz/posts/networked-thought"&gt;digital garden&lt;/a&gt; and notes as a website for free. Quartz v4 features a from-the-ground rewrite focusing on end-user extensibility and ease-of-use.&lt;/p&gt; 
&lt;p&gt;🔗 Read the documentation and get started: &lt;a href="https://quartz.jzhao.xyz/"&gt;https://quartz.jzhao.xyz/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/cRFFHYye7t"&gt;Join the Discord Community&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/sponsors/jackyzha0"&gt; &lt;img src="https://cdn.jsdelivr.net/gh/jackyzha0/jackyzha0/sponsorkit/sponsors.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>heroui-inc/heroui</title>
      <link>https://github.com/heroui-inc/heroui</link>
      <description>&lt;p&gt;🚀 Beautiful, fast and modern React UI library. (Previously NextUI)&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://heroui.com"&gt; &lt;img width="20%" src="https://raw.githubusercontent.com/heroui-inc/heroui/main/apps/docs/public/isotipo.png" alt="heorui" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h1 align="center"&gt;&lt;a href="https://heroui.com"&gt;HeroUI&lt;/a&gt;&lt;/h1&gt;
&lt;a href="https://heroui.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/heroui-inc/heroui/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/npm/l/@heroui/react?style=flat" alt="License" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/jrgarciadev/nextui"&gt; &lt;img src="https://codecov.io/gh/jrgarciadev/nextui/branch/main/graph/badge.svg?token=QJF2QKR5N4" alt="codecov badge" /&gt; &lt;/a&gt; 
 &lt;!-- &lt;a href="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml"&gt;
    &lt;img src="https://github.com/heroui-inc/heroui/actions/workflows/main.yaml/badge.svg" alt="CI/CD heroui"&gt;
  &lt;/a&gt; --&gt; &lt;a href="https://www.npmjs.com/package/@heroui/react"&gt; &lt;img src="https://img.shields.io/npm/dm/@heroui/react.svg?style=flat-round" alt="npm downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a aria-label="heroui learn" href="https://heroui.com/learn"&gt;&lt;/a&gt;&lt;a href="https://heroui.com/guide"&gt;https://heroui.com/guide&lt;/a&gt; to get started with HeroUI.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://heroui.com/docs"&gt;https://heroui.com/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Storybook&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://storybook.heroui.com/"&gt;https://storybook.heroui.com&lt;/a&gt; to view the storybook for all components.&lt;/p&gt; 
&lt;h2&gt;Canary Release&lt;/h2&gt; 
&lt;p&gt;Canary versions are available after every merge into &lt;code&gt;canary&lt;/code&gt; branch. You can install the packages with the tag &lt;code&gt;canary&lt;/code&gt; in npm to use the latest changes before the next production release.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://canary.heroui.com/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://canary-sb.heroui.com"&gt;Storybook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;We're excited to see the community adopt HeroUI, raise issues, and provide feedback. Whether it's a feature request, bug report, or a project to showcase, please get involved!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/9b6yyZKmH4"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/hero_ui"&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/heroui-inc/heroui/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are always welcome!&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for ways to get started.&lt;/p&gt; 
&lt;p&gt;Please adhere to this project's &lt;a href="https://github.com/heroui-inc/heroui/raw/main/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/mit/"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>11cafe/jaaz</title>
      <link>https://github.com/11cafe/jaaz</link>
      <description>&lt;p&gt;The world's first open-source multimodal creative assistant This is a substitute for Canva and Manus that prioritizes privacy and is usable locally.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;a href="https://jaaz.app" target="_blank"&gt; Jaaz.app&lt;/a&gt; &lt;p align="center"&gt;Open source Canva AI alternative&lt;/p&gt; &lt;p align="center"&gt; &lt;a href="https://jaaz.app"&gt; &lt;img src="https://github.com/user-attachments/assets/e0cffb94-8c6f-4867-800a-c144aceb6d54" alt="Jaaz Logo" /&gt; &lt;/a&gt; &lt;/p&gt; &lt;/h1&gt; 
&lt;p align="center"&gt;The world's first open-source multimodal canvas creative agent&lt;/p&gt; 
&lt;p align="center"&gt;This is a substitute for Canva and Manus that prioritizes privacy and is usable locally.&lt;/p&gt; 
&lt;p&gt; &lt;b&gt;📣 [New!] Enterprise Cloud “Full” Edition&lt;/b&gt; — Private/on-prem deployment &amp;amp; commercial licensing (Docker image or full source). Includes all jaaz.app online features. &lt;b&gt;30% OFF&lt;/b&gt; through &lt;b&gt;Sep 15, 2025&lt;/b&gt;. &lt;a href="mailto:info@jaaz.app"&gt;Contact us →&lt;/a&gt; info@jaaz.app &lt;br /&gt; &lt;br /&gt; &lt;b&gt;📣 [New!] 企业云端完整版&lt;/b&gt; — 支持&lt;span&gt;私有化部署&lt;/span&gt;与&lt;span&gt;商业授权&lt;/span&gt;（Docker 镜像或源码交付），包含 jaaz.app 全量线上功能。限时 &lt;b&gt;30% OFF&lt;/b&gt;，截止 &lt;b&gt;2025-09-15&lt;/b&gt;。 &lt;a href="mailto:info@jaaz.app"&gt;了解/洽谈 →&lt;/a&gt; info@jaaz.app &lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/11cafe/jaaz/raw/main/README_zh.md"&gt;中文版&lt;/a&gt;| &lt;a href="https://mxnpt25l6k.feishu.cn/docx/LvcTdlVbFoRAZWxnhBYcqVydnpc"&gt;新手指南&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://discord.gg/https://discord.gg/SMRe5n3m"&gt; &lt;img src="https://img.shields.io/badge/Discord-5865F2?logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Discord" /&gt; &lt;/a&gt; &lt;a href="https://github.com/11cafe/jaaz/stargazers"&gt; &lt;img src="https://img.shields.io/github/stars/11cafe/jaaz?style=for-the-badge&amp;amp;logo=github" alt="GitHub Stars" /&gt; &lt;/a&gt; 
 &lt;!-- Download for Mac --&gt; &lt;a href="https://jaaz.app/api/downloads/mac-latest"&gt; &lt;img src="https://img.shields.io/badge/For%20Mac-000000?logo=apple&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Download for Mac" /&gt; &lt;/a&gt; 
 &lt;!-- Download for Windows --&gt; &lt;a href="https://jaaz.app/api/downloads/windows-latest"&gt; &lt;img src="https://img.shields.io/badge/For%20Windows-0078D6?logo=laptop&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="Download for Windows" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Magic Canva! &lt;/p&gt;
&lt;p&gt;"Build" your ideas like playing with LEGO—paint directly, point with arrows, and the AI instantly understands and generates results. &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/543b170c-14f7-4a73-96bd-909662138592" /&gt; &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/7dd9af32-cc60-4145-9b30-7db96d8fa09a" /&gt;&lt;/p&gt; 
&lt;p&gt;Magic video!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/b7abf987-c65d-49b1-8178-82770873c583"&gt;https://github.com/user-attachments/assets/b7abf987-c65d-49b1-8178-82770873c583&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Create Viral Shorts with a Single Sentence 
 &lt;video src="https://github.com/user-attachments/assets/1c15e792-098a-4557-b310-d9c223f73442" controls width="100%"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Getting started &amp;amp; staying tuned with us.&lt;/h2&gt; 
&lt;p&gt;Star us, and you will receive all release notifications from GitHub without any delay! &lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/1c9a3661-80a4-4fba-a30f-f469898b0aec" /&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Key Features&lt;/h2&gt; 
&lt;p&gt;🎬 One-Prompt Image &amp;amp; Video Generation Turn one prompt into complete images or videos in seconds.&lt;/p&gt; 
&lt;p&gt;-Supports GPT-4o, Midjourney, VEO3, Kling,veo3,seedance etc.&lt;/p&gt; 
&lt;p&gt;-Auto-optimized prompts &amp;amp; multi-turn refinement&lt;/p&gt; 
&lt;p&gt;🧙 Magic Canvas&amp;amp;Magic Video Prompt-free creation — build like Lego.&lt;/p&gt; 
&lt;p&gt;-Simple sketching and free combination — AI instantly understands and generates.&lt;/p&gt; 
&lt;p&gt;-AI understands and generates instantly&lt;/p&gt; 
&lt;p&gt;-No prompt writing needed&lt;/p&gt; 
&lt;p&gt;-Describe steps simply on the video, and AI will generate following them.&lt;/p&gt; 
&lt;p&gt;🖼️ Infinite Canvas &amp;amp; Visual Storyboarding Plan scenes with an unlimited canvas&lt;/p&gt; 
&lt;p&gt;-Link layouts, manage media visually&lt;/p&gt; 
&lt;p&gt;-Real-time collaboration supported&lt;/p&gt; 
&lt;p&gt;🤖 Smart AI Agent System -Chat to insert objects, transfer styles, control logic&lt;/p&gt; 
&lt;p&gt;-Works with local (ComfyUI) &amp;amp; cloud models&lt;/p&gt; 
&lt;p&gt;-Maintains multi-character coherence&lt;/p&gt; 
&lt;p&gt;⚙️ Flexible Deployment &amp;amp; Local Assets -Fully offline or hybrid setup (Ollama + APIs)&lt;/p&gt; 
&lt;p&gt;-Built-in library for media &amp;amp; prompts&lt;/p&gt; 
&lt;p&gt;-Cross-platform: Windows &amp;amp; macOS&lt;/p&gt; 
&lt;p&gt;🔐 Privacy &amp;amp; Security -Local-first, no data leaves your device&lt;/p&gt; 
&lt;p&gt;-Open-source, no tracking&lt;/p&gt; 
&lt;p&gt;-Safe for commercial use — you own your data&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Download here: &lt;a href="https://jaaz.app/"&gt;https://jaaz.app/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Click the "Log In" button at the top right of the homepage to access API models. With a low-cost plan, you can seamlessly use a variety of powerful APIs.&lt;/p&gt; 
&lt;img width="400" alt="Screenshot 2025-06-02 at 3 08 51 PM" src="https://github.com/user-attachments/assets/0055557d-c247-4801-ac3f-01ed4fa775ae" /&gt; 
&lt;p&gt;Start chatting with agent to generate stories or storyboards!&lt;/p&gt; 
&lt;h2&gt;Cases&lt;/h2&gt; 
&lt;img width="889" height="1103" alt="Frame 122" src="https://github.com/user-attachments/assets/90503110-0f5c-4297-bbfe-6d35e3f54d4c" /&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prompt: Help me place this character in six different scenes, all in front of landmark buildings from around the world. The lighting is harmonious. He takes photos from all over the world, realistic, with warm light, high picture quality, and a picture ratio of 9:16&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/4e2634b3-9068-47cd-a18f-ddde8f218d25" alt="814c563b08f6ef44de0c2c31f0fdd00b-min" /&gt;&lt;/p&gt; 
&lt;img width="1000" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/5d8efe74-99b0-41bc-aa3e-6f7b92b69c36" /&gt; 
&lt;img width="900" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/186982a9-5e4e-4ac1-a42c-c840092fd616" /&gt; 
&lt;img width="900" alt="Screenshot 2025-06-02 at 3 03 49 PM" src="https://github.com/user-attachments/assets/b8508efd-def8-40ed-8ab5-62ed3c26de67" /&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/2065cabd-af32-43b6-bc01-59a935d9a287" alt="image26" /&gt;&lt;/p&gt; 
&lt;h2&gt;Team and Enterprise Support:&lt;/h2&gt; 
&lt;p&gt;Support for multi-user private deployment of enterprise teams, ensuring privacy and security.&lt;/p&gt; 
&lt;p&gt;Please contact via email: &lt;a href="mailto:aifoxdw@gmail.com"&gt;aifoxdw@gmail.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;WeChat: aifox1 &lt;img width="600" alt="Screenshot 2025-06-02 at 3 51 56 AM" src="https://github.com/user-attachments/assets/21bcffeb-07e8-40f1-aab8-b05aca7db097" /&gt;&lt;/p&gt; 
&lt;h2&gt;Manual Install (For Linux or local builds)&lt;/h2&gt; 
&lt;p&gt;🟠 &lt;strong&gt;Need Python version &amp;gt;=3.12&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;First git clone this repo:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;git clone https://github.com/11cafe/localart&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd react&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install --force&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npx vite build&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd ../server&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;🟠 &lt;strong&gt;Need Python version &amp;gt;=3.12&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;VSCode/Cursor Install Extensions：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Black Formatter by ms-python (ms-python.black-formatter)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;cd react&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm install --force &amp;amp;&amp;amp; npm run dev&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;cd server&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;pip install -r requirements.txt&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python main.py&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ZuodaoTech/everyone-can-use-english</title>
      <link>https://github.com/ZuodaoTech/everyone-can-use-english</link>
      <description>&lt;p&gt;人人都能用英语&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/assets/icon.png" alt="Clash" width="128" /&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt; AI 是当今世界上最好的外语老师，Enjoy 做 AI 最好的助教。 &lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/deploy-1000h.yml/badge.svg?sanitize=true" alt="Deploy 1000h website" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/test-enjoy-app.yml/badge.svg?sanitize=true" alt="Test Enjoy App" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml"&gt;&lt;img src="https://github.com/ZuodaoTech/everyone-can-use-english/actions/workflows/release-enjoy-app.yml/badge.svg?sanitize=true" alt="Release Enjoy App" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fconfig%2Fapp_version&amp;amp;query=%24.version&amp;amp;label=Latest&amp;amp;link=https%3A%2F%2F1000h.org%2Fenjoy-app%2Finstall.html" alt="Latest Version" /&gt; &lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fenjoy.bot%2Fapi%2Fbadges%2Frecordings" alt="Recording Duration" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;网页版&lt;/h2&gt; 
&lt;p&gt;Enjoy 网页版已经上线，可访问 &lt;a href="https://enjoy.bot"&gt;https://enjoy.bot&lt;/a&gt; 直接使用。&lt;/p&gt; 
&lt;div align="center" style="display:flex;overflow:auto;gap:10px;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audios.jpg" alt="Audios" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-add-audio.jpg" alt="Add Audio" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-shadow.jpg" alt="Shadow" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-audio-assessment.jpg" alt="Assessment" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-new-chat.jpg" alt="New Chat" width="300" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/web-chat.jpg" alt="Chat" width="300" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;桌面版安装及使用&lt;/h2&gt; 
&lt;p&gt;下载及使用相关说明，请参阅 &lt;a href="https://1000h.org/enjoy-app/"&gt;文档&lt;/a&gt;。&lt;/p&gt; 
&lt;h2&gt;预览&lt;/h2&gt; 
&lt;div align="center" style="display:flex;overflow:auto;"&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/home.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/shadow.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/assessment.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/document.png" alt="Home" width="800" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/enjoy/snapshots/chat.png" alt="Home" width="800" /&gt; 
&lt;/div&gt; 
&lt;h2&gt;桌面版开发&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn enjoy:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;相关阅读&lt;/h2&gt; 
&lt;h3&gt;一千小时（2024）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/intro.html"&gt;简要说明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/training-tasks/kick-off.html"&gt;训练任务&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/sounds-of-american-english/0-intro.html"&gt;语音塑造&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/in-the-brain/01-inifinite.html"&gt;大脑内部&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://1000h.org/self-training/00-intro.html"&gt;自我训练&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;人人都能用英语（2010）&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/README.md"&gt;简介&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter1.md"&gt;第一章：起点&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter2.md"&gt;第二章：口语&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter3.md"&gt;第三章：语音&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter4.md"&gt;第四章：朗读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter5.md"&gt;第五章：词典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter6.md"&gt;第六章：语法&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter7.md"&gt;第七章：精读&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/chapter8.md"&gt;第八章：叮嘱&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/ZuodaoTech/everyone-can-use-english/main/book/end.md"&gt;后记&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;常见问题&lt;/h2&gt; 
&lt;p&gt;请查询 &lt;a href="https://1000h.org/enjoy-app/faq.html"&gt;文档 FAQ&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>supabase/supabase</title>
      <link>https://github.com/supabase/supabase</link>
      <description>&lt;p&gt;The Postgres development platform. Supabase gives you a dedicated Postgres database to build your web, mobile, and AI applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/8291514/213727234-cda046d6-28c6-491a-b284-b86c5cede25d.png#gh-light-mode-only" /&gt; &lt;img src="https://user-images.githubusercontent.com/8291514/213727225-56186826-bee8-43b5-9b15-86e839d89393.png#gh-dark-mode-only" /&gt; &lt;/p&gt; 
&lt;h1&gt;Supabase&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://supabase.com"&gt;Supabase&lt;/a&gt; is the Postgres development platform. We're building the features of Firebase using enterprise-grade open source tools.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Hosted Postgres Database. &lt;a href="https://supabase.com/docs/guides/database"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Authentication and Authorization. &lt;a href="https://supabase.com/docs/guides/auth"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto-generated APIs. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; REST. &lt;a href="https://supabase.com/docs/guides/api"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; GraphQL. &lt;a href="https://supabase.com/docs/guides/graphql"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Realtime subscriptions. &lt;a href="https://supabase.com/docs/guides/realtime"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Functions. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Database Functions. &lt;a href="https://supabase.com/docs/guides/database/functions"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Edge Functions &lt;a href="https://supabase.com/docs/guides/functions"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; File Storage. &lt;a href="https://supabase.com/docs/guides/storage"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; AI + Vector/Embeddings Toolkit. &lt;a href="https://supabase.com/docs/guides/ai"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Dashboard&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/images/github/supabase-dashboard.png" alt="Supabase Dashboard" /&gt;&lt;/p&gt; 
&lt;p&gt;Watch "releases" of this repo to get notified of major updates.&lt;/p&gt; 
&lt;p&gt;&lt;kbd&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/d5f7f413ab356dc1a92075cb3cee4e40a957d5b1/web/static/watch-repo.gif" alt="Watch this repo" /&gt;&lt;/kbd&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For full documentation, visit &lt;a href="https://supabase.com/docs"&gt;supabase.com/docs&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;To see how to Contribute, visit &lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/DEVELOPERS.md"&gt;Getting Started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community &amp;amp; Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase/discussions"&gt;Community Forum&lt;/a&gt;. Best for: help with building, discussion about database best practices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase/issues"&gt;GitHub Issues&lt;/a&gt;. Best for: bugs and errors you encounter using Supabase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://supabase.com/docs/support#business-support"&gt;Email Support&lt;/a&gt;. Best for: problems with your database or infrastructure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.supabase.com"&gt;Discord&lt;/a&gt;. Best for: sharing your applications and hanging out with the community.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How it works&lt;/h2&gt; 
&lt;p&gt;Supabase is a combination of open source tools. We’re building the features of Firebase using enterprise-grade, open source products. If the tools and communities exist, with an MIT, Apache 2, or equivalent open license, we will use and support that tool. If the tool doesn't exist, we build and open source it ourselves. Supabase is not a 1-to-1 mapping of Firebase. Our aim is to give developers a Firebase-like developer experience using open source tools.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Architecture&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Supabase is a &lt;a href="https://supabase.com/dashboard"&gt;hosted platform&lt;/a&gt;. You can sign up and start using Supabase without installing anything. You can also &lt;a href="https://supabase.com/docs/guides/hosting/overview"&gt;self-host&lt;/a&gt; and &lt;a href="https://supabase.com/docs/guides/local-development"&gt;develop locally&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/docs/public/img/supabase-architecture.svg?sanitize=true" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.postgresql.org/"&gt;Postgres&lt;/a&gt; is an object-relational database system with over 30 years of active development that has earned it a strong reputation for reliability, feature robustness, and performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/realtime"&gt;Realtime&lt;/a&gt; is an Elixir server that allows you to listen to PostgreSQL inserts, updates, and deletes using websockets. Realtime polls Postgres' built-in replication functionality for database changes, converts changes to JSON, then broadcasts the JSON over websockets to authorized clients.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://postgrest.org/"&gt;PostgREST&lt;/a&gt; is a web server that turns your PostgreSQL database directly into a RESTful API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/gotrue"&gt;GoTrue&lt;/a&gt; is a JWT-based authentication API that simplifies user sign-ups, logins, and session management in your applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/storage-api"&gt;Storage&lt;/a&gt; a RESTful API for managing files in S3, with Postgres handling permissions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://github.com/supabase/pg_graphql/"&gt;pg_graphql&lt;/a&gt; a PostgreSQL extension that exposes a GraphQL API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/postgres-meta"&gt;postgres-meta&lt;/a&gt; is a RESTful API for managing your Postgres, allowing you to fetch tables, add roles, and run queries, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kong/kong"&gt;Kong&lt;/a&gt; is a cloud-native API gateway.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Client libraries&lt;/h4&gt; 
&lt;p&gt;Our approach for client libraries is modular. Each sub-library is a standalone implementation for a single external system. This is one of the ways we support existing tools.&lt;/p&gt; 
&lt;table style="table-layout:fixed; white-space: nowrap;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Client&lt;/th&gt; 
   &lt;th colspan="5"&gt;Feature-Clients (bundled in Supabase client)&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- notranslate --&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;Supabase&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/postgrest/postgrest" target="_blank" rel="noopener noreferrer"&gt;PostgREST&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/gotrue" target="_blank" rel="noopener noreferrer"&gt;GoTrue&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/realtime" target="_blank" rel="noopener noreferrer"&gt;Realtime&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;a href="https://github.com/supabase/storage-api" target="_blank" rel="noopener noreferrer"&gt;Storage&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;Functions&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- TEMPLATE FOR NEW ROW --&gt; 
  &lt;!-- START ROW
  &lt;tr&gt;
    &lt;td&gt;lang&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-lang" target="_blank" rel="noopener noreferrer"&gt;supabase-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-lang" target="_blank" rel="noopener noreferrer"&gt;postgrest-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-lang" target="_blank" rel="noopener noreferrer"&gt;gotrue-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-lang" target="_blank" rel="noopener noreferrer"&gt;realtime-lang&lt;/a&gt;&lt;/td&gt;
    &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-lang" target="_blank" rel="noopener noreferrer"&gt;storage-lang&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END ROW --&gt; 
  &lt;!-- /notranslate --&gt; 
  &lt;tr&gt;
   &lt;th colspan="7"&gt;⚡️ Official ⚡️&lt;/th&gt; 
   &lt;!-- notranslate --&gt; 
  &lt;/tr&gt;
  &lt;tr&gt; 
   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-js" target="_blank" rel="noopener noreferrer"&gt;supabase-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-js" target="_blank" rel="noopener noreferrer"&gt;postgrest-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-js" target="_blank" rel="noopener noreferrer"&gt;gotrue-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-js" target="_blank" rel="noopener noreferrer"&gt;realtime-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-js" target="_blank" rel="noopener noreferrer"&gt;storage-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-js" target="_blank" rel="noopener noreferrer"&gt;functions-js&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flutter&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-flutter" target="_blank" rel="noopener noreferrer"&gt;supabase-flutter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-dart" target="_blank" rel="noopener noreferrer"&gt;postgrest-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-dart" target="_blank" rel="noopener noreferrer"&gt;gotrue-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-dart" target="_blank" rel="noopener noreferrer"&gt;realtime-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-dart" target="_blank" rel="noopener noreferrer"&gt;storage-dart&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-dart" target="_blank" rel="noopener noreferrer"&gt;functions-dart&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift" target="_blank" rel="noopener noreferrer"&gt;supabase-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/PostgREST" target="_blank" rel="noopener noreferrer"&gt;postgrest-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Auth" target="_blank" rel="noopener noreferrer"&gt;auth-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Realtime" target="_blank" rel="noopener noreferrer"&gt;realtime-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Storage" target="_blank" rel="noopener noreferrer"&gt;storage-swift&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-swift/tree/main/Sources/Functions" target="_blank" rel="noopener noreferrer"&gt;functions-swift&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/supabase-py" target="_blank" rel="noopener noreferrer"&gt;supabase-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/postgrest-py" target="_blank" rel="noopener noreferrer"&gt;postgrest-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/gotrue-py" target="_blank" rel="noopener noreferrer"&gt;gotrue-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/realtime-py" target="_blank" rel="noopener noreferrer"&gt;realtime-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/storage-py" target="_blank" rel="noopener noreferrer"&gt;storage-py&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase/functions-py" target="_blank" rel="noopener noreferrer"&gt;functions-py&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- /notranslate --&gt; 
  &lt;tr&gt;
   &lt;th colspan="7"&gt;💚 Community 💚&lt;/th&gt; 
   &lt;!-- notranslate --&gt; 
  &lt;/tr&gt;
  &lt;tr&gt; 
   &lt;td&gt;C#&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-csharp" target="_blank" rel="noopener noreferrer"&gt;supabase-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-csharp" target="_blank" rel="noopener noreferrer"&gt;postgrest-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-csharp" target="_blank" rel="noopener noreferrer"&gt;gotrue-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-csharp" target="_blank" rel="noopener noreferrer"&gt;realtime-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-csharp" target="_blank" rel="noopener noreferrer"&gt;storage-csharp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-csharp" target="_blank" rel="noopener noreferrer"&gt;functions-csharp&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Go&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-go" target="_blank" rel="noopener noreferrer"&gt;postgrest-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-go" target="_blank" rel="noopener noreferrer"&gt;gotrue-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-go" target="_blank" rel="noopener noreferrer"&gt;storage-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-go" target="_blank" rel="noopener noreferrer"&gt;functions-go&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Java&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-java" target="_blank" rel="noopener noreferrer"&gt;gotrue-java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-java" target="_blank" rel="noopener noreferrer"&gt;storage-java&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kotlin&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt" target="_blank" rel="noopener noreferrer"&gt;supabase-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Postgrest" target="_blank" rel="noopener noreferrer"&gt;postgrest-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Auth" target="_blank" rel="noopener noreferrer"&gt;auth-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Realtime" target="_blank" rel="noopener noreferrer"&gt;realtime-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Storage" target="_blank" rel="noopener noreferrer"&gt;storage-kt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-kt/tree/master/Functions" target="_blank" rel="noopener noreferrer"&gt;functions-kt&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ruby&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/supabase-rb" target="_blank" rel="noopener noreferrer"&gt;supabase-rb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-rb" target="_blank" rel="noopener noreferrer"&gt;postgrest-rb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-rs" target="_blank" rel="noopener noreferrer"&gt;postgrest-rs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Godot Engine (GDScript)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/godot-engine.supabase" target="_blank" rel="noopener noreferrer"&gt;supabase-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/postgrest-gdscript" target="_blank" rel="noopener noreferrer"&gt;postgrest-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/gotrue-gdscript" target="_blank" rel="noopener noreferrer"&gt;gotrue-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/realtime-gdscript" target="_blank" rel="noopener noreferrer"&gt;realtime-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/storage-gdscript" target="_blank" rel="noopener noreferrer"&gt;storage-gdscript&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/supabase-community/functions-gdscript" target="_blank" rel="noopener noreferrer"&gt;functions-gdscript&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- /notranslate --&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- Remove this list if you're translating to another language, it's hard to keep updated across multiple files--&gt; 
&lt;!-- Keep only the link to the list of translation files--&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/badge-made-with-supabase.svg?sanitize=true" alt="Made with Supabase" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Made with Supabase](https://supabase.com/badge-made-with-supabase.svg)](https://supabase.com)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://supabase.com"&amp;gt;
  &amp;lt;img
    width="168"
    height="30"
    src="https://supabase.com/badge-made-with-supabase.svg"
    alt="Made with Supabase"
  /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/supabase/supabase/master/apps/www/public/badge-made-with-supabase-dark.svg?sanitize=true" alt="Made with Supabase (dark)" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Made with Supabase](https://supabase.com/badge-made-with-supabase-dark.svg)](https://supabase.com)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://supabase.com"&amp;gt;
  &amp;lt;img
    width="168"
    height="30"
    src="https://supabase.com/badge-made-with-supabase-dark.svg"
    alt="Made with Supabase"
  /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ar.md"&gt;Arabic | العربية&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sq.md"&gt;Albanian / Shqip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.bn.md"&gt;Bangla / বাংলা&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.bg.md"&gt;Bulgarian / Български&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ca.md"&gt;Catalan / Català&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hr.md"&gt;Croatian / Hrvatski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.cs.md"&gt;Czech / čeština&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.da.md"&gt;Danish / Dansk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nl.md"&gt;Dutch / Nederlands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/supabase/supabase"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.et.md"&gt;Estonian / eesti keel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fi.md"&gt;Finnish / Suomalainen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fr.md"&gt;French / Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.de.md"&gt;German / Deutsch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.el.md"&gt;Greek / Ελληνικά&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.gu.md"&gt;Gujarati / ગુજરાતી&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.he.md"&gt;Hebrew / עברית&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hi.md"&gt;Hindi / हिंदी&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.hu.md"&gt;Hungarian / Magyar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ne.md"&gt;Nepali / नेपाली&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.id.md"&gt;Indonesian / Bahasa Indonesia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.it.md"&gt;Italiano / Italian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.jp.md"&gt;Japanese / 日本語&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ko.md"&gt;Korean / 한국어&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.lt.md"&gt;Lithuanian / lietuvių&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.lv.md"&gt;Latvian / latviski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ms.md"&gt;Malay / Bahasa Malaysia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.nb.md"&gt;Norwegian (Bokmål) / Norsk (Bokmål)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.fa.md"&gt;Persian / فارسی&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pl.md"&gt;Polish / Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt.md"&gt;Portuguese / Português&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.pt-br.md"&gt;Portuguese (Brazilian) / Português Brasileiro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ro.md"&gt;Romanian / Română&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.ru.md"&gt;Russian / Pусский&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sr.md"&gt;Serbian / Srpski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.si.md"&gt;Sinhala / සිංහල&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sk.md"&gt;Slovak / slovenský&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sl.md"&gt;Slovenian / Slovenščina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.es.md"&gt;Spanish / Español&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-cn.md"&gt;Simplified Chinese / 简体中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.sv.md"&gt;Swedish / Svenska&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.th.md"&gt;Thai / ไทย&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.zh-tw.md"&gt;Traditional Chinese / 繁體中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.tr.md"&gt;Turkish / Türkçe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.uk.md"&gt;Ukrainian / Українська&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/README.vi-vn.md"&gt;Vietnamese / Tiếng Việt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/supabase/supabase/master/i18n/languages.md"&gt;List of translations&lt;/a&gt; 
  &lt;!-- Keep only this --&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>TriliumNext/Trilium</title>
      <link>https://github.com/TriliumNext/Trilium</link>
      <description>&lt;p&gt;Build your personal knowledge base with Trilium Notes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Trilium Notes&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/sponsors/eliandoran" alt="GitHub Sponsors" /&gt; &lt;img src="https://img.shields.io/liberapay/patrons/ElianDoran" alt="LiberaPay patrons" /&gt;&lt;br /&gt; &lt;img src="https://img.shields.io/docker/pulls/triliumnext/trilium" alt="Docker Pulls" /&gt; &lt;img src="https://img.shields.io/github/downloads/triliumnext/trilium/total" alt="GitHub Downloads (all assets, all releases)" /&gt;&lt;br /&gt; &lt;a href="https://app.relative-ci.com/projects/Di5q7dz9daNDZ9UXi0Bp"&gt;&lt;img src="https://badges.relative-ci.com/badges/Di5q7dz9daNDZ9UXi0Bp?branch=develop" alt="RelativeCI" /&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/trilium/"&gt;&lt;img src="https://hosted.weblate.org/widget/trilium/svg-badge.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README-ZH_CN.md"&gt;Chinese (Simplified)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README-ZH_TW.md"&gt;Chinese (Traditional)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.ru.md"&gt;Russian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.ja.md"&gt;Japanese&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.it.md"&gt;Italian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.es.md"&gt;Spanish&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Trilium Notes is a free and open-source, cross-platform hierarchical note taking application with focus on building large personal knowledge bases.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://triliumnext.github.io/Docs/Wiki/screenshot-tour"&gt;screenshots&lt;/a&gt; for quick overview:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/screenshot-tour"&gt;&lt;img src="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/app.png" alt="Trilium Screenshot" width="1000" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🎁 Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Notes can be arranged into arbitrarily deep tree. Single note can be placed into multiple places in the tree (see &lt;a href="https://triliumnext.github.io/Docs/Wiki/cloning-notes"&gt;cloning&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Rich WYSIWYG note editor including e.g. tables, images and &lt;a href="https://triliumnext.github.io/Docs/Wiki/text-notes"&gt;math&lt;/a&gt; with markdown &lt;a href="https://triliumnext.github.io/Docs/Wiki/text-notes#autoformat"&gt;autoformat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support for editing &lt;a href="https://triliumnext.github.io/Docs/Wiki/code-notes"&gt;notes with source code&lt;/a&gt;, including syntax highlighting&lt;/li&gt; 
 &lt;li&gt;Fast and easy &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-navigation"&gt;navigation between notes&lt;/a&gt;, full text search and &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-hoisting"&gt;note hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Seamless &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-revisions"&gt;note versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Note &lt;a href="https://triliumnext.github.io/Docs/Wiki/attributes"&gt;attributes&lt;/a&gt; can be used for note organization, querying and advanced &lt;a href="https://triliumnext.github.io/Docs/Wiki/scripts"&gt;scripting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;UI available in English, German, Spanish, French, Romanian, and Chinese (simplified and traditional)&lt;/li&gt; 
 &lt;li&gt;Direct &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20%26%20Setup/Server%20Installation/Multi-Factor%20Authentication.md"&gt;OpenID and TOTP integration&lt;/a&gt; for more secure login&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/synchronization"&gt;Synchronization&lt;/a&gt; with self-hosted sync server 
  &lt;ul&gt; 
   &lt;li&gt;there's a &lt;a href="https://trilium.cc/paid-hosting"&gt;3rd party service for hosting synchronisation server&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/sharing"&gt;Sharing&lt;/a&gt; (publishing) notes to public internet&lt;/li&gt; 
 &lt;li&gt;Strong &lt;a href="https://triliumnext.github.io/Docs/Wiki/protected-notes"&gt;note encryption&lt;/a&gt; with per-note granularity&lt;/li&gt; 
 &lt;li&gt;Sketching diagrams, based on &lt;a href="https://excalidraw.com/"&gt;Excalidraw&lt;/a&gt; (note type "canvas")&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/relation-map"&gt;Relation maps&lt;/a&gt; and &lt;a href="https://triliumnext.github.io/Docs/Wiki/link-map"&gt;link maps&lt;/a&gt; for visualizing notes and their relations&lt;/li&gt; 
 &lt;li&gt;Mind maps, based on &lt;a href="https://docs.mind-elixir.com/"&gt;Mind Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Note%20Types/Geo%20Map.md"&gt;Geo maps&lt;/a&gt; with location pins and GPX tracks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/scripts"&gt;Scripting&lt;/a&gt; - see &lt;a href="https://triliumnext.github.io/Docs/Wiki/advanced-showcases"&gt;Advanced showcases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/etapi"&gt;REST API&lt;/a&gt; for automation&lt;/li&gt; 
 &lt;li&gt;Scales well in both usability and performance upwards of 100 000 notes&lt;/li&gt; 
 &lt;li&gt;Touch optimized &lt;a href="https://triliumnext.github.io/Docs/Wiki/mobile-frontend"&gt;mobile frontend&lt;/a&gt; for smartphones and tablets&lt;/li&gt; 
 &lt;li&gt;Built-in &lt;a href="https://triliumnext.github.io/Docs/Wiki/themes"&gt;dark theme&lt;/a&gt;, support for user themes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/evernote-import"&gt;Evernote&lt;/a&gt; and &lt;a href="https://triliumnext.github.io/Docs/Wiki/markdown"&gt;Markdown import &amp;amp; export&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/web-clipper"&gt;Web Clipper&lt;/a&gt; for easy saving of web content&lt;/li&gt; 
 &lt;li&gt;Customizable UI (sidebar buttons, user-defined widgets, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Advanced%20Usage/Metrics.md"&gt;Metrics&lt;/a&gt;, along with a &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Advanced%20Usage/Metrics/grafana-dashboard.json"&gt;Grafana Dashboard&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;✨ Check out the following third-party resources/communities for more TriliumNext related goodies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nriver/awesome-trilium"&gt;awesome-trilium&lt;/a&gt; for 3rd party themes, scripts, plugins and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://trilium.rocks/"&gt;TriliumRocks!&lt;/a&gt; for tutorials, guides, and much more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❓Why TriliumNext?&lt;/h2&gt; 
&lt;p&gt;The original Trilium developer (&lt;a href="https://github.com/zadam"&gt;Zadam&lt;/a&gt;) has graciously given the Trilium repository to the community project which resides at &lt;a href="https://github.com/TriliumNext"&gt;https://github.com/TriliumNext&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;⬆️Migrating from Zadam/Trilium?&lt;/h3&gt; 
&lt;p&gt;There are no special migration steps to migrate from a zadam/Trilium instance to a TriliumNext/Trilium instance. Simply &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/#-installation"&gt;install TriliumNext/Trilium&lt;/a&gt; as usual and it will use your existing database.&lt;/p&gt; 
&lt;p&gt;Versions up to and including &lt;a href="https://github.com/TriliumNext/Trilium/releases/tag/v0.90.4"&gt;v0.90.4&lt;/a&gt; are compatible with the latest zadam/trilium version of &lt;a href="https://github.com/zadam/trilium/releases/tag/v0.63.7"&gt;v0.63.7&lt;/a&gt;. Any later versions of TriliumNext/Trilium have their sync versions incremented which prevents direct migration.&lt;/p&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;p&gt;We're currently in the progress of moving the documentation to in-app (hit the &lt;code&gt;F1&lt;/code&gt; key within Trilium). As a result, there may be some missing parts until we've completed the migration. If you'd prefer to navigate through the documentation within GitHub, you can navigate the &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/"&gt;User Guide&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;p&gt;Below are some quick links for your convenience to navigate the documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20&amp;amp;%20Setup/Server%20Installation.md"&gt;Server installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20&amp;amp;%20Setup/Server%20Installation/1.%20Installing%20the%20server/Using%20Docker.md"&gt;Docker installation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20%26%20Setup/Upgrading%20TriliumNext.md"&gt;Upgrading TriliumNext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Basic%20Concepts%20and%20Features/Notes.md"&gt;Concepts and Features - Note&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/patterns-of-personal-knowledge"&gt;Patterns of personal knowledge base&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Until we finish reorganizing the documentation, you may also want to &lt;a href="https://triliumnext.github.io/Docs"&gt;browse the old documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💬 Discuss with us&lt;/h2&gt; 
&lt;p&gt;Feel free to join our official conversations. We would love to hear what features, suggestions, or issues you may have!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#triliumnext:matrix.org"&gt;Matrix&lt;/a&gt; (For synchronous discussions.) 
  &lt;ul&gt; 
   &lt;li&gt;The &lt;code&gt;General&lt;/code&gt; Matrix room is also bridged to &lt;a href="xmpp:discuss@trilium.thisgreat.party?join"&gt;XMPP&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TriliumNext/Trilium/discussions"&gt;Github Discussions&lt;/a&gt; (For asynchronous discussions.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TriliumNext/Trilium/issues"&gt;Github Issues&lt;/a&gt; (For bug reports and feature requests.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🏗 Installation&lt;/h2&gt; 
&lt;h3&gt;Windows / MacOS&lt;/h3&gt; 
&lt;p&gt;Download the binary release for your platform from the &lt;a href="https://github.com/TriliumNext/Trilium/releases/latest"&gt;latest release page&lt;/a&gt;, unzip the package and run the &lt;code&gt;trilium&lt;/code&gt; executable.&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;If your distribution is listed in the table below, use your distribution's package.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/triliumnext/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/triliumnext.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also download the binary release for your platform from the &lt;a href="https://github.com/TriliumNext/Trilium/releases/latest"&gt;latest release page&lt;/a&gt;, unzip the package and run the &lt;code&gt;trilium&lt;/code&gt; executable.&lt;/p&gt; 
&lt;p&gt;TriliumNext is also provided as a Flatpak, but not yet published on FlatHub.&lt;/p&gt; 
&lt;h3&gt;Browser (any OS)&lt;/h3&gt; 
&lt;p&gt;If you use a server installation (see below), you can directly access the web interface (which is almost identical to the desktop app).&lt;/p&gt; 
&lt;p&gt;Currently only the latest versions of Chrome &amp;amp; Firefox are supported (and tested).&lt;/p&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;p&gt;To use TriliumNext on a mobile device, you can use a mobile web browser to access the mobile interface of a server installation (see below).&lt;/p&gt; 
&lt;p&gt;See issue &lt;a href="https://github.com/TriliumNext/Trilium/issues/4962"&gt;https://github.com/TriliumNext/Trilium/issues/4962&lt;/a&gt; for more information on mobile app support.&lt;/p&gt; 
&lt;p&gt;If you prefer a native Android app, you can use &lt;a href="https://apt.izzysoft.de/fdroid/index/apk/eu.fliegendewurst.triliumdroid"&gt;TriliumDroid&lt;/a&gt;. Report bugs and missing features at &lt;a href="https://github.com/FliegendeWurst/TriliumDroid"&gt;their repository&lt;/a&gt;. Note: It is best to disable automatic updates on your server installation (see below) when using TriliumDroid since the sync version must match between Trilium and TriliumDroid.&lt;/p&gt; 
&lt;h3&gt;Server&lt;/h3&gt; 
&lt;p&gt;To install TriliumNext on your own server (including via Docker from &lt;a href="https://hub.docker.com/r/triliumnext/trilium"&gt;Dockerhub&lt;/a&gt;) follow &lt;a href="https://triliumnext.github.io/Docs/Wiki/server-installation"&gt;the server installation docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💻 Contribute&lt;/h2&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;If you are a native speaker, help us translate Trilium by heading over to our &lt;a href="https://hosted.weblate.org/engage/trilium/"&gt;Weblate page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Here's the language coverage we have so far:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/trilium/"&gt;&lt;img src="https://hosted.weblate.org/widget/trilium/multi-auto.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Code&lt;/h3&gt; 
&lt;p&gt;Download the repository, install dependencies using &lt;code&gt;pnpm&lt;/code&gt; and then run the server (available at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm run server:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Download the repository, install dependencies using &lt;code&gt;pnpm&lt;/code&gt; and then run the environment required to edit the documentation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm edit-docs:edit-docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building the Executable&lt;/h3&gt; 
&lt;p&gt;Download the repository, install dependencies using &lt;code&gt;pnpm&lt;/code&gt; and then build the desktop app for Windows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm run --filter desktop electron-forge:make --arch=x64 --platform=win32
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details, see the &lt;a href="https://github.com/TriliumNext/Trilium/tree/main/docs/Developer%20Guide/Developer%20Guide"&gt;development docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Developer Documentation&lt;/h3&gt; 
&lt;p&gt;Please view the &lt;a href="https://github.com/TriliumNext/Trilium/raw/main/docs/Developer%20Guide/Developer%20Guide/Environment%20Setup.md"&gt;documentation guide&lt;/a&gt; for details. If you have more questions, feel free to reach out via the links described in the "Discuss with us" section above.&lt;/p&gt; 
&lt;h2&gt;👏 Shoutouts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5"&gt;CKEditor 5&lt;/a&gt; - best WYSIWYG editor on the market, very interactive and listening team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mar10/fancytree"&gt;FancyTree&lt;/a&gt; - very feature rich tree library without real competition. Trilium Notes would not be the same without it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemirror/CodeMirror"&gt;CodeMirror&lt;/a&gt; - code editor with support for huge amount of languages&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsplumb/jsplumb"&gt;jsPlumb&lt;/a&gt; - visual connectivity library without competition. Used in &lt;a href="https://triliumnext.github.io/Docs/Wiki/relation-map.html"&gt;relation maps&lt;/a&gt; and &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-map.html#link-map"&gt;link maps&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Support&lt;/h2&gt; 
&lt;p&gt;Support for the TriliumNext organization will be possible in the near future. For now, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support continued development on TriliumNext by supporting our developers: &lt;a href="https://github.com/sponsors/eliandoran"&gt;eliandoran&lt;/a&gt; (See the &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/%5Bdevelopers%5D(%5Burl%5D(https://github.com/TriliumNext/trilium/graphs/contributors))"&gt;repository insights&lt;/a&gt; for a full list)&lt;/li&gt; 
 &lt;li&gt;Show a token of gratitude to the original Trilium developer (&lt;a href="https://github.com/sponsors/zadam"&gt;zadam&lt;/a&gt;) via &lt;a href="https://paypal.me/za4am"&gt;PayPal&lt;/a&gt; or Bitcoin (bitcoin:bc1qv3svjn40v89mnkre5vyvs2xw6y8phaltl385d2).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔑 License&lt;/h2&gt; 
&lt;p&gt;Copyright 2017-2025 zadam, Elian Doran, and other contributors&lt;/p&gt; 
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>idosal/git-mcp</title>
      <link>https://github.com/idosal/git-mcp</link>
      <description>&lt;p&gt;Put an end to code hallucinations! GitMCP is a free, open-source, remote MCP server for any GitHub project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitMCP&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img width="884" alt="image" src="https://github.com/user-attachments/assets/2bf3e3df-556c-49c6-ab7b-36c279d53bba" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-what-is-gitmcp"&gt;What is GitMCP&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-getting-started"&gt;Getting Started&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-how-it-works"&gt;How It Works&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-badge"&gt;Badge&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-examples"&gt;Examples&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-faq"&gt;FAQ&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-privacy"&gt;Privacy&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/idosal1"&gt;&lt;img src="https://img.shields.io/twitter/follow/idosal1?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/liadyosef"&gt;&lt;img src="https://img.shields.io/twitter/follow/liadyosef?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.pulsemcp.com/servers/idosal-git-mcp"&gt;&lt;img src="https://www.pulsemcp.com/badge/top-pick/idosal-git-mcp" width="400" alt="Pulse MCP Badge" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;🤔 What is GitMCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Stop vibe-hallucinating and start vibe-coding!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitmcp.io"&gt;GitMCP&lt;/a&gt; is a free, open-source, remote &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt; server that transforms &lt;strong&gt;any&lt;/strong&gt; GitHub project (repositories or GitHub pages) into a documentation hub. It enables AI tools like Cursor to access up-to-date documentation and code, even if the LLM has never encountered them, thereby eliminating code hallucinations seamlessly.&lt;/p&gt; 
&lt;p&gt;GitMCP supports &lt;strong&gt;two flavors&lt;/strong&gt; -&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Specific Repository (&lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt; or &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;):&lt;/strong&gt; Use these when you primarily work with a select number of libraries. This ensures your AI assistant always targets the correct project, enhancing security and relevance by preventing access to unintended repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generic Server (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;):&lt;/strong&gt; Use this for maximum flexibility when you need to switch between different repositories frequently. The AI assistant will prompt you (or decide based on context) which repository to access for each request. Be mindful that this relies on correctly identifying the target repository each time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;With GitMCP:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI assistants access the &lt;em&gt;latest&lt;/em&gt; documentation and code directly from the source.&lt;/li&gt; 
 &lt;li&gt;Get accurate API usage and reliable code examples.&lt;/li&gt; 
 &lt;li&gt;Work effectively even with niche, new, or rapidly changing libraries.&lt;/li&gt; 
 &lt;li&gt;Significantly reduced hallucinations and improved code correctness.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, this side-by-side comparison shows the result for the same one-shot prompt in Cursor when creating a &lt;a href="https://github.com/mrdoob/three.js"&gt;three.js&lt;/a&gt; scene -&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45"&gt;https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;😎 &lt;strong&gt;Latest Documentation on ANY GitHub Project&lt;/strong&gt;: Grant your AI assistant seamless access to the GitHub project's documentation and code. The built-in smart search capabilities help find exactly what the AI needs without using too many tokens!&lt;/li&gt; 
 &lt;li&gt;🧠 &lt;strong&gt;No More Hallucinations&lt;/strong&gt;: With GitMCP, your AI assistant can provide accurate and relevant answers to your questions.&lt;/li&gt; 
 &lt;li&gt;☁️ &lt;strong&gt;Zero Setup&lt;/strong&gt;: GitMCP runs in the cloud. Simply add the chosen GitMCP URL as an MCP server in your IDE — no downloads, installations, signups, or changes are required.&lt;/li&gt; 
 &lt;li&gt;💬 &lt;strong&gt;Embedded Chat&lt;/strong&gt;: Start quickly by chatting directly with the repository's documentation through our in-browser chat!&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Open, Free, and Private&lt;/strong&gt;: GitMCP is open-source and completely free to use. It doesn't collect personal information or store queries. You can even self-host it!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;video src="https://github.com/user-attachments/assets/2c3afaf9-6c08-436e-9efd-db8710554430"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;Using GitMCP is easy! Simply follow these steps:&lt;/p&gt; 
&lt;h3&gt;Step 1: Choose the type of server you want&lt;/h3&gt; 
&lt;p&gt;Choose one of these URL formats depending on what you want to connect to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For GitHub repositories: &lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For GitHub Pages sites: &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For a generic tool that supports any repository (dynamic): &lt;code&gt;gitmcp.io/docs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Replace &lt;code&gt;{owner}&lt;/code&gt; with the GitHub username or organization name, and &lt;code&gt;{repo}&lt;/code&gt; with the repository name.&lt;/p&gt; 
&lt;p&gt;For your convenience, you can also use the conversion tool on the landing page to format the GitHub URL into an MCP URL!&lt;/p&gt; 
&lt;h3&gt;Step 2: Connect your AI assistant&lt;/h3&gt; 
&lt;p&gt;Select your AI assistant from the options below and follow the configuration instructions:&lt;/p&gt; 
&lt;h4&gt;Connecting Cursor&lt;/h4&gt; 
&lt;p&gt;Update your Cursor configuration file at &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Claude Desktop&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;In Claude Desktop, go to Settings &amp;gt; Developer &amp;gt; Edit Config&lt;/li&gt; 
 &lt;li&gt;Replace the configuration with: &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Connecting Windsurf&lt;/h4&gt; 
&lt;p&gt;Update your Windsurf configuration file at &lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "serverUrl": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting VSCode&lt;/h4&gt; 
&lt;p&gt;Update your VSCode configuration file at &lt;code&gt;.vscode/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "gitmcp": {
      "type": "sse",
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Cline&lt;/h4&gt; 
&lt;p&gt;Update your Cline configuration file at &lt;code&gt;~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}",
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Highlight AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Highlight AI and click the plugins icon (@ symbol) in the sidebar&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Installed Plugins&lt;/strong&gt; at the top of the sidebar&lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Custom Plugin&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Add a plugin using a custom SSE URL&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Plugin name: &lt;code&gt;gitmcp&lt;/code&gt; SSE URL: &lt;code&gt;https://gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more details on adding custom MCP servers to HighlightAI, refer to &lt;a href="https://docs.highlightai.com/learn/developers/plugins/custom-plugins-setup"&gt;the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Connecting Augment Code&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Augment Code settings&lt;/li&gt; 
 &lt;li&gt;Navigate to the MCP section&lt;/li&gt; 
 &lt;li&gt;Add a new MCP server with the following details:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Name the MCP server: &lt;code&gt;git-mcp Docs&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Use this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx mcp-remote https://gitmcp.io/{owner}/{repo}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Msty AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Msty Studio&lt;/li&gt; 
 &lt;li&gt;Go to Tools &amp;gt; Import Tools from JSON Clipboard&lt;/li&gt; 
 &lt;li&gt;Paste the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring MCP servers in Augment Code, visit &lt;a href="https://docs.augmentcode.com/setup-augment/mcp"&gt;the Augment Code documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember to replace &lt;code&gt;{owner}&lt;/code&gt; and &lt;code&gt;{repo}&lt;/code&gt; with the actual GitHub username/organization and repository name. You can also use the dynamic endpoint &lt;code&gt;https://gitmcp.io/docs&lt;/code&gt; to allow your AI to access any repository on demand.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;⚙ How It Works&lt;/h2&gt; 
&lt;p&gt;GitMCP connects your AI assistant to GitHub repositories using the Model Context Protocol (MCP), a standard that lets AI tools request additional information from external sources.&lt;/p&gt; 
&lt;p&gt;What happens when you use GitMCP:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;You provide the GitMCP URL&lt;/strong&gt; to your AI assistant (e.g., &lt;code&gt;gitmcp.io/microsoft/typescript&lt;/code&gt;). GitMCP exposes tools like documentation fetching, smart search, code search, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt the AI assistant&lt;/strong&gt; on documentation/code-related questions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI sends requests&lt;/strong&gt; to GitMCP to use its tools (with your approval).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitMCP executes the AI's request&lt;/strong&gt; and returns the requested data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI receives the information&lt;/strong&gt; and generates a more accurate, grounded response without hallucinations.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported Documentation&lt;/h3&gt; 
&lt;p&gt;GitMCP currently supports the following documents (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://llmstxt.org"&gt;llms.txt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AI-optimized version of the project's documentation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;/root&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;💡 Examples&lt;/h2&gt; 
&lt;p&gt;Here are some examples of how to use GitMCP with different AI assistants and repositories:&lt;/p&gt; 
&lt;h3&gt;Example 1: Using Windsurf with a specific repository&lt;/h3&gt; 
&lt;p&gt;For the GitHub repository &lt;code&gt;https://github.com/microsoft/playwright-mcp&lt;/code&gt;, add &lt;code&gt;https://gitmcp.io/microsoft/playwright-mcp&lt;/code&gt; as an MCP server to Windsurf.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Claude:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"How do I use the Playwright MCP"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Windsurf will pull the relevant documentation from GitMCP to implement the memory feature correctly.&lt;/p&gt; 
&lt;h3&gt;Example 2: Using Cursor with a GitHub Pages site&lt;/h3&gt; 
&lt;p&gt;For the GitHub Pages site &lt;code&gt;langchain-ai.github.io/langgraph&lt;/code&gt;, add &lt;code&gt;https://langchain-ai.gitmcp.io/langgraph&lt;/code&gt; as an MCP server to Cursor.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Cursor:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Add memory to my LangGraph agent"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cursor will pull the relevant documentation and code from GitMCP to correctly implement the memory feature.&lt;/p&gt; 
&lt;h3&gt;Example 3: Using Claude Desktop with the dynamic endpoint&lt;/h3&gt; 
&lt;p&gt;You don't have to pick specific repositories. The generic &lt;code&gt;gitmcp.io/docs&lt;/code&gt; endpoint allows AI to pick the GitHub project on the fly!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to any AI assistant:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"I want to learn about the OpenAI Whisper speech recognition model. Explain how it works.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Claude will pull the data from GitMCP and answer the question.&lt;/p&gt; 
&lt;h2&gt;🛠️ Tools&lt;/h2&gt; 
&lt;p&gt;GitMCP provides AI assistants with several valuable tools to help them access, understand, and query GitHub repositories.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool gets the primary documentation from a GitHub repository. It works by retrieving relevant documentation (e.g., &lt;code&gt;llms.txt&lt;/code&gt;). This gives the AI a good overview of what the project is about&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For general questions about a project's purpose, features, or how to get started&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool lets the AI search through a repository's documentation by providing a specific search query. Instead of loading all the documentation (which could be very large), it uses intelligent search to find just the relevant parts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For specific questions about particular features, functions, or concepts within a project&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_url_content&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool helps the AI get information from links mentioned in the documentation. It retrieves the content from those links and converts it to a format the AI can easily read.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When documentation references external information that would help answer your question&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_code&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool searches through the actual code in the repository using GitHub's code search. It helps AI find specific code examples or implementation details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When you want examples of how something is implemented or need technical details not covered in documentation&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When using the dynamic endpoint (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;), these tools are named slightly differently (&lt;code&gt;fetch_generic_documentation&lt;/code&gt;, &lt;code&gt;search_generic_code&lt;/code&gt;, and &lt;code&gt;search_generic_documentation&lt;/code&gt;) and need additional information about which repository to access.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📊 Badge&lt;/h2&gt; 
&lt;p&gt;GitMCP has a badge to your repository's README. It allows users to quickly access your documentation through their IDE or browser (using the embedded chat). It also showcases how many times your documentation has been accessed through GitMCP.&lt;/p&gt; 
&lt;p&gt;Example (&lt;code&gt;idosal/git-mcp&lt;/code&gt;): &lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Adding the Badge to Your Repository&lt;/h3&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;[![GitMCP](https://img.shields.io/endpoint?url=https://gitmcp.io/badge/OWNER/REPO)](https://gitmcp.io/OWNER/REPO)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;OWNER&lt;/code&gt; with your GitHub username or organization, and &lt;code&gt;REPO&lt;/code&gt; with your repository name.&lt;/p&gt; 
&lt;h3&gt;How We Count Views&lt;/h3&gt; 
&lt;p&gt;Increment for each tool call on the specific repository.&lt;/p&gt; 
&lt;h3&gt;Customizing the Badge&lt;/h3&gt; 
&lt;p&gt;You can customize the badge's appearance with parameters:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color for the badge value&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;aquamarine&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;?color=green&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Badge label&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GitMCP&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Please reach out!&lt;/p&gt; 
&lt;h2&gt;❓ FAQ&lt;/h2&gt; 
&lt;h3&gt;What is the Model Context Protocol?&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://modelcontextprotocol.io/introduction"&gt;Model Context Protocol&lt;/a&gt; is a standard that allows AI assistants to request and receive additional context from external sources in a structured manner, enhancing their understanding and performance.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP work with any AI assistant?&lt;/h3&gt; 
&lt;p&gt;Yes, GitMCP is compatible with any AI assistant supporting the Model Context Protocol, including tools like Cursor, VSCode, Claude, etc.&lt;/p&gt; 
&lt;h3&gt;Is GitMCP compatible with all GitHub projects?&lt;/h3&gt; 
&lt;p&gt;Absolutely! GitMCP works with any public GitHub repository without requiring any modifications. It prioritizes the &lt;code&gt;llms.txt&lt;/code&gt; file and falls back to &lt;code&gt;README.md&lt;/code&gt; or other pages if the former is unavailable. Future updates aim to support additional documentation methods and even generate content dynamically.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP cost money?&lt;/h3&gt; 
&lt;p&gt;No, GitMCP is a free service to the community with no associated costs.&lt;/p&gt; 
&lt;h2&gt;🔒 Privacy&lt;/h2&gt; 
&lt;p&gt;GitMCP is deeply committed to its users' privacy. The service doesn't have access to or store any personally identifiable information as it doesn't require authentication. In addition, it doesn't store any queries sent by the agents. Moreover, as GitMCP is an open-source project, it can be deployed independently in your environment.&lt;/p&gt; 
&lt;p&gt;GitMCP only accesses content that is already publicly available and only when queried by a user. GitMCP does not automatically scrape repositories. Before accessing any GitHub Pages site, the code checks for &lt;code&gt;robots.txt&lt;/code&gt; rules and follows the directives set by site owners, allowing them to opt out. Please note that GitMCP doesn't permanently store data regarding the GitHub projects or their content.&lt;/p&gt; 
&lt;h2&gt;👥 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions, feedback, and ideas! Please review our &lt;a href="https://github.com/idosal/git-mcp/raw/main/.github/CONTRIBUTING.md"&gt;contribution&lt;/a&gt; guidelines.&lt;/p&gt; 
&lt;h3&gt;Local Development Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/idosal/git-mcp.git
cd git-mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run locally for development&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
# or
pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Using MCP Inspector for Testing&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the MCP Inspector tool:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the inspector interface:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Set Transport Type to &lt;code&gt;SSE&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Enter your GitMCP URL (e.g., &lt;code&gt;http://localhost:5173/docs&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;Click "Connect"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;GitMCP is provided "as is" without warranty of any kind. While we strive to ensure the reliability and security of our service, we are not responsible for any damages or issues that may arise from its use. GitHub projects accessed through GitMCP are subject to their respective owners' terms and conditions. GitMCP is not affiliated with GitHub or any of the mentioned AI tools.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#idosal/git-mcp&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=idosal/git-mcp&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>immich-app/immich</title>
      <link>https://github.com/immich-app/immich</link>
      <description>&lt;p&gt;High performance self-hosted photo and video management solution.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://opensource.org/license/agpl-v3"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;amp;style=for-the-badge&amp;amp;label=License&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="License: AGPLv3" /&gt;&lt;/a&gt; &lt;a href="https://discord.immich.app"&gt; &lt;img src="https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="Discord" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-logo-stacked-light.svg?sanitize=true" width="300" title="Login With Custom URL" /&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;High performance self-hosted photo and video management solution&lt;/h3&gt; 
&lt;br /&gt; 
&lt;a href="https://immich.app"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-screenshots.png" title="Main Screenshot" /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ca_ES.md"&gt;Català&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_es_ES.md"&gt;Español&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_fr_FR.md"&gt;Français&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_it_IT.md"&gt;Italiano&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ja_JP.md"&gt;日本語&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ko_KR.md"&gt;한국어&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_de_DE.md"&gt;Deutsch&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_nl_NL.md"&gt;Nederlands&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_tr_TR.md"&gt;Türkçe&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_zh_CN.md"&gt;中文&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_uk_UA.md"&gt;Українська&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ru_RU.md"&gt;Русский&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_pt_BR.md"&gt;Português Brasileiro&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_sv_SE.md"&gt;Svenska&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ar_JO.md"&gt;العربية&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_vi_VN.md"&gt;Tiếng Việt&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_th_TH.md"&gt;ภาษาไทย&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚠️ The project is under &lt;strong&gt;very active&lt;/strong&gt; development.&lt;/li&gt; 
 &lt;li&gt;⚠️ Expect bugs and breaking changes.&lt;/li&gt; 
 &lt;li&gt;⚠️ &lt;strong&gt;Do not use the app as the only way to store your photos and videos.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;⚠️ Always follow &lt;a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/"&gt;3-2-1&lt;/a&gt; backup plan for your precious photos and videos!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You can find the main documentation, including installation guides, at &lt;a href="https://immich.app/"&gt;https://immich.app/&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/introduction"&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/install/requirements"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/developer/translations"&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/support-the-project"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Access the demo &lt;a href="https://demo.immich.app"&gt;here&lt;/a&gt;. For the mobile app, you can use &lt;code&gt;https://demo.immich.app&lt;/code&gt; for the &lt;code&gt;Server Endpoint URL&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Login credentials&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Email&lt;/th&gt; 
   &lt;th&gt;Password&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="mailto:demo@immich.app"&gt;demo@immich.app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;demo&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Features&lt;/th&gt; 
   &lt;th&gt;Mobile&lt;/th&gt; 
   &lt;th&gt;Web&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Upload and view videos and photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Auto backup when the app is opened&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Prevent duplication of assets&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Selective album(s) for backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Download photos and videos to local device&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Multi-user support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Album and Shared albums&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Scrubbable/draggable scrollbar&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support raw formats&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Metadata view (EXIF, map)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Search by metadata, objects, faces, and CLIP&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Administrative functions (user management)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Background backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Virtual scroll&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;OAuth support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;API Keys&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;LivePhoto/MotionPhoto backup and playback&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support 360 degree image display&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;User-defined storage structure&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Public Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Archive and Favorites&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Global Map&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Partner Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Facial recognition and clustering&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Memories (x years ago)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Offline support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Read-only gallery&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Stacked Photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Tags&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Folder View&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Read more about translations &lt;a href="https://immich.app/docs/developer/translations"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/immich/"&gt; &lt;img src="https://hosted.weblate.org/widget/immich/immich/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Repository activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg?sanitize=true" alt="Activities" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;a href="https://star-history.com/#immich-app/immich&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" width="100%" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/alextran1502/immich/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=immich-app/immich" width="100%" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>huggingface/aisheets</title>
      <link>https://github.com/huggingface/aisheets</link>
      <description>&lt;p&gt;Build, enrich, and transform datasets using AI models with no code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;🤗 Hugging Face AI Sheets&lt;/h1&gt; 
 &lt;p&gt;&lt;em&gt;Build, enrich, and transform datasets using AI models with no code. Deploy locally or on the Hub with access to thousands of open models.&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://huggingface.co/blog/aisheets"&gt;Introduction&lt;/a&gt; • &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;Try it out&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;
  &lt;video width="400" src="https://github.com/user-attachments/assets/a284e4d4-3c11-4885-96cc-2f6f0314f2a1"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What's AI Sheets?&lt;/h2&gt; 
&lt;p&gt;Hugging Face AI Sheets is an open-source tool for building, enriching, and transforming datasets using AI models with no code. The tool can be deployed locally or on the Hub. It lets you use thousands of open models from the Hugging Face Hub via Inference Providers or local models, including &lt;code&gt;gpt-oss&lt;/code&gt; from OpenAI!&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Using the AI Sheets Space&lt;/h3&gt; 
&lt;p&gt;Try it instantly at &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;https://huggingface.co/spaces/aisheets/sheets&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;First, get your Hugging Face token from &lt;a href="https://huggingface.co/settings/tokens"&gt;https://huggingface.co/settings/tokens&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
docker run -p 3000:3000 \
-e HF_TOKEN=HF_TOKEN \
aisheets/sheets
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h3&gt;Using pnpm&lt;/h3&gt; 
&lt;p&gt;First, &lt;a href="https://pnpm.io/installation"&gt;install pnpm&lt;/a&gt; if you haven't already.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/huggingface/aisheets.git
cd sheets
export HF_TOKEN=your_token_here
pnpm install --frozen-lockfile
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:5173&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h4&gt;Building for production&lt;/h4&gt; 
&lt;p&gt;To build the production application, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a production build in the &lt;code&gt;dist&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;Then, you can launch the built-in Express server to serve the production build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running data generation scripts using HF Jobs&lt;/h2&gt; 
&lt;p&gt;If you want to generate a larger dataset, you can use the above-mentioned config and script, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_inference_client.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 # limit to 100 rows, leave empty for the full dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use a script that utilizes vllm inference instead of the inference client. This script helps you to save on inference costs, but it requires you to set up a vllm-compatible flavor when running the job:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run --flavor l4x1 \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_vllm.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 \ # limit to 100 rows, leave empty for the full dataset
--vllm-model deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running AI Sheets with custom (and local) LLMs&lt;/h2&gt; 
&lt;p&gt;By default, AI Sheets is configured to use the Huggingface Inference Providers API to run inference on the latest open-source models. However, you can also run Sheets with own custom LLMs, such as those hosted on your own infrastructure or other cloud providers. The only requirement is that your LLMs must support the &lt;a href="https://platform.openai.com/docs/api-reference/introduction"&gt;OpenAI API specification&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Steps&lt;/h3&gt; 
&lt;p&gt;When running AI Sheets with custom LLMs, you need to set some environment variables to point the inference calls to your custom LLMs. Here are the steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should point to the base URL of your custom LLM's API endpoint. For example, if you are using Ollama to run your LLM locally, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since Ollama starts a local server on port &lt;code&gt;11434&lt;/code&gt; by default, this URL will point to your local Ollama instance.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should specify the name of the model you want to use. For example, if you are using the &lt;code&gt;llama3&lt;/code&gt; model, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a crucial step to conform to the OpenAI API specification. The model name is a required parameter in the &lt;a href="https://platform.openai.com/docs/api-reference/responses/create#responses-create-model"&gt;OpenAI API&lt;/a&gt;, and it is used to identify which model to use for inference.&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Run the AI Sheets app&lt;/strong&gt;: After setting the environment variables, you can run the Sheets app as usual. The app will now use your custom LLM for inference instead of the default Huggingface Inference Providers API as the default behavior. Anyway, all the models provided by the Huggingface Inference Providers API will still be available when selecting a model in the column settings.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Note: The text-to-image generation feature cannot be customized yet. It will always utilize the Hugging Face Inference Providers API to generate images. Take this into account when running AI Sheets with custom LLMs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example of running AI Sheets with Ollama&lt;/h3&gt; 
&lt;p&gt;To run AI Sheets with Ollama, you can follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start the Ollama server, and run the model of your choice&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export OLLAMA_NOHISTORY=1
ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ollama run llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Visit the Ollama &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#how-can-i-specify-the-context-window-size"&gt;FAQ&lt;/a&gt; page to know more about Ollama server configuration)&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Set the environment variables:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Run the AI Sheets app:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start the AI Sheets app and use the &lt;code&gt;llama3&lt;/code&gt; model running on your local Ollama instance for inference.&lt;/p&gt; 
&lt;h2&gt;Advanced configuration&lt;/h2&gt; 
&lt;p&gt;AI Sheets defines some environment variables that can be used to customize the behavior of the application. In the following sections, we will describe the available environment variables and their usage.&lt;/p&gt; 
&lt;h3&gt;&amp;nbsp;Authentication&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_CLIENT_ID&lt;/code&gt;: The Hugging Face OAuth client ID for the application. This is used to authenticate users via the Hugging Face OAuth. If this variable is defined, it will be used to authenticate users. (See how to setup the Hugging Face OAuth &lt;a href="https://huggingface.co/blog/frascuchon/running-sheets-locally#oauth-authentication"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;HF_TOKEN&lt;/code&gt;: A Hugging Face token to use for authentication. If this variable is defined, it will be used for authenticated inference calls, instead of the OAuth token.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_SCOPES&lt;/code&gt;: The scopes to request during the OAuth authentication. The default value is &lt;code&gt;openid profile inference-api manage-repos&lt;/code&gt;. This variable is used to request the necessary permissions for the application to function correctly, and normally does not need to be changed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&amp;nbsp;Inference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL&lt;/code&gt;: The default model id to use when calling the inference API for text generation. The default value is &lt;code&gt;meta-llama/Llama-3.3-70B-Instruct&lt;/code&gt;. This variable can be used to change the default model used for text generation and must be a valid model id from the &lt;a href="https://huggingface.co/models?pipeline_tag=text-generation&amp;amp;inference_provider=all&amp;amp;sort=trending"&gt;Hugging Face Hub&lt;/a&gt;,&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL_PROVIDER&lt;/code&gt;: The default model provider to use when calling the inference API for text generation. The default value is &lt;code&gt;nebius&lt;/code&gt;. This variable can be used to change the default model provider used for text generation and must be a valid provider from the &lt;a href="https://huggingface.co/docs/inference-providers/en/index"&gt;Hugging Face Inference Providers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ORG_BILLING&lt;/code&gt;: The organization billing to use for inference calls. If this variable is defined, the inference calls will be billed to the specified organization. This is useful for organizations that want to manage their inference costs and usage. Remember that users must be part of the organization to use this feature, or an &lt;code&gt;HF_TOKEN&lt;/code&gt; of a user that is part of the organization must be defined.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;: The URL of a custom inference endpoint to use for text generation. If this variable is defined, it will be used instead of the default Hugging Face Inference API. This is useful for using custom inference endpoints that are not hosted on the Hugging Face Hub, such as Ollama or LLM Studio. The URL must be a valid endpoint that supports the &lt;a href="https://platform.openai.com/docs/api-reference/chat/create"&gt;OpenAI API format&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt;: The model id to use when calling the custom inference endpoint defined by &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;. This variable is required if &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; is defined for custom inference endpoints that require a model id, such as Ollama or LLM Studio. The model id must correspond to the model deployed on the custom inference endpoint.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NUM_CONCURRENT_REQUESTS&lt;/code&gt;: The number of concurrent requests to allow when calling the inference API in the column cells generation process. The default value is &lt;code&gt;5&lt;/code&gt;, and the maximum value is &lt;code&gt;10&lt;/code&gt;. This is useful to control the number of concurrent requests made to the inference API and avoid hitting rate limits defined by the provider.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DATA_DIR&lt;/code&gt;: The directory where the application will store all its data. The default value is &lt;code&gt;./data&lt;/code&gt;. This variable can be used to change the data directory used by the application. The directory must be writable by the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SERPER_API_KEY&lt;/code&gt;: The API key to use for the Serper web search API. If this variable is defined, it will be used to authenticate web search requests. If this variable is not defined, web search will be disabled. The Serper API key can be obtained from the &lt;a href="https://serper.dev/"&gt;Serper website&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TELEMETRY_ENABLED&lt;/code&gt;: A boolean value that indicates whether telemetry is enabled or not. The default value is &lt;code&gt;1&lt;/code&gt;. This variable can be used to disable telemetry if desired. Telemetry is used to collect anonymous usage data to help improve the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;EXAMPLES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the examples section in the prompt for text generation. The default value is &lt;code&gt;8192&lt;/code&gt;. If the examples section exceeds this size, it will be truncated. This variable can be used when the examples section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SOURCES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the sources section in the prompt for text generation. The default value is &lt;code&gt;61440&lt;/code&gt;. If the sources section exceeds this size, it will be truncated. This variable can be used when the sources section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developer docs&lt;/h2&gt; 
&lt;h3&gt;Dev dependencies on your vscode&lt;/h3&gt; 
&lt;h4&gt;vitest runner&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest"&gt;https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;biome&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=biomejs.biome"&gt;https://marketplace.visualstudio.com/items?itemName=biomejs.biome&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Project Structure&lt;/h3&gt; 
&lt;p&gt;This project is using Qwik with &lt;a href="https://qwik.dev/qwikcity/overview/"&gt;QwikCity&lt;/a&gt;. QwikCity is just an extra set of tools on top of Qwik to make it easier to build a full site, including directory-based routing, layouts, and more.&lt;/p&gt; 
&lt;p&gt;Inside your project, you'll see the following directory structure:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;├── public/
│   └── ...
└── src/
    ├── components/ --&amp;gt; Stateless components
    │   └── ...
    ├── features/ --&amp;gt; Components with business logic
    │   └── ...
    └── routes/
        └── ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/routes&lt;/code&gt;: Provides the directory-based routing, which can include a hierarchy of &lt;code&gt;layout.tsx&lt;/code&gt; layout files, and an &lt;code&gt;index.tsx&lt;/code&gt; file as the page. Additionally, &lt;code&gt;index.ts&lt;/code&gt; files are endpoints. Please see the &lt;a href="https://qwik.dev/qwikcity/routing/overview/"&gt;routing docs&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/components&lt;/code&gt;: Recommended directory for components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;public&lt;/code&gt;: Any static assets, like images, can be placed in the public directory. Please see the &lt;a href="https://vitejs.dev/guide/assets.html#the-public-directory"&gt;Vite public directory&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;Run this on your root folder&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;touch .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add in your &lt;code&gt;.env&lt;/code&gt; file the following variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;HF_TOKEN=your_hugging_face_token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Development mode uses &lt;a href="https://vitejs.dev/"&gt;Vite's development server&lt;/a&gt;. The &lt;code&gt;dev&lt;/code&gt; command will server-side render (SSR) the output during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: during dev mode, Vite may request a significant number of &lt;code&gt;.js&lt;/code&gt; files. This does not represent a Qwik production build.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;The preview command will create a production build of the client modules, a production build of &lt;code&gt;src/entry.preview.tsx&lt;/code&gt;, and run a local server. The preview server is only for convenience to preview a production build locally and should not be used as a production server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production&lt;/h3&gt; 
&lt;p&gt;The production build will generate client and server modules by running both client and server build commands. The build command will use Typescript to run a type check on the source code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Express Server&lt;/h3&gt; 
&lt;p&gt;This app has a minimal &lt;a href="https://expressjs.com/"&gt;Express server&lt;/a&gt; implementation. After running a full build, you can preview the build using the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bytedance/UI-TARS-desktop</title>
      <link>https://github.com/bytedance/UI-TARS-desktop</link>
      <description>&lt;p&gt;The Open-Source Multimodal AI Agent Stack: Connecting Cutting-Edge AI Models and Agent Infra&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;img alt="Agent TARS Banner" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/images/tars.png" /&gt; 
&lt;/picture&gt; 
&lt;br /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/README.zh-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/13584"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13584" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;TARS&lt;sup&gt;*&lt;/sup&gt;&lt;/b&gt; is a Multimodal AI Agent stack, currently shipping two projects: &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt;&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools. &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;UI-TARS Desktop&lt;/b&gt; is a desktop application that provides a native GUI Agent based on the &lt;a href="https://github.com/bytedance/UI-TARS" target="_blank"&gt;UI-TARS&lt;/a&gt; model. &lt;br /&gt; &lt;br /&gt; It primarily ships a &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#get-model-and-run-local-operator" target="_blank"&gt;local&lt;/a&gt; and &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#run-remote-operator" target="_blank"&gt;remote&lt;/a&gt; computer as well as browser operators. &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#news"&gt;News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#core-features"&gt;Core Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS Desktop&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase-1"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start-1"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#citation"&gt;Citation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-25]&lt;/strong&gt; We released a Agent TARS Beta and Agent TARS CLI - &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html"&gt;Introducing Agent TARS Beta&lt;/a&gt;, a multimodal AI agent that aims to explore a work form that is closer to human-like task completion through rich multimodal capabilities (such as GUI Agent, Vision) and seamless integration with various real-world tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-12]&lt;/strong&gt; - 🎁 We are thrilled to announce the release of UI-TARS Desktop v0.2.0! This update introduces two powerful new features: &lt;strong&gt;Remote Computer Operator&lt;/strong&gt; and &lt;strong&gt;Remote Browser Operator&lt;/strong&gt;—both completely free. No configuration required: simply click to remotely control any computer or browser, and experience a new level of convenience and intelligence.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-04-17]&lt;/strong&gt; - 🎉 We're thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports &lt;a href="https://seed-tars.com/1.5"&gt;the advanced UI-TARS-1.5 model&lt;/a&gt; for improved performance and precise control.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-02-20]&lt;/strong&gt; - 📦 Introduced &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/sdk.md"&gt;UI TARS SDK&lt;/a&gt;, is a powerful cross-platform toolkit for building GUI automation agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-01-23]&lt;/strong&gt; - 🚀 We updated the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/deployment.md#cloud-deployment"&gt;Cloud Deployment&lt;/a&gt;&lt;/strong&gt; section in the 中文版: &lt;a href="https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb"&gt;GUI模型部署教程&lt;/a&gt; with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Agent TARS&lt;/h2&gt; 
&lt;p&gt; &lt;a href="https://npmjs.com/package/@agent-tars/cli?activeTab=readme"&gt;&lt;img src="https://img.shields.io/npm/v/@agent-tars/cli?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=3B82F6&amp;amp;logo=npm&amp;amp;logoColor=white" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/@agent-tars/cli?minimal=true"&gt;&lt;img src="https://img.shields.io/npm/dm/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=0EA5E9&amp;amp;logo=npm&amp;amp;logoColor=white" alt="downloads" /&gt;&lt;/a&gt; &lt;a href="https://nodejs.org/en/about/previous-releases"&gt;&lt;img src="https://img.shields.io/node/v/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=06B6D4&amp;amp;logo=node.js&amp;amp;logoColor=white" alt="node version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HnKcSBgTVx"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/agent_tars"&gt;&lt;img src="https://img.shields.io/badge/Twitter-Follow%20%40agent__tars-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white" alt="Official Twitter" /&gt;&lt;/a&gt; &lt;a href="https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=279h3365-b0fa-407f-89f3-0f96f36cd4d8"&gt;&lt;img src="https://img.shields.io/badge/飞书群-加入交流群-00D4AA?style=for-the-badge&amp;amp;logo=lark&amp;amp;logoColor=white" alt="飞书交流群" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/UI-TARS-desktop"&gt;&lt;img src="https://img.shields.io/badge/DeepWiki-Ask%20AI-8B5CF6?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools.&lt;/p&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Please help me book the earliest flight from San Jose to New York on September 1st and the last return flight on September 6th on Priceline
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8"&gt;https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;Booking Hotel&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;Generate Chart with extra MCP Servers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/a9fd72d0-01bb-4233-aa27-ca95194bbce9" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;I am in Los Angeles from September 1st to September 6th, with a budget of $5,000. Please help me book a Ritz-Carlton hotel closest to the airport on booking.com and compile a transportation guide for me&lt;/i&gt; &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;Draw me a chart of Hangzhou's weather for one month&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For more use cases, please check out &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt;#842&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🖱️ &lt;strong&gt;One-Click Out-of-the-box CLI&lt;/strong&gt; - Supports both &lt;strong&gt;headful&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/basic/web-ui.html"&gt;Web UI&lt;/a&gt; and &lt;strong&gt;headless&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/advanced/server.html"&gt;server&lt;/a&gt;) &lt;a href="https://agent-tars.com/guide/basic/cli.html"&gt;execution&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Hybrid Browser Agent&lt;/strong&gt; - Control browsers using &lt;a href="https://agent-tars.com/guide/basic/browser.html#visual-grounding"&gt;GUI Agent&lt;/a&gt;, &lt;a href="https://agent-tars.com/guide/basic/browser.html#dom"&gt;DOM&lt;/a&gt;, or a hybrid strategy.&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Event Stream&lt;/strong&gt; - Protocol-driven Event Stream drives &lt;a href="https://agent-tars.com/beta#context-engineering"&gt;Context Engineering&lt;/a&gt; and &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html#easy-to-build-applications"&gt;Agent UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🧰 &lt;strong&gt;MCP Integration&lt;/strong&gt; - The kernel is built on MCP and also supports mounting &lt;a href="https://agent-tars.com/guide/basic/mcp.html"&gt;MCP Servers&lt;/a&gt; to connect to real-world tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;img alt="Agent TARS CLI" src="https://agent-tars.com/agent-tars-cli.png" /&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Luanch with `npx`.
npx @agent-tars/cli@latest

# Install globally, required Node.js &amp;gt;= 22
npm install @agent-tars/cli@latest -g

# Run with your preferred model provider
agent-tars --provider volcengine --model doubao-1-5-thinking-vision-pro-250428 --apiKey your-api-key
agent-tars --provider anthropic --model claude-3-7-sonnet-latest --apiKey your-api-key
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit the comprehensive &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt;Quick Start&lt;/a&gt; guide for detailed setup instructions.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌟 &lt;strong&gt;Explore Agent TARS Universe&lt;/strong&gt; 🌟&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="20%" align="center"&gt;Category&lt;/th&gt; 
   &lt;th width="30%" align="center"&gt;Resource Link&lt;/th&gt; 
   &lt;th width="50%" align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🏠 &lt;strong&gt;Central Hub&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com"&gt; &lt;img src="https://img.shields.io/badge/Visit-Website-4F46E5?style=for-the-badge&amp;amp;logo=globe&amp;amp;logoColor=white" alt="Website" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Your gateway to Agent TARS ecosystem&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;📚 &lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt; &lt;img src="https://img.shields.io/badge/Get-Started-06B6D4?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Quick Start" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Zero to hero in 5 minutes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🚀 &lt;strong&gt;What's New&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/beta"&gt; &lt;img src="https://img.shields.io/badge/Read-Blog-F59E0B?style=for-the-badge&amp;amp;logo=rss&amp;amp;logoColor=white" alt="Blog" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Discover cutting-edge features &amp;amp; vision&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🛠️ &lt;strong&gt;Developer Zone&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/introduction.html"&gt; &lt;img src="https://img.shields.io/badge/View-Docs-10B981?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Docs" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Master every command &amp;amp; features&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🎯 &lt;strong&gt;Showcase&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt; &lt;img src="https://img.shields.io/badge/View-Examples-8B5CF6?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Examples" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;View use cases built by the official and community&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🔧 &lt;strong&gt;Reference&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/api/"&gt; &lt;img src="https://img.shields.io/badge/API-Reference-EF4444?style=for-the-badge&amp;amp;logo=book&amp;amp;logoColor=white" alt="API" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Complete technical reference&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;UI-TARS Desktop&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img alt="UI-TARS" width="260" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/ui-tars/resources/icon.png" /&gt; &lt;/p&gt; 
&lt;p&gt;UI-TARS Desktop is a native GUI agent for your local computer, driven by &lt;a href="https://github.com/bytedance/UI-TARS"&gt;UI-TARS&lt;/a&gt; and Seed-1.5-VL/1.6 series models.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &amp;nbsp;&amp;nbsp; 📑 &lt;a href="https://arxiv.org/abs/2501.12326"&gt;Paper&lt;/a&gt; &amp;nbsp;&amp;nbsp; | 🤗 &lt;a href="https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B"&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🫨 &lt;a href="https://discord.gg/pTXwYVjfcs"&gt;Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🤖 &lt;a href="https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640"&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt; 🖥️ Desktop Application &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; 👓 &lt;a href="https://github.com/web-infra-dev/midscene"&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;!-- // FIXME: Choose only two demo, one local computer and one remote computer showcase. --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Instruction&lt;/th&gt; 
   &lt;th align="center"&gt;Local Operator&lt;/th&gt; 
   &lt;th align="center"&gt;Remote Operator&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting.&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/01e49b69-7070-46c8-b3e3-2aaaaec71800" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/072fb72d-7394-4bfa-95f5-4736e29f7e58" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤖 Natural language control powered by Vision-Language Model&lt;/li&gt; 
 &lt;li&gt;🖥️ Screenshot and visual recognition support&lt;/li&gt; 
 &lt;li&gt;🎯 Precise mouse and keyboard control&lt;/li&gt; 
 &lt;li&gt;💻 Cross-platform support (Windows/MacOS/Browser)&lt;/li&gt; 
 &lt;li&gt;🔄 Real-time feedback and status display&lt;/li&gt; 
 &lt;li&gt;🔐 Private and secure - fully local processing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/quick-start.md"&gt;Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find our paper and code useful in your research, please consider giving a star &lt;span&gt;⭐&lt;/span&gt; and citation &lt;span&gt;📝&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-BibTeX"&gt;@article{qin2025ui,
  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},
  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},
  journal={arXiv preprint arXiv:2501.12326},
  year={2025}
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Kilo-Org/kilocode</title>
      <link>https://github.com/Kilo-Org/kilocode</link>
      <description>&lt;p&gt;Open Source AI coding assistant for planning, building, and fixing code. We frequently merge features from open-source projects like Roo Code and Cline, while building our own vision. Follow us: kilocode.ai/social&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/visual-studio-marketplace/v/kilocode.Kilo-Code.svg?label=VS%20Code%20Marketplace" alt="VS Code Marketplace" /&gt;&lt;/a&gt; &lt;a href="https://x.com/kilo_code"&gt;&lt;img src="https://img.shields.io/twitter/follow/kilo_code?style=flat&amp;amp;logo=x&amp;amp;color=555" alt="X (Twitter)" /&gt;&lt;/a&gt; &lt;a href="https://blog.kilocode.ai"&gt;&lt;img src="https://img.shields.io/badge/Blog-555?style=flat&amp;amp;logo=substack&amp;amp;logoColor=white" alt="Substack Blog" /&gt;&lt;/a&gt; &lt;a href="https://kilocode.ai/discord"&gt;&lt;img src="https://img.shields.io/discord/1349288496988160052?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/kilocode/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/kilocode?style=flat&amp;amp;logo=reddit&amp;amp;logoColor=white" alt="Reddit" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;🚀 Kilo Code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open-source VS Code AI agent. We frequently merge features from open-source projects, such as &lt;a href="https://github.com/RooVetGit/Roo-Code"&gt;Roo Code&lt;/a&gt; and &lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt;, while building our own vision.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;✨ Generate code from natural language&lt;/li&gt; 
 &lt;li&gt;✅ Checks its own work&lt;/li&gt; 
 &lt;li&gt;🧪 Run terminal commands&lt;/li&gt; 
 &lt;li&gt;🌐 Automate the browser&lt;/li&gt; 
 &lt;li&gt;🤖 Latest AI models&lt;/li&gt; 
 &lt;li&gt;🎁 API keys optional&lt;/li&gt; 
 &lt;li&gt;💡 &lt;strong&gt;Get $20 in bonus credits when you top-up for the first time&lt;/strong&gt; Credits can be used with 400+ models like Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-5&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Kilo-Org/kilocode/refs/heads/main/kilo.gif" width="100%" /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai/vscode-marketplace?utm_source=Readme"&gt;VS Code Marketplace&lt;/a&gt; (download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai"&gt;Official KiloCode.ai Home page&lt;/a&gt; (learn more)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation:&lt;/strong&gt; Generate code using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Automation:&lt;/strong&gt; Automate repetitive coding tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Refactoring:&lt;/strong&gt; Refactor and improve existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server Marketplace&lt;/strong&gt;: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Mode&lt;/strong&gt;: Plan with Architect, Code with Coder, and Debug with Debugger, and make your own custom modes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get started with Kilo Code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Kilo Code extension from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;VS Code Marketplace&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Create your account to access 400+ cutting-edge AI models including Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-5 – with transparent pricing that matches provider rates exactly.&lt;/li&gt; 
 &lt;li&gt;Start coding with AI that adapts to your workflow. Watch our quick-start guide to see Kilo Code in action:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/pqGfYXgrhig"&gt;&lt;img src="https://img.youtube.com/vi/pqGfYXgrhig/maxresdefault.jpg" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Difference between Kilo Code, Roo Code and Cline&lt;/h2&gt; 
&lt;p&gt;Kilo Code started as a fork of Roo Code, which itself is a fork of Cline. We frequently merge features from these open-source projects and contribute improvements back. Built on these foundations, Kilo Code is independently developed with our own vision for AI coding agents.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to fiddle with API keys, Kilo Code ships with the latest AI models plugged in, including Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-5&lt;/li&gt; 
 &lt;li&gt;MCP Server Marketplace: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;Autocomplete (experimental)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Kilo Code is a direct fork from Roo Code, and also includes the following features from Cline (and our own features):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;System notifications: Get notified when the agent is done with a task.&lt;/li&gt; 
 &lt;li&gt;Easy model connection: batteries included.&lt;/li&gt; 
 &lt;li&gt;Editing previous messages&lt;/li&gt; 
 &lt;li&gt;Assisted commit messages: we write git commit messages for you based on what changed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extension Development&lt;/h2&gt; 
&lt;p&gt;For details on building and developing the extension, see &lt;a href="https://raw.githubusercontent.com/Kilo-Org/kilocode/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/examples</title>
      <link>https://github.com/vercel/examples</link>
      <description>&lt;p&gt;Enjoy our curated collection of examples and solutions. Use these patterns to build your own robust and scalable applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vercel.com"&gt; &lt;img src="https://assets.vercel.com/image/upload/v1588805858/repositories/vercel/logo.png" height="96" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a href="https://vercel.com"&gt;Vercel Examples&lt;/a&gt;&lt;/h3&gt;
&lt;a href="https://vercel.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions"&gt;Solutions&lt;/a&gt; – Demos, reference architecture, and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/starter"&gt;Starter&lt;/a&gt; – Functional applications which can act as a starting point&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vercel Templates&lt;/h2&gt; 
&lt;p&gt;Multiple examples are being featured in &lt;a href="https://vercel.com/templates"&gt;Vercel's Templates&lt;/a&gt;, visit that page for more advanced filtering options.&lt;/p&gt; 
&lt;h3&gt;For Vercelians&lt;/h3&gt; 
&lt;p&gt;Examples that have front matter metadata will create a new Draft template in &lt;a href="https://app.contentful.com"&gt;Contentful&lt;/a&gt;, for more steps on how to publish a template, read &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/publishing-templates.md"&gt;Publishing Templates&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adding a new example&lt;/h2&gt; 
&lt;p&gt;To quickly start contributing with a new example, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm new-example
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the script above isn't used, make sure the example complies with the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It must have a &lt;code&gt;.gitignore&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.gitignore"&gt;plop-templates/example/.gitignore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;package.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/package.json"&gt;plop-templates/example/package.json&lt;/a&gt; (usage of Next.js is optional). The license should be &lt;code&gt;MIT&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;README.md&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/README.md"&gt;plop-templates/example/README.md&lt;/a&gt;. The example has to be able to include a demo URL (the Vercel team will deploy it!) and if it requires environment variables, it must have a &lt;code&gt;.env.example&lt;/code&gt; file and instructions on how to set them up. Take &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt; as an example. 
  &lt;ul&gt; 
   &lt;li&gt;To customize the Vercel Deploy Button take a look at the &lt;a href="https://vercel.com/docs/deploy-button"&gt;docs&lt;/a&gt;, useful if the deployment has required environment variables.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If using Next.js, it must have a &lt;code&gt;.eslintrc.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.eslintrc.json"&gt;plop-templates/example/.eslintrc.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;All Next.js examples should be using the same styling and layout provided by &lt;code&gt;@vercel/examples-ui&lt;/code&gt;, its usage can be seen in the &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example"&gt;plop template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adding a template&lt;/h3&gt; 
&lt;p&gt;If you would like the example to be featured in &lt;a href="https://vercel.com/templates"&gt;vercel.com/templates&lt;/a&gt; then also add the front matter metadata to the top of the readme, like in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt;. To know all the possible values for each metadata take a look at &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/fields.json"&gt;&lt;code&gt;internal/fields.json&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to add related templates to your template, copy the &lt;code&gt;slug&lt;/code&gt; from the other template into the &lt;code&gt;relatedTemplates&lt;/code&gt; field, for example for &lt;a href="https://vercel.com/templates/next.js/monorepo-turborepo"&gt;vercel.com/templates/next.js/monorepo-turborepo&lt;/a&gt; the slug is &lt;code&gt;monorepo-turborepo&lt;/code&gt;, as written in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions/monorepo/README.md"&gt;solutions/monorepo/README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;The pre-commit hook&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt; to manage the pre-commit &lt;a href="https://git-scm.com/docs/githooks"&gt;Git hook&lt;/a&gt; in this repo. Husky configures hooks automatically during install, so you don't need to do anything special to get them working, but if it fails to install, you can run the following command to install it manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run prepare
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Code changes automatically go through Prettier and ESLint when you make a commit, &lt;strong&gt;please do not skip these steps&lt;/strong&gt; unless they're broken and in that case let us known by creating an issue.&lt;/p&gt; 
&lt;h2&gt;Read the Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vercel.com/docs"&gt;Vercel Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/docs"&gt;Next.js Docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have any questions or suggestions about the docs, feel free to &lt;a href="https://github.com/vercel/examples/discussions"&gt;open a discussion&lt;/a&gt;, or &lt;a href="https://github.com/vercel/examples/pulls"&gt;submit a PR&lt;/a&gt; with your suggestions!&lt;/p&gt; 
&lt;h2&gt;Provide Feedback&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/discussions"&gt;Start a Discussion&lt;/a&gt; with a question, piece of feedback, or idea you want to share with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/issues"&gt;Open an Issue&lt;/a&gt; if you believe you've encountered a bug that you want to flag for the team.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>cypress-io/cypress</title>
      <link>https://github.com/cypress-io/cypress</link>
      <description>&lt;p&gt;Fast, easy and reliable testing for anything that runs in a browser.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.cypress.io"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/cypress-logo-dark.png" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="./assets/cypress-logo-light.png" /&gt; 
   &lt;img alt="Cypress Logo" src="https://raw.githubusercontent.com/cypress-io/cypress/develop/assets/cypress-logo-light.png" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://on.cypress.io"&gt;Documentation&lt;/a&gt; | &lt;a href="https://on.cypress.io/changelog"&gt;Changelog&lt;/a&gt; | &lt;a href="https://on.cypress.io/roadmap"&gt;Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt; The web has evolved. Finally, testing has too. &lt;/h3&gt; 
&lt;p align="center"&gt; Fast, easy and reliable testing for anything that runs in a browser. &lt;/p&gt; 
&lt;p align="center"&gt; Join us, we're &lt;a href="https://cypress.io/jobs"&gt;hiring&lt;/a&gt;. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/cypress"&gt; &lt;img src="https://img.shields.io/npm/dm/cypress.svg?sanitize=true" alt="npm" /&gt; &lt;/a&gt; &lt;a href="https://on.cypress.io/discord"&gt; &lt;img src="https://img.shields.io/badge/chat-on%20Discord-brightgreen" alt="Discord chat" /&gt; &lt;/a&gt; &lt;a href="https://stackshare.io/cypress"&gt; &lt;img src="https://img.stackshare.io/misc/follow-on-stackshare-badge.svg?sanitize=true" alt="StackShare" /&gt; &lt;/a&gt;&lt;br /&gt; &lt;/p&gt; 
&lt;h2&gt;What is Cypress?&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://player.vimeo.com/video/237527670"&gt; &lt;img alt="Why Cypress Video" src="https://user-images.githubusercontent.com/1271364/31739717-dbdff0ee-b41c-11e7-9b16-bfa1b6ac1814.png" width="75%" height="75%" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://badge.fury.io/js/cypress"&gt;&lt;img src="https://badge.fury.io/js/cypress.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Install Cypress for Mac, Linux, or Windows, then &lt;a href="https://on.cypress.io/install"&gt;get started&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install cypress --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn add cypress --dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm add cypress --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cypress-io/cypress/develop/assets/cypress-installation.gif" alt="installing-cli e1693232" /&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://cloud.cypress.io/projects/ypt4pf/runs"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://cloud.cypress.io/badge/simple/ypt4pf/develop&amp;amp;style=flat&amp;amp;logo=cypress" alt="cypress" /&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/cypress-io/cypress/tree/develop"&gt;&lt;img src="https://circleci.com/gh/cypress-io/cypress/tree/develop.svg?style=svg" alt="CircleCI" /&gt;&lt;/a&gt; - &lt;code&gt;develop&lt;/code&gt; branch&lt;/p&gt; 
&lt;p&gt;Please see our &lt;a href="https://raw.githubusercontent.com/cypress-io/cypress/develop/CONTRIBUTING.md"&gt;Contributing Guideline&lt;/a&gt; which explains repo organization, linting, testing, and other steps.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/cypress-io/cypress/raw/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-green.svg?sanitize=true" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This project is licensed under the terms of the &lt;a href="https://raw.githubusercontent.com/cypress-io/cypress/develop/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Badges&lt;/h2&gt; 
&lt;p&gt;Configure a badge for your project's README to show your test status or test count in the &lt;a href="https://www.cypress.io/cloud"&gt;Cypress Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cloud.cypress.io/projects/ypt4pf/runs"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://cloud.cypress.io/badge/simple/ypt4pf/develop&amp;amp;style=flat&amp;amp;logo=cypress" alt="cypress" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cloud.cypress.io/projects/ypt4pf/runs"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://cloud.cypress.io/badge/count/ypt4pf/develop&amp;amp;style=flat&amp;amp;logo=cypress" alt="cypress" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Or let the world know your project is using Cypress with the badge below.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.cypress.io/"&gt;&lt;img src="https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg?sanitize=true" alt="Cypress.io" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;[![Cypress.io](https://img.shields.io/badge/tested%20with-Cypress-04C38E.svg)](https://www.cypress.io/)
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>czlonkowski/n8n-mcp</title>
      <link>https://github.com/czlonkowski/n8n-mcp</link>
      <description>&lt;p&gt;A MCP for Claude Desktop / Claude Code / Windsurf / Cursor to build n8n workflows for you&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;n8n-MCP&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;&lt;img src="https://img.shields.io/github/stars/czlonkowski/n8n-mcp?style=social" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;&lt;img src="https://img.shields.io/badge/version-2.10.9-blue.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/n8n-mcp"&gt;&lt;img src="https://img.shields.io/npm/v/n8n-mcp.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/czlonkowski/n8n-mcp"&gt;&lt;img src="https://codecov.io/gh/czlonkowski/n8n-mcp/graph/badge.svg?token=YOUR_TOKEN" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/actions"&gt;&lt;img src="https://img.shields.io/badge/tests-1728%20passing-brightgreen.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://github.com/n8n-io/n8n"&gt;&lt;img src="https://img.shields.io/badge/n8n-%5E1.110.1-orange.svg?sanitize=true" alt="n8n version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/czlonkowski/n8n-mcp/pkgs/container/n8n-mcp"&gt;&lt;img src="https://img.shields.io/badge/docker-ghcr.io%2Fczlonkowski%2Fn8n--mcp-green.svg?sanitize=true" alt="Docker" /&gt;&lt;/a&gt; &lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A Model Context Protocol (MCP) server that provides AI assistants with comprehensive access to n8n node documentation, properties, and operations. Deploy in minutes to give Claude and other AI assistants deep knowledge about n8n's 525+ workflow automation nodes.&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;n8n-MCP serves as a bridge between n8n's workflow automation platform and AI models, enabling them to understand and work with n8n nodes effectively. It provides structured access to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📚 &lt;strong&gt;535 n8n nodes&lt;/strong&gt; from both n8n-nodes-base and @n8n/n8n-nodes-langchain&lt;/li&gt; 
 &lt;li&gt;🔧 &lt;strong&gt;Node properties&lt;/strong&gt; - 99% coverage with detailed schemas&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Node operations&lt;/strong&gt; - 63.6% coverage of available actions&lt;/li&gt; 
 &lt;li&gt;📄 &lt;strong&gt;Documentation&lt;/strong&gt; - 90% coverage from official n8n docs (including AI nodes)&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;AI tools&lt;/strong&gt; - 263 AI-capable nodes detected with full documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚠️ Important Safety Warning&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEVER edit your production workflows directly with AI!&lt;/strong&gt; Always:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Make a copy&lt;/strong&gt; of your workflow before using AI tools&lt;/li&gt; 
 &lt;li&gt;🧪 &lt;strong&gt;Test in development&lt;/strong&gt; environment first&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Export backups&lt;/strong&gt; of important workflows&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Validate changes&lt;/strong&gt; before deploying to production&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;AI results can be unpredictable. Protect your work!&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;Get n8n-MCP running in 5 minutes:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/5CccjiLLyaY?si=Z62SBGlw9G34IQnQ&amp;amp;t=343"&gt;&lt;img src="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/thumbnail.png" alt="n8n-mcp Video Quickstart Guide" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Option 1: npx (Fastest - No Installation!) 🚀&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run directly with npx (no installation needed!)
npx n8n-mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "npx",
      "args": ["n8n-mcp"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: npx will download and run the latest version automatically. The package includes a pre-built database with all n8n node information.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h3&gt;Option 2: Docker (Easy &amp;amp; Isolated) 🐳&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Docker installed on your system&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📦 Install Docker&lt;/strong&gt; (click to expand)&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;macOS:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Using Homebrew
brew install --cask docker

# Or download from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Linux (Ubuntu/Debian):&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Update package index
sudo apt-get update

# Install Docker
sudo apt-get install docker.io

# Start Docker service
sudo systemctl start docker
sudo systemctl enable docker

# Add your user to docker group (optional, to run without sudo)
sudo usermod -aG docker $USER
# Log out and back in for this to take effect
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Windows:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Option 1: Using winget (Windows Package Manager)
winget install Docker.DockerDesktop

# Option 2: Using Chocolatey
choco install docker-desktop

# Option 3: Download installer from https://www.docker.com/products/docker-desktop/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Verify installation:&lt;/strong&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Pull the Docker image (~280MB, no n8n dependencies!)
docker pull ghcr.io/czlonkowski/n8n-mcp:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚡ Ultra-optimized:&lt;/strong&gt; Our Docker image is 82% smaller than typical n8n images because it contains NO n8n dependencies - just the runtime MCP server with a pre-built database!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "--init",
        "-e", "MCP_MODE=stdio",
        "-e", "LOG_LEVEL=error",
        "-e", "DISABLE_CONSOLE_OUTPUT=true",
        "-e", "N8N_API_URL=https://your-n8n-instance.com",
        "-e", "N8N_API_KEY=your-api-key",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Tip: If you’re running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials are optional. Without them, you'll have access to all documentation and validation tools. With them, you'll additionally get workflow management capabilities (create, update, execute workflows).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The &lt;code&gt;-i&lt;/code&gt; flag is required for MCP stdio communication.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔧 If you encounter any issues with Docker, check our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_TROUBLESHOOTING.md"&gt;Docker Troubleshooting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h2&gt;💖 Support This Project&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/sponsors/czlonkowski"&gt; &lt;img src="https://img.shields.io/badge/Sponsor-❤️-db61a2?style=for-the-badge&amp;amp;logo=github-sponsors" alt="Sponsor n8n-mcp" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;strong&gt;n8n-mcp&lt;/strong&gt; started as a personal tool but now helps tens of thousands of developers automate their workflows efficiently. Maintaining and developing this project competes with my paid work.&lt;/p&gt; 
&lt;p&gt;Your sponsorship helps me:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 Dedicate focused time to new features&lt;/li&gt; 
 &lt;li&gt;🐛 Respond quickly to issues&lt;/li&gt; 
 &lt;li&gt;📚 Keep documentation up-to-date&lt;/li&gt; 
 &lt;li&gt;🔄 Ensure compatibility with latest n8n releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Every sponsorship directly translates to hours invested in making n8n-mcp better for everyone. &lt;strong&gt;&lt;a href="https://github.com/sponsors/czlonkowski"&gt;Become a sponsor →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Option 3: Local Installation (For Development)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; &lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; installed on your system&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone and setup
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp
npm install
npm run build
npm run rebuild

# 2. Test it works
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add to Claude Desktop config:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic configuration (documentation tools only):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Full configuration (with n8n management tools):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "node",
      "args": ["/absolute/path/to/n8n-mcp/dist/mcp/index.js"],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://your-n8n-instance.com",
        "N8N_API_KEY": "your-api-key"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The n8n API credentials can be configured either in a &lt;code&gt;.env&lt;/code&gt; file (create from &lt;code&gt;.env.example&lt;/code&gt;) or directly in the Claude config as shown above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 Tip: If you’re running n8n locally on the same machine (e.g., via Docker), use &lt;a href="http://host.docker.internal:5678"&gt;http://host.docker.internal:5678&lt;/a&gt; as the N8N_API_URL.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Option 4: Railway Cloud Deployment (One-Click Deploy) ☁️&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt; Railway account (free tier available)&lt;/p&gt; 
&lt;p&gt;Deploy n8n-MCP to Railway's cloud platform with zero configuration:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://railway.com/deploy/n8n-mcp?referralCode=n8n-mcp"&gt;&lt;img src="https://railway.com/button.svg?sanitize=true" alt="Deploy on Railway" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Benefits:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;☁️ &lt;strong&gt;Instant cloud hosting&lt;/strong&gt; - No server setup required&lt;/li&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Secure by default&lt;/strong&gt; - HTTPS included, auth token warnings&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Global access&lt;/strong&gt; - Connect from any Claude Desktop&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Auto-scaling&lt;/strong&gt; - Railway handles the infrastructure&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Built-in monitoring&lt;/strong&gt; - Logs and metrics included&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Quick Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Click the "Deploy on Railway" button above&lt;/li&gt; 
 &lt;li&gt;Sign in to Railway (or create a free account)&lt;/li&gt; 
 &lt;li&gt;Configure your deployment (project name, region)&lt;/li&gt; 
 &lt;li&gt;Click "Deploy" and wait ~2-3 minutes&lt;/li&gt; 
 &lt;li&gt;Copy your deployment URL and auth token&lt;/li&gt; 
 &lt;li&gt;Add to Claude Desktop config using the HTTPS URL&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;For detailed setup instructions, troubleshooting, and configuration examples, see our &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment Guide&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Configuration file locations:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Restart Claude Desktop after updating configuration&lt;/strong&gt; - That's it! 🎉&lt;/p&gt; 
&lt;h2&gt;🔧 n8n Integration&lt;/h2&gt; 
&lt;p&gt;Want to use n8n-MCP with your n8n instance? Check out our comprehensive &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/N8N_DEPLOYMENT.md"&gt;n8n Deployment Guide&lt;/a&gt; for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local testing with the MCP Client Tool node&lt;/li&gt; 
 &lt;li&gt;Production deployment with Docker Compose&lt;/li&gt; 
 &lt;li&gt;Cloud deployment on Hetzner, AWS, and other providers&lt;/li&gt; 
 &lt;li&gt;Troubleshooting and security best practices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💻 Connect your IDE&lt;/h2&gt; 
&lt;p&gt;n8n-MCP works with multiple AI-powered IDEs and tools. Choose your preferred development environment:&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_CODE_SETUP.md"&gt;Claude Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Quick setup for Claude Code CLI - just type "add this mcp server" and paste the config.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/VS_CODE_PROJECT_SETUP.md"&gt;Visual Studio Code&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Full setup guide for VS Code with GitHub Copilot integration and MCP support.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CURSOR_SETUP.md"&gt;Cursor&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Step-by-step tutorial for connecting n8n-MCP to Cursor IDE with custom rules.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/WINDSURF_SETUP.md"&gt;Windsurf&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Complete guide for integrating n8n-MCP with Windsurf using project rules.&lt;/p&gt; 
&lt;h2&gt;🤖 Claude Project Setup&lt;/h2&gt; 
&lt;p&gt;For the best results when using n8n-MCP with Claude Projects, use these enhanced system instructions:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;You are an expert in n8n automation software using n8n-MCP tools. Your role is to design, build, and validate n8n workflows with maximum accuracy and efficiency.

## Core Workflow Process

1. **ALWAYS start new conversation with**: `tools_documentation()` to understand best practices and available tools.

2. **Discovery Phase** - Find the right nodes:
   - Think deeply about user request and the logic you are going to build to fulfill it. Ask follow-up questions to clarify the user's intent, if something is unclear. Then, proceed with the rest of your instructions.
   - `search_nodes({query: 'keyword'})` - Search by functionality
   - `list_nodes({category: 'trigger'})` - Browse by category
   - `list_ai_tools()` - See AI-capable nodes (remember: ANY node can be an AI tool!)

3. **Configuration Phase** - Get node details efficiently:
   - `get_node_essentials(nodeType)` - Start here! Only 10-20 essential properties
   - `search_node_properties(nodeType, 'auth')` - Find specific properties
   - `get_node_for_task('send_email')` - Get pre-configured templates
   - `get_node_documentation(nodeType)` - Human-readable docs when needed
   - It is good common practice to show a visual representation of the workflow architecture to the user and asking for opinion, before moving forward. 

4. **Pre-Validation Phase** - Validate BEFORE building:
   - `validate_node_minimal(nodeType, config)` - Quick required fields check
   - `validate_node_operation(nodeType, config, profile)` - Full operation-aware validation
   - Fix any validation errors before proceeding

5. **Building Phase** - Create the workflow:
   - Use validated configurations from step 4
   - Connect nodes with proper structure
   - Add error handling where appropriate
   - Use expressions like $json, $node["NodeName"].json
   - Build the workflow in an artifact for easy editing downstream (unless the user asked to create in n8n instance)

6. **Workflow Validation Phase** - Validate complete workflow:
   - `validate_workflow(workflow)` - Complete validation including connections
   - `validate_workflow_connections(workflow)` - Check structure and AI tool connections
   - `validate_workflow_expressions(workflow)` - Validate all n8n expressions
   - Fix any issues found before deployment

7. **Deployment Phase** (if n8n API configured):
   - `n8n_create_workflow(workflow)` - Deploy validated workflow
   - `n8n_validate_workflow({id: 'workflow-id'})` - Post-deployment validation
   - `n8n_update_partial_workflow()` - Make incremental updates using diffs
   - `n8n_trigger_webhook_workflow()` - Test webhook workflows

## Key Insights

- **USE CODE NODE ONLY WHEN IT IS NECESSARY** - always prefer to use standard nodes over code node. Use code node only when you are sure you need it.
- **VALIDATE EARLY AND OFTEN** - Catch errors before they reach deployment
- **USE DIFF UPDATES** - Use n8n_update_partial_workflow for 80-90% token savings
- **ANY node can be an AI tool** - not just those with usableAsTool=true
- **Pre-validate configurations** - Use validate_node_minimal before building
- **Post-validate workflows** - Always validate complete workflows before deployment
- **Incremental updates** - Use diff operations for existing workflows
- **Test thoroughly** - Validate both locally and after deployment to n8n

## Validation Strategy

### Before Building:
1. validate_node_minimal() - Check required fields
2. validate_node_operation() - Full configuration validation
3. Fix all errors before proceeding

### After Building:
1. validate_workflow() - Complete workflow validation
2. validate_workflow_connections() - Structure validation
3. validate_workflow_expressions() - Expression syntax check

### After Deployment:
1. n8n_validate_workflow({id}) - Validate deployed workflow
2. n8n_list_executions() - Monitor execution status
3. n8n_update_partial_workflow() - Fix issues using diffs

## Response Structure

1. **Discovery**: Show available nodes and options
2. **Pre-Validation**: Validate node configurations first
3. **Configuration**: Show only validated, working configs
4. **Building**: Construct workflow with validated components
5. **Workflow Validation**: Full workflow validation results
6. **Deployment**: Deploy only after all validations pass
7. **Post-Validation**: Verify deployment succeeded

## Example Workflow

### 1. Discovery &amp;amp; Configuration
search_nodes({query: 'slack'})
get_node_essentials('n8n-nodes-base.slack')

### 2. Pre-Validation
validate_node_minimal('n8n-nodes-base.slack', {resource:'message', operation:'send'})
validate_node_operation('n8n-nodes-base.slack', fullConfig, 'runtime')

### 3. Build Workflow
// Create workflow JSON with validated configs

### 4. Workflow Validation
validate_workflow(workflowJson)
validate_workflow_connections(workflowJson)
validate_workflow_expressions(workflowJson)

### 5. Deploy (if configured)
n8n_create_workflow(validatedWorkflow)
n8n_validate_workflow({id: createdWorkflowId})

### 6. Update Using Diffs
n8n_update_partial_workflow({
  workflowId: id,
  operations: [
    {type: 'updateNode', nodeId: 'slack1', changes: {position: [100, 200]}}
  ]
})

## Important Rules

- ALWAYS validate before building
- ALWAYS validate after building
- NEVER deploy unvalidated workflows
- USE diff operations for updates (80-90% token savings)
- STATE validation results clearly
- FIX all errors before proceeding
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Save these instructions in your Claude Project for optimal n8n workflow assistance with comprehensive validation.&lt;/p&gt; 
&lt;h2&gt;🚨 Important: Sharing Guidelines&lt;/h2&gt; 
&lt;p&gt;This project is MIT licensed and free for everyone to use. However:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;✅ DO&lt;/strong&gt;: Share this repository freely with proper attribution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ DO&lt;/strong&gt;: Include a direct link to &lt;a href="https://github.com/czlonkowski/n8n-mcp"&gt;https://github.com/czlonkowski/n8n-mcp&lt;/a&gt; in your first post/video&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;❌ DON'T&lt;/strong&gt;: Gate this free tool behind engagement requirements (likes, follows, comments)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;❌ DON'T&lt;/strong&gt;: Use this project for engagement farming on social media&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This tool was created to benefit everyone in the n8n community without friction. Please respect the MIT license spirit by keeping it accessible to all.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🔍 Smart Node Search&lt;/strong&gt;: Find nodes by name, category, or functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📖 Essential Properties&lt;/strong&gt;: Get only the 10-20 properties that matter (NEW in v2.4.0)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🎯 Task Templates&lt;/strong&gt;: Pre-configured settings for common automation tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;✅ Config Validation&lt;/strong&gt;: Validate node configurations before deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔗 Dependency Analysis&lt;/strong&gt;: Understand property relationships and conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💡 Working Examples&lt;/strong&gt;: Real-world examples for immediate use&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Fast Response&lt;/strong&gt;: Average query time ~12ms with optimized SQLite&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Universal Compatibility&lt;/strong&gt;: Works with any Node.js version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💬 Why n8n-MCP? A Testimonial from Claude&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;"Before MCP, I was translating. Now I'm composing. And that changes everything about how we can build automation."&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;When Claude, Anthropic's AI assistant, tested n8n-MCP, the results were transformative:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Without MCP:&lt;/strong&gt; "I was basically playing a guessing game. 'Is it &lt;code&gt;scheduleTrigger&lt;/code&gt; or &lt;code&gt;schedule&lt;/code&gt;? Does it take &lt;code&gt;interval&lt;/code&gt; or &lt;code&gt;rule&lt;/code&gt;?' I'd write what seemed logical, but n8n has its own conventions that you can't just intuit. I made six different configuration errors in a simple HackerNews scraper."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;With MCP:&lt;/strong&gt; "Everything just... worked. Instead of guessing, I could ask &lt;code&gt;get_node_essentials()&lt;/code&gt; and get exactly what I needed - not a 100KB JSON dump, but the actual 5-10 properties that matter. What took 45 minutes now takes 3 minutes."&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The Real Value:&lt;/strong&gt; "It's about confidence. When you're building automation workflows, uncertainty is expensive. One wrong parameter and your workflow fails at 3 AM. With MCP, I could validate my configuration before deployment. That's not just time saved - that's peace of mind."&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Read the full interview →&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📡 Available MCP Tools&lt;/h2&gt; 
&lt;p&gt;Once connected, Claude can use these powerful tools:&lt;/p&gt; 
&lt;h3&gt;Core Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;tools_documentation&lt;/code&gt;&lt;/strong&gt; - Get documentation for any MCP tool (START HERE!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_nodes&lt;/code&gt;&lt;/strong&gt; - List all n8n nodes with filtering options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_info&lt;/code&gt;&lt;/strong&gt; - Get comprehensive information about a specific node&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_essentials&lt;/code&gt;&lt;/strong&gt; - Get only essential properties with examples (10-20 properties instead of 200+)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_nodes&lt;/code&gt;&lt;/strong&gt; - Full-text search across all node documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;search_node_properties&lt;/code&gt;&lt;/strong&gt; - Find specific properties within nodes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_ai_tools&lt;/code&gt;&lt;/strong&gt; - List all AI-capable nodes (ANY node can be used as AI tool!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_as_tool_info&lt;/code&gt;&lt;/strong&gt; - Get guidance on using any node as an AI tool&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Advanced Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_for_task&lt;/code&gt;&lt;/strong&gt; - Pre-configured node settings for common tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;list_tasks&lt;/code&gt;&lt;/strong&gt; - Discover available task templates&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_operation&lt;/code&gt;&lt;/strong&gt; - Validate node configurations (operation-aware, profiles support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_node_minimal&lt;/code&gt;&lt;/strong&gt; - Quick validation for just required fields&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow&lt;/code&gt;&lt;/strong&gt; - Complete workflow validation including AI tool connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_connections&lt;/code&gt;&lt;/strong&gt; - Check workflow structure and AI tool connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;validate_workflow_expressions&lt;/code&gt;&lt;/strong&gt; - Validate n8n expressions including $fromAI()&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_property_dependencies&lt;/code&gt;&lt;/strong&gt; - Analyze property visibility conditions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_node_documentation&lt;/code&gt;&lt;/strong&gt; - Get parsed documentation from n8n-docs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;get_database_statistics&lt;/code&gt;&lt;/strong&gt; - View database metrics and coverage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;n8n Management Tools (Optional - Requires API Configuration)&lt;/h3&gt; 
&lt;p&gt;These powerful tools allow you to manage n8n workflows directly from Claude. They're only available when you provide &lt;code&gt;N8N_API_URL&lt;/code&gt; and &lt;code&gt;N8N_API_KEY&lt;/code&gt; in your configuration.&lt;/p&gt; 
&lt;h4&gt;Workflow Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_create_workflow&lt;/code&gt;&lt;/strong&gt; - Create new workflows with nodes and connections&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow&lt;/code&gt;&lt;/strong&gt; - Get complete workflow by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_details&lt;/code&gt;&lt;/strong&gt; - Get workflow with execution statistics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_structure&lt;/code&gt;&lt;/strong&gt; - Get simplified workflow structure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_workflow_minimal&lt;/code&gt;&lt;/strong&gt; - Get minimal workflow info (ID, name, active status)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_full_workflow&lt;/code&gt;&lt;/strong&gt; - Update entire workflow (complete replacement)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_update_partial_workflow&lt;/code&gt;&lt;/strong&gt; - Update workflow using diff operations (NEW in v2.7.0!)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_workflow&lt;/code&gt;&lt;/strong&gt; - Delete workflows permanently&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_workflows&lt;/code&gt;&lt;/strong&gt; - List workflows with filtering and pagination&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_validate_workflow&lt;/code&gt;&lt;/strong&gt; - Validate workflows already in n8n by ID (NEW in v2.6.3)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Execution Management&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_trigger_webhook_workflow&lt;/code&gt;&lt;/strong&gt; - Trigger workflows via webhook URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_get_execution&lt;/code&gt;&lt;/strong&gt; - Get execution details by ID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_executions&lt;/code&gt;&lt;/strong&gt; - List executions with status filtering&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_delete_execution&lt;/code&gt;&lt;/strong&gt; - Delete execution records&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;System Tools&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_health_check&lt;/code&gt;&lt;/strong&gt; - Check n8n API connectivity and features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_diagnostic&lt;/code&gt;&lt;/strong&gt; - Troubleshoot management tools visibility and configuration issues&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;n8n_list_available_tools&lt;/code&gt;&lt;/strong&gt; - List all available management tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;// Get essentials for quick configuration
get_node_essentials("nodes-base.httpRequest")

// Find nodes for a specific task
search_nodes({ query: "send email gmail" })

// Get pre-configured settings
get_node_for_task("send_email")

// Validate before deployment
validate_node_operation({
  nodeType: "nodes-base.httpRequest",
  config: { method: "POST", url: "..." },
  profile: "runtime" // or "minimal", "ai-friendly", "strict"
})

// Quick required field check
validate_node_minimal({
  nodeType: "nodes-base.slack",
  config: { resource: "message", operation: "send" }
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;💻 Local Development Setup&lt;/h2&gt; 
&lt;p&gt;For contributors and advanced users:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prerequisites:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; (any version - automatic fallback if needed)&lt;/li&gt; 
 &lt;li&gt;npm or yarn&lt;/li&gt; 
 &lt;li&gt;Git&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Clone the repository
git clone https://github.com/czlonkowski/n8n-mcp.git
cd n8n-mcp

# 2. Clone n8n docs (optional but recommended)
git clone https://github.com/n8n-io/n8n-docs.git ../n8n-docs

# 3. Install and build
npm install
npm run build

# 4. Initialize database
npm run rebuild

# 5. Start the server
npm start          # stdio mode for Claude Desktop
npm run start:http # HTTP mode for remote access
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Development Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build &amp;amp; Test
npm run build          # Build TypeScript
npm run rebuild        # Rebuild node database
npm run test-nodes     # Test critical nodes
npm run validate       # Validate node data
npm test               # Run all tests

# Update Dependencies
npm run update:n8n:check  # Check for n8n updates
npm run update:n8n        # Update n8n packages

# Run Server
npm run dev            # Development with auto-reload
npm run dev:http       # HTTP dev mode
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;📚 Documentation&lt;/h2&gt; 
&lt;h3&gt;Setup Guides&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/INSTALLATION.md"&gt;Installation Guide&lt;/a&gt; - Comprehensive installation instructions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/README_CLAUDE_SETUP.md"&gt;Claude Desktop Setup&lt;/a&gt; - Detailed Claude configuration&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DOCKER_README.md"&gt;Docker Guide&lt;/a&gt; - Advanced Docker deployment options&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_QUICK_START_GUIDE.md"&gt;MCP Quick Start&lt;/a&gt; - Get started quickly with n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature Documentation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/workflow-diff-examples.md"&gt;Workflow Diff Operations&lt;/a&gt; - Token-efficient workflow updates (NEW!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/transactional-updates-example.md"&gt;Transactional Updates&lt;/a&gt; - Two-pass workflow editing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/MCP_ESSENTIALS_README.md"&gt;MCP Essentials&lt;/a&gt; - AI-optimized tools guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/validation-improvements-v2.4.2.md"&gt;Validation System&lt;/a&gt; - Smart validation profiles&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development &amp;amp; Deployment&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/RAILWAY_DEPLOYMENT.md"&gt;Railway Deployment&lt;/a&gt; - One-click cloud deployment guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/HTTP_DEPLOYMENT.md"&gt;HTTP Deployment&lt;/a&gt; - Remote server setup guide&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/DEPENDENCY_UPDATES.md"&gt;Dependency Management&lt;/a&gt; - Keeping n8n packages in sync&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CLAUDE_INTERVIEW.md"&gt;Claude's Interview&lt;/a&gt; - Real-world impact of n8n-MCP&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Project Information&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CHANGELOG.md"&gt;Change Log&lt;/a&gt; - Complete version history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/CLAUDE.md"&gt;Claude Instructions&lt;/a&gt; - AI guidance for this codebase&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/#-available-mcp-tools"&gt;MCP Tools Reference&lt;/a&gt; - Complete list of available tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📊 Metrics &amp;amp; Coverage&lt;/h2&gt; 
&lt;p&gt;Current database coverage (n8n v1.106.3):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;535/535&lt;/strong&gt; nodes loaded (100%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;528&lt;/strong&gt; nodes with properties (98.7%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;470&lt;/strong&gt; nodes with documentation (88%)&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;267&lt;/strong&gt; AI-capable tools detected&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;AI Agent &amp;amp; LangChain nodes&lt;/strong&gt; fully documented&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Average response time&lt;/strong&gt;: ~12ms&lt;/li&gt; 
 &lt;li&gt;💾 &lt;strong&gt;Database size&lt;/strong&gt;: ~15MB (optimized)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔄 Recent Updates&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/CHANGELOG.md"&gt;CHANGELOG.md&lt;/a&gt; for full version history and recent changes.&lt;/p&gt; 
&lt;h2&gt;⚠️ Known Issues&lt;/h2&gt; 
&lt;h3&gt;Claude Desktop Container Management&lt;/h3&gt; 
&lt;h4&gt;Container Accumulation (Fixed in v2.7.20+)&lt;/h4&gt; 
&lt;p&gt;Previous versions had an issue where containers would not properly clean up when Claude Desktop sessions ended. This has been fixed in v2.7.20+ with proper signal handling.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For best container lifecycle management:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Use the --init flag&lt;/strong&gt; (recommended) - Docker's init system ensures proper signal handling:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "n8n-mcp": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm", "--init",
        "ghcr.io/czlonkowski/n8n-mcp:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Ensure you're using v2.7.20 or later&lt;/strong&gt; - Check your version:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm ghcr.io/czlonkowski/n8n-mcp:latest --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🧪 Testing&lt;/h2&gt; 
&lt;p&gt;The project includes a comprehensive test suite with &lt;strong&gt;1,356 tests&lt;/strong&gt; ensuring code quality and reliability:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run all tests
npm test

# Run tests with coverage report
npm run test:coverage

# Run tests in watch mode
npm run test:watch

# Run specific test suites
npm run test:unit           # 933 unit tests
npm run test:integration    # 249 integration tests
npm run test:bench          # Performance benchmarks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test Suite Overview&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Total Tests&lt;/strong&gt;: 1,356 (100% passing) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;: 1,107 tests across 44 files&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: 249 tests across 14 files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execution Time&lt;/strong&gt;: ~2.5 minutes in CI&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Test Framework&lt;/strong&gt;: Vitest (for speed and TypeScript support)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Mocking&lt;/strong&gt;: MSW for API mocking, custom mocks for databases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Coverage &amp;amp; Quality&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Coverage Reports&lt;/strong&gt;: Generated in &lt;code&gt;./coverage&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CI/CD&lt;/strong&gt;: Automated testing on all PRs with GitHub Actions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Environment-aware thresholds for CI vs local&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Parallel Execution&lt;/strong&gt;: Configurable thread pool for faster runs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Testing Architecture&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unit Tests&lt;/strong&gt;: Isolated component testing with mocks&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Services layer: ~450 tests&lt;/li&gt; 
   &lt;li&gt;Parsers: ~200 tests&lt;/li&gt; 
   &lt;li&gt;Database repositories: ~100 tests&lt;/li&gt; 
   &lt;li&gt;MCP tools: ~180 tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Integration Tests&lt;/strong&gt;: Full system behavior validation&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;MCP Protocol compliance: 72 tests&lt;/li&gt; 
   &lt;li&gt;Database operations: 89 tests&lt;/li&gt; 
   &lt;li&gt;Error handling: 44 tests&lt;/li&gt; 
   &lt;li&gt;Performance: 44 tests&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Benchmarks&lt;/strong&gt;: Performance testing for critical paths&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Database queries&lt;/li&gt; 
   &lt;li&gt;Node loading&lt;/li&gt; 
   &lt;li&gt;Search operations&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed testing documentation, see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/testing-architecture.md"&gt;Testing Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📦 License&lt;/h2&gt; 
&lt;p&gt;MIT License - see &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/LICENSE"&gt;LICENSE&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Attribution appreciated!&lt;/strong&gt; If you use n8n-MCP, consider:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;⭐ Starring this repository&lt;/li&gt; 
 &lt;li&gt;💬 Mentioning it in your project&lt;/li&gt; 
 &lt;li&gt;🔗 Linking back to this repo&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch&lt;/li&gt; 
 &lt;li&gt;Run tests (&lt;code&gt;npm test&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;🚀 For Maintainers: Automated Releases&lt;/h3&gt; 
&lt;p&gt;This project uses automated releases triggered by version changes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Guided release preparation
npm run prepare:release

# Test release automation
npm run test:release-automation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The system automatically handles:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🏷️ GitHub releases with changelog content&lt;/li&gt; 
 &lt;li&gt;📦 NPM package publishing&lt;/li&gt; 
 &lt;li&gt;🐳 Multi-platform Docker images&lt;/li&gt; 
 &lt;li&gt;📚 Documentation updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/czlonkowski/n8n-mcp/main/docs/AUTOMATED_RELEASES.md"&gt;Automated Release Guide&lt;/a&gt; for complete details.&lt;/p&gt; 
&lt;h2&gt;👏 Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://n8n.io"&gt;n8n&lt;/a&gt; team for the workflow automation platform&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://anthropic.com"&gt;Anthropic&lt;/a&gt; for the Model Context Protocol&lt;/li&gt; 
 &lt;li&gt;All contributors and users of this project&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Built with ❤️ for the n8n community&lt;/strong&gt;
 &lt;br /&gt; 
 &lt;sub&gt;Making AI + n8n workflow creation delightful&lt;/sub&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>nrwl/nx</title>
      <link>https://github.com/nrwl/nx</link>
      <description>&lt;p&gt;Get to green PRs in half the time. Nx optimizes your builds, scales your CI, and fixes failed PRs. Built for developers and AI agents.&lt;/p&gt;&lt;hr&gt;&lt;p style="text-align: center;"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/nrwl/nx/master/images/nx-dark.svg" /&gt; 
  &lt;img alt="Nx - Smart Repos · Fast Builds" src="https://raw.githubusercontent.com/nrwl/nx/master/images/nx-light.svg?sanitize=true" width="100%" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;div style="text-align: center;"&gt; 
 &lt;p&gt;&lt;a href="https://circleci.com/gh/nrwl/nx"&gt;&lt;img src="https://circleci.com/gh/nrwl/nx.svg?style=svg" alt="CircleCI" /&gt;&lt;/a&gt; &lt;a href=""&gt;&lt;img src="https://img.shields.io/npm/l/nx.svg?style=flat-square" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/nx"&gt;&lt;img src="https://badge.fury.io/js/nx.svg?sanitize=true" alt="NPM Version" /&gt;&lt;/a&gt; &lt;a href=""&gt;&lt;img src="https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic-release-e10079.svg?style=flat-square" alt="Semantic Release" /&gt;&lt;/a&gt; &lt;a href="http://commitizen.github.io/cz-cli/"&gt;&lt;img src="https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?sanitize=true" alt="Commitizen friendly" /&gt;&lt;/a&gt; &lt;a href="https://gitter.im/nrwl-nx/community?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge"&gt;&lt;img src="https://badges.gitter.im/nrwl-nx/community.svg?sanitize=true" alt="Join the chat at https://gitter.im/nrwl-nx/community" /&gt;&lt;/a&gt; &lt;a href="https://go.nx.dev/community"&gt;&lt;img src="https://img.shields.io/discord/1143497901675401286?label=discord" alt="Join the Official Nx Discord Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Smart Repos · Fast Builds&lt;/h1&gt; 
&lt;p&gt;Get to green PRs in half the time. Nx optimizes your builds, scales your CI, and fixes failed PRs. Built for developers and AI agents.&lt;/p&gt; 
&lt;p&gt;Create a new Nx workspace with&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npx create-nx-workspace
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...or run&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx nx init
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to add Nx to your existing workspace to get faster task scheduling, caching and more. More &lt;a href="https://nx.dev/getting-started/intro"&gt;in the docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Learn about CI with Nx Cloud&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://nx.dev/nx-cloud"&gt;Nx Cloud&lt;/a&gt; connects directly to your existing CI setup, helping you scale your monorepos on CI by leveraging &lt;a href="https://nx.dev/ci/features/remote-cache?utm_source=nxrepo&amp;amp;utm_medium=readme&amp;amp;utm_campaign=nxrepo"&gt;remote caching&lt;/a&gt;, &lt;a href="https://nx.dev/ci/features/distribute-task-execution?utm_source=nxrepo&amp;amp;utm_medium=readme&amp;amp;utm_campaign=nxrepo"&gt;task distribution across multiple machines&lt;/a&gt;, &lt;a href="https://nx.dev/ci/features/split-e2e-tasks?utm_source=nxrepo&amp;amp;utm_medium=readme&amp;amp;utm_campaign=nxrepo"&gt;automated e2e test splitting&lt;/a&gt; and &lt;a href="https://nx.dev/ci/features/flaky-tasks?utm_source=nxrepo&amp;amp;utm_medium=readme&amp;amp;utm_campaign=nxrepo"&gt;automated task flakiness detection&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Connect your existing Nx workspace with&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx nx connect
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Learn more in the &lt;a href="https://nx.dev/ci/getting-started/intro?utm_source=nxrepo&amp;amp;utm_medium=readme&amp;amp;utm_campaign=nxrepo"&gt;Nx CI docs »&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Useful links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nx.dev/docs"&gt;Our docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nx.dev/blog"&gt;Our blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nx.dev/community"&gt;Our community discord, live stream,...&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@NxDevtools"&gt;Our YouTube channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/nxdevtools"&gt;Our Twitter/X&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p style="text-align: center;"&gt;&lt;a href="https://www.youtube.com/@nxdevtools/videos" target="_blank" rel="noreferrer"&gt;&lt;img src="https://raw.githubusercontent.com/nrwl/nx/master/images/nx-courses-and-videos.svg?sanitize=true" width="100%" alt="Nx - Smart Repos · Fast Builds" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Want to help?&lt;/h2&gt; 
&lt;p&gt;If you want to file a bug or submit a PR, read up on our &lt;a href="https://github.com/nrwl/nx/raw/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt; and watch this video that will help you get started.&lt;/p&gt; 
&lt;a href="https://www.youtube.com/watch?v=8LCA_4qxc08" target="_blank" rel="noreferrer"&gt; &lt;p style="text-align: center;"&gt;&lt;img src="https://raw.githubusercontent.com/nrwl/nx/master/images/how-to-contribute.png" width="600" alt="Nx - How to contribute video" /&gt;&lt;/p&gt; &lt;/a&gt; 
&lt;h2&gt;Core Team&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Victor Savkin&lt;/th&gt; 
   &lt;th&gt;Jason Jean&lt;/th&gt; 
   &lt;th&gt;Benjamin Cabanes&lt;/th&gt; 
   &lt;th&gt;Jack Hsu&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars1.githubusercontent.com/u/35996?s=160" alt="Victor Savkin" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars2.githubusercontent.com/u/8104246?s=160" alt="Jason Jean" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars2.githubusercontent.com/u/3447705?s=160" alt="Benjamin Cabanes" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars0.githubusercontent.com/u/53559?s=160" alt="Jack Hsu" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vsavkin"&gt;vsavkin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/FrozenPandaz"&gt;FrozenPandaz&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bcabanes"&gt;bcabanes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jaysoo"&gt;jaysoo&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;James Henry&lt;/th&gt; 
   &lt;th&gt;Jon Cammisuli&lt;/th&gt; 
   &lt;th&gt;Max Kless&lt;/th&gt; 
   &lt;th&gt;Juri Strumpflohner&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/900523?s=160&amp;amp;v=4" alt="James Henry" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars2.githubusercontent.com/u/4332460?s=160" alt="Jon Cammisuli" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/34165455?s=160" alt="Max Kless" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars1.githubusercontent.com/u/542458?s=160" alt="Juri Strumpflohner" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/JamesHenry"&gt;JamesHenry&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/cammisuli"&gt;cammisuli&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MaxKless"&gt;MaxKless&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/juristr"&gt;juristr&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Philip Fulcher&lt;/th&gt; 
   &lt;th&gt;Caleb Ukle&lt;/th&gt; 
   &lt;th&gt;Colum Ferry&lt;/th&gt; 
   &lt;th&gt;Steven Nance&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars1.githubusercontent.com/u/1536471?s=160" alt="Philip Fulcher" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/23272162?s=160" alt="Caleb Ukle" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/12140467?s=160" alt="Colum Ferry" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/1036428?s=160" alt="Steven Nance" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/philipjfulcher"&gt;philipjfulcher&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/barbados-clemens"&gt;barbados-clemens&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Coly010"&gt;Coly010&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/llwt"&gt;llwt&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Miroslav Jonaš&lt;/th&gt; 
   &lt;th&gt;Leosvel Pérez Espinosa&lt;/th&gt; 
   &lt;th&gt;Zachary DeRose&lt;/th&gt; 
   &lt;th&gt;Craigory Coppola&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/881612?s=160" alt="Miroslav Jonaš" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/12051310?s=160" alt="Leosvel Pérez Espinosa" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/3788405?s=160" alt="Zachary DeRose" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/6933928?s=160" alt="Craigory Coppola" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/meeroslav"&gt;meeroslav&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/leosvelperez"&gt;leosvelperez&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ZackDeRose"&gt;ZackDeRose&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AgentEnder"&gt;AgentEnder&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chau Tran&lt;/th&gt; 
   &lt;th&gt;Nicole Oliver&lt;/th&gt; 
   &lt;th&gt;Rares Matei&lt;/th&gt; 
   &lt;th&gt;Altan Stalker&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/25516557?s=160" alt="Chau Tran" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/4440385?s=160" alt="Nicole Oliver" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/5975076?s=160" alt="Rares Matei" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/6324206?s=160" alt="Altan Stalker" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nartc"&gt;nartc&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nixallover"&gt;nixallover&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/rarmatei"&gt;rarmatei&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/StalkAltan"&gt;StalkAltan&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Josh VanAllen&lt;/th&gt; 
   &lt;th&gt;Austin Fahsl&lt;/th&gt; 
   &lt;th&gt;Louie Weng&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/5290334?s=160" alt="Josh VanAllen" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/6913035?s=160" alt="Austin Fahsl" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://avatars.githubusercontent.com/u/56288712?s=160" alt="Louie Weng" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/joshvanallen"&gt;joshvanallen&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fahslaj"&gt;fahslaj&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lourw"&gt;lourw&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>humanlayer/12-factor-agents</title>
      <link>https://github.com/humanlayer/12-factor-agents</link>
      <description>&lt;p&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;12-Factor Agents - Principles for building reliable LLM applications&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt; &lt;img src="https://img.shields.io/badge/Code-Apache%202.0-blue.svg?sanitize=true" alt="Code License: Apache 2.0" /&gt;&lt;/a&gt; 
 &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt; &lt;img src="https://img.shields.io/badge/Content-CC%20BY--SA%204.0-lightgrey.svg?sanitize=true" alt="Content License: CC BY-SA 4.0" /&gt;&lt;/a&gt; 
 &lt;a href="https://humanlayer.dev/discord"&gt; &lt;img src="https://img.shields.io/badge/chat-discord-5865F2" alt="Discord Server" /&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt; &lt;img src="https://img.shields.io/badge/aidotengineer-conf_talk_(17m)-white" alt="YouTube
Deep Dive" /&gt;&lt;/a&gt; 
 &lt;a href="https://www.youtube.com/watch?v=yxJDyQ8v6P0"&gt; &lt;img src="https://img.shields.io/badge/youtube-deep_dive-crimson" alt="YouTube
Deep Dive" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;In the spirit of &lt;a href="https://12factor.net/"&gt;12 Factor Apps&lt;/a&gt;&lt;/em&gt;. &lt;em&gt;The source for this project is public at &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;https://github.com/humanlayer/12-factor-agents&lt;/a&gt;, and I welcome your feedback and contributions. Let's figure this out together!&lt;/em&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Missed the AI Engineer World's Fair? &lt;a href="https://www.youtube.com/watch?v=8kMaTybvDUw"&gt;Catch the talk here&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Looking for Context Engineering? &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Jump straight to factor 3&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Want to contribute to &lt;code&gt;npx/uvx create-12-factor-agent&lt;/code&gt; - check out &lt;a href="https://github.com/humanlayer/12-factor-agents/discussions/61"&gt;the discussion thread&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img referrerpolicy="no-referrer-when-downgrade" src="https://static.scarf.sh/a.png?x-pxid=2acad99a-c2d9-48df-86f5-9ca8061b7bf9" /&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/humanlayer/12-factor-agents/main/#visual-nav"&gt;&lt;img width="907" alt="Screenshot 2025-04-03 at 2 49 07 PM" src="https://github.com/user-attachments/assets/23286ad8-7bef-4902-b371-88ff6a22e998" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Hi, I'm Dex. I've been &lt;a href="https://youtu.be/8bIHcttkOTE"&gt;hacking&lt;/a&gt; on &lt;a href="https://theouterloop.substack.com"&gt;AI agents&lt;/a&gt; for &lt;a href="https://humanlayer.dev"&gt;a while&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've tried every agent framework out there&lt;/strong&gt;, from the plug-and-play crew/langchains to the "minimalist" smolagents of the world to the "production grade" langraph, griptape, etc.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've talked to a lot of really strong founders&lt;/strong&gt;, in and out of YC, who are all building really impressive things with AI. Most of them are rolling the stack themselves. I don't see a lot of frameworks in production customer-facing agents.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;I've been surprised to find&lt;/strong&gt; that most of the products out there billing themselves as "AI Agents" are not all that agentic. A lot of them are mostly deterministic code, with LLM steps sprinkled in at just the right points to make the experience truly magical.&lt;/p&gt; 
&lt;p&gt;Agents, at least the good ones, don't follow the &lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;"here's your prompt, here's a bag of tools, loop until you hit the goal"&lt;/a&gt; pattern. Rather, they are comprised of mostly just software.&lt;/p&gt; 
&lt;p&gt;So, I set out to answer:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h3&gt;&lt;strong&gt;What are the principles we can use to build LLM-powered software that is actually good enough to put in the hands of production customers?&lt;/strong&gt;&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Welcome to 12-factor agents. As every Chicago mayor since Daley has consistently plastered all over the city's major airports, we're glad you're here.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Special thanks to &lt;a href="https://github.com/iantbutler01"&gt;@iantbutler01&lt;/a&gt;, &lt;a href="https://github.com/tnm"&gt;@tnm&lt;/a&gt;, &lt;a href="https://www.github.com/hellovai"&gt;@hellovai&lt;/a&gt;, &lt;a href="https://www.github.com/stantonk"&gt;@stantonk&lt;/a&gt;, &lt;a href="https://www.github.com/balanceiskey"&gt;@balanceiskey&lt;/a&gt;, &lt;a href="https://www.github.com/AdjectiveAllison"&gt;@AdjectiveAllison&lt;/a&gt;, &lt;a href="https://www.github.com/pfbyjy"&gt;@pfbyjy&lt;/a&gt;, &lt;a href="https://www.github.com/a-churchill"&gt;@a-churchill&lt;/a&gt;, and the SF MLOps community for early feedback on this guide.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;The Short Version: The 12 Factors&lt;/h2&gt; 
&lt;p&gt;Even if LLMs &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md#what-if-llms-get-smarter"&gt;continue to get exponentially more powerful&lt;/a&gt;, there will be core engineering techniques that make LLM-powered software more reliable, more scalable, and easier to maintain.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Visual Nav&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/110-natural-language-tool-calls.png" alt="factor 1" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/120-own-your-prompts.png" alt="factor 2" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/130-own-your-context-building.png" alt="factor 3" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/140-tools-are-just-structured-outputs.png" alt="factor 4" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/150-unify-state.png" alt="factor 5" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/160-pause-resume-with-simple-apis.png" alt="factor 6" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/170-contact-humans-with-tools.png" alt="factor 7" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/180-control-flow.png" alt="factor 8" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/190-factor-9-errors-static.png" alt="factor 9" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1a0-small-focused-agents.png" alt="factor 10" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1b0-trigger-from-anywhere.png" alt="factor 11" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/1c0-stateless-reducer.png" alt="factor 12" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How we got here&lt;/h2&gt; 
&lt;p&gt;For a deeper dive on my agent journey and what led us here, check out &lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;A Brief History of Software&lt;/a&gt; - a quick summary here:&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;We're gonna talk a lot about Directed Graphs (DGs) and their Acyclic friends, DAGs. I'll start by pointing out that...well...software is a directed graph. There's a reason we used to represent programs as flow charts.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/010-software-dag.png" alt="010-software-dag" /&gt;&lt;/p&gt; 
&lt;h3&gt;From code to DAGs&lt;/h3&gt; 
&lt;p&gt;Around 20 years ago, we started to see DAG orchestrators become popular. We're talking classics like &lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;, &lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;, some predecessors, and some newer ones like (&lt;a href="https://dagster.io/"&gt;dagster&lt;/a&gt;, &lt;a href="https://www.inngest.com/"&gt;inggest&lt;/a&gt;, &lt;a href="https://www.windmill.dev/"&gt;windmill&lt;/a&gt;). These followed the same graph pattern, with the added benefit of observability, modularity, retries, administration, etc.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/015-dag-orchestrators.png" alt="015-dag-orchestrators" /&gt;&lt;/p&gt; 
&lt;h3&gt;The promise of agents&lt;/h3&gt; 
&lt;p&gt;I'm not the first &lt;a href="https://youtu.be/Dc99-zTMyMg?si=bcT0hIwWij2mR-40&amp;amp;t=73"&gt;person to say this&lt;/a&gt;, but my biggest takeaway when I started learning about agents, was that you get to throw the DAG away. Instead of software engineers coding each step and edge case, you can give the agent a goal and a set of transitions:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/025-agent-dag.png" alt="025-agent-dag" /&gt;&lt;/p&gt; 
&lt;p&gt;And let the LLM make decisions in real time to figure out the path&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/026-agent-dag-lines.png" alt="026-agent-dag-lines" /&gt;&lt;/p&gt; 
&lt;p&gt;The promise here is that you write less software, you just give the LLM the "edges" of the graph and let it figure out the nodes. You can recover from errors, you can write less code, and you may find that LLMs find novel solutions to problems.&lt;/p&gt; 
&lt;h3&gt;Agents as loops&lt;/h3&gt; 
&lt;p&gt;As we'll see later, it turns out this doesn't quite work.&lt;/p&gt; 
&lt;p&gt;Let's dive one step deeper - with agents you've got this loop consisting of 3 steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;LLM determines the next step in the workflow, outputting structured json ("tool calling")&lt;/li&gt; 
 &lt;li&gt;Deterministic code executes the tool call&lt;/li&gt; 
 &lt;li&gt;The result is appended to the context window&lt;/li&gt; 
 &lt;li&gt;Repeat until the next step is determined to be "done"&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;initial_event = {"message": "..."}
context = [initial_event]
while True:
  next_step = await llm.determine_next_step(context)
  context.append(next_step)

  if (next_step.intent === "done"):
    return next_step.final_answer

  result = await execute_step(next_step)
  context.append(result)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Our initial context is just the starting event (maybe a user message, maybe a cron fired, maybe a webhook, etc), and we ask the llm to choose the next step (tool) or to determine that we're done.&lt;/p&gt; 
&lt;p&gt;Here's a multi-step example:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/3beb0966-fdb1-4c12-a47f-ed4e8240f8fd"&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif"&gt;GIF Version&lt;/a&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github.com/humanlayer/12-factor-agents/raw/main/img/027-agent-loop-animation.gif" alt="027-agent-loop-animation" /&gt;]&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Why 12-factor agents?&lt;/h2&gt; 
&lt;p&gt;At the end of the day, this approach just doesn't work as well as we want it to.&lt;/p&gt; 
&lt;p&gt;In building HumanLayer, I've talked to at least 100 SaaS builders (mostly technical founders) looking to make their existing product more agentic. The journey usually goes something like:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Decide you want to build an agent&lt;/li&gt; 
 &lt;li&gt;Product design, UX mapping, what problems to solve&lt;/li&gt; 
 &lt;li&gt;Want to move fast, so grab $FRAMEWORK and &lt;em&gt;get to building&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Get to 70-80% quality bar&lt;/li&gt; 
 &lt;li&gt;Realize that 80% isn't good enough for most customer-facing features&lt;/li&gt; 
 &lt;li&gt;Realize that getting past 80% requires reverse-engineering the framework, prompts, flow, etc.&lt;/li&gt; 
 &lt;li&gt;Start over from scratch&lt;/li&gt; 
&lt;/ol&gt; 
&lt;details&gt; 
 &lt;summary&gt;Random Disclaimers&lt;/summary&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I'm not sure the exact right place to say this, but here seems as good as any: &lt;strong&gt;this in BY NO MEANS meant to be a dig on either the many frameworks out there, or the pretty dang smart people who work on them&lt;/strong&gt;. They enable incredible things and have accelerated the AI ecosystem.&lt;/p&gt; 
 &lt;p&gt;I hope that one outcome of this post is that agent framework builders can learn from the journeys of myself and others, and make frameworks even better.&lt;/p&gt; 
 &lt;p&gt;Especially for builders who want to move fast but need deep control.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 2&lt;/strong&gt;: I'm not going to talk about MCP. I'm sure you can see where it fits in.&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;DISCLAIMER 3&lt;/strong&gt;: I'm using mostly typescript, for &lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAA4oHTkByAiD-wZjnGsMBUL_JT6nyyhOh30"&gt;reasons&lt;/a&gt; but all this stuff works in python or any other language you prefer.&lt;/p&gt; 
 &lt;p&gt;Anyways back to the thing...&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Design Patterns for great LLM applications&lt;/h3&gt; 
&lt;p&gt;After digging through hundreds of AI libriaries and working with dozens of founders, my instinct is this:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;There are some core things that make agents great&lt;/li&gt; 
 &lt;li&gt;Going all in on a framework and building what is essentially a greenfield rewrite may be counter-productive&lt;/li&gt; 
 &lt;li&gt;There are some core principles that make agents great, and you will get most/all of them if you pull in a framework&lt;/li&gt; 
 &lt;li&gt;BUT, the fastest way I've seen for builders to get high-quality AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/li&gt; 
 &lt;li&gt;These modular concepts from agents can be defined and applied by most skilled software engineers, even if they don't have an AI background&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;The fastest way I've seen for builders to get good AI software in the hands of customers is to take small, modular concepts from agent building, and incorporate them into their existing product&lt;/h4&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;The 12 Factors (again)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/brief-history-of-software.md"&gt;How We Got Here: A Brief History of Software&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-01-natural-language-to-tool-calls.md"&gt;Factor 1: Natural Language to Tool Calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-02-own-your-prompts.md"&gt;Factor 2: Own your prompts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-03-own-your-context-window.md"&gt;Factor 3: Own your context window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-04-tools-are-structured-outputs.md"&gt;Factor 4: Tools are just structured outputs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-05-unify-execution-state.md"&gt;Factor 5: Unify execution state and business state&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-06-launch-pause-resume.md"&gt;Factor 6: Launch/Pause/Resume with simple APIs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-07-contact-humans-with-tools.md"&gt;Factor 7: Contact humans with tool calls&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-08-own-your-control-flow.md"&gt;Factor 8: Own your control flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-09-compact-errors.md"&gt;Factor 9: Compact Errors into Context Window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-10-small-focused-agents.md"&gt;Factor 10: Small, Focused Agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-11-trigger-from-anywhere.md"&gt;Factor 11: Trigger from anywhere, meet users where they are&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/factor-12-stateless-reducer.md"&gt;Factor 12: Make your agent a stateless reducer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Honorable Mentions / other advice&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/humanlayer/12-factor-agents/raw/main/content/appendix-13-pre-fetch.md"&gt;Factor 13: Pre-fetch all the context you might need&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Contribute to this guide &lt;a href="https://github.com/humanlayer/12-factor-agents"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/8bIHcttkOTE"&gt;I talked about a lot of this on an episode of the Tool Use podcast&lt;/a&gt; in March 2025&lt;/li&gt; 
 &lt;li&gt;I write about some of this stuff at &lt;a href="https://theouterloop.substack.com"&gt;The Outer Loop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;I do &lt;a href="https://github.com/hellovai/ai-that-works/tree/main"&gt;webinars about Maximizing LLM Performance&lt;/a&gt; with &lt;a href="https://github.com/hellovai"&gt;@hellovai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We build OSS agents with this methodology under &lt;a href="https://github.com/got-agents/agents"&gt;got-agents/agents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;We ignored all our own advice and built a &lt;a href="https://github.com/humanlayer/kubechain"&gt;framework for running distributed agents in kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Other links from this guide: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://12factor.net"&gt;12 Factor Apps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.anthropic.com/engineering/building-effective-agents#agents"&gt;Building Effective Agents (Anthropic)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://thedataexchange.media/baml-revolution-in-ai-engineering/"&gt;Prompts are Functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tomasp.net/blog/2015/library-frameworks/"&gt;Library patterns: Why frameworks are evil&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction"&gt;The Wrong Abstraction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/dexhorthy/mailcrew"&gt;Mailcrew Agent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f_cKnoPC_Oo"&gt;Mailcrew Demo Video&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://x.com/chainlit_io/status/1858613325921480922"&gt;Chainlit Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.linkedin.com/posts/dexterihorthy_llms-typescript-aiagents-activity-7290858296679313408-Lh9e"&gt;TypeScript for LLMs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.boundaryml.com/blog/schema-aligned-parsing"&gt;Schema Aligned Parsing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.vellum.ai/blog/when-should-i-use-function-calling-structured-outputs-or-json-mode"&gt;Function Calling vs Structured Outputs vs JSON Mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/boundaryml/baml"&gt;BAML on GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/openai_json_vs_function_calling/"&gt;OpenAI JSON vs Function Calling&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://theouterloop.substack.com/p/openais-realtime-api-is-a-step-towards"&gt;Outer Loop Agents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://airflow.apache.org/"&gt;Airflow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.prefect.io/"&gt;Prefect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dagster.io/"&gt;Dagster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.inngest.com/"&gt;Inngest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.windmill.dev/"&gt;Windmill&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aiagentindex.mit.edu/"&gt;The AI Agent Index (MIT)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://open.substack.com/pub/swyx/p/notebooklm?selection=08e1187c-cfee-4c63-93c9-71216640a5f8"&gt;NotebookLM on Finding Model Capability Boundaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has contributed to 12-factor agents!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/dexhorthy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3730605?v=4&amp;amp;s=80" width="80px" alt="dexhorthy" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Sypherd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50557586?v=4&amp;amp;s=80" width="80px" alt="Sypherd" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tofaramususa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66259401?v=4&amp;amp;s=80" width="80px" alt="tofaramususa" /&gt;&lt;/a&gt; &lt;a href="https://github.com/a-churchill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18105223?v=4&amp;amp;s=80" width="80px" alt="a-churchill" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Elijas"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4084885?v=4&amp;amp;s=80" width="80px" alt="Elijas" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hugolmn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39267118?v=4&amp;amp;s=80" width="80px" alt="hugolmn" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jeremypeters"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1882972?v=4&amp;amp;s=80" width="80px" alt="jeremypeters" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/kndl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/380402?v=4&amp;amp;s=80" width="80px" alt="kndl" /&gt;&lt;/a&gt; &lt;a href="https://github.com/maciejkos"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16674643?v=4&amp;amp;s=80" width="80px" alt="maciejkos" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pfbyjy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85041180?v=4&amp;amp;s=80" width="80px" alt="pfbyjy" /&gt;&lt;/a&gt; &lt;a href="https://github.com/0xRaduan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36044389?v=4&amp;amp;s=80" width="80px" alt="0xRaduan" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zyuanlim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7169731?v=4&amp;amp;s=80" width="80px" alt="zyuanlim" /&gt;&lt;/a&gt; &lt;a href="https://github.com/lombardo-chcg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15862501?v=4&amp;amp;s=80" width="80px" alt="lombardo-chcg" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sahanatvessel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/160066852?v=4&amp;amp;s=80" width="80px" alt="sahanatvessel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;p&gt;This is the current version of 12-factor agents, version 1.0. There is a draft of version 1.1 on the &lt;a href="https://github.com/humanlayer/12-factor-agents/tree/v1.1"&gt;v1.1 branch&lt;/a&gt;. There are a few &lt;a href="https://github.com/humanlayer/12-factor-agents/issues?q=is%3Aissue%20state%3Aopen%20label%3Aversion%3A%3A1.1"&gt;Issues to track work on v1.1&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;All content and images are licensed under a &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;CC BY-SA 4.0 License&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Code is licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0 License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>