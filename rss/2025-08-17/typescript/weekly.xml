<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Sat, 16 Aug 2025 01:49:59 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>menloresearch/jan</title>
      <link>https://github.com/menloresearch/jan</link>
      <description>&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Local AI Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/menloresearch/jan/dev/docs/src/pages/docs/_assets/jan-app.png" alt="Jan AI" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/menloresearch/jan" /&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/menloresearch/jan" /&gt; &lt;img alt="Github Contributors" src="https://img.shields.io/github/contributors/menloresearch/jan" /&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/menloresearch/jan" /&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://jan.ai/docs/quickstart"&gt;Getting Started&lt;/a&gt; - &lt;a href="https://jan.ai/docs"&gt;Docs&lt;/a&gt; - &lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - &lt;a href="https://github.com/menloresearch/jan/issues"&gt;Bug reports&lt;/a&gt; - &lt;a href="https://discord.gg/AsJ8krTT3N"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jan is an AI assistant that can run 100% offline on your device. Download and run LLMs with &lt;strong&gt;full control&lt;/strong&gt; and &lt;strong&gt;privacy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started is by downloading one of the following versions for your respective operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Stable&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Nightly&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;macOS&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (deb)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (AppImage)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Download from &lt;a href="https://jan.ai/"&gt;jan.ai&lt;/a&gt; or &lt;a href="https://github.com/menloresearch/jan/releases"&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local AI Models&lt;/strong&gt;: Download and run LLMs (Llama, Gemma, Qwen, etc.) from HuggingFace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Integration&lt;/strong&gt;: Connect to OpenAI, Anthropic, Mistral, Groq, and others&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Assistants&lt;/strong&gt;: Create specialized AI assistants for your tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI-Compatible API&lt;/strong&gt;: Local server at &lt;code&gt;localhost:1337&lt;/code&gt; for other applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: MCP integration for enhanced capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt;: Everything runs locally when you want it to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;For those who enjoy the scenic route:&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js ≥ 20.0.0&lt;/li&gt; 
 &lt;li&gt;Yarn ≥ 1.22.0&lt;/li&gt; 
 &lt;li&gt;Make ≥ 3.81&lt;/li&gt; 
 &lt;li&gt;Rust (for Tauri)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This handles everything: installs dependencies, builds core components, and launches the app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available make targets:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Mise (easier)&lt;/h3&gt; 
&lt;p&gt;You can also run with &lt;a href="https://mise.jdx.dev/"&gt;mise&lt;/a&gt;, which is a bit easier as it ensures Node.js, Rust, and other dependency versions are automatically managed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan

# Install mise (if not already installed)
curl https://mise.run | sh

# Install tools and start development
mise install    # installs Node.js, Rust, and other tools
mise dev        # runs the full development setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available mise commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;mise dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise tasks&lt;/code&gt; - List all available tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn build:tauri:plugin:api
yarn build:core
yarn build:extensions
yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Minimum specs for a decent experience:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 13.6+ (8GB RAM for 3B models, 16GB for 7B, 32GB for 13B)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 10+ with GPU support for NVIDIA/AMD/Intel Arc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Most distributions work, GPU acceleration available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed compatibility, check our &lt;a href="https://jan.ai/docs/desktop/mac"&gt;installation guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If things go sideways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check our &lt;a href="https://jan.ai/docs/troubleshooting"&gt;troubleshooting docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy your error logs and system specs&lt;/li&gt; 
 &lt;li&gt;Ask for help in our &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; &lt;code&gt;#🆘|jan-help&lt;/code&gt; channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions welcome. See &lt;a href="https://raw.githubusercontent.com/menloresearch/jan/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for the full spiel.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/docs"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/api-reference"&gt;API Reference&lt;/a&gt; - For the technically inclined&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/menloresearch/jan/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@jan.ai"&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:hr@jan.ai"&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 - Because sharing is caring.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Built on the shoulders of giants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scalar/scalar"&gt;Scalar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>idosal/git-mcp</title>
      <link>https://github.com/idosal/git-mcp</link>
      <description>&lt;p&gt;Put an end to code hallucinations! GitMCP is a free, open-source, remote MCP server for any GitHub project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitMCP&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img width="884" alt="image" src="https://github.com/user-attachments/assets/2bf3e3df-556c-49c6-ab7b-36c279d53bba" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-what-is-gitmcp"&gt;What is GitMCP&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-getting-started"&gt;Getting Started&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-how-it-works"&gt;How It Works&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-badge"&gt;Badge&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-examples"&gt;Examples&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-faq"&gt;FAQ&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-privacy"&gt;Privacy&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/idosal1"&gt;&lt;img src="https://img.shields.io/twitter/follow/idosal1?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/liadyosef"&gt;&lt;img src="https://img.shields.io/twitter/follow/liadyosef?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.pulsemcp.com/servers/idosal-git-mcp"&gt;&lt;img src="https://www.pulsemcp.com/badge/top-pick/idosal-git-mcp" width="400" alt="Pulse MCP Badge" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;🤔 What is GitMCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Stop vibe-hallucinating and start vibe-coding!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitmcp.io"&gt;GitMCP&lt;/a&gt; is a free, open-source, remote &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt; server that transforms &lt;strong&gt;any&lt;/strong&gt; GitHub project (repositories or GitHub pages) into a documentation hub. It enables AI tools like Cursor to access up-to-date documentation and code, even if the LLM has never encountered them, thereby eliminating code hallucinations seamlessly.&lt;/p&gt; 
&lt;p&gt;GitMCP supports &lt;strong&gt;two flavors&lt;/strong&gt; -&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Specific Repository (&lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt; or &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;):&lt;/strong&gt; Use these when you primarily work with a select number of libraries. This ensures your AI assistant always targets the correct project, enhancing security and relevance by preventing access to unintended repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generic Server (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;):&lt;/strong&gt; Use this for maximum flexibility when you need to switch between different repositories frequently. The AI assistant will prompt you (or decide based on context) which repository to access for each request. Be mindful that this relies on correctly identifying the target repository each time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;With GitMCP:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI assistants access the &lt;em&gt;latest&lt;/em&gt; documentation and code directly from the source.&lt;/li&gt; 
 &lt;li&gt;Get accurate API usage and reliable code examples.&lt;/li&gt; 
 &lt;li&gt;Work effectively even with niche, new, or rapidly changing libraries.&lt;/li&gt; 
 &lt;li&gt;Significantly reduced hallucinations and improved code correctness.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, this side-by-side comparison shows the result for the same one-shot prompt in Cursor when creating a &lt;a href="https://github.com/mrdoob/three.js"&gt;three.js&lt;/a&gt; scene -&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45"&gt;https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;😎 &lt;strong&gt;Latest Documentation on ANY GitHub Project&lt;/strong&gt;: Grant your AI assistant seamless access to the GitHub project's documentation and code. The built-in smart search capabilities help find exactly what the AI needs without using too many tokens!&lt;/li&gt; 
 &lt;li&gt;🧠 &lt;strong&gt;No More Hallucinations&lt;/strong&gt;: With GitMCP, your AI assistant can provide accurate and relevant answers to your questions.&lt;/li&gt; 
 &lt;li&gt;☁️ &lt;strong&gt;Zero Setup&lt;/strong&gt;: GitMCP runs in the cloud. Simply add the chosen GitMCP URL as an MCP server in your IDE — no downloads, installations, signups, or changes are required.&lt;/li&gt; 
 &lt;li&gt;💬 &lt;strong&gt;Embedded Chat&lt;/strong&gt;: Start quickly by chatting directly with the repository's documentation through our in-browser chat!&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Open, Free, and Private&lt;/strong&gt;: GitMCP is open-source and completely free to use. It doesn't collect personal information or store queries. You can even self-host it!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;video src="https://github.com/user-attachments/assets/2c3afaf9-6c08-436e-9efd-db8710554430"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;Using GitMCP is easy! Simply follow these steps:&lt;/p&gt; 
&lt;h3&gt;Step 1: Choose the type of server you want&lt;/h3&gt; 
&lt;p&gt;Choose one of these URL formats depending on what you want to connect to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For GitHub repositories: &lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For GitHub Pages sites: &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For a generic tool that supports any repository (dynamic): &lt;code&gt;gitmcp.io/docs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Replace &lt;code&gt;{owner}&lt;/code&gt; with the GitHub username or organization name, and &lt;code&gt;{repo}&lt;/code&gt; with the repository name.&lt;/p&gt; 
&lt;p&gt;For your convenience, you can also use the conversion tool on the landing page to format the GitHub URL into an MCP URL!&lt;/p&gt; 
&lt;h3&gt;Step 2: Connect your AI assistant&lt;/h3&gt; 
&lt;p&gt;Select your AI assistant from the options below and follow the configuration instructions:&lt;/p&gt; 
&lt;h4&gt;Connecting Cursor&lt;/h4&gt; 
&lt;p&gt;Update your Cursor configuration file at &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Claude Desktop&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;In Claude Desktop, go to Settings &amp;gt; Developer &amp;gt; Edit Config&lt;/li&gt; 
 &lt;li&gt;Replace the configuration with: &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Connecting Windsurf&lt;/h4&gt; 
&lt;p&gt;Update your Windsurf configuration file at &lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "serverUrl": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting VSCode&lt;/h4&gt; 
&lt;p&gt;Update your VSCode configuration file at &lt;code&gt;.vscode/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "gitmcp": {
      "type": "sse",
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Cline&lt;/h4&gt; 
&lt;p&gt;Update your Cline configuration file at &lt;code&gt;~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}",
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Highlight AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Highlight AI and click the plugins icon (@ symbol) in the sidebar&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Installed Plugins&lt;/strong&gt; at the top of the sidebar&lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Custom Plugin&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Add a plugin using a custom SSE URL&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Plugin name: &lt;code&gt;gitmcp&lt;/code&gt; SSE URL: &lt;code&gt;https://gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more details on adding custom MCP servers to HighlightAI, refer to &lt;a href="https://docs.highlightai.com/learn/developers/plugins/custom-plugins-setup"&gt;the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Connecting Augment Code&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Augment Code settings&lt;/li&gt; 
 &lt;li&gt;Navigate to the MCP section&lt;/li&gt; 
 &lt;li&gt;Add a new MCP server with the following details:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Name the MCP server: &lt;code&gt;git-mcp Docs&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Use this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx mcp-remote https://gitmcp.io/{owner}/{repo}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Msty AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Msty Studio&lt;/li&gt; 
 &lt;li&gt;Go to Tools &amp;gt; Import Tools from JSON Clipboard&lt;/li&gt; 
 &lt;li&gt;Paste the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring MCP servers in Augment Code, visit &lt;a href="https://docs.augmentcode.com/setup-augment/mcp"&gt;the Augment Code documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember to replace &lt;code&gt;{owner}&lt;/code&gt; and &lt;code&gt;{repo}&lt;/code&gt; with the actual GitHub username/organization and repository name. You can also use the dynamic endpoint &lt;code&gt;https://gitmcp.io/docs&lt;/code&gt; to allow your AI to access any repository on demand.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;⚙ How It Works&lt;/h2&gt; 
&lt;p&gt;GitMCP connects your AI assistant to GitHub repositories using the Model Context Protocol (MCP), a standard that lets AI tools request additional information from external sources.&lt;/p&gt; 
&lt;p&gt;What happens when you use GitMCP:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;You provide the GitMCP URL&lt;/strong&gt; to your AI assistant (e.g., &lt;code&gt;gitmcp.io/microsoft/typescript&lt;/code&gt;). GitMCP exposes tools like documentation fetching, smart search, code search, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt the AI assistant&lt;/strong&gt; on documentation/code-related questions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI sends requests&lt;/strong&gt; to GitMCP to use its tools (with your approval).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitMCP executes the AI's request&lt;/strong&gt; and returns the requested data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI receives the information&lt;/strong&gt; and generates a more accurate, grounded response without hallucinations.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported Documentation&lt;/h3&gt; 
&lt;p&gt;GitMCP currently supports the following documents (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://llmstxt.org"&gt;llms.txt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AI-optimized version of the project's documentation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;/root&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;💡 Examples&lt;/h2&gt; 
&lt;p&gt;Here are some examples of how to use GitMCP with different AI assistants and repositories:&lt;/p&gt; 
&lt;h3&gt;Example 1: Using Windsurf with a specific repository&lt;/h3&gt; 
&lt;p&gt;For the GitHub repository &lt;code&gt;https://github.com/microsoft/playwright-mcp&lt;/code&gt;, add &lt;code&gt;https://gitmcp.io/microsoft/playwright-mcp&lt;/code&gt; as an MCP server to Windsurf.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Claude:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"How do I use the Playwright MCP"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Windsurf will pull the relevant documentation from GitMCP to implement the memory feature correctly.&lt;/p&gt; 
&lt;h3&gt;Example 2: Using Cursor with a GitHub Pages site&lt;/h3&gt; 
&lt;p&gt;For the GitHub Pages site &lt;code&gt;langchain-ai.github.io/langgraph&lt;/code&gt;, add &lt;code&gt;https://langchain-ai.gitmcp.io/langgraph&lt;/code&gt; as an MCP server to Cursor.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Cursor:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Add memory to my LangGraph agent"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cursor will pull the relevant documentation and code from GitMCP to correctly implement the memory feature.&lt;/p&gt; 
&lt;h3&gt;Example 3: Using Claude Desktop with the dynamic endpoint&lt;/h3&gt; 
&lt;p&gt;You don't have to pick specific repositories. The generic &lt;code&gt;gitmcp.io/docs&lt;/code&gt; endpoint allows AI to pick the GitHub project on the fly!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to any AI assistant:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"I want to learn about the OpenAI Whisper speech recognition model. Explain how it works.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Claude will pull the data from GitMCP and answer the question.&lt;/p&gt; 
&lt;h2&gt;🛠️ Tools&lt;/h2&gt; 
&lt;p&gt;GitMCP provides AI assistants with several valuable tools to help them access, understand, and query GitHub repositories.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool gets the primary documentation from a GitHub repository. It works by retrieving relevant documentation (e.g., &lt;code&gt;llms.txt&lt;/code&gt;). This gives the AI a good overview of what the project is about&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For general questions about a project's purpose, features, or how to get started&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool lets the AI search through a repository's documentation by providing a specific search query. Instead of loading all the documentation (which could be very large), it uses intelligent search to find just the relevant parts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For specific questions about particular features, functions, or concepts within a project&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_url_content&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool helps the AI get information from links mentioned in the documentation. It retrieves the content from those links and converts it to a format the AI can easily read.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When documentation references external information that would help answer your question&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_code&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool searches through the actual code in the repository using GitHub's code search. It helps AI find specific code examples or implementation details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When you want examples of how something is implemented or need technical details not covered in documentation&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When using the dynamic endpoint (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;), these tools are named slightly differently (&lt;code&gt;fetch_generic_documentation&lt;/code&gt;, &lt;code&gt;search_generic_code&lt;/code&gt;, and &lt;code&gt;search_generic_documentation&lt;/code&gt;) and need additional information about which repository to access.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📊 Badge&lt;/h2&gt; 
&lt;p&gt;GitMCP has a badge to your repository's README. It allows users to quickly access your documentation through their IDE or browser (using the embedded chat). It also showcases how many times your documentation has been accessed through GitMCP.&lt;/p&gt; 
&lt;p&gt;Example (&lt;code&gt;idosal/git-mcp&lt;/code&gt;): &lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Adding the Badge to Your Repository&lt;/h3&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;[![GitMCP](https://img.shields.io/endpoint?url=https://gitmcp.io/badge/OWNER/REPO)](https://gitmcp.io/OWNER/REPO)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;OWNER&lt;/code&gt; with your GitHub username or organization, and &lt;code&gt;REPO&lt;/code&gt; with your repository name.&lt;/p&gt; 
&lt;h3&gt;How We Count Views&lt;/h3&gt; 
&lt;p&gt;Increment for each tool call on the specific repository.&lt;/p&gt; 
&lt;h3&gt;Customizing the Badge&lt;/h3&gt; 
&lt;p&gt;You can customize the badge's appearance with parameters:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color for the badge value&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;aquamarine&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;?color=green&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Badge label&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GitMCP&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Please reach out!&lt;/p&gt; 
&lt;h2&gt;❓ FAQ&lt;/h2&gt; 
&lt;h3&gt;What is the Model Context Protocol?&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://modelcontextprotocol.io/introduction"&gt;Model Context Protocol&lt;/a&gt; is a standard that allows AI assistants to request and receive additional context from external sources in a structured manner, enhancing their understanding and performance.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP work with any AI assistant?&lt;/h3&gt; 
&lt;p&gt;Yes, GitMCP is compatible with any AI assistant supporting the Model Context Protocol, including tools like Cursor, VSCode, Claude, etc.&lt;/p&gt; 
&lt;h3&gt;Is GitMCP compatible with all GitHub projects?&lt;/h3&gt; 
&lt;p&gt;Absolutely! GitMCP works with any public GitHub repository without requiring any modifications. It prioritizes the &lt;code&gt;llms.txt&lt;/code&gt; file and falls back to &lt;code&gt;README.md&lt;/code&gt; or other pages if the former is unavailable. Future updates aim to support additional documentation methods and even generate content dynamically.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP cost money?&lt;/h3&gt; 
&lt;p&gt;No, GitMCP is a free service to the community with no associated costs.&lt;/p&gt; 
&lt;h2&gt;🔒 Privacy&lt;/h2&gt; 
&lt;p&gt;GitMCP is deeply committed to its users' privacy. The service doesn't have access to or store any personally identifiable information as it doesn't require authentication. In addition, it doesn't store any queries sent by the agents. Moreover, as GitMCP is an open-source project, it can be deployed independently in your environment.&lt;/p&gt; 
&lt;p&gt;GitMCP only accesses content that is already publicly available and only when queried by a user. GitMCP does not automatically scrape repositories. Before accessing any GitHub Pages site, the code checks for &lt;code&gt;robots.txt&lt;/code&gt; rules and follows the directives set by site owners, allowing them to opt out. Please note that GitMCP doesn't permanently store data regarding the GitHub projects or their content.&lt;/p&gt; 
&lt;h2&gt;👥 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions, feedback, and ideas! Please review our &lt;a href="https://github.com/idosal/git-mcp/raw/main/.github/CONTRIBUTING.md"&gt;contribution&lt;/a&gt; guidelines.&lt;/p&gt; 
&lt;h3&gt;Local Development Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/idosal/git-mcp.git
cd git-mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run locally for development&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
# or
pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Using MCP Inspector for Testing&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the MCP Inspector tool:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the inspector interface:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Set Transport Type to &lt;code&gt;SSE&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Enter your GitMCP URL (e.g., &lt;code&gt;http://localhost:5173/docs&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;Click "Connect"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;GitMCP is provided "as is" without warranty of any kind. While we strive to ensure the reliability and security of our service, we are not responsible for any damages or issues that may arise from its use. GitHub projects accessed through GitMCP are subject to their respective owners' terms and conditions. GitMCP is not affiliated with GitHub or any of the mentioned AI tools.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#idosal/git-mcp&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=idosal/git-mcp&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ericc-ch/copilot-api</title>
      <link>https://github.com/ericc-ch/copilot-api</link>
      <description>&lt;p&gt;Turn GitHub Copilot into OpenAI/Anthropic API compatible server. Usable with Claude Code!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Copilot API Proxy&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] This is a reverse-engineered proxy of GitHub Copilot API. It is not supported by GitHub, and may break unexpectedly. Use at your own risk.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;GitHub Security Notice:&lt;/strong&gt;&lt;br /&gt; Excessive automated or scripted use of Copilot (including rapid or bulk requests, such as via automated tools) may trigger GitHub's abuse-detection systems.&lt;br /&gt; You may receive a warning from GitHub Security, and further anomalous activity could result in temporary suspension of your Copilot access.&lt;/p&gt; 
 &lt;p&gt;GitHub prohibits use of their servers for excessive automated bulk activity or any activity that places undue burden on their infrastructure.&lt;/p&gt; 
 &lt;p&gt;Please review:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://docs.github.com/site-policy/acceptable-use-policies/github-acceptable-use-policies#4-spam-and-inauthentic-activity-on-github"&gt;GitHub Acceptable Use Policies&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://docs.github.com/site-policy/github-terms/github-terms-for-additional-products-and-features#github-copilot"&gt;GitHub Copilot Terms&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Use this proxy responsibly to avoid account restrictions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://ko-fi.com/E1E519XS7W"&gt;&lt;img src="https://ko-fi.com/img/githubbutton_sm.svg?sanitize=true" alt="ko-fi" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you are using &lt;a href="https://github.com/sst/opencode"&gt;opencode&lt;/a&gt;, you do not need this project. Opencode supports GitHub Copilot provider out of the box.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Project Overview&lt;/h2&gt; 
&lt;p&gt;A reverse-engineered proxy for the GitHub Copilot API that exposes it as an OpenAI and Anthropic compatible service. This allows you to use GitHub Copilot with any tool that supports the OpenAI Chat Completions API or the Anthropic Messages API, including to power &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;Claude Code&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI &amp;amp; Anthropic Compatibility&lt;/strong&gt;: Exposes GitHub Copilot as an OpenAI-compatible (&lt;code&gt;/v1/chat/completions&lt;/code&gt;, &lt;code&gt;/v1/models&lt;/code&gt;, &lt;code&gt;/v1/embeddings&lt;/code&gt;) and Anthropic-compatible (&lt;code&gt;/v1/messages&lt;/code&gt;) API.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Claude Code Integration&lt;/strong&gt;: Easily configure and launch &lt;a href="https://docs.anthropic.com/en/docs/claude-code/overview"&gt;Claude Code&lt;/a&gt; to use Copilot as its backend with a simple command-line flag (&lt;code&gt;--claude-code&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Usage Dashboard&lt;/strong&gt;: A web-based dashboard to monitor your Copilot API usage, view quotas, and see detailed statistics.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rate Limit Control&lt;/strong&gt;: Manage API usage with rate-limiting options (&lt;code&gt;--rate-limit&lt;/code&gt;) and a waiting mechanism (&lt;code&gt;--wait&lt;/code&gt;) to prevent errors from rapid requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Manual Request Approval&lt;/strong&gt;: Manually approve or deny each API request for fine-grained control over usage (&lt;code&gt;--manual&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Token Visibility&lt;/strong&gt;: Option to display GitHub and Copilot tokens during authentication and refresh for debugging (&lt;code&gt;--show-token&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible Authentication&lt;/strong&gt;: Authenticate interactively or provide a GitHub token directly, suitable for CI/CD environments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for Different Account Types&lt;/strong&gt;: Works with individual, business, and enterprise GitHub Copilot plans.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/7654b383-669d-4eb9-b23c-06d7aefee8c5"&gt;https://github.com/user-attachments/assets/7654b383-669d-4eb9-b23c-06d7aefee8c5&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bun (&amp;gt;= 1.2.x)&lt;/li&gt; 
 &lt;li&gt;GitHub account with Copilot subscription (individual, business, or enterprise)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;To install dependencies, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;bun install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using with Docker&lt;/h2&gt; 
&lt;p&gt;Build image&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t copilot-api .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the container&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Create a directory on your host to persist the GitHub token and related data
mkdir -p ./copilot-data

# Run the container with a bind mount to persist the token
# This ensures your authentication survives container restarts

docker run -p 4141:4141 -v $(pwd)/copilot-data:/root/.local/share/copilot-api copilot-api
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The GitHub token and related data will be stored in &lt;code&gt;copilot-data&lt;/code&gt; on your host. This is mapped to &lt;code&gt;/root/.local/share/copilot-api&lt;/code&gt; inside the container, ensuring persistence across restarts.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Docker with Environment Variables&lt;/h3&gt; 
&lt;p&gt;You can pass the GitHub token directly to the container using environment variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Build with GitHub token
docker build --build-arg GH_TOKEN=your_github_token_here -t copilot-api .

# Run with GitHub token
docker run -p 4141:4141 -e GH_TOKEN=your_github_token_here copilot-api

# Run with additional options
docker run -p 4141:4141 -e GH_TOKEN=your_token copilot-api start --verbose --port 4141
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Compose Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;version: "3.8"
services:
  copilot-api:
    build: .
    ports:
      - "4141:4141"
    environment:
      - GH_TOKEN=your_github_token_here
    restart: unless-stopped
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Docker image includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Multi-stage build for optimized image size&lt;/li&gt; 
 &lt;li&gt;Non-root user for enhanced security&lt;/li&gt; 
 &lt;li&gt;Health check for container monitoring&lt;/li&gt; 
 &lt;li&gt;Pinned base image version for reproducible builds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using with npx&lt;/h2&gt; 
&lt;p&gt;You can run the project directly using npx:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npx copilot-api@latest start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npx copilot-api@latest start --port 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For authentication only:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npx copilot-api@latest auth
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Command Structure&lt;/h2&gt; 
&lt;p&gt;Copilot API now uses a subcommand structure with these main commands:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;start&lt;/code&gt;: Start the Copilot API server. This command will also handle authentication if needed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;auth&lt;/code&gt;: Run GitHub authentication flow without starting the server. This is typically used if you need to generate a token for use with the &lt;code&gt;--github-token&lt;/code&gt; option, especially in non-interactive environments.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;check-usage&lt;/code&gt;: Show your current GitHub Copilot usage and quota information directly in the terminal (no server required).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;debug&lt;/code&gt;: Display diagnostic information including version, runtime details, file paths, and authentication status. Useful for troubleshooting and support.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Command Line Options&lt;/h2&gt; 
&lt;h3&gt;Start Command Options&lt;/h3&gt; 
&lt;p&gt;The following command line options are available for the &lt;code&gt;start&lt;/code&gt; command:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--port&lt;/td&gt; 
   &lt;td&gt;Port to listen on&lt;/td&gt; 
   &lt;td&gt;4141&lt;/td&gt; 
   &lt;td&gt;-p&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--verbose&lt;/td&gt; 
   &lt;td&gt;Enable verbose logging&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;-v&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--account-type&lt;/td&gt; 
   &lt;td&gt;Account type to use (individual, business, enterprise)&lt;/td&gt; 
   &lt;td&gt;individual&lt;/td&gt; 
   &lt;td&gt;-a&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--manual&lt;/td&gt; 
   &lt;td&gt;Enable manual request approval&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;none&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--rate-limit&lt;/td&gt; 
   &lt;td&gt;Rate limit in seconds between requests&lt;/td&gt; 
   &lt;td&gt;none&lt;/td&gt; 
   &lt;td&gt;-r&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--wait&lt;/td&gt; 
   &lt;td&gt;Wait instead of error when rate limit is hit&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;-w&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--github-token&lt;/td&gt; 
   &lt;td&gt;Provide GitHub token directly (must be generated using the &lt;code&gt;auth&lt;/code&gt; subcommand)&lt;/td&gt; 
   &lt;td&gt;none&lt;/td&gt; 
   &lt;td&gt;-g&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--claude-code&lt;/td&gt; 
   &lt;td&gt;Generate a command to launch Claude Code with Copilot API config&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;-c&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--show-token&lt;/td&gt; 
   &lt;td&gt;Show GitHub and Copilot tokens on fetch and refresh&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;none&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Auth Command Options&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--verbose&lt;/td&gt; 
   &lt;td&gt;Enable verbose logging&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;-v&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--show-token&lt;/td&gt; 
   &lt;td&gt;Show GitHub token on auth&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;none&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Debug Command Options&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Alias&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;--json&lt;/td&gt; 
   &lt;td&gt;Output debug info as JSON&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;none&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;API Endpoints&lt;/h2&gt; 
&lt;p&gt;The server exposes several endpoints to interact with the Copilot API. It provides OpenAI-compatible endpoints and now also includes support for Anthropic-compatible endpoints, allowing for greater flexibility with different tools and services.&lt;/p&gt; 
&lt;h3&gt;OpenAI Compatible Endpoints&lt;/h3&gt; 
&lt;p&gt;These endpoints mimic the OpenAI API structure.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Endpoint&lt;/th&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;POST /v1/chat/completions&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Creates a model response for the given chat conversation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GET /v1/models&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Lists the currently available models.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;POST /v1/embeddings&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Creates an embedding vector representing the input text.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Anthropic Compatible Endpoints&lt;/h3&gt; 
&lt;p&gt;These endpoints are designed to be compatible with the Anthropic Messages API.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Endpoint&lt;/th&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;POST /v1/messages&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Creates a model response for a given conversation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;POST /v1/messages/count_tokens&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Calculates the number of tokens for a given set of messages.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Usage Monitoring Endpoints&lt;/h3&gt; 
&lt;p&gt;New endpoints for monitoring your Copilot usage and quotas.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Endpoint&lt;/th&gt; 
   &lt;th&gt;Method&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GET /usage&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get detailed Copilot usage statistics and quota information.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GET /token&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GET&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get the current Copilot token being used by the API.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;p&gt;Using with npx:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Basic usage with start command
npx copilot-api@latest start

# Run on custom port with verbose logging
npx copilot-api@latest start --port 8080 --verbose

# Use with a business plan GitHub account
npx copilot-api@latest start --account-type business

# Use with an enterprise plan GitHub account
npx copilot-api@latest start --account-type enterprise

# Enable manual approval for each request
npx copilot-api@latest start --manual

# Set rate limit to 30 seconds between requests
npx copilot-api@latest start --rate-limit 30

# Wait instead of error when rate limit is hit
npx copilot-api@latest start --rate-limit 30 --wait

# Provide GitHub token directly
npx copilot-api@latest start --github-token ghp_YOUR_TOKEN_HERE

# Run only the auth flow
npx copilot-api@latest auth

# Run auth flow with verbose logging
npx copilot-api@latest auth --verbose

# Show your Copilot usage/quota in the terminal (no server needed)
npx copilot-api@latest check-usage

# Display debug information for troubleshooting
npx copilot-api@latest debug

# Display debug information in JSON format
npx copilot-api@latest debug --json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using the Usage Viewer&lt;/h2&gt; 
&lt;p&gt;After starting the server, a URL to the Copilot Usage Dashboard will be displayed in your console. This dashboard is a web interface for monitoring your API usage.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start the server. For example, using npx: &lt;pre&gt;&lt;code class="language-sh"&gt;npx copilot-api@latest start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;The server will output a URL to the usage viewer. Copy and paste this URL into your browser. It will look something like this: &lt;code&gt;https://ericc-ch.github.io/copilot-api?endpoint=http://localhost:4141/usage&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you use the &lt;code&gt;start.bat&lt;/code&gt; script on Windows, this page will open automatically.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The dashboard provides a user-friendly interface to view your Copilot usage data:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;API Endpoint URL&lt;/strong&gt;: The dashboard is pre-configured to fetch data from your local server endpoint via the URL query parameter. You can change this URL to point to any other compatible API endpoint.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fetch Data&lt;/strong&gt;: Click the "Fetch" button to load or refresh the usage data. The dashboard will automatically fetch data on load.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Usage Quotas&lt;/strong&gt;: View a summary of your usage quotas for different services like Chat and Completions, displayed with progress bars for a quick overview.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Detailed Information&lt;/strong&gt;: See the full JSON response from the API for a detailed breakdown of all available usage statistics.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;URL-based Configuration&lt;/strong&gt;: You can also specify the API endpoint directly in the URL using a query parameter. This is useful for bookmarks or sharing links. For example: &lt;code&gt;https://ericc-ch.github.io/copilot-api?endpoint=http://your-api-server/usage&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using with Claude Code&lt;/h2&gt; 
&lt;p&gt;This proxy can be used to power &lt;a href="https://docs.anthropic.com/en/claude-code"&gt;Claude Code&lt;/a&gt;, an experimental conversational AI assistant for developers from Anthropic.&lt;/p&gt; 
&lt;p&gt;There are two ways to configure Claude Code to use this proxy:&lt;/p&gt; 
&lt;h3&gt;Interactive Setup with &lt;code&gt;--claude-code&lt;/code&gt; flag&lt;/h3&gt; 
&lt;p&gt;To get started, run the &lt;code&gt;start&lt;/code&gt; command with the &lt;code&gt;--claude-code&lt;/code&gt; flag:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npx copilot-api@latest start --claude-code
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will be prompted to select a primary model and a "small, fast" model for background tasks. After selecting the models, a command will be copied to your clipboard. This command sets the necessary environment variables for Claude Code to use the proxy.&lt;/p&gt; 
&lt;p&gt;Paste and run this command in a new terminal to launch Claude Code.&lt;/p&gt; 
&lt;h3&gt;Manual Configuration with &lt;code&gt;settings.json&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Alternatively, you can configure Claude Code by creating a &lt;code&gt;.claude/settings.json&lt;/code&gt; file in your project's root directory. This file should contain the environment variables needed by Claude Code. This way you don't need to run the interactive setup every time.&lt;/p&gt; 
&lt;p&gt;Here is an example &lt;code&gt;.claude/settings.json&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "env": {
    "ANTHROPIC_BASE_URL": "http://localhost:4141",
    "ANTHROPIC_AUTH_TOKEN": "dummy",
    "ANTHROPIC_MODEL": "gpt-4.1",
    "ANTHROPIC_SMALL_FAST_MODEL": "gpt-4.1"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can find more options here: &lt;a href="https://docs.anthropic.com/en/docs/claude-code/settings#environment-variables"&gt;Claude Code settings&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can also read more about IDE integration here: &lt;a href="https://docs.anthropic.com/en/docs/claude-code/ide-integrations"&gt;Add Claude Code to your IDE&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Running from Source&lt;/h2&gt; 
&lt;p&gt;The project can be run from source in several ways:&lt;/p&gt; 
&lt;h3&gt;Development Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;bun run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production Mode&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;bun run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage Tips&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;To avoid hitting GitHub Copilot's rate limits, you can use the following flags: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;--manual&lt;/code&gt;: Enables manual approval for each request, giving you full control over when requests are sent.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--rate-limit &amp;lt;seconds&amp;gt;&lt;/code&gt;: Enforces a minimum time interval between requests. For example, &lt;code&gt;copilot-api start --rate-limit 30&lt;/code&gt; will ensure there's at least a 30-second gap between requests.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;--wait&lt;/code&gt;: Use this with &lt;code&gt;--rate-limit&lt;/code&gt;. It makes the server wait for the cooldown period to end instead of rejecting the request with an error. This is useful for clients that don't automatically retry on rate limit errors.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If you have a GitHub business or enterprise plan account with Copilot, use the &lt;code&gt;--account-type&lt;/code&gt; flag (e.g., &lt;code&gt;--account-type business&lt;/code&gt;). See the &lt;a href="https://docs.github.com/en/enterprise-cloud@latest/copilot/managing-copilot/managing-github-copilot-in-your-organization/managing-access-to-github-copilot-in-your-organization/managing-github-copilot-access-to-your-organizations-network#configuring-copilot-subscription-based-network-routing-for-your-enterprise-or-organization"&gt;official documentation&lt;/a&gt; for more details.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>fastapi/full-stack-fastapi-template</title>
      <link>https://github.com/fastapi/full-stack-fastapi-template</link>
      <description>&lt;p&gt;Full stack, modern web application template. Using FastAPI, React, SQLModel, PostgreSQL, Docker, GitHub Actions, automatic HTTPS and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Full Stack FastAPI Template&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template/actions?query=workflow%3ATest" target="_blank"&gt;&lt;img src="https://github.com/fastapi/full-stack-fastapi-template/workflows/Test/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/full-stack-fastapi-template" target="_blank"&gt;&lt;img src="https://coverage-badge.samuelcolvin.workers.dev/fastapi/full-stack-fastapi-template.svg?sanitize=true" alt="Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Technology Stack and Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ &lt;a href="https://fastapi.tiangolo.com"&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/a&gt; for the Python backend API. 
  &lt;ul&gt; 
   &lt;li&gt;🧰 &lt;a href="https://sqlmodel.tiangolo.com"&gt;SQLModel&lt;/a&gt; for the Python SQL database interactions (ORM).&lt;/li&gt; 
   &lt;li&gt;🔍 &lt;a href="https://docs.pydantic.dev"&gt;Pydantic&lt;/a&gt;, used by FastAPI, for the data validation and settings management.&lt;/li&gt; 
   &lt;li&gt;💾 &lt;a href="https://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; as the SQL database.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🚀 &lt;a href="https://react.dev"&gt;React&lt;/a&gt; for the frontend. 
  &lt;ul&gt; 
   &lt;li&gt;💃 Using TypeScript, hooks, Vite, and other parts of a modern frontend stack.&lt;/li&gt; 
   &lt;li&gt;🎨 &lt;a href="https://chakra-ui.com"&gt;Chakra UI&lt;/a&gt; for the frontend components.&lt;/li&gt; 
   &lt;li&gt;🤖 An automatically generated frontend client.&lt;/li&gt; 
   &lt;li&gt;🧪 &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for End-to-End testing.&lt;/li&gt; 
   &lt;li&gt;🦇 Dark mode support.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🐋 &lt;a href="https://www.docker.com"&gt;Docker Compose&lt;/a&gt; for development and production.&lt;/li&gt; 
 &lt;li&gt;🔒 Secure password hashing by default.&lt;/li&gt; 
 &lt;li&gt;🔑 JWT (JSON Web Token) authentication.&lt;/li&gt; 
 &lt;li&gt;📫 Email based password recovery.&lt;/li&gt; 
 &lt;li&gt;✅ Tests with &lt;a href="https://pytest.org"&gt;Pytest&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;📞 &lt;a href="https://traefik.io"&gt;Traefik&lt;/a&gt; as a reverse proxy / load balancer.&lt;/li&gt; 
 &lt;li&gt;🚢 Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.&lt;/li&gt; 
 &lt;li&gt;🏭 CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dashboard Login&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/login.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Admin&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Create User&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-create.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Items&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-items.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - User Settings&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-user-settings.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Dark Mode&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-dark.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Interactive API Documentation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/docs.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How To Use It&lt;/h2&gt; 
&lt;p&gt;You can &lt;strong&gt;just fork or clone&lt;/strong&gt; this repository and use it as is.&lt;/p&gt; 
&lt;p&gt;✨ It just works. ✨&lt;/p&gt; 
&lt;h3&gt;How to Use a Private Repository&lt;/h3&gt; 
&lt;p&gt;If you want to have a private repository, GitHub won't allow you to simply fork it as it doesn't allow changing the visibility of forks.&lt;/p&gt; 
&lt;p&gt;But you can do the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new GitHub repo, for example &lt;code&gt;my-full-stack&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Clone this repository manually, set the name with the name of the project you want to use, for example &lt;code&gt;my-full-stack&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:fastapi/full-stack-fastapi-template.git my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter into the new directory:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the new origin to your new repository, copy it from the GitHub interface, for example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote set-url origin git@github.com:octocat/my-full-stack.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add this repo as another "remote" to allow you to get updates later:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote add upstream git@github.com:fastapi/full-stack-fastapi-template.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Push the code to your new repository:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update From the Original Template&lt;/h3&gt; 
&lt;p&gt;After cloning the repository, and after doing changes, you might want to get the latest changes from this original template.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you added the original repository as a remote, you can check it with:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote -v

origin    git@github.com:octocat/my-full-stack.git (fetch)
origin    git@github.com:octocat/my-full-stack.git (push)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (fetch)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (push)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull the latest changes without merging:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull --no-commit upstream master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will download the latest changes from this template without committing them, that way you can check everything is right before committing.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If there are conflicts, solve them in your editor.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once you are done, commit the changes:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git merge --continue
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure&lt;/h3&gt; 
&lt;p&gt;You can then update configs in the &lt;code&gt;.env&lt;/code&gt; files to customize your configurations.&lt;/p&gt; 
&lt;p&gt;Before deploying it, make sure you change at least the values for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FIRST_SUPERUSER_PASSWORD&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POSTGRES_PASSWORD&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can (and should) pass these as environment variables from secrets.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt; docs for more details.&lt;/p&gt; 
&lt;h3&gt;Generate Secret Keys&lt;/h3&gt; 
&lt;p&gt;Some environment variables in the &lt;code&gt;.env&lt;/code&gt; file have a default value of &lt;code&gt;changethis&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You have to change them with a secret key, to generate secret keys you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -c "import secrets; print(secrets.token_urlsafe(32))"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy the content and use that as password / secret key. And run that again to generate another secure key.&lt;/p&gt; 
&lt;h2&gt;How To Use It - Alternative With Copier&lt;/h2&gt; 
&lt;p&gt;This repository also supports generating a new project using &lt;a href="https://copier.readthedocs.io"&gt;Copier&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It will copy all the files, ask you configuration questions, and update the &lt;code&gt;.env&lt;/code&gt; files with your answers.&lt;/p&gt; 
&lt;h3&gt;Install Copier&lt;/h3&gt; 
&lt;p&gt;You can install Copier with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or better, if you have &lt;a href="https://pipx.pypa.io/"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt;, you can run it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have &lt;code&gt;pipx&lt;/code&gt;, installing copier is optional, you could run it directly.&lt;/p&gt; 
&lt;h3&gt;Generate a Project With Copier&lt;/h3&gt; 
&lt;p&gt;Decide a name for your new project's directory, you will use it below. For example, &lt;code&gt;my-awesome-project&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Go to the directory that will be the parent of your project, and run the command with your project's name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have &lt;code&gt;pipx&lt;/code&gt; and you didn't install &lt;code&gt;copier&lt;/code&gt;, you can run it directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx run copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; the &lt;code&gt;--trust&lt;/code&gt; option is necessary to be able to execute a &lt;a href="https://github.com/fastapi/full-stack-fastapi-template/raw/master/.copier/update_dotenv.py"&gt;post-creation script&lt;/a&gt; that updates your &lt;code&gt;.env&lt;/code&gt; files.&lt;/p&gt; 
&lt;h3&gt;Input Variables&lt;/h3&gt; 
&lt;p&gt;Copier will ask you for some data, you might want to have at hand before generating the project.&lt;/p&gt; 
&lt;p&gt;But don't worry, you can just update any of that in the &lt;code&gt;.env&lt;/code&gt; files afterwards.&lt;/p&gt; 
&lt;p&gt;The input variables, with their default values (some auto generated) are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;project_name&lt;/code&gt;: (default: &lt;code&gt;"FastAPI Project"&lt;/code&gt;) The name of the project, shown to API users (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stack_name&lt;/code&gt;: (default: &lt;code&gt;"fastapi-project"&lt;/code&gt;) The name of the stack used for Docker Compose labels and project name (no spaces, no periods) (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;secret_key&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The secret key for the project, used for security, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser&lt;/code&gt;: (default: &lt;code&gt;"admin@example.com"&lt;/code&gt;) The email of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_host&lt;/code&gt;: (default: "") The SMTP server host to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_user&lt;/code&gt;: (default: "") The SMTP server user to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_password&lt;/code&gt;: (default: "") The SMTP server password to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;emails_from_email&lt;/code&gt;: (default: &lt;code&gt;"info@example.com"&lt;/code&gt;) The email account to send emails from, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;postgres_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password for the PostgreSQL database, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sentry_dsn&lt;/code&gt;: (default: "") The DSN for Sentry, if you are using it, you can set it later in .env.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backend Development&lt;/h2&gt; 
&lt;p&gt;Backend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/backend/README.md"&gt;backend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frontend Development&lt;/h2&gt; 
&lt;p&gt;Frontend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/frontend/README.md"&gt;frontend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Deployment docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;General development docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/development.md"&gt;development.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This includes using Docker Compose, custom local domains, &lt;code&gt;.env&lt;/code&gt; configurations, etc.&lt;/p&gt; 
&lt;h2&gt;Release Notes&lt;/h2&gt; 
&lt;p&gt;Check the file &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/release-notes.md"&gt;release-notes.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Full Stack FastAPI Template is licensed under the terms of the MIT license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>plait-board/drawnix</title>
      <link>https://github.com/plait-board/drawnix</link>
      <description>&lt;p&gt;开源白板工具（SaaS），一体化白板，包含思维导图、流程图、自由画等。All in one open-source whiteboard tool with mind, flowchart, freehand and etc.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture style="width: 320px"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/plait-board/drawnix/blob/develop/apps/web/public/logo/logo_drawnix_h.svg?raw=true" /&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/plait-board/drawnix/blob/develop/apps/web/public/logo/logo_drawnix_h_dark.svg?raw=true" /&gt; 
  &lt;img src="https://github.com/plait-board/drawnix/raw/develop/apps/web/public/logo/logo_drawnix_h.svg?raw=true" width="360" alt="Drawnix logo and name" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt; 开源白板工具（SaaS），一体化白板，包含思维导图、流程图、自由画等 &lt;br /&gt; &lt;/h2&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;figure&gt; 
  &lt;a target="_blank" rel="noopener"&gt; &lt;img src="https://github.com/plait-board/drawnix/raw/develop/apps/web/public/product_showcase/case-2.png" alt="Product showcase" width="80%" /&gt; &lt;/a&gt; 
  &lt;figcaption&gt; 
   &lt;p align="center"&gt; All in one 白板，思维导图、流程图、自由画等 &lt;/p&gt; 
  &lt;/figcaption&gt; 
 &lt;/figure&gt; 
 &lt;a href="https://hellogithub.com/repository/plait-board/drawnix" target="_blank"&gt; 
  &lt;picture style="width: 250"&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=4dcea807fab7468a962c153b07ae4e4e&amp;amp;claim_uid=zmFSY5k8EuZri43&amp;amp;theme=neutral" /&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=4dcea807fab7468a962c153b07ae4e4e&amp;amp;claim_uid=zmFSY5k8EuZri43&amp;amp;theme=dark" /&gt; 
   &lt;img src="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=4dcea807fab7468a962c153b07ae4e4e&amp;amp;claim_uid=zmFSY5k8EuZri43&amp;amp;theme=neutral" alt="Featured｜HelloGitHub" style="width: 250px; height: 54px;" width="250" height="54" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/plait-board/drawnix/raw/develop/README_en.md"&gt;&lt;em&gt;English README&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;💯&amp;nbsp;免费 + 开源&lt;/li&gt; 
 &lt;li&gt;⚒️&amp;nbsp;思维导图、流程图&lt;/li&gt; 
 &lt;li&gt;🖌 画笔&lt;/li&gt; 
 &lt;li&gt;😀 插入图片&lt;/li&gt; 
 &lt;li&gt;🚀 基于插件机制&lt;/li&gt; 
 &lt;li&gt;🖼️ 📃 导出为 PNG, JSON(&lt;code&gt;.drawnix&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;💾 自动保存（浏览器缓存）&lt;/li&gt; 
 &lt;li&gt;⚡ 编辑特性：撤销、重做、复制、粘贴等&lt;/li&gt; 
 &lt;li&gt;🌌 无限画布：缩放、滚动&lt;/li&gt; 
 &lt;li&gt;🎨 主题模式&lt;/li&gt; 
 &lt;li&gt;📱 移动设备适配&lt;/li&gt; 
 &lt;li&gt;📈 支持 mermaid 语法转流程图&lt;/li&gt; 
 &lt;li&gt;✨ 支持 markdown 文本转思维导图（新支持 🔥🔥🔥）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;关于名称&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Drawnix&lt;/strong&gt;&lt;/em&gt; ，源于绘画( &lt;em&gt;&lt;strong&gt;Draw&lt;/strong&gt;&lt;/em&gt; )与凤凰( &lt;em&gt;&lt;strong&gt;Phoenix&lt;/strong&gt;&lt;/em&gt; )的灵感交织。&lt;/p&gt; 
&lt;p&gt;凤凰象征着生生不息的创造力，而 &lt;em&gt;Draw&lt;/em&gt; 代表着人类最原始的表达方式。在这里，每一次创作都是一次艺术的涅槃，每一笔绘画都是灵感的重生。&lt;/p&gt; 
&lt;p&gt;创意如同凤凰，浴火方能重生，而 &lt;em&gt;&lt;strong&gt;Drawnix&lt;/strong&gt;&lt;/em&gt; 要做技术与创意之火的守护者。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Draw Beyond, Rise Above.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;与 Plait 画图框架&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Drawnix&lt;/em&gt; 的定位是一个开箱即用、开源、免费的工具产品，它的底层是 &lt;em&gt;Plait&lt;/em&gt; 框架，&lt;em&gt;Plait&lt;/em&gt; 是我司开源的一款画图框架，代表着公司在知识库产品上的重要技术沉淀。&lt;/p&gt; 
&lt;p&gt;Drawnix 是插件架构，与前面说到开源工具比技术架构更复杂一些，但是插件架构也有优势，比如能够支持多种 UI 框架（&lt;em&gt;Angular、React&lt;/em&gt;），能够集成不同富文本框架（当前仅支持 &lt;em&gt;Slate&lt;/em&gt; 框架），在开发上可以很好的实现业务的分层，开发各种细粒度的可复用插件，可以扩展更多的画板的应用场景。&lt;/p&gt; 
&lt;h2&gt;仓储结构&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;drawnix/
├── apps/
│   ├── web                   # drawnix.com
│   │    └── index.html       # HTML
├── dist/                     # 构建产物
├── packages/
│   └── drawnix/              # 白板应用
│   └── react-board/          # 白板 React 视图层
│   └── react-text/           # 文本渲染模块
├── package.json
├── ...
└── README.md
└── README_en.md

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;应用&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://drawnix.com"&gt;&lt;em&gt;https://drawnix.com&lt;/em&gt;&lt;/a&gt; 是 &lt;em&gt;drawnix&lt;/em&gt; 的最小化应用。&lt;/p&gt; 
&lt;p&gt;近期会高频迭代 drawnix.com，直到发布 &lt;em&gt;Dawn（破晓）&lt;/em&gt; 版本。&lt;/p&gt; 
&lt;h2&gt;开发&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm install

npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;docker pull pubuzhixing/drawnix:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;依赖&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/worktile/plait"&gt;plait&lt;/a&gt; - 画图框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ianstormtaylor/slate"&gt;slate&lt;/a&gt; - 富文本编辑器框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/floating-ui/floating-ui"&gt;floating-ui&lt;/a&gt; - 一个超级好用的创建弹出层基础库&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;欢迎任何形式的贡献：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;提 Bug&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;贡献代码&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;支持&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;欢迎大家 star ⭐️⭐️⭐️ 支持。&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/plait-board/drawnix/raw/master/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jitsi/jitsi-meet</title>
      <link>https://github.com/jitsi/jitsi-meet</link>
      <description>&lt;p&gt;Jitsi Meet - Secure, Simple and Scalable Video Conferences that you use as a standalone app or embed in your web application.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align="center"&gt;Jitsi Meet&lt;/p&gt;&lt;/h1&gt; 
&lt;p&gt;Jitsi Meet is a set of Open Source projects which empower users to use and deploy video conferencing platforms with state-of-the-art video quality and features.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/readme-img1.png" width="900" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Amongst others here are the main features Jitsi Meet offers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for all current browsers&lt;/li&gt; 
 &lt;li&gt;Mobile applications&lt;/li&gt; 
 &lt;li&gt;Web and native SDKs for integration&lt;/li&gt; 
 &lt;li&gt;HD audio and video&lt;/li&gt; 
 &lt;li&gt;Content sharing&lt;/li&gt; 
 &lt;li&gt;Raise hand and reactions&lt;/li&gt; 
 &lt;li&gt;Chat with private conversations&lt;/li&gt; 
 &lt;li&gt;Polls&lt;/li&gt; 
 &lt;li&gt;Virtual backgrounds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And many more!&lt;/p&gt; 
&lt;h2&gt;Using Jitsi Meet&lt;/h2&gt; 
&lt;p&gt;Using Jitsi Meet is straightforward, as it's browser based. Head over to &lt;a href="https://meet.jit.si"&gt;meet.jit.si&lt;/a&gt; and give it a try. It's scalable and free to use. All you need is a Google, Facebook or GitHub account in order to start a meeting. All browsers are supported!&lt;/p&gt; 
&lt;p&gt;Using mobile? No problem, you can either use your mobile web browser or our fully-featured mobile apps:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Android&lt;/th&gt; 
   &lt;th align="center"&gt;Android (F-Droid)&lt;/th&gt; 
   &lt;th align="center"&gt;iOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.jitsi.meet"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/google-play-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://f-droid.org/packages/org.jitsi.meet/"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/f-droid-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://itunes.apple.com/us/app/jitsi-meet/id1165103905"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/appstore-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you are feeling adventurous and want to get an early scoop of the features as they are being developed you can also sign up for our open beta testing here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://play.google.com/apps/testing/org.jitsi.meet"&gt;Android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testflight.apple.com/join/isy6ja7S"&gt;iOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running your own instance&lt;/h2&gt; 
&lt;p&gt;If you'd like to run your own Jitsi Meet installation head over to the &lt;a href="https://jitsi.github.io/handbook/docs/devops-guide/"&gt;handbook&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;We provide Debian packages and a comprehensive Docker setup to make deployments as simple as possible. Advanced users also have the possibility of building all the components from source.&lt;/p&gt; 
&lt;p&gt;You can check the latest releases &lt;a href="https://jitsi.github.io/handbook/docs/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Jitsi as a Service&lt;/h2&gt; 
&lt;p&gt;If you like the branding capabilities of running your own instance but you'd like to avoid dealing with the complexity of monitoring, scaling and updates, JaaS might be for you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://jaas.8x8.vc"&gt;8x8 Jitsi as a Service (JaaS)&lt;/a&gt; is an enterprise-ready video meeting platform that allows developers, organizations and businesses to easily build and deploy video solutions. With Jitsi as a Service we now give you all the power of Jitsi running on our global platform so you can focus on building secure and branded video experiences.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the Jitsi Meet documentation is available in &lt;a href="https://jitsi.github.io/handbook/"&gt;the handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For a comprehensive description of all Jitsi Meet's security aspects, please check &lt;a href="https://jitsi.org/security"&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a detailed description of Jitsi Meet's End-to-End Encryption (E2EE) implementation, please check &lt;a href="https://jitsi.org/e2ee-whitepaper/"&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Jitsi Meet, see &lt;a href="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are looking to contribute to Jitsi Meet, first of all, thank you! Please see our &lt;a href="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;footer&gt; 
 &lt;p align="center" style="font-size: smaller;"&gt; Built with ❤️ by the Jitsi team at &lt;a href="https://8x8.com" target="_blank"&gt;8x8&lt;/a&gt; and our community. &lt;/p&gt; 
&lt;/footer&gt;</description>
    </item>
    
    <item>
      <title>bytedance/UI-TARS-desktop</title>
      <link>https://github.com/bytedance/UI-TARS-desktop</link>
      <description>&lt;p&gt;The Open-sourced Multimodal AI Agent Stack connecting Cutting-edge AI Models and Agent Infra.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;img alt="Agent TARS Banner" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/images/tars.png" /&gt; 
&lt;/picture&gt; 
&lt;br /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/README.zh-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/13584"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13584" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;TARS&lt;sup&gt;*&lt;/sup&gt;&lt;/b&gt; is a Multimodal AI Agent stack, currently shipping two projects: &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt;&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools. &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;UI-TARS Desktop&lt;/b&gt; is a desktop application that provides a native GUI Agent based on the &lt;a href="https://github.com/bytedance/UI-TARS" target="_blank"&gt;UI-TARS&lt;/a&gt; model. &lt;br /&gt; &lt;br /&gt; It primarily ships a &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#get-model-and-run-local-operator" target="_blank"&gt;local&lt;/a&gt; and &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#run-remote-operator" target="_blank"&gt;remote&lt;/a&gt; computer as well as browser operators. &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#news"&gt;News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#core-features"&gt;Core Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS Desktop&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase-1"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start-1"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#citation"&gt;Citation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-25]&lt;/strong&gt; We released a Agent TARS Beta and Agent TARS CLI - &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html"&gt;Introducing Agent TARS Beta&lt;/a&gt;, a multimodal AI agent that aims to explore a work form that is closer to human-like task completion through rich multimodal capabilities (such as GUI Agent, Vision) and seamless integration with various real-world tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-12]&lt;/strong&gt; - 🎁 We are thrilled to announce the release of UI-TARS Desktop v0.2.0! This update introduces two powerful new features: &lt;strong&gt;Remote Computer Operator&lt;/strong&gt; and &lt;strong&gt;Remote Browser Operator&lt;/strong&gt;—both completely free. No configuration required: simply click to remotely control any computer or browser, and experience a new level of convenience and intelligence.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-04-17]&lt;/strong&gt; - 🎉 We're thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports &lt;a href="https://seed-tars.com/1.5"&gt;the advanced UI-TARS-1.5 model&lt;/a&gt; for improved performance and precise control.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-02-20]&lt;/strong&gt; - 📦 Introduced &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/sdk.md"&gt;UI TARS SDK&lt;/a&gt;, is a powerful cross-platform toolkit for building GUI automation agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-01-23]&lt;/strong&gt; - 🚀 We updated the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/deployment.md#cloud-deployment"&gt;Cloud Deployment&lt;/a&gt;&lt;/strong&gt; section in the 中文版: &lt;a href="https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb"&gt;GUI模型部署教程&lt;/a&gt; with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Agent TARS&lt;/h2&gt; 
&lt;p&gt; &lt;a href="https://npmjs.com/package/@agent-tars/cli?activeTab=readme"&gt;&lt;img src="https://img.shields.io/npm/v/@agent-tars/cli?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=3B82F6&amp;amp;logo=npm&amp;amp;logoColor=white" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/@agent-tars/cli?minimal=true"&gt;&lt;img src="https://img.shields.io/npm/dm/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=0EA5E9&amp;amp;logo=npm&amp;amp;logoColor=white" alt="downloads" /&gt;&lt;/a&gt; &lt;a href="https://nodejs.org/en/about/previous-releases"&gt;&lt;img src="https://img.shields.io/node/v/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=06B6D4&amp;amp;logo=node.js&amp;amp;logoColor=white" alt="node version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HnKcSBgTVx"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/agent_tars"&gt;&lt;img src="https://img.shields.io/badge/Twitter-Follow%20%40agent__tars-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white" alt="Official Twitter" /&gt;&lt;/a&gt; &lt;a href="https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=279h3365-b0fa-407f-89f3-0f96f36cd4d8"&gt;&lt;img src="https://img.shields.io/badge/飞书群-加入交流群-00D4AA?style=for-the-badge&amp;amp;logo=lark&amp;amp;logoColor=white" alt="飞书交流群" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/UI-TARS-desktop"&gt;&lt;img src="https://img.shields.io/badge/DeepWiki-Ask%20AI-8B5CF6?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools.&lt;/p&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Please help me book the earliest flight from San Jose to New York on September 1st and the last return flight on September 6th on Priceline
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8"&gt;https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;Booking Hotel&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;Generate Chart with extra MCP Servers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/a9fd72d0-01bb-4233-aa27-ca95194bbce9" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;I am in Los Angeles from September 1st to September 6th, with a budget of $5,000. Please help me book a Ritz-Carlton hotel closest to the airport on booking.com and compile a transportation guide for me&lt;/i&gt; &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;Draw me a chart of Hangzhou's weather for one month&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For more use cases, please check out &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt;#842&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🖱️ &lt;strong&gt;One-Click Out-of-the-box CLI&lt;/strong&gt; - Supports both &lt;strong&gt;headful&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/basic/web-ui.html"&gt;Web UI&lt;/a&gt; and &lt;strong&gt;headless&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/advanced/server.html"&gt;server&lt;/a&gt;) &lt;a href="https://agent-tars.com/guide/basic/cli.html"&gt;execution&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Hybrid Browser Agent&lt;/strong&gt; - Control browsers using &lt;a href="https://agent-tars.com/guide/basic/browser.html#visual-grounding"&gt;GUI Agent&lt;/a&gt;, &lt;a href="https://agent-tars.com/guide/basic/browser.html#dom"&gt;DOM&lt;/a&gt;, or a hybrid strategy.&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Event Stream&lt;/strong&gt; - Protocol-driven Event Stream drives &lt;a href="https://agent-tars.com/beta#context-engineering"&gt;Context Engineering&lt;/a&gt; and &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html#easy-to-build-applications"&gt;Agent UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🧰 &lt;strong&gt;MCP Integration&lt;/strong&gt; - The kernel is built on MCP and also supports mounting &lt;a href="https://agent-tars.com/guide/basic/mcp.html"&gt;MCP Servers&lt;/a&gt; to connect to real-world tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;img alt="Agent TARS CLI" src="https://agent-tars.com/agent-tars-cli.png" /&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Luanch with `npx`.
npx @agent-tars/cli@latest

# Install globally, required Node.js &amp;gt;= 22
npm install @agent-tars/cli@latest -g

# Run with your preferred model provider
agent-tars --provider volcengine --model doubao-1-5-thinking-vision-pro-250428 --apiKey your-api-key
agent-tars --provider anthropic --model claude-3-7-sonnet-latest --apiKey your-api-key
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit the comprehensive &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt;Quick Start&lt;/a&gt; guide for detailed setup instructions.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌟 &lt;strong&gt;Explore Agent TARS Universe&lt;/strong&gt; 🌟&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="20%" align="center"&gt;Category&lt;/th&gt; 
   &lt;th width="30%" align="center"&gt;Resource Link&lt;/th&gt; 
   &lt;th width="50%" align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🏠 &lt;strong&gt;Central Hub&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com"&gt; &lt;img src="https://img.shields.io/badge/Visit-Website-4F46E5?style=for-the-badge&amp;amp;logo=globe&amp;amp;logoColor=white" alt="Website" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Your gateway to Agent TARS ecosystem&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;📚 &lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt; &lt;img src="https://img.shields.io/badge/Get-Started-06B6D4?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Quick Start" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Zero to hero in 5 minutes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🚀 &lt;strong&gt;What's New&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/beta"&gt; &lt;img src="https://img.shields.io/badge/Read-Blog-F59E0B?style=for-the-badge&amp;amp;logo=rss&amp;amp;logoColor=white" alt="Blog" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Discover cutting-edge features &amp;amp; vision&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🛠️ &lt;strong&gt;Developer Zone&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/introduction.html"&gt; &lt;img src="https://img.shields.io/badge/View-Docs-10B981?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Docs" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Master every command &amp;amp; features&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🎯 &lt;strong&gt;Showcase&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt; &lt;img src="https://img.shields.io/badge/View-Examples-8B5CF6?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Examples" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;View use cases built by the official and community&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🔧 &lt;strong&gt;Reference&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/api/"&gt; &lt;img src="https://img.shields.io/badge/API-Reference-EF4444?style=for-the-badge&amp;amp;logo=book&amp;amp;logoColor=white" alt="API" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Complete technical reference&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;UI-TARS Desktop&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img alt="UI-TARS" width="260" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/ui-tars/resources/icon.png" /&gt; &lt;/p&gt; 
&lt;p&gt;UI-TARS Desktop is a native GUI agent driven by &lt;a href="https://github.com/bytedance/UI-TARS"&gt;UI-TARS&lt;/a&gt; and Seed-1.5-VL/1.6 series models, available on your local computer and remote VM sandbox on cloud.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &amp;nbsp;&amp;nbsp; 📑 &lt;a href="https://arxiv.org/abs/2501.12326"&gt;Paper&lt;/a&gt; &amp;nbsp;&amp;nbsp; | 🤗 &lt;a href="https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B"&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🫨 &lt;a href="https://discord.gg/pTXwYVjfcs"&gt;Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🤖 &lt;a href="https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640"&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt; 🖥️ Desktop Application &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; 👓 &lt;a href="https://github.com/web-infra-dev/midscene"&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;!-- // FIXME: Choose only two demo, one local computer and one remote computer showcase. --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Instruction&lt;/th&gt; 
   &lt;th align="center"&gt;Local Operator&lt;/th&gt; 
   &lt;th align="center"&gt;Remote Operator&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting.&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/01e49b69-7070-46c8-b3e3-2aaaaec71800" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/072fb72d-7394-4bfa-95f5-4736e29f7e58" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤖 Natural language control powered by Vision-Language Model&lt;/li&gt; 
 &lt;li&gt;🖥️ Screenshot and visual recognition support&lt;/li&gt; 
 &lt;li&gt;🎯 Precise mouse and keyboard control&lt;/li&gt; 
 &lt;li&gt;💻 Cross-platform support (Windows/MacOS/Browser)&lt;/li&gt; 
 &lt;li&gt;🔄 Real-time feedback and status display&lt;/li&gt; 
 &lt;li&gt;🔐 Private and secure - fully local processing&lt;/li&gt; 
 &lt;li&gt;🛠️ Effortless setup and intuitive remote operators&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/quick-start.md"&gt;Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find our paper and code useful in your research, please consider giving a star &lt;span&gt;⭐&lt;/span&gt; and citation &lt;span&gt;📝&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-BibTeX"&gt;@article{qin2025ui,
  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},
  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},
  journal={arXiv preprint arXiv:2501.12326},
  year={2025}
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>umami-software/umami</title>
      <link>https://github.com/umami-software/umami</link>
      <description>&lt;p&gt;Umami is a modern, privacy-focused alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://content.umami.is/website/images/umami-logo.png" alt="Umami Logo" width="100" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Umami&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;i&gt;Umami is a simple, fast, privacy-focused alternative to Google Analytics.&lt;/i&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami/releases"&gt; &lt;img src="https://img.shields.io/github/release/umami-software/umami.svg?sanitize=true" alt="GitHub Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/raw/master/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/umami-software/umami.svg?sanitize=true" alt="MIT License" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/actions"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/umami-software/umami/ci.yml" alt="Build Status" /&gt; &lt;/a&gt; &lt;a href="https://analytics.umami.is/share/LGazGOecbDtaIwDr/umami.is" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Try%20Demo%20Now-Click%20Here-brightgreen" alt="Umami Demo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href="https://umami.is/docs/"&gt;umami.is/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠 Installing from Source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js version 18.18 or newer&lt;/li&gt; 
 &lt;li&gt;A database. Umami supports &lt;a href="https://www.mariadb.org/"&gt;MariaDB&lt;/a&gt; (minimum v10.5), &lt;a href="https://www.mysql.com/"&gt;MySQL&lt;/a&gt; (minimum v8.0) and &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; (minimum v12.14) databases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the Source Code and Install Packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/umami-software/umami.git
cd umami
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure Umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DATABASE_URL=connection-url
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection URL format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;postgresql://username:mypassword@localhost:5432/mydb
mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;The build step will create tables in your database if you are installing for the first time. It will also create a login user with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Start the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;By default, this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/"&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href="https://nextjs.org/docs/api-reference/cli#production"&gt;port&lt;/a&gt; to serve the application directly.&lt;/em&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐳 Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the Umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔄 Getting Updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update the Docker image, simply pull the new images and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose pull
docker compose up --force-recreate -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛟 Support&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami"&gt; &lt;img src="https://img.shields.io/badge/GitHub--blue?style=social&amp;amp;logo=github" alt="GitHub" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/umami_software"&gt; &lt;img src="https://img.shields.io/badge/Twitter--blue?style=social&amp;amp;logo=twitter" alt="Twitter" /&gt; &lt;/a&gt; &lt;a href="https://linkedin.com/company/umami-software"&gt; &lt;img src="https://img.shields.io/badge/LinkedIn--blue?style=social&amp;amp;logo=linkedin" alt="LinkedIn" /&gt; &lt;/a&gt; &lt;a href="https://umami.is/discord"&gt; &lt;img src="https://img.shields.io/badge/Discord--blue?style=social&amp;amp;logo=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mendableai/firecrawl</title>
      <link>https://github.com/mendableai/firecrawl</link>
      <description>&lt;p&gt;🔥 Turn entire websites into LLM-ready markdown or structured data. Scrape, crawl and extract with a single API.&lt;/p&gt;&lt;hr&gt;&lt;h3 align="center"&gt; &lt;a name="readme-top"&gt;&lt;/a&gt; &lt;img src="https://raw.githubusercontent.com/mendableai/firecrawl/main/img/firecrawl_logo.png" height="200" /&gt; &lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/mendableai/firecrawl/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/mendableai/firecrawl" alt="License" /&gt; &lt;/a&gt; 
 &lt;a href="https://pepy.tech/project/firecrawl-py"&gt; &lt;img src="https://static.pepy.tech/badge/firecrawl-py" alt="Downloads" /&gt; &lt;/a&gt; 
 &lt;a href="https://GitHub.com/mendableai/firecrawl/graphs/contributors"&gt; &lt;img src="https://img.shields.io/github/contributors/mendableai/firecrawl.svg?sanitize=true" alt="GitHub Contributors" /&gt; &lt;/a&gt; 
 &lt;a href="https://firecrawl.dev"&gt; &lt;img src="https://img.shields.io/badge/Visit-firecrawl.dev-orange" alt="Visit firecrawl.dev" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;p align="center"&gt; &lt;a href="https://twitter.com/firecrawl_dev"&gt; &lt;img src="https://img.shields.io/badge/Follow%20on%20X-000000?style=for-the-badge&amp;amp;logo=x&amp;amp;logoColor=white" alt="Follow on X" /&gt; &lt;/a&gt; &lt;a href="https://www.linkedin.com/company/104100957"&gt; &lt;img src="https://img.shields.io/badge/Follow%20on%20LinkedIn-0077B5?style=for-the-badge&amp;amp;logo=linkedin&amp;amp;logoColor=white" alt="Follow on LinkedIn" /&gt; &lt;/a&gt; &lt;a href="https://discord.com/invite/gSmWdAkdwd"&gt; &lt;img src="https://img.shields.io/badge/Join%20our%20Discord-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Join our Discord" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;🔥 Firecrawl&lt;/h1&gt; 
&lt;p&gt;Empower your AI apps with clean data from any website. Featuring advanced scraping, crawling, and data extraction capabilities.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;This repository is in development, and we’re still integrating custom modules into the mono repo. It's not fully ready for self-hosted deployment yet, but you can run it locally.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;What is Firecrawl?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://firecrawl.dev?ref=github"&gt;Firecrawl&lt;/a&gt; is an API service that takes a URL, crawls it, and converts it into clean markdown or structured data. We crawl all accessible subpages and give you clean data for each. No sitemap required. Check out our &lt;a href="https://docs.firecrawl.dev"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Pst. hey, you, join our stargazers :)&lt;/em&gt;&lt;/p&gt; 
&lt;a href="https://github.com/mendableai/firecrawl"&gt; &lt;img src="https://img.shields.io/github/stars/mendableai/firecrawl.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000" alt="GitHub stars" /&gt; &lt;/a&gt; 
&lt;h2&gt;How to use it?&lt;/h2&gt; 
&lt;p&gt;We provide an easy to use API with our hosted version. You can find the playground and documentation &lt;a href="https://firecrawl.dev/playground"&gt;here&lt;/a&gt;. You can also self host the backend if you'd like.&lt;/p&gt; 
&lt;p&gt;Check out the following resources to get started:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;API&lt;/strong&gt;: &lt;a href="https://docs.firecrawl.dev/api-reference/introduction"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;SDKs&lt;/strong&gt;: &lt;a href="https://docs.firecrawl.dev/sdks/python"&gt;Python&lt;/a&gt;, &lt;a href="https://docs.firecrawl.dev/sdks/node"&gt;Node&lt;/a&gt;, &lt;a href="https://docs.firecrawl.dev/sdks/go"&gt;Go&lt;/a&gt;, &lt;a href="https://docs.firecrawl.dev/sdks/rust"&gt;Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;LLM Frameworks&lt;/strong&gt;: &lt;a href="https://python.langchain.com/docs/integrations/document_loaders/firecrawl/"&gt;Langchain (python)&lt;/a&gt;, &lt;a href="https://js.langchain.com/docs/integrations/document_loaders/web_loaders/firecrawl"&gt;Langchain (js)&lt;/a&gt;, &lt;a href="https://docs.llamaindex.ai/en/latest/examples/data_connectors/WebPageDemo/#using-firecrawl-reader"&gt;Llama Index&lt;/a&gt;, &lt;a href="https://docs.crewai.com/"&gt;Crew.ai&lt;/a&gt;, &lt;a href="https://composio.dev/tools/firecrawl/all"&gt;Composio&lt;/a&gt;, &lt;a href="https://docs.praison.ai/firecrawl/"&gt;PraisonAI&lt;/a&gt;, &lt;a href="https://superinterface.ai/docs/assistants/functions/firecrawl"&gt;Superinterface&lt;/a&gt;, &lt;a href="https://docs.vectorize.io/integrations/source-connectors/firecrawl"&gt;Vectorize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;Low-code Frameworks&lt;/strong&gt;: &lt;a href="https://dify.ai/blog/dify-ai-blog-integrated-with-firecrawl"&gt;Dify&lt;/a&gt;, &lt;a href="https://docs.langflow.org/"&gt;Langflow&lt;/a&gt;, &lt;a href="https://docs.flowiseai.com/integrations/langchain/document-loaders/firecrawl"&gt;Flowise AI&lt;/a&gt;, &lt;a href="https://docs.getcargo.io/integration/firecrawl"&gt;Cargo&lt;/a&gt;, &lt;a href="https://pipedream.com/apps/firecrawl/"&gt;Pipedream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;strong&gt;Others&lt;/strong&gt;: &lt;a href="https://zapier.com/apps/firecrawl/integrations"&gt;Zapier&lt;/a&gt;, &lt;a href="https://www.pabbly.com/connect/integrations/firecrawl/"&gt;Pabbly Connect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Want an SDK or Integration? Let us know by opening an issue.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To run locally, refer to guide &lt;a href="https://github.com/mendableai/firecrawl/raw/main/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;API Key&lt;/h3&gt; 
&lt;p&gt;To use the API, you need to sign up on &lt;a href="https://firecrawl.dev"&gt;Firecrawl&lt;/a&gt; and get an API key.&lt;/p&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/#scraping"&gt;&lt;strong&gt;Scrape&lt;/strong&gt;&lt;/a&gt;: scrapes a URL and get its content in LLM-ready format (markdown, structured data via &lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/#llm-extraction-beta"&gt;LLM Extract&lt;/a&gt;, screenshot, html)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/#crawling"&gt;&lt;strong&gt;Crawl&lt;/strong&gt;&lt;/a&gt;: scrapes all the URLs of a web page and return content in LLM-ready format&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/#map"&gt;&lt;strong&gt;Map&lt;/strong&gt;&lt;/a&gt;: input a website and get all the website urls - extremely fast&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/#search"&gt;&lt;strong&gt;Search&lt;/strong&gt;&lt;/a&gt;: search the web and get full content from results&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/#extract"&gt;&lt;strong&gt;Extract&lt;/strong&gt;&lt;/a&gt;: get structured data from single page, multiple pages or entire websites with AI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Powerful Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;LLM-ready formats&lt;/strong&gt;: markdown, structured data, screenshot, HTML, links, metadata&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;The hard stuff&lt;/strong&gt;: proxies, anti-bot mechanisms, dynamic content (js-rendered), output parsing, orchestration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Customizability&lt;/strong&gt;: exclude tags, crawl behind auth walls with custom headers, max crawl depth, etc...&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Media parsing&lt;/strong&gt;: pdfs, docx, images&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reliability first&lt;/strong&gt;: designed to get the data you need - no matter how hard it is&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Actions&lt;/strong&gt;: click, scroll, input, wait and more before extracting data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Batching (New)&lt;/strong&gt;: scrape thousands of URLs at the same time with a new async endpoint.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find all of Firecrawl's capabilities and how to use them in our &lt;a href="https://docs.firecrawl.dev"&gt;documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Crawling&lt;/h3&gt; 
&lt;p&gt;Used to crawl a URL and all accessible subpages. This submits a crawl job and returns a job ID to check the status of the crawl.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/crawl \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer fc-YOUR_API_KEY' \
    -d '{
      "url": "https://docs.firecrawl.dev",
      "limit": 10,
      "scrapeOptions": {
        "formats": ["markdown", "html"]
      }
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Returns a crawl job id and the url to check the status of the crawl.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "success": true,
  "id": "123-456-789",
  "url": "https://api.firecrawl.dev/v1/crawl/123-456-789"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Check Crawl Job&lt;/h3&gt; 
&lt;p&gt;Used to check the status of a crawl job and get its result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X GET https://api.firecrawl.dev/v1/crawl/123-456-789 \
  -H 'Content-Type: application/json' \
  -H 'Authorization: Bearer YOUR_API_KEY'
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "status": "completed",
  "total": 36,
  "creditsUsed": 36,
  "expiresAt": "2024-00-00T00:00:00.000Z",
  "data": [
    {
      "markdown": "[Firecrawl Docs home page![light logo](https://mintlify.s3-us-west-1.amazonaws.com/firecrawl/logo/light.svg)!...",
      "html": "&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html lang=\"en\" class=\"js-focus-visible lg:[--scroll-mt:9.5rem]\" data-js-focus-visible=\"\"&amp;gt;...",
      "metadata": {
        "title": "Build a 'Chat with website' using Groq Llama 3 | Firecrawl",
        "language": "en",
        "sourceURL": "https://docs.firecrawl.dev/learn/rag-llama3",
        "description": "Learn how to use Firecrawl, Groq Llama 3, and Langchain to build a 'Chat with your website' bot.",
        "ogLocaleAlternate": [],
        "statusCode": 200
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scraping&lt;/h3&gt; 
&lt;p&gt;Used to scrape a URL and get its content in the specified formats.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
      "url": "https://docs.firecrawl.dev",
      "formats" : ["markdown", "html"]
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "success": true,
  "data": {
    "markdown": "Launch Week I is here! [See our Day 2 Release 🚀](https://www.firecrawl.dev/blog/launch-week-i-day-2-doubled-rate-limits)[💥 Get 2 months free...",
    "html": "&amp;lt;!DOCTYPE html&amp;gt;&amp;lt;html lang=\"en\" class=\"light\" style=\"color-scheme: light;\"&amp;gt;&amp;lt;body class=\"__variable_36bd41 __variable_d7dc5d font-inter ...",
    "metadata": {
      "title": "Home - Firecrawl",
      "description": "Firecrawl crawls and converts any website into clean markdown.",
      "language": "en",
      "keywords": "Firecrawl,Markdown,Data,Mendable,Langchain",
      "robots": "follow, index",
      "ogTitle": "Firecrawl",
      "ogDescription": "Turn any website into LLM-ready data.",
      "ogUrl": "https://www.firecrawl.dev/",
      "ogImage": "https://www.firecrawl.dev/og.png?123",
      "ogLocaleAlternate": [],
      "ogSiteName": "Firecrawl",
      "sourceURL": "https://firecrawl.dev",
      "statusCode": 200
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Map&lt;/h3&gt; 
&lt;p&gt;Used to map a URL and get urls of the website. This returns most links present on the website.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/map \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
      "url": "https://firecrawl.dev"
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Response:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "status": "success",
  "links": [
    "https://firecrawl.dev",
    "https://www.firecrawl.dev/pricing",
    "https://www.firecrawl.dev/blog",
    "https://www.firecrawl.dev/playground",
    "https://www.firecrawl.dev/smart-crawl",
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Map with search&lt;/h4&gt; 
&lt;p&gt;Map with &lt;code&gt;search&lt;/code&gt; param allows you to search for specific urls inside a website.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/map \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
      "url": "https://firecrawl.dev",
      "search": "docs"
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Response will be an ordered list from the most relevant to the least relevant.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "status": "success",
  "links": [
    "https://docs.firecrawl.dev",
    "https://docs.firecrawl.dev/sdks/python",
    "https://docs.firecrawl.dev/learn/rag-llama3",
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Search&lt;/h3&gt; 
&lt;p&gt;Search the web and get full content from results&lt;/p&gt; 
&lt;p&gt;Firecrawl’s search API allows you to perform web searches and optionally scrape the search results in one operation.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Choose specific output formats (markdown, HTML, links, screenshots)&lt;/li&gt; 
 &lt;li&gt;Search the web with customizable parameters (language, country, etc.)&lt;/li&gt; 
 &lt;li&gt;Optionally retrieve content from search results in various formats&lt;/li&gt; 
 &lt;li&gt;Control the number of results and set timeouts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/search \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer fc-YOUR_API_KEY" \
  -d '{
    "query": "what is firecrawl?",
    "limit": 5
  }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Response&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "success": true,
  "data": [
    {
      "url": "https://firecrawl.dev",
      "title": "Firecrawl | Home Page",
      "description": "Turn websites into LLM-ready data with Firecrawl"
    },
    {
      "url": "https://docs.firecrawl.dev",
      "title": "Documentation | Firecrawl",
      "description": "Learn how to use Firecrawl in your own applications"
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;With content scraping&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/search \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer fc-YOUR_API_KEY" \
  -d '{
    "query": "what is firecrawl?",
    "limit": 5,
    "scrapeOptions": {
      "formats": ["markdown", "links"]
    }
  }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extract (Beta)&lt;/h3&gt; 
&lt;p&gt;Get structured data from entire websites with a prompt and/or a schema.&lt;/p&gt; 
&lt;p&gt;You can extract structured data from one or multiple URLs, including wildcards:&lt;/p&gt; 
&lt;p&gt;Single Page: Example: &lt;a href="https://firecrawl.dev/some-page"&gt;https://firecrawl.dev/some-page&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Multiple Pages / Full Domain Example: &lt;a href="https://firecrawl.dev/"&gt;https://firecrawl.dev/&lt;/a&gt;*&lt;/p&gt; 
&lt;p&gt;When you use /*, Firecrawl will automatically crawl and parse all URLs it can discover in that domain, then extract the requested data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/extract \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
      "urls": [
        "https://firecrawl.dev/*", 
        "https://docs.firecrawl.dev/", 
        "https://www.ycombinator.com/companies"
      ],
      "prompt": "Extract the company mission, whether it is open source, and whether it is in Y Combinator from the page.",
      "schema": {
        "type": "object",
        "properties": {
          "company_mission": {
            "type": "string"
          },
          "is_open_source": {
            "type": "boolean"
          },
          "is_in_yc": {
            "type": "boolean"
          }
        },
        "required": [
          "company_mission",
          "is_open_source",
          "is_in_yc"
        ]
      }
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "success": true,
  "id": "44aa536d-f1cb-4706-ab87-ed0386685740",
  "urlTrace": []
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are using the sdks, it will auto pull the response for you:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "success": true,
  "data": {
    "company_mission": "Firecrawl is the easiest way to extract data from the web. Developers use us to reliably convert URLs into LLM-ready markdown or structured data with a single API call.",
    "supports_sso": false,
    "is_open_source": true,
    "is_in_yc": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LLM Extraction (Beta)&lt;/h3&gt; 
&lt;p&gt;Used to extract structured data from scraped pages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
      "url": "https://www.mendable.ai/",
      "formats": ["json"],
      "jsonOptions": {
        "schema": {
          "type": "object",
          "properties": {
            "company_mission": {
                      "type": "string"
            },
            "supports_sso": {
                      "type": "boolean"
            },
            "is_open_source": {
                      "type": "boolean"
            },
            "is_in_yc": {
                      "type": "boolean"
            }
          },
          "required": [
            "company_mission",
            "supports_sso",
            "is_open_source",
            "is_in_yc"
          ]
        }
      }
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "success": true,
  "data": {
    "content": "Raw Content",
    "metadata": {
      "title": "Mendable",
      "description": "Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide",
      "robots": "follow, index",
      "ogTitle": "Mendable",
      "ogDescription": "Mendable allows you to easily build AI chat applications. Ingest, customize, then deploy with one line of code anywhere you want. Brought to you by SideGuide",
      "ogUrl": "https://mendable.ai/",
      "ogImage": "https://mendable.ai/mendable_new_og1.png",
      "ogLocaleAlternate": [],
      "ogSiteName": "Mendable",
      "sourceURL": "https://mendable.ai/"
    },
    "json": {
      "company_mission": "Train a secure AI on your technical resources that answers customer and employee questions so your team doesn't have to",
      "supports_sso": true,
      "is_open_source": false,
      "is_in_yc": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extracting without a schema (New)&lt;/h3&gt; 
&lt;p&gt;You can now extract without a schema by just passing a &lt;code&gt;prompt&lt;/code&gt; to the endpoint. The llm chooses the structure of the data.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
      "url": "https://docs.firecrawl.dev/",
      "formats": ["json"],
      "jsonOptions": {
        "prompt": "Extract the company mission from the page."
      }
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Interacting with the page with Actions (Cloud-only)&lt;/h3&gt; 
&lt;p&gt;Firecrawl allows you to perform various actions on a web page before scraping its content. This is particularly useful for interacting with dynamic content, navigating through pages, or accessing content that requires user interaction.&lt;/p&gt; 
&lt;p&gt;Here is an example of how to use actions to navigate to google.com, search for Firecrawl, click on the first result, and take a screenshot.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/scrape \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
        "url": "google.com",
        "formats": ["markdown"],
        "actions": [
            {"type": "wait", "milliseconds": 2000},
            {"type": "click", "selector": "textarea[title=\"Search\"]"},
            {"type": "wait", "milliseconds": 2000},
            {"type": "write", "text": "firecrawl"},
            {"type": "wait", "milliseconds": 2000},
            {"type": "press", "key": "ENTER"},
            {"type": "wait", "milliseconds": 3000},
            {"type": "click", "selector": "h3"},
            {"type": "wait", "milliseconds": 3000},
            {"type": "screenshot"}
        ]
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Batch Scraping Multiple URLs (New)&lt;/h3&gt; 
&lt;p&gt;You can now batch scrape multiple URLs at the same time. It is very similar to how the /crawl endpoint works. It submits a batch scrape job and returns a job ID to check the status of the batch scrape.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -X POST https://api.firecrawl.dev/v1/batch/scrape \
    -H 'Content-Type: application/json' \
    -H 'Authorization: Bearer YOUR_API_KEY' \
    -d '{
      "urls": ["https://docs.firecrawl.dev", "https://docs.firecrawl.dev/sdks/overview"],
      "formats" : ["markdown", "html"]
    }'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using Python SDK&lt;/h2&gt; 
&lt;h3&gt;Installing Python SDK&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install firecrawl-py
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Crawl a website&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from firecrawl.firecrawl import FirecrawlApp
from firecrawl.firecrawl import ScrapeOptions

app = FirecrawlApp(api_key="fc-YOUR_API_KEY")

# Scrape a website:
scrape_status = app.scrape_url(
  'https://firecrawl.dev', 
  formats=["markdown", "html"]
)
print(scrape_status)

# Crawl a website:
crawl_status = app.crawl_url(
  'https://firecrawl.dev',
  limit=100,
  scrape_options=ScrapeOptions(
    formats=["markdown", "html"],),
  poll_interval=30
)
print(crawl_status)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extracting structured data from a URL&lt;/h3&gt; 
&lt;p&gt;With LLM extraction, you can easily extract structured data from any URL. We support pydantic schemas to make it easier for you too. Here is how you to use it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;class ArticleSchema(BaseModel):
    title: str
    points: int 
    by: str
    commentsURL: str

class TopArticlesSchema(BaseModel):
    top: List[ArticleSchema] = Field(..., description="Top 5 stories")

json_config = JsonConfig(schema=TopArticlesSchema.model_json_schema())

llm_extraction_result = app.scrape_url('https://news.ycombinator.com', formats=["json"], json=json_config)

print(llm_extraction_result.json)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Using the Node SDK&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;To install the Firecrawl Node SDK, you can use npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install @mendable/firecrawl-js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get an API key from &lt;a href="https://firecrawl.dev"&gt;firecrawl.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Set the API key as an environment variable named &lt;code&gt;FIRECRAWL_API_KEY&lt;/code&gt; or pass it as a parameter to the &lt;code&gt;FirecrawlApp&lt;/code&gt; class.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import FirecrawlApp, { CrawlParams, CrawlStatusResponse } from '@mendable/firecrawl-js';

const app = new FirecrawlApp({apiKey: "fc-YOUR_API_KEY"});

// Scrape a website
const scrapeResponse = await app.scrapeUrl('https://firecrawl.dev', {
  formats: ['markdown', 'html'],
});

if (scrapeResponse) {
  console.log(scrapeResponse)
}

// Crawl a website
const crawlResponse = await app.crawlUrl('https://firecrawl.dev', {
  limit: 100,
  scrapeOptions: {
    formats: ['markdown', 'html'],
  }
} satisfies CrawlParams, true, 30) satisfies CrawlStatusResponse;

if (crawlResponse) {
  console.log(crawlResponse)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extracting structured data from a URL&lt;/h3&gt; 
&lt;p&gt;With LLM extraction, you can easily extract structured data from any URL. We support zod schema to make it easier for you too. Here is how to use it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import FirecrawlApp from "@mendable/firecrawl-js";
import { z } from "zod";

const app = new FirecrawlApp({
  apiKey: "fc-YOUR_API_KEY"
});

// Define schema to extract contents into
const schema = z.object({
  top: z
    .array(
      z.object({
        title: z.string(),
        points: z.number(),
        by: z.string(),
        commentsURL: z.string(),
      })
    )
    .length(5)
    .describe("Top 5 stories on Hacker News"),
});

const scrapeResult = await app.scrapeUrl("https://news.ycombinator.com", {
  jsonOptions: { extractionSchema: schema },
});

console.log(scrapeResult.data["json"]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Open Source vs Cloud Offering&lt;/h2&gt; 
&lt;p&gt;Firecrawl is open source available under the AGPL-3.0 license.&lt;/p&gt; 
&lt;p&gt;To deliver the best possible product, we offer a hosted version of Firecrawl alongside our open-source offering. The cloud solution allows us to continuously innovate and maintain a high-quality, sustainable service for all users.&lt;/p&gt; 
&lt;p&gt;Firecrawl Cloud is available at &lt;a href="https://firecrawl.dev"&gt;firecrawl.dev&lt;/a&gt; and offers a range of features that are not available in the open source version:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/mendableai/firecrawl/main/img/open-source-cloud.png" alt="Open Source vs Cloud Offering" /&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We love contributions! Please read our &lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; before submitting a pull request. If you'd like to self-host, refer to the &lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/SELF_HOST.md"&gt;self-hosting guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;It is the sole responsibility of the end users to respect websites' policies when scraping, searching and crawling with Firecrawl. Users are advised to adhere to the applicable privacy policies and terms of use of the websites prior to initiating any scraping activities. By default, Firecrawl respects the directives specified in the websites' robots.txt files when crawling. By utilizing Firecrawl, you expressly agree to comply with these conditions.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/mendableai/firecrawl/graphs/contributors"&gt; &lt;img alt="contributors" src="https://contrib.rocks/image?repo=mendableai/firecrawl" /&gt; &lt;/a&gt; 
&lt;h2&gt;License Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is primarily licensed under the GNU Affero General Public License v3.0 (AGPL-3.0), as specified in the LICENSE file in the root directory of this repository. However, certain components of this project are licensed under the MIT License. Refer to the LICENSE files in these specific directories for details.&lt;/p&gt; 
&lt;p&gt;Please note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The AGPL-3.0 license applies to all parts of the project unless otherwise specified.&lt;/li&gt; 
 &lt;li&gt;The SDKs and some UI components are licensed under the MIT License. Refer to the LICENSE files in these specific directories for details.&lt;/li&gt; 
 &lt;li&gt;When using or contributing to this project, ensure you comply with the appropriate license terms for the specific component you are working with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more details on the licensing of specific components, please refer to the LICENSE files in the respective directories or contact the project maintainers.&lt;/p&gt; 
&lt;p align="right" style="font-size: 14px; color: #555; margin-top: 20px;"&gt; &lt;a href="https://raw.githubusercontent.com/mendableai/firecrawl/main/#readme-top" style="text-decoration: none; color: #007bff; font-weight: bold;"&gt; ↑ Back to Top ↑ &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>actions/checkout</title>
      <link>https://github.com/actions/checkout</link>
      <description>&lt;p&gt;Action for checking out a repo&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/actions/checkout/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/actions/checkout/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build and Test" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Checkout V5&lt;/h1&gt; 
&lt;h2&gt;What's new&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Updated to the node24 runtime 
  &lt;ul&gt; 
   &lt;li&gt;This requires a minimum Actions Runner version of &lt;a href="https://github.com/actions/runner/releases/tag/v2.327.1"&gt;v2.327.1&lt;/a&gt; to run.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Checkout V4&lt;/h1&gt; 
&lt;p&gt;This action checks-out your repository under &lt;code&gt;$GITHUB_WORKSPACE&lt;/code&gt;, so your workflow can access it.&lt;/p&gt; 
&lt;p&gt;Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set &lt;code&gt;fetch-depth: 0&lt;/code&gt; to fetch all history for all branches and tags. Refer &lt;a href="https://docs.github.com/actions/using-workflows/events-that-trigger-workflows"&gt;here&lt;/a&gt; to learn which commit &lt;code&gt;$GITHUB_SHA&lt;/code&gt; points to for different events.&lt;/p&gt; 
&lt;p&gt;The auth token is persisted in the local git config. This enables your scripts to run authenticated git commands. The token is removed during post-job cleanup. Set &lt;code&gt;persist-credentials: false&lt;/code&gt; to opt-out.&lt;/p&gt; 
&lt;p&gt;When Git 2.18 or higher is not in your PATH, falls back to the REST API to download the files.&lt;/p&gt; 
&lt;h3&gt;Note&lt;/h3&gt; 
&lt;p&gt;Thank you for your interest in this GitHub action, however, right now we are not taking contributions.&lt;/p&gt; 
&lt;p&gt;We continue to focus our resources on strategic areas that help our customers be successful while making developers' lives easier. While GitHub Actions remains a key part of this vision, we are allocating resources towards other areas of Actions and are not taking contributions to this repository at this time. The GitHub public roadmap is the best place to follow along for any updates on features we’re working on and what stage they’re in.&lt;/p&gt; 
&lt;p&gt;We are taking the following steps to better direct requests related to GitHub Actions, including:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;We will be directing questions and support requests to our &lt;a href="https://github.com/orgs/community/discussions/categories/actions"&gt;Community Discussions area&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;High Priority bugs can be reported through Community Discussions or you can report these to our support team &lt;a href="https://support.github.com/contact/bug-report"&gt;https://support.github.com/contact/bug-report&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Security Issues should be handled as per our &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/security.md"&gt;security.md&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We will still provide security updates for this project and fix major breaking changes during this time.&lt;/p&gt; 
&lt;p&gt;You are welcome to still raise bugs in this repo.&lt;/p&gt; 
&lt;h1&gt;What's new&lt;/h1&gt; 
&lt;p&gt;Please refer to the &lt;a href="https://github.com/actions/checkout/releases/latest"&gt;release page&lt;/a&gt; for the latest release notes.&lt;/p&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;!-- start usage --&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    # Repository name with owner. For example, actions/checkout
    # Default: ${{ github.repository }}
    repository: ''

    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, uses the default branch.
    ref: ''

    # Personal access token (PAT) used to fetch the repository. The PAT is configured
    # with the local git config, which enables your scripts to run authenticated git
    # commands. The post-job step removes the PAT.
    #
    # We recommend using a service account with the least permissions necessary. Also
    # when generating a new PAT, select the least scopes necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    #
    # Default: ${{ github.token }}
    token: ''

    # SSH key used to fetch the repository. The SSH key is configured with the local
    # git config, which enables your scripts to run authenticated git commands. The
    # post-job step removes the SSH key.
    #
    # We recommend using a service account with the least permissions necessary.
    #
    # [Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)
    ssh-key: ''

    # Known hosts in addition to the user and global host key database. The public SSH
    # keys for a host may be obtained using the utility `ssh-keyscan`. For example,
    # `ssh-keyscan github.com`. The public key for github.com is always implicitly
    # added.
    ssh-known-hosts: ''

    # Whether to perform strict host key checking. When true, adds the options
    # `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use
    # the input `ssh-known-hosts` to configure additional hosts.
    # Default: true
    ssh-strict: ''

    # The user to use when connecting to the remote SSH host. By default 'git' is
    # used.
    # Default: git
    ssh-user: ''

    # Whether to configure the token or SSH key with the local git config
    # Default: true
    persist-credentials: ''

    # Relative path under $GITHUB_WORKSPACE to place the repository
    path: ''

    # Whether to execute `git clean -ffdx &amp;amp;&amp;amp; git reset --hard HEAD` before fetching
    # Default: true
    clean: ''

    # Partially clone against a given filter. Overrides sparse-checkout if set.
    # Default: null
    filter: ''

    # Do a sparse checkout on given patterns. Each pattern should be separated with
    # new lines.
    # Default: null
    sparse-checkout: ''

    # Specifies whether to use cone-mode when doing a sparse checkout.
    # Default: true
    sparse-checkout-cone-mode: ''

    # Number of commits to fetch. 0 indicates all history for all branches and tags.
    # Default: 1
    fetch-depth: ''

    # Whether to fetch tags, even if fetch-depth &amp;gt; 0.
    # Default: false
    fetch-tags: ''

    # Whether to show progress status output when fetching.
    # Default: true
    show-progress: ''

    # Whether to download Git-LFS files
    # Default: false
    lfs: ''

    # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
    # recursively checkout submodules.
    #
    # When the `ssh-key` input is not provided, SSH URLs beginning with
    # `git@github.com:` are converted to HTTPS.
    #
    # Default: false
    submodules: ''

    # Add repository path as safe.directory for Git global config by running `git
    # config --global --add safe.directory &amp;lt;path&amp;gt;`
    # Default: true
    set-safe-directory: ''

    # The base URL for the GitHub instance that you are trying to clone from, will use
    # environment defaults to fetch from the same instance that the workflow is
    # running from unless specified. Example URLs are https://github.com or
    # https://my-ghes-server.example.com
    github-server-url: ''
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- end usage --&gt; 
&lt;h1&gt;Scenarios&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-v5"&gt;Checkout V5&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#whats-new"&gt;What's new&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-v4"&gt;Checkout V4&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#note"&gt;Note&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#whats-new-1"&gt;What's new&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#scenarios"&gt;Scenarios&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-only-the-root-files"&gt;Fetch only the root files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-only-the-root-files-and-github-and-src-folder"&gt;Fetch only the root files and &lt;code&gt;.github&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; folder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-only-a-single-file"&gt;Fetch only a single file&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#fetch-all-history-for-all-tags-and-branches"&gt;Fetch all history for all tags and branches&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-a-different-branch"&gt;Checkout a different branch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-head"&gt;Checkout HEAD^&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-multiple-repos-side-by-side"&gt;Checkout multiple repos (side by side)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-multiple-repos-nested"&gt;Checkout multiple repos (nested)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-multiple-repos-private"&gt;Checkout multiple repos (private)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-pull-request-head-commit-instead-of-merge-commit"&gt;Checkout pull request HEAD commit instead of merge commit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#checkout-pull-request-on-closed-event"&gt;Checkout pull request on closed event&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#push-a-commit-using-the-built-in-token"&gt;Push a commit using the built-in token&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#push-a-commit-to-a-pr-using-the-built-in-token"&gt;Push a commit to a PR using the built-in token&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#recommended-permissions"&gt;Recommended permissions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Fetch only the root files&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    sparse-checkout: .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Fetch only the root files and &lt;code&gt;.github&lt;/code&gt; and &lt;code&gt;src&lt;/code&gt; folder&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    sparse-checkout: |
      .github
      src
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Fetch only a single file&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    sparse-checkout: |
      README.md
    sparse-checkout-cone-mode: false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Fetch all history for all tags and branches&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    fetch-depth: 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout a different branch&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    ref: my-branch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout HEAD^&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    fetch-depth: 2
- run: git checkout HEAD^
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout multiple repos (side by side)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Checkout
  uses: actions/checkout@v5
  with:
    path: main

- name: Checkout tools repo
  uses: actions/checkout@v5
  with:
    repository: my-org/my-tools
    path: my-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If your secondary repository is private or internal you will need to add the option noted in &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#Checkout-multiple-repos-private"&gt;Checkout multiple repos (private)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Checkout multiple repos (nested)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Checkout
  uses: actions/checkout@v5

- name: Checkout tools repo
  uses: actions/checkout@v5
  with:
    repository: my-org/my-tools
    path: my-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If your secondary repository is private or internal you will need to add the option noted in &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/#Checkout-multiple-repos-private"&gt;Checkout multiple repos (private)&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Checkout multiple repos (private)&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Checkout
  uses: actions/checkout@v5
  with:
    path: main

- name: Checkout private tools
  uses: actions/checkout@v5
  with:
    repository: my-org/my-private-tools
    token: ${{ secrets.GH_PAT }} # `GH_PAT` is a secret that contains your PAT
    path: my-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;code&gt;${{ github.token }}&lt;/code&gt; is scoped to the current repository, so if you want to checkout a different repository that is private you will need to provide your own &lt;a href="https://help.github.com/en/github/authenticating-to-github/creating-a-personal-access-token-for-the-command-line"&gt;PAT&lt;/a&gt;.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Checkout pull request HEAD commit instead of merge commit&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- uses: actions/checkout@v5
  with:
    ref: ${{ github.event.pull_request.head.sha }}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Checkout pull request on closed event&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Push a commit using the built-in token&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          date &amp;gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "generated"
          git push
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; The user email is &lt;code&gt;{user.id}+{user.login}@users.noreply.github.com&lt;/code&gt;. See users API: &lt;a href="https://api.github.com/users/github-actions%5Bbot%5D"&gt;https://api.github.com/users/github-actions%5Bbot%5D&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Push a commit to a PR using the built-in token&lt;/h2&gt; 
&lt;p&gt;In a pull request trigger, &lt;code&gt;ref&lt;/code&gt; is required as GitHub Actions checks out in detached HEAD mode, meaning it doesn’t check out your branch by default.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;on: pull_request
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}
      - run: |
          date &amp;gt; generated.txt
          # Note: the following account information will not work on GHES
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "generated"
          git push
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;NOTE:&lt;/em&gt; The user email is &lt;code&gt;{user.id}+{user.login}@users.noreply.github.com&lt;/code&gt;. See users API: &lt;a href="https://api.github.com/users/github-actions%5Bbot%5D"&gt;https://api.github.com/users/github-actions%5Bbot%5D&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Recommended permissions&lt;/h1&gt; 
&lt;p&gt;When using the &lt;code&gt;checkout&lt;/code&gt; action in your GitHub Actions workflow, it is recommended to set the following &lt;code&gt;GITHUB_TOKEN&lt;/code&gt; permissions to ensure proper functionality, unless alternative auth is provided via the &lt;code&gt;token&lt;/code&gt; or &lt;code&gt;ssh-key&lt;/code&gt; inputs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;permissions:
  contents: read
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;The scripts and documentation in this project are released under the &lt;a href="https://raw.githubusercontent.com/actions/checkout/main/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>David-patrick-chuks/Riona-AI-Agent</title>
      <link>https://github.com/David-patrick-chuks/Riona-AI-Agent</link>
      <description>&lt;p&gt;Riona Ai Agent 🌸 is built using Node.js and TypeScript 🛠️, designed for seamless job execution 📸. It's lightweight, efficient, and still evolving 🚧—exciting new features coming soon! 🌟&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Support the Project 🙌&lt;/h2&gt; 
&lt;p&gt;If you'd like to support the development of Instagram-AI-Agent, please consider contributing to the following wallet addresses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bitcoin (BTC)&lt;/strong&gt;: 1GkWY6pjn7KoAkCnUab2MxnxeEQihknfUi&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ethereum (ETH-erc20)&lt;/strong&gt;: 0xabb45f4d85e7d9db5de684c35ccde7239a167cbb&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Solana (SOL)&lt;/strong&gt;: EQV7fQ57zKNMFXy53WBfo2sCxtkRQVQLqj8sqWGnoyR&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your support helps keep this project running and growing! 🚀&lt;/p&gt; 
&lt;h2&gt;Instagram-AI-Agent 🌸&lt;/h2&gt; 
&lt;p&gt;Instagram-AI-Agent is an AI-powered automation tool designed for &lt;strong&gt;Instagram&lt;/strong&gt; to automate social media interactions such as posting, liking, and commenting. It leverages advanced AI models to generate engaging content, automate interactions, and manage Instagram accounts efficiently.&lt;/p&gt; 
&lt;p&gt;Before using the automation features, you can personalize the agent by training with the following, including: &lt;a href="https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp"&gt;https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube Video URL&lt;/strong&gt; 🎥&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audio File&lt;/strong&gt; 🎙️&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portfolio or Website Link&lt;/strong&gt; 🌐&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Formats Supported&lt;/strong&gt;: PDF, DOC, DOCX, TXT 📄&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Instagram Automation&lt;/strong&gt;: Automatically log in, post photos, like posts, and leave thoughtful comments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Powered Content Generation&lt;/strong&gt;: Use Google Generative AI to create engaging captions and comments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Proxy Support&lt;/strong&gt;: Use proxies to manage multiple accounts and avoid rate limits.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cookie Management&lt;/strong&gt;: Save and load cookies to maintain sessions across restarts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter Automation&lt;/strong&gt;: (Coming soon) Automatically tweet, retweet, and like tweets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Automation&lt;/strong&gt;: (Coming soon) Automatically manage repositories, issues, and pull requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/david-patrick-chuks/Instagram-AI-Agent.git
cd Instagram-AI-Agent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set up environment variables&lt;/strong&gt;: Rename the &lt;a href="http://_vscodecontentref_/1"&gt;.env.example&lt;/a&gt; file to &lt;a href="http://_vscodecontentref_/1"&gt;.env&lt;/a&gt; in the root directory and add your Instagram credentials. Refer to the &lt;a href="http://_vscodecontentref_/2"&gt;.env.example&lt;/a&gt; file for the required variables.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-dotenv"&gt;IGusername=your_instagram_username
IGpassword=your_instagram_password 

Xusername= #Twitter username
Xpassword= #Twitter password

MONGODB_URI= #MongoDB URI
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;MongoDB Setup (Using Docker)&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;: If you don't have Docker installed, download and install it from the &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;official website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run MongoDB using Docker Container&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb mongodb/mongodb-community-server:latest
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb -v mongodb_data:/data/db mongodb/mongodb-community-server:latest
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Option 2: use this if you want to have like a permanent storage in you so your data won't be lost or remove if you stop or remove your Docker container)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modify the MONGODB_URI in the .env file&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-dotenv"&gt;MONGODB_URI=mongodb://localhost:27017/instagram-ai-agent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify the connection&lt;/strong&gt;: Open a new terminal and run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker ps
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should see the MongoDB container running.&lt;/p&gt; &lt;p&gt;Docker Commands (Additional Info):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;To stop the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker stop instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To start the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker start instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To remove the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker rm instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To remove the MongoDB container and its data: &lt;pre&gt;&lt;code class="language-sh"&gt;docker rm -v instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Run the Instagram agent&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-sh"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the Twitter agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm run start:twitter
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the GitHub agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm run start:github
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;src/client&lt;/strong&gt;: Contains the main logic for interacting with social media platforms like Instagram.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/config&lt;/strong&gt;: Configuration files, including the logger setup.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/utils&lt;/strong&gt;: Utility functions for handling errors, cookies, data saving, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/Agent&lt;/strong&gt;: Contains the AI agent logic and training scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/Agent/training&lt;/strong&gt;: Training scripts for the AI agent.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/schema&lt;/strong&gt;: Schema definitions for AI-generated content and database models.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/test&lt;/strong&gt;: Contains test data and scripts, such as example tweets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;The project uses a custom logger to log information, warnings, and errors. Logs are saved in the &lt;a href="http://_vscodecontentref_/3"&gt;logs&lt;/a&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;Process-level error handlers are set up to catch unhandled promise rejections, uncaught exceptions, and process warnings. Errors are logged using the custom logger.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please fork the repository and submit a pull request with your changes.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the LICENSE file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ai.google/tools/"&gt;Google Generative AI&lt;/a&gt; for providing the AI models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puppeteer/puppeteer"&gt;Puppeteer&lt;/a&gt; for browser automation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/berstend/puppeteer-extra"&gt;puppeteer-extra&lt;/a&gt; for additional plugins and enhancements.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>kagent-dev/kagent</title>
      <link>https://github.com/kagent-dev/kagent</link>
      <description>&lt;p&gt;Cloud Native Agentic AI | Discord: https://bit.ly/kagentdiscord&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-dark.svg" alt="kagent" width="400" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-light.svg" alt="kagent" width="400" /&gt; 
  &lt;img alt="kagent" src="https://raw.githubusercontent.com/kagent-dev/kagent/main/img/icon-light.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; 
 &lt;div&gt; 
  &lt;a href="https://github.com/kagent-dev/kagent/releases"&gt; &lt;img src="https://img.shields.io/github/v/release/kagent-dev/kagent?style=flat&amp;amp;label=Latest%20version" alt="Release" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/kagent-dev/kagent/actions/workflows/ci.yaml"&gt; &lt;img src="https://github.com/kagent-dev/kagent/actions/workflows/ci.yaml/badge.svg?sanitize=true" alt="Build Status" height="20" /&gt; &lt;/a&gt; 
  &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt; &lt;img src="https://img.shields.io/badge/License-Apache2.0-brightgreen.svg?style=flat" alt="License: Apache 2.0" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/kagent-dev/kagent"&gt; &lt;img src="https://img.shields.io/github/stars/kagent-dev/kagent.svg?style=flat&amp;amp;logo=github&amp;amp;label=Stars" alt="Stars" /&gt; &lt;/a&gt; 
  &lt;a href="https://discord.gg/Fu3k65f2k3"&gt; &lt;img src="https://img.shields.io/discord/1346225185166065826?style=flat&amp;amp;label=Join%20Discord&amp;amp;color=6D28D9" alt="Discord" /&gt; &lt;/a&gt; 
  &lt;a href="https://deepwiki.com/kagent-dev/kagent"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; 
  &lt;a href="https://codespaces.new/kagent-dev/kagent"&gt; &lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in Github Codespaces" style="max-width: 100%;" height="20" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;kagent&lt;/strong&gt; is a Kubernetes native framework for building AI agents. Kubernetes is the most popular orchestration platform for running workloads, and &lt;strong&gt;kagent&lt;/strong&gt; makes it easy to build, deploy and manage AI agents in Kubernetes. The &lt;strong&gt;kagent&lt;/strong&gt; framework is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/kagent-dev/kagent/main/img/hero.png" alt="Autogen Framework" width="500" /&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kagent.dev/docs/kagent/getting-started/quickstart"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kagent.dev/docs/kagent/introduction/installation"&gt;Installation guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The kagent documentation is available at &lt;a href="https://kagent.dev/docs/kagent"&gt;kagent.dev/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Core Concepts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Agents&lt;/strong&gt;: Agents are the main building block of kagent. They are a system prompt, a set of tools and agents, and an LLM configuration represented with a Kubernetes custom resource called "Agent".&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LLM Providers&lt;/strong&gt;: Kagent supports multiple LLM providers, including &lt;a href="https://kagent.dev/docs/kagent/supported-providers/openai"&gt;OpenAI&lt;/a&gt;, &lt;a href="https://kagent.dev/docs/kagent/supported-providers/azure-openai"&gt;Azure OpenAI&lt;/a&gt;, &lt;a href="https://kagent.dev/docs/kagent/supported-providers/anthropic"&gt;Anthropic&lt;/a&gt;, &lt;a href="https://kagent.dev/docs/kagent/supported-providers/google-vertexai"&gt;Google Vertex AI&lt;/a&gt;, &lt;a href="https://kagent.dev/docs/kagent/supported-providers/ollama"&gt;Ollama&lt;/a&gt; and any other &lt;a href="https://kagent.dev/docs/kagent/supported-providers/custom-models"&gt;custom providers and models&lt;/a&gt; accessible via AI gateways. Providers are represented by the ModelConfig resource.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Tools&lt;/strong&gt;: Agents can connect to any MCP server that provides tools. Kagent comes with an MCP server with tools for Kubernetes, Istio, Helm, Argo, Prometheus, Grafana, Cilium, and others. All tools are Kubernetes custom resources (ToolServers) and can be used by multiple agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: Using the &lt;a href="https://kagent.dev/docs/kagent/concepts/memory"&gt;memory&lt;/a&gt;, your agents can always have access to the latest and most up-to-date information.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observability&lt;/strong&gt;: Kagent supports &lt;a href="https://kagent.dev/docs/kagent/getting-started/tracing"&gt;OpenTelemetry tracing&lt;/a&gt;, which allows you to monitor what's happening with your agents and tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Core Principles&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Kubernetes Native&lt;/strong&gt;: Kagent is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible&lt;/strong&gt;: Kagent is designed to be extensible, so you can add your own agents and tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible&lt;/strong&gt;: Kagent is designed to be flexible, to suit any AI agent use case.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Observable&lt;/strong&gt;: Kagent is designed to be observable, so you can monitor the agents and tools using all common monitoring frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative&lt;/strong&gt;: Kagent is designed to be declarative, so you can define the agents and tools in a YAML file.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Testable&lt;/strong&gt;: Kagent is designed to be tested and debugged easily. This is especially important for AI agent applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;The kagent framework is designed to be easy to understand and use, and to provide a flexible and powerful way to build and manage AI agents.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/kagent-dev/kagent/main/img/arch.png" alt="kagent" width="500" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Kagent has 4 core components:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Controller&lt;/strong&gt;: The controller is a Kubernetes controller that watches the kagent custom resources and creates the necessary resources to run the agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;UI&lt;/strong&gt;: The UI is a web UI that allows you to manage the agents and tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Engine&lt;/strong&gt;: The engine runs your agents using &lt;a href="https://google.github.io/adk-docs/"&gt;ADK&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CLI&lt;/strong&gt;: The CLI is a command-line tool that allows you to manage the agents and tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;kagent&lt;/code&gt; is currently in active development. You can check out the full roadmap in the project Kanban board &lt;a href="https://github.com/orgs/kagent-dev/projects/3"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Local development&lt;/h2&gt; 
&lt;p&gt;For instructions on how to run everything locally, see the &lt;a href="https://raw.githubusercontent.com/kagent-dev/kagent/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;For instructions on how to contribute to the kagent project, see the &lt;a href="https://raw.githubusercontent.com/kagent-dev/kagent/main/CONTRIBUTION.md"&gt;CONTRIBUTION.md&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;Thanks to all contributors who are helping to make kagent better.&lt;/p&gt; 
&lt;a href="https://github.com/kagent-dev/kagent/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=kagent-dev/kagent" /&gt; &lt;/a&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#kagent-dev/kagent&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star history of kagent-dev/kagent over time" src="https://api.star-history.com/svg?repos=kagent-dev/kagent&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>dream-num/univer</title>
      <link>https://github.com/dream-num/univer</link>
      <description>&lt;p&gt;Univer is a full-stack framework for creating and editing spreadsheets, documents, and slides on both web and server.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="./docs/img/banner-light.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/banner-dark.png" alt="Univer" width="400" /&gt; 
 &lt;/picture&gt; 
 &lt;p&gt;An Isomorphic Full-Stack Framework for Creating and Editing Spreadsheets, Docs, and Slides Across Web and Server&lt;br /&gt; &lt;strong&gt;Extensible. High-performance. Embedded to your application.&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/README-zh.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/README-ja.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/README-es.md"&gt;Español&lt;/a&gt; &lt;br /&gt; &lt;a href="https://univer.ai"&gt;Official Site&lt;/a&gt; | &lt;a href="https://docs.univer.ai/en-US"&gt;Documentation&lt;/a&gt; | &lt;a href="https://docs.univer.ai/en-US/showcase"&gt;Online Playground&lt;/a&gt; | &lt;a href="https://docs.univer.ai/en-US/blog"&gt;Blog&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/dream-num/univer?style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dream-num/univer/actions/workflows/build.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/dream-num/univer/build.yml?style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dream-num/univer/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/dream-num/univer?style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dream-num/univer/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/dream-num/univer?style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/dream-num/univer/network/members"&gt;&lt;img src="https://img.shields.io/github/forks/dream-num/univer?style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dream-num/univer/issues"&gt;&lt;img src="https://img.shields.io/github/issues/dream-num/univer?style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/dream-num/univer"&gt;&lt;img src="https://img.shields.io/codecov/c/gh/dream-num/univer?token=aPfyW2pIMN&amp;amp;style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;a href="https://www.codefactor.io/repository/github/dream-num/univer/overview/dev"&gt;&lt;img src="https://www.codefactor.io/repository/github/dream-num/univer/badge/dev?style=flat-square" alt="" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/z3NKNT6D2f"&gt;&lt;img src="https://img.shields.io/discord/1136129819961217077?logo=discord&amp;amp;logoColor=FFFFFF&amp;amp;label=discord&amp;amp;color=5865F2&amp;amp;style=flat-square" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/4376"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/4376" alt="Trendshift" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;details open&gt; 
 &lt;summary&gt; &lt;strong&gt;Table of contents&lt;/strong&gt; &lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-highlights"&gt;🌈 Highlights&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-features"&gt;✨ Features&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-univer-sheet"&gt;📊 Univer Sheet&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-univer-doc-under-development"&gt;📝 Univer Doc&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#%EF%B8%8F-univer-slide-under-development"&gt;📽️ Univer Slide&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-internationalization"&gt;🌐 Internationalization&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-showcase"&gt;👾 Showcase&lt;/a&gt;
   &lt;!-- - [📦 Ecosystem](#-ecosystem) --&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-community"&gt;💬 Community&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-contribution"&gt;🤝 Contribution&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#%EF%B8%8F-sponsors"&gt;❤️ Sponsor&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/#-license"&gt;📄 License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;🌈 Highlights&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;📈 Univer is designed to support &lt;strong&gt;spreadsheets&lt;/strong&gt;, &lt;strong&gt;documents&lt;/strong&gt; and &lt;strong&gt;presentation&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;🧙‍♀️ Univer is &lt;strong&gt;isomorphic&lt;/strong&gt;. It can run both on browsers and Node.js (in the future, mobile devices as well), with the same API.&lt;/li&gt; 
 &lt;li&gt;⚙️ Univer is easily &lt;strong&gt;embeddable&lt;/strong&gt;, allowing seamless integration into your applications.&lt;/li&gt; 
 &lt;li&gt;🎇 Univer is &lt;strong&gt;powerful&lt;/strong&gt;, offering a wide range of features including &lt;strong&gt;formulas&lt;/strong&gt;, &lt;strong&gt;conditional formatting&lt;/strong&gt;, &lt;strong&gt;data validation&lt;/strong&gt;, &lt;strong&gt;filtering&lt;/strong&gt;, &lt;strong&gt;collaborative editing&lt;/strong&gt;, &lt;strong&gt;printing&lt;/strong&gt;, &lt;strong&gt;import &amp;amp; export&lt;/strong&gt; and more features on the horizon.&lt;/li&gt; 
 &lt;li&gt;🔌 Univer is &lt;strong&gt;highly extensible&lt;/strong&gt;, thanks to its &lt;em&gt;plug-in architecture&lt;/em&gt; that makes it a delight for developers to implement their unique requirements on the top of Univer.&lt;/li&gt; 
 &lt;li&gt;💄 Univer is &lt;strong&gt;highly customizable&lt;/strong&gt;, allowing you to personalize its appearance using &lt;em&gt;themes&lt;/em&gt;. It also provides support for internationalization (i18n).&lt;/li&gt; 
 &lt;li&gt;🥤 Univer is &lt;strong&gt;easy to work with&lt;/strong&gt;. The &lt;em&gt;Presets&lt;/em&gt; &amp;amp; &lt;em&gt;Facade API&lt;/em&gt; make it easy to hands on.&lt;/li&gt; 
 &lt;li&gt;⚡ Univer in &lt;strong&gt;performant&lt;/strong&gt;. 
  &lt;ul&gt; 
   &lt;li&gt;✏️ Univer boasts an efficient &lt;em&gt;rendering engine&lt;/em&gt; based on canvas, capable of rendering various document types flawlessly. The rendering engines supports advanced typesetting features such as &lt;em&gt;punctuation squeezing&lt;/em&gt;, &lt;em&gt;text and image layout&lt;/em&gt; and &lt;em&gt;scroll buffering&lt;/em&gt;.&lt;/li&gt; 
   &lt;li&gt;🧮 Univer incorporates a lightning-fast &lt;em&gt;formula engine&lt;/em&gt; that can operate in Web Workers or even on the server side.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🌌 Univer is a &lt;strong&gt;highly integrated&lt;/strong&gt; system. Documents, spreadsheets and slides can interoperate with each others and even rendered on the same canvas, allowing information and data flow within Univer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;p&gt;Univer provides a wide range of features for spreadsheets, documents and presentations. Here are some of the key features:&lt;/p&gt; 
&lt;h3&gt;📊 Univer Sheets&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core Features&lt;/strong&gt;: Univer supports core spreadsheet functionality, including cells, rows, columns, worksheets, and workbooks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Formulas&lt;/strong&gt;: Extensive support for various formulas, including mathematical, statistical, logical, text, date and time, lookup and reference, engineering, financial, and information formulas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Permissions&lt;/strong&gt;: Allows restricting access to specific elements.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Number Formatting&lt;/strong&gt;: Supports formatting numbers based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyperlinks&lt;/strong&gt;: Enables linking to external websites, email addresses, and other locations within a spreadsheet.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Floating Images&lt;/strong&gt;: Allows inserting images into a spreadsheet and positioning them anywhere on the sheet.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Find &amp;amp; Replace&lt;/strong&gt;: Provides the ability to search for specific text within a spreadsheet and replace it with other text.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Filtering&lt;/strong&gt;: Allows filtering data based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt;: Allows sorting data based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Data Validation&lt;/strong&gt;: Supports restricting the type of data that can be entered into a cell.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Conditional Formatting&lt;/strong&gt;: Supports applying formatting to cells based on specific criteria.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comments&lt;/strong&gt;: Enables adding comments to cells to provide additional information.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-highlighting&lt;/strong&gt;: Supports displaying cross-highlighting in spreadsheets to help users quickly locate selected cells.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zen Editor&lt;/strong&gt;: Provides a distraction-free editing experience with a clean interface and minimal distractions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pivot Tables&lt;/strong&gt;[^1]: Supports pivot tables, allowing users to summarize and analyze data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sparklines&lt;/strong&gt;[^1]: Supports sparklines, which are small charts that fit within a cell to provide a visual representation of data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Printing&lt;/strong&gt;[^1]: Allows printing a spreadsheet or exporting it to PDF.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Import &amp;amp; Export&lt;/strong&gt;[^1]: Support for importing and exporting data in XLSX.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Charts&lt;/strong&gt;[^1]: Supports various types of charts, including bar charts, line charts, pie charts, scatter plots, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative Editing&lt;/strong&gt;[^1]: Supports multiple users editing a spreadsheet simultaneously. File history and recovering are also provided.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Editing History&lt;/strong&gt;[^1]: Allows users to view and restore previous versions of a spreadsheet.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📝 Univer Docs (rc)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core Features&lt;/strong&gt;: Univer supports core document features, including paragraphs, headings, lists, superscript, subscript, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lists&lt;/strong&gt;: Supports ordered lists, unordered lists, and task lists.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Hyperlinks&lt;/strong&gt;: Supports inserting links to external websites, email addresses, and other locations within a document.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Floating Images&lt;/strong&gt;: Allows inserting images into a document and supporting text and image layout.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Headers &amp;amp; Footers&lt;/strong&gt;: Allows adding headers and footers to a document.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comments&lt;/strong&gt;: Enables adding comments to a document to provide additional information.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Printing&lt;/strong&gt;[^1]: Allows printing a document or exporting it to PDF.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Import &amp;amp; Export&lt;/strong&gt;[^1]: Supports importing and exporting data in DOCX format.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Collaborative Editing&lt;/strong&gt;[^1]: Supports multiple users editing a document simultaneously.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📽️ Univer Slides (Under Development)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Core Features&lt;/strong&gt;: Univer will support core presentation features, including slides, shapes, text, images, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🌐 Internationalization&lt;/h2&gt; 
&lt;p&gt;Univer supports multiple languages, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;zh-CN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;zh-TW&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;en-US&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ru-RU&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vi-VN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fa-IR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ko-KR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;es-ES&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ca-ES&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;code&gt;zh-CN&lt;/code&gt; and &lt;code&gt;en-US&lt;/code&gt; are officially supported, while the others are contributed and maintained by the community.&lt;/p&gt; 
&lt;p&gt;You can add the language you want by &lt;a href="https://univer.ai/guides/sheet/getting-started/i18n#using-custom-locales"&gt;Using Custom Locales&lt;/a&gt;. You can also help us add new language support by referring to the &lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;👾 Showcase&lt;/h2&gt; 
&lt;p&gt;Embed Univer in AI products as a data presentation tool.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://capalyze.ai/"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-capalyze.gif" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can find all the examples in the &lt;a href="https://univer.ai/examples"&gt;Univer Examples&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;strong&gt;📊 Spreadsheets&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;strong&gt;📊 Multi-instance&lt;/strong&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;strong&gt;📊 Uniscript&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-multi.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-uniscript.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📊 Big data&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📊 Collaboration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📊 Collaboration Playground&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-sheets-big-data.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-collaboration.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-collaboration-playground.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📊 Import &amp;amp; Export&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📊 Printing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📝 Documents&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-exchange.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-sheets-print.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📝 Multi-instance&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📝 Uniscript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📝 Big data&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs-multi.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs-uniscript.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-docs-big-data.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📝 Collaboration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📝 Collaboration Playground&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📽️ Presentations&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-docs-collaboration.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/pro-examples-docs-collaboration-playground.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://docs.univer.ai/showcase"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/examples-slides.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;📊 Zen Editor&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;strong&gt;Univer Workspace (SaaS version)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://univer.ai/guides/sheet/features/zen-editor"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/zen-mode.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://youtu.be/kpV0MvQuFZA"&gt;&lt;img src="https://raw.githubusercontent.com/dream-num/univer/dev/docs/img/univer-workspace-drag-chart.gif" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&amp;nbsp;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!-- ## 📦 Ecosystem

Univer has a rich ecosystem that includes a wide range of tools and resources to help you get started with Univer: --&gt; 
&lt;h2&gt;🔗 Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://univer-preview.vercel.app/"&gt;Latest Preview of the &lt;code&gt;dev&lt;/code&gt; Branch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://univer.ai"&gt;Official Site&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dream-num/univer-presets"&gt;Presets Repository&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔒 Security&lt;/h2&gt; 
&lt;p&gt;Univer is committed to maintaining a secure codebase. We follow best practices for security and regularly update our dependencies. For more information, please refer to our &lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/SECURITY.md"&gt;Security Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💬 Community&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/dream-num/univer/discussions"&gt;&lt;img src="https://img.shields.io/badge/github-univer-24292e?labelColor=black&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/z3NKNT6D2f"&gt;&lt;img src="https://img.shields.io/discord/1136129819961217077?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="" /&gt;&lt;/a&gt; &lt;a href="https://stackoverflow.com/questions/tagged/univer"&gt;&lt;img src="https://img.shields.io/badge/stackoverflow-univer-ef8236?labelColor=black&amp;amp;logo=stackoverflow&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Univer is an inclusive and welcoming project. Please read our &lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; before participating in the community.&lt;/p&gt; 
&lt;p&gt;Join the Univer community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat with us and other developers on &lt;a href="https://discord.gg/z3NKNT6D2f"&gt;Discord&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Start a discussion on &lt;a href="https://github.com/dream-num/univer/discussions"&gt;GitHub Discussions&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Open a topic on &lt;a href="https://stackoverflow.com/questions/tagged/univer"&gt;Stack Overflow&lt;/a&gt; and tag it with &lt;code&gt;univer&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also find Univer on:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/univerhq"&gt;Twitter&lt;/a&gt; | &lt;a href="https://www.youtube.com/@dreamNum"&gt;YouTube&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contribution&lt;/h2&gt; 
&lt;p&gt;We appreciate any kinds of contributing. You can submit &lt;a href="https://github.com/dream-num/univer/issues"&gt;issues or feature requests&lt;/a&gt; to us. Please read our &lt;a href="https://raw.githubusercontent.com/dream-num/univer/dev/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; first.&lt;/p&gt; 
&lt;p&gt;If you would like to contribute code to Univer, please refer to the contributing guide as well. It would guide you through the process of setting up the development environment and submitting a pull request.&lt;/p&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;p&gt;The growth and development of the Univer project rely on the support of its backers and sponsors. If you are interested in supporting our project, we kindly invite you to consider becoming a sponsor. You can sponsor us through &lt;a href="https://opencollective.com/univer"&gt;Open Collective&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Thanks to our sponsors, just part of them are listed here because of the space limit, ranking is no particular order:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/univer/sponsor/0/website"&gt;&lt;img src="https://opencollective.com/univer/sponsor/0/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/sponsor/1/website"&gt;&lt;img src="https://opencollective.com/univer/sponsor/1/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/sponsor/2/website"&gt;&lt;img src="https://opencollective.com/univer/sponsor/2/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/sponsor/3/website"&gt;&lt;img src="https://opencollective.com/univer/sponsor/3/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/sponsor/4/website"&gt;&lt;img src="https://opencollective.com/univer/sponsor/4/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/sponsor/5/website"&gt;&lt;img src="https://opencollective.com/univer/sponsor/5/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/sponsor/6/website"&gt;&lt;img src="https://opencollective.com/univer/sponsor/6/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/univer/backer/0/website"&gt;&lt;img src="https://opencollective.com/univer/backer/0/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/backer/1/website"&gt;&lt;img src="https://opencollective.com/univer/backer/1/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/backer/2/website"&gt;&lt;img src="https://opencollective.com/univer/backer/2/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/backer/3/website"&gt;&lt;img src="https://opencollective.com/univer/backer/3/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/backer/4/website"&gt;&lt;img src="https://opencollective.com/univer/backer/4/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/backer/5/website"&gt;&lt;img src="https://opencollective.com/univer/backer/5/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/univer/backer/6/website"&gt;&lt;img src="https://opencollective.com/univer/backer/6/avatar.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Copyright © 2021-2025 DreamNum Co,Ltd. All Rights Reserved.&lt;/p&gt; 
&lt;p&gt;Licensed under the &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache-2.0&lt;/a&gt; license.&lt;/p&gt; 
&lt;!-- Footnotes --&gt; 
&lt;p&gt;[^1]: These features are provided by the non-OSS version of Univer, which is free for commercial use and also includes paid upgrade plans.&lt;/p&gt; 
&lt;!-- Links --&gt;</description>
    </item>
    
    <item>
      <title>midday-ai/midday</title>
      <link>https://github.com/midday-ai/midday</link>
      <description>&lt;p&gt;Invoicing, Time tracking, File reconciliation, Storage, Financial Overview &amp; your own Assistant made for Freelancers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/midday-ai/midday/main/github.png" alt="hero" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;&lt;b&gt;Midday&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; Run your business smarter &lt;br /&gt; &lt;br /&gt; &lt;a href="https://go.midday.ai/anPiuRx"&gt;Discord&lt;/a&gt; · &lt;a href="https://midday.ai"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/midday-ai/midday/issues"&gt;Issues&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.midday.ai/K7GwMoQ"&gt; &lt;img src="https://img.shields.io/badge/Supabase-3ECF8E?style=for-the-badge&amp;amp;logo=supabase&amp;amp;logoColor=white" alt="Supabase" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About Midday&lt;/h2&gt; 
&lt;p&gt;Midday is an all-in-one tool designed to help freelancers, contractors, consultants, and solo entrepreneurs manage their business operations more efficiently. It integrates various functions typically scattered across multiple platforms into a single, cohesive system.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Time Tracking&lt;/strong&gt;: Allows for live time tracking of projects to boost productivity and collaboration, providing insightful project overviews.&lt;br /&gt; &lt;strong&gt;Invoicing&lt;/strong&gt;: An upcoming feature that will enable users to create web-based invoices, collaborate in real-time, and synchronize projects seamlessly.&lt;br /&gt; &lt;strong&gt;Magic Inbox&lt;/strong&gt;: Automatically matches incoming invoices or receipts to the correct transactions, simplifying financial tracking and organization.&lt;br /&gt; &lt;strong&gt;Vault&lt;/strong&gt;: Secure storage for important files like contracts and agreements, keeping everything in one place for easy access​.&lt;br /&gt; &lt;strong&gt;Seamless Export&lt;/strong&gt;: Facilitates easy export of financial data, packaged neatly in CSV files for accountants.&lt;br /&gt; &lt;strong&gt;Assistant&lt;/strong&gt;: Provides tailored insights into financial situations, helping users understand spending patterns, cut costs, and find documents.&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;We are working on the documentation to get started with Midday for local development: &lt;a href="https://docs.midday.ai"&gt;https://docs.midday.ai&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;App Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monorepo&lt;/li&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;React&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;Nextjs&lt;/li&gt; 
 &lt;li&gt;Supabase&lt;/li&gt; 
 &lt;li&gt;Shadcn&lt;/li&gt; 
 &lt;li&gt;Tauri&lt;/li&gt; 
 &lt;li&gt;Expo&lt;/li&gt; 
 &lt;li&gt;TailwindCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hosting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supabase (database, storage, realtime, auth)&lt;/li&gt; 
 &lt;li&gt;Vercel (Website, Dashboard)&lt;/li&gt; 
 &lt;li&gt;Fly.io (API/tRPC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trigger.dev (background jobs)&lt;/li&gt; 
 &lt;li&gt;Resend (Transactional &amp;amp; Marketing)&lt;/li&gt; 
 &lt;li&gt;Novu (notifications)&lt;/li&gt; 
 &lt;li&gt;Github Actions (CI/CD)&lt;/li&gt; 
 &lt;li&gt;GoCardLess (Bank connection EU)&lt;/li&gt; 
 &lt;li&gt;Plaid (Bank connection in Canada and US)&lt;/li&gt; 
 &lt;li&gt;Teller (Bank connection in the US)&lt;/li&gt; 
 &lt;li&gt;OpenPanel (Events and Analytics)&lt;/li&gt; 
 &lt;li&gt;Polar (Payment processing)&lt;/li&gt; 
 &lt;li&gt;Typesense (Search)&lt;/li&gt; 
 &lt;li&gt;Mistral&lt;/li&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/96aae855e5dd87c30d53c1d154b37cf7aa5a89b3.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;strong&gt;&lt;a href="https://opensource.org/licenses/AGPL-3.0"&gt;AGPL-3.0&lt;/a&gt;&lt;/strong&gt; for non-commercial use.&lt;/p&gt; 
&lt;h3&gt;Commercial Use&lt;/h3&gt; 
&lt;p&gt;For commercial use or deployments requiring a setup fee, please contact us for a commercial license at &lt;a href="mailto:engineer@midday.ai"&gt;engineer@midday.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By using this software, you agree to the terms of the license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>novuhq/novu</title>
      <link>https://github.com/novuhq/novu</link>
      <description>&lt;p&gt;The open-source notification Inbox infrastructure. E-mail, SMS, Push and Slack Integrations.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://go.novu.co/github" target="_blank"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://user-images.githubusercontent.com/2233092/213641039-220ac15f-f367-4d13-9eaf-56e79433b8c1.png" /&gt; 
   &lt;img alt="Novu Logo" src="https://user-images.githubusercontent.com/2233092/213641043-3bbb3f21-3c53-4e67-afe5-755aeb222159.png" width="280" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/products/novu"&gt; &lt;img src="https://img.shields.io/badge/Product%20Hunt-Golden%20Kitty%20Award%202023-yellow" alt="Product Hunt" /&gt; &lt;/a&gt; &lt;a href="https://news.ycombinator.com/item?id=38419513"&gt;&lt;img src="https://img.shields.io/badge/Hacker%20News-%231-%23FF6600" alt="Hacker News" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@novu/react"&gt; &lt;img src="https://img.shields.io/npm/v/@novu/react" alt="NPM" /&gt; &lt;/a&gt; 
 &lt;!-- TODO: Replace this with @novu/api as soon as the NPM download traffic switches to the new package --&gt; &lt;a href="https://www.npmjs.com/package/@novu/node"&gt; &lt;img src="https://img.shields.io/npm/dm/@novu/node" alt="npm downloads" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt; The &amp;lt;Inbox /&amp;gt; infrastructure for modern products &lt;/h1&gt; 
&lt;div align="center"&gt;
  The notification platform that turns complex multi-channel delivery into a single component. Built for developers, designed for growth, powered by open source. 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://go.novu.co/github" rel="dofollow"&gt;&lt;strong&gt;Learn More »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://github.com/novuhq/novu/issues/new?assignees=&amp;amp;labels=type%3A+bug&amp;amp;template=bug_report.yml&amp;amp;title=%F0%9F%90%9B+Bug+Report%3A+"&gt;Report a bug&lt;/a&gt; · &lt;a href="https://docs.novu.co"&gt;Docs&lt;/a&gt; · &lt;a href="https://go.novu.co/github"&gt;Website&lt;/a&gt; · &lt;a href="https://discord.novu.co"&gt;Join our Discord&lt;/a&gt; · &lt;a href="https://go.novu.co/changelog"&gt;Changelog&lt;/a&gt; · &lt;a href="https://go.novu.co/roadmap"&gt;Roadmap&lt;/a&gt; · &lt;a href="https://twitter.com/novuhq"&gt;X&lt;/a&gt; · &lt;a href="https://novu.co/contact-us/?utm_campaign=github-readme"&gt;Contact us&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;⭐️ Why Novu?&lt;/h2&gt; 
&lt;p&gt;Novu provides a unified API that makes it simple to send notifications through multiple channels, including Inbox/In-App, Push, Email, SMS, and Chat. With Novu, you can create custom workflows and define conditions for each channel, ensuring that your notifications are delivered in the most effective way possible.&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Embeddable Inbox component with real-time support&lt;/li&gt; 
 &lt;li&gt;Single API for all messaging providers (Inbox/In-App, Email, SMS, Push, Chat)&lt;/li&gt; 
 &lt;li&gt;Digest Engine to combine multiple notification in to a single E-mail&lt;/li&gt; 
 &lt;li&gt;No-Code Block Editor for Email&lt;/li&gt; 
 &lt;li&gt;Notification Workflow Engine&lt;/li&gt; 
 &lt;li&gt;Embeddable user preferences component gives your subscribers control over their notifications&lt;/li&gt; 
 &lt;li&gt;Community-driven&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://go.novu.co/dashboard?utm_campaign=github-readme"&gt;Create a free account&lt;/a&gt; and follow the instructions on the dashboard.&lt;/p&gt; 
&lt;h2&gt;📚 Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#embeddable-notification-center"&gt;Embeddable Inbox and Preferences&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#providers"&gt;Providers&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-email"&gt;Email&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-sms"&gt;SMS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-push"&gt;Push&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-chat"&gt;Chat&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-in-app"&gt;In-App&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#other-coming-soon"&gt;Others&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-need-help"&gt;Need Help?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#-links"&gt;Links&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu#%EF%B8%8F-license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Embeddable Inbox component&lt;/h2&gt; 
&lt;p&gt;Using the Novu API and admin panel, you can easily add a real-time notification center to your web app without building it yourself. You can use our &lt;a href="https://docs.novu.co/inbox/react/get-started?utm_campaign=github-readme"&gt;React&lt;/a&gt;, or build your own via our API and SDK. React native, Vue, and Angular are coming soon.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img width="762" alt="notification-center-912bb96e009fb3a69bafec23bcde00b0" src="https://novu.co/static/6e670ba56ed7a65c7f5ccff5d58c56fb/a9e85/inbox.webp" alt-text="GIF of Novu's Embeddable Notification Center" /&gt; 
 &lt;p&gt;Read more about how to add a &lt;a href="https://docs.novu.co/inbox/react/get-started?utm_campaign=github-readme"&gt;notification center Inbox&lt;/a&gt; to your app.&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Providers&lt;/h2&gt; 
&lt;p&gt;Novu provides a single API to manage providers across multiple channels with a simple-to-use API and UI interface.&lt;/p&gt; 
&lt;h4&gt;💌 Email&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sendgrid"&gt;Sendgrid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/netcore"&gt;Netcore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mailgun"&gt;Mailgun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/ses"&gt;SES&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/postmark"&gt;Postmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/nodemailer"&gt;Custom SMTP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mailjet"&gt;Mailjet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mandrill"&gt;Mandrill&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/brevo"&gt;Brevo (formerly SendinBlue)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mailersend"&gt;MailerSend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/infobip"&gt;Infobip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/resend"&gt;Resend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sparkpost"&gt;SparkPost&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/outlook365"&gt;Outlook 365&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📞 SMS&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/twilio"&gt;Twilio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/plivo"&gt;Plivo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sns"&gt;SNS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/nexmo"&gt;Nexmo - Vonage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sms77"&gt;Sms77&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/telnyx"&gt;Telnyx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/termii"&gt;Termii&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/gupshup"&gt;Gupshup&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/sms-central"&gt;SMS Central&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/maqsam"&gt;Maqsam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/forty-six-elks"&gt;46elks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/clickatell"&gt;Clickatell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/burst-sms"&gt;Burst SMS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/firetext"&gt;Firetext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/infobip"&gt;Infobip&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Bandwidth&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; RingCentral&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📱 Push&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/fcm"&gt;FCM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/expo"&gt;Expo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/apns"&gt;APNS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/one-signal"&gt;OneSignal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/pushpad"&gt;Pushpad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Pushwoosh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;👇 Chat&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/slack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/discord"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/ms-teams"&gt;MS Teams&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/novuhq/novu/tree/main/providers/mattermost"&gt;Mattermost&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📱 In-App&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://docs.novu.co/inbox/react/get-started?utm_campaign=github-readme"&gt;Novu&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📋 Read Our Code Of Conduct&lt;/h2&gt; 
&lt;p&gt;Before you begin coding and collaborating, please read our &lt;a href="https://github.com/novuhq/novu/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; thoroughly to understand the standards (that you are required to adhere to) for community engagement. As part of our open-source community, we hold ourselves and other contributors to a high standard of communication. As a participant and contributor to this project, you agree to abide by our &lt;a href="https://github.com/novuhq/novu/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;💻 Need Help?&lt;/h2&gt; 
&lt;p&gt;We are more than happy to help you. If you are getting any errors or facing problems while working on this project, join our &lt;a href="https://discord.novu.co"&gt;Discord server&lt;/a&gt; and ask for help. We are open to discussing anything related to the project.&lt;/p&gt; 
&lt;h2&gt;🔗 Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://novu.co?utm_campaign=github-readme"&gt;Home page&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/novuhq/novu/raw/main/CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.novu.co/community/run-in-local-machine?utm_campaign=github-readme"&gt;Run Novu locally&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛡️ License&lt;/h2&gt; 
&lt;p&gt;Novu is a commercial open source company, which means some parts of this open source repository require a commercial license. The concept is called "Open Core," where the core technology is fully open source, licensed under MIT license, and the enterprise code is covered under a commercial license ("/enterprise" Enterprise Edition). Enterprise features are built by the core engineering team of Novu which is hired in full-time.&lt;/p&gt; 
&lt;p&gt;The following modules and folders are licensed under the enterprise license:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;enterprise&lt;/code&gt; folder at the root of the project and all of their subfolders and modules&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;apps/web/src/ee&lt;/code&gt; folder and all of their subfolders and modules&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;apps/dashboard/src/ee&lt;/code&gt; folder and all of their subfolders and modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;💪 Thanks to all of our contributors&lt;/h2&gt; 
&lt;p&gt;Thanks a lot for spending your time helping Novu grow. Keep rocking 🥂&lt;/p&gt; 
&lt;a href="https://novu.co/contributors?utm_source=github"&gt; &lt;img src="https://contributors-img.web.app/image?repo=novuhq/novu" alt="Contributors" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>idosal/mcp-ui</title>
      <link>https://github.com/idosal/mcp-ui</link>
      <description>&lt;p&gt;SDK for UI over MCP. Create next-gen UI experiences!&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;📦 Model Context Protocol UI SDK&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img width="250" alt="image" src="https://github.com/user-attachments/assets/65b9698f-990f-4846-9b2d-88de91d53d4d" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/@mcp-ui/server"&gt;&lt;img src="https://img.shields.io/npm/v/@mcp-ui/server?label=server&amp;amp;color=green" alt="Server Version" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@mcp-ui/client"&gt;&lt;img src="https://img.shields.io/npm/v/@mcp-ui/client?label=client&amp;amp;color=blue" alt="Client Version" /&gt;&lt;/a&gt; &lt;a href="https://rubygems.org/gems/mcp_ui_server"&gt;&lt;img src="https://img.shields.io/gem/v/mcp_ui_server" alt="Ruby Server SDK Version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/CEAG4KW7ZH"&gt;&lt;img src="https://img.shields.io/discord/1401195140436983879?logo=discord&amp;amp;label=discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://gitmcp.io/idosal/mcp-ui"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/mcp-ui" alt="MCP Documentation" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-whats-mcp-ui"&gt;What's mcp-ui?&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-core-concepts"&gt;Core Concepts&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-installation"&gt;Installation&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-getting-started"&gt;Getting Started&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-walkthrough"&gt;Walkthrough&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-examples"&gt;Examples&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-security"&gt;Security&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-roadmap"&gt;Roadmap&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/#-license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;mcp-ui&lt;/code&gt;&lt;/strong&gt; brings interactive web components to the &lt;a href="https://modelcontextprotocol.io/introduction"&gt;Model Context Protocol&lt;/a&gt; (MCP). Deliver rich, dynamic UI resources directly from your MCP server to be rendered by the client. Take AI interaction to the next level!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;This project is an experimental community playground for MCP UI ideas. Expect rapid iteration and enhancements!&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; 
 &lt;video src="https://github.com/user-attachments/assets/7180c822-2dd9-4f38-9d3e-b67679509483"&gt;&lt;/video&gt; &lt;/p&gt; 
&lt;h2&gt;💡 What's &lt;code&gt;mcp-ui&lt;/code&gt;?&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;mcp-ui&lt;/code&gt; is a collection of SDKs comprising:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;@mcp-ui/server&lt;/code&gt; (TypeScript)&lt;/strong&gt;: Utilities to generate UI resources (&lt;code&gt;UIResource&lt;/code&gt;) on your MCP server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;@mcp-ui/client&lt;/code&gt; (TypeScript)&lt;/strong&gt;: UI components (e.g., &lt;code&gt;&amp;lt;UIResourceRenderer /&amp;gt;&lt;/code&gt;) to render the UI resources and handle their events.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;mcp_ui_server&lt;/code&gt; (Ruby)&lt;/strong&gt;: Utilities to generate UI resources on your MCP server in a Ruby environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Together, they let you define reusable UI snippets on the server side, seamlessly and securely render them in the client, and react to their actions in the MCP host environment.&lt;/p&gt; 
&lt;h2&gt;✨ Core Concepts&lt;/h2&gt; 
&lt;p&gt;In essence, by using &lt;code&gt;mcp-ui&lt;/code&gt; SDKs, servers and hosts can agree on contracts that enable them to create and render interactive UI snippets (as a path to a standardized UI approach in MCP).&lt;/p&gt; 
&lt;h3&gt;UI Resource&lt;/h3&gt; 
&lt;p&gt;The primary payload returned from the server to the client is the &lt;code&gt;UIResource&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;interface UIResource {
  type: 'resource';
  resource: {
    uri: string;       // e.g., ui://component/id
    mimeType: 'text/html' | 'text/uri-list' | 'application/vnd.mcp-ui.remote-dom'; // text/html for HTML content, text/uri-list for URL content, application/vnd.mcp-ui.remote-dom for remote-dom content (Javascript)
    text?: string;      // Inline HTML, external URL, or remote-dom script
    blob?: string;      // Base64-encoded HTML, URL, or remote-dom script
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/strong&gt;: Unique identifier for caching and routing 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;ui://…&lt;/code&gt; — UI resources (rendering method determined by mimeType)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;mimeType&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;text/html&lt;/code&gt; for HTML content (iframe srcDoc), &lt;code&gt;text/uri-list&lt;/code&gt; for URL content (iframe src), &lt;code&gt;application/vnd.mcp-ui.remote-dom&lt;/code&gt; for remote-dom content (Javascript) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;MCP-UI requires a single URL&lt;/strong&gt;: While &lt;code&gt;text/uri-list&lt;/code&gt; format supports multiple URLs, MCP-UI uses only the first valid &lt;code&gt;http/s&lt;/code&gt; URL and warns if additional URLs are found&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;text&lt;/code&gt; vs. &lt;code&gt;blob&lt;/code&gt;&lt;/strong&gt;: Choose &lt;code&gt;text&lt;/code&gt; for simple strings; use &lt;code&gt;blob&lt;/code&gt; for larger or encoded content.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Resource Renderer&lt;/h3&gt; 
&lt;p&gt;The UI Resource is rendered in the &lt;code&gt;&amp;lt;UIResourceRenderer /&amp;gt;&lt;/code&gt; component. It automatically detects the resource type and renders the appropriate component.&lt;/p&gt; 
&lt;p&gt;It is available as a React component and as a Web Component.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;React Component&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;It accepts the following props:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;resource&lt;/code&gt;&lt;/strong&gt;: The resource object from an MCP Tool response. It must include &lt;code&gt;uri&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and content (&lt;code&gt;text&lt;/code&gt;, &lt;code&gt;blob&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;onUIAction&lt;/code&gt;&lt;/strong&gt;: Optional callback for handling UI actions from the resource: &lt;pre&gt;&lt;code class="language-typescript"&gt;{ type: 'tool', payload: { toolName: string, params: Record&amp;lt;string, unknown&amp;gt; }, messageId?: string } |
{ type: 'intent', payload: { intent: string, params: Record&amp;lt;string, unknown&amp;gt; }, messageId?: string } |
{ type: 'prompt', payload: { prompt: string }, messageId?: string } |
{ type: 'notify', payload: { message: string }, messageId?: string } |
{ type: 'link', payload: { url: string }, messageId?: string }
&lt;/code&gt;&lt;/pre&gt; When actions include a &lt;code&gt;messageId&lt;/code&gt;, the iframe automatically receives response messages for asynchronous handling.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;supportedContentTypes&lt;/code&gt;&lt;/strong&gt;: Optional array to restrict which content types are allowed (&lt;code&gt;['rawHtml', 'externalUrl', 'remoteDom']&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;htmlProps&lt;/code&gt;&lt;/strong&gt;: Optional props for the internal &lt;code&gt;&amp;lt;HTMLResourceRenderer&amp;gt;&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;style&lt;/code&gt;&lt;/strong&gt;: Optional custom styles for the iframe&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;iframeProps&lt;/code&gt;&lt;/strong&gt;: Optional props passed to the iframe element&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;iframeRenderData&lt;/code&gt;&lt;/strong&gt;: Optional &lt;code&gt;Record&amp;lt;string, unknown&amp;gt;&lt;/code&gt; to pass data to the iframe upon rendering. This enables advanced use cases where the parent application needs to provide initial state or configuration to the sandboxed iframe content.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;autoResizeIframe&lt;/code&gt;&lt;/strong&gt;: Optional &lt;code&gt;boolean | { width?: boolean; height?: boolean }&lt;/code&gt; to automatically resize the iframe to the size of the content.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;remoteDomProps&lt;/code&gt;&lt;/strong&gt;: Optional props for the internal &lt;code&gt;&amp;lt;RemoteDOMResourceRenderer&amp;gt;&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;library&lt;/code&gt;&lt;/strong&gt;: Optional component library for Remote DOM resources (defaults to &lt;code&gt;basicComponentLibrary&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;code&gt;remoteElements&lt;/code&gt;&lt;/strong&gt;: remote element definitions for Remote DOM resources.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Web Component&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Web Component is available as &lt;code&gt;&amp;lt;ui-resource-renderer&amp;gt;&lt;/code&gt;. It accepts the same props as the React component, but they must be passed as strings.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;ui-resource-renderer
  resource='{ "mimeType": "text/html", "text": "&amp;lt;h2&amp;gt;Hello from the Web Component!&amp;lt;/h2&amp;gt;" }'
&amp;gt;&amp;lt;/ui-resource-renderer&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;onUIAction&lt;/code&gt; prop can be handled by attaching an event listener to the component:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;const renderer = document.querySelector('ui-resource-renderer');
renderer.addEventListener('onUIAction', (event) =&amp;gt; {
  console.log('Action:', event.detail);
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Web Component is available in the &lt;code&gt;@mcp-ui/client&lt;/code&gt; package at &lt;code&gt;dist/ui-resource-renderer.wc.js&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Supported Resource Types&lt;/h3&gt; 
&lt;h4&gt;HTML (&lt;code&gt;text/html&lt;/code&gt; and &lt;code&gt;text/uri-list&lt;/code&gt;)&lt;/h4&gt; 
&lt;p&gt;Rendered using the internal &lt;code&gt;&amp;lt;HTMLResourceRenderer /&amp;gt;&lt;/code&gt; component, which displays content inside an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;. This is suitable for self-contained HTML or embedding external apps.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;mimeType&lt;/code&gt;&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;text/html&lt;/code&gt;: Renders inline HTML content.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;text/uri-list&lt;/code&gt;: Renders an external URL. MCP-UI uses the first valid &lt;code&gt;http/s&lt;/code&gt; URL.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Remote DOM (&lt;code&gt;application/vnd.mcp-ui.remote-dom&lt;/code&gt;)&lt;/h4&gt; 
&lt;p&gt;Rendered using the internal &lt;code&gt;&amp;lt;RemoteDOMResourceRenderer /&amp;gt;&lt;/code&gt; component, which utilizes Shopify's &lt;a href="https://github.com/Shopify/remote-dom"&gt;&lt;code&gt;remote-dom&lt;/code&gt;&lt;/a&gt;. The server responds with a script that describes the UI and events. On the host, the script is securely rendered in a sandboxed iframe, and the UI changes are communicated to the host in JSON, where they're rendered using the host's component library. This is more flexible than iframes and allows for UIs that match the host's look-and-feel.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;mimeType&lt;/code&gt;&lt;/strong&gt;: &lt;code&gt;application/vnd.mcp-ui.remote-dom+javascript; framework={react | webcomponents}&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;UI Action&lt;/h3&gt; 
&lt;p&gt;UI snippets must be able to interact with the agent. In &lt;code&gt;mcp-ui&lt;/code&gt;, this is done by hooking into events sent from the UI snippet and reacting to them in the host (see &lt;code&gt;onUIAction&lt;/code&gt; prop). For example, an HTML may trigger a tool call when a button is clicked by sending an event which will be caught handled by the client.&lt;/p&gt; 
&lt;h2&gt;🏗️ Installation&lt;/h2&gt; 
&lt;h3&gt;TypeScript&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# using npm
npm install @mcp-ui/server @mcp-ui/client

# or pnpm
pnpm add @mcp-ui/server @mcp-ui/client

# or yarn
yarn add @mcp-ui/server @mcp-ui/client
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ruby&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gem install mcp_ui_server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;You can use &lt;a href="https://gitmcp.io/idosal/mcp-ui"&gt;GitMCP&lt;/a&gt; to give your IDE access to &lt;code&gt;mcp-ui&lt;/code&gt;'s latest documentation!&lt;/p&gt; 
&lt;h3&gt;TypeScript&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Server-side&lt;/strong&gt;: Build your UI resources&lt;/p&gt; &lt;pre&gt;&lt;code class="language-ts"&gt;import { createUIResource } from '@mcp-ui/server';
import {
 createRemoteComponent,
 createRemoteDocument,
 createRemoteText,
} from '@remote-dom/core';

// Inline HTML
const htmlResource = createUIResource({
  uri: 'ui://greeting/1',
  content: { type: 'rawHtml', htmlString: '&amp;lt;p&amp;gt;Hello, MCP UI!&amp;lt;/p&amp;gt;' },
  encoding: 'text',
});

// External URL
const externalUrlResource = createUIResource({
  uri: 'ui://greeting/1',
  content: { type: 'externalUrl', iframeUrl: 'https://example.com' },
  encoding: 'text',
});

// remote-dom
const remoteDomResource = createUIResource({
  uri: 'ui://remote-component/action-button',
  content: {
    type: 'remoteDom',
    script: `
     const button = document.createElement('ui-button');
     button.setAttribute('label', 'Click me for a tool call!');
     button.addEventListener('press', () =&amp;gt; {
       window.parent.postMessage({ type: 'tool', payload: { toolName: 'uiInteraction', params: { action: 'button-click', from: 'remote-dom' } } }, '*');
     });
     root.appendChild(button);
     `,
    framework: 'react', // or 'webcomponents'
  },
  encoding: 'text',
});
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Client-side&lt;/strong&gt;: Render in your MCP host&lt;/p&gt; &lt;pre&gt;&lt;code class="language-tsx"&gt;import React from 'react';
import { UIResourceRenderer } from '@mcp-ui/client';

function App({ mcpResource }) {
  if (
    mcpResource.type === 'resource' &amp;amp;&amp;amp;
    mcpResource.resource.uri?.startsWith('ui://')
  ) {
    return (
      &amp;lt;UIResourceRenderer
        resource={mcpResource.resource}
        onUIAction={(result) =&amp;gt; {
          console.log('Action:', result);
        }}
      /&amp;gt;
    );
  }
  return &amp;lt;p&amp;gt;Unsupported resource&amp;lt;/p&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Ruby&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Server-side&lt;/strong&gt;: Build your UI resources&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ruby"&gt;require 'mcp_ui_server'

# Inline HTML
html_resource = McpUiServer.create_ui_resource(
  uri: 'ui://greeting/1',
  content: { type: :raw_html, htmlString: '&amp;lt;p&amp;gt;Hello, from Ruby!&amp;lt;/p&amp;gt;' },
  encoding: :text
)

# External URL
external_url_resource = McpUiServer.create_ui_resource(
  uri: 'ui://greeting/2',
  content: { type: :external_url, iframeUrl: 'https://example.com' },
  encoding: :text
)

# remote-dom
remote_dom_resource = McpUiServer.create_ui_resource(
  uri: 'ui://remote-component/action-button',
  content: {
    type: :remote_dom,
    script: "
     const button = document.createElement('ui-button');
     button.setAttribute('label', 'Click me from Ruby!');
     button.addEventListener('press', () =&amp;gt; {
       window.parent.postMessage({ type: 'tool', payload: { toolName: 'uiInteraction', params: { action: 'button-click', from: 'ruby-remote-dom' } } }, '*');
     });
     root.appendChild(button);
     ",
    framework: :react,
  },
  encoding: :text
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;🚶 Walkthrough&lt;/h2&gt; 
&lt;p&gt;For a detailed, simple, step-by-step guide on how to integrate &lt;code&gt;mcp-ui&lt;/code&gt; into your own server, check out the full server walkthroughs on the &lt;a href="https://mcpui.dev"&gt;mcp-ui documentation site&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://mcpui.dev/guide/server/typescript/walkthrough"&gt;TypeScript Server Walkthrough&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://mcpui.dev/guide/server/ruby/walkthrough"&gt;Ruby Server Walkthrough&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These guides will show you how to add a &lt;code&gt;mcp-ui&lt;/code&gt; endpoint to an existing server, create tools that return UI resources, and test your setup with the &lt;code&gt;ui-inspector&lt;/code&gt;!&lt;/p&gt; 
&lt;h2&gt;🌍 Examples&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Client Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idosal/ui-inspector"&gt;ui-inspector&lt;/a&gt; - inspect local &lt;code&gt;mcp-ui&lt;/code&gt;-enabled servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idosal/scira-mcp-ui-chat"&gt;MCP-UI Chat&lt;/a&gt; - interactive chat built with the &lt;code&gt;mcp-ui&lt;/code&gt; client. Check out the &lt;a href="https://scira-mcp-chat-git-main-idosals-projects.vercel.app/"&gt;hosted version&lt;/a&gt;!&lt;/li&gt; 
 &lt;li&gt;MCP-UI RemoteDOM Playground (&lt;code&gt;examples/remote-dom-demo&lt;/code&gt;) - local demo app to test RemoteDOM resources (intended for hosts)&lt;/li&gt; 
 &lt;li&gt;MCP-UI Web Component Demo (&lt;code&gt;examples/wc-demo&lt;/code&gt;) - local demo app to test the Web Component&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Server Examples&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;: A &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/examples/server"&gt;full-featured server&lt;/a&gt; that is deployed to a hosted environment for easy testing. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/examples/typescript-server-demo"&gt;&lt;code&gt;typescript-server-demo&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;: A simple Typescript server that demonstrates how to generate UI resources.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;server&lt;/strong&gt;: A &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/examples/server"&gt;full-featured Typescript server&lt;/a&gt; that is deployed to a hosted Cloudflare environment for easy testing. 
    &lt;ul&gt; 
     &lt;li&gt;&lt;strong&gt;HTTP Streaming&lt;/strong&gt;: &lt;code&gt;https://remote-mcp-server-authless.idosalomon.workers.dev/mcp&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;strong&gt;SSE&lt;/strong&gt;: &lt;code&gt;https://remote-mcp-server-authless.idosalomon.workers.dev/sse&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruby&lt;/strong&gt;: A barebones &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/examples/ruby-server-demo"&gt;demo server&lt;/a&gt; that shows how to use &lt;code&gt;mcp_ui_server&lt;/code&gt; and &lt;code&gt;mcp&lt;/code&gt; gems together.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Drop those URLs into any MCP-compatible host to see &lt;code&gt;mcp-ui&lt;/code&gt; in action. For a supported local inspector, see the &lt;a href="https://github.com/idosal/ui-inspector"&gt;ui-inspector&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🔒 Security&lt;/h2&gt; 
&lt;p&gt;Host and user security is one of &lt;code&gt;mcp-ui&lt;/code&gt;'s primary concerns. In all content types, the remote code is executed in a sandboxed iframe.&lt;/p&gt; 
&lt;h2&gt;🛣️ Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Add online playground&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Expand UI Action API (beyond tool calls)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Support Web Components&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Support Remote-DOM&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Add component libraries (in progress)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Add SDKs for additional programming languages (in progress; Ruby available)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Support additional frontend frameworks&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Add declarative UI content type&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Support generative UI?&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Core Team&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;mcp-ui&lt;/code&gt; is a project by &lt;a href="https://x.com/idosal1"&gt;Ido Salomon&lt;/a&gt;, in collaboration with &lt;a href="https://x.com/liadyosef"&gt;Liad Yosef&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions, ideas, and bug reports are welcome! See the &lt;a href="https://github.com/idosal/mcp-ui/raw/main/.github/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;Apache License 2.0 © &lt;a href="https://raw.githubusercontent.com/idosal/mcp-ui/main/LICENSE"&gt;The MCP-UI Authors&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;This project is provided "as is", without warranty of any kind. The &lt;code&gt;mcp-ui&lt;/code&gt; authors and contributors shall not be held liable for any damages, losses, or issues arising from the use of this software. Use at your own risk.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cline/cline</title>
      <link>https://github.com/cline/cline</link>
      <description>&lt;p&gt;Autonomous coding agent right in your IDE, capable of creating/editing files, executing commands, using the browser, and more with your permission every step of the way.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
 &lt;sub&gt; English | &lt;a href="https://github.com/cline/cline/raw/main/locales/es/README.md" target="_blank"&gt;Español&lt;/a&gt; | &lt;a href="https://github.com/cline/cline/raw/main/locales/de/README.md" target="_blank"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://github.com/cline/cline/raw/main/locales/ja/README.md" target="_blank"&gt;日本語&lt;/a&gt; | &lt;a href="https://github.com/cline/cline/raw/main/locales/zh-cn/README.md" target="_blank"&gt;简体中文&lt;/a&gt; | &lt;a href="https://github.com/cline/cline/raw/main/locales/zh-tw/README.md" target="_blank"&gt;繁體中文&lt;/a&gt; | &lt;a href="https://github.com/cline/cline/raw/main/locales/ko/README.md" target="_blank"&gt;한국어&lt;/a&gt; &lt;/sub&gt;
&lt;/div&gt; 
&lt;h1&gt;Cline – #1 on OpenRouter&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://media.githubusercontent.com/media/cline/cline/main/assets/docs/demo.gif" width="100%" /&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt;
    &lt;td align="center"&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev" target="_blank"&gt;&lt;strong&gt;Download on VS Marketplace&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align="center"&gt; &lt;a href="https://discord.gg/cline" target="_blank"&gt;&lt;strong&gt;Discord&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align="center"&gt; &lt;a href="https://www.reddit.com/r/cline/" target="_blank"&gt;&lt;strong&gt;r/cline&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align="center"&gt; &lt;a href="https://github.com/cline/cline/discussions/categories/feature-requests?discussions_q=is%3Aopen+category%3A%22Feature+Requests%22+sort%3Atop" target="_blank"&gt;&lt;strong&gt;Feature Requests&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
    &lt;td align="center"&gt; &lt;a href="https://docs.cline.bot/getting-started/for-new-coders" target="_blank"&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt;
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;p&gt;Meet Cline (pronounced /klaɪn/, like "Klein"), an AI assistant that can use your &lt;strong&gt;CLI&lt;/strong&gt; a&lt;strong&gt;N&lt;/strong&gt;d &lt;strong&gt;E&lt;/strong&gt;ditor.&lt;/p&gt; 
&lt;p&gt;Thanks to&amp;nbsp;&lt;a href="https://www.anthropic.com/claude/sonnet"&gt;Claude 3.7 Sonnet's agentic coding capabilities&lt;/a&gt;,&amp;nbsp;Cline can handle complex software development tasks step-by-step. With tools that let him create &amp;amp; edit files, explore large projects, use the browser, and execute terminal commands (after you grant permission), he can assist you in ways that go beyond code completion or tech support. Cline can even use the Model Context Protocol (MCP) to create new tools and extend his own capabilities. While autonomous AI scripts traditionally run in sandboxed environments, this extension provides a human-in-the-loop GUI to approve every file change and terminal command, providing a safe and accessible way to explore the potential of agentic AI.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enter your task and add images to convert mockups into functional apps or fix bugs with screenshots.&lt;/li&gt; 
 &lt;li&gt;Cline starts by analyzing your file structure &amp;amp; source code ASTs, running regex searches, and reading relevant files to get up to speed in existing projects. By carefully managing what information is added to context, Cline can provide valuable assistance even for large, complex projects without overwhelming the context window.&lt;/li&gt; 
 &lt;li&gt;Once Cline has the information he needs, he can: 
  &lt;ul&gt; 
   &lt;li&gt;Create and edit files + monitor linter/compiler errors along the way, letting him proactively fix issues like missing imports and syntax errors on his own.&lt;/li&gt; 
   &lt;li&gt;Execute commands directly in your terminal and monitor their output as he works, letting him e.g., react to dev server issues after editing a file.&lt;/li&gt; 
   &lt;li&gt;For web development tasks, Cline can launch the site in a headless browser, click, type, scroll, and capture screenshots + console logs, allowing him to fix runtime errors and visual bugs.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;When a task is completed, Cline will present the result to you with a terminal command like&amp;nbsp;&lt;code&gt;open -a "Google Chrome" index.html&lt;/code&gt;, which you run with a click of a button.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Use the&amp;nbsp;&lt;code&gt;CMD/CTRL + Shift + P&lt;/code&gt;&amp;nbsp;shortcut to open the command palette and type&amp;nbsp;"Cline: Open In New Tab"&amp;nbsp;to open the extension as a tab in your editor. This lets you use Cline side-by-side with your file explorer, and see how he changes your workspace more clearly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;img align="right" width="340" src="https://github.com/user-attachments/assets/3cf21e04-7ce9-4d22-a7b9-ba2c595e88a4" /&gt; 
&lt;h3&gt;Use any API and Model&lt;/h3&gt; 
&lt;p&gt;Cline supports API providers like OpenRouter, Anthropic, OpenAI, Google Gemini, AWS Bedrock, Azure, GCP Vertex, Cerebras and Groq. You can also configure any OpenAI compatible API, or use a local model through LM Studio/Ollama. If you're using OpenRouter, the extension fetches their latest model list, allowing you to use the newest models as soon as they're available.&lt;/p&gt; 
&lt;p&gt;The extension also keeps track of total tokens and API usage cost for the entire task loop and individual requests, keeping you informed of spend every step of the way.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width="2000" height="0" src="https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;img align="left" width="370" src="https://github.com/user-attachments/assets/81be79a8-1fdb-4028-9129-5fe055e01e76" /&gt; 
&lt;h3&gt;Run Commands in Terminal&lt;/h3&gt; 
&lt;p&gt;Thanks to the new &lt;a href="https://code.visualstudio.com/updates/v1_93#_terminal-shell-integration-api"&gt;shell integration updates in VSCode v1.93&lt;/a&gt;, Cline can execute commands directly in your terminal and receive the output. This allows him to perform a wide range of tasks, from installing packages and running build scripts to deploying applications, managing databases, and executing tests, all while adapting to your dev environment &amp;amp; toolchain to get the job done right.&lt;/p&gt; 
&lt;p&gt;For long running processes like dev servers, use the "Proceed While Running" button to let Cline continue in the task while the command runs in the background. As Cline works he’ll be notified of any new terminal output along the way, letting him react to issues that may come up, such as compile-time errors when editing files.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width="2000" height="0" src="https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;img align="right" width="400" src="https://github.com/user-attachments/assets/c5977833-d9b8-491e-90f9-05f9cd38c588" /&gt; 
&lt;h3&gt;Create and Edit Files&lt;/h3&gt; 
&lt;p&gt;Cline can create and edit files directly in your editor, presenting you a diff view of the changes. You can edit or revert Cline's changes directly in the diff view editor, or provide feedback in chat until you're satisfied with the result. Cline also monitors linter/compiler errors (missing imports, syntax errors, etc.) so he can fix issues that come up along the way on his own.&lt;/p&gt; 
&lt;p&gt;All changes made by Cline are recorded in your file's Timeline, providing an easy way to track and revert modifications if needed.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width="2000" height="0" src="https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;img align="left" width="370" src="https://github.com/user-attachments/assets/bc2e85ba-dfeb-4fe6-9942-7cfc4703cbe5" /&gt; 
&lt;h3&gt;Use the Browser&lt;/h3&gt; 
&lt;p&gt;With Claude 3.5 Sonnet's new &lt;a href="https://www.anthropic.com/news/3-5-models-and-computer-use"&gt;Computer Use&lt;/a&gt; capability, Cline can launch a browser, click elements, type text, and scroll, capturing screenshots and console logs at each step. This allows for interactive debugging, end-to-end testing, and even general web use! This gives him autonomy to fixing visual bugs and runtime issues without you needing to handhold and copy-pasting error logs yourself.&lt;/p&gt; 
&lt;p&gt;Try asking Cline to "test the app", and watch as he runs a command like &lt;code&gt;npm run dev&lt;/code&gt;, launches your locally running dev server in a browser, and performs a series of tests to confirm that everything works. &lt;a href="https://x.com/sdrzn/status/1850880547825823989"&gt;See a demo here.&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width="2000" height="0" src="https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;img align="right" width="350" src="https://github.com/user-attachments/assets/ac0efa14-5c1f-4c26-a42d-9d7c56f5fadd" /&gt; 
&lt;h3&gt;"add a tool that..."&lt;/h3&gt; 
&lt;p&gt;Thanks to the &lt;a href="https://github.com/modelcontextprotocol"&gt;Model Context Protocol&lt;/a&gt;, Cline can extend his capabilities through custom tools. While you can use &lt;a href="https://github.com/modelcontextprotocol/servers"&gt;community-made servers&lt;/a&gt;, Cline can instead create and install tools tailored to your specific workflow. Just ask Cline to "add a tool" and he will handle everything, from creating a new MCP server to installing it into the extension. These custom tools then become part of Cline's toolkit, ready to use in future tasks.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;"add a tool that fetches Jira tickets": Retrieve ticket ACs and put Cline to work&lt;/li&gt; 
 &lt;li&gt;"add a tool that manages AWS EC2s": Check server metrics and scale instances up or down&lt;/li&gt; 
 &lt;li&gt;"add a tool that pulls the latest PagerDuty incidents": Fetch details and ask Cline to fix bugs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width="2000" height="0" src="https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;img align="left" width="360" src="https://github.com/user-attachments/assets/7fdf41e6-281a-4b4b-ac19-020b838b6970" /&gt; 
&lt;h3&gt;Add Context&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@url&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Paste in a URL for the extension to fetch and convert to markdown, useful when you want to give Cline the latest docs&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@problems&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Add workspace errors and warnings ('Problems' panel) for Cline to fix&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@file&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Adds a file's contents so you don't have to waste API requests approving read file (+ type to search files)&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;@folder&lt;/code&gt;:&lt;/strong&gt;&amp;nbsp;Adds folder's files all at once to speed up your workflow even more&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width="2000" height="0" src="https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;img align="right" width="350" src="https://github.com/user-attachments/assets/140c8606-d3bf-41b9-9a1f-4dbf0d4c90cb" /&gt; 
&lt;h3&gt;Checkpoints: Compare and Restore&lt;/h3&gt; 
&lt;p&gt;As Cline works through a task, the extension takes a snapshot of your workspace at each step. You can use the 'Compare' button to see a diff between the snapshot and your current workspace, and the 'Restore' button to roll back to that point.&lt;/p&gt; 
&lt;p&gt;For example, when working with a local web server, you can use 'Restore Workspace Only' to quickly test different versions of your app, then use 'Restore Task and Workspace' when you find the version you want to continue building from. This lets you safely explore different approaches without losing progress.&lt;/p&gt; 
&lt;!-- Transparent pixel to create line break after floating image --&gt; 
&lt;p&gt;&lt;img width="2000" height="0" src="https://github.com/user-attachments/assets/ee14e6f7-20b8-4391-9091-8e8e25561929" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;To contribute to the project, start with our &lt;a href="https://raw.githubusercontent.com/cline/cline/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; to learn the basics. You can also join our &lt;a href="https://discord.gg/cline"&gt;Discord&lt;/a&gt; to chat with other contributors in the &lt;code&gt;#contributors&lt;/code&gt; channel. If you're looking for full-time work, check out our open positions on our &lt;a href="https://cline.bot/join-us"&gt;careers page&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/cline/cline/main/LICENSE"&gt;Apache 2.0 © 2025 Cline Bot Inc.&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>github/docs</title>
      <link>https://github.com/github/docs</link>
      <description>&lt;p&gt;The open-source repo for docs.github.com&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitHub Docs 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/codespaces/new/?repo=github"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Build GitHub Docs On Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the documentation website code and Markdown source files for &lt;a href="https://docs.github.com"&gt;docs.github.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;GitHub's Docs team works on pre-production content in a private repo that regularly syncs with this public repo.&lt;/p&gt; 
&lt;p&gt;Use the table of contents icon &lt;img alt="Table of contents icon" src="https://raw.githubusercontent.com/github/docs/main/contributing/images/table-of-contents.png" width="25" height="25" /&gt; on the top right corner of this document to navigate to a specific section quickly.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We accept different types of contributions, including some that don't require you to write a single line of code. For detailed instructions on how to get started with our project, see &lt;a href="https://docs.github.com/en/contributing/collaborating-on-github-docs/about-contributing-to-github-docs"&gt;About contributing to GitHub Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Ways to contribute&lt;/h3&gt; 
&lt;p&gt;On the GitHub Docs site, you can contribute by clicking the &lt;strong&gt;Make a contribution&lt;/strong&gt; button at the bottom of the page to open a pull request for quick fixes like typos, updates, or link fixes.&lt;/p&gt; 
&lt;p&gt;You can also contribute by creating a local environment or opening a Codespace. For more information, see &lt;a href="https://docs.github.com/en/contributing/setting-up-your-environment-to-work-on-github-docs"&gt;Setting up your environment to work on GitHub Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;img alt="Contribution call-to-action" src="https://raw.githubusercontent.com/github/docs/main/contributing/images/contribution_cta.png" width="400" /&gt; 
&lt;p&gt;For more complex contributions, please &lt;a href="https://github.com/github/docs-content/issues/new/choose"&gt;open an issue in the docs-content repo&lt;/a&gt; describing the changes you'd like to see.&lt;/p&gt; 
&lt;p&gt;If you're looking for a way to contribute, you can scan through our &lt;a href="https://github.com/github/docs/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22"&gt;help wanted board&lt;/a&gt; to find open issues already approved for work.&lt;/p&gt; 
&lt;h3&gt;And that's it!&lt;/h3&gt; 
&lt;p&gt;If you're having trouble with your GitHub account, contact &lt;a href="https://support.github.com"&gt;Support&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;That's how you can easily become a member of the GitHub Docs community. &lt;span&gt;✨&lt;/span&gt;&lt;/p&gt; 
&lt;h2&gt;READMEs&lt;/h2&gt; 
&lt;p&gt;In addition to the README you're reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/content/README.md"&gt;content/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/content/graphql/README.md"&gt;content/graphql/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/content/rest/README.md"&gt;content/rest/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/contributing/README.md"&gt;contributing/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/data/README.md"&gt;data/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/data/reusables/README.md"&gt;data/reusables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/data/variables/README.md"&gt;data/variables/README.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/github/docs/main/src/README.md"&gt;src/README.md&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The GitHub product documentation in the assets, content, and data folders are licensed under a &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE"&gt;CC-BY license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All other code in this repository is licensed under the &lt;a href="https://raw.githubusercontent.com/github/docs/main/LICENSE-CODE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When using the GitHub logos, be sure to follow the &lt;a href="https://github.com/logos"&gt;GitHub logo guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Thanks &lt;span&gt;💜&lt;/span&gt;&lt;/h2&gt; 
&lt;p&gt;Thanks for all your contributions and efforts towards improving the GitHub documentation. We thank you for being part of our &lt;span&gt;✨&lt;/span&gt; community &lt;span&gt;✨&lt;/span&gt;!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vercel/examples</title>
      <link>https://github.com/vercel/examples</link>
      <description>&lt;p&gt;Enjoy our curated collection of examples and solutions. Use these patterns to build your own robust and scalable applications.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://vercel.com"&gt; &lt;img src="https://assets.vercel.com/image/upload/v1588805858/repositories/vercel/logo.png" height="96" /&gt; &lt;/a&gt;&lt;/p&gt;
&lt;h3 align="center"&gt;&lt;a href="https://vercel.com"&gt;Vercel Examples&lt;/a&gt;&lt;/h3&gt;
&lt;a href="https://vercel.com"&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions"&gt;Solutions&lt;/a&gt; – Demos, reference architecture, and best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/vercel/examples/main/starter"&gt;Starter&lt;/a&gt; – Functional applications which can act as a starting point&lt;/li&gt; 
 &lt;li&gt;And more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Vercel Templates&lt;/h2&gt; 
&lt;p&gt;Multiple examples are being featured in &lt;a href="https://vercel.com/templates"&gt;Vercel's Templates&lt;/a&gt;, visit that page for more advanced filtering options.&lt;/p&gt; 
&lt;h3&gt;For Vercelians&lt;/h3&gt; 
&lt;p&gt;Examples that have front matter metadata will create a new Draft template in &lt;a href="https://app.contentful.com"&gt;Contentful&lt;/a&gt;, for more steps on how to publish a template, read &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/publishing-templates.md"&gt;Publishing Templates&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Adding a new example&lt;/h2&gt; 
&lt;p&gt;To quickly start contributing with a new example, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm new-example
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the script above isn't used, make sure the example complies with the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;It must have a &lt;code&gt;.gitignore&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.gitignore"&gt;plop-templates/example/.gitignore&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;package.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/package.json"&gt;plop-templates/example/package.json&lt;/a&gt; (usage of Next.js is optional). The license should be &lt;code&gt;MIT&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;It must have a &lt;code&gt;README.md&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/README.md"&gt;plop-templates/example/README.md&lt;/a&gt;. The example has to be able to include a demo URL (the Vercel team will deploy it!) and if it requires environment variables, it must have a &lt;code&gt;.env.example&lt;/code&gt; file and instructions on how to set them up. Take &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt; as an example. 
  &lt;ul&gt; 
   &lt;li&gt;To customize the Vercel Deploy Button take a look at the &lt;a href="https://vercel.com/docs/deploy-button"&gt;docs&lt;/a&gt;, useful if the deployment has required environment variables.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;If using Next.js, it must have a &lt;code&gt;.eslintrc.json&lt;/code&gt; similar to &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example/.eslintrc.json"&gt;plop-templates/example/.eslintrc.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;All Next.js examples should be using the same styling and layout provided by &lt;code&gt;@vercel/examples-ui&lt;/code&gt;, its usage can be seen in the &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/plop-templates/example"&gt;plop template&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adding a template&lt;/h3&gt; 
&lt;p&gt;If you would like the example to be featured in &lt;a href="https://vercel.com/templates"&gt;vercel.com/templates&lt;/a&gt; then also add the front matter metadata to the top of the readme, like in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/edge-middleware/bot-protection-datadome/README.md"&gt;bot-protection-datadome&lt;/a&gt;. To know all the possible values for each metadata take a look at &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/internal/fields.json"&gt;&lt;code&gt;internal/fields.json&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to add related templates to your template, copy the &lt;code&gt;slug&lt;/code&gt; from the other template into the &lt;code&gt;relatedTemplates&lt;/code&gt; field, for example for &lt;a href="https://vercel.com/templates/next.js/monorepo-turborepo"&gt;vercel.com/templates/next.js/monorepo-turborepo&lt;/a&gt; the slug is &lt;code&gt;monorepo-turborepo&lt;/code&gt;, as written in &lt;a href="https://raw.githubusercontent.com/vercel/examples/main/solutions/monorepo/README.md"&gt;solutions/monorepo/README.md&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;The pre-commit hook&lt;/h3&gt; 
&lt;p&gt;We use &lt;a href="https://typicode.github.io/husky/#/"&gt;Husky&lt;/a&gt; to manage the pre-commit &lt;a href="https://git-scm.com/docs/githooks"&gt;Git hook&lt;/a&gt; in this repo. Husky configures hooks automatically during install, so you don't need to do anything special to get them working, but if it fails to install, you can run the following command to install it manually:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm run prepare
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Code changes automatically go through Prettier and ESLint when you make a commit, &lt;strong&gt;please do not skip these steps&lt;/strong&gt; unless they're broken and in that case let us known by creating an issue.&lt;/p&gt; 
&lt;h2&gt;Read the Docs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vercel.com/docs"&gt;Vercel Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/docs"&gt;Next.js Docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you have any questions or suggestions about the docs, feel free to &lt;a href="https://github.com/vercel/examples/discussions"&gt;open a discussion&lt;/a&gt;, or &lt;a href="https://github.com/vercel/examples/pulls"&gt;submit a PR&lt;/a&gt; with your suggestions!&lt;/p&gt; 
&lt;h2&gt;Provide Feedback&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/discussions"&gt;Start a Discussion&lt;/a&gt; with a question, piece of feedback, or idea you want to share with the team.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vercel/examples/issues"&gt;Open an Issue&lt;/a&gt; if you believe you've encountered a bug that you want to flag for the team.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>microsoft/data-formulator</title>
      <link>https://github.com/microsoft/data-formulator</link>
      <description>&lt;p&gt;🪄 Create rich visualizations with AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/favicon.ico" alt="Data Formulator icon" width="28" /&gt; &lt;b&gt;Data Formulator: Create Rich Visualizations with AI&lt;/b&gt; &lt;/h1&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;&lt;img src="https://img.shields.io/badge/Paper-arXiv:2408.16119-b31b1b.svg?sanitize=true" alt="arxiv" /&gt;&lt;/a&gt;  &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt;  &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;&lt;img src="https://img.shields.io/badge/YouTube-white?logo=youtube&amp;amp;logoColor=%23FF0000" alt="YouTube" /&gt;&lt;/a&gt;  &lt;a href="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml"&gt;&lt;img src="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Transform data and create rich visualizations iteratively with AI 🪄. Try Data Formulator now!&lt;/p&gt; 
&lt;p&gt;Any questions? Ask on the Discord channel! &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1) --&gt; 
&lt;kbd&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://codespaces.new/microsoft/data-formulator?quickstart=1" title="open Data Formulator in GitHub Codespaces"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/data-formulator-screenshot.png" /&gt;&lt;/a&gt; &lt;/kbd&gt; 
&lt;h2&gt;News 🔥🔥🔥&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[07-10-2025] Data Formulator 0.2.2: Start with an analysis goal&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Some key frontend performance updates.&lt;/li&gt; 
   &lt;li&gt;You can start your exploration with a goal, or, tab and see if the agent can recommend some good exploration ideas for you. &lt;a href="https://github.com/microsoft/data-formulator/pull/176"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[05-13-2025] Data Formulator 0.2.1.3/4: External Data Loader&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We introduced external data loader class to make import data easier. &lt;a href="https://github.com/microsoft/data-formulator/tree/main/py-src/data_formulator/data_loader"&gt;Readme&lt;/a&gt; and &lt;a href="https://github.com/microsoft/data-formulator/pull/155"&gt;Demo&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Current data loaders: MySQL, Azure Data Explorer (Kusto), Azure Blob and Amazon S3 (json, parquet, csv).&lt;/li&gt; 
     &lt;li&gt;[07-01-2025] Updated with: Postgresql, mssql.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Call for action &lt;a href="https://github.com/microsoft/data-formulator/issues/156"&gt;link&lt;/a&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;Users: let us know which data source you'd like to load data from.&lt;/li&gt; 
     &lt;li&gt;Developers: let's build more data loaders.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[04-23-2025] Data Formulator 0.2: working with &lt;em&gt;large&lt;/em&gt; data 📦📦📦&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Explore large data by: 
    &lt;ol&gt; 
     &lt;li&gt;Upload large data file to the local database (powered by &lt;a href="https://github.com/duckdb/duckdb"&gt;DuckDB&lt;/a&gt;).&lt;/li&gt; 
     &lt;li&gt;Use drag-and-drop to specify charts, and Data Formulator dynamically fetches data from the database to create visualizations (with ⚡️⚡️⚡️ speeds).&lt;/li&gt; 
     &lt;li&gt;Work with AI agents: they generate SQL queries to transform the data to create rich visualizations!&lt;/li&gt; 
     &lt;li&gt;Anchor the result / follow up / create a new branch / join tables; let's dive deeper.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Checkout the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.2"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.2]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Improved overall system performance, and enjoy the updated derive concept functionality.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[03-20-2025] Data Formulator 0.1.7: Anchoring ⚓︎&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Anchor an intermediate dataset, so that followup data analysis are built on top of the anchored data, not the original one.&lt;/li&gt; 
   &lt;li&gt;Clean a data and work with only the cleaned data; create a subset from the original data or join multiple data, and then go from there. AI agents will be less likely to get confused and work faster. ⚡️⚡️&lt;/li&gt; 
   &lt;li&gt;Check out the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.7"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.7]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Don't forget to update Data Formulator to test it out!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-20-2025] Data Formulator 0.1.6 released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports working with multiple datasets at once! Tell Data Formulator which data tables you would like to use in the encoding shelf, and it will figure out how to join the tables to create a visualization to answer your question. 🪄&lt;/li&gt; 
   &lt;li&gt;Checkout the demo at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.6"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.6]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Update your Data Formulator to the latest version to play with the new features.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-12-2025] More models supported now!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports OpenAI, Azure, Ollama, and Anthropic models (and more powered by &lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;);&lt;/li&gt; 
   &lt;li&gt;Models with strong code generation and instruction following capabilities are recommended (gpt-4o, claude-3-5-sonnet etc.);&lt;/li&gt; 
   &lt;li&gt;You can store API keys in &lt;code&gt;api-keys.env&lt;/code&gt; to avoid typing them every time (see template &lt;code&gt;api-keys.env.template&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;Let us know which models you have good/bad experiences with, and what models you would like to see supported! &lt;a href="https://github.com/microsoft/data-formulator/issues/49"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[11-07-2024] Minor fun update: data visualization challenges!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We added a few visualization challenges with the sample datasets. Can you complete them all? &lt;a href="https://github.com/microsoft/data-formulator/issues/53#issue-2641841252"&gt;[try them out!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Comment in the issue when you did, or share your results/questions with others! &lt;a href="https://github.com/microsoft/data-formulator/issues/53"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-11-2024] Data Formulator python package released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can now install Data Formulator using Python and run it locally, easily. &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/#get-started"&gt;[check it out]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Our Codespaces configuration is also updated for fast start up ⚡️. &lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;[try it now!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;New experimental feature: load an image or a messy text, and ask AI to parse and clean it for you(!). &lt;a href="https://github.com/microsoft/data-formulator/pull/31#issuecomment-2403652717"&gt;[demo]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-01-2024] Initial release of Data Formulator, check out our &lt;a href="https://www.microsoft.com/en-us/research/blog/data-formulator-exploring-how-ai-can-help-analysts-create-rich-data-visualizations/"&gt;[blog]&lt;/a&gt; and &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;[video]&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Data Formulator&lt;/strong&gt; is an application from Microsoft Research that uses large language models to transform data, expediting the practice of data visualization.&lt;/p&gt; 
&lt;p&gt;Data Formulator is an AI-powered tool for analysts to iteratively create rich visualizations. Unlike most chat-based AI tools where users need to describe everything in natural language, Data Formulator combines &lt;em&gt;user interface interactions (UI)&lt;/em&gt; and &lt;em&gt;natural language (NL) inputs&lt;/em&gt; for easier interaction. This blended approach makes it easier for users to describe their chart designs while delegating data transformation to AI.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Play with Data Formulator with one of the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 1: Install via Python PIP&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use Python PIP for an easy setup experience, running locally (recommend: install it in a virtual environment).&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# install data_formulator
pip install data_formulator

# start data_formulator
data_formulator 

# alternatively, you can run data formulator with this command
python -m data_formulator
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Data Formulator will be automatically opened in the browser at &lt;a href="http://localhost:5000"&gt;http://localhost:5000&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Update: you can specify the port number (e.g., 8080) by &lt;code&gt;python -m data_formulator --port 8080&lt;/code&gt; if the default port is occupied.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 2: Codespaces (5 minutes)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can also run Data Formulator in Codespaces; we have everything pre-configured. For more details, see &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/CODESPACES.md"&gt;CODESPACES.md&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 3: Working in the developer mode&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can build Data Formulator locally if you prefer full control over your development environment and the ability to customize the setup to your specific needs. For detailed instructions, refer to &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Data Formulator&lt;/h2&gt; 
&lt;p&gt;Once you've completed the setup using either option, follow these steps to start using Data Formulator:&lt;/p&gt; 
&lt;h3&gt;The basics of data visualization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide OpenAI keys and select a model (GPT-4o suggested) and choose a dataset.&lt;/li&gt; 
 &lt;li&gt;Choose a chart type, and then drag-and-drop data fields to chart properties (x, y, color, ...) to specify visual encodings.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8"&gt;https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create visualization beyond the initial dataset (powered by 🤖)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can type names of &lt;strong&gt;fields that do not exist in current data&lt;/strong&gt; in the encoding shelf: 
  &lt;ul&gt; 
   &lt;li&gt;this tells Data Formulator that you want to create visualizations that require computation or transformation from existing data,&lt;/li&gt; 
   &lt;li&gt;you can optionally provide a natural language prompt to explain and clarify your intent (not necessary when field names are self-explanatory).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Click the &lt;strong&gt;Formulate&lt;/strong&gt; button. 
  &lt;ul&gt; 
   &lt;li&gt;Data Formulator will transform data and instantiate the visualization based on the encoding and prompt.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Inspect the data, chart and code.&lt;/li&gt; 
 &lt;li&gt;To create a new chart based on existing ones, follow up in natural language: 
  &lt;ul&gt; 
   &lt;li&gt;provide a follow up prompt (e.g., &lt;em&gt;``show only top 5!''&lt;/em&gt;),&lt;/li&gt; 
   &lt;li&gt;you may also update visual encodings for the new chart.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba"&gt;https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb"&gt;https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Repeat this process as needed to explore and understand your data. Your explorations are trackable in the &lt;strong&gt;Data Threads&lt;/strong&gt; panel.&lt;/p&gt; 
&lt;h2&gt;Developers' Guide&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;developers' instructions&lt;/a&gt; to build your new data analysis tools on top of Data Formulator.&lt;/p&gt; 
&lt;h2&gt;Research Papers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;Data Formulator 2: Iteratively Creating Rich Visualizations with AI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2024dataformulator2iteratively,
      title={Data Formulator 2: Iteratively Creating Rich Visualizations with AI}, 
      author={Chenglong Wang and Bongshin Lee and Steven Drucker and Dan Marshall and Jianfeng Gao},
      year={2024},
      booktitle={ArXiv preprint arXiv:2408.16119},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2309.10094"&gt;Data Formulator: AI-powered Concept-driven Visualization Authoring&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2023data,
  title={Data Formulator: AI-powered Concept-driven Visualization Authoring},
  author={Wang, Chenglong and Thompson, John and Lee, Bongshin},
  journal={IEEE Transactions on Visualization and Computer Graphics},
  year={2023},
  publisher={IEEE}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>