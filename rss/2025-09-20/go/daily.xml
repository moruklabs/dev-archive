<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Fri, 19 Sep 2025 01:32:46 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>hashicorp/terraform-provider-azurerm</title>
      <link>https://github.com/hashicorp/terraform-provider-azurerm</link>
      <description>&lt;p&gt;Terraform provider for Azure Resource Manager&lt;/p&gt;&lt;hr&gt;&lt;a href="https://terraform.io"&gt; &lt;img src="https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/.github/tf.png" alt="Terraform logo" title="Terraform" align="left" height="50" /&gt; &lt;/a&gt; 
&lt;h1&gt;Terraform Provider for Azure (Resource Manager)&lt;/h1&gt; 
&lt;p&gt;The AzureRM Terraform Provider allows managing resources within Azure Resource Manager.&lt;/p&gt; 
&lt;p&gt;When using version 4.0 of the AzureRM Provider we recommend using the latest version of Terraform Core (&lt;a href="https://developer.hashicorp.com/terraform/install"&gt;the latest version can be found here&lt;/a&gt;).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.terraform.io"&gt;Terraform Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs"&gt;AzureRM Provider Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples"&gt;AzureRM Provider Usage Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://terraform-azure.slack.com"&gt;Slack Workspace for Contributors&lt;/a&gt; (&lt;a href="https://join.slack.com/t/terraform-azure/shared_invite/enQtNDMzNjQ5NzcxMDc3LWNiY2ZhNThhNDgzNmY0MTM0N2MwZjE4ZGU0MjcxYjUyMzRmN2E5NjZhZmQ0ZTA1OTExMGNjYzA4ZDkwZDYxNDE"&gt;Request Invite&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage Example&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-hcl"&gt;# 1. Specify the version of the AzureRM Provider to use
terraform {
  required_providers {
    azurerm = {
      source = "hashicorp/azurerm"
      version = "=4.0.0"
    }
  }
}

# 2. Configure the AzureRM Provider
provider "azurerm" {
  # The AzureRM Provider supports authenticating using via the Azure CLI, a Managed Identity
  # and a Service Principal. More information on the authentication methods supported by
  # the AzureRM Provider can be found here:
  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs#authenticating-to-azure

  # The features block allows changing the behaviour of the Azure Provider, more
  # information can be found here:
  # https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/features-block
  features {}
}

# 3. Create a resource group
resource "azurerm_resource_group" "example" {
  name     = "example-resources"
  location = "West Europe"
}

# 4. Create a virtual network within the resource group
resource "azurerm_virtual_network" "example" {
  name                = "example-network"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  address_space       = ["10.0.0.0/16"]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs"&gt;Usage documentation for the AzureRM Provider can be found in the Terraform Registry&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.hashicorp.com/collections/terraform/azure-get-started"&gt;Learn more about Terraform and the AzureRM Provider on HashiCorp Learn&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples"&gt;Additional examples can be found in the &lt;code&gt;./examples&lt;/code&gt; folder within this repository&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developing &amp;amp; Contributing to the Provider&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform-provider-azurerm/main/DEVELOPER.md"&gt;DEVELOPER.md&lt;/a&gt; file is a basic outline on how to build and develop the provider while more detailed guides geared towards contributors can be found in the &lt;a href="https://github.com/hashicorp/terraform-provider-azurerm/tree/main/contributing"&gt;&lt;code&gt;/contributing&lt;/code&gt;&lt;/a&gt; directory of this repository.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>influxdata/telegraf</title>
      <link>https://github.com/influxdata/telegraf</link>
      <description>&lt;p&gt;Agent for collecting, processing, aggregating, and writing metrics, logs, and other arbitrary data.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/influxdata/telegraf/master/assets/TelegrafTigerSmall.png" alt="tiger" title="tiger" /&gt; Telegraf&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://godoc.org/github.com/influxdata/telegraf"&gt;&lt;img src="https://img.shields.io/badge/doc-reference-00ADD8.svg?logo=go" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/_/telegraf/"&gt;&lt;img src="https://img.shields.io/docker/pulls/library/telegraf.svg?sanitize=true" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/influxdata/telegraf"&gt;&lt;img src="https://goreportcard.com/badge/github.com/influxdata/telegraf" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/influxdata/telegraf"&gt;&lt;img src="https://circleci.com/gh/influxdata/telegraf.svg?style=svg" alt="Circle CI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Telegraf is an agent for collecting, processing, aggregating, and writing metrics, logs, and other arbitrary data.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Offers a comprehensive suite of over 300 plugins, covering a wide range of functionalities including system monitoring, cloud services, and message passing&lt;/li&gt; 
 &lt;li&gt;Enables the integration of user-defined code to collect, transform, and transmit data efficiently&lt;/li&gt; 
 &lt;li&gt;Compiles into a standalone static binary without any external dependencies, ensuring a streamlined deployment process&lt;/li&gt; 
 &lt;li&gt;Utilizes TOML for configuration, providing a user-friendly and unambiguous setup experience&lt;/li&gt; 
 &lt;li&gt;Developed with contributions from a diverse community of over 1,200 contributors&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Users can choose plugins from a wide range of topics, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Devices: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/opcua"&gt;OPC UA&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/modbus"&gt;Modbus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Logs: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/file"&gt;File&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/tail"&gt;Tail&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/directory_monitor"&gt;Directory Monitor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Messaging: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/amqp_consumer"&gt;AMQP&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/kafka_consumer"&gt;Kafka&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mqtt_consumer"&gt;MQTT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitoring: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/opentelemetry"&gt;OpenTelemetry&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/prometheus"&gt;Prometheus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Networking: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/cisco_telemetry_mdt"&gt;Cisco TelemetryMDT&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/gnmi"&gt;gNMI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;System monitoring: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/cpu"&gt;CPU&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mem"&gt;Memory&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/disk"&gt;Disk&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/net"&gt;Network&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/smartctl"&gt;SMART&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/docker"&gt;Docker&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/nvidia_smi"&gt;Nvidia SMI&lt;/a&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Universal: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/exec"&gt;Exec&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http"&gt;HTTP&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http_listener_v2"&gt;HTTP Listener&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/snmp"&gt;SNMP&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/sql"&gt;SQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Windows: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_eventlog"&gt;Event Log&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_wmi"&gt;Management Instrumentation&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters"&gt;Performance Counters&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔨 Installation&lt;/h2&gt; 
&lt;p&gt;For binary builds, Docker images, RPM &amp;amp; DEB packages, and other builds of Telegraf, please see the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/INSTALL_GUIDE.md"&gt;install guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/RELEASES.md"&gt;releases documentation&lt;/a&gt; for details on versioning and when releases are made.&lt;/p&gt; 
&lt;h2&gt;💻 Usage&lt;/h2&gt; 
&lt;p&gt;Users define a TOML configuration with the plugins and settings they wish to use, then pass that configuration to Telegraf. The Telegraf agent then collects data from inputs at each interval and sends data to outputs at each flush interval.&lt;/p&gt; 
&lt;p&gt;For a basic walkthrough see &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/QUICK_START.md"&gt;quick start&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;p&gt;For a full list of documentation including tutorials, reference and other material, start with the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/README.md"&gt;/docs directory&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, each plugin has its own README that includes details about how to configure, use, and sometimes debug or troubleshoot. Look under the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/plugins/"&gt;/plugins directory&lt;/a&gt; for specific plugins.&lt;/p&gt; 
&lt;p&gt;Here are some commonly used documents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/CONFIGURATION.md"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/FAQ.md"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/influxdata/telegraf/releases"&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/SECURITY.md"&gt;Security&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❤️ Contribute&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/influxdata/telegraf/raw/master/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/contribute-to_telegraf-blue.svg?logo=influxdb" alt="Contribute" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We love our community of over 1,200 contributors! Many of the plugins included in Telegraf were originally contributed by community members. Check out our &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; if you are interested in helping out. Also, join us on our &lt;a href="https://influxdata.com/slack"&gt;Community Slack&lt;/a&gt; or &lt;a href="https://community.influxdata.com/"&gt;Community Forums&lt;/a&gt; if you have questions or comments for our engineering teams.&lt;/p&gt; 
&lt;p&gt;If you are completely new to Telegraf and InfluxDB, you can also enroll for free at &lt;a href="https://www.influxdata.com/university/"&gt;InfluxDB university&lt;/a&gt; to take courses to learn more.&lt;/p&gt; 
&lt;h2&gt;ℹ️ Support&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.influxdata.com/slack"&gt;&lt;img src="https://img.shields.io/badge/slack-join_chat-blue.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://community.influxdata.com/"&gt;&lt;img src="https://img.shields.io/badge/discourse-join_forums-blue.svg?logo=discourse" alt="Forums" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please use the &lt;a href="https://influxdata.com/slack"&gt;Community Slack&lt;/a&gt; or &lt;a href="https://community.influxdata.com/"&gt;Community Forums&lt;/a&gt; if you have questions or comments for our engineering teams. GitHub issues are limited to actual issues and feature requests only.&lt;/p&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/influxdata/telegraf/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue" alt="MIT" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/go-sdk</title>
      <link>https://github.com/modelcontextprotocol/go-sdk</link>
      <description>&lt;p&gt;The official Go SDK for Model Context Protocol servers and clients. Maintained in collaboration with Google.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Go SDK v0.5.0&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://codespaces.new/modelcontextprotocol/go-sdk"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BREAKING CHANGES&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This version contains breaking changes. See the &lt;a href="https://github.com/modelcontextprotocol/go-sdk/releases/tag/v0.5.0"&gt;release notes&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/modelcontextprotocol/go-sdk" alt="PkgGoDev" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains an unreleased implementation of the official Go software development kit (SDK) for the Model Context Protocol (MCP).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The SDK is not yet at v1.0.0 and may still be subject to incompatible API changes. We aim to tag v1.0.0 in September, 2025. See &lt;a href="https://github.com/modelcontextprotocol/go-sdk/issues/328"&gt;https://github.com/modelcontextprotocol/go-sdk/issues/328&lt;/a&gt; for details.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Package documentation&lt;/h2&gt; 
&lt;p&gt;The SDK consists of several importable packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/mcp"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/mcp&lt;/code&gt;&lt;/a&gt; package defines the primary APIs for constructing and using MCP clients and servers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/jsonrpc"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/jsonrpc&lt;/code&gt;&lt;/a&gt; package is for users implementing their own transports.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/auth"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/auth&lt;/code&gt;&lt;/a&gt; package provides some primitives for supporting oauth.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/oauthex"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/oauthex&lt;/code&gt;&lt;/a&gt; package provides extensions to the OAuth protocol, such as ProtectedResourceMetadata.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;To get started creating an MCP server, create an &lt;code&gt;mcp.Server&lt;/code&gt; instance, add features to it, and then run it over an &lt;code&gt;mcp.Transport&lt;/code&gt;. For example, this server adds a single simple tool, and then connects it to clients over stdin/stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

type Input struct {
	Name string `json:"name" jsonschema:"the name of the person to greet"`
}

type Output struct {
	Greeting string `json:"greeting" jsonschema:"the greeting to tell to the user"`
}

func SayHi(ctx context.Context, req *mcp.CallToolRequest, input Input) (*mcp.CallToolResult, Output, error) {
	return nil, Output{Greeting: "Hi " + input.Name}, nil
}

func main() {
	// Create a server with a single tool.
	server := mcp.NewServer(&amp;amp;mcp.Implementation{Name: "greeter", Version: "v1.0.0"}, nil)
	mcp.AddTool(server, &amp;amp;mcp.Tool{Name: "greet", Description: "say hi"}, SayHi)
	// Run the server over stdin/stdout, until the client disconnects
	if err := server.Run(context.Background(), &amp;amp;mcp.StdioTransport{}); err != nil {
		log.Fatal(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To communicate with that server, we can similarly create an &lt;code&gt;mcp.Client&lt;/code&gt; and connect it to the corresponding server, by running the server command and communicating over its stdin/stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"
	"os/exec"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

func main() {
	ctx := context.Background()

	// Create a new client, with no features.
	client := mcp.NewClient(&amp;amp;mcp.Implementation{Name: "mcp-client", Version: "v1.0.0"}, nil)

	// Connect to a server over stdin/stdout
	transport := &amp;amp;mcp.CommandTransport{Command: exec.Command("myserver")}
	session, err := client.Connect(ctx, transport, nil)
	if err != nil {
		log.Fatal(err)
	}
	defer session.Close()

	// Call a tool on the server.
	params := &amp;amp;mcp.CallToolParams{
		Name:      "greet",
		Arguments: map[string]any{"name": "you"},
	}
	res, err := session.CallTool(ctx, params)
	if err != nil {
		log.Fatalf("CallTool failed: %v", err)
	}
	if res.IsError {
		log.Fatal("tool failed")
	}
	for _, c := range res.Content {
		log.Print(c.(*mcp.TextContent).Text)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/examples/"&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt; directory contains more example clients and servers.&lt;/p&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;The design doc for this SDK is at &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/design/design.md"&gt;design.md&lt;/a&gt;, which was initially reviewed at &lt;a href="https://github.com/orgs/modelcontextprotocol/discussions/364"&gt;modelcontextprotocol/discussions/364&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Further design discussion should occur in &lt;a href="https://github.com/modelcontextprotocol/go-sdk/issues"&gt;issues&lt;/a&gt; (for concrete proposals) or &lt;a href="https://github.com/modelcontextprotocol/go-sdk/discussions"&gt;discussions&lt;/a&gt; for open-ended discussion. See &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Several existing Go MCP SDKs inspired the development and design of this official SDK, notably &lt;a href="https://github.com/mark3labs/mcp-go"&gt;mcp-go&lt;/a&gt;, authored by Ed Zynda. We are grateful to Ed as well as the other contributors to mcp-go, and to authors and contributors of other SDKs such as &lt;a href="https://github.com/metoro-io/mcp-golang"&gt;mcp-golang&lt;/a&gt; and &lt;a href="https://github.com/ThinkInAIXYZ/go-mcp"&gt;go-mcp&lt;/a&gt;. Thanks to their work, there is a thriving ecosystem of Go MCP clients and servers.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>charmbracelet/crush</title>
      <link>https://github.com/charmbracelet/crush</link>
      <description>&lt;p&gt;The glamourous AI coding agent for your favourite terminal 💘&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Crush&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://stuff.charm.sh/crush/charm-crush.png"&gt;&lt;img width="450" alt="Charm Crush Logo" src="https://github.com/user-attachments/assets/adc1a6f4-b284-4603-836c-59038caa2e8b" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://github.com/charmbracelet/crush/releases"&gt;&lt;img src="https://img.shields.io/github/release/charmbracelet/crush" alt="Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/charmbracelet/crush/actions"&gt;&lt;img src="https://github.com/charmbracelet/crush/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;Your new coding bestie, now available in your favourite terminal.&lt;br /&gt;Your tools, your code, and your workflows, wired into your LLM of choice.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;img width="800" alt="Crush Demo" src="https://github.com/user-attachments/assets/58280caf-851b-470a-b6f7-d5c4ea8a1968" /&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-Model:&lt;/strong&gt; choose from a wide range of LLMs or add your own via OpenAI- or Anthropic-compatible APIs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible:&lt;/strong&gt; switch LLMs mid-session while preserving context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Session-Based:&lt;/strong&gt; maintain multiple work sessions and contexts per project&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LSP-Enhanced:&lt;/strong&gt; Crush uses LSPs for additional context, just like you do&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Extensible:&lt;/strong&gt; add capabilities via MCPs (&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;stdio&lt;/code&gt;, and &lt;code&gt;sse&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Works Everywhere:&lt;/strong&gt; first-class support in every terminal on macOS, Linux, Windows (PowerShell and WSL), FreeBSD, OpenBSD, and NetBSD&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Use a package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Homebrew
brew install charmbracelet/tap/crush

# NPM
npm install -g @charmland/crush

# Arch Linux (btw)
yay -S crush-bin

# Nix
nix run github:numtide/nix-ai-tools#crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Windows users:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Winget
winget install charmbracelet.crush

# Scoop
scoop bucket add charm https://github.com/charmbracelet/scoop-bucket.git
scoop install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Nix (NUR)&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Crush is available via &lt;a href="https://github.com/nix-community/NUR"&gt;NUR&lt;/a&gt; in &lt;code&gt;nur.repos.charmbracelet.crush&lt;/code&gt;.&lt;/p&gt; 
 &lt;p&gt;You can also try out Crush via &lt;code&gt;nix-shell&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Add the NUR channel.
nix-channel --add https://github.com/nix-community/NUR/archive/main.tar.gz nur
nix-channel --update

# Get Crush in a Nix shell.
nix-shell -p '(import &amp;lt;nur&amp;gt; { pkgs = import &amp;lt;nixpkgs&amp;gt; {}; }).repos.charmbracelet.crush'
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Debian/Ubuntu&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
sudo apt update &amp;amp;&amp;amp; sudo apt install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Fedora/RHEL&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;echo '[charm]
name=Charm
baseurl=https://repo.charm.sh/yum/
enabled=1
gpgcheck=1
gpgkey=https://repo.charm.sh/yum/gpg.key' | sudo tee /etc/yum.repos.d/charm.repo
sudo yum install crush
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Or, download it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/crush/releases"&gt;Packages&lt;/a&gt; are available in Debian and RPM formats&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/charmbracelet/crush/releases"&gt;Binaries&lt;/a&gt; are available for Linux, macOS, Windows, FreeBSD, OpenBSD, and NetBSD&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Or just install it with Go:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install github.com/charmbracelet/crush@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Productivity may increase when using Crush and you may find yourself nerd sniped when first using the application. If the symptoms persist, join the &lt;a href="https://charm.land/discord"&gt;Discord&lt;/a&gt; and nerd snipe the rest of us.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The quickest way to get started is to grab an API key for your preferred provider such as Anthropic, OpenAI, Groq, or OpenRouter and just start Crush. You'll be prompted to enter your API key.&lt;/p&gt; 
&lt;p&gt;That said, you can also set environment variables for preferred providers.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Environment Variable&lt;/th&gt; 
   &lt;th&gt;Provider&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ANTHROPIC_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Anthropic&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OpenAI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;OPENROUTER_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;OpenRouter&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;CEREBRAS_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Cerebras&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GEMINI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Gemini&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;VERTEXAI_PROJECT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Cloud VertexAI (Gemini)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;VERTEXAI_LOCATION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Google Cloud VertexAI (Gemini)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;GROQ_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Groq&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_ACCESS_KEY_ID&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_SECRET_ACCESS_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AWS_REGION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;AWS Bedrock (Claude)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_ENDPOINT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_API_KEY&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models (optional when using Entra ID)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;AZURE_OPENAI_API_VERSION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Azure OpenAI models&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;By the Way&lt;/h3&gt; 
&lt;p&gt;Is there a provider you’d like to see in Crush? Is there an existing model that needs an update?&lt;/p&gt; 
&lt;p&gt;Crush’s default model listing is managed in &lt;a href="https://github.com/charmbracelet/catwalk"&gt;Catwalk&lt;/a&gt;, a community-supported, open source repository of Crush-compatible models, and you’re welcome to contribute.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/catwalk"&gt;&lt;img width="174" height="174" alt="Catwalk Badge" src="https://github.com/user-attachments/assets/95b49515-fe82-4409-b10d-5beb0873787d" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Crush runs great with no configuration. That said, if you do need or want to customize Crush, configuration can be added either local to the project itself, or globally, with the following priority:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;.crush.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;crush.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;$HOME/.config/crush/crush.json&lt;/code&gt; (Windows: &lt;code&gt;%USERPROFILE%\AppData\Local\crush\crush.json&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Configuration itself is stored as a JSON object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "this-setting": { "this": "that" },
  "that-setting": ["ceci", "cela"]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As an additional note, Crush also stores ephemeral data, such as application state, in one additional location:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Unix
$HOME/.local/share/crush/crush.json

# Windows
%LOCALAPPDATA%\crush\crush.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LSPs&lt;/h3&gt; 
&lt;p&gt;Crush can use LSPs for additional context to help inform its decisions, just like you would. LSPs can be added manually like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "lsp": {
    "go": {
      "command": "gopls",
      "env": {
        "GOTOOLCHAIN": "go1.24.5"
      }
    },
    "typescript": {
      "command": "typescript-language-server",
      "args": ["--stdio"]
    },
    "nix": {
      "command": "nil"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MCPs&lt;/h3&gt; 
&lt;p&gt;Crush also supports Model Context Protocol (MCP) servers through three transport types: &lt;code&gt;stdio&lt;/code&gt; for command-line servers, &lt;code&gt;http&lt;/code&gt; for HTTP endpoints, and &lt;code&gt;sse&lt;/code&gt; for Server-Sent Events. Environment variable expansion is supported using &lt;code&gt;$(echo $VAR)&lt;/code&gt; syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "filesystem": {
      "type": "stdio",
      "command": "node",
      "args": ["/path/to/mcp-server.js"],
      "env": {
        "NODE_ENV": "production"
      }
    },
    "github": {
      "type": "http",
      "url": "https://example.com/mcp/",
      "headers": {
        "Authorization": "$(echo Bearer $EXAMPLE_MCP_TOKEN)"
      }
    },
    "streaming-service": {
      "type": "sse",
      "url": "https://example.com/mcp/sse",
      "headers": {
        "API-Key": "$(echo $API_KEY)"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ignoring Files&lt;/h3&gt; 
&lt;p&gt;Crush respects &lt;code&gt;.gitignore&lt;/code&gt; files by default, but you can also create a &lt;code&gt;.crushignore&lt;/code&gt; file to specify additional files and directories that Crush should ignore. This is useful for excluding files that you want in version control but don't want Crush to consider when providing context.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;.crushignore&lt;/code&gt; file uses the same syntax as &lt;code&gt;.gitignore&lt;/code&gt; and can be placed in the root of your project or in subdirectories.&lt;/p&gt; 
&lt;h3&gt;Allowing Tools&lt;/h3&gt; 
&lt;p&gt;By default, Crush will ask you for permission before running tool calls. If you'd like, you can allow tools to be executed without prompting you for permissions. Use this with care.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "permissions": {
    "allowed_tools": [
      "view",
      "ls",
      "grep",
      "edit",
      "mcp_context7_get-library-doc"
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also skip all permission prompts entirely by running Crush with the &lt;code&gt;--yolo&lt;/code&gt; flag. Be very, very careful with this feature.&lt;/p&gt; 
&lt;h3&gt;Attribution Settings&lt;/h3&gt; 
&lt;p&gt;By default, Crush adds attribution information to Git commits and pull requests it creates. You can customize this behavior with the &lt;code&gt;attribution&lt;/code&gt; option:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "attribution": {
      "co_authored_by": true,
      "generated_with": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;co_authored_by&lt;/code&gt;: When true (default), adds &lt;code&gt;Co-Authored-By: Crush &amp;lt;crush@charm.land&amp;gt;&lt;/code&gt; to commit messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;generated_with&lt;/code&gt;: When true (default), adds &lt;code&gt;💘 Generated with Crush&lt;/code&gt; line to commit messages and PR descriptions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Local Models&lt;/h3&gt; 
&lt;p&gt;Local models can also be configured via OpenAI-compatible API. Here are two common examples:&lt;/p&gt; 
&lt;h4&gt;Ollama&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "providers": {
    "ollama": {
      "name": "Ollama",
      "base_url": "http://localhost:11434/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen3:30b",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;LM Studio&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "providers": {
    "lmstudio": {
      "name": "LM Studio",
      "base_url": "http://localhost:1234/v1/",
      "type": "openai",
      "models": [
        {
          "name": "Qwen 3 30B",
          "id": "qwen/qwen3-30b-a3b-2507",
          "context_window": 256000,
          "default_max_tokens": 20000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Custom Providers&lt;/h3&gt; 
&lt;p&gt;Crush supports custom provider configurations for both OpenAI-compatible and Anthropic-compatible APIs.&lt;/p&gt; 
&lt;h4&gt;OpenAI-Compatible APIs&lt;/h4&gt; 
&lt;p&gt;Here’s an example configuration for Deepseek, which uses an OpenAI-compatible API. Don't forget to set &lt;code&gt;DEEPSEEK_API_KEY&lt;/code&gt; in your environment.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "deepseek": {
      "type": "openai",
      "base_url": "https://api.deepseek.com/v1",
      "api_key": "$DEEPSEEK_API_KEY",
      "models": [
        {
          "id": "deepseek-chat",
          "name": "Deepseek V3",
          "cost_per_1m_in": 0.27,
          "cost_per_1m_out": 1.1,
          "cost_per_1m_in_cached": 0.07,
          "cost_per_1m_out_cached": 1.1,
          "context_window": 64000,
          "default_max_tokens": 5000
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Anthropic-Compatible APIs&lt;/h4&gt; 
&lt;p&gt;Custom Anthropic-compatible providers follow this format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "custom-anthropic": {
      "type": "anthropic",
      "base_url": "https://api.anthropic.com/v1",
      "api_key": "$ANTHROPIC_API_KEY",
      "extra_headers": {
        "anthropic-version": "2023-06-01"
      },
      "models": [
        {
          "id": "claude-sonnet-4-20250514",
          "name": "Claude Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Amazon Bedrock&lt;/h3&gt; 
&lt;p&gt;Crush currently supports running Anthropic models through Bedrock, with caching disabled.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Bedrock provider will appear once you have AWS configured, i.e. &lt;code&gt;aws configure&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Crush also expects the &lt;code&gt;AWS_REGION&lt;/code&gt; or &lt;code&gt;AWS_DEFAULT_REGION&lt;/code&gt; to be set&lt;/li&gt; 
 &lt;li&gt;To use a specific AWS profile set &lt;code&gt;AWS_PROFILE&lt;/code&gt; in your environment, i.e. &lt;code&gt;AWS_PROFILE=myprofile crush&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Vertex AI Platform&lt;/h3&gt; 
&lt;p&gt;Vertex AI will appear in the list of available providers when &lt;code&gt;VERTEXAI_PROJECT&lt;/code&gt; and &lt;code&gt;VERTEXAI_LOCATION&lt;/code&gt; are set. You will also need to be authenticated:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gcloud auth application-default login
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To add specific models to the configuration, configure as such:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "providers": {
    "vertexai": {
      "models": [
        {
          "id": "claude-sonnet-4@20250514",
          "name": "VertexAI Sonnet 4",
          "cost_per_1m_in": 3,
          "cost_per_1m_out": 15,
          "cost_per_1m_in_cached": 3.75,
          "cost_per_1m_out_cached": 0.3,
          "context_window": 200000,
          "default_max_tokens": 50000,
          "can_reason": true,
          "supports_attachments": true
        }
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;Sometimes you need to look at logs. Luckily, Crush logs all sorts of stuff. Logs are stored in &lt;code&gt;./.crush/logs/crush.log&lt;/code&gt; relative to the project.&lt;/p&gt; 
&lt;p&gt;The CLI also contains some helper commands to make perusing recent logs easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Print the last 1000 lines
crush logs

# Print the last 500 lines
crush logs --tail 500

# Follow logs in real time
crush logs --follow
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want more logging? Run &lt;code&gt;crush&lt;/code&gt; with the &lt;code&gt;--debug&lt;/code&gt; flag, or enable it in the config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "debug": true,
    "debug_lsp": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Disabling Provider Auto-Updates&lt;/h2&gt; 
&lt;p&gt;By default, Crush automatically checks for the latest and greatest list of providers and models from &lt;a href="https://github.com/charmbracelet/catwalk"&gt;Catwalk&lt;/a&gt;, the open source Crush provider database. This means that when new providers and models are available, or when model metadata changes, Crush automatically updates your local configuration.&lt;/p&gt; 
&lt;p&gt;For those with restricted internet access, or those who prefer to work in air-gapped environments, this might not be want you want, and this feature can be disabled.&lt;/p&gt; 
&lt;p&gt;To disable automatic provider updates, set &lt;code&gt;disable_provider_auto_update&lt;/code&gt; into your &lt;code&gt;crush.json&lt;/code&gt; config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "disable_provider_auto_update": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or set the &lt;code&gt;CRUSH_DISABLE_PROVIDER_AUTO_UPDATE&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export CRUSH_DISABLE_PROVIDER_AUTO_UPDATE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manually updating providers&lt;/h3&gt; 
&lt;p&gt;Manually updating providers is possible with the &lt;code&gt;crush update-providers&lt;/code&gt; command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Update providers remotely from Catwalk.
crush update-providers

# Update providers from a custom Catwalk base URL.
crush update-providers https://example.com/

# Update providers from a local file.
crush update-providers /path/to/local-providers.json

# Reset providers to the embedded version, embedded at crush at build time.
crush update-providers embedded

# For more info:
crush update-providers --help
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;A Note on Claude Max and GitHub Copilot&lt;/h2&gt; 
&lt;p&gt;Crush only supports model providers through official, compliant APIs. We do not support or endorse any methods that rely on personal Claude Max and GitHub Copilot accounts or OAuth workarounds, which violate Anthropic and Microsoft’s Terms of Service.&lt;/p&gt; 
&lt;p&gt;We’re committed to building sustainable, trusted integrations with model providers. If you’re a provider interested in working with us, &lt;a href="mailto:vt100@charm.sh"&gt;reach out&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/charmbracelet/crush?tab=contributing-ov-file#contributing"&gt;contributing guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Whatcha think?&lt;/h2&gt; 
&lt;p&gt;We’d love to hear your thoughts on this project. Need help? We gotchu. You can find us on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/charmcli"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.land/discord"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charm.land/slack"&gt;Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mastodon.social/@charmcli"&gt;The Fediverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bsky.app/profile/charm.land"&gt;Bluesky&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/charmbracelet/crush/raw/main/LICENSE.md"&gt;FSL-1.1-MIT&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Part of &lt;a href="https://charm.land"&gt;Charm&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://charm.land/"&gt;&lt;img alt="The Charm logo" width="400" src="https://stuff.charm.sh/charm-banner-next.jpg" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!--prettier-ignore--&gt; 
&lt;p&gt;Charm热爱开源 • Charm loves open source&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ArvinLovegood/go-stock</title>
      <link>https://github.com/ArvinLovegood/go-stock</link>
      <description>&lt;p&gt;🦄🦄🦄AI赋能股票分析：AI加持的股票分析/选股工具。股票行情获取，AI热点资讯分析，AI资金/财务分析，涨跌报警推送。支持A股，港股，美股。支持市场整体/个股情绪分析，AI辅助选股等。数据全部保留在本地。支持DeepSeek，OpenAI， Ollama，LMStudio，AnythingLLM，硅基流动，火山方舟，阿里云百炼等平台或模型。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;go-stock : 基于大语言模型的AI赋能股票分析工具&lt;/h1&gt; 
&lt;h2&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/appicon.png" alt="go-stock" /&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/ArvinLovegood/go-stock?link=https%3A%2F%2Fgithub.com%2FArvinLovegood%2Fgo-stock%2Freleases&amp;amp;link=https%3A%2F%2Fgithub.com%2FArvinLovegood%2Fgo-stock%2Freleases" alt="GitHub Release" /&gt; &lt;a href="https://github.com/ArvinLovegood/go-stock"&gt;&lt;img src="https://img.shields.io/github/stars/ArvinLovegood/go-stock?link=https%3A%2F%2Fgithub.com%2FArvinLovegood%2Fgo-stock" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://gitee.com/arvinlovegood_admin/go-stock"&gt;&lt;img src="https://gitee.com/arvinlovegood_admin/go-stock/badge/star.svg?theme=dark" alt="star" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🌟公众号&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/%E6%89%AB%E7%A0%81_%E6%90%9C%E7%B4%A2%E8%81%94%E5%90%88%E4%BC%A0%E6%92%AD%E6%A0%B7%E5%BC%8F-%E7%99%BD%E8%89%B2%E7%89%88.png" alt="扫码_搜索联合传播样式-白色版.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;📈 交流群&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;QQ交流群：&lt;a href="http://qm.qq.com/cgi-bin/qm/qr?_wv=1027&amp;amp;k=0YQ8qD3exahsD4YLNhzQTWe5ssstWC89&amp;amp;authKey=usOMMRFtIQDC%2FYcatHYapcxQbJ7PwXPHK9OypTXWzNjAq%2FRVvQu9bj2lRgb%2BSZ3p&amp;amp;noverify=0&amp;amp;group_code=491605333"&gt;点击链接加入群聊【go-stock交流群】：491605333(定期清理，随缘入群)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;✨ 简介&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;本项目基于Wails和NaiveUI开发，结合AI大模型构建的股票分析工具。&lt;/li&gt; 
 &lt;li&gt;目前已支持A股，港股，美股，未来计划加入基金，ETF等支持。&lt;/li&gt; 
 &lt;li&gt;支持市场整体/个股情绪分析，K线技术指标分析等功能。&lt;/li&gt; 
 &lt;li&gt;本项目仅供娱乐，不喜勿喷，AI分析股票结果仅供学习研究，投资有风险，请谨慎使用。&lt;/li&gt; 
 &lt;li&gt;开发环境主要基于Windows10+，其他平台未测试或功能受限。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📦 立即体验&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;安装版：&lt;a href="https://github.com/ArvinLovegood/go-stock/releases"&gt;go-stock-amd64-installer.exe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;绿色版：&lt;a href="https://github.com/ArvinLovegood/go-stock/releases"&gt;go-stock-windows-amd64.exe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MACOS绿色版：&lt;a href="https://github.com/ArvinLovegood/go-stock/releases"&gt;go-stock-darwin-universal&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;💬 支持大模型/平台&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;模型&lt;/th&gt; 
   &lt;th&gt;状态&lt;/th&gt; 
   &lt;th&gt;备注&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://platform.openai.com/"&gt;OpenAI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;可接入任何 OpenAI 接口格式模型&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://ollama.com/"&gt;Ollama&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;本地大模型运行平台&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://lmstudio.ai/"&gt;LMStudio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;本地大模型运行平台&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://anythingllm.com/"&gt;AnythingLLM&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;本地知识库&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.deepseek.com/"&gt;DeepSeek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;deepseek-reasoner,deepseek-chat&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cloud.siliconflow.cn/i/foufCerk"&gt;大模型聚合平台&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;如：&lt;a href="https://share.302.ai/1KUpfG"&gt;302.AI&lt;/a&gt;，&lt;a href="https://cloud.siliconflow.cn/i/foufCerk"&gt;硅基流动&lt;/a&gt;，&lt;a href="https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;amp;ac=DSASUQY5&amp;amp;rc=IJSE43PZ"&gt;火山方舟&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;span style="color: #568DF4;"&gt;各位亲爱的朋友们，如果您对这个项目感兴趣，请先给我一个&lt;i style="color: #EA2626;"&gt;star&lt;/i&gt;吧，谢谢！&lt;/span&gt;💕&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;302.AI：新用户使用邀请码注册，即可领取 $1 测试额度！&lt;a href="https://share.302.ai/1KUpfG"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
 &lt;li&gt;火山方舟：新用户每个模型注册即送50万tokens，&lt;a href="https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;amp;ac=DSASUQY5&amp;amp;rc=IJSE43PZ"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;硅基流动(siliconflow)，注册即送2000万Tokens，&lt;a href="https://cloud.siliconflow.cn/i/foufCerk"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tushare大数据开放社区,免费提供各类金融数据,助力行业和量化研究(注意：Tushare只需要120积分即可，注册完成个人资料补充即可得120积分！！！)，&lt;a href="https://tushare.pro/register?reg=701944"&gt;注册链接&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;软件快速迭代开发中,请大家优先测试和使用最新发布的版本。&lt;/li&gt; 
 &lt;li&gt;欢迎大家提出宝贵的建议，欢迎提issue,PR。当然更欢迎&lt;a href="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/#%E9%83%BD%E5%88%92%E5%88%B0%E8%BF%99%E4%BA%86%E5%A6%82%E6%9E%9C%E6%88%91%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%AF%B9%E6%82%A8%E6%9C%89%E5%B8%AE%E5%8A%A9%E8%AF%B7%E8%B5%9E%E5%8A%A9%E6%88%91%E5%90%A7"&gt;赞助我&lt;/a&gt;。💕&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;支持开源💕计划&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;赞助计划&lt;/th&gt; 
   &lt;th&gt;赞助等级&lt;/th&gt; 
   &lt;th align="left"&gt;权益说明&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月 0 RMB&lt;/td&gt; 
   &lt;td&gt;vip0&lt;/td&gt; 
   &lt;td align="left"&gt;🌟 全部功能,软件自动更新(从GitHub下载),自行解决github平台网络问题。&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月赞助 18.8 RMB&lt;br /&gt;每年赞助 120 RMB&lt;/td&gt; 
   &lt;td&gt;vip1&lt;/td&gt; 
   &lt;td align="left"&gt;💕 全部功能,软件自动更新(从CDN下载),更新快速便捷。AI配置指导，提示词参考等&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月赞助 28.8 RMB&lt;br /&gt;每年赞助 240 RMB&lt;/td&gt; 
   &lt;td&gt;vip2&lt;/td&gt; 
   &lt;td align="left"&gt;💕 💕 vip1全部功能,赠送硅基流动AI分析服务&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;每月赞助 X RMB&lt;/td&gt; 
   &lt;td&gt;vipX&lt;/td&gt; 
   &lt;td align="left"&gt;🧩 更多计划，视go-stock开源项目发展情况而定...(承接GitHub项目README广告推广💖)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🧩 重大功能开发计划&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;功能说明&lt;/th&gt; 
   &lt;th&gt;状态&lt;/th&gt; 
   &lt;th&gt;备注&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;股票分析知识库&lt;/td&gt; 
   &lt;td&gt;🚧&lt;/td&gt; 
   &lt;td&gt;未来计划&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ai智能选股&lt;/td&gt; 
   &lt;td&gt;🚧&lt;/td&gt; 
   &lt;td&gt;Ai智能选股功能开发中(下半年重点开发计划)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ETF支持&lt;/td&gt; 
   &lt;td&gt;🚧&lt;/td&gt; 
   &lt;td&gt;ETF数据支持 (目前可以查看净值和估值)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;美股支持&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;美股数据支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;港股支持&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;港股数据支持&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;多轮对话&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;AI分析后可继续对话提问&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;自定义AI分析提问模板&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;可配置的提问模板 &lt;a href="https://github.com/ArvinLovegood/go-stock/releases/tag/v2025.2.12.7-alpha"&gt;v2025.2.12.7-alpha&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;不再强制依赖Chrome浏览器&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;默认使用edge浏览器抓取新闻资讯&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;👀 更新日志&lt;/h2&gt; 
&lt;h3&gt;2025.07.08 实现软件自动更新功能&lt;/h3&gt; 
&lt;h3&gt;2025.07.07 卡片添加迷你分时图&lt;/h3&gt; 
&lt;h3&gt;2025.07.05 MacOs支持&lt;/h3&gt; 
&lt;h3&gt;2025.07.01 AI分析集成工具函数，AI分析将更加智能&lt;/h3&gt; 
&lt;h3&gt;2025.06.30 添加指标选股功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.27 添加财经日历和重大事件时间轴功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.25 添加热门股票、事件和话题功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.18 更新内置股票基础数据,软件内实时市场资讯信息提醒，添加行业研究功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.15 添加公司公告信息搜索/查看功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.15 添加个股研报到弹出菜单&lt;/h3&gt; 
&lt;h3&gt;2025.06.13 添加个股研报功能&lt;/h3&gt; 
&lt;h3&gt;2025.06.12 添加龙虎榜功能，新增行业排名分类&lt;/h3&gt; 
&lt;h3&gt;2025.05.30 优化股票分时图显示&lt;/h3&gt; 
&lt;h3&gt;2025.05.20 修复财联社电报获取问题&lt;/h3&gt; 
&lt;h3&gt;2025.05.16 优化资金趋势图表组件&lt;/h3&gt; 
&lt;h3&gt;2025.05.15 重构应用加载和数据初始化逻辑，添加股票资金趋势功能，资金趋势图表增加主力当日净流入数据并优化展示效果&lt;/h3&gt; 
&lt;h3&gt;2025.05.14 添加个股资金流向功能，排行榜增加股票行情K线图弹窗&lt;/h3&gt; 
&lt;h3&gt;2025.05.13 添加行业排名功能&lt;/h3&gt; 
&lt;h3&gt;2025.05.09 添加A股盘口数据解析和展示功能&lt;/h3&gt; 
&lt;h3&gt;2025.05.07 优化分时图的展示&lt;/h3&gt; 
&lt;h3&gt;2025.04.29 补全港股/美股基础数据，优化港股股价延迟问题，优化初始化逻辑&lt;/h3&gt; 
&lt;h3&gt;2025.04.25 市场资讯支持AI分析和总结：让AI帮你读市场！&lt;/h3&gt; 
&lt;h3&gt;2025.04.24 新增市场行情模块：即时掌握全球市场行情资讯/动态，从此再也不用偷摸去各大财经网站啦。go-stock一键帮你搞定！&lt;/h3&gt; 
&lt;h3&gt;2025.04.22 优化K线图展示，支持拉伸放大，看得更舒服啦！&lt;/h3&gt; 
&lt;h3&gt;2025.04.21 港股，美股K线数据获取优化&lt;/h3&gt; 
&lt;h3&gt;2025.04.01 优化部分设置选项，避免重启软件&lt;/h3&gt; 
&lt;h3&gt;2025.03.31 优化数据爬取&lt;/h3&gt; 
&lt;h3&gt;2025.03.30 AI自动定时分析功能&lt;/h3&gt; 
&lt;h3&gt;2025.03.29 多提示词模板管理，AI分析时支持选择不同提示词模板&lt;/h3&gt; 
&lt;h3&gt;2025.03.28 AI分析结果保存为markdown文件时，支持保存位置目录选择&lt;/h3&gt; 
&lt;h3&gt;2025.03.15 自定义爬虫使用的浏览器路径配置&lt;/h3&gt; 
&lt;h3&gt;2025.03.14 优化编译构建，大幅减少编译后的程序文件大小&lt;/h3&gt; 
&lt;h3&gt;2025.03.09 基金估值和净值监控查看&lt;/h3&gt; 
&lt;h3&gt;2025.03.06 项目社区分享功能&lt;/h3&gt; 
&lt;h3&gt;2025.02.28 美股数据支持&lt;/h3&gt; 
&lt;h3&gt;2025.02.23 弹幕功能，盯盘不再孤单，无聊划个水！😎&lt;/h3&gt; 
&lt;h3&gt;2025.02.22 港股数据支持(目前有延迟)&lt;/h3&gt; 
&lt;h3&gt;2025.02.16 AI分析后可继续对话提问&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArvinLovegood/go-stock/releases/tag/v2025.2.16.1-alpha"&gt;v2025.2.16.1-alpha&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;2025.02.12 可配置的提问模板&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArvinLovegood/go-stock/releases/tag/v2025.2.12.7-alpha"&gt;v2025.2.12.7-alpha&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🦄 重大更新&lt;/h2&gt; 
&lt;h3&gt;BIG NEWS !!! 重大更新！！！&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;2025.04.25 市场资讯支持AI分析和总结：让AI帮你读市场！ &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/img.png" alt="img.png" /&gt;&lt;/li&gt; 
 &lt;li&gt;2025.04.24 新增市场行情模块：即时掌握全球市场行情资讯/动态，从此再也不用偷摸去各大财经网站啦。go-stock一键帮你搞定！ &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img13.png" alt="img.png" /&gt; &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_13.png" alt="img_13.png" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_14.png" alt="img_14.png" /&gt;&lt;/li&gt; 
 &lt;li&gt;2025.01.17 新增AI大模型分析股票功能 &lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img.png" alt="img_5.png" /&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📸 功能截图&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_6.png" alt="img_1.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;设置&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_4.png" alt="img_12.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;成本设置&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_7.png" alt="img.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;日K&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_12.png" alt="img_12.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;分时&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_9.png" alt="img_3.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;钉钉报警通知&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_5.png" alt="img_4.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;AI分析股票&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img.png" alt="img_5.png" /&gt;&lt;/p&gt; 
&lt;h3&gt;版本信息提示&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/img_11.png" alt="img_11.png" /&gt;&lt;/p&gt; 
&lt;h2&gt;💕 感谢以下项目&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.naiveui.com/"&gt;NaiveUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wails.io/"&gt;Wails&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitejs.dev/"&gt;Vite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tushare.pro/register?reg=701944"&gt;Tushare&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;😘 赞助我&lt;/h2&gt; 
&lt;h3&gt;都划到这了，如果我的项目对您有帮助，请赞助我吧！😊😊😊&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;支付宝&lt;/th&gt; 
   &lt;th&gt;微信&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/alipay.jpg" alt="alipay.jpg" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/screenshot/wxpay.jpg" alt="wxpay.jpg" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#ArvinLovegood/go-stock&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=ArvinLovegood/go-stock&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🤖 状态&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/40b07d415a42c2264a18c4fe1b6f182ff1470687.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;🐳 关于技术支持申明&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;本软件基于开源技术构建，使用Wails、NaiveUI、Vue、AI大模型等开源项目。 技术上如有问题，可以先向对应的开源社区请求帮助。&lt;/li&gt; 
 &lt;li&gt;开源不易，本人精力和时间有限，如需一对一技术支持，请先赞助。联系微信(备注 技术支持)：ArvinLovegood&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img src="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/build/wx.jpg" width="301px" height="402px" alt="ArvinLovegood" /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;技术支持方式&lt;/th&gt; 
   &lt;th align="center"&gt;赞助(元)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;加 QQ：506808970，微信：ArvinLovegood&lt;/td&gt; 
   &lt;td align="center"&gt;100/次&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;长期技术支持（不限次数，新功能优先体验等）&lt;/td&gt; 
   &lt;td align="center"&gt;5000&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/ArvinLovegood/go-stock/dev/LICENSE"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>helm/helm</title>
      <link>https://github.com/helm/helm</link>
      <description>&lt;p&gt;The Kubernetes Package Manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helm&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/helm/helm/actions?workflow=release"&gt;&lt;img src="https://github.com/helm/helm/workflows/release/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/helm.sh/helm/v4"&gt;&lt;img src="https://goreportcard.com/badge/helm.sh/helm/v4" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/helm.sh/helm/v4"&gt;&lt;img src="https://img.shields.io/static/v1?label=godoc&amp;amp;message=reference&amp;amp;color=blue" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3131"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3131/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/helm/helm"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/helm/helm/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/helm"&gt;&lt;img src="https://insights.production.lfx.dev/api/badge/health-score?project=helm" alt="LFX Health Score" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources.&lt;/p&gt; 
&lt;p&gt;Use Helm to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find and use &lt;a href="https://artifacthub.io/packages/search?kind=0"&gt;popular software packaged as Helm Charts&lt;/a&gt; to run in Kubernetes&lt;/li&gt; 
 &lt;li&gt;Share your own applications as Helm Charts&lt;/li&gt; 
 &lt;li&gt;Create reproducible builds of your Kubernetes applications&lt;/li&gt; 
 &lt;li&gt;Intelligently manage your Kubernetes manifest files&lt;/li&gt; 
 &lt;li&gt;Manage releases of Helm packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm in a Handbasket&lt;/h2&gt; 
&lt;p&gt;Helm is a tool that streamlines installing and managing Kubernetes applications. Think of it like apt/yum/homebrew for Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Helm renders your templates and communicates with the Kubernetes API&lt;/li&gt; 
 &lt;li&gt;Helm runs on your laptop, CI/CD, or wherever you want it to run.&lt;/li&gt; 
 &lt;li&gt;Charts are Helm packages that contain at least two things: 
  &lt;ul&gt; 
   &lt;li&gt;A description of the package (&lt;code&gt;Chart.yaml&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;One or more templates, which contain Kubernetes manifest files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Charts can be stored on disk, or fetched from remote chart repositories (like Debian or RedHat packages)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm Development and Stable Versions&lt;/h2&gt; 
&lt;p&gt;Helm v4 is currently under development on the &lt;code&gt;main&lt;/code&gt; branch. This is unstable and the APIs within the Go SDK and at the command line are changing. Helm v3 (current stable) is maintained on the &lt;code&gt;dev-v3&lt;/code&gt; branch. APIs there follow semantic versioning.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Binary downloads of the Helm client can be found on &lt;a href="https://github.com/helm/helm/releases/latest"&gt;the Releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unpack the &lt;code&gt;helm&lt;/code&gt; binary and add it to your PATH and you are good to go!&lt;/p&gt; 
&lt;p&gt;If you want to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; users can use &lt;code&gt;brew install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; users can use &lt;code&gt;choco install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/"&gt;Winget&lt;/a&gt; users can use &lt;code&gt;winget install Helm.Helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scoop.sh/"&gt;Scoop&lt;/a&gt; users can use &lt;code&gt;scoop install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snapcraft.io/"&gt;Snapcraft&lt;/a&gt; users can use &lt;code&gt;snap install helm --classic&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev"&gt;Flox&lt;/a&gt; users can use &lt;code&gt;flox install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To rapidly get Helm up and running, start with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://helm.sh/docs/intro/install/"&gt;installation guide&lt;/a&gt; for more options, including installing pre-releases.&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;Get started with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start guide&lt;/a&gt; or plunge into the &lt;a href="https://helm.sh/docs"&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/helm/helm/milestones"&gt;Helm roadmap uses GitHub milestones&lt;/a&gt; to track the progress of the project.&lt;/p&gt; 
&lt;p&gt;The development of Helm v4 is currently happening on the &lt;code&gt;main&lt;/code&gt; branch while the development of Helm v3, the stable branch, is happening on the &lt;code&gt;dev-v3&lt;/code&gt; branch. Changes should be made to the &lt;code&gt;main&lt;/code&gt; branch prior to being added to the &lt;code&gt;dev-v3&lt;/code&gt; branch so that all changes are carried along to Helm v4.&lt;/p&gt; 
&lt;h2&gt;Community, discussion, contribution, and support&lt;/h2&gt; 
&lt;p&gt;You can reach the Helm community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kubernetes.slack.com"&gt;Kubernetes Slack&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-users"&gt;#helm-users&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-dev"&gt;#helm-dev&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/charts"&gt;#charts&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mailing List: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-helm"&gt;Helm Mailing List&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Developer Call: Thursdays at 9:30-10:00 Pacific (&lt;a href="https://github.com/helm/community/raw/master/communication.md#meetings"&gt;meeting details&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;If you're interested in contributing, please refer to the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; &lt;strong&gt;before submitting a pull request&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;Participation in the Helm community is governed by the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>go-task/task</title>
      <link>https://github.com/go-task/task</link>
      <description>&lt;p&gt;A task runner / simpler Make alternative written in Go&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://taskfile.dev"&gt; &lt;img src="https://raw.githubusercontent.com/go-task/task/main/website/src/public/img/logo.svg?sanitize=true" width="200px" height="200px" /&gt; &lt;/a&gt; 
 &lt;h1&gt;Task&lt;/h1&gt; 
 &lt;p&gt; Task is a task runner / build tool that aims to be simpler and easier to use than, for example, &lt;a href="https://www.gnu.org/software/make/"&gt;GNU Make&lt;/a&gt;&lt;a&gt;. &lt;/a&gt;&lt;/p&gt;
 &lt;a&gt; &lt;/a&gt;
 &lt;p&gt;&lt;a&gt; &lt;/a&gt;&lt;a href="https://taskfile.dev/installation/"&gt;Installation&lt;/a&gt; | &lt;a href="https://taskfile.dev/usage/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://twitter.com/taskfiledev"&gt;Twitter&lt;/a&gt; | &lt;a href="https://bsky.app/profile/taskfile.dev"&gt;Bluesky&lt;/a&gt; | &lt;a href="https://fosstodon.org/@task"&gt;Mastodon&lt;/a&gt; | &lt;a href="https://discord.gg/6TY36E39UK"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
 &lt;h1&gt;Gold Sponsors&lt;/h1&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" valign="middle"&gt; &lt;a target="_blank" href="https://devowl.io"&gt; &lt;img src="https://devowl.io/wp-content/uploads/meta/favicon.webp" height="100px" title="devowl.io" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>kubernetes-sigs/gateway-api</title>
      <link>https://github.com/kubernetes-sigs/gateway-api</link>
      <description>&lt;p&gt;Repository for the next iteration of composite service (e.g. Ingress) and load balancing APIs.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Kubernetes Gateway API&lt;/h1&gt; 
&lt;p&gt;The Gateway API is a part of &lt;a href="https://github.com/kubernetes/community/tree/master/sig-network"&gt;SIG Network&lt;/a&gt;, and this repository contains the specification and Custom Resource Definitions (CRDs).&lt;/p&gt; 
&lt;h2&gt;Status&lt;/h2&gt; 
&lt;p&gt;The latest supported version is &lt;code&gt;v1&lt;/code&gt; as released by the &lt;a href="https://github.com/kubernetes-sigs/gateway-api/releases/tag/v1.3.0"&gt;v1.3.0 release&lt;/a&gt; of this project.&lt;/p&gt; 
&lt;p&gt;This version of the API is has GA level support for the following resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;v1.GatewayClass&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.Gateway&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.HTTPRoute&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;v1.GRPCRoute&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For all the other APIs and their support levels please consult &lt;a href="https://gateway-api.sigs.k8s.io/reference/spec/"&gt;the spec&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;h3&gt;Website&lt;/h3&gt; 
&lt;p&gt;The API specification and detailed documentation is available on the project website: &lt;a href="https://gateway-api.sigs.k8s.io/"&gt;https://gateway-api.sigs.k8s.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Concepts&lt;/h3&gt; 
&lt;p&gt;To get started, please read through &lt;a href="https://gateway-api.sigs.k8s.io/concepts/api-overview"&gt;API concepts&lt;/a&gt; and &lt;a href="https://gateway-api.sigs.k8s.io/concepts/security-model"&gt;Security model&lt;/a&gt;. These documents give the necessary background to understand the API and the use-cases it targets.&lt;/p&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;p&gt;Once you have a good understanding of the API at a higher-level, check out &lt;a href="https://gateway-api.sigs.k8s.io/guides/"&gt;getting started&lt;/a&gt; to install your first Gateway controller and try out one of the guides.&lt;/p&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;p&gt;For a complete API reference, please refer to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gateway-api.sigs.k8s.io/reference/spec/"&gt;API reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pkg.go.dev/sigs.k8s.io/gateway-api"&gt;Go docs for the package&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Gateway API conformance&lt;/h2&gt; 
&lt;p&gt;If you are developing a Gateway API implementation and want to run conformance tests against your project and eventually submit the proof of conformance, visit the &lt;a href="https://gateway-api.sigs.k8s.io/concepts/conformance/"&gt;conformance documentation&lt;/a&gt; for the test suite documentation, and the conformance reports &lt;a href="https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/conformance/reports/README.md"&gt;readme&lt;/a&gt; to see the reports submission rules. If you are a user who wants to explore the features supported by the various implementations, navigate the &lt;a href="https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/conformance/reports/"&gt;conformance reports&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Community meeting schedule, notes and developer guide can be found on the &lt;a href="https://gateway-api.sigs.k8s.io/contributing/community"&gt;community page&lt;/a&gt;. Our Kubernetes Slack channel is &lt;a href="https://kubernetes.slack.com/messages/sig-network-gateway-api"&gt;#sig-network-gateway-api&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;Participation in the Kubernetes community is governed by the &lt;a href="https://raw.githubusercontent.com/kubernetes-sigs/gateway-api/main/code-of-conduct.md"&gt;Kubernetes Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fluxcd/flux2</title>
      <link>https://github.com/fluxcd/flux2</link>
      <description>&lt;p&gt;Open and extensible continuous delivery solution for Kubernetes. Powered by GitOps Toolkit.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Flux version 2&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/fluxcd/flux2/releases"&gt;&lt;img src="https://img.shields.io/github/release/fluxcd/flux2/all.svg?sanitize=true" alt="release" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/4782"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/4782/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/fluxcd/flux2"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/fluxcd/flux2/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/custom%2B162%2Fgithub.com%2Ffluxcd%2Fflux2?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/custom%2B162%2Fgithub.com%2Ffluxcd%2Fflux2.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/fluxcd-community/flux2"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/flux2" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;a href="https://fluxcd.io/flux/security/slsa-assessment"&gt;&lt;img src="https://slsa.dev/images/gh-badge-level3.svg?sanitize=true" alt="SLSA 3" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Flux is a tool for keeping Kubernetes clusters in sync with sources of configuration (like Git repositories and OCI artifacts), and automating updates to configuration when there is new code to deploy.&lt;/p&gt; 
&lt;p&gt;Flux version 2 ("v2") is built from the ground up to use Kubernetes' API extension system, and to integrate with Prometheus and other core components of the Kubernetes ecosystem. In version 2, Flux supports multi-tenancy and support for syncing an arbitrary number of Git repositories, among other long-requested features.&lt;/p&gt; 
&lt;p&gt;Flux v2 is constructed with the &lt;a href="https://raw.githubusercontent.com/fluxcd/flux2/main/#gitops-toolkit"&gt;GitOps Toolkit&lt;/a&gt;, a set of composable APIs and specialized tools for building Continuous Delivery on top of Kubernetes.&lt;/p&gt; 
&lt;p&gt;Flux is a Cloud Native Computing Foundation (&lt;a href="https://www.cncf.io/"&gt;CNCF&lt;/a&gt;) graduated project, used in production by various &lt;a href="https://fluxcd.io/adopters"&gt;organisations&lt;/a&gt; and &lt;a href="https://fluxcd.io/ecosystem"&gt;cloud providers&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quickstart and documentation&lt;/h2&gt; 
&lt;p&gt;To get started check out this &lt;a href="https://fluxcd.io/flux/get-started/"&gt;guide&lt;/a&gt; on how to bootstrap Flux on Kubernetes and deploy a sample application in a GitOps manner.&lt;/p&gt; 
&lt;p&gt;For more comprehensive documentation, see the following guides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/guides/repository-structure/"&gt;Ways of structuring your repositories&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/guides/helmreleases/"&gt;Manage Helm Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/guides/image-update/"&gt;Automate image updates to Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/guides/mozilla-sops/"&gt;Manage Kubernetes secrets with Flux and SOPS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you need help, please refer to our &lt;strong&gt;&lt;a href="https://fluxcd.io/support/"&gt;Support page&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;GitOps Toolkit&lt;/h2&gt; 
&lt;p&gt;The GitOps Toolkit is the set of APIs and controllers that make up the runtime for Flux v2. The APIs comprise Kubernetes custom resources, which can be created and updated by a cluster user, or by other automation tooling.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/fluxcd/flux2/main/docs/diagrams/fluxcd-controllers.png" alt="overview" /&gt;&lt;/p&gt; 
&lt;p&gt;You can use the toolkit to extend Flux, or to build your own systems for continuous delivery -- see &lt;a href="https://fluxcd.io/flux/gitops-toolkit/source-watcher/"&gt;the developer guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Components&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/source/"&gt;Source Controller&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/source/gitrepositories/"&gt;GitRepository CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/source/ocirepositories/"&gt;OCIRepository CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/source/helmrepositories/"&gt;HelmRepository CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/source/helmcharts/"&gt;HelmChart CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/source/buckets/"&gt;Bucket CRD&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/kustomize/"&gt;Kustomize Controller&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/kustomize/kustomizations/"&gt;Kustomization CRD&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/helm/"&gt;Helm Controller&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/helm/helmreleases/"&gt;HelmRelease CRD&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/notification/"&gt;Notification Controller&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/notification/providers/"&gt;Provider CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/notification/alerts/"&gt;Alert CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/notification/receivers/"&gt;Receiver CRD&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/image/"&gt;Image Automation Controllers&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/image/imagerepositories/"&gt;ImageRepository CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/image/imagepolicies/"&gt;ImagePolicy CRD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://fluxcd.io/flux/components/image/imageupdateautomations/"&gt;ImageUpdateAutomation CRD&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Need help or want to contribute? Please see the links below. The Flux project is always looking for new contributors and there are a multitude of ways to get involved.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Getting Started? 
  &lt;ul&gt; 
   &lt;li&gt;Look at our &lt;a href="https://fluxcd.io/flux/get-started/"&gt;Get Started guide&lt;/a&gt; and give us feedback&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Need help? 
  &lt;ul&gt; 
   &lt;li&gt;First: Ask questions on our &lt;a href="https://github.com/fluxcd/flux2/discussions"&gt;GH Discussions page&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Second: Talk to us in the #flux channel on &lt;a href="https://slack.cncf.io/"&gt;CNCF Slack&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Please follow our &lt;a href="https://fluxcd.io/support/"&gt;Support Guidelines&lt;/a&gt; (in short: be nice, be respectful of volunteers' time, understand that maintainers and contributors cannot respond to all DMs, and keep discussions in the public #flux channel as much as possible).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Have feature proposals or want to contribute? 
  &lt;ul&gt; 
   &lt;li&gt;Propose features on our &lt;a href="https://github.com/fluxcd/flux2/discussions"&gt;GitHub Discussions page&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Join our upcoming dev meetings (&lt;a href="https://docs.google.com/document/d/1l_M0om0qUEN_NNiGgpqJ2tvsF2iioHkaARDeh6b70B0/view"&gt;meeting access and agenda&lt;/a&gt;).&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-flux-dev"&gt;Join the flux-dev mailing list&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Check out &lt;a href="https://raw.githubusercontent.com/fluxcd/flux2/main/CONTRIBUTING.md"&gt;how to contribute&lt;/a&gt; to the project.&lt;/li&gt; 
   &lt;li&gt;Check out the &lt;a href="https://fluxcd.io/roadmap/"&gt;project roadmap&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Events&lt;/h3&gt; 
&lt;p&gt;Check out our &lt;strong&gt;&lt;a href="https://fluxcd.io/#calendar"&gt;events calendar&lt;/a&gt;&lt;/strong&gt;, both with upcoming talks, events and meetings you can attend. Or view the &lt;strong&gt;&lt;a href="https://fluxcd.io/resources"&gt;resources section&lt;/a&gt;&lt;/strong&gt; with past events videos you can watch.&lt;/p&gt; 
&lt;p&gt;We look forward to seeing you with us!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>coreybutler/nvm-windows</title>
      <link>https://github.com/coreybutler/nvm-windows</link>
      <description>&lt;p&gt;A node.js version management utility for Windows. Ironically written in Go.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
 &lt;h2&gt;Notice: We are working full time on Author, which includes &lt;a href="https://github.com/coreybutler/nvm-windows/wiki/Runtime"&gt;Runtime&lt;/a&gt;, the successor to NVM for Windows.&lt;/h2&gt;Complete 
 &lt;a href="https://t.co/oGqQCM9FPx"&gt;this form&lt;/a&gt; to provide your thoughts and sign up for progress updates.
 &lt;br /&gt;
 &lt;br /&gt;Updates will also be posted on the 
 &lt;a href="https://linkedin.com/company/authorsoftware"&gt;Author Software LinkedIn Page&lt;/a&gt;.
&lt;/div&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;h1 align="center"&gt;NVM for Windows&lt;/h1&gt; 
&lt;div align="center"&gt;
  The 
 &lt;a href="https://docs.microsoft.com/en-us/windows/nodejs/setup-on-windows"&gt;Microsoft&lt;/a&gt;/
 &lt;a href="https://docs.npmjs.com/cli/v9/configuring-npm/install#windows-node-version-managers"&gt;npm&lt;/a&gt;/
 &lt;a href="https://cloud.google.com/nodejs/docs/setup#installing_nvm"&gt;Google&lt;/a&gt; recommended Node.js version manager for 
 &lt;em&gt;Windows&lt;/em&gt;.
 &lt;br /&gt; 
 &lt;details&gt; 
  &lt;summary&gt;&lt;b&gt;This is not the same thing as nvm!&lt;/b&gt; (expand for details)&lt;/summary&gt; 
  &lt;p&gt;&lt;em&gt;The original &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt; is a completely separate project for Mac/Linux only.&lt;/em&gt; This project uses an entirely different philosophy and is not just a clone of nvm. Details are listed in &lt;a href="https://raw.githubusercontent.com/coreybutler/nvm-windows/master/#bulb-why-another-version-manager"&gt;Why another version manager?&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/coreybutler/nvm-windows/master/#bulb-whats-the-big-difference"&gt;what's the big difference?&lt;/a&gt;.&lt;/p&gt; 
 &lt;/details&gt; 
 &lt;p&gt;&lt;a href="https://github.com/coreybutler/nvm-windows/releases"&gt;&lt;img src="https://img.shields.io/badge/-Download%20Now!-%2322A6F2" alt="Download Now" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/coreybutler/nvm-windows/master/(https://github.com/coreybutler/nvm-windows/releases)"&gt;&lt;img src="https://img.shields.io/github/v/tag/coreybutler/nvm-windows?label=Latest%20Release&amp;amp;style=social&amp;amp;x=1" alt="GitHub tag (latest SemVer)" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/release-date/coreybutler/nvm-windows?label=Released&amp;amp;style=social" alt="GitHub Release Date" /&gt; &lt;img src="https://img.shields.io/github/downloads/coreybutler/nvm-windows/total?label=Downloads&amp;amp;style=social" alt="GitHub all releases" /&gt; &lt;a href="https://github.com/coreybutler/nvm-windows/discussions"&gt;&lt;img src="https://img.shields.io/badge/-Discuss-blue" alt="Discuss" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/tweet?hashtags=nodejs&amp;amp;original_referer=http%3A%2F%2F127.0.0.1%3A91%2F&amp;amp;text=Check%20out%20NVM%20for%20Windows!&amp;amp;tw_p=tweetbutton&amp;amp;url=http%3A%2F%2Fgithub.com%2Fcoreybutler%2Fnvm-windows&amp;amp;via=goldglovecb"&gt;&lt;img src="https://img.shields.io/twitter/url?style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fintent%2Ftweet%3Fhashtags%3Dnodejs%26original_referer%3Dhttp%253A%252F%252F127.0.0.1%253A91%252F%26text%3DCheck%2520out%2520NVM%2520for%2520Windows%21%26tw_p%3Dtweetbutton%26url%3Dhttp%253A%252F%252Fgithub.com%252Fcoreybutler%252Fnvm-windows%26via%3Dgoldglovecb" alt="Twitter URL" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h5 align="center"&gt;Sponsors&lt;/h5&gt; 
&lt;div align="center"&gt; 
 &lt;table cellpadding="5" cellspacing="0" border="0" align="center"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt;&lt;a href="https://linkedin.com/company/authorsoftware"&gt;&lt;img src="https://github.com/coreybutler/staticassets/raw/master/sponsors/logo_author_software_flat.png" width="200px" /&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td width="33%" align="center"&gt;&lt;a href="https://ecorventures.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8259581?s=200&amp;amp;v=4" height="30px" /&gt;&lt;/a&gt;&lt;/td&gt; 
    &lt;td width="33%" align="center"&gt;&lt;a href="https://github.com/microsoft"&gt;&lt;img src="https://user-images.githubusercontent.com/770982/195955265-5c3dca78-7140-4ec6-b05a-f308518643ee.png" height="30px" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="4" align="center"&gt; &lt;a href="https://github.com/sponsors/coreybutler"&gt;&lt;img src="https://img.shields.io/github/sponsors/coreybutler?label=Individual%20Sponsors&amp;amp;logo=github&amp;amp;style=social" /&gt;&lt;/a&gt; &amp;nbsp;&lt;a href="https://github.com/sponsors/coreybutler"&gt;&lt;img src="https://img.shields.io/badge/-Become%20a%20Sponsor-yellow" /&gt;&lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="4" align="center"&gt; &lt;img src="https://github.blog/wp-content/uploads/2020/09/github-stars-logo_Color.png" width="50" /&gt;&lt;br /&gt; &lt;b&gt;Can't sponsor?&lt;/b&gt;&lt;br /&gt;Consider &lt;a href="https://stars.github.com/nominate/" target="_blank"&gt;nominating @coreybutler for a Github star&lt;/a&gt;. &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt;
 &lt;b&gt;Running into issues?&lt;/b&gt; See the 
 &lt;a href="https://github.com/coreybutler/nvm-windows/wiki/Common-Issues"&gt;common issues wiki&lt;/a&gt;.
&lt;/div&gt; 
&lt;br /&gt; 
&lt;table style="background-color:red;padding:6px;border-radius:3px;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; &lt;h3&gt;Seeking Feedback:&lt;/h3&gt; We're working on &lt;a href="https://github.com/coreybutler/nvm-windows/wiki/Runtime"&gt;Runtime (rt)&lt;/a&gt;, the successor to NVM For Windows. Please contribute by taking a minute to complete &lt;a href="https://t.co/oGqQCM9FPx"&gt;this form&lt;/a&gt;. Thank you! &lt;h3&gt;&lt;/h3&gt; &lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Manage multiple installations of node.js on a Windows computer.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; Similar (not identical) to &lt;a href="https://github.com/creationix/nvm"&gt;nvm&lt;/a&gt;, but for Windows. Has an installer. &lt;a href="https://github.com/coreybutler/nvm-windows/releases"&gt;Download Now&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;This has always been a node version manager, not an io.js manager, so there is no back-support for io.js. Node 4+ is supported. Remember when running &lt;code&gt;nvm install&lt;/code&gt; or &lt;code&gt;nvm use&lt;/code&gt;, Windows usually requires administrative rights (to create symlinks). To install the latest version of Node.js, run &lt;code&gt;nvm install latest&lt;/code&gt;. To install the latest stable version, run &lt;code&gt;nvm install lts&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/coreybutler/staticassets/raw/master/images/nvm-1.1.8-screenshot.jpg" alt="NVM for Windows" /&gt;&lt;/p&gt; 
&lt;p&gt;There are situations where the ability to switch between different versions of Node.js can be very useful. For example, if you want to test a module you're developing with the latest bleeding edge version without uninstalling the stable version of node, this utility can help.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/coreybutler/staticassets/raw/master/images/nvm-usage-highlighted.jpg" alt="Switch between stable and unstable versions." /&gt;&lt;/p&gt; 
&lt;h3&gt;Installation &amp;amp; Upgrades&lt;/h3&gt; 
&lt;h4&gt;&lt;span&gt;⭐&lt;/span&gt; &lt;span&gt;⭐&lt;/span&gt; Uninstall any pre-existing Node installations!! &lt;span&gt;⭐&lt;/span&gt; &lt;span&gt;⭐&lt;/span&gt;&lt;/h4&gt; 
&lt;p&gt;The simplest (recommended) way to get NVM for Windows running properly is to uninstall any prior Node installation &lt;em&gt;before&lt;/em&gt; installing NVM for Windows. It avoids all of the pitfalls listed below. However; you may not wish to nuke your Node installation if you've highly customized it. NVM for Windows &lt;em&gt;can&lt;/em&gt; assume management of an existing installation, but there are nuances to this (dependent entirely on the permissions of the user running the installation). If you have an administrative account, it's relatively safe to install NVM for Windows before uninstalling the original Node version. If you are working in a closed environment, such as a corporate Active Directory environment where installations/uninstallations are controlled by group policy, you should really consider removing the original version of Node before installing NVM4W.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Permission Problems&lt;/em&gt; For security reasons, Windows will not allow an application from one vendor to "uninstall" an application from a different vendor. The official NVM4W installer will attempt assume management of an existing installation of Node., but it cannot actually uninstall the original Node.js version. To work around this, NVM for Windows installer attempts to copy the original Node.js installation files to the NVM root. This includes global npm modules and configurations. Once this process is complete, the original Node.js installation can be uninstalled without losing data.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;PATH Installation Problems&lt;/em&gt; If you attempt to configure the &lt;code&gt;NVM_SYMLINK&lt;/code&gt; to use an existing directory (like &lt;code&gt;C:\Program Files\nodejs&lt;/code&gt;), it will fail because a symlink cannot overwrite a physical directory. This is not a problem if you choose a different symlink path (such as &lt;code&gt;C:\nvm\node&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;PATH Conflicts&lt;/em&gt; If you do not uninstall the original version, running &lt;code&gt;nvm use&lt;/code&gt; may appear to do nothing at all. Running &lt;code&gt;node -v&lt;/code&gt; will always show the original installation version. This is due to a &lt;a href="https://github.com/coreybutler/nvm-windows/wiki/Common-Issues#why-do-i-need-to-uninstall-nodejs-before-installing-nvm-for-windows"&gt;&lt;code&gt;PATH&lt;/code&gt; conflict&lt;/a&gt; that presents when the same application is installed multiple times. In NVM4W 1.1.11+, run &lt;code&gt;nvm debug&lt;/code&gt; to determine if you have a &lt;code&gt;PATH&lt;/code&gt; conflict.&lt;/p&gt; 
&lt;p&gt;For simpliciy, we recommend uninstalling any existing versions of Node.js before using NVM for Windows. Delete any existing Node.js installation directories (e.g., &lt;code&gt;%ProgramFiles%\nodejs&lt;/code&gt;) that might remain. NVM's generated symlink will not overwrite an existing (even empty) installation directory.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;👀&lt;/span&gt; &lt;strong&gt;Backup any global &lt;code&gt;npmrc&lt;/code&gt; config&lt;/strong&gt; &lt;span&gt;👀&lt;/span&gt; (e.g. &lt;code&gt;%AppData%\npm\etc\npmrc&lt;/code&gt;)&lt;/p&gt; 
&lt;p&gt;Alternatively, copy the settings to the user config &lt;code&gt;%UserProfile%\.npmrc&lt;/code&gt;. Delete the existing npm install location (e.g. &lt;code&gt;%AppData%\npm&lt;/code&gt;) to prevent global module conflicts.&lt;/p&gt; 
&lt;h4&gt;Install nvm-windows&lt;/h4&gt; 
&lt;p&gt;Use the &lt;a href="https://github.com/coreybutler/nvm/releases"&gt;latest installer&lt;/a&gt; (comes with an uninstaller). Alternatively, follow the &lt;a href="https://github.com/coreybutler/nvm-windows/wiki#manual-installation"&gt;manual installation&lt;/a&gt; guide.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;If NVM4W doesn't appear to work immediately after installation, restart the terminal/powershell (not the whole computer).&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/coreybutler/staticassets/raw/master/images/nvm-installer.jpg" alt="NVM for Windows Installer" /&gt;&lt;/p&gt; 
&lt;h4&gt;Reinstall any global utilities&lt;/h4&gt; 
&lt;p&gt;After install, reinstalling global utilities (e.g. yarn) will have to be done for each installed version of node:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;nvm use 14.0.0
npm install -g yarn
nvm use 12.0.1
npm install -g yarn
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Upgrading nvm-windows&lt;/h3&gt; 
&lt;p&gt;&lt;span&gt;💡&lt;/span&gt; &lt;em&gt;As of v1.1.8, there is an upgrade utility that will automate the upgrade process.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;To upgrade nvm-windows&lt;/strong&gt;, run the new installer. It will safely overwrite the files it needs to update without touching your node.js installations. Make sure you use the same installation and symlink folder. If you originally installed to the default locations, you just need to click "next" on each window until it finishes.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;nvm-windows runs in an Admin shell&lt;/strong&gt;. You'll need to start &lt;code&gt;powershell&lt;/code&gt; or Command Prompt as Administrator to use nvm-windows&lt;/p&gt; 
&lt;p&gt;NVM for Windows is a command line tool. Simply type &lt;code&gt;nvm&lt;/code&gt; in the console for help. The basic commands are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm arch [32|64]&lt;/code&gt;&lt;/strong&gt;: Show if node is running in 32 or 64 bit mode. Specify 32 or 64 to override the default architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm debug&lt;/code&gt;&lt;/strong&gt;: Check the NVM4W process for known problems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm current&lt;/code&gt;&lt;/strong&gt;: Display active version.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm install &amp;lt;version&amp;gt; [arch]&lt;/code&gt;&lt;/strong&gt;: The version can be a specific version, "latest" for the latest current version, or "lts" for the most recent LTS version. Optionally specify whether to install the 32 or 64 bit version (defaults to system arch). Set [arch] to "all" to install 32 AND 64 bit versions. Add &lt;code&gt;--insecure&lt;/code&gt; to the end of this command to bypass SSL validation of the remote download server.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm list [available]&lt;/code&gt;&lt;/strong&gt;: List the node.js installations. Type &lt;code&gt;available&lt;/code&gt; at the end to show a list of versions available for download.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm on&lt;/code&gt;&lt;/strong&gt;: Enable node.js version management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm off&lt;/code&gt;&lt;/strong&gt;: Disable node.js version management (does not uninstall anything).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm proxy [url]&lt;/code&gt;&lt;/strong&gt;: Set a proxy to use for downloads. Leave &lt;code&gt;[url]&lt;/code&gt; blank to see the current proxy. Set &lt;code&gt;[url]&lt;/code&gt; to "none" to remove the proxy.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm uninstall &amp;lt;version&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Uninstall a specific version.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm use &amp;lt;version&amp;gt; [arch]&lt;/code&gt;&lt;/strong&gt;: Switch to use the specified version. Optionally use &lt;code&gt;latest&lt;/code&gt;, &lt;code&gt;lts&lt;/code&gt;, or &lt;code&gt;newest&lt;/code&gt;. &lt;code&gt;newest&lt;/code&gt; is the latest &lt;em&gt;installed&lt;/em&gt; version. Optionally specify 32/64bit architecture. &lt;code&gt;nvm use &amp;lt;arch&amp;gt;&lt;/code&gt; will continue using the selected version, but switch to 32/64 bit mode. For information about using &lt;code&gt;use&lt;/code&gt; in a specific directory (or using &lt;code&gt;.nvmrc&lt;/code&gt;), please refer to &lt;a href="https://github.com/coreybutler/nvm-windows/issues/16"&gt;issue #16&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm root &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Set the directory where nvm should store different versions of node.js. If &lt;code&gt;&amp;lt;path&amp;gt;&lt;/code&gt; is not set, the current root will be displayed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm version&lt;/code&gt;&lt;/strong&gt;: Displays the current running version of NVM for Windows.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm node_mirror &amp;lt;node_mirror_url&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Set the node mirror.People in China can use &lt;em&gt;&lt;a href="https://npmmirror.com/mirrors/node/"&gt;https://npmmirror.com/mirrors/node/&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;nvm npm_mirror &amp;lt;npm_mirror_url&amp;gt;&lt;/code&gt;&lt;/strong&gt;: Set the npm mirror.People in China can use &lt;em&gt;&lt;a href="https://npmmirror.com/mirrors/npm/"&gt;https://npmmirror.com/mirrors/npm/&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;span&gt;⚠&lt;/span&gt; Gotcha!&lt;/h3&gt; 
&lt;p&gt;Please note that any global npm modules you may have installed are &lt;strong&gt;not&lt;/strong&gt; shared between the various versions of node.js you have installed. Additionally, some npm modules may not be supported in the version of node you're using, so be aware of your environment as you work.&lt;/p&gt; 
&lt;h3&gt;&lt;span&gt;📛&lt;/span&gt; Antivirus&lt;/h3&gt; 
&lt;p&gt;Users have reported some problems using antivirus, specifically McAfee. It appears the antivirus software is manipulating access to the VBScript engine. See &lt;a href="https://github.com/coreybutler/nvm-windows/issues/133"&gt;issue #133&lt;/a&gt; for details and resolution.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;v1.1.8 is not code signed&lt;/strong&gt;, but all other versions are signed by &lt;a href="https://ecorventures.com"&gt;Ecor Ventures LLC&lt;/a&gt;/&lt;a href="https://author.io"&gt;Author.io&lt;/a&gt;. This should help prevent false positives with most antivirus software.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;v1.1.8+ was not code signed due to an expired certificate (see the &lt;a href="https://github.com/coreybutler/nvm-windows/releases/tag/1.1.8"&gt;release notes&lt;/a&gt; for reasons). &lt;strong&gt;v1.1.9 &lt;em&gt;is&lt;/em&gt; code signed&lt;/strong&gt; thanks to &lt;a href="https://github.com/ajyong"&gt;ajyong&lt;/a&gt;, who sponsored the new certificate.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Using Yarn&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tldr;&lt;/strong&gt; &lt;code&gt;npm i -g yarn&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/coreybutler/nvm-windows/wiki/Common-Issues#how-do-i-use-yarn-with-nvm-windows"&gt;wiki&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Build from source&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install go from &lt;a href="http://golang.org"&gt;http://golang.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download source / Git Clone the repo&lt;/li&gt; 
 &lt;li&gt;Change GOARCH to amd64 in build.bat if you feel like building a 64-bit executable&lt;/li&gt; 
 &lt;li&gt;Fire up a Windows command prompt and change directory to project dir&lt;/li&gt; 
 &lt;li&gt;Execute &lt;code&gt;go get github.com/blang/semver&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Execute &lt;code&gt;go get github.com/olekukonko/tablewriter&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Execute &lt;code&gt;build.bat&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Check the &lt;code&gt;dist&lt;/code&gt;directory for generated setup program.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;span&gt;💡&lt;/span&gt; Why another version manager?&lt;/h2&gt; 
&lt;p&gt;There are several version managers for node.js. Tools like &lt;a href="https://github.com/creationix/nvm"&gt;nvm&lt;/a&gt; and &lt;a href="https://github.com/tj/n"&gt;n&lt;/a&gt; only run on Mac OSX and Linux. Windows users are left in the cold? No. &lt;a href="https://github.com/hakobera/nvmw"&gt;nvmw&lt;/a&gt; and &lt;a href="https://github.com/marcelklehr/nodist"&gt;nodist&lt;/a&gt; are both designed for Windows. So, why another version manager for Windows?&lt;/p&gt; 
&lt;p&gt;The architecture of most node version managers for Windows rely on &lt;code&gt;.bat&lt;/code&gt; files, which do some clever tricks to set or mimic environment variables. Some of them use node itself (once it's downloaded), which is admirable, but prone to problems. Right around node 0.10.30, the installation structure changed a little, causing some of these to just stop working with anything new.&lt;/p&gt; 
&lt;p&gt;Additionally, some users struggle to install these modules since it requires a little more knowledge of node's installation structure. I believe if it were easier for people to switch between versions, people might take the time to test their code on back and future versions... which is just good practice.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;💡&lt;/span&gt; What's the big difference?&lt;/h2&gt; 
&lt;p&gt;First and foremost, this version of nvm has no dependency on node. It's written in &lt;a href="https://golang.org/"&gt;Go&lt;/a&gt;, which is a much more structured approach than hacking around a limited &lt;code&gt;.bat&lt;/code&gt; file. It does not rely on having an existing node installation. Go offers the ability to create a Mac/Linux version on the same code base. In fact, this is already underway.&lt;/p&gt; 
&lt;p&gt;The control mechanism is also quite different. There are two general ways to support multiple node installations with hot switching capabilities. The first is to modify the system &lt;code&gt;PATH&lt;/code&gt; any time you switch versions, or bypass it by using a &lt;code&gt;.bat&lt;/code&gt; file to mimic the node executable and redirect accordingly. This always seemed a little hackish to me, and there are some quirks as a result of this implementation.&lt;/p&gt; 
&lt;p&gt;The second option is to use a symlink. This concept requires putting the symlink in the system &lt;code&gt;PATH&lt;/code&gt;, then updating its target to the node installation directory you want to use. This is a straightforward approach, and seems to be what people recommend.... until they realize just how much of a pain symlinks are on Windows. This is why it hasn't happened before.&lt;/p&gt; 
&lt;p&gt;In order to create/modify a symlink, you must be running as an admin, and you must get around Windows UAC (that annoying prompt). Luckily, this is a challenge I already solved with some helper scripts in &lt;a href="https://github.com/coreybutler/node-windows"&gt;node-windows&lt;/a&gt;. As a result, NVM for Windows maintains a single symlink that is put in the system &lt;code&gt;PATH&lt;/code&gt; during installation only. Switching to different versions of node is a matter of switching the symlink target. As a result, this utility does &lt;strong&gt;not&lt;/strong&gt; require you to run &lt;code&gt;nvm use x.x.x&lt;/code&gt; every time you open a console window. When you &lt;em&gt;do&lt;/em&gt; run &lt;code&gt;nvm use x.x.x&lt;/code&gt;, the active version of node is automatically updated across all open console windows. It also persists between system reboots, so you only need to use nvm when you want to make a change.&lt;/p&gt; 
&lt;p&gt;NVM for Windows comes with an installer, courtesy of a byproduct of my work on &lt;a href="https://preview.fenixwebserver.com"&gt;Fenix Web Server&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Overall, this project brings together some ideas, a few battle-hardened pieces of other modules, and support for newer versions of node.&lt;/p&gt; 
&lt;p&gt;NVM for Windows recognizes the "latest" versions using a &lt;a href="https://nodejs.org/download/release/index.json"&gt;list&lt;/a&gt; provided by the Node project. Version 1.1.1+ use this list. Before this list existed, I was scraping releases and serving it as a standalone &lt;a href="https://github.com/coreybutler/nodedistro"&gt;data feed&lt;/a&gt;. This list was used in versions 1.1.0 and prior, but is now deprecated.&lt;/p&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;p&gt;I needed it, plain and simple. Additionally, it's apparent that &lt;a href="https://github.com/nodejs/node-v0.x-archive/issues/8075"&gt;support for multiple versions&lt;/a&gt; is not coming to node core. It was also an excuse to play with Go.&lt;/p&gt; 
&lt;h2&gt;Why Go? Why not Node?&lt;/h2&gt; 
&lt;p&gt;I chose Go because it is cross-platform, felt like less overhead than Java, has been around longer than most people think. Plus, I wanted to experiment with it. I've been asked why I didn't write it with Node. Trying to write a tool with the tool you're trying to install doesn't make sense to me. As a result, my project requirements for this were simple... something that's not Node. Node will continue to evolve and change. If you need a reminder of that, remember io.js, Ayo, all the breaking changes between 4.x.x and 6.x.x, and the shift to ES Modules in 12+. Change is inevitable in the world of software. JavaScript is extremely dynamic.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🙏&lt;/span&gt; Thanks&lt;/h2&gt; 
&lt;p&gt;Thanks to everyone who has submitted issues on and off Github, made suggestions, and generally helped make this a better project. Special thanks to&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vkbansal"&gt;@vkbansal&lt;/a&gt;, who provided significant early feedback throughout the early releases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rainabba"&gt;@rainabba&lt;/a&gt; and &lt;a href="https://github.com/sullivanpt"&gt;@sullivanpt&lt;/a&gt; for getting Node v4 support integrated.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-h-a-d-o-w"&gt;@s-h-a-d-o-w&lt;/a&gt; who resolved the longstanding space escaping issue in path names (&lt;a href="https://github.com/coreybutler/nvm-windows/pull/355"&gt;#355&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ajyong"&gt;ajyong&lt;/a&gt; who sponsored the code signing certificate in late 2021.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;img src="https://contrib.rocks/image?repo=coreybutler/nvm-windows" alt="Contributors" /&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gitleaks/gitleaks</title>
      <link>https://github.com/gitleaks/gitleaks</link>
      <description>&lt;p&gt;Find secrets with Gitleaks 🔑&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gitleaks&lt;/h1&gt; 
&lt;pre&gt;&lt;code&gt;┌─○───┐
│ │╲  │
│ │ ○ │
│ ○ ░ │
└─░───┘
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/gitleaks/gitleaks/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/gitleaks/gitleaks/actions/workflows/test.yml/badge.svg?sanitize=true" alt="GitHub Action Test" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/zricethezav/gitleaks"&gt;&lt;img src="https://img.shields.io/docker/pulls/zricethezav/gitleaks.svg?sanitize=true" alt="Docker Hub" /&gt;&lt;/a&gt; &lt;a href="https://gitleaks.io/playground"&gt;&lt;img src="https://img.shields.io/badge/gitleaks%20-playground-blue" alt="Gitleaks Playground" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gitleaks/gitleaks-action"&gt;&lt;img src="https://img.shields.io/badge/protected%20by-gitleaks-blue" alt="Gitleaks Action" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/zricethezav/gitleaks/v8"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/gitleaks/gitleaks/v8?status" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gitleaks/gitleaks/v8"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gitleaks/gitleaks/v8" alt="GoReportCard" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/gitleaks/gitleaks/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/gitleaks/gitleaks.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gitleaks is a tool for &lt;strong&gt;detecting&lt;/strong&gt; secrets like passwords, API keys, and tokens in git repos, files, and whatever else you wanna throw at it via &lt;code&gt;stdin&lt;/code&gt;. If you wanna learn more about how the detection engine works check out this blog: &lt;a href="https://lookingatcomputer.substack.com/p/regex-is-almost-all-you-need"&gt;Regex is (almost) all you need&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;➜  ~/code(master) gitleaks git -v

    ○
    │╲
    │ ○
    ○ ░
    ░    gitleaks


Finding:     "export BUNDLE_ENTERPRISE__CONTRIBSYS__COM=cafebabe:deadbeef",
Secret:      cafebabe:deadbeef
RuleID:      sidekiq-secret
Entropy:     2.609850
File:        cmd/generate/config/rules/sidekiq.go
Line:        23
Commit:      cd5226711335c68be1e720b318b7bc3135a30eb2
Author:      John
Email:       john@users.noreply.github.com
Date:        2022-08-03T12:31:40Z
Fingerprint: cd5226711335c68be1e720b318b7bc3135a30eb2:cmd/generate/config/rules/sidekiq.go:sidekiq-secret:23
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GitHub Sponsors&lt;/h3&gt; 
&lt;p&gt;Sponsor &lt;a href="https://github.com/sponsors/zricethezav/"&gt;@zricethezav on GitHub&lt;/a&gt; to get featured on this README.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Gitleaks can be installed using Homebrew, Docker, or Go. Gitleaks is also available in binary form for many popular platforms and OS types on the &lt;a href="https://github.com/gitleaks/gitleaks/releases"&gt;releases page&lt;/a&gt;. In addition, Gitleaks can be implemented as a pre-commit hook directly in your repo or as a GitHub action using &lt;a href="https://github.com/gitleaks/gitleaks-action"&gt;Gitleaks-Action&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installing&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# MacOS
brew install gitleaks

# Docker (DockerHub)
docker pull zricethezav/gitleaks:latest
docker run -v ${path_to_host_folder_to_scan}:/path zricethezav/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]

# Docker (ghcr.io)
docker pull ghcr.io/gitleaks/gitleaks:latest
docker run -v ${path_to_host_folder_to_scan}:/path ghcr.io/gitleaks/gitleaks:latest [COMMAND] [OPTIONS] [SOURCE_PATH]

# From Source (make sure `go` is installed)
git clone https://github.com/gitleaks/gitleaks.git
cd gitleaks
make build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GitHub Action&lt;/h3&gt; 
&lt;p&gt;Check out the official &lt;a href="https://github.com/gitleaks/gitleaks-action"&gt;Gitleaks GitHub Action&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;name: gitleaks
on: [pull_request, push, workflow_dispatch]
jobs:
  scan:
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pre-Commit&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install pre-commit from &lt;a href="https://pre-commit.com/#install"&gt;https://pre-commit.com/#install&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create a &lt;code&gt;.pre-commit-config.yaml&lt;/code&gt; file at the root of your repository with the following content:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;repos:
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.24.2
    hooks:
      - id: gitleaks
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;for a &lt;a href="https://github.com/gitleaks/gitleaks/releases"&gt;native execution of gitleaks&lt;/a&gt; or use the &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/.pre-commit-hooks.yaml"&gt;&lt;code&gt;gitleaks-docker&lt;/code&gt; pre-commit ID&lt;/a&gt; for executing gitleaks using the &lt;a href="https://raw.githubusercontent.com/gitleaks/gitleaks/master/#docker"&gt;official Docker images&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Auto-update the config to the latest repos' versions by executing &lt;code&gt;pre-commit autoupdate&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install with &lt;code&gt;pre-commit install&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now you're all set!&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;➜ git commit -m "this commit contains a secret"
Detect hardcoded secrets.................................................Failed
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: to disable the gitleaks pre-commit hook you can prepend &lt;code&gt;SKIP=gitleaks&lt;/code&gt; to the commit command and it will skip running gitleaks&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;➜ SKIP=gitleaks git commit -m "skip gitleaks check"
Detect hardcoded secrets................................................Skipped
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Usage:
  gitleaks [command]

Available Commands:
  dir         scan directories or files for secrets
  git         scan git repositories for secrets
  help        Help about any command
  stdin       detect secrets from stdin
  version     display gitleaks version

Flags:
  -b, --baseline-path string          path to baseline with issues that can be ignored
  -c, --config string                 config file path
                                      order of precedence:
                                      1. --config/-c
                                      2. env var GITLEAKS_CONFIG
                                      3. env var GITLEAKS_CONFIG_TOML with the file content
                                      4. (target path)/.gitleaks.toml
                                      If none of the four options are used, then gitleaks will use the default config
      --diagnostics string            enable diagnostics (comma-separated list: cpu,mem,trace). cpu=CPU profiling, mem=memory profiling, trace=execution tracing
      --diagnostics-dir string        directory to store diagnostics output files (defaults to current directory)
      --enable-rule strings           only enable specific rules by id
      --exit-code int                 exit code when leaks have been encountered (default 1)
  -i, --gitleaks-ignore-path string   path to .gitleaksignore file or folder containing one (default ".")
  -h, --help                          help for gitleaks
      --ignore-gitleaks-allow         ignore gitleaks:allow comments
  -l, --log-level string              log level (trace, debug, info, warn, error, fatal) (default "info")
      --max-decode-depth int          allow recursive decoding up to this depth (default "0", no decoding is done)
      --max-archive-depth int         allow scanning into nested archives up to this depth (default "0", no archive traversal is done)
      --max-target-megabytes int      files larger than this will be skipped
      --no-banner                     suppress banner
      --no-color                      turn off color for verbose output
      --redact uint[=100]             redact secrets from logs and stdout. To redact only parts of the secret just apply a percent value from 0..100. For example --redact=20 (default 100%)
  -f, --report-format string          output format (json, csv, junit, sarif, template)
  -r, --report-path string            report file
      --report-template string        template file used to generate the report (implies --report-format=template)
  -v, --verbose                       show verbose output from scan
      --version                       version for gitleaks

Use "gitleaks [command] --help" for more information about a command.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Commands&lt;/h3&gt; 
&lt;p&gt;⚠️ v8.19.0 introduced a change that deprecated &lt;code&gt;detect&lt;/code&gt; and &lt;code&gt;protect&lt;/code&gt;. Those commands are still available but are hidden in the &lt;code&gt;--help&lt;/code&gt; menu. Take a look at this &lt;a href="https://gist.github.com/zricethezav/b325bb93ebf41b9c0b0507acf12810d2"&gt;gist&lt;/a&gt; for easy command translations. If you find v8.19.0 broke an existing command (&lt;code&gt;detect&lt;/code&gt;/&lt;code&gt;protect&lt;/code&gt;), please open an issue.&lt;/p&gt; 
&lt;p&gt;There are three scanning modes: &lt;code&gt;git&lt;/code&gt;, &lt;code&gt;dir&lt;/code&gt;, and &lt;code&gt;stdin&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Git&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;git&lt;/code&gt; command lets you scan local git repos. Under the hood, gitleaks uses the &lt;code&gt;git log -p&lt;/code&gt; command to scan patches. You can configure the behavior of &lt;code&gt;git log -p&lt;/code&gt; with the &lt;code&gt;log-opts&lt;/code&gt; option. For example, if you wanted to run gitleaks on a range of commits you could use the following command: &lt;code&gt;gitleaks git -v --log-opts="--all commitA..commitB" path_to_repo&lt;/code&gt;. See the &lt;a href="https://git-scm.com/docs/git-log"&gt;git log&lt;/a&gt; documentation for more information. If there is no target specified as a positional argument, then gitleaks will attempt to scan the current working directory as a git repo.&lt;/p&gt; 
&lt;h4&gt;Dir&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;dir&lt;/code&gt; (aliases include &lt;code&gt;files&lt;/code&gt;, &lt;code&gt;directory&lt;/code&gt;) command lets you scan directories and files. Example: &lt;code&gt;gitleaks dir -v path_to_directory_or_file&lt;/code&gt;. If there is no target specified as a positional argument, then gitleaks will scan the current working directory.&lt;/p&gt; 
&lt;h4&gt;Stdin&lt;/h4&gt; 
&lt;p&gt;You can also stream data to gitleaks with the &lt;code&gt;stdin&lt;/code&gt; command. Example: &lt;code&gt;cat some_file | gitleaks -v stdin&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Creating a baseline&lt;/h3&gt; 
&lt;p&gt;When scanning large repositories or repositories with a long history, it can be convenient to use a baseline. When using a baseline, gitleaks will ignore any old findings that are present in the baseline. A baseline can be any gitleaks report. To create a gitleaks report, run gitleaks with the &lt;code&gt;--report-path&lt;/code&gt; parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gitleaks git --report-path gitleaks-report.json # This will save the report in a file called gitleaks-report.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once as baseline is created it can be applied when running the detect command again:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;gitleaks git --baseline-path gitleaks-report.json --report-path findings.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After running the detect command with the --baseline-path parameter, report output (findings.json) will only contain new issues.&lt;/p&gt; 
&lt;h2&gt;Pre-Commit hook&lt;/h2&gt; 
&lt;p&gt;You can run Gitleaks as a pre-commit hook by copying the example &lt;code&gt;pre-commit.py&lt;/code&gt; script into your &lt;code&gt;.git/hooks/&lt;/code&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Load Configuration&lt;/h2&gt; 
&lt;p&gt;The order of precedence is:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;--config/-c&lt;/code&gt; option: &lt;pre&gt;&lt;code class="language-bash"&gt;gitleaks git --config /home/dev/customgitleaks.toml .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Environment variable &lt;code&gt;GITLEAKS_CONFIG&lt;/code&gt; with the file path: &lt;pre&gt;&lt;code class="language-bash"&gt;export GITLEAKS_CONFIG="/home/dev/customgitleaks.toml"
gitleaks git .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Environment variable &lt;code&gt;GITLEAKS_CONFIG_TOML&lt;/code&gt; with the file content: &lt;pre&gt;&lt;code class="language-bash"&gt;export GITLEAKS_CONFIG_TOML=`cat customgitleaks.toml`
gitleaks git .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;.gitleaks.toml&lt;/code&gt; file within the target path: &lt;pre&gt;&lt;code class="language-bash"&gt;gitleaks git .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;If none of the four options are used, then gitleaks will use the default config.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Gitleaks offers a configuration format you can follow to write your own secret detection rules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# Title for the gitleaks configuration file.
title = "Custom Gitleaks configuration"

# You have basically two options for your custom configuration:
#
# 1. define your own configuration, default rules do not apply
#
#    use e.g., the default configuration as starting point:
#    https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
#
# 2. extend a configuration, the rules are overwritten or extended
#
#    When you extend a configuration the extended rules take precedence over the
#    default rules. I.e., if there are duplicate rules in both the extended
#    configuration and the default configuration the extended rules or
#    attributes of them will override the default rules.
#    Another thing to know with extending configurations is you can chain
#    together multiple configuration files to a depth of 2. Allowlist arrays are
#    appended and can contain duplicates.

# useDefault and path can NOT be used at the same time. Choose one.
[extend]
# useDefault will extend the default gitleaks config built in to the binary
# the latest version is located at:
# https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml
useDefault = true
# or you can provide a path to a configuration to extend from.
# The path is relative to where gitleaks was invoked,
# not the location of the base config.
# path = "common_config.toml"
# If there are any rules you don't want to inherit, they can be specified here.
disabledRules = [ "generic-api-key"]

# An array of tables that contain information that define instructions
# on how to detect secrets
[[rules]]
# Unique identifier for this rule
id = "awesome-rule-1"

# Short human-readable description of the rule.
description = "awesome rule 1"

# Golang regular expression used to detect secrets. Note Golang's regex engine
# does not support lookaheads.
regex = '''one-go-style-regex-for-this-rule'''

# Int used to extract secret from regex match and used as the group that will have
# its entropy checked if `entropy` is set.
secretGroup = 3

# Float representing the minimum shannon entropy a regex group must have to be considered a secret.
entropy = 3.5

# Golang regular expression used to match paths. This can be used as a standalone rule or it can be used
# in conjunction with a valid `regex` entry.
path = '''a-file-path-regex'''

# Keywords are used for pre-regex check filtering. Rules that contain
# keywords will perform a quick string compare check to make sure the
# keyword(s) are in the content being scanned. Ideally these values should
# either be part of the identiifer or unique strings specific to the rule's regex
# (introduced in v8.6.0)
keywords = [
  "auth",
  "password",
  "token",
]

# Array of strings used for metadata and reporting purposes.
tags = ["tag","another tag"]

    # ⚠️ In v8.21.0 `[rules.allowlist]` was replaced with `[[rules.allowlists]]`.
    # This change was backwards-compatible: instances of `[rules.allowlist]` still  work.
    #
    # You can define multiple allowlists for a rule to reduce false positives.
    # A finding will be ignored if _ANY_ `[[rules.allowlists]]` matches.
    [[rules.allowlists]]
    description = "ignore commit A"
    # When multiple criteria are defined the default condition is "OR".
    # e.g., this can match on |commits| OR |paths| OR |stopwords|.
    condition = "OR"
    commits = [ "commit-A", "commit-B"]
    paths = [
      '''go\.mod''',
      '''go\.sum'''
    ]
    # note: stopwords targets the extracted secret, not the entire regex match
    # like 'regexes' does. (stopwords introduced in 8.8.0)
    stopwords = [
      '''client''',
      '''endpoint''',
    ]

    [[rules.allowlists]]
    # The "AND" condition can be used to make sure all criteria match.
    # e.g., this matches if |regexes| AND |paths| are satisfied.
    condition = "AND"
    # note: |regexes| defaults to check the _Secret_ in the finding.
    # Acceptable values for |regexTarget| are "secret" (default), "match", and "line".
    regexTarget = "match"
    regexes = [ '''(?i)parseur[il]''' ]
    paths = [ '''package-lock\.json''' ]

# You can extend a particular rule from the default config. e.g., gitlab-pat
# if you have defined a custom token prefix on your GitLab instance
[[rules]]
id = "gitlab-pat"
# all the other attributes from the default rule are inherited

    [[rules.allowlists]]
    regexTarget = "line"
    regexes = [ '''MY-glpat-''' ]


# ⚠️ In v8.25.0 `[allowlist]` was replaced with `[[allowlists]]`.
#
# Global allowlists have a higher order of precedence than rule-specific allowlists.
# If a commit listed in the `commits` field below is encountered then that commit will be skipped and no
# secrets will be detected for said commit. The same logic applies for regexes and paths.
[[allowlists]]
description = "global allow list"
commits = [ "commit-A", "commit-B", "commit-C"]
paths = [
  '''gitleaks\.toml''',
  '''(.*?)(jpg|gif|doc)'''
]
# note: (global) regexTarget defaults to check the _Secret_ in the finding.
# Acceptable values for regexTarget are "match" and "line"
regexTarget = "match"
regexes = [
  '''219-09-9999''',
  '''078-05-1120''',
  '''(9[0-9]{2}|666)-\d{2}-\d{4}''',
]
# note: stopwords targets the extracted secret, not the entire regex match
# like 'regexes' does. (stopwords introduced in 8.8.0)
stopwords = [
  '''client''',
  '''endpoint''',
]

# ⚠️ In v8.25.0, `[[allowlists]]` have a new field called |targetRules|.
#
# Common allowlists can be defined once and assigned to multiple rules using |targetRules|.
# This will only run on the specified rules, not globally.
[[allowlists]]
targetRules = ["awesome-rule-1", "awesome-rule-2"]
description = "Our test assets trigger false-positives in a couple rules."
paths = ['''tests/expected/._\.json$''']
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Refer to the default &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/config/gitleaks.toml"&gt;gitleaks config&lt;/a&gt; for examples or follow the &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; if you would like to contribute to the default configuration. Additionally, you can check out &lt;a href="https://blog.gitleaks.io/stop-leaking-secrets-configuration-2-3-aeed293b1fbf"&gt;this gitleaks blog post&lt;/a&gt; which covers advanced configuration setups.&lt;/p&gt; 
&lt;h3&gt;Additional Configuration&lt;/h3&gt; 
&lt;h4&gt;Composite Rules (Multi-part or &lt;code&gt;required&lt;/code&gt; Rules)&lt;/h4&gt; 
&lt;p&gt;In v8.28.0 Gitleaks introduced composite rules, which are made up of a single "primary" rule and one or more auxiliary or &lt;code&gt;required&lt;/code&gt; rules. To create a composite rule, add a &lt;code&gt;[[rules.required]]&lt;/code&gt; table to the primary rule specifying an &lt;code&gt;id&lt;/code&gt; and optionally &lt;code&gt;withinLines&lt;/code&gt; and/or &lt;code&gt;withinColumns&lt;/code&gt; proximity constraints. A fragment is a chunk of content that Gitleaks processes at once (typically a file, part of a file, or git diff), and proximity matching instructs the primary rule to only report a finding if the auxiliary &lt;code&gt;required&lt;/code&gt; rules also find matches within the specified area of the fragment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Proximity matching:&lt;/strong&gt; Using the &lt;code&gt;withinLines&lt;/code&gt; and &lt;code&gt;withinColumns&lt;/code&gt; fields instructs the primary rule to only report a finding if the auxiliary &lt;code&gt;required&lt;/code&gt; rules also find matches within the specified proximity. You can set:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;withinLines: N&lt;/code&gt;&lt;/strong&gt; - required findings must be within N lines (vertically)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;withinColumns: N&lt;/code&gt;&lt;/strong&gt; - required findings must be within N characters (horizontally)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Both&lt;/strong&gt; - creates a rectangular search area (both constraints must be satisfied)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neither&lt;/strong&gt; - fragment-level matching (required findings can be anywhere in the same fragment)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here are diagrams illustrating each proximity behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;p = primary captured secret
a = auxiliary (required) captured secret
fragment = section of data gitleaks is looking at


    *Fragment-level proximity*               
    Any required finding in the fragment
          ┌────────┐                       
   ┌──────┤fragment├─────┐                 
   │      └──────┬─┤     │ ┌───────┐       
   │             │a│◀────┼─│✓ MATCH│       
   │          ┌─┐└─┘     │ └───────┘       
   │┌─┐       │p│        │                 
   ││a│    ┌─┐└─┘        │ ┌───────┐       
   │└─┘    │a│◀──────────┼─│✓ MATCH│       
   └─▲─────┴─┴───────────┘ └───────┘       
     │    ┌───────┐                        
     └────│✓ MATCH│                        
          └───────┘                        
                                           
                                           
   *Column bounded proximity*
   `withinColumns = 3`                    
          ┌────────┐                       
   ┌────┬─┤fragment├─┬───┐                 
   │      └──────┬─┤     │ ┌───────────┐   
   │    │        │a│◀┼───┼─│+1C ✓ MATCH│   
   │          ┌─┐└─┘     │ └───────────┘   
   │┌─┐ │     │p│    │   │                 
┌──▶│a│  ┌─┐  └─┘        │ ┌───────────┐   
│  │└─┘ ││a│◀────────┼───┼─│-2C ✓ MATCH│   
│  │       ┘             │ └───────────┘   
│  └── -3C ───0C─── +3C ─┘                 
│  ┌─────────┐                             
│  │ -4C ✗ NO│                             
└──│  MATCH  │                             
   └─────────┘                             
                                           
                                           
   *Line bounded proximity*
   `withinLines = 4`                      
         ┌────────┐                        
   ┌─────┤fragment├─────┐                  
  +4L─ ─ ┴────────┘─ ─ ─│                  
   │                    │                  
   │              ┌─┐   │ ┌────────────┐   
   │         ┌─┐  │a│◀──┼─│+1L ✓ MATCH │   
   0L  ┌─┐   │p│  └─┘   │ ├────────────┤   
   │   │a│◀──┴─┴────────┼─│-1L ✓ MATCH │   
   │   └─┘              │ └────────────┘   
   │                    │ ┌─────────┐      
  -4L─ ─ ─ ─ ─ ─ ─ ─┌─┐─│ │-5L ✗ NO │      
   │                │a│◀┼─│  MATCH  │      
   └────────────────┴─┴─┘ └─────────┘      
                                           
                                           
   *Line and column bounded proximity*
   `withinLines = 4`                      
   `withinColumns = 3`                    
         ┌────────┐                        
   ┌─────┤fragment├─────┐                  
  +4L   ┌└────────┴ ┐   │                  
   │            ┌─┐     │ ┌───────────────┐
   │    │       │a│◀┼───┼─│+2L/+1C ✓ MATCH│
   │         ┌─┐└─┘     │ └───────────────┘
   0L   │    │p│    │   │                  
   │         └─┘        │                  
   │    │           │   │ ┌────────────┐   
  -4L    ─ ─ ─ ─ ─ ─┌─┐ │ │-5L/+3C ✗ NO│   
   │                │a│◀┼─│   MATCH    │   
   └───-3C────0L───+3C┴─┘ └────────────┘   
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt;
 &lt;summary&gt;Some final quick thoughts on composite rules.&lt;/summary&gt;This is an experimental feature! It's subject to change so don't go sellin' a new B2B SaaS feature built ontop of this feature. Scan type (git vs dir) based context is interesting. I'm monitoring the situation. Composite rules might not be super useful for git scans because gitleaks only looks at additions in the git history. It could be useful to scan non-additions in git history for `required` rules. Oh, right this is a readme, I'll shut up now.
&lt;/details&gt; 
&lt;h4&gt;gitleaks:allow&lt;/h4&gt; 
&lt;p&gt;If you are knowingly committing a test secret that gitleaks will catch you can add a &lt;code&gt;gitleaks:allow&lt;/code&gt; comment to that line which will instruct gitleaks to ignore that secret. Ex:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;class CustomClass:
    discord_client_secret = '8dyfuiRyq=vVc3RRr_edRk-fK__JItpZ'  #gitleaks:allow

&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;.gitleaksignore&lt;/h4&gt; 
&lt;p&gt;You can ignore specific findings by creating a &lt;code&gt;.gitleaksignore&lt;/code&gt; file at the root of your repo. In release v8.10.0 Gitleaks added a &lt;code&gt;Fingerprint&lt;/code&gt; value to the Gitleaks report. Each leak, or finding, has a Fingerprint that uniquely identifies a secret. Add this fingerprint to the &lt;code&gt;.gitleaksignore&lt;/code&gt; file to ignore that specific secret. See Gitleaks' &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/.gitleaksignore"&gt;.gitleaksignore&lt;/a&gt; for an example. Note: this feature is experimental and is subject to change in the future.&lt;/p&gt; 
&lt;h4&gt;Decoding&lt;/h4&gt; 
&lt;p&gt;Sometimes secrets are encoded in a way that can make them difficult to find with just regex. Now you can tell gitleaks to automatically find and decode encoded text. The flag &lt;code&gt;--max-decode-depth&lt;/code&gt; enables this feature (the default value "0" means the feature is disabled by default).&lt;/p&gt; 
&lt;p&gt;Recursive decoding is supported since decoded text can also contain encoded text. The flag &lt;code&gt;--max-decode-depth&lt;/code&gt; sets the recursion limit. Recursion stops when there are no new segments of encoded text to decode, so setting a really high max depth doesn't mean it will make that many passes. It will only make as many as it needs to decode the text. Overall, decoding only minimally increases scan times.&lt;/p&gt; 
&lt;p&gt;The findings for encoded text differ from normal findings in the following ways:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The location points the bounds of the encoded text 
  &lt;ul&gt; 
   &lt;li&gt;If the rule matches outside the encoded text, the bounds are adjusted to include that as well&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The match and secret contain the decoded value&lt;/li&gt; 
 &lt;li&gt;Two tags are added &lt;code&gt;decoded:&amp;lt;encoding&amp;gt;&lt;/code&gt; and &lt;code&gt;decode-depth:&amp;lt;depth&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Currently supported encodings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;percent&lt;/strong&gt; - Any printable ASCII percent encoded values&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;hex&lt;/strong&gt; - Any printable ASCII hex encoded values &amp;gt;= 32 characters&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;base64&lt;/strong&gt; - Any printable ASCII base64 encoded values &amp;gt;= 16 characters&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Archive Scanning&lt;/h4&gt; 
&lt;p&gt;Sometimes secrets are packaged within archive files like zip files or tarballs, making them difficult to discover. Now you can tell gitleaks to automatically extract and scan the contents of archives. The flag &lt;code&gt;--max-archive-depth&lt;/code&gt; enables this feature for both &lt;code&gt;dir&lt;/code&gt; and &lt;code&gt;git&lt;/code&gt; scan types. The default value of "0" means this feature is disabled by default.&lt;/p&gt; 
&lt;p&gt;Recursive scanning is supported since archives can also contain other archives. The &lt;code&gt;--max-archive-depth&lt;/code&gt; flag sets the recursion limit. Recursion stops when there are no new archives to extract, so setting a very high max depth just sets the potential to go that deep. It will only go as deep as it needs to.&lt;/p&gt; 
&lt;p&gt;The findings for secrets located within an archive will include the path to the file inside the archive. Inner paths are separated with &lt;code&gt;!&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Example finding (shortened for brevity):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Finding:     DB_PASSWORD=8ae31cacf141669ddfb5da
...
File:        testdata/archives/nested.tar.gz!archives/files.tar!files/.env.prod
Line:        4
Commit:      6e6ee6596d337bb656496425fb98644eb62b4a82
...
Fingerprint: 6e6ee6596d337bb656496425fb98644eb62b4a82:testdata/archives/nested.tar.gz!archives/files.tar!files/.env.prod:generic-api-key:4
Link:        https://github.com/leaktk/gitleaks/blob/6e6ee6596d337bb656496425fb98644eb62b4a82/testdata/archives/nested.tar.gz
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This means a secret was detected on line 4 of &lt;code&gt;files/.env.prod.&lt;/code&gt; which is in &lt;code&gt;archives/files.tar&lt;/code&gt; which is in &lt;code&gt;testdata/archives/nested.tar.gz&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Currently supported formats:&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://github.com/mholt/archives?tab=readme-ov-file#supported-compression-formats"&gt;compression&lt;/a&gt; and &lt;a href="https://github.com/mholt/archives?tab=readme-ov-file#supported-archive-formats"&gt;archive&lt;/a&gt; formats supported by mholt's &lt;a href="https://github.com/mholt/archives"&gt;archives package&lt;/a&gt; are supported.&lt;/p&gt; 
&lt;h4&gt;Reporting&lt;/h4&gt; 
&lt;p&gt;Gitleaks has built-in support for several report formats: &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/json_simple.json"&gt;&lt;code&gt;json&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/csv_simple.csv?plain=1"&gt;&lt;code&gt;csv&lt;/code&gt;&lt;/a&gt;, &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/junit_simple.xml"&gt;&lt;code&gt;junit&lt;/code&gt;&lt;/a&gt;, and &lt;a href="https://github.com/gitleaks/gitleaks/raw/master/testdata/expected/report/sarif_simple.sarif"&gt;&lt;code&gt;sarif&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If none of these formats fit your need, you can create your own report format with a &lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-templates-in-go#step-4-writing-a-template"&gt;Go &lt;code&gt;text/template&lt;/code&gt; .tmpl file&lt;/a&gt; and the &lt;code&gt;--report-template&lt;/code&gt; flag. The template can use &lt;a href="https://masterminds.github.io/sprig/"&gt;extended functionality from the &lt;code&gt;Masterminds/sprig&lt;/code&gt; template library&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, the following template provides a custom JSON output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-gotemplate"&gt;# jsonextra.tmpl
[{{ $lastFinding := (sub (len . ) 1) }}
{{- range $i, $finding := . }}{{with $finding}}
    {
        "Description": {{ quote .Description }},
        "StartLine": {{ .StartLine }},
        "EndLine": {{ .EndLine }},
        "StartColumn": {{ .StartColumn }},
        "EndColumn": {{ .EndColumn }},
        "Line": {{ quote .Line }},
        "Match": {{ quote .Match }},
        "Secret": {{ quote .Secret }},
        "File": "{{ .File }}",
        "SymlinkFile": {{ quote .SymlinkFile }},
        "Commit": {{ quote .Commit }},
        "Entropy": {{ .Entropy }},
        "Author": {{ quote .Author }},
        "Email": {{ quote .Email }},
        "Date": {{ quote .Date }},
        "Message": {{ quote .Message }},
        "Tags": [{{ $lastTag := (sub (len .Tags ) 1) }}{{ range $j, $tag := .Tags }}{{ quote . }}{{ if ne $j $lastTag }},{{ end }}{{ end }}],
        "RuleID": {{ quote .RuleID }},
        "Fingerprint": {{ quote .Fingerprint }}
    }{{ if ne $i $lastFinding }},{{ end }}
{{- end}}{{ end }}
]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ gitleaks dir ~/leaky-repo/ --report-path "report.json" --report-format template --report-template testdata/report/jsonextra.tmpl
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Sponsorships&lt;/h2&gt; 
&lt;p align="left"&gt; &lt;/p&gt;
&lt;h3&gt;&lt;a href="https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks"&gt;coderabbit.ai&lt;/a&gt;&lt;/h3&gt;
&lt;a href="https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks"&gt; &lt;/a&gt;
&lt;a href="https://coderabbit.ai/?utm_source=oss&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=gitleaks"&gt; &lt;img alt="CodeRabbit.ai Sponsorship" src="https://github.com/gitleaks/gitleaks/assets/15034943/76c30a85-887b-47ca-9956-17a8e55c6c41" width="200" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h2&gt;Exit Codes&lt;/h2&gt; 
&lt;p&gt;You can always set the exit code when leaks are encountered with the --exit-code flag. Default exit codes below:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;0 - no leaks present
1 - leaks or error encountered
126 - unknown flag
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Join the Discord! &lt;a href="https://discord.gg/8Hzbrnkr7E"&gt;&lt;img src="https://img.shields.io/discord/1102689410522284044.svg?label=&amp;amp;logo=discord&amp;amp;logoColor=ffffff&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" alt="Discord" /&gt;&lt;/a&gt;&lt;/h3&gt;</description>
    </item>
    
    <item>
      <title>cert-manager/cert-manager</title>
      <link>https://github.com/cert-manager/cert-manager</link>
      <description>&lt;p&gt;Automatically provision and manage TLS certificates in Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/cert-manager/cert-manager/master/logo/logo-small.png" height="256" width="256" alt="cert-manager project logo" /&gt; &lt;/p&gt; 
&lt;!-- note that the cert-manager logo in this repo is referred to in other README files in the cert-manager org
     as well as in Helm charts, etc.
     if you change its location or name, you'll need to update several other repos too! --&gt; 
&lt;p align="center"&gt;&lt;a href="https://prow.infra.cert-manager.io/?job=ci-cert-manager-master-make-test"&gt; 
  &lt;!-- prow build badge, godoc, and go report card--&gt; &lt;img alt="Build Status" src="https://prow.infra.cert-manager.io/badge.svg?jobs=ci-cert-manager-master-make-test" /&gt; &lt;/a&gt; &lt;a href="https://godoc.org/github.com/cert-manager/cert-manager"&gt;&lt;img src="https://godoc.org/github.com/cert-manager/cert-manager?status.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/cert-manager/cert-manager"&gt;&lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/cert-manager/cert-manager" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://artifacthub.io/packages/search?repo=cert-manager"&gt;&lt;img alt="Artifact Hub" src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cert-manager" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/cert-manager/cert-manager"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/cert-manager/cert-manager/badge" alt="Scorecard score" /&gt;&lt;/a&gt; &lt;a href="https://clomonitor.io/projects/cncf/cert-manager"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cert-manager/badge" alt="CLOMonitor" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8079"&gt;&lt;img src="https://www.bestpractices.dev/projects/8079/badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;cert-manager&lt;/h1&gt; 
&lt;p&gt;cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.&lt;/p&gt; 
&lt;p&gt;It supports issuing certificates from a variety of sources, including Let's Encrypt (ACME), HashiCorp Vault, and Venafi TPP / TLS Protect Cloud, as well as local in-cluster issuance.&lt;/p&gt; 
&lt;p&gt;cert-manager also ensures certificates remain valid and up to date, attempting to renew certificates at an appropriate time before expiry to reduce the risk of outages and remove toil.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cert-manager.io/images/high-level-overview.svg?sanitize=true" alt="cert-manager high level overview diagram" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation for cert-manager can be found at &lt;a href="https://cert-manager.io/docs/"&gt;cert-manager.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For the common use-case of automatically issuing TLS certificates for Ingress resources, see the &lt;a href="https://cert-manager.io/docs/tutorials/acme/nginx-ingress/"&gt;cert-manager nginx-ingress quick start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a more comprehensive guide to issuing your first certificate, see our &lt;a href="https://cert-manager.io/docs/getting-started/"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://cert-manager.io/docs/installation/"&gt;Installation&lt;/a&gt; is documented on the website, with a variety of supported methods.&lt;/p&gt; 
&lt;h2&gt;Developing cert-manager&lt;/h2&gt; 
&lt;p&gt;We actively welcome contributions and we support both Linux and macOS environments for development.&lt;/p&gt; 
&lt;p&gt;Different platforms have different requirements; we document everything on our &lt;a href="https://cert-manager.io/docs/contributing/building/"&gt;Building cert-manager&lt;/a&gt; website page.&lt;/p&gt; 
&lt;p&gt;Note in particular that macOS has several extra requirements, to ensure that modern tools are installed and available. Read the page before getting started!&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues whilst using cert-manager, we have a number of ways to get help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://cert-manager.io/docs/faq/troubleshooting/"&gt;troubleshooting guide&lt;/a&gt; on our website.&lt;/li&gt; 
 &lt;li&gt;Our official &lt;a href="https://cert-manager.io/docs/contributing/#slack"&gt;Kubernetes Slack channel&lt;/a&gt; - the quickest way to ask! (&lt;a href="https://kubernetes.slack.com/messages/cert-manager"&gt;#cert-manager&lt;/a&gt; and &lt;a href="https://kubernetes.slack.com/messages/cert-manager-dev"&gt;#cert-manager-dev&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;Searching for an existing issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you believe you've found a bug and cannot find an existing issue, feel free to &lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;open a new issue&lt;/a&gt;! Be sure to include as much information as you can about your environment.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://groups.google.com/forum/#!forum/cert-manager-dev"&gt;&lt;code&gt;cert-manager-dev&lt;/code&gt; Google Group&lt;/a&gt; is used for project wide announcements and development coordination. Anybody with a Google account can join the group by visiting the group and clicking "Join Group".&lt;/p&gt; 
&lt;h3&gt;Meetings&lt;/h3&gt; 
&lt;p&gt;We have several public meetings which any member of our Google Group is more than welcome to join!&lt;/p&gt; 
&lt;p&gt;Check out the details on &lt;a href="https://cert-manager.io/docs/contributing/#meetings"&gt;our website&lt;/a&gt;. Feel free to drop in and ask questions, chat with us or just to say hi!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome pull requests with open arms! There's a lot of work to do here, and we're especially concerned with ensuring the longevity and reliability of the project. The &lt;a href="https://cert-manager.io/docs/contributing/"&gt;contributing guide&lt;/a&gt; will help you get started.&lt;/p&gt; 
&lt;h2&gt;Coding Conventions&lt;/h2&gt; 
&lt;p&gt;Code style guidelines are documented on the &lt;a href="https://cert-manager.io/docs/contributing/coding-conventions/"&gt;coding conventions&lt;/a&gt; page of the cert-manager website. Please try to follow those guidelines if you're submitting a pull request for cert-manager.&lt;/p&gt; 
&lt;h2&gt;Importing cert-manager as a Module&lt;/h2&gt; 
&lt;p&gt;⚠️ Please note that cert-manager &lt;strong&gt;does not&lt;/strong&gt; currently provide a Go module compatibility guarantee. That means that &lt;strong&gt;most code under &lt;code&gt;pkg/&lt;/code&gt; is subject to change in a breaking way&lt;/strong&gt;, even between minor or patch releases and even if the code is currently publicly exported.&lt;/p&gt; 
&lt;p&gt;The lack of a Go module compatibility guarantee does not affect API version guarantees under the &lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-policy/"&gt;Kubernetes Deprecation Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more details see &lt;a href="https://cert-manager.io/docs/contributing/importing/"&gt;Importing cert-manager in Go&lt;/a&gt; on the cert-manager website.&lt;/p&gt; 
&lt;p&gt;The import path for cert-manager versions 1.8 and later is &lt;code&gt;github.com/cert-manager/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For all versions of cert-manager before 1.8, including minor and patch releases, the import path is &lt;code&gt;github.com/jetstack/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Reporting&lt;/h2&gt; 
&lt;p&gt;Security is the number one priority for cert-manager. If you think you've found a security vulnerability, we'd love to hear from you.&lt;/p&gt; 
&lt;p&gt;Follow the instructions in &lt;a href="https://raw.githubusercontent.com/cert-manager/cert-manager/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt; to make a report.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/cert-manager/cert-manager/releases"&gt;Every release&lt;/a&gt; on GitHub has a changelog, and we also publish release notes on &lt;a href="https://cert-manager.io/docs/release-notes/"&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;cert-manager is loosely based upon the work of &lt;a href="https://github.com/jetstack/kube-lego"&gt;kube-lego&lt;/a&gt; and has borrowed some wisdom from other similar projects such as &lt;a href="https://github.com/PalmStoneGames/kube-cert-manager"&gt;kube-cert-manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;Logo design by &lt;a href="https://zoepatersonmedia.com"&gt;Zoe Paterson&lt;/a&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kgateway-dev/kgateway</title>
      <link>https://github.com/kgateway-dev/kgateway</link>
      <description>&lt;p&gt;The Cloud-Native API Gateway and AI Gateway&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/kgateway-dev/kgateway.dev/main/static/logo-dark.svg" alt="kgateway" width="400" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/kgateway-dev/kgateway.dev/main/static/logo.svg" alt="kgateway" width="400" /&gt; 
  &lt;img alt="kgateway" src="https://raw.githubusercontent.com/kgateway-dev/kgateway.dev/main/static/logo.svg?sanitize=true" /&gt; 
 &lt;/picture&gt; &lt;br /&gt; An Envoy-Powered, Kubernetes-Native API Gateway &lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://bestpractices.coreinfrastructure.org/projects/10534"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/10534/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About kgateway&lt;/h2&gt; 
&lt;p&gt;Kgateway is:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;An ingress/edge router for Kubernetes&lt;/strong&gt;: Powered by &lt;a href="https://www.envoyproxy.io"&gt;Envoy&lt;/a&gt; and programmed with the &lt;a href="https://gateway-api.sigs.k8s.io/"&gt;Gateway API&lt;/a&gt;, kgateway is a world-leading Cloud Native ingress.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;An advanced API gateway&lt;/strong&gt;: Aggregate web APIs and apply key functions like authentication, authorization and rate limiting in one place&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A better waypoint proxy for &lt;a href="https://ambientmesh.io/"&gt;ambient mesh&lt;/a&gt;&lt;/strong&gt;: Use the same stack for east-west management as you do for north-south.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;An AI gateway for securing LLM usage&lt;/strong&gt;: Protect applications, models, and data from inappropriate access or use, whether you're producing or consuming. Manage traffic to LLM providers, and enrich prompts at a system level.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;An LLM Gateway utilizing the &lt;a href="https://gateway-api-inference-extension.sigs.k8s.io/"&gt;Inference Extension&lt;/a&gt; project&lt;/strong&gt;: Intelligently route to AI inference workloads and LLMs in your Kubernetes environment.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A model context protocol (MCP) gateway&lt;/strong&gt;: Federate MCP tool servers into a single, scalable and secure endpoint.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A migration engine for hybrid apps&lt;/strong&gt;: Route to backends implemented as microservices, serverless functions or legacy apps. This can help you gradually migrate from legacy code to microservices and serverless, add new functionalities using cloud-native technologies while maintaining a legacy codebase or allow different teams in an organization to choose different architectures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Kgateway is feature-rich, fast, and flexible. It excels in function-level routing, supports legacy apps, microservices and serverless, offers robust discovery capabilities, integrates seamlessly with open-source projects, and is designed to support hybrid applications with various technologies, architectures, protocols, and clouds.&lt;/p&gt; 
&lt;p&gt;The project was previously known as Gloo, and has been &lt;a href="https://www.solo.io/blog/announcing-gloo-1-0-a-production-ready-envoy-based-api-gateway"&gt;production-ready since 2019&lt;/a&gt;. Please see &lt;a href="https://github.com/kgateway-dev/kgateway/issues/10363"&gt;the migration plan&lt;/a&gt; for more information and the current status of the change from Gloo to kgateway.&lt;/p&gt; 
&lt;h2&gt;Get involved&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kgateway.dev/slack/"&gt;Join us on our Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kgateway.dev/docs"&gt;Check out the docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kgateway.dev/blog/"&gt;Read the kgateway blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kgateway-dev/community"&gt;Learn more about the community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@kgateway-dev"&gt;Watch a video on our YouTube channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow us on &lt;a href="https://x.com/kgatewaydev"&gt;X&lt;/a&gt;, &lt;a href="https://bsky.app/profile/kgateway.dev"&gt;Bluesky&lt;/a&gt;, &lt;a href="https://mastodon.social/@kgateway"&gt;Mastodon&lt;/a&gt; or &lt;a href="https://www.linkedin.com/company/kgateway/"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing to kgateway&lt;/h2&gt; 
&lt;p&gt;Please refer to &lt;a href="https://raw.githubusercontent.com/kgateway-dev/kgateway/main/devel/contributing/README.md"&gt;devel/contributing/README.md&lt;/a&gt; as a starting point for contributing to the project.&lt;/p&gt; 
&lt;h2&gt;Releasing kgateway&lt;/h2&gt; 
&lt;p&gt;Please refer to &lt;a href="https://raw.githubusercontent.com/kgateway-dev/kgateway/main/devel/contributing/releasing.md"&gt;devel/contributing/releasing.md&lt;/a&gt; as a starting point for understanding releases of the project.&lt;/p&gt; 
&lt;h2&gt;Thanks&lt;/h2&gt; 
&lt;p&gt;Kgateway would not be possible without the valuable open source work of projects in the community. We would like to extend a special thank-you to &lt;a href="https://www.envoyproxy.io"&gt;Envoy&lt;/a&gt;, upon whose shoulders we stand.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Reporting security issues&lt;/em&gt; : We take kgateway's security very seriously. If you've found a security issue or a potential security issue in kgateway, please DO NOT file a public GitHub issue. Instead follow &lt;a href="https://github.com/kgateway-dev/community/raw/main/CVE.md"&gt;the directions laid out in the kgateway/community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/cncf/artwork/main/other/cncf-sandbox/horizontal/color/cncf-sandbox-horizontal-color.svg?sanitize=true" width="300" alt="Cloud Native Computing Foundation logo" /&gt; 
 &lt;p&gt;kgateway is a &lt;a href="https://cncf.io"&gt;Cloud Native Computing Foundation&lt;/a&gt; sandbox project.&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>trufflesecurity/trufflehog</title>
      <link>https://github.com/trufflesecurity/trufflehog</link>
      <description>&lt;p&gt;Find, verify, and analyze leaked credentials&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="GoReleaser Logo" src="https://storage.googleapis.com/trufflehog-static-sources/pixel_pig.png" height="140" /&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;TruffleHog&lt;/h2&gt; 
&lt;p align="center"&gt;Find leaked credentials.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/trufflesecurity/trufflehog/v3"&gt;&lt;img src="https://goreportcard.com/badge/github.com/trufflesecurity/trufflehog/v3" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-AGPL--3.0-brightgreen" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/detectors"&gt;&lt;img src="https://img.shields.io/github/directory-file-count/trufflesecurity/truffleHog/pkg/detectors?label=Total%20Detectors&amp;amp;type=dir" alt="Total Detectors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h1&gt;&lt;span&gt;🔎&lt;/span&gt; &lt;em&gt;Now Scanning&lt;/em&gt;&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/assets/scanning_logos.svg?sanitize=true" /&gt; 
 &lt;p&gt;&lt;strong&gt;...and more&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;To learn more about TruffleHog and its features and capabilities, visit our &lt;a href="https://trufflesecurity.com/trufflehog?gclid=CjwKCAjwouexBhAuEiwAtW_Zx5IW87JNj97Ci7heFnA5ar6-DuNzT2Y5nIl9DuZ-FOUqx0Qg3vb9nxoClcEQAvD_BwE"&gt;product page&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;h1&gt;&lt;span&gt;🌐&lt;/span&gt; TruffleHog Enterprise&lt;/h1&gt; 
&lt;p&gt;Are you interested in continuously monitoring &lt;strong&gt;Git, Jira, Slack, Confluence, Microsoft Teams, Sharepoint, and more..&lt;/strong&gt; for credentials? We have an enterprise product that can help! Learn more at &lt;a href="https://trufflesecurity.com/trufflehog-enterprise"&gt;https://trufflesecurity.com/trufflehog-enterprise&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We take the revenue from the enterprise product to fund more awesome open source projects that the whole community can benefit from.&lt;/p&gt;  
&lt;h1&gt;What is TruffleHog 🐽&lt;/h1&gt; 
&lt;p&gt;TruffleHog is the most powerful secrets &lt;strong&gt;Discovery, Classification, Validation,&lt;/strong&gt; and &lt;strong&gt;Analysis&lt;/strong&gt; tool. In this context, secret refers to a credential a machine uses to authenticate itself to another machine. This includes API keys, database passwords, private encryption keys, and more...&lt;/p&gt; 
&lt;h2&gt;Discovery 🔍&lt;/h2&gt; 
&lt;p&gt;TruffleHog can look for secrets in many places including Git, chats, wikis, logs, API testing platforms, object stores, filesystems and more&lt;/p&gt; 
&lt;h2&gt;Classification 📁&lt;/h2&gt; 
&lt;p&gt;TruffleHog classifies over 800 secret types, mapping them back to the specific identity they belong to. Is it an AWS secret? Stripe secret? Cloudflare secret? Postgres password? SSL Private key? Sometimes it's hard to tell looking at it, so TruffleHog classifies everything it finds.&lt;/p&gt; 
&lt;h2&gt;Validation ✅&lt;/h2&gt; 
&lt;p&gt;For every secret TruffleHog can classify, it can also log in to confirm if that secret is live or not. This step is critical to know if there’s an active present danger or not.&lt;/p&gt; 
&lt;h2&gt;Analysis 🔬&lt;/h2&gt; 
&lt;p&gt;For the 20 some of the most commonly leaked out credential types, instead of sending one request to check if the secret can log in, TruffleHog can send many requests to learn everything there is to know about the secret. Who created it? What resources can it access? What permissions does it have on those resources?&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;📢&lt;/span&gt; Join Our Community&lt;/h1&gt; 
&lt;p&gt;Have questions? Feedback? Jump into Slack or Discord and hang out with us.&lt;/p&gt; 
&lt;p&gt;Join our &lt;a href="https://join.slack.com/t/trufflehog-community/shared_invite/zt-pw2qbi43-Aa86hkiimstfdKH9UCpPzQ"&gt;Slack Community&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Join the &lt;a href="https://discord.gg/8Hzbrnkr7E"&gt;Secret Scanning Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;📺&lt;/span&gt; Demo&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://storage.googleapis.com/truffle-demos/non-interactive.svg?sanitize=true" alt="GitHub scanning demo" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --org=trufflesecurity
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;💾&lt;/span&gt; Installation&lt;/h1&gt; 
&lt;p&gt;Several options are available for you:&lt;/p&gt; 
&lt;h3&gt;MacOS users&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install trufflehog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker:&lt;/h3&gt; 
&lt;p&gt;&lt;sub&gt;&lt;i&gt;&lt;em&gt;Ensure Docker engine is running before executing the following commands:&lt;/em&gt;&lt;/i&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Unix&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows Command Prompt&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "%cd:/=\%:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Windows PowerShell&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -v "${PWD}:/pwd" trufflesecurity/trufflehog github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;M1 and M2 Mac&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --platform linux/arm64 --rm -it -v "$PWD:/pwd" trufflesecurity/trufflehog:latest github --repo https://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary releases&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;Download and unpack from https://github.com/trufflesecurity/trufflehog/releases
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compile from source&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/trufflesecurity/trufflehog.git
cd trufflehog; go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script, verify checksum signature (requires cosign to be installed)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -v -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Using installation script to install a specific version&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin &amp;lt;ReleaseTag like v3.56.0&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;🔐&lt;/span&gt; Verifying the artifacts&lt;/h1&gt; 
&lt;p&gt;Checksums are applied to all artifacts, and the resulting checksum file is signed using cosign.&lt;/p&gt; 
&lt;p&gt;You need the following tool to verify signature:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;Cosign&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Verification steps are as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the artifact files you want, and the following files from the &lt;a href="https://github.com/trufflesecurity/trufflehog/releases"&gt;releases&lt;/a&gt; page.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt&lt;/li&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt.pem&lt;/li&gt; 
   &lt;li&gt;trufflehog_{version}_checksums.txt.sig&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Verify the signature:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;cosign verify-blob &amp;lt;path to trufflehog_{version}_checksums.txt&amp;gt; \
--certificate &amp;lt;path to trufflehog_{version}_checksums.txt.pem&amp;gt; \
--signature &amp;lt;path to trufflehog_{version}_checksums.txt.sig&amp;gt; \
--certificate-identity-regexp 'https://github\.com/trufflesecurity/trufflehog/\.github/workflows/.+' \
--certificate-oidc-issuer "https://token.actions.githubusercontent.com"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once the signature is confirmed as valid, you can proceed to validate that the SHA256 sums align with the downloaded artifact:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;sha256sum --ignore-missing -c trufflehog_{version}_checksums.txt
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Replace &lt;code&gt;{version}&lt;/code&gt; with the downloaded files version&lt;/p&gt; 
&lt;p&gt;Alternatively, if you are using the installation script, pass &lt;code&gt;-v&lt;/code&gt; option to perform signature verification. This requires Cosign binary to be installed prior to running the installation script.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;🚀&lt;/span&gt; Quick Start&lt;/h1&gt; 
&lt;h2&gt;1: Scan a repo for only verified secrets&lt;/h2&gt; 
&lt;p&gt;Command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Expected output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;🐷🔑🐷  TruffleHog. Unearth your secrets. 🐷🔑🐷

Found verified result 🐷🔑
Detector Type: AWS
Decoder Type: PLAIN
Raw result: AKIAYVP4CIPPERUVIFXG
Line: 4
Commit: fbc14303ffbf8fb1c2c1914e8dda7d0121633aca
File: keys
Email: counter &amp;lt;counter@counters-MacBook-Air.local&amp;gt;
Repository: https://github.com/trufflesecurity/test_keys
Timestamp: 2022-06-16 10:17:40 -0700 PDT
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;2: Scan a GitHub Org for only verified secrets&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog github --org=trufflesecurity --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;3: Scan a GitHub Repo for only verified keys and get JSON output&lt;/h2&gt; 
&lt;p&gt;Command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog git https://github.com/trufflesecurity/test_keys --results=verified,unknown --json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Expected output:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;{"SourceMetadata":{"Data":{"Git":{"commit":"fbc14303ffbf8fb1c2c1914e8dda7d0121633aca","file":"keys","email":"counter \u003ccounter@counters-MacBook-Air.local\u003e","repository":"https://github.com/trufflesecurity/test_keys","timestamp":"2022-06-16 10:17:40 -0700 PDT","line":4}}},"SourceID":0,"SourceType":16,"SourceName":"trufflehog - git","DetectorType":2,"DetectorName":"AWS","DecoderName":"PLAIN","Verified":true,"Raw":"AKIAYVP4CIPPERUVIFXG","Redacted":"AKIAYVP4CIPPERUVIFXG","ExtraData":{"account":"595918472158","arn":"arn:aws:iam::595918472158:user/canarytokens.com@@mirux23ppyky6hx3l6vclmhnj","user_id":"AIDAYVP4CIPPJ5M54LRCY"},"StructuredData":null}
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;4: Scan a GitHub Repo + its Issues and Pull Requests&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog github --repo=https://github.com/trufflesecurity/test_keys --issue-comments --pr-comments
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;5: Scan an S3 bucket for verified keys&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --bucket=&amp;lt;bucket name&amp;gt; --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;6: Scan S3 buckets using IAM Roles&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --role-arn=&amp;lt;iam role arn&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;7: Scan a Github Repo using SSH authentication in Docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -v "$HOME/.ssh:/root/.ssh:ro" trufflesecurity/trufflehog:latest git ssh://github.com/trufflesecurity/test_keys
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;8: Scan individual files or directories&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog filesystem path/to/file1.txt path/to/file2.txt path/to/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;9: Scan a local git repo&lt;/h2&gt; 
&lt;p&gt;Clone the git repo. For example &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/git@github.com:trufflesecurity/test_keys.git"&gt;test keys&lt;/a&gt; repo.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ git clone git@github.com:trufflesecurity/test_keys.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run trufflehog from the parent directory (outside the git repo).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ trufflehog git file://test_keys --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;10: Scan GCS buckets for verified secrets&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog gcs --project-id=&amp;lt;project-ID&amp;gt; --cloud-environment --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;11: Scan a Docker image for verified secrets&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;--image&lt;/code&gt; flag multiple times to scan multiple images.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# to scan from a remote registry
trufflehog docker --image trufflesecurity/secrets --results=verified,unknown

# to scan from the local docker daemon
trufflehog docker --image docker://new_image:tag --results=verified,unknown

# to scan from an image saved as a tarball
trufflehog docker --image file://path_to_image.tar --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;12: Scan in CI&lt;/h2&gt; 
&lt;p&gt;Set the &lt;code&gt;--since-commit&lt;/code&gt; flag to your default branch that people merge into (ex: "main"). Set the &lt;code&gt;--branch&lt;/code&gt; flag to your PR's branch name (ex: "feature-1"). Depending on the CI/CD platform you use, this value can be pulled in dynamically (ex: &lt;a href="https://circleci.com/docs/variables/"&gt;CIRCLE_BRANCH in Circle CI&lt;/a&gt; and &lt;a href="https://docs.travis-ci.com/user/environment-variables/"&gt;TRAVIS_PULL_REQUEST_BRANCH in Travis CI&lt;/a&gt;). If the repo is cloned and the target branch is already checked out during the CI/CD workflow, then &lt;code&gt;--branch HEAD&lt;/code&gt; should be sufficient. The &lt;code&gt;--fail&lt;/code&gt; flag will return an 183 error code if valid credentials are found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog git file://. --since-commit main --branch feature-1 --results=verified,unknown --fail
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;13: Scan a Postman workspace&lt;/h2&gt; 
&lt;p&gt;Use the &lt;code&gt;--workspace-id&lt;/code&gt;, &lt;code&gt;--collection-id&lt;/code&gt;, &lt;code&gt;--environment&lt;/code&gt; flags multiple times to scan multiple targets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog postman --token=&amp;lt;postman api token&amp;gt; --workspace-id=&amp;lt;workspace id&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;14: Scan a Jenkins server&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog jenkins --url https://jenkins.example.com --username admin --password admin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;15: Scan an Elasticsearch server&lt;/h2&gt; 
&lt;h3&gt;Scan a Local Cluster&lt;/h3&gt; 
&lt;p&gt;There are two ways to authenticate to a local cluster with TruffleHog: (1) username and password, (2) service token.&lt;/p&gt; 
&lt;h4&gt;Connect to a local cluster with username and password&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --username truffle --password hog
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connect to a local cluster with a service token&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog elasticsearch --nodes 192.168.14.3 192.168.14.4 --service-token ‘AAEWVaWM...Rva2VuaSDZ’
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scan an Elastic Cloud Cluster&lt;/h3&gt; 
&lt;p&gt;To scan a cluster on Elastic Cloud, you’ll need a Cloud ID and API key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog elasticsearch \
  --cloud-id 'search-prod:dXMtY2Vx...YjM1ODNlOWFiZGRlNjI0NA==' \
  --api-key 'MlVtVjBZ...ZSYlduYnF1djh3NG5FQQ=='
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;16. Scan a GitHub Repository for Cross Fork Object References and Deleted Commits&lt;/h2&gt; 
&lt;p&gt;The following command will enumerate deleted and hidden commits on a GitHub repository and then scan them for secrets. This is an alpha release feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog github-experimental --repo https://github.com/&amp;lt;USER&amp;gt;/&amp;lt;REPO&amp;gt;.git --object-discovery
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the normal TruffleHog output, the &lt;code&gt;--object-discovery&lt;/code&gt; flag creates two files in a new &lt;code&gt;$HOME/.trufflehog&lt;/code&gt; directory: &lt;code&gt;valid_hidden.txt&lt;/code&gt; and &lt;code&gt;invalid.txt&lt;/code&gt;. These are used to track state during commit enumeration, as well as to provide users with a complete list of all hidden and deleted commits (&lt;code&gt;valid_hidden.txt&lt;/code&gt;). If you'd like to automatically remove these files after scanning, please add the flag &lt;code&gt;--delete-cached-data&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Enumerating all valid commits on a repository using this method takes between 20 minutes and a few hours, depending on the size of your repository. We added a progress bar to keep you updated on how long the enumeration will take. The actual secret scanning runs extremely fast.&lt;/p&gt; 
&lt;p&gt;For more information on Cross Fork Object References, please &lt;a href="https://trufflesecurity.com/blog/anyone-can-access-deleted-and-private-repo-data-github"&gt;read our blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;17. Scan Hugging Face&lt;/h2&gt; 
&lt;h3&gt;Scan a Hugging Face Model, Dataset or Space&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog huggingface --model &amp;lt;model_id&amp;gt; --space &amp;lt;space_id&amp;gt; --dataset &amp;lt;dataset_id&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scan all Models, Datasets and Spaces belonging to a Hugging Face Organization or User&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog huggingface --org &amp;lt;orgname&amp;gt; --user &amp;lt;username&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Optionally) When scanning an organization or user, you can skip an entire class of resources with &lt;code&gt;--skip-models&lt;/code&gt;, &lt;code&gt;--skip-datasets&lt;/code&gt;, &lt;code&gt;--skip-spaces&lt;/code&gt; OR a particular resource with &lt;code&gt;--ignore-models &amp;lt;model_id&amp;gt;&lt;/code&gt;, &lt;code&gt;--ignore-datasets &amp;lt;dataset_id&amp;gt;&lt;/code&gt;, &lt;code&gt;--ignore-spaces &amp;lt;space_id&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Scan Discussion and PR Comments&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog huggingface --model &amp;lt;model_id&amp;gt; --include-discussions --include-prs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;18. Scan stdin Input&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;aws s3 cp s3://example/gzipped/data.gz - | gunzip -c | trufflehog stdin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;❓&lt;/span&gt; FAQ&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;All I see is &lt;code&gt;🐷🔑🐷 TruffleHog. Unearth your secrets. 🐷🔑🐷&lt;/code&gt; and the program exits, what gives? 
  &lt;ul&gt; 
   &lt;li&gt;That means no secrets were detected&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Why is the scan taking a long time when I scan a GitHub org 
  &lt;ul&gt; 
   &lt;li&gt;Unauthenticated GitHub scans have rate limits. To improve your rate limits, include the &lt;code&gt;--token&lt;/code&gt; flag with a personal access token&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;It says a private key was verified, what does that mean? 
  &lt;ul&gt; 
   &lt;li&gt;Check out our Driftwood blog post to learn how to do this, in short we've confirmed the key can be used live for SSH or SSL &lt;a href="https://trufflesecurity.com/blog/driftwood-know-if-private-keys-are-sensitive/"&gt;Blog post&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Is there an easy way to ignore specific secrets? 
  &lt;ul&gt; 
   &lt;li&gt;If the scanned source &lt;a href="https://github.com/trufflesecurity/trufflehog/raw/d6375ba92172fd830abb4247cca15e3176448c5d/pkg/engine/engine.go#L358-L365"&gt;supports line numbers&lt;/a&gt;, then you can add a &lt;code&gt;trufflehog:ignore&lt;/code&gt; comment on the line containing the secret to ignore that secrets.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;&lt;span&gt;📰&lt;/span&gt; What's new in v3?&lt;/h1&gt; 
&lt;p&gt;TruffleHog v3 is a complete rewrite in Go with many new powerful features.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;We've &lt;strong&gt;added over 700 credential detectors that support active verification against their respective APIs&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;We've also added native &lt;strong&gt;support for scanning GitHub, GitLab, Docker, filesystems, S3, GCS, Circle CI and Travis CI&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Instantly verify private keys&lt;/strong&gt; against millions of github users and &lt;strong&gt;billions&lt;/strong&gt; of TLS certificates using our &lt;a href="https://trufflesecurity.com/blog/driftwood"&gt;Driftwood&lt;/a&gt; technology.&lt;/li&gt; 
 &lt;li&gt;Scan binaries, documents, and other file formats&lt;/li&gt; 
 &lt;li&gt;Available as a GitHub Action and a pre-commit hook&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What is credential verification?&lt;/h2&gt; 
&lt;p&gt;For every potential credential that is detected, we've painstakingly implemented programmatic verification against the API that we think it belongs to. Verification eliminates false positives. For example, the &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/detectors/aws/aws.go"&gt;AWS credential detector&lt;/a&gt; performs a &lt;code&gt;GetCallerIdentity&lt;/code&gt; API call against the AWS API to verify if an AWS credential is active.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;📝&lt;/span&gt; Usage&lt;/h1&gt; 
&lt;p&gt;TruffleHog has a sub-command for each source of data that you may want to scan:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;git&lt;/li&gt; 
 &lt;li&gt;github&lt;/li&gt; 
 &lt;li&gt;gitlab&lt;/li&gt; 
 &lt;li&gt;docker&lt;/li&gt; 
 &lt;li&gt;s3&lt;/li&gt; 
 &lt;li&gt;filesystem (files and directories)&lt;/li&gt; 
 &lt;li&gt;syslog&lt;/li&gt; 
 &lt;li&gt;circleci&lt;/li&gt; 
 &lt;li&gt;travisci&lt;/li&gt; 
 &lt;li&gt;gcs (Google Cloud Storage)&lt;/li&gt; 
 &lt;li&gt;postman&lt;/li&gt; 
 &lt;li&gt;jenkins&lt;/li&gt; 
 &lt;li&gt;elasticsearch&lt;/li&gt; 
 &lt;li&gt;stdin&lt;/li&gt; 
 &lt;li&gt;multi-scan&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each subcommand can have options that you can see with the &lt;code&gt;--help&lt;/code&gt; flag provided to the sub command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ trufflehog git --help
usage: TruffleHog git [&amp;lt;flags&amp;gt;] &amp;lt;uri&amp;gt;

Find credentials in git repositories.

Flags:
  -h, --help                Show context-sensitive help (also try --help-long and --help-man).
      --log-level=0         Logging verbosity on a scale of 0 (info) to 5 (trace). Can be disabled with "-1".
      --profile             Enables profiling and sets a pprof and fgprof server on :18066.
  -j, --json                Output in JSON format.
      --json-legacy         Use the pre-v3.0 JSON format. Only works with git, gitlab, and github sources.
      --github-actions      Output in GitHub Actions format.
      --concurrency=20           Number of concurrent workers.
      --no-verification     Don't verify the results.
      --results=RESULTS          Specifies which type(s) of results to output: verified, unknown, unverified, filtered_unverified. Defaults to all types.
      --allow-verification-overlap
                                 Allow verification of similar credentials across detectors
      --filter-unverified   Only output first unverified result per chunk per detector if there are more than one results.
      --filter-entropy=FILTER-ENTROPY
                                 Filter unverified results with Shannon entropy. Start with 3.0.
      --config=CONFIG            Path to configuration file.
      --print-avg-detector-time
                                 Print the average time spent on each detector.
      --no-update           Don't check for updates.
      --fail                Exit with code 183 if results are found.
      --verifier=VERIFIER ...    Set custom verification endpoints.
      --custom-verifiers-only   Only use custom verification endpoints.
      --archive-max-size=ARCHIVE-MAX-SIZE
                                 Maximum size of archive to scan. (Byte units eg. 512B, 2KB, 4MB)
      --archive-max-depth=ARCHIVE-MAX-DEPTH
                                 Maximum depth of archive to scan.
      --archive-timeout=ARCHIVE-TIMEOUT
                                 Maximum time to spend extracting an archive.
      --include-detectors="all"  Comma separated list of detector types to include. Protobuf name or IDs may be used, as well as ranges.
      --exclude-detectors=EXCLUDE-DETECTORS
                                 Comma separated list of detector types to exclude. Protobuf name or IDs may be used, as well as ranges. IDs defined here take precedence over the include list.
      --version             Show application version.
  -i, --include-paths=INCLUDE-PATHS
                                 Path to file with newline separated regexes for files to include in scan.
  -x, --exclude-paths=EXCLUDE-PATHS
                                 Path to file with newline separated regexes for files to exclude in scan.
      --exclude-globs=EXCLUDE-GLOBS
                                 Comma separated list of globs to exclude in scan. This option filters at the `git log` level, resulting in faster scans.
      --since-commit=SINCE-COMMIT
                                 Commit to start scan from.
      --branch=BRANCH            Branch to scan.
      --max-depth=MAX-DEPTH      Maximum depth of commits to scan.
      --bare                Scan bare repository (e.g. useful while using in pre-receive hooks)

Args:
  &amp;lt;uri&amp;gt;  Git repository URL. https://, file://, or ssh:// schema expected.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For example, to scan a &lt;code&gt;git&lt;/code&gt; repository, start with&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;trufflehog git https://github.com/trufflesecurity/trufflehog.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports defining &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/#regex-detector-alpha"&gt;custom regex detectors&lt;/a&gt; and multiple sources in a configuration file provided via the &lt;code&gt;--config&lt;/code&gt; flag. The regex detectors can be used with any subcommand, while the sources defined in configuration are only for the &lt;code&gt;multi-scan&lt;/code&gt; subcommand.&lt;/p&gt; 
&lt;p&gt;The configuration format for sources can be found on Truffle Security's &lt;a href="https://docs.trufflesecurity.com/scan-data-for-secrets"&gt;source configuration documentation page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Example GitHub source configuration and &lt;a href="https://docs.trufflesecurity.com/github#Fvm1I"&gt;options reference&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;sources:
- connection:
    '@type': type.googleapis.com/sources.GitHub
    repositories:
    - https://github.com/trufflesecurity/test_keys.git
    unauthenticated: {}
  name: example config scan
  type: SOURCE_TYPE_GITHUB
  verify: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You may define multiple connections under the &lt;code&gt;sources&lt;/code&gt; key (see above), and TruffleHog will scan all of the sources concurrently.&lt;/p&gt; 
&lt;h2&gt;S3&lt;/h2&gt; 
&lt;p&gt;The S3 source supports assuming IAM roles for scanning in addition to IAM users. This makes it easier for users to scan multiple AWS accounts without needing to rely on hardcoded credentials for each account.&lt;/p&gt; 
&lt;p&gt;The IAM identity that TruffleHog uses initially will need to have &lt;code&gt;AssumeRole&lt;/code&gt; privileges as a principal in the &lt;a href="https://aws.amazon.com/blogs/security/how-to-use-trust-policies-with-iam-roles/"&gt;trust policy&lt;/a&gt; of each IAM role to assume.&lt;/p&gt; 
&lt;p&gt;To scan a specific bucket using locally set credentials or instance metadata if on an EC2 instance:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --bucket=&amp;lt;bucket-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To scan a specific bucket using an assumed role:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --bucket=&amp;lt;bucket-name&amp;gt; --role-arn=&amp;lt;iam-role-arn&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Multiple roles can be passed as separate arguments. The following command will attempt to scan every bucket each role has permissions to list in the S3 API:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog s3 --role-arn=&amp;lt;iam-role-arn-1&amp;gt; --role-arn=&amp;lt;iam-role-arn-2&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Exit Codes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;0: No errors and no results were found.&lt;/li&gt; 
 &lt;li&gt;1: An error was encountered. Sources may not have completed scans.&lt;/li&gt; 
 &lt;li&gt;183: No errors were encountered, but results were found. Will only be returned if &lt;code&gt;--fail&lt;/code&gt; flag is used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;img alt="octocat" src="https://github.githubassets.com/images/icons/emoji/octocat.png?v8" /&gt;) TruffleHog Github Action&lt;/h2&gt; 
&lt;h3&gt;General Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        extra_args: --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example config above, we're scanning for live secrets in all PRs and Pushes to &lt;code&gt;main&lt;/code&gt;. Only code changes in the referenced commits are scanned. If you'd like to scan an entire branch, please see the "Advanced Usage" section below.&lt;/p&gt; 
&lt;h3&gt;Shallow Cloning&lt;/h3&gt; 
&lt;p&gt;If you're incorporating TruffleHog into a standalone workflow and aren't running any other CI/CD tooling alongside TruffleHog, then we recommend using &lt;a href="https://git-scm.com/docs/git-clone#Documentation/git-clone.txt---depthltdepthgt"&gt;Shallow Cloning&lt;/a&gt; to speed up your workflow. Here's an example of how to do it:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;...
      - shell: bash
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "depth=$(($(jq length &amp;lt;&amp;lt;&amp;lt; '${{ toJson(github.event.commits) }}') + 2))" &amp;gt;&amp;gt; $GITHUB_ENV
            echo "branch=${{ github.ref_name }}" &amp;gt;&amp;gt; $GITHUB_ENV
          fi
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "depth=$((${{ github.event.pull_request.commits }}+2))" &amp;gt;&amp;gt; $GITHUB_ENV
            echo "branch=${{ github.event.pull_request.head.ref }}" &amp;gt;&amp;gt; $GITHUB_ENV
          fi
      - uses: actions/checkout@v3
        with:
          ref: ${{env.branch}}
          fetch-depth: ${{env.depth}}
      - uses: trufflesecurity/trufflehog@main
        with:
          extra_args: --results=verified,unknown
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Depending on the event type (push or PR), we calculate the number of commits present. Then we add 2, so that we can reference a base commit before our code changes. We pass that integer value to the &lt;code&gt;fetch-depth&lt;/code&gt; flag in the checkout action in addition to the relevant branch. Now our checkout process should be much shorter.&lt;/p&gt; 
&lt;h3&gt;Canary detection&lt;/h3&gt; 
&lt;p&gt;TruffleHog statically detects &lt;a href="https://canarytokens.org/"&gt;https://canarytokens.org/&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/trufflesecurity/trufflehog/assets/52866392/74ace530-08c5-4eaf-a169-84a73e328f6f" alt="image" /&gt;&lt;/p&gt; 
&lt;h3&gt;Advanced Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: TruffleHog
  uses: trufflesecurity/trufflehog@main
  with:
    # Repository path
    path:
    # Start scanning from here (usually main branch).
    base:
    # Scan commits until here (usually dev branch).
    head: # optional
    # Extra args to be passed to the trufflehog cli.
    extra_args: --log-level=2 --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you'd like to specify specific &lt;code&gt;base&lt;/code&gt; and &lt;code&gt;head&lt;/code&gt; refs, you can use the &lt;code&gt;base&lt;/code&gt; argument (&lt;code&gt;--since-commit&lt;/code&gt; flag in TruffleHog CLI) and the &lt;code&gt;head&lt;/code&gt; argument (&lt;code&gt;--branch&lt;/code&gt; flag in the TruffleHog CLI). We only recommend using these arguments for very specific use cases, where the default behavior does not work.&lt;/p&gt; 
&lt;h4&gt;Advanced Usage: Scan entire branch&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;- name: scan-push
        uses: trufflesecurity/trufflehog@main
        with:
          base: ""
          head: ${{ github.ref_name }}
          extra_args: --results=verified,unknown
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;TruffleHog GitLab CI&lt;/h2&gt; 
&lt;h3&gt;Example Usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;stages:
  - security

security-secrets:
  stage: security
  allow_failure: false
  image: alpine:latest
  variables:
    SCAN_PATH: "." # Set the relative path in the repo to scan
  before_script:
    - apk add --no-cache git curl jq
    - curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
  script:
    - trufflehog filesystem "$SCAN_PATH" --results=verified,unknown --fail --json | jq
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the example pipeline above, we're scanning for live secrets in all repository directories and files. This job runs only when the pipeline source is a merge request event, meaning it's triggered when a new merge request is created.&lt;/p&gt; 
&lt;h2&gt;Pre-commit Hook&lt;/h2&gt; 
&lt;p&gt;TruffleHog can be used in a pre-commit hook to prevent credentials from leaking before they ever leave your computer.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/PreCommit.md"&gt;pre-commit hook documentation&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Regex Detector (alpha)&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports detection and verification of custom regular expressions. For detection, at least one &lt;strong&gt;regular expression&lt;/strong&gt; and &lt;strong&gt;keyword&lt;/strong&gt; is required. A &lt;strong&gt;keyword&lt;/strong&gt; is a fixed literal string identifier that appears in or around the regex to be detected. To allow maximum flexibility for verification, a webhook is used containing the regular expression matches.&lt;/p&gt; 
&lt;p&gt;TruffleHog will send a JSON POST request containing the regex matches to a configured webhook endpoint. If the endpoint responds with a &lt;code&gt;200 OK&lt;/code&gt; response status code, the secret is considered verified.&lt;/p&gt; 
&lt;p&gt;Custom Detectors support a few different filtering mechanisms: entropy, regex targeting the entire match, regex targeting the captured secret, and excluded word lists checked against the secret (captured group if present, entire match if capture group is not present). Note that if your custom detector has multiple &lt;code&gt;regex&lt;/code&gt; set (in this example &lt;code&gt;hogID&lt;/code&gt;, and &lt;code&gt;hogToken&lt;/code&gt;), then the filters get applied to each regex. &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/examples/generic_with_filters.yml"&gt;Here&lt;/a&gt; is an example of a custom detector using these filters.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;NB:&lt;/strong&gt; This feature is alpha and subject to change.&lt;/p&gt; 
&lt;h3&gt;Regex Detector Example&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/pkg/custom_detectors/CUSTOM_DETECTORS.md"&gt;Here&lt;/a&gt; is how to setup a custom regex detector with verification server.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🔍&lt;/span&gt; Analyze&lt;/h2&gt; 
&lt;p&gt;TruffleHog supports running a deeper analysis of a credential to view its permissions and the resources it has access to.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trufflehog analyze
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;&lt;span&gt;❤️&lt;/span&gt; Contributors&lt;/h1&gt; 
&lt;p&gt;This project exists thanks to all the people who contribute. [&lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/CONTRIBUTING.md"&gt;Contribute&lt;/a&gt;].&lt;/p&gt; 
&lt;a href="https://github.com/trufflesecurity/trufflehog/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=trufflesecurity/trufflehog" /&gt; &lt;/a&gt; 
&lt;h1&gt;&lt;span&gt;💻&lt;/span&gt; Contributing&lt;/h1&gt; 
&lt;p&gt;Contributions are very welcome! Please see our &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/CONTRIBUTING.md"&gt;contribution guidelines first&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We no longer accept contributions to TruffleHog v2, but that code is available in the &lt;code&gt;v2&lt;/code&gt; branch.&lt;/p&gt; 
&lt;h2&gt;Adding new secret detectors&lt;/h2&gt; 
&lt;p&gt;We have published some &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/hack/docs/Adding_Detectors_external.md"&gt;documentation and tooling to get started on adding new secret detectors&lt;/a&gt;. Let's improve detection together!&lt;/p&gt; 
&lt;h1&gt;Use as a library&lt;/h1&gt; 
&lt;p&gt;Currently, trufflehog is in heavy development and no guarantees can be made on the stability of the public APIs at this time.&lt;/p&gt; 
&lt;h1&gt;License Change&lt;/h1&gt; 
&lt;p&gt;Since v3.0, TruffleHog is released under a AGPL 3 license, included in &lt;a href="https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;. TruffleHog v3.0 uses none of the previous codebase, but care was taken to preserve backwards compatibility on the command line interface. The work previous to this release is still available licensed under GPL 2.0 in the history of this repository and the previous package releases and tags. A completed CLA is required for us to accept contributions going forward.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/terraform</title>
      <link>https://github.com/hashicorp/terraform</link>
      <description>&lt;p&gt;Terraform enables you to safely and predictably create, change, and improve infrastructure. It is a source-available tool that codifies APIs into declarative configuration files that can be shared amongst team members, treated as code, edited, reviewed, and versioned.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Terraform&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://developer.hashicorp.com/terraform"&gt;https://developer.hashicorp.com/terraform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Forums: &lt;a href="https://discuss.hashicorp.com/c/terraform-core"&gt;HashiCorp Discuss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;https://developer.hashicorp.com/terraform/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tutorials: &lt;a href="https://developer.hashicorp.com/terraform/tutorials"&gt;HashiCorp's Learn Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Certification Exam: &lt;a href="https://www.hashicorp.com/certification/#hashicorp-certified-terraform-associate"&gt;HashiCorp Certified: Terraform Associate&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img alt="Terraform" src="https://www.datocms-assets.com/2885/1731373310-terraform_white.svg?sanitize=true" width="600px" /&gt; 
&lt;p&gt;Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; 
&lt;p&gt;The key features of Terraform are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: Terraform has a "planning" step where it generates an execution plan. The execution plan shows what Terraform will do when you call apply. This lets you avoid any surprises when Terraform manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: Terraform builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, Terraform builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what Terraform will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, refer to the &lt;a href="https://www.terraform.io/intro"&gt;What is Terraform?&lt;/a&gt; page on the Terraform website.&lt;/p&gt; 
&lt;h2&gt;Getting Started &amp;amp; Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href="https://developer.hashicorp.com/terraform"&gt;Terraform website&lt;/a&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/intro"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.hashicorp.com/terraform/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you're new to Terraform and want to get started creating infrastructure, please check out our &lt;a href="https://learn.hashicorp.com/terraform#getting-started"&gt;Getting Started guides&lt;/a&gt; on HashiCorp's learning platform. There are also &lt;a href="https://learn.hashicorp.com/terraform#operations-and-development"&gt;additional guides&lt;/a&gt; to continue your learning.&lt;/p&gt; 
&lt;p&gt;Show off your Terraform knowledge by passing a certification exam. Visit the &lt;a href="https://www.hashicorp.com/certification/"&gt;certification page&lt;/a&gt; for information about exams and find &lt;a href="https://learn.hashicorp.com/terraform/certification/terraform-associate"&gt;study materials&lt;/a&gt; on HashiCorp's learning platform.&lt;/p&gt; 
&lt;h2&gt;Developing Terraform&lt;/h2&gt; 
&lt;p&gt;This repository contains only Terraform core, which includes the command line interface and the main graph engine. Providers are implemented as plugins, and Terraform can automatically download providers that are published on &lt;a href="https://registry.terraform.io"&gt;the Terraform Registry&lt;/a&gt;. HashiCorp develops some providers, and others are developed by other organizations. For more information, refer to &lt;a href="https://developer.hashicorp.com/terraform/plugin"&gt;Plugin development&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about compiling Terraform and contributing suggested changes, refer to &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/.github/CONTRIBUTING.md"&gt;the contributing guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn more about how we handle bug reports, refer to the &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform/main/BUGPROCESS.md"&gt;bug triage guide&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To learn how to contribute to the Terraform documentation, refer to the &lt;a href="https://github.com/hashicorp/web-unified-docs"&gt;Web Unified Docs repository&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/hashicorp/terraform/raw/main/LICENSE"&gt;Business Source License 1.1&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-cd</title>
      <link>https://github.com/argoproj/argo-cd</link>
      <description>&lt;p&gt;Declarative Continuous Deployment for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Releases:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/argoproj/argo-cd?label=argo-cd" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-cd"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-cd" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;a href="https://slsa.dev"&gt;&lt;img src="https://slsa.dev/images/gh-badge-level3.svg?sanitize=true" alt="SLSA 3" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/actions?query=workflow%3A%22Integration+tests%22"&gt;&lt;img src="https://github.com/argoproj/argo-cd/workflows/Integration%20tests/badge.svg?branch=master" alt="Integration tests" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/argoproj/argo-cd"&gt;&lt;img src="https://codecov.io/gh/argoproj/argo-cd/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/4486"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/4486/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/argoproj/argo-cd"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-cd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Social:&lt;/strong&gt; &lt;a href="https://twitter.com/argoproj"&gt;&lt;img src="https://img.shields.io/twitter/follow/argoproj?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/argoproj/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-argoproj-blue.svg?logo=linkedin" alt="LinkedIn" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Argo CD - Declarative Continuous Delivery for Kubernetes&lt;/h1&gt; 
&lt;h2&gt;What is Argo CD?&lt;/h2&gt; 
&lt;p&gt;Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/argoproj/argo-cd/master/docs/assets/argocd-ui.gif" alt="Argo CD UI" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/0WAm0y2vLIo"&gt;&lt;img src="https://img.youtube.com/vi/0WAm0y2vLIo/0.jpg" alt="Argo CD Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why Argo CD?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Application definitions, configurations, and environments should be declarative and version controlled.&lt;/li&gt; 
 &lt;li&gt;Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Who uses Argo CD?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/argoproj/argo-cd/master/USERS.md"&gt;Official Argo CD user list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo CD &lt;a href="https://argo-cd.readthedocs.io/"&gt;go to the complete documentation&lt;/a&gt;. Check live demo at &lt;a href="https://cd.apps.argoproj.io/"&gt;https://cd.apps.argoproj.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Contribution, Discussion and Support&lt;/h3&gt; 
&lt;p&gt;You can reach the Argo CD community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A : &lt;a href="https://github.com/argoproj/argo-cd/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat : &lt;a href="https://argoproj.github.io/community/join-slack"&gt;The #argo-cd Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;First Wednesday of the month&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Participation in the Argo CD project is governed by the &lt;a href="https://github.com/cncf/foundation/raw/master/code-of-conduct.md"&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Blogs and Presentations&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://akuity.io/blog/secret-ingredients-of-continuous-delivery-at-enterprise-scale-with-argocd/"&gt;Unveil the Secret Ingredients of Continuous Delivery at Enterprise Scale with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/avPUQin9kzU"&gt;GitOps Without Pipelines With ArgoCD Image Updater&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eEcgn_gU3SM"&gt;Combining Argo CD (GitOps), Crossplane (Control Plane), And KubeVela (OAM)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/yrj4lmScKHQ"&gt;How to Apply GitOps to Everything - Combining Argo CD and Crossplane&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nkPoPaVzExY"&gt;Couchbase - How To Run a Database Cluster in Kubernetes Using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/cpAaI8p4R60"&gt;Environments Based On Pull Requests (PRs): Using Argo CD To Apply GitOps Principles On Previews&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/vpWQeoaiRM4"&gt;Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/creating-temporary-preview-environments-based-pull-requests-argo-cd-codefresh/"&gt;Creating Temporary Preview Environments Based On Pull Requests With Argo CD And Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=r50tRQjisxw"&gt;Tutorial: Everything You Need To Become A GitOps Ninja&lt;/a&gt; 90m tutorial on GitOps and Argo CD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inovex.de/blog/spinnaker-vs-argo-cd-vs-tekton-vs-jenkins-x/"&gt;Comparison of Argo CD, Spinnaker, Jenkins X, and Tekton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ibm.com/cloud/blog/simplify-and-automate-deployments-using-gitops-with-ibm-multicloud-manager-3-1-2"&gt;Simplify and Automate Deployments Using GitOps with IBM Multicloud Manager 3.1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v0-6.kubeflow.org/docs/use-cases/gitops-for-kubeflow/"&gt;GitOps for Kubeflow using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/webinar-series-gitops-tool-sets-on-kubernetes-with-circleci-and-argo-cd"&gt;GitOps Toolsets on Kubernetes with CircleCI and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OdzH82VpMwI&amp;amp;feature=youtu.be"&gt;CI/CD in Light Speed with K8s and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VXrGp5er1ZE&amp;amp;t=0s&amp;amp;index=135&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU"&gt;Machine Learning as Code&lt;/a&gt;. Among other things, describes how Kubeflow uses Argo CD to implement GitOPs for ML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aWDIQMbp1cc&amp;amp;feature=youtu.be&amp;amp;t=1m4s"&gt;Argo CD - GitOps Continuous Delivery for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WSJF7d8dUg&amp;amp;feature=youtu.be"&gt;Introduction to Argo CD : Kubernetes DevOps CI/CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/riskified-technology/gitops-deployment-and-kubernetes-f1ab289efa4b"&gt;GitOps Deployment and Kubernetes - using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/deploy-argo-cd-with-ingress-and-tls-in-three-steps-no-yaml-yak-shaving-required-bc536d401491"&gt;Deploy Argo CD with Ingress and TLS in Three Steps: No YAML Yak Shaving Required&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/events/cncf-member-webinar-gitops-continuous-delivery-argo-codefresh/"&gt;GitOps Continuous Delivery with Argo and Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/"&gt;Stay up to date with Argo CD and Renovate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.arthurkoziel.com/setting-up-argocd-with-helm/"&gt;Setting up Argo CD with Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/applied-gitops-with-argocd/"&gt;Applied GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2020/12/17/solving-configuration-drift-using-gitops-with-argo-cd/"&gt;Solving configuration drift using GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.sap.com/2021/05/06/decentralized-gitops-over-environments/"&gt;Decentralized GitOps over environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/AvLuplh1skA"&gt;Getting Started with ArgoCD for GitOps Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/17894DTru2Y"&gt;Using Argo CD &amp;amp; Datree for Stable Kubernetes CI/CD Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amralaayassen.medium.com/how-to-create-argocd-applications-automatically-using-applicationset-automation-of-the-gitops-59455eaf4f72"&gt;How to create Argo CD Applications Automatically using ApplicationSet? "Automation of GitOps"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2022/12/16/progressive-delivery-with-service-mesh-argo-rollouts-with-istio/"&gt;Progressive Delivery with Service Mesh – Argo Rollouts with Istio&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>jackc/pgx</title>
      <link>https://github.com/jackc/pgx</link>
      <description>&lt;p&gt;PostgreSQL driver and toolkit for Go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/jackc/pgx/v5"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/jackc/pgx/v5.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jackc/pgx/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/jackc/pgx/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;pgx - PostgreSQL Driver and Toolkit&lt;/h1&gt; 
&lt;p&gt;pgx is a pure Go driver and toolkit for PostgreSQL.&lt;/p&gt; 
&lt;p&gt;The pgx driver is a low-level, high performance interface that exposes PostgreSQL-specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt;. It also includes an adapter for the standard &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;The toolkit component is a related set of packages that implement PostgreSQL functionality such as parsing the wire protocol and type mapping between PostgreSQL and Go. These underlying packages can be used to implement alternative drivers, proxies, load balancers, logical replication clients, etc.&lt;/p&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"fmt"
	"os"

	"github.com/jackc/pgx/v5"
)

func main() {
	// urlExample := "postgres://username:password@localhost:5432/database_name"
	conn, err := pgx.Connect(context.Background(), os.Getenv("DATABASE_URL"))
	if err != nil {
		fmt.Fprintf(os.Stderr, "Unable to connect to database: %v\n", err)
		os.Exit(1)
	}
	defer conn.Close(context.Background())

	var name string
	var weight int64
	err = conn.QueryRow(context.Background(), "select name, weight from widgets where id=$1", 42).Scan(&amp;amp;name, &amp;amp;weight)
	if err != nil {
		fmt.Fprintf(os.Stderr, "QueryRow failed: %v\n", err)
		os.Exit(1)
	}

	fmt.Println(name, weight)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/jackc/pgx/wiki/Getting-started-with-pgx"&gt;getting started guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for approximately 70 different PostgreSQL types&lt;/li&gt; 
 &lt;li&gt;Automatic statement preparation and caching&lt;/li&gt; 
 &lt;li&gt;Batch queries&lt;/li&gt; 
 &lt;li&gt;Single-round trip query mode&lt;/li&gt; 
 &lt;li&gt;Full TLS connection control&lt;/li&gt; 
 &lt;li&gt;Binary format support for custom types (allows for much quicker encoding/decoding)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;COPY&lt;/code&gt; protocol support for faster bulk data loads&lt;/li&gt; 
 &lt;li&gt;Tracing and logging support&lt;/li&gt; 
 &lt;li&gt;Connection pool with after-connect hook for arbitrary connection setup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Conversion of PostgreSQL arrays to Go slice mappings for integers, floats, and strings&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hstore&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;Maps &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt; PostgreSQL types to &lt;code&gt;netip.Addr&lt;/code&gt; and &lt;code&gt;netip.Prefix&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Large object support&lt;/li&gt; 
 &lt;li&gt;NULL mapping to pointer to pointer&lt;/li&gt; 
 &lt;li&gt;Supports &lt;code&gt;database/sql.Scanner&lt;/code&gt; and &lt;code&gt;database/sql/driver.Valuer&lt;/code&gt; interfaces for custom types&lt;/li&gt; 
 &lt;li&gt;Notice response handling&lt;/li&gt; 
 &lt;li&gt;Simulated nested transactions with savepoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Choosing Between the pgx and database/sql Interfaces&lt;/h2&gt; 
&lt;p&gt;The pgx interface is faster. Many PostgreSQL specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; are not available through the &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;The pgx interface is recommended when:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The application only targets PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;No other libraries that require &lt;code&gt;database/sql&lt;/code&gt; are in use.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;It is also possible to use the &lt;code&gt;database/sql&lt;/code&gt; interface and convert a connection to the lower-level pgx interface as needed.&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/jackc/pgx/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;See the presentation at Golang Estonia, &lt;a href="https://www.youtube.com/watch?v=sXMSWhcHCf8"&gt;PGX Top to Bottom&lt;/a&gt; for a description of pgx architecture.&lt;/p&gt; 
&lt;h2&gt;Supported Go and PostgreSQL Versions&lt;/h2&gt; 
&lt;p&gt;pgx supports the same versions of Go and PostgreSQL that are supported by their respective teams. For &lt;a href="https://golang.org/doc/devel/release.html#policy"&gt;Go&lt;/a&gt; that is the two most recent major releases and for &lt;a href="https://www.postgresql.org/support/versioning/"&gt;PostgreSQL&lt;/a&gt; the major releases in the last 5 years. This means pgx supports Go 1.24 and higher and PostgreSQL 13 and higher. pgx also is tested against the latest version of &lt;a href="https://www.cockroachlabs.com/product/"&gt;CockroachDB&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Version Policy&lt;/h2&gt; 
&lt;p&gt;pgx follows semantic versioning for the documented public API on stable releases. &lt;code&gt;v5&lt;/code&gt; is the latest stable major version.&lt;/p&gt; 
&lt;h2&gt;PGX Family Libraries&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pglogrepl"&gt;github.com/jackc/pglogrepl&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pglogrepl provides functionality to act as a client for PostgreSQL logical replication.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pgmock"&gt;github.com/jackc/pgmock&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgmock offers the ability to create a server that mocks the PostgreSQL wire protocol. This is used internally to test pgx by purposely inducing unusual errors. pgproto3 and pgmock together provide most of the foundational tooling required to implement a PostgreSQL proxy or MitM (such as for a custom connection pooler).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/tern"&gt;github.com/jackc/tern&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;tern is a stand-alone SQL migration system.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pgerrcode"&gt;github.com/jackc/pgerrcode&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgerrcode contains constants for the PostgreSQL error codes.&lt;/p&gt; 
&lt;h2&gt;Adapters for 3rd Party Types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-gofrs-uuid"&gt;github.com/jackc/pgx-gofrs-uuid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-shopspring-decimal"&gt;github.com/jackc/pgx-shopspring-decimal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twpayne/pgx-geos"&gt;github.com/twpayne/pgx-geos&lt;/a&gt; (&lt;a href="https://postgis.net/"&gt;PostGIS&lt;/a&gt; and &lt;a href="https://libgeos.org/"&gt;GEOS&lt;/a&gt; via &lt;a href="https://github.com/twpayne/go-geos"&gt;go-geos&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vgarvardt/pgx-google-uuid"&gt;github.com/vgarvardt/pgx-google-uuid&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adapters for 3rd Party Tracers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackhopner/pgx-xray-tracer"&gt;github.com/jackhopner/pgx-xray-tracer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/exaring/otelpgx"&gt;github.com/exaring/otelpgx&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adapters for 3rd Party Loggers&lt;/h2&gt; 
&lt;p&gt;These adapters can be used with the tracelog package.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-go-kit-log"&gt;github.com/jackc/pgx-go-kit-log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-log15"&gt;github.com/jackc/pgx-log15&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-logrus"&gt;github.com/jackc/pgx-logrus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-zap"&gt;github.com/jackc/pgx-zap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-zerolog"&gt;github.com/jackc/pgx-zerolog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcosta74/pgx-slog"&gt;github.com/mcosta74/pgx-slog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kataras/pgx-golog"&gt;github.com/kataras/pgx-golog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;3rd Party Libraries with PGX Support&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/pashagolub/pgxmock"&gt;github.com/pashagolub/pgxmock&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgxmock is a mock library implementing pgx interfaces. pgxmock has one and only purpose - to simulate pgx behavior in tests, without needing a real database connection.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/georgysavva/scany"&gt;github.com/georgysavva/scany&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Library for scanning data from a database into Go structs and more.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/vingarcia/ksql"&gt;github.com/vingarcia/ksql&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;A carefully designed SQL client for making using SQL easier, more productive, and less error-prone on Golang.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/otan/gopgkrb5"&gt;github.com/otan/gopgkrb5&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Adds GSSAPI / Kerberos authentication support.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/wcamarao/pmx"&gt;github.com/wcamarao/pmx&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Explicit data mapping and scanning library for Go structs and slices.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/stephenafamo/scan"&gt;github.com/stephenafamo/scan&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Type safe and flexible package for scanning database data into Go types. Supports, structs, maps, slices and custom mapping functions.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/z0ne-dev/mgx"&gt;github.com/z0ne-dev/mgx&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Code first migration library for native pgx (no database/sql abstraction).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/amirsalarsafaei/sqlc-pgx-monitoring"&gt;github.com/amirsalarsafaei/sqlc-pgx-monitoring&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;A database monitoring/metrics library for pgx and sqlc. Trace, log and monitor your sqlc query performance using OpenTelemetry.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/nikolayk812/pgx-outbox"&gt;https://github.com/nikolayk812/pgx-outbox&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Simple Golang implementation for transactional outbox pattern for PostgreSQL using jackc/pgx driver.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/Arlandaren/pgxWrappy"&gt;https://github.com/Arlandaren/pgxWrappy&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Simplifies working with the pgx library, providing convenient scanning of nested structures.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/KoNekoD/pgx-colon-query-rewriter"&gt;https://github.com/KoNekoD/pgx-colon-query-rewriter&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Implementation of the pgx query rewriter to use ':' instead of '@' in named query parameters.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alibaba/higress</title>
      <link>https://github.com/alibaba/higress</link>
      <description>&lt;p&gt;🤖 AI Gateway | AI Native API Gateway&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt; &lt;img src="https://img.alicdn.com/imgextra/i2/O1CN01NwxLDd20nxfGBjxmZ_!!6000000006895-2-tps-960-290.png" alt="Higress" width="240" height="72.5" /&gt; &lt;br /&gt; AI Gateway &lt;/h1&gt; 
&lt;h4 align="center"&gt; AI Native API Gateway &lt;/h4&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/alibaba/higress/actions"&gt;&lt;img src="https://github.com/alibaba/higress/actions/workflows/build-and-test.yaml/badge.svg?branch=main" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0.html"&gt;&lt;img src="https://img.shields.io/github/license/alibaba/higress.svg?sanitize=true" alt="license" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/tSbww9VDaM"&gt;&lt;img src="https://img.shields.io/discord/1364956090566971515?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/10918" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/10918" alt="alibaba%2Fhigress | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/higress?embed=true&amp;amp;utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-higress" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=951287&amp;amp;theme=light&amp;amp;t=1745492822283" alt="Higress - Global APIs as MCP powered by AI Gateway | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://higress.ai/en/"&gt;&lt;strong&gt;Official Site&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/docs/latest/overview/what-is-higress/"&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/blog/"&gt;&lt;strong&gt;Blog&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/ai/mcp-quick-start/"&gt;&lt;strong&gt;MCP Server QuickStart&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/docs/latest/dev/architecture/"&gt;&lt;strong&gt;Developer Guide&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://higress.cn/en/plugin/"&gt;&lt;strong&gt;Wasm Plugin Hub&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; |&lt;/p&gt; 
&lt;p&gt; English | &lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/README_ZH.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/README_JP.md"&gt;日本語&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;What is Higress?&lt;/h2&gt; 
&lt;p&gt;Higress is a cloud-native API gateway based on Istio and Envoy, which can be extended with Wasm plugins written in Go/Rust/JS. It provides dozens of ready-to-use general-purpose plugins and an out-of-the-box console (try the &lt;a href="http://demo.higress.io/"&gt;demo here&lt;/a&gt;).&lt;/p&gt; 
&lt;h3&gt;Core Use Cases&lt;/h3&gt; 
&lt;p&gt;Higress's AI gateway capabilities support all &lt;a href="https://github.com/alibaba/higress/tree/main/plugins/wasm-go/extensions/ai-proxy/provider"&gt;mainstream model providers&lt;/a&gt; both domestic and international. It also supports hosting MCP (Model Context Protocol) Servers through its plugin mechanism, enabling AI Agents to easily call various tools and services. With the &lt;a href="https://github.com/higress-group/openapi-to-mcpserver"&gt;openapi-to-mcp tool&lt;/a&gt;, you can quickly convert OpenAPI specifications into remote MCP servers for hosting. Higress provides unified management for both LLM API and MCP API.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🌟 Try it now at &lt;a href="https://mcp.higress.ai/"&gt;https://mcp.higress.ai/&lt;/a&gt;&lt;/strong&gt; to experience Higress-hosted Remote MCP Servers firsthand:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.alicdn.com/imgextra/i2/O1CN01nmVa0a1aChgpyyWOX_!!6000000003294-0-tps-3430-1742.jpg" alt="Higress MCP Server Platform" /&gt;&lt;/p&gt; 
&lt;h3&gt;Enterprise Adoption&lt;/h3&gt; 
&lt;p&gt;Higress was born within Alibaba to solve the issues of Tengine reload affecting long-connection services and insufficient load balancing capabilities for gRPC/Dubbo. Within Alibaba Cloud, Higress's AI gateway capabilities support core AI applications such as Tongyi Bailian model studio, machine learning PAI platform, and other critical AI services. Alibaba Cloud has built its cloud-native API gateway product based on Higress, providing 99.99% gateway high availability guarantee service capabilities for a large number of enterprise customers.&lt;/p&gt; 
&lt;h2&gt;Summary&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#quick-start"&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#feature-showcase"&gt;&lt;strong&gt;Feature Showcase&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#use-cases"&gt;&lt;strong&gt;Use Cases&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#core-advantages"&gt;&lt;strong&gt;Core Advantages&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#community"&gt;&lt;strong&gt;Community&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Higress can be started with just Docker, making it convenient for individual developers to set up locally for learning or for building simple sites:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Create a working directory
mkdir higress; cd higress
# Start higress, configuration files will be written to the working directory
docker run -d --rm --name higress-ai -v ${PWD}:/data \
        -p 8001:8001 -p 8080:8080 -p 8443:8443  \
        higress-registry.cn-hangzhou.cr.aliyuncs.com/higress/all-in-one:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Port descriptions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Port 8001: Higress UI console entry&lt;/li&gt; 
 &lt;li&gt;Port 8080: Gateway HTTP protocol entry&lt;/li&gt; 
 &lt;li&gt;Port 8443: Gateway HTTPS protocol entry&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;All Higress Docker images use Higress's own image repository and are not affected by Docker Hub rate limits. In addition, the submission and updates of the images are protected by a security scanning mechanism (powered by Alibaba Cloud ACR), making them very secure for use in production environments.&lt;/p&gt; 
 &lt;p&gt;If you experience a timeout when pulling image from &lt;code&gt;higress-registry.cn-hangzhou.cr.aliyuncs.com&lt;/code&gt;, you can try replacing it with the following docker registry mirror source:&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Southeast Asia&lt;/strong&gt;: &lt;code&gt;higress-registry.ap-southeast-7.cr.aliyuncs.com&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For other installation methods such as Helm deployment under K8s, please refer to the official &lt;a href="https://higress.io/en-us/docs/user/quickstart"&gt;Quick Start documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;MCP Server Hosting&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress hosts MCP Servers through its plugin mechanism, enabling AI Agents to easily call various tools and services. With the &lt;a href="https://github.com/higress-group/openapi-to-mcpserver"&gt;openapi-to-mcp tool&lt;/a&gt;, you can quickly convert OpenAPI specifications into remote MCP servers.&lt;/p&gt; &lt;p&gt;&lt;img src="https://img.alicdn.com/imgextra/i1/O1CN01wv8H4g1mS4MUzC1QC_!!6000000004952-2-tps-1764-597.png" alt="" /&gt;&lt;/p&gt; &lt;p&gt;Key benefits of hosting MCP Servers with Higress:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Unified authentication and authorization mechanisms&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Fine-grained rate limiting to prevent abuse&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Comprehensive audit logs for all tool calls&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Rich observability for monitoring performance&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Simplified deployment through Higress's plugin mechanism&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Dynamic updates without disruption or connection drops&lt;/p&gt; &lt;p&gt;&lt;a href="https://higress.cn/en/ai/mcp-quick-start/?spm=36971b57.7beea2de.0.0.d85f20a94jsWGm"&gt;Learn more...&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;AI Gateway&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress connects to all LLM model providers using a unified protocol, with AI observability, multi-model load balancing, token rate limiting, and caching capabilities:&lt;/p&gt; &lt;p&gt;&lt;img src="https://img.alicdn.com/imgextra/i2/O1CN01izmBNX1jbHT7lP3Yr_!!6000000004566-0-tps-1920-1080.jpg" alt="" /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Kubernetes ingress controller&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress can function as a feature-rich ingress controller, which is compatible with many annotations of K8s' nginx ingress controller.&lt;/p&gt; &lt;p&gt;&lt;a href="https://gateway-api.sigs.k8s.io/"&gt;Gateway API&lt;/a&gt; support is coming soon and will support smooth migration from Ingress API to Gateway API.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Microservice gateway&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress can function as a microservice gateway, which can discovery microservices from various service registries, such as Nacos, ZooKeeper, Consul, Eureka, etc.&lt;/p&gt; &lt;p&gt;It deeply integrates with &lt;a href="https://github.com/apache/dubbo"&gt;Dubbo&lt;/a&gt;, &lt;a href="https://github.com/alibaba/nacos"&gt;Nacos&lt;/a&gt;, &lt;a href="https://github.com/alibaba/Sentinel"&gt;Sentinel&lt;/a&gt; and other microservice technology stacks.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Security gateway&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;Higress can be used as a security gateway, supporting WAF and various authentication strategies, such as key-auth, hmac-auth, jwt-auth, basic-auth, oidc, etc.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Core Advantages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Production Grade&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Born from Alibaba's internal product with over 2 years of production validation, supporting large-scale scenarios with hundreds of thousands of requests per second.&lt;/p&gt; &lt;p&gt;Completely eliminates traffic jitter caused by Nginx reload, configuration changes take effect in milliseconds and are transparent to business. Especially friendly to long-connection scenarios such as AI businesses.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Streaming Processing&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Supports true complete streaming processing of request/response bodies, Wasm plugins can easily customize the handling of streaming protocols such as SSE (Server-Sent Events).&lt;/p&gt; &lt;p&gt;In high-bandwidth scenarios such as AI businesses, it can significantly reduce memory overhead.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy to Extend&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Provides a rich official plugin library covering AI, traffic management, security protection and other common functions, meeting more than 90% of business scenario requirements.&lt;/p&gt; &lt;p&gt;Focuses on Wasm plugin extensions, ensuring memory safety through sandbox isolation, supporting multiple programming languages, allowing plugin versions to be upgraded independently, and achieving traffic-lossless hot updates of gateway logic.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure and Easy to Use&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Based on Ingress API and Gateway API standards, provides out-of-the-box UI console, WAF protection plugin, IP/Cookie CC protection plugin ready to use.&lt;/p&gt; &lt;p&gt;Supports connecting to Let's Encrypt for automatic issuance and renewal of free certificates, and can be deployed outside of K8s, started with a single Docker command, convenient for individual developers to use.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our Discord community! This is where you can connect with developers and other enthusiastic users of Higress.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/tSbww9VDaM"&gt;&lt;img src="https://img.shields.io/discord/1364956090566971515?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Thanks&lt;/h3&gt; 
&lt;p&gt;Higress would not be possible without the valuable open-source work of projects in the community. We would like to extend a special thank you to Envoy and Istio.&lt;/p&gt; 
&lt;h3&gt;Related Repositories&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Higress Console: &lt;a href="https://github.com/higress-group/higress-console"&gt;https://github.com/higress-group/higress-console&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Higress Standalone: &lt;a href="https://github.com/higress-group/higress-standalone"&gt;https://github.com/higress-group/higress-standalone&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;a href="https://github.com/alibaba/higress/graphs/contributors"&gt; &lt;img alt="contributors" src="https://contrib.rocks/image?repo=alibaba/higress" /&gt; &lt;/a&gt; 
&lt;h3&gt;Star History&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#alibaba/higress&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=alibaba/higress&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="right" style="font-size: 14px; color: #555; margin-top: 20px;"&gt; &lt;a href="https://raw.githubusercontent.com/alibaba/higress/main/#readme-top" style="text-decoration: none; color: #007bff; font-weight: bold;"&gt; ↑ Back to Top ↑ &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>opentofu/opentofu</title>
      <link>https://github.com/opentofu/opentofu</link>
      <description>&lt;p&gt;OpenTofu lets you declaratively manage your cloud infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTofu&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://opentofu.org/"&gt;HomePage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opentofu.org/docs/intro/install"&gt;How to install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opentofu.org/slack"&gt;Join our Slack community!&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/opentofu/brand-artifacts/main/full/transparent/SVG/on-dark.svg#gh-dark-mode-only" alt="" /&gt; &lt;img src="https://raw.githubusercontent.com/opentofu/brand-artifacts/main/full/transparent/SVG/on-light.svg#gh-light-mode-only" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.bestpractices.dev/projects/10508"&gt;&lt;img src="https://www.bestpractices.dev/projects/10508/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;OpenTofu is an OSS tool for building, changing, and versioning infrastructure safely and efficiently. OpenTofu can manage existing and popular service providers as well as custom in-house solutions.&lt;/p&gt; 
&lt;p&gt;The key features of OpenTofu are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Infrastructure as Code&lt;/strong&gt;: Infrastructure is described using a high-level configuration syntax. This allows a blueprint of your datacenter to be versioned and treated as you would any other code. Additionally, infrastructure can be shared and re-used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Execution Plans&lt;/strong&gt;: OpenTofu has a "planning" step where it generates an execution plan. The execution plan shows what OpenTofu will do when you call apply. This lets you avoid any surprises when OpenTofu manipulates infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Graph&lt;/strong&gt;: OpenTofu builds a graph of all your resources, and parallelizes the creation and modification of any non-dependent resources. Because of this, OpenTofu builds infrastructure as efficiently as possible, and operators get insight into dependencies in their infrastructure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Change Automation&lt;/strong&gt;: Complex changesets can be applied to your infrastructure with minimal human interaction. With the previously mentioned execution plan and resource graph, you know exactly what OpenTofu will change and in what order, avoiding many possible human errors.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting help and contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Have a question? 
  &lt;ul&gt; 
   &lt;li&gt;Post it in &lt;a href="https://github.com/orgs/opentofu/discussions"&gt;GitHub Discussions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Open a &lt;a href="https://github.com/opentofu/opentofu/issues/new/choose"&gt;GitHub issue&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Join the &lt;a href="https://opentofu.org/slack/"&gt;OpenTofu Slack&lt;/a&gt;!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Want to contribute? 
  &lt;ul&gt; 
   &lt;li&gt;Please read the &lt;a href="https://raw.githubusercontent.com/opentofu/opentofu/main/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Recurring Events 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://meet.google.com/xfm-cgms-has"&gt;Community Meetings&lt;/a&gt; on Wednesdays at 12:30 UTC at this link: &lt;a href="https://meet.google.com/xfm-cgms-has"&gt;https://meet.google.com/xfm-cgms-has&lt;/a&gt; (&lt;a href="https://calendar.google.com/calendar/event?eid=NDg0aWl2Y3U1aHFva3N0bGhyMHBhNzdpZmsgY18zZjJkZDNjMWZlMGVmNGU5M2VmM2ZjNDU2Y2EyZGQyMTlhMmU4ZmQ4NWY2YjQwNzUwYWYxNmMzZGYzNzBiZjkzQGc"&gt;📅 calendar link&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://meet.google.com/cry-houa-qbk"&gt;Technical Steering Committee Meetings&lt;/a&gt; every other Tuesday at 4pm UTC at this link: &lt;a href="https://meet.google.com/cry-houa-qbk"&gt;https://meet.google.com/cry-houa-qbk&lt;/a&gt; (&lt;a href="https://calendar.google.com/calendar/u/0/event?eid=M3JyMWtuYWptdXI0Zms4ZnJpNmppcDczb3RfMjAyNTA1MjdUMTYwMDAwWiBjXzNmMmRkM2MxZmUwZWY0ZTkzZWYzZmM0NTZjYTJkZDIxOWEyZThmZDg1ZjZiNDA3NTBhZjE2YzNkZjM3MGJmOTNAZw"&gt;📅 calendar link&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] For more OpenTofu events, subscribe to the &lt;a href="https://calendar.google.com/calendar/embed?src=c_3f2dd3c1fe0ef4e93ef3fc456ca2dd219a2e8fd85f6b40750af16c3df370bf93%40group.calendar.google.com"&gt;OpenTofu Events Calendar&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Reporting security vulnerabilities&lt;/h2&gt; 
&lt;p&gt;If you've found a vulnerability or a potential vulnerability in OpenTofu please follow &lt;a href="https://github.com/opentofu/opentofu/security/policy"&gt;Security Policy&lt;/a&gt;. We'll send a confirmation email to acknowledge your report, and we'll send an additional email when we've identified the issue positively or negatively.&lt;/p&gt; 
&lt;h2&gt;Reporting possible copyright issues&lt;/h2&gt; 
&lt;p&gt;If you believe you have found any possible copyright or intellectual property issues, please contact &lt;a href="mailto:liaison@opentofu.org"&gt;liaison@opentofu.org&lt;/a&gt;. We'll send a confirmation email to acknowledge your report.&lt;/p&gt; 
&lt;h2&gt;Registry Access&lt;/h2&gt; 
&lt;p&gt;In an effort to comply with applicable sanctions, we block access from specific countries of origin.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/opentofu/opentofu/raw/main/LICENSE"&gt;Mozilla Public License v2.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>prometheus/prometheus</title>
      <link>https://github.com/prometheus/prometheus</link>
      <description>&lt;p&gt;The Prometheus monitoring system and time series database.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center" style="border-bottom: none"&gt; &lt;a href="https://prometheus.io" target="_blank"&gt;&lt;img alt="Prometheus" src="https://raw.githubusercontent.com/prometheus/prometheus/main/documentation/images/prometheus-logo.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;br /&gt;Prometheus &lt;/h1&gt; 
&lt;p align="center"&gt;Visit &lt;a href="https://prometheus.io" target="_blank"&gt;prometheus.io&lt;/a&gt; for the full documentation, examples and guides.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/prometheus/prometheus/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/prometheus/prometheus/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://quay.io/repository/prometheus/prometheus"&gt;&lt;img src="https://quay.io/repository/prometheus/prometheus/status" alt="Docker Repository on Quay" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/prom/prometheus/"&gt;&lt;img src="https://img.shields.io/docker/pulls/prom/prometheus.svg?maxAge=604800" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/prometheus/prometheus"&gt;&lt;img src="https://goreportcard.com/badge/github.com/prometheus/prometheus" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/486"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/486/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/prometheus/prometheus"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/prometheus/prometheus/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://clomonitor.io/projects/cncf/prometheus"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/prometheus/badge" alt="CLOMonitor" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/prometheus/prometheus"&gt;&lt;img src="https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod" alt="Gitpod ready-to-code" /&gt;&lt;/a&gt; &lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:prometheus"&gt;&lt;img src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/prometheus.svg?sanitize=true" alt="Fuzzing Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Prometheus, a &lt;a href="https://cncf.io/"&gt;Cloud Native Computing Foundation&lt;/a&gt; project, is a systems and service monitoring system. It collects metrics from configured targets at given intervals, evaluates rule expressions, displays the results, and can trigger alerts when specified conditions are observed.&lt;/p&gt; 
&lt;p&gt;The features that distinguish Prometheus from other metrics and monitoring systems are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;strong&gt;multi-dimensional&lt;/strong&gt; data model (time series defined by metric name and set of key/value dimensions)&lt;/li&gt; 
 &lt;li&gt;PromQL, a &lt;strong&gt;powerful and flexible query language&lt;/strong&gt; to leverage this dimensionality&lt;/li&gt; 
 &lt;li&gt;No dependency on distributed storage; &lt;strong&gt;single server nodes are autonomous&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;An HTTP &lt;strong&gt;pull model&lt;/strong&gt; for time series collection&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Pushing time series&lt;/strong&gt; is supported via an intermediary gateway for batch jobs&lt;/li&gt; 
 &lt;li&gt;Targets are discovered via &lt;strong&gt;service discovery&lt;/strong&gt; or &lt;strong&gt;static configuration&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple modes of &lt;strong&gt;graphing and dashboarding support&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Support for hierarchical and horizontal &lt;strong&gt;federation&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture overview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/prometheus/prometheus/main/documentation/images/architecture.svg?sanitize=true" alt="Architecture overview" /&gt;&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;There are various ways of installing Prometheus.&lt;/p&gt; 
&lt;h3&gt;Precompiled binaries&lt;/h3&gt; 
&lt;p&gt;Precompiled binaries for released versions are available in the &lt;a href="https://prometheus.io/download/"&gt;&lt;em&gt;download&lt;/em&gt; section&lt;/a&gt; on &lt;a href="https://prometheus.io"&gt;prometheus.io&lt;/a&gt;. Using the latest production release binary is the recommended way of installing Prometheus. See the &lt;a href="https://prometheus.io/docs/introduction/install/"&gt;Installing&lt;/a&gt; chapter in the documentation for all the details.&lt;/p&gt; 
&lt;h3&gt;Docker images&lt;/h3&gt; 
&lt;p&gt;Docker images are available on &lt;a href="https://quay.io/repository/prometheus/prometheus"&gt;Quay.io&lt;/a&gt; or &lt;a href="https://hub.docker.com/r/prom/prometheus/"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can launch a Prometheus container for trying it out with&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --name prometheus -d -p 127.0.0.1:9090:9090 prom/prometheus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Prometheus will now be reachable at &lt;a href="http://localhost:9090/"&gt;http://localhost:9090/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Building from source&lt;/h3&gt; 
&lt;p&gt;To build Prometheus from source code, You need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go: Version specified in &lt;a href="https://raw.githubusercontent.com/prometheus/prometheus/main/go.mod"&gt;go.mod&lt;/a&gt; or greater.&lt;/li&gt; 
 &lt;li&gt;NodeJS: Version specified in &lt;a href="https://raw.githubusercontent.com/prometheus/prometheus/main/web/ui/.nvmrc"&gt;.nvmrc&lt;/a&gt; or greater.&lt;/li&gt; 
 &lt;li&gt;npm: Version 8 or greater (check with &lt;code&gt;npm --version&lt;/code&gt; and &lt;a href="https://www.npmjs.com/"&gt;here&lt;/a&gt;).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Start by cloning the repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/prometheus/prometheus.git
cd prometheus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use the &lt;code&gt;go&lt;/code&gt; tool to build and install the &lt;code&gt;prometheus&lt;/code&gt; and &lt;code&gt;promtool&lt;/code&gt; binaries into your &lt;code&gt;GOPATH&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;GO111MODULE=on go install github.com/prometheus/prometheus/cmd/...
prometheus --config.file=your_config.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;However&lt;/em&gt;, when using &lt;code&gt;go install&lt;/code&gt; to build Prometheus, Prometheus will expect to be able to read its web assets from local filesystem directories under &lt;code&gt;web/ui/static&lt;/code&gt; and &lt;code&gt;web/ui/templates&lt;/code&gt;. In order for these assets to be found, you will have to run Prometheus from the root of the cloned repository. Note also that these directories do not include the React UI unless it has been built explicitly using &lt;code&gt;make assets&lt;/code&gt; or &lt;code&gt;make build&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;An example of the above configuration file can be found &lt;a href="https://github.com/prometheus/prometheus/raw/main/documentation/examples/prometheus.yml"&gt;here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can also build using &lt;code&gt;make build&lt;/code&gt;, which will compile in the web assets so that Prometheus can be run from anywhere:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make build
./prometheus --config.file=your_config.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The Makefile provides several targets:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;em&gt;build&lt;/em&gt;: build the &lt;code&gt;prometheus&lt;/code&gt; and &lt;code&gt;promtool&lt;/code&gt; binaries (includes building and compiling in web assets)&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;test&lt;/em&gt;: run the tests&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;test-short&lt;/em&gt;: run the short tests&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;format&lt;/em&gt;: format the source code&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;vet&lt;/em&gt;: check the source code for common errors&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;assets&lt;/em&gt;: build the React UI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Service discovery plugins&lt;/h3&gt; 
&lt;p&gt;Prometheus is bundled with many service discovery plugins. When building Prometheus from source, you can edit the &lt;a href="https://raw.githubusercontent.com/prometheus/prometheus/main/plugins.yml"&gt;plugins.yml&lt;/a&gt; file to disable some service discoveries. The file is a yaml-formatted list of go import path that will be built into the Prometheus binary.&lt;/p&gt; 
&lt;p&gt;After you have changed the file, you need to run &lt;code&gt;make build&lt;/code&gt; again.&lt;/p&gt; 
&lt;p&gt;If you are using another method to compile Prometheus, &lt;code&gt;make plugins&lt;/code&gt; will generate the plugins file accordingly.&lt;/p&gt; 
&lt;p&gt;If you add out-of-tree plugins, which we do not endorse at the moment, additional steps might be needed to adjust the &lt;code&gt;go.mod&lt;/code&gt; and &lt;code&gt;go.sum&lt;/code&gt; files. As always, be extra careful when loading third party code.&lt;/p&gt; 
&lt;h3&gt;Building the Docker image&lt;/h3&gt; 
&lt;p&gt;You can build a docker image locally with the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make promu
promu crossbuild -p linux/amd64
make npm_licenses
make common-docker-amd64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;make docker&lt;/code&gt; target is intended only for use in our CI system and will not produce a fully working image when run locally.&lt;/p&gt; 
&lt;h2&gt;Using Prometheus as a Go Library&lt;/h2&gt; 
&lt;h3&gt;Remote Write&lt;/h3&gt; 
&lt;p&gt;We are publishing our Remote Write protobuf independently at &lt;a href="https://buf.build/prometheus/prometheus/assets"&gt;buf.build&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can use that as a library:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go get buf.build/gen/go/prometheus/prometheus/protocolbuffers/go@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is experimental.&lt;/p&gt; 
&lt;h3&gt;Prometheus code base&lt;/h3&gt; 
&lt;p&gt;In order to comply with &lt;a href="https://go.dev/ref/mod#versions"&gt;go mod&lt;/a&gt; rules, Prometheus release number do not exactly match Go module releases.&lt;/p&gt; 
&lt;p&gt;For the Prometheus v3.y.z releases, we are publishing equivalent v0.3y.z tags. The y in v0.3y.z is always padded to two digits, with a leading zero if needed.&lt;/p&gt; 
&lt;p&gt;Therefore, a user that would want to use Prometheus v3.0.0 as a library could do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go get github.com/prometheus/prometheus@v0.300.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the Prometheus v2.y.z releases, we published the equivalent v0.y.z tags.&lt;/p&gt; 
&lt;p&gt;Therefore, a user that would want to use Prometheus v2.35.0 as a library could do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go get github.com/prometheus/prometheus@v0.35.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This solution makes it clear that we might break our internal Go APIs between minor user-facing releases, as &lt;a href="https://semver.org/#spec-item-4"&gt;breaking changes are allowed in major version zero&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;React UI Development&lt;/h2&gt; 
&lt;p&gt;For more information on building, running, and developing on the React-based UI, see the React app's &lt;a href="https://raw.githubusercontent.com/prometheus/prometheus/main/web/ui/README.md"&gt;README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;More information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Godoc documentation is available via &lt;a href="https://pkg.go.dev/github.com/prometheus/prometheus"&gt;pkg.go.dev&lt;/a&gt;. Due to peculiarities of Go Modules, v3.y.z will be displayed as v0.3y.z (the y in v0.3y.z is always padded to two digits, with a leading zero if needed), while v2.y.z will be displayed as v0.y.z.&lt;/li&gt; 
 &lt;li&gt;See the &lt;a href="https://prometheus.io/community"&gt;Community page&lt;/a&gt; for how to reach the Prometheus developers and users on various communication channels.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Refer to &lt;a href="https://github.com/prometheus/prometheus/raw/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache License 2.0, see &lt;a href="https://github.com/prometheus/prometheus/raw/main/LICENSE"&gt;LICENSE&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>moby/moby</title>
      <link>https://github.com/moby/moby</link>
      <description>&lt;p&gt;The Moby Project - a collaborative project for the container ecosystem to assemble container-based systems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Moby Project&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/moby/moby/v2"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/moby/moby/v2" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/moby/moby" alt="GitHub License" /&gt; &lt;a href="https://goreportcard.com/report/github.com/moby/moby/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/moby/moby/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/moby/moby"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/moby/moby/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/10989"&gt;&lt;img src="https://www.bestpractices.dev/projects/10989/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/moby/moby/master/docs/static_files/moby-project-logo.png" alt="Moby Project logo" title="The Moby Project" /&gt;&lt;/p&gt; 
&lt;p&gt;Moby is an open-source project created by Docker to enable and accelerate software containerization.&lt;/p&gt; 
&lt;p&gt;It provides a "Lego set" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas. Components include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;p&gt;Moby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience. It is open to the community to help set its direction.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modular: the project includes lots of components that have well-defined functions and APIs that work together.&lt;/li&gt; 
 &lt;li&gt;Batteries included but swappable: Moby includes enough components to build fully featured container systems, but its modular architecture ensures that most of the components can be swapped by different implementations.&lt;/li&gt; 
 &lt;li&gt;Usable security: Moby provides secure defaults without compromising usability.&lt;/li&gt; 
 &lt;li&gt;Developer focused: The APIs are intended to be functional and useful to build powerful tools. They are not necessarily intended as end user tools but as components aimed at developers. Documentation and UX is aimed at developers not end users.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Audience&lt;/h2&gt; 
&lt;p&gt;The Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers. It is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.&lt;/p&gt; 
&lt;h2&gt;Relationship with Docker&lt;/h2&gt; 
&lt;p&gt;The components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project. New projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product. However, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.&lt;/p&gt; 
&lt;p&gt;The Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful. The releases are supported by the maintainers, community and users, on a best efforts basis only. For customers who want enterprise or commercial support, &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker Desktop&lt;/a&gt; and &lt;a href="https://www.mirantis.com/software/mirantis-container-runtime/"&gt;Mirantis Container Runtime&lt;/a&gt; are the appropriate products for these use cases.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Legal&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Brought to you courtesy of our legal counsel. For more context, please see the &lt;a href="https://github.com/moby/moby/raw/master/NOTICE"&gt;NOTICE&lt;/a&gt; document in this repo.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Use and transfer of Moby may be subject to certain restrictions by the United States and other governments.&lt;/p&gt; 
&lt;p&gt;It is your responsibility to ensure that your use and/or transfer does not violate applicable laws.&lt;/p&gt; 
&lt;p&gt;For more information, please see &lt;a href="https://www.bis.doc.gov"&gt;https://www.bis.doc.gov&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Licensing&lt;/h1&gt; 
&lt;p&gt;Moby is licensed under the Apache License, Version 2.0. See &lt;a href="https://github.com/moby/moby/raw/master/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>rancher/rancher</title>
      <link>https://github.com/rancher/rancher</link>
      <description>&lt;p&gt;Complete container management platform&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rancher&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://store.docker.com/community/images/rancher/rancher"&gt;&lt;img src="https://img.shields.io/docker/pulls/rancher/rancher.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/rancher/rancher"&gt;&lt;img src="https://goreportcard.com/badge/github.com/rancher/rancher" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Rancher is an open source container management platform built for organizations that deploy containers in production. Rancher makes it easy to run Kubernetes everywhere, meet IT requirements, and empower DevOps teams.&lt;/p&gt; 
&lt;h2&gt;Stable Release&lt;/h2&gt; 
&lt;!-- stable v2.12.1 DO NOT REMOVE THIS LINE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;v2.12 
  &lt;ul&gt; 
   &lt;li&gt;Stable - v2.12.1 - &lt;code&gt;rancher/rancher:v2.12.1&lt;/code&gt; / &lt;code&gt;rancher/rancher:stable&lt;/code&gt; - Read the full release &lt;a href="https://github.com/rancher/rancher/releases/tag/v2.12.1"&gt;notes&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;v2.10 
  &lt;ul&gt; 
   &lt;li&gt;Stable - v2.10.3 - &lt;code&gt;rancher/rancher:v2.10.3&lt;/code&gt; - Read the full release &lt;a href="https://github.com/rancher/rancher/releases/tag/v2.10.3"&gt;notes&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;v2.9 
  &lt;ul&gt; 
   &lt;li&gt;Stable - v2.9.3 - &lt;code&gt;rancher/rancher:v2.9.3&lt;/code&gt; - Read the full release &lt;a href="https://github.com/rancher/rancher/releases/tag/v2.9.3"&gt;notes&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To get automated notifications of our latest release, you can watch the announcements category in our &lt;a href="http://forums.rancher.com/c/announcements"&gt;forums&lt;/a&gt;, or subscribe to the RSS feed &lt;code&gt;https://forums.rancher.com/c/announcements.rss&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;sudo docker run -d --restart=unless-stopped -p 80:80 -p 443:443 --privileged rancher/rancher
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open your browser to &lt;a href="https://localhost"&gt;https://localhost&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://ranchermanager.docs.rancher.com/v2.8/pages-for-subheaders/installation-and-upgrade"&gt;Installing/Upgrading Rancher&lt;/a&gt; for all installation options.&lt;/p&gt; 
&lt;h3&gt;Minimum Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Operating Systems 
  &lt;ul&gt; 
   &lt;li&gt;Please see &lt;a href="https://rancher.com/support-matrix/"&gt;Support Matrix&lt;/a&gt; for specific OS versions for each Rancher version. Note that the link will default to the support matrix for the latest version of Rancher. Use the left navigation menu to select a different Rancher version.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Hardware &amp;amp; Software 
  &lt;ul&gt; 
   &lt;li&gt;Please see &lt;a href="https://ranchermanager.docs.rancher.com/v2.8/pages-for-subheaders/installation-requirements"&gt;Installation Requirements&lt;/a&gt; for hardware and software requirements.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using Rancher&lt;/h3&gt; 
&lt;p&gt;To learn more about using Rancher, please refer to our &lt;a href="https://ranchermanager.docs.rancher.com/v2.8"&gt;Rancher Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Source Code&lt;/h2&gt; 
&lt;p&gt;This repo is a meta-repo used for packaging and contains the majority of Rancher codebase. For other Rancher projects and modules, &lt;a href="https://github.com/rancher/rancher/raw/release/v2.8/go.mod"&gt;see go.mod&lt;/a&gt; for the full list.&lt;/p&gt; 
&lt;p&gt;Rancher also includes other open source libraries and projects, &lt;a href="https://github.com/rancher/rancher/raw/release/v2.8/go.mod"&gt;see go.mod&lt;/a&gt; for the full list.&lt;/p&gt; 
&lt;h2&gt;Build configuration&lt;/h2&gt; 
&lt;p&gt;Refer to the &lt;a href="https://raw.githubusercontent.com/rancher/rancher/main/docs/build.md"&gt;build docs&lt;/a&gt; on how to customize the building and packaging of Rancher.&lt;/p&gt; 
&lt;h2&gt;Support, Discussion, and Community&lt;/h2&gt; 
&lt;p&gt;If you need any help with Rancher, please join us at either our &lt;a href="http://forums.rancher.com/"&gt;Rancher forums&lt;/a&gt; or &lt;a href="https://slack.rancher.io/"&gt;Slack&lt;/a&gt; where most of our team hangs out at.&lt;/p&gt; 
&lt;p&gt;Please submit any Rancher bugs, issues, and feature requests to &lt;a href="https://github.com/rancher/rancher/issues"&gt;rancher/rancher&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For security issues, please first check our &lt;a href="https://github.com/rancher/rancher/security"&gt;security policy&lt;/a&gt; and email &lt;a href="mailto:security-rancher@suse.com"&gt;security-rancher@suse.com&lt;/a&gt; instead of posting a public issue in GitHub. You may (but are not required to) use the GPG key located on &lt;a href="https://keybase.io/rancher"&gt;Keybase&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;License&lt;/h1&gt; 
&lt;p&gt;Copyright (c) 2014-2025 &lt;a href="http://rancher.com"&gt;SUSE&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>uber-go/mock</title>
      <link>https://github.com/uber-go/mock</link>
      <description>&lt;p&gt;GoMock is a mocking framework for the Go programming language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gomock&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/uber-go/mock/actions"&gt;&lt;img src="https://github.com/uber-go/mock/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/go.uber.org/mock"&gt;&lt;img src="https://pkg.go.dev/badge/go.uber.org/mock.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;gomock is a mocking framework for the &lt;a href="http://go.dev/"&gt;Go programming language&lt;/a&gt;. It integrates well with Go's built-in &lt;code&gt;testing&lt;/code&gt; package, but can be used in other contexts too.&lt;/p&gt; 
&lt;p&gt;This project originates from Google's &lt;code&gt;golang/mock&lt;/code&gt; repo. Unfortunately, Google no longer maintains this project, and given the heavy usage of gomock project within Uber, we've decided to fork and maintain this going forward at Uber.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/uber-go/mock/main/CONTRIBUTING.md"&gt;Contributions&lt;/a&gt; are welcome in the form of GitHub issue or PR!&lt;/p&gt; 
&lt;h2&gt;Supported Go Versions&lt;/h2&gt; 
&lt;p&gt;go.uber.org/mock supports all Go versions supported by the official &lt;a href="https://go.dev/doc/devel/release#policy"&gt;Go Release Policy&lt;/a&gt;. That is, the two most recent releases of Go.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install the &lt;code&gt;mockgen&lt;/code&gt; tool.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install go.uber.org/mock/mockgen@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To ensure it was installed correctly, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mockgen -version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If that fails, make sure your GOPATH/bin is in your PATH. You can add it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export PATH=$PATH:$(go env GOPATH)/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running mockgen&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;mockgen&lt;/code&gt; has three modes of operation: archive, source and package.&lt;/p&gt; 
&lt;h3&gt;Archive mode&lt;/h3&gt; 
&lt;p&gt;Archive mode generates mock interfaces from a package archive file (.a). It is enabled by using the -archive flag. An import path and a comma-separated list of symbols should be provided as a non-flag argument to the command.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build the package to a archive.
go build -o pkg.a database/sql/driver

mockgen -archive=pkg.a database/sql/driver Conn,Driver
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Source mode&lt;/h3&gt; 
&lt;p&gt;Source mode generates mock interfaces from a source file. It is enabled by using the -source flag. Other flags that may be useful in this mode are -imports and -aux_files.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mockgen -source=foo.go [other options]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Package mode&lt;/h3&gt; 
&lt;p&gt;Package mode works by specifying the package and interface names. It is enabled by passing two non-flag arguments: an import path, and a comma-separated list of symbols.&lt;/p&gt; 
&lt;p&gt;You can use "." to refer to the current path's package.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mockgen database/sql/driver Conn,Driver

# Convenient for `go:generate`.
mockgen . Conn,Driver
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flags&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;mockgen&lt;/code&gt; command is used to generate source code for a mock class given a Go source file containing interfaces to be mocked. It supports the following flags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-archive&lt;/code&gt;: A package archive file containing interfaces to be mocked.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-source&lt;/code&gt;: A file containing interfaces to be mocked.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-destination&lt;/code&gt;: A file to which to write the resulting source code. If you don't set this, the code is printed to standard output.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-package&lt;/code&gt;: The package to use for the resulting mock class source code. If you don't set this, the package name is &lt;code&gt;mock_&lt;/code&gt; concatenated with the package of the input file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-imports&lt;/code&gt;: A list of explicit imports that should be used in the resulting source code, specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz&lt;/code&gt;, where &lt;code&gt;bar/baz&lt;/code&gt; is the package being imported and &lt;code&gt;foo&lt;/code&gt; is the identifier to use for the package in the generated source code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-aux_files&lt;/code&gt;: A list of additional files that should be consulted to resolve e.g. embedded interfaces defined in a different file. This is specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz.go&lt;/code&gt;, where &lt;code&gt;bar/baz.go&lt;/code&gt; is the source file and &lt;code&gt;foo&lt;/code&gt; is the package name of that file used by the -source file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-build_flags&lt;/code&gt;: (package mode only) Flags passed verbatim to &lt;code&gt;go list&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-mock_names&lt;/code&gt;: A list of custom names for generated mocks. This is specified as a comma-separated list of elements of the form &lt;code&gt;Repository=MockSensorRepository,Endpoint=MockSensorEndpoint&lt;/code&gt;, where &lt;code&gt;Repository&lt;/code&gt; is the interface name and &lt;code&gt;MockSensorRepository&lt;/code&gt; is the desired mock name (mock factory method and mock recorder will be named after the mock). If one of the interfaces has no custom name specified, then default naming convention will be used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-self_package&lt;/code&gt;: The full package import path for the generated code. The purpose of this flag is to prevent import cycles in the generated code by trying to include its own package. This can happen if the mock's package is set to one of its inputs (usually the main one) and the output is stdio so mockgen cannot detect the final output package. Setting this flag will then tell mockgen which import to exclude.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-copyright_file&lt;/code&gt;: Copyright file used to add copyright header to the resulting source code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-debug_parser&lt;/code&gt;: Print out parser results only.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_package_comment&lt;/code&gt;: Writes package documentation comment (godoc) if true. (default true)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_generate_directive&lt;/code&gt;: Add //go:generate directive to regenerate the mock. (default false)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_source_comment&lt;/code&gt;: Writes original file (source mode) or interface names (package mode) comment if true. (default true)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-typed&lt;/code&gt;: Generate Type-safe 'Return', 'Do', 'DoAndReturn' function. (default false)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-exclude_interfaces&lt;/code&gt;: Comma-separated names of interfaces to be excluded&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For an example of the use of &lt;code&gt;mockgen&lt;/code&gt;, see the &lt;code&gt;sample/&lt;/code&gt; directory. In simple cases, you will need only the &lt;code&gt;-source&lt;/code&gt; flag.&lt;/p&gt; 
&lt;h2&gt;Building Mocks&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type Foo interface {
  Bar(x int) int
}

func SUT(f Foo) {
 // ...
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func TestFoo(t *testing.T) {
  ctrl := gomock.NewController(t)

  m := NewMockFoo(ctrl)

  // Asserts that the first and only call to Bar() is passed 99.
  // Anything else will fail.
  m.
    EXPECT().
    Bar(gomock.Eq(99)).
    Return(101)

  SUT(m)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building Stubs&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type Foo interface {
  Bar(x int) int
}

func SUT(f Foo) {
 // ...
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func TestFoo(t *testing.T) {
  ctrl := gomock.NewController(t)

  m := NewMockFoo(ctrl)

  // Does not make any assertions. Executes the anonymous functions and returns
  // its result when Bar is invoked with 99.
  m.
    EXPECT().
    Bar(gomock.Eq(99)).
    DoAndReturn(func(_ int) int {
      time.Sleep(1*time.Second)
      return 101
    }).
    AnyTimes()

  // Does not make any assertions. Returns 103 when Bar is invoked with 101.
  m.
    EXPECT().
    Bar(gomock.Eq(101)).
    Return(103).
    AnyTimes()

  SUT(m)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Modifying Failure Messages&lt;/h2&gt; 
&lt;p&gt;When a matcher reports a failure, it prints the received (&lt;code&gt;Got&lt;/code&gt;) vs the expected (&lt;code&gt;Want&lt;/code&gt;) value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;Got: [3]
Want: is equal to 2
Expected call at user_test.go:33 doesn't match the argument at index 1.
Got: [0 1 1 2 3]
Want: is equal to 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Modifying &lt;code&gt;Want&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;Want&lt;/code&gt; value comes from the matcher's &lt;code&gt;String()&lt;/code&gt; method. If the matcher's default output doesn't meet your needs, then it can be modified as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;gomock.WantFormatter(
  gomock.StringerFunc(func() string { return "is equal to fifteen" }),
  gomock.Eq(15),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This modifies the &lt;code&gt;gomock.Eq(15)&lt;/code&gt; matcher's output for &lt;code&gt;Want:&lt;/code&gt; from &lt;code&gt;is equal to 15&lt;/code&gt; to &lt;code&gt;is equal to fifteen&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Modifying &lt;code&gt;Got&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;Got&lt;/code&gt; value comes from the object's &lt;code&gt;String()&lt;/code&gt; method if it is available. In some cases the output of an object is difficult to read (e.g., &lt;code&gt;[]byte&lt;/code&gt;) and it would be helpful for the test to print it differently. The following modifies how the &lt;code&gt;Got&lt;/code&gt; value is formatted:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;gomock.GotFormatterAdapter(
  gomock.GotFormatterFunc(func(i any) string {
    // Leading 0s
    return fmt.Sprintf("%02d", i)
  }),
  gomock.Eq(15),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the received value is &lt;code&gt;3&lt;/code&gt;, then it will be printed as &lt;code&gt;03&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jesseduffield/lazydocker</title>
      <link>https://github.com/jesseduffield/lazydocker</link>
      <description>&lt;p&gt;The lazier way to manage everything docker&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=lazydocker_20231023"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/assets/warp2.png" width="400" alt="Warp" /&gt; 
  &lt;/div&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;b&gt;Available for MacOS and Linux&lt;/b&gt; &lt;br /&gt; 
  &lt;div&gt; 
   &lt;sup&gt;Visit&amp;nbsp;warp.dev&amp;nbsp;to learn more.&lt;/sup&gt; 
  &lt;/div&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://tuple.app/lazydocker"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/assets/tuple.png" width="400" alt="Tuple" /&gt; 
  &lt;/div&gt; &lt;b&gt;Tuple, the premier screen sharing app for developers on macOS and Windows.&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.subble.com"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/assets/subble.webp" width="400" alt="Subble" /&gt; 
  &lt;/div&gt; &lt;b&gt;I (Jesse) co-founded Subble to save your company time and money by finding unused and over-provisioned SaaS licences. Check it out!&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/8456633/59972109-8e9c8480-95cc-11e9-8350-38f7f86ba76d.png" /&gt; &lt;/p&gt; 
&lt;p&gt;A simple terminal UI for both docker and docker-compose, written in Go with the &lt;a href="https://github.com/jroimartin/gocui" title="gocui"&gt;gocui&lt;/a&gt; library.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/jesseduffield/lazygit/workflows/Continuous%20Integration/badge.svg?sanitize=true" alt="CI" /&gt; &lt;a href="https://goreportcard.com/report/github.com/jesseduffield/lazydocker"&gt;&lt;img src="https://goreportcard.com/badge/github.com/jesseduffield/lazydocker" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://golangci.com"&gt;&lt;img src="https://golangci.com/badges/github.com/jesseduffield/lazydocker.svg?sanitize=true" alt="GolangCI" /&gt;&lt;/a&gt; &lt;a href="http://godoc.org/github.com/jesseduffield/lazydocker"&gt;&lt;img src="https://godoc.org/github.com/jesseduffield/lazydocker?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/repo-size/jesseduffield/lazydocker" alt="GitHub repo size" /&gt; &lt;a href="https://github.com/jesseduffield/lazydocker/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/jesseduffield/lazydocker/total" alt="GitHub Releases" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jesseduffield/lazydocker/releases/latest"&gt;&lt;img src="https://img.shields.io/github/tag/jesseduffield/lazydocker.svg?sanitize=true" alt="GitHub tag" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Homebrew/homebrew-core/raw/master/Formula/lazydocker.rb"&gt;&lt;img src="https://img.shields.io/homebrew/v/lazydocker" alt="homebrew" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/resources/demo3.gif" alt="Gif" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/NICqQPxwJWw"&gt;Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt; Maintenance of this project is made possible by all the &lt;a href="https://github.com/jesseduffield/lazydocker/graphs/contributors"&gt;contributors&lt;/a&gt; and &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsors&lt;/a&gt;. If you'd like to sponsor this project and have your avatar or company logo appear below &lt;a href="https://github.com/sponsors/jesseduffield"&gt;click here&lt;/a&gt;. 💙 &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors --&gt;&lt;a href="https://github.com/intabulas"&gt;&lt;img src="https://github.com/intabulas.png" width="60px" alt="Mark Lussier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/peppy"&gt;&lt;img src="https://github.com/peppy.png" width="60px" alt="Dean Herbert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/piot"&gt;&lt;img src="https://github.com/piot.png" width="60px" alt="Peter Bjorklund" /&gt;&lt;/a&gt;&lt;a href="https://github.com/rgwood"&gt;&lt;img src="https://github.com/rgwood.png" width="60px" alt="Reilly Wood" /&gt;&lt;/a&gt;&lt;a href="https://github.com/oliverguenther"&gt;&lt;img src="https://github.com/oliverguenther.png" width="60px" alt="Oliver Günther" /&gt;&lt;/a&gt;&lt;a href="https://github.com/pawanjay176"&gt;&lt;img src="https://github.com/pawanjay176.png" width="60px" alt="Pawan Dhananjay" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bdach"&gt;&lt;img src="https://github.com/bdach.png" width="60px" alt="Bartłomiej Dach" /&gt;&lt;/a&gt;&lt;a href="https://github.com/davidklsn"&gt;&lt;img src="https://github.com/davidklsn.png" width="60px" alt="David Karlsson" /&gt;&lt;/a&gt;&lt;a href="https://github.com/carstengehling"&gt;&lt;img src="https://github.com/carstengehling.png" width="60px" alt="Carsten Gehling" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ceuk"&gt;&lt;img src="https://github.com/ceuk.png" width="60px" alt="CEUK" /&gt;&lt;/a&gt;&lt;a href="https://github.com/akospwc"&gt;&lt;img src="https://github.com/akospwc.png" width="60px" alt="Akos Putz" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Xetera"&gt;&lt;img src="https://github.com/Xetera.png" width="60px" alt="Xetera" /&gt;&lt;/a&gt;&lt;a href="https://github.com/HoldenLucas"&gt;&lt;img src="https://github.com/HoldenLucas.png" width="60px" alt="Holden Lucas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nartc"&gt;&lt;img src="https://github.com/nartc.png" width="60px" alt="Chau Tran" /&gt;&lt;/a&gt;&lt;a href="https://github.com/matejcik"&gt;&lt;img src="https://github.com/matejcik.png" width="60px" alt="matejcik" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lucatume"&gt;&lt;img src="https://github.com/lucatume.png" width="60px" alt="theAverageDev (Luca Tumedei)" /&gt;&lt;/a&gt;&lt;a href="https://github.com/IvanZuy"&gt;&lt;img src="https://github.com/IvanZuy.png" width="60px" alt="Ivan Zaitsev" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nicholascloud"&gt;&lt;img src="https://github.com/nicholascloud.png" width="60px" alt="Nicholas Cloud" /&gt;&lt;/a&gt;&lt;a href="https://github.com/PhotonQuantum"&gt;&lt;img src="https://github.com/PhotonQuantum.png" width="60px" alt="LightQuantum" /&gt;&lt;/a&gt;&lt;a href="https://github.com/GitSquared"&gt;&lt;img src="https://github.com/GitSquared.png" width="60px" alt="Gabriel Saillard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ava1ar"&gt;&lt;img src="https://github.com/ava1ar.png" width="60px" alt="Aliaksandr Stelmachonak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/minidfx"&gt;&lt;img src="https://github.com/minidfx.png" width="60px" alt="Burgy Benjamin" /&gt;&lt;/a&gt;&lt;a href="https://github.com/JoeKlemmer"&gt;&lt;img src="https://github.com/JoeKlemmer.png" width="60px" alt="Joe Klemmer" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tobi"&gt;&lt;img src="https://github.com/tobi.png" width="60px" alt="Tobias Lütke" /&gt;&lt;/a&gt;&lt;a href="https://github.com/benbfortis"&gt;&lt;img src="https://github.com/benbfortis.png" width="60px" alt="Ben Beaumont" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jakewarren"&gt;&lt;img src="https://github.com/jakewarren.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tgpholly"&gt;&lt;img src="https://github.com/tgpholly.png" width="60px" alt="Holly" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jisantuc"&gt;&lt;img src="https://github.com/jisantuc.png" width="60px" alt="James Santucci" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bitprophet"&gt;&lt;img src="https://github.com/bitprophet.png" width="60px" alt="Jeff Forcier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tayleighr"&gt;&lt;img src="https://github.com/tayleighr.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Novakov"&gt;&lt;img src="https://github.com/Novakov.png" width="60px" alt="Maciej T. Nowak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/farzadmf"&gt;&lt;img src="https://github.com/farzadmf.png" width="60px" alt="Farzad Majidfayyaz" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nekhaevskiy"&gt;&lt;img src="https://github.com/nekhaevskiy.png" width="60px" alt="Yury" /&gt;&lt;/a&gt;&lt;a href="https://github.com/reivilibre"&gt;&lt;img src="https://github.com/reivilibre.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/andreaskurth"&gt;&lt;img src="https://github.com/andreaskurth.png" width="60px" alt="Andreas Kurth" /&gt;&lt;/a&gt;&lt;a href="https://github.com/BSteffaniak"&gt;&lt;img src="https://github.com/BSteffaniak.png" width="60px" alt="Braden Steffaniak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jordan-gillard"&gt;&lt;img src="https://github.com/jordan-gillard.png" width="60px" alt="Jordan Gillard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/smangels"&gt;&lt;img src="https://github.com/smangels.png" width="60px" alt="Sebastian" /&gt;&lt;/a&gt;&lt;a href="https://github.com/George-Spanos"&gt;&lt;img src="https://github.com/George-Spanos.png" width="60px" alt="George Spanos" /&gt;&lt;/a&gt;&lt;a href="https://github.com/frantisekstanko"&gt;&lt;img src="https://github.com/frantisekstanko.png" width="60px" alt="Frantisek Stanko" /&gt;&lt;/a&gt;&lt;a href="https://github.com/amslezak"&gt;&lt;img src="https://github.com/amslezak.png" width="60px" alt="Andy Slezak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mkock"&gt;&lt;img src="https://github.com/mkock.png" width="60px" alt="Martin Kock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/illarionvk"&gt;&lt;img src="https://github.com/illarionvk.png" width="60px" alt="Illarion Koperski" /&gt;&lt;/a&gt;&lt;a href="https://github.com/WhiteBlackGoose"&gt;&lt;img src="https://github.com/WhiteBlackGoose.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jessealama"&gt;&lt;img src="https://github.com/jessealama.png" width="60px" alt="Jesse Alama" /&gt;&lt;/a&gt;&lt;a href="https://github.com/codacy"&gt;&lt;img src="https://github.com/codacy.png" width="60px" alt="Codacy" /&gt;&lt;/a&gt;&lt;a href="https://github.com/colbr"&gt;&lt;img src="https://github.com/colbr.png" width="60px" alt="Brett" /&gt;&lt;/a&gt;&lt;a href="https://github.com/heijmans"&gt;&lt;img src="https://github.com/heijmans.png" width="60px" alt="Jan Heijmans" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Vesther"&gt;&lt;img src="https://github.com/Vesther.png" width="60px" alt="Kevin Nowald" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sempruijs"&gt;&lt;img src="https://github.com/sempruijs.png" width="60px" alt="sem pruijs" /&gt;&lt;/a&gt;&lt;a href="https://github.com/omarluq"&gt;&lt;img src="https://github.com/omarluq.png" width="60px" alt="Omar Luq " /&gt;&lt;/a&gt;&lt;a href="https://github.com/ethanjli"&gt;&lt;img src="https://github.com/ethanjli.png" width="60px" alt="Ethan Li" /&gt;&lt;/a&gt;&lt;a href="https://github.com/phubaba"&gt;&lt;img src="https://github.com/phubaba.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/fomrat"&gt;&lt;img src="https://github.com/fomrat.png" width="60px" alt="Brian MacAskill" /&gt;&lt;/a&gt;&lt;a href="https://github.com/canhazcodez"&gt;&lt;img src="https://github.com/canhazcodez.png" width="60px" alt="Maxi" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nikbrunner"&gt;&lt;img src="https://github.com/nikbrunner.png" width="60px" alt="nbr" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neunkasulle"&gt;&lt;img src="https://github.com/neunkasulle.png" width="60px" alt="Jan Zenkner" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ahkohd"&gt;&lt;img src="https://github.com/ahkohd.png" width="60px" alt="Victor Aremu" /&gt;&lt;/a&gt;&lt;a href="https://github.com/RVxLab"&gt;&lt;img src="https://github.com/RVxLab.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/igor-ramazanov"&gt;&lt;img src="https://github.com/igor-ramazanov.png" width="60px" alt="Igor Ramazanov" /&gt;&lt;/a&gt;&lt;a href="https://github.com/glotchimo"&gt;&lt;img src="https://github.com/glotchimo.png" width="60px" alt="Elliott Maguire" /&gt;&lt;/a&gt;&lt;a href="https://github.com/n8nio"&gt;&lt;img src="https://github.com/n8nio.png" width="60px" alt="n8n - Workflow Automation" /&gt;&lt;/a&gt;&lt;a href="https://github.com/kaleballmon"&gt;&lt;img src="https://github.com/kaleballmon.png" width="60px" alt="kaleb allmon" /&gt;&lt;/a&gt;&lt;a href="https://github.com/joshuadavidthomas"&gt;&lt;img src="https://github.com/joshuadavidthomas.png" width="60px" alt="Josh Thomas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/josephjacks"&gt;&lt;img src="https://github.com/josephjacks.png" width="60px" alt="JJ" /&gt;&lt;/a&gt;&lt;a href="https://github.com/FrederickGeek8"&gt;&lt;img src="https://github.com/FrederickGeek8.png" width="60px" alt="Frederick Morlock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/agrippanux"&gt;&lt;img src="https://github.com/agrippanux.png" width="60px" alt="Darren Craine" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ezdac"&gt;&lt;img src="https://github.com/ezdac.png" width="60px" alt="Maximilian Langenfeld" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sarzhann"&gt;&lt;img src="https://github.com/sarzhann.png" width="60px" alt="Nurzhan" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dbuls"&gt;&lt;img src="https://github.com/dbuls.png" width="60px" alt="Davis Buls" /&gt;&lt;/a&gt;&lt;a href="https://github.com/MGreek"&gt;&lt;img src="https://github.com/MGreek.png" width="60px" alt="Grec Marc" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sainu"&gt;&lt;img src="https://github.com/sainu.png" width="60px" alt="sainu" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mguellsegarra"&gt;&lt;img src="https://github.com/mguellsegarra.png" width="60px" alt="Marc Güell Segarra" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lppassos"&gt;&lt;img src="https://github.com/lppassos.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/chrisolsen"&gt;&lt;img src="https://github.com/chrisolsen.png" width="60px" alt="Chris Olsen" /&gt;&lt;/a&gt;&lt;a href="https://github.com/vladimir-popov"&gt;&lt;img src="https://github.com/vladimir-popov.png" width="60px" alt="Vladimir Popov" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neilcode"&gt;&lt;img src="https://github.com/neilcode.png" width="60px" alt="Neil Lambert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/shaungarwood"&gt;&lt;img src="https://github.com/shaungarwood.png" width="60px" alt="Shaun Garwood" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dhh"&gt;&lt;img src="https://github.com/dhh.png" width="60px" alt="David Heinemeier Hansson" /&gt;&lt;/a&gt;&lt;a href="https://github.com/wayanjimmy"&gt;&lt;img src="https://github.com/wayanjimmy.png" width="60px" alt="Wayan jimmy" /&gt;&lt;/a&gt;
 &lt;!-- sponsors --&gt; &lt;/p&gt; 
&lt;h2&gt;Elevator Pitch&lt;/h2&gt; 
&lt;p&gt;Minor rant incoming: Something's not working? Maybe a service is down. &lt;code&gt;docker-compose ps&lt;/code&gt;. Yep, it's that microservice that's still buggy. No issue, I'll just restart it: &lt;code&gt;docker-compose restart&lt;/code&gt;. Okay now let's try again. Oh wait the issue is still there. Hmm. &lt;code&gt;docker-compose ps&lt;/code&gt;. Right so the service must have just stopped immediately after starting. I probably would have known that if I was reading the log stream, but there is a lot of clutter in there from other services. I could get the logs for just that one service with &lt;code&gt;docker compose logs --follow myservice&lt;/code&gt; but that dies everytime the service dies so I'd need to run that command every time I restart the service. I could alternatively run &lt;code&gt;docker-compose up myservice&lt;/code&gt; and in that terminal window if the service is down I could just &lt;code&gt;up&lt;/code&gt; it again, but now I've got one service hogging a terminal window even after I no longer care about its logs. I guess when I want to reclaim the terminal realestate I can do &lt;code&gt;ctrl+P,Q&lt;/code&gt;, but... wait, that's not working for some reason. Should I use ctrl+C instead? I can't remember if that closes the foreground process or kills the actual service.&lt;/p&gt; 
&lt;p&gt;What a headache!&lt;/p&gt; 
&lt;p&gt;Memorising docker commands is hard. Memorising aliases is slightly less hard. Keeping track of your containers across multiple terminal windows is near impossible. What if you had all the information you needed in one terminal window with every common command living one keypress away (and the ability to add custom commands as well). Lazydocker's goal is to make that dream a reality.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/keybindings"&gt;Keybindings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#cool-features"&gt;Cool Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/NICqQPxwJWw"&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/Config.md"&gt;Config Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.twitch.tv/jesseduffield"&gt;Twitch Stream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker &amp;gt;= &lt;strong&gt;1.13&lt;/strong&gt; (API &amp;gt;= &lt;strong&gt;1.25&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;Docker-Compose &amp;gt;= &lt;strong&gt;1.23.2&lt;/strong&gt; (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;Normally &lt;code&gt;lazydocker&lt;/code&gt; formula can be found in the Homebrew core but we suggest you to tap our formula to get frequently updated one. It works with Linux, too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tap&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install jesseduffield/lazydocker/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Core&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazydocker&lt;/code&gt; using &lt;a href="https://scoop.sh/"&gt;scoop&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;scoop install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazydocker&lt;/code&gt; using &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;choco install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;asdf-vm&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://github.com/comdotlinux/asdf-lazydocker"&gt;asdf-lazydocker plugin&lt;/a&gt; using &lt;a href="https://asdf-vm.com/"&gt;asdf-vm&lt;/a&gt;:&lt;/p&gt; 
&lt;h4&gt;Setup (Once)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;asdf plugin add lazydocker https://github.com/comdotlinux/asdf-lazydocker.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;For Install / Upgrade&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;asdf list all lazydocker
asdf install lazydocker latest
asdf global lazydocker latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary Release (Linux/OSX/Windows)&lt;/h3&gt; 
&lt;p&gt;You can manually download a binary release from &lt;a href="https://github.com/jesseduffield/lazydocker/releases"&gt;the release page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Automated install/update, don't forget to always verify what you're piping into bash:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script installs downloaded binary to &lt;code&gt;$HOME/.local/bin&lt;/code&gt; directory by default, but it can be changed by setting &lt;code&gt;DIR&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;p&gt;Required Go Version &amp;gt;= &lt;strong&gt;1.19&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/jesseduffield/lazydocker@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Required Go version &amp;gt;= &lt;strong&gt;1.8&lt;/strong&gt;, &amp;lt;= &lt;strong&gt;1.17&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go get github.com/jesseduffield/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch Linux AUR&lt;/h3&gt; 
&lt;p&gt;You can install lazydocker using the &lt;a href="https://aur.archlinux.org/packages/lazydocker"&gt;AUR&lt;/a&gt; by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;yay -S lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/pulls/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/stars/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Stars" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/cloud/automated/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Automated" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; 
  &lt;details&gt;
   &lt;summary&gt;Click if you have an ARM device&lt;/summary&gt;
   &lt;p&gt; &lt;/p&gt;
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 32 bit v6 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm32v6/golang \
--build-arg GOARCH=arm \
--build-arg GOARM=6 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 32 bit v7 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm32v7/golang \
--build-arg GOARCH=arm \
--build-arg GOARM=7 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 64 bit v8 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm64v8/golang \
--build-arg GOARCH=arm64 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p&gt;&lt;/p&gt;
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the container&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm -it -v \
/var/run/docker.sock:/var/run/docker.sock \
-v /yourpath:/.config/jesseduffield/lazydocker \
lazyteam/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Don't forget to change &lt;code&gt;/yourpath&lt;/code&gt; to an actual path you created to store lazydocker's config&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use this &lt;a href="https://github.com/jesseduffield/lazydocker/raw/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You might want to create an alias, for example:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;echo "alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /yourpath/config:/.config/jesseduffield/lazydocker lazyteam/lazydocker'" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For development, you can build the image using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/jesseduffield/lazydocker.git
cd lazydocker
docker build -t lazyteam/lazydocker \
    --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
    --build-arg VCS_REF=`git rev-parse --short HEAD` \
    --build-arg VERSION=`git describe --abbrev=0 --tag` \
    .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter a compatibility issue with Docker bundled binary, try rebuilding the image with the build argument &lt;code&gt;--build-arg DOCKER_VERSION="v$(docker -v | cut -d" " -f3 | rev | cut -c 2- | rev)"&lt;/code&gt; so that the bundled docker binary matches your host docker binary version.&lt;/p&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;You'll need to &lt;a href="https://golang.org/doc/install"&gt;install Go&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazydocker.git
cd lazydocker
go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Call &lt;code&gt;lazydocker&lt;/code&gt; in your terminal. I personally use this a lot so I've made an alias for it like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo "alias lzd='lazydocker'" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(you can substitute .zshrc for whatever rc file you're using)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Basic video tutorial &lt;a href="https://youtu.be/NICqQPxwJWw"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;List of keybindings &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/keybindings"&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cool features&lt;/h2&gt; 
&lt;p&gt;everything is one keypress away (or one click away! Mouse support FTW):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;viewing the state of your docker or docker-compose container environment at a glance&lt;/li&gt; 
 &lt;li&gt;viewing logs for a container/service&lt;/li&gt; 
 &lt;li&gt;viewing ascii graphs of your containers' metrics so that you can not only feel but also look like a developer&lt;/li&gt; 
 &lt;li&gt;customising those graphs to measure nearly any metric you want&lt;/li&gt; 
 &lt;li&gt;attaching to a container/service&lt;/li&gt; 
 &lt;li&gt;restarting/removing/rebuilding containers/services&lt;/li&gt; 
 &lt;li&gt;viewing the ancestor layers of a given image&lt;/li&gt; 
 &lt;li&gt;pruning containers, images, or volumes that are hogging up disk space&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There is still a lot of work to go! Please check out the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the discord channel&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/ehwFt2t4wt"&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/resources/discord.png" width="75" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you would like to support the development of lazydocker, consider &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; 
&lt;h2&gt;Social&lt;/h2&gt; 
&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href="https://twitter.com/DuffieldJesse"&gt;twitter&lt;/a&gt; or watch me program on &lt;a href="https://www.twitch.tv/jesseduffield"&gt;twitch&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How do I edit my config?&lt;/h3&gt; 
&lt;p&gt;By opening lazydocker, clicking on the 'project' panel in the top left, and pressing 'o' (or 'e' if your editor is vim). See &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/Config.md"&gt;Config Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;How do I get text to wrap in my main panel?&lt;/h3&gt; 
&lt;p&gt;In the future I want to make this the default, but for now there are some CPU issues that arise with wrapping. If you want to enable wrapping, use &lt;code&gt;gui.wrapMainPanel: true&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;How do you select text?&lt;/h3&gt; 
&lt;p&gt;Because we support mouse events, you will need to hold option while dragging the mouse to indicate you're trying to select text rather than click on something. Alternatively you can disable mouse events via the &lt;code&gt;gui.ignoreMouseEvents&lt;/code&gt; config value.&lt;/p&gt; 
&lt;p&gt;Mac Users: See &lt;a href="https://github.com/jesseduffield/lazydocker/issues/190"&gt;Issue #190&lt;/a&gt; for other options.&lt;/p&gt; 
&lt;h3&gt;Why can't I see my container's logs?&lt;/h3&gt; 
&lt;p&gt;By default we only show logs from the last hour, so that we're not putting too much strain on the machine. This may be why you can't see logs when you first start lazydocker. This can be overwritten in the config's &lt;code&gt;commandTemplates&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you are running lazydocker in Docker container, it is a know bug, that you can't see logs or CPU usage.&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skanehira/docui"&gt;docui&lt;/a&gt; - Skanehira beat me to the punch on making a docker terminal UI, so definitely check out that repo as well! I think the two repos can live in harmony though: lazydocker is more about managing existing containers/services, and docui is more about creating and configuring them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/portainer/portainer"&gt;Portainer&lt;/a&gt; - Portainer tries to solve the same problem but it's accessed via your browser rather than your terminal. It also supports docker swarm.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://github.com/veggiemonk/awesome-docker/raw/master/README.md#terminal"&gt;Awesome Docker list&lt;/a&gt; for similar tools to work with Docker.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>