<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Tue, 29 Jul 2025 01:35:10 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>filebrowser/filebrowser</title>
      <link>https://github.com/filebrowser/filebrowser</link>
      <description>&lt;p&gt;📂 Web File Browser&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/filebrowser/logo/master/banner.png" width="550"&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/filebrowser/filebrowser/actions/workflows/main.yaml"&gt;&lt;img src="https://github.com/filebrowser/filebrowser/actions/workflows/main.yaml/badge.svg?sanitize=true" alt="Build"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/filebrowser/filebrowser"&gt;&lt;img src="https://goreportcard.com/badge/github.com/filebrowser/filebrowser" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="http://godoc.org/github.com/filebrowser/filebrowser"&gt;&lt;img src="https://img.shields.io/badge/godoc-reference-blue.svg?sanitize=true" alt="Documentation"&gt;&lt;/a&gt; &lt;a href="https://github.com/filebrowser/filebrowser/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/filebrowser/filebrowser.svg?sanitize=true" alt="Version"&gt;&lt;/a&gt; &lt;a href="http://webchat.freenode.net/?channels=%23filebrowser"&gt;&lt;img src="https://img.shields.io/badge/freenode-%23filebrowser-blue.svg?sanitize=true" alt="Chat IRC"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;File Browser provides a file managing interface within a specified directory and it can be used to upload, delete, preview and edit your files. It is a &lt;strong&gt;create-your-own-cloud&lt;/strong&gt;-kind of software where you can just install it on your server, direct it to a path and access your files through a nice web interface.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation on how to install, configure, and contribute to this project is hosted at &lt;a href="https://filebrowser.org"&gt;filebrowser.org&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;/p&gt; 
 &lt;p&gt;This project is currently on &lt;strong&gt;maintenance-only&lt;/strong&gt; mode, and is looking for new maintainers. For more information, please read the &lt;a href="https://github.com/filebrowser/filebrowser/discussions/4906"&gt;discussion #4906&lt;/a&gt;. Therefore, please note the following:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;It can take a while until someone gets back to you. Please be patient.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/filebrowser/filebrowser/issues"&gt;Issues&lt;/a&gt; are only being used to track bugs. Any unrelated issues will be converted into a &lt;a href="https://github.com/filebrowser/filebrowser/discussions"&gt;discussion&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;No new features will be implemented until further notice. The priority is on triaging issues and merge bug fixes.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;If you're interested in maintaining this project, please reach out via the discussion above.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are always welcome. To start contributing to this project, read our &lt;a href="https://raw.githubusercontent.com/filebrowser/filebrowser/master/CONTRIBUTING.md"&gt;guidelines&lt;/a&gt; first.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/filebrowser/filebrowser/master/LICENSE"&gt;Apache License 2.0&lt;/a&gt; © File Browser Contributors&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>lharries/whatsapp-mcp</title>
      <link>https://github.com/lharries/whatsapp-mcp</link>
      <description>&lt;p&gt;WhatsApp MCP server&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;WhatsApp MCP Server&lt;/h1&gt; 
&lt;p&gt;This is a Model Context Protocol (MCP) server for WhatsApp.&lt;/p&gt; 
&lt;p&gt;With this you can search and read your personal Whatsapp messages (including images, videos, documents, and audio messages), search your contacts and send messages to either individuals or groups. You can also send media files including images, videos, documents, and audio messages.&lt;/p&gt; 
&lt;p&gt;It connects to your &lt;strong&gt;personal WhatsApp account&lt;/strong&gt; directly via the Whatsapp web multidevice API (using the &lt;a href="https://github.com/tulir/whatsmeow"&gt;whatsmeow&lt;/a&gt; library). All your messages are stored locally in a SQLite database and only sent to an LLM (such as Claude) when the agent accesses them through tools (which you control).&lt;/p&gt; 
&lt;p&gt;Here's an example of what you can do when it's connected to Claude.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/lharries/whatsapp-mcp/main/example-use.png" alt="WhatsApp MCP"&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;To get updates on this and other projects I work on &lt;a href="https://docs.google.com/forms/d/1rTF9wMBTN0vPfzWuQa2BjfGKdKIpTbyeKxhPMcEzgyI/preview"&gt;enter your email here&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;em&gt;Caution:&lt;/em&gt; as with many MCP servers, the WhatsApp MCP is subject to &lt;a href="https://simonwillison.net/2025/Jun/16/the-lethal-trifecta/"&gt;the lethal trifecta&lt;/a&gt;. This means that project injection could lead to private data exfiltration.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go&lt;/li&gt; 
 &lt;li&gt;Python 3.6+&lt;/li&gt; 
 &lt;li&gt;Anthropic Claude Desktop app (or Cursor)&lt;/li&gt; 
 &lt;li&gt;UV (Python package manager), install with &lt;code&gt;curl -LsSf https://astral.sh/uv/install.sh | sh&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;FFmpeg (&lt;em&gt;optional&lt;/em&gt;) - Only needed for audio messages. If you want to send audio files as playable WhatsApp voice messages, they must be in &lt;code&gt;.ogg&lt;/code&gt; Opus format. With FFmpeg installed, the MCP server will automatically convert non-Opus audio files. Without FFmpeg, you can still send raw audio files using the &lt;code&gt;send_file&lt;/code&gt; tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Steps&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone this repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/lharries/whatsapp-mcp.git
cd whatsapp-mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the WhatsApp bridge&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Navigate to the whatsapp-bridge directory and run the Go application:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd whatsapp-bridge
go run main.go
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;The first time you run it, you will be prompted to scan a QR code. Scan the QR code with your WhatsApp mobile app to authenticate.&lt;/p&gt; &lt;p&gt;After approximately 20 days, you will might need to re-authenticate.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Connect to the MCP server&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Copy the below json with the appropriate {{PATH}} values:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "whatsapp": {
      "command": "{{PATH_TO_UV}}", // Run `which uv` and place the output here
      "args": [
        "--directory",
        "{{PATH_TO_SRC}}/whatsapp-mcp/whatsapp-mcp-server", // cd into the repo, run `pwd` and enter the output here + "/whatsapp-mcp-server"
        "run",
        "main.py"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For &lt;strong&gt;Claude&lt;/strong&gt;, save this as &lt;code&gt;claude_desktop_config.json&lt;/code&gt; in your Claude Desktop configuration directory at:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For &lt;strong&gt;Cursor&lt;/strong&gt;, save this as &lt;code&gt;mcp.json&lt;/code&gt; in your Cursor configuration directory at:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;~/.cursor/mcp.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Restart Claude Desktop / Cursor&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Open Claude Desktop and you should now see WhatsApp as an available integration.&lt;/p&gt; &lt;p&gt;Or restart Cursor.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Windows Compatibility&lt;/h3&gt; 
&lt;p&gt;If you're running this project on Windows, be aware that &lt;code&gt;go-sqlite3&lt;/code&gt; requires &lt;strong&gt;CGO to be enabled&lt;/strong&gt; in order to compile and work properly. By default, &lt;strong&gt;CGO is disabled on Windows&lt;/strong&gt;, so you need to explicitly enable it and have a C compiler installed.&lt;/p&gt; 
&lt;h4&gt;Steps to get it working:&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install a C compiler&lt;/strong&gt;&lt;br&gt; We recommend using &lt;a href="https://www.msys2.org/"&gt;MSYS2&lt;/a&gt; to install a C compiler for Windows. After installing MSYS2, make sure to add the &lt;code&gt;ucrt64\bin&lt;/code&gt; folder to your &lt;code&gt;PATH&lt;/code&gt;.&lt;br&gt; → A step-by-step guide is available &lt;a href="https://code.visualstudio.com/docs/cpp/config-mingw"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enable CGO and run the app&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd whatsapp-bridge
go env -w CGO_ENABLED=1
go run main.go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Without this setup, you'll likely run into errors like:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;Binary was compiled with 'CGO_ENABLED=0', go-sqlite3 requires cgo to work.&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Architecture Overview&lt;/h2&gt; 
&lt;p&gt;This application consists of two main components:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Go WhatsApp Bridge&lt;/strong&gt; (&lt;code&gt;whatsapp-bridge/&lt;/code&gt;): A Go application that connects to WhatsApp's web API, handles authentication via QR code, and stores message history in SQLite. It serves as the bridge between WhatsApp and the MCP server.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Python MCP Server&lt;/strong&gt; (&lt;code&gt;whatsapp-mcp-server/&lt;/code&gt;): A Python server implementing the Model Context Protocol (MCP), which provides standardized tools for Claude to interact with WhatsApp data and send/receive messages.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Data Storage&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;All message history is stored in a SQLite database within the &lt;code&gt;whatsapp-bridge/store/&lt;/code&gt; directory&lt;/li&gt; 
 &lt;li&gt;The database maintains tables for chats and messages&lt;/li&gt; 
 &lt;li&gt;Messages are indexed for efficient searching and retrieval&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Once connected, you can interact with your WhatsApp contacts through Claude, leveraging Claude's AI capabilities in your WhatsApp conversations.&lt;/p&gt; 
&lt;h3&gt;MCP Tools&lt;/h3&gt; 
&lt;p&gt;Claude can access the following tools to interact with WhatsApp:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;search_contacts&lt;/strong&gt;: Search for contacts by name or phone number&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;list_messages&lt;/strong&gt;: Retrieve messages with optional filters and context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;list_chats&lt;/strong&gt;: List available chats with metadata&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;get_chat&lt;/strong&gt;: Get information about a specific chat&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;get_direct_chat_by_contact&lt;/strong&gt;: Find a direct chat with a specific contact&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;get_contact_chats&lt;/strong&gt;: List all chats involving a specific contact&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;get_last_interaction&lt;/strong&gt;: Get the most recent message with a contact&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;get_message_context&lt;/strong&gt;: Retrieve context around a specific message&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;send_message&lt;/strong&gt;: Send a WhatsApp message to a specified phone number or group JID&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;send_file&lt;/strong&gt;: Send a file (image, video, raw audio, document) to a specified recipient&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;send_audio_message&lt;/strong&gt;: Send an audio file as a WhatsApp voice message (requires the file to be an .ogg opus file or ffmpeg must be installed)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;download_media&lt;/strong&gt;: Download media from a WhatsApp message and get the local file path&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Media Handling Features&lt;/h3&gt; 
&lt;p&gt;The MCP server supports both sending and receiving various media types:&lt;/p&gt; 
&lt;h4&gt;Media Sending&lt;/h4&gt; 
&lt;p&gt;You can send various media types to your WhatsApp contacts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Images, Videos, Documents&lt;/strong&gt;: Use the &lt;code&gt;send_file&lt;/code&gt; tool to share any supported media type.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Voice Messages&lt;/strong&gt;: Use the &lt;code&gt;send_audio_message&lt;/code&gt; tool to send audio files as playable WhatsApp voice messages. 
  &lt;ul&gt; 
   &lt;li&gt;For optimal compatibility, audio files should be in &lt;code&gt;.ogg&lt;/code&gt; Opus format.&lt;/li&gt; 
   &lt;li&gt;With FFmpeg installed, the system will automatically convert other audio formats (MP3, WAV, etc.) to the required format.&lt;/li&gt; 
   &lt;li&gt;Without FFmpeg, you can still send raw audio files using the &lt;code&gt;send_file&lt;/code&gt; tool, but they won't appear as playable voice messages.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Media Downloading&lt;/h4&gt; 
&lt;p&gt;By default, just the metadata of the media is stored in the local database. The message will indicate that media was sent. To access this media you need to use the download_media tool which takes the &lt;code&gt;message_id&lt;/code&gt; and &lt;code&gt;chat_jid&lt;/code&gt; (which are shown when printing messages containing the meda), this downloads the media and then returns the file path which can be then opened or passed to another tool.&lt;/p&gt; 
&lt;h2&gt;Technical Details&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Claude sends requests to the Python MCP server&lt;/li&gt; 
 &lt;li&gt;The MCP server queries the Go bridge for WhatsApp data or directly to the SQLite database&lt;/li&gt; 
 &lt;li&gt;The Go accesses the WhatsApp API and keeps the SQLite database up to date&lt;/li&gt; 
 &lt;li&gt;Data flows back through the chain to Claude&lt;/li&gt; 
 &lt;li&gt;When sending messages, the request flows from Claude through the MCP server to the Go bridge and to WhatsApp&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you encounter permission issues when running uv, you may need to add it to your PATH or use the full path to the executable.&lt;/li&gt; 
 &lt;li&gt;Make sure both the Go application and the Python server are running for the integration to work properly.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authentication Issues&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;QR Code Not Displaying&lt;/strong&gt;: If the QR code doesn't appear, try restarting the authentication script. If issues persist, check if your terminal supports displaying QR codes.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WhatsApp Already Logged In&lt;/strong&gt;: If your session is already active, the Go bridge will automatically reconnect without showing a QR code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Device Limit Reached&lt;/strong&gt;: WhatsApp limits the number of linked devices. If you reach this limit, you'll need to remove an existing device from WhatsApp on your phone (Settings &amp;gt; Linked Devices).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No Messages Loading&lt;/strong&gt;: After initial authentication, it can take several minutes for your message history to load, especially if you have many chats.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;WhatsApp Out of Sync&lt;/strong&gt;: If your WhatsApp messages get out of sync with the bridge, delete both database files (&lt;code&gt;whatsapp-bridge/store/messages.db&lt;/code&gt; and &lt;code&gt;whatsapp-bridge/store/whatsapp.db&lt;/code&gt;) and restart the bridge to re-authenticate.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For additional Claude Desktop integration troubleshooting, see the &lt;a href="https://modelcontextprotocol.io/quickstart/server#claude-for-desktop-integration-issues"&gt;MCP documentation&lt;/a&gt;. The documentation includes helpful tips for checking logs and resolving common issues.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubernetes/kops</title>
      <link>https://github.com/kubernetes/kops</link>
      <description>&lt;p&gt;Kubernetes Operations (kOps) - Production Grade k8s Installation, Upgrades and Management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kOps - Kubernetes Operations&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/kubernetes/kops/actions/workflows/main.yml"&gt;&lt;img src="https://github.com/kubernetes/kops/actions/workflows/main.yml/badge.svg?sanitize=true" alt="CI"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/v/release/kubernetes/kops" alt="GitHub release (latest SemVer)"&gt; &lt;a href="https://goreportcard.com/report/k8s.io/kops"&gt;&lt;img src="https://goreportcard.com/badge/k8s.io/kops" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/k8s.io/kops"&gt;&lt;img src="https://godoc.org/k8s.io/kops?status.svg?sanitize=true" alt="GoDoc Widget"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The easiest way to get a production grade Kubernetes cluster up and running.&lt;/p&gt; 
&lt;h2&gt;What is kOps?&lt;/h2&gt; 
&lt;p&gt;We like to think of it as &lt;code&gt;kubectl&lt;/code&gt; for clusters.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;kops&lt;/code&gt; will not only help you create, destroy, upgrade and maintain production-grade, highly available, Kubernetes cluster, but it will also provision the necessary cloud infrastructure.&lt;/p&gt; 
&lt;p&gt;AWS (Amazon Web Services) and GCP (Google Cloud Platform) are currently officially supported, with DigitalOcean, Hetzner and OpenStack in beta support, and Azure in alpha.&lt;/p&gt; 
&lt;h2&gt;Can I see it in action?&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://asciinema.org/a/97298"&gt; &lt;img src="https://asciinema.org/a/97298.png" width="885"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Installing and launching a Kubernetes cluster hosted on AWS, GCE, DigitalOcean, Hetzner, OpenStack, Azure&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://kops.sigs.k8s.io/getting_started/install/"&gt;Getting Started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation is in the &lt;code&gt;/docs&lt;/code&gt; directory, and can be seen at &lt;a href="https://kops.sigs.k8s.io/"&gt;kops.sigs.k8s.io&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Releases and kubernetes Release Compatibility&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://kops.sigs.k8s.io/welcome/releases/"&gt;Releases and versioning&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Involved and Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://kops.sigs.k8s.io/contributing/"&gt;Contributing&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Office Hours&lt;/h3&gt; 
&lt;p&gt;kOps maintainers set aside one hour every other week for &lt;strong&gt;public&lt;/strong&gt; office hours. This time is used to gather with community members interested in kOps. This session is open to both developers and users.&lt;/p&gt; 
&lt;p&gt;We do maintain an &lt;a href="https://docs.google.com/document/d/12QkyL0FkNbWPcLFxxRGSPt_tNPBHbmni3YLY-lHny7E/edit"&gt;agenda&lt;/a&gt; and stick to it as much as possible. If you want to hold the floor, put your item in this doc. Bullet/note form is fine. Even if your topic gets in late, we do our best to cover it.&lt;/p&gt; 
&lt;p&gt;For more information about the office hours and how to join, see &lt;a href="https://kops.sigs.k8s.io/welcome/office_hours/"&gt;Office Hours&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>YouROK/TorrServer</title>
      <link>https://github.com/YouROK/TorrServer</link>
      <description>&lt;p&gt;Torrent stream server&lt;/p&gt;&lt;hr&gt;&lt;p align="center" style="text-align: center"&gt; &lt;img src="https://github.com/YouROK/TorrServer/assets/144587546/53f7175a-cda4-4a06-86b6-2ac07582dcf1" width="33%"&gt;&lt;br&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Simple and powerful tool for streaming torrents. &lt;br&gt; &lt;br&gt; &lt;a href="https://github.com/YouROK/TorrServer/raw/master/LICENSE"&gt; &lt;img alt="GitHub" src="https://img.shields.io/github/license/YouROK/TorrServer"&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/YouROK/TorrServer"&gt; &lt;img src="https://goreportcard.com/badge/github.com/YouROK/TorrServer"&gt; &lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/YouROK/TorrServer"&gt; &lt;img src="https://pkg.go.dev/badge/github.com/YouROK/TorrServer.svg?sanitize=true" alt="Go Reference"&gt; &lt;/a&gt; &lt;a href="https://github.com/YouROK/TorrServer/issues"&gt; &lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" alt="CodeFactor"&gt; &lt;/a&gt; &lt;a href="https://github.com/YouROK/TorrServer/actions/workflows/github-actions-docker.yml" rel="nofollow"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/YouROK/TorrServer/github-actions-docker.yml?logo=Github" alt="Build"&gt; &lt;/a&gt; &lt;a href="https://github.com/YouROK/TorrServer/tags" rel="nofollow"&gt; &lt;img alt="GitHub tag (latest SemVer pre-release)" src="https://img.shields.io/github/v/tag/YouROK/TorrServer?include_prereleases&amp;amp;label=version"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;TorrServer is a program that allows users to view torrents online without the need for preliminary file downloading. The core functionality of TorrServer includes caching torrents and subsequent data transfer via the HTTP protocol, allowing the cache size to be adjusted according to the system parameters and the user's internet connection speed.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Caching&lt;/li&gt; 
 &lt;li&gt;Streaming&lt;/li&gt; 
 &lt;li&gt;Local and Remote Server&lt;/li&gt; 
 &lt;li&gt;Viewing torrents on various devices&lt;/li&gt; 
 &lt;li&gt;Integration with other apps through API&lt;/li&gt; 
 &lt;li&gt;Cross-browser modern web interface&lt;/li&gt; 
 &lt;li&gt;Optional DLNA server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;Download the application for the required platform in the &lt;a href="https://github.com/YouROK/TorrServer/releases"&gt;releases&lt;/a&gt; page. After installation, open the link &lt;a href="http://127.0.0.1:8090"&gt;http://127.0.0.1:8090&lt;/a&gt; in the browser.&lt;/p&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;p&gt;Run &lt;code&gt;TorrServer-windows-amd64.exe&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Linux&lt;/h4&gt; 
&lt;p&gt;Run in console&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -s https://raw.githubusercontent.com/YouROK/TorrServer/master/installTorrServerLinux.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;macOS&lt;/h4&gt; 
&lt;p&gt;Run in Terminal.app&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -s https://raw.githubusercontent.com/YouROK/TorrServer/master/installTorrServerMac.sh -o installTorrserverMac.sh &amp;amp;&amp;amp; chmod 755 installTorrServerMac.sh &amp;amp;&amp;amp; bash ./installTorrServerMac.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternative install script for Intel Macs: &lt;a href="https://github.com/dancheskus/TorrServerMacInstaller"&gt;https://github.com/dancheskus/TorrServerMacInstaller&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;IOCage Plugin (Unofficial)&lt;/h4&gt; 
&lt;p&gt;On FreeBSD (TrueNAS/FreeNAS) you can use this plugin: &lt;a href="https://github.com/filka96/iocage-plugin-TorrServer"&gt;https://github.com/filka96/iocage-plugin-TorrServer&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;NAS Systems (Unofficial)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Several releases are available through this link: &lt;a href="https://github.com/vladlenas"&gt;https://github.com/vladlenas&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Synology NAS&lt;/strong&gt; packages repo source: &lt;a href="https://grigi.lt"&gt;https://grigi.lt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Server args&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--port PORT&lt;/code&gt;, &lt;code&gt;-p PORT&lt;/code&gt; - web server port (default 8090)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ssl&lt;/code&gt; - enables https for web server&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--sslport PORT&lt;/code&gt; - web server https port (default 8091). If not set, will be taken from db (if stored previously) or the default will be used.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--sslcert PATH&lt;/code&gt; - path to ssl cert file. If not set, will be taken from db (if stored previously) or default self-signed certificate/key will be generated.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--sslkey PATH&lt;/code&gt; - path to ssl key file. If not set, will be taken from db (if stored previously) or default self-signed certificate/key will be generated.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--path PATH&lt;/code&gt;, &lt;code&gt;-d PATH&lt;/code&gt; - database and config dir path&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--logpath LOGPATH&lt;/code&gt;, &lt;code&gt;-l LOGPATH&lt;/code&gt; - server log file path&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--weblogpath WEBLOGPATH&lt;/code&gt;, &lt;code&gt;-w WEBLOGPATH&lt;/code&gt; - web access log file path&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--rdb&lt;/code&gt;, &lt;code&gt;-r&lt;/code&gt; - start in read-only DB mode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--httpauth&lt;/code&gt;, &lt;code&gt;-a&lt;/code&gt; - enable http auth on all requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--dontkill&lt;/code&gt;, &lt;code&gt;-k&lt;/code&gt; - don't kill server on signal&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--ui&lt;/code&gt;, &lt;code&gt;-u&lt;/code&gt; - open torrserver page in browser&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--torrentsdir TORRENTSDIR&lt;/code&gt;, &lt;code&gt;-t TORRENTSDIR&lt;/code&gt; - autoload torrents from dir&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--torrentaddr TORRENTADDR&lt;/code&gt; - Torrent client address (format [IP]:PORT, ex. :32000, 127.0.0.1:32768 etc)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--pubipv4 PUBIPV4&lt;/code&gt;, &lt;code&gt;-4 PUBIPV4&lt;/code&gt; - set public IPv4 addr&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--pubipv6 PUBIPV6&lt;/code&gt;, &lt;code&gt;-6 PUBIPV6&lt;/code&gt; - set public IPv6 addr&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--searchwa&lt;/code&gt;, &lt;code&gt;-s&lt;/code&gt; - allow search without authentication&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--help&lt;/code&gt;, &lt;code&gt;-h&lt;/code&gt; - display this help and exit&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--version&lt;/code&gt; - display version and exit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;TorrServer-darwin-arm64 [--port PORT] [--path PATH] [--logpath LOGPATH] [--weblogpath WEBLOGPATH] [--rdb] [--httpauth] [--dontkill] [--ui] [--torrentsdir TORRENTSDIR] [--torrentaddr TORRENTADDR] [--pubipv4 PUBIPV4] [--pubipv6 PUBIPV6] [--searchwa]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running in Docker &amp;amp; Docker Compose&lt;/h3&gt; 
&lt;p&gt;Run in console&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -d --name torrserver -p 8090:8090 ghcr.io/yourok/torrserver:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For running in persistence mode, just mount volume to container by adding &lt;code&gt;-v ~/ts:/opt/ts&lt;/code&gt;, where &lt;code&gt;~/ts&lt;/code&gt; folder path is just example, but you could use it anyway... Result example command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -d --name torrserver -v ~/ts:/opt/ts -p 8090:8090 ghcr.io/yourok/torrserver:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Environments&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;TS_HTTPAUTH&lt;/code&gt; - 1, and place auth file into &lt;code&gt;~/ts/config&lt;/code&gt; folder for enabling basic auth&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TS_RDB&lt;/code&gt; - if 1, then the enabling &lt;code&gt;--rdb&lt;/code&gt; flag&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TS_DONTKILL&lt;/code&gt; - if 1, then the enabling &lt;code&gt;--dontkill&lt;/code&gt; flag&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TS_PORT&lt;/code&gt; - for changind default port to &lt;strong&gt;5555&lt;/strong&gt; (example), also u need to change &lt;code&gt;-p 8090:8090&lt;/code&gt; to &lt;code&gt;-p 5555:5555&lt;/code&gt; (example)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TS_CONF_PATH&lt;/code&gt; - for overriding torrserver config path inside container. Example &lt;code&gt;/opt/tsss&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TS_TORR_DIR&lt;/code&gt; - for overriding torrents directory. Example &lt;code&gt;/opt/torr_files&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;TS_LOG_PATH&lt;/code&gt; - for overriding log path. Example &lt;code&gt;/opt/torrserver.log&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example with full overrided command (on default values):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -d -e TS_PORT=5665 -e TS_DONTKILL=1 -e TS_HTTPAUTH=1 -e TS_RDB=1 -e TS_CONF_PATH=/opt/ts/config -e TS_LOG_PATH=/opt/ts/log -e TS_TORR_DIR=/opt/ts/torrents --name torrserver -v ~/ts:/opt/ts -p 5665:5665 ghcr.io/yourok/torrserver:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Docker Compose&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;# docker-compose.yml

version: '3.3'
services:
    torrserver:
        image: ghcr.io/yourok/torrserver
        container_name: torrserver
        network_mode: host    # to allow DLNA feature
        environment:
            - TS_PORT=5665
            - TS_DONTKILL=1
            - TS_HTTPAUTH=0
            - TS_CONF_PATH=/opt/ts/config
            - TS_TORR_DIR=/opt/ts/torrents
        volumes:
            - './CACHE:/opt/ts/torrents'
            - './CONFIG:/opt/ts/config'
        ports:
            - '5665:5665'
        restart: unless-stopped
        

&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Smart TV (using Media Station X)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install &lt;strong&gt;Media Station X&lt;/strong&gt; on your Smart TV (see &lt;a href="https://msx.benzac.de/info/?tab=PlatformSupport"&gt;platform support&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open it and go to: &lt;strong&gt;Settings -&amp;gt; Start Parameter -&amp;gt; Setup&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter current ip and port of the TorrServe(r), e.g. &lt;code&gt;127.0.0.1:8090&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h4&gt;Go server&lt;/h4&gt; 
&lt;p&gt;To run the Go server locally, just run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd server
go run ./cmd
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Web development&lt;/h4&gt; 
&lt;p&gt;To run the web server locally, just run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More info at &lt;a href="https://github.com/YouROK/TorrServer/tree/master/web#readme"&gt;https://github.com/YouROK/TorrServer/tree/master/web#readme&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;h4&gt;Server&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;a href="https://golang.org/doc/install"&gt;Golang&lt;/a&gt; 1.20+&lt;/li&gt; 
 &lt;li&gt;Go to the TorrServer source directory&lt;/li&gt; 
 &lt;li&gt;Run build script under linux or macOS &lt;code&gt;build-all.sh&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Web&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install &lt;strong&gt;npm&lt;/strong&gt; and &lt;strong&gt;yarn&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Go to the web directory&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;NODE_OPTIONS=--openssl-legacy-provider yarn build&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Android&lt;/h4&gt; 
&lt;p&gt;To build an Android server you will need the Android Toolchain.&lt;/p&gt; 
&lt;h4&gt;Swagger&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;swag&lt;/code&gt; must be installed on the system to [re]build Swagger documentation.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go install github.com/swaggo/swag/cmd/swag@latest
cd server; swag init -g web/server.go

# Documentation can be linted using
swag fmt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;API&lt;/h2&gt; 
&lt;h3&gt;API Docs&lt;/h3&gt; 
&lt;p&gt;API documentation is hosted as Swagger format available at path &lt;code&gt;/swagger/index.html&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Authentication&lt;/h2&gt; 
&lt;p&gt;The users data file should be located near to the settings. Basic auth, read more in wiki &lt;a href="https://en.wikipedia.org/wiki/Basic_access_authentication"&gt;https://en.wikipedia.org/wiki/Basic_access_authentication&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;accs.db&lt;/code&gt; in JSON format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
    "User1": "Pass1",
    "User2": "Pass2"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note: You should enable authentication with -a (--httpauth) TorrServer startup option.&lt;/p&gt; 
&lt;h2&gt;Whitelist/Blacklist IP&lt;/h2&gt; 
&lt;p&gt;The lists file should be located in the same directory with config.db.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Whitelist file name: &lt;code&gt;wip.txt&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Blacklist file name: &lt;code&gt;bip.txt&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Whitelist has priority over everything else.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;local:127.0.0.0-127.0.0.255
127.0.0.0-127.0.0.255
local:127.0.0.1
127.0.0.1
# at the beginning of the line, comment
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://yoomoney.ru/to/410013733697114/200"&gt;YooMoney&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SberBank Card: &lt;strong&gt;5484 4000 2285 7839&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Thanks to everyone who tested and helped&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anacrolix"&gt;anacrolix&lt;/a&gt; Matt Joiner&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tsynik"&gt;tsynik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dancheskus"&gt;dancheskus&lt;/a&gt; for react web GUI and PWA code&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kolsys"&gt;kolsys&lt;/a&gt; for initial Media Station X support&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/damiva"&gt;damiva&lt;/a&gt; for Media Station X code updates&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vladlenas"&gt;vladlenas&lt;/a&gt; for NAS builds&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nemiroff"&gt;Nemiroff&lt;/a&gt; Tw1cker&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spawnlmg"&gt;spawnlmg&lt;/a&gt; SpAwN_LMG for testing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TopperBG"&gt;TopperBG&lt;/a&gt; Dimitar Maznekov for Bulgarian web translation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FaintGhost"&gt;FaintGhost&lt;/a&gt; Zhang Yaowei for Simplified Chinese web translation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Anton111111"&gt;Anton111111&lt;/a&gt; Anton Potekhin for sleep on Windows fixes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lieranderl"&gt;lieranderl&lt;/a&gt; Evgeni for adding SSL support code&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cocool97"&gt;cocool97&lt;/a&gt; for openapi API documentation and torrent categories&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shadeov"&gt;shadeov&lt;/a&gt; for README improvements&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/butaford"&gt;butaford&lt;/a&gt; Pavel for make docker file and scripts&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/filimonic"&gt;filimonic&lt;/a&gt; Alexey D. Filimonov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leporel"&gt;leporel&lt;/a&gt; Viacheslav Evseev&lt;/li&gt; 
 &lt;li&gt;and others&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>gohugoio/hugo</title>
      <link>https://github.com/gohugoio/hugo</link>
      <description>&lt;p&gt;The world’s fastest framework for building websites.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gohugo.io/"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/gohugoioTheme/master/static/images/hugo-logo-wide.svg?sanitize=true" alt="Hugo" width="565"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A fast and flexible static site generator built with love by &lt;a href="https://github.com/bep"&gt;bep&lt;/a&gt;, &lt;a href="https://github.com/spf13"&gt;spf13&lt;/a&gt;, and &lt;a href="https://github.com/gohugoio/hugo/graphs/contributors"&gt;friends&lt;/a&gt; in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://godoc.org/github.com/gohugoio/hugo"&gt;&lt;img src="https://godoc.org/github.com/gohugoio/hugo?status.svg?sanitize=true" alt="GoDoc"&gt;&lt;/a&gt; &lt;a href="https://github.com/gohugoio/hugo/actions?query=workflow%3ATest"&gt;&lt;img src="https://github.com/gohugoio/hugo/workflows/Test/badge.svg?sanitize=true" alt="Tests on Linux, MacOS and Windows"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gohugoio/hugo"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gohugoio/hugo" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gohugo.io"&gt;Website&lt;/a&gt; | &lt;a href="https://gohugo.io/installation"&gt;Installation&lt;/a&gt; | &lt;a href="https://gohugo.io/documentation"&gt;Documentation&lt;/a&gt; | &lt;a href="https://discourse.gohugo.io"&gt;Support&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a rel="me" href="https://fosstodon.org/@gohugoio"&gt;Mastodon&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Hugo is a &lt;a href="https://en.wikipedia.org/wiki/Static_site_generator"&gt;static site generator&lt;/a&gt; written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;, optimized for speed and designed for flexibility. With its advanced templating system and fast asset pipelines, Hugo renders a complete site in seconds, often less.&lt;/p&gt; 
&lt;p&gt;Due to its flexible framework, multilingual support, and powerful taxonomy system, Hugo is widely used to create:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Corporate, government, nonprofit, education, news, event, and project sites&lt;/li&gt; 
 &lt;li&gt;Documentation sites&lt;/li&gt; 
 &lt;li&gt;Image portfolios&lt;/li&gt; 
 &lt;li&gt;Landing pages&lt;/li&gt; 
 &lt;li&gt;Business, professional, and personal blogs&lt;/li&gt; 
 &lt;li&gt;Resumes and CVs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Use Hugo's embedded web server during development to instantly see changes to content, structure, behavior, and presentation. Then deploy the site to your host, or push changes to your Git provider for automated builds and deployment.&lt;/p&gt; 
&lt;p&gt;Hugo's fast asset pipelines include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Image processing – Convert, resize, crop, rotate, adjust colors, apply filters, overlay text and images, and extract EXIF data&lt;/li&gt; 
 &lt;li&gt;JavaScript bundling – Transpile TypeScript and JSX to JavaScript, bundle, tree shake, minify, create source maps, and perform SRI hashing.&lt;/li&gt; 
 &lt;li&gt;Sass processing – Transpile Sass to CSS, bundle, tree shake, minify, create source maps, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
 &lt;li&gt;Tailwind CSS processing – Compile Tailwind CSS utility classes into standard CSS, bundle, tree shake, optimize, minify, perform SRI hashing, and integrate with PostCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And with &lt;a href="https://gohugo.io/hugo-modules/"&gt;Hugo Modules&lt;/a&gt;, you can share content, assets, data, translations, themes, templates, and configuration with other projects via public or private Git repositories.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://gohugo.io/about/features/"&gt;features&lt;/a&gt; section of the documentation for a comprehensive summary of Hugo's capabilities.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p float="left"&gt; &lt;a href="https://www.linode.com/?utm_campaign=hugosponsor&amp;amp;utm_medium=banner&amp;amp;utm_source=hugogithub" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/linode-logo_standard_light_medium.png" width="200" alt="Linode"&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.jetbrains.com/go/?utm_source=OSS&amp;amp;utm_medium=referral&amp;amp;utm_campaign=hugo" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/goland.svg?sanitize=true" width="200" alt="The complete IDE crafted for professional Go developers."&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://pinme.eth.limo/?s=hugo" target="_blank"&gt;&lt;img src="https://raw.githubusercontent.com/gohugoio/hugoDocs/master/assets/images/sponsors/logo-pinme.svg?sanitize=true" width="200" alt="PinMe."&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Editions&lt;/h2&gt; 
&lt;p&gt;Hugo is available in three editions: standard, extended, and extended/deploy. While the standard edition provides core functionality, the extended and extended/deploy editions offer advanced features.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Feature&lt;/th&gt; 
   &lt;th align="center"&gt;extended edition&lt;/th&gt; 
   &lt;th align="center"&gt;extended/deploy edition&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Encode to the WebP format when &lt;a href="https://gohugo.io/content-management/image-processing/"&gt;processing images&lt;/a&gt;. You can decode WebP images with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://gohugo.io/functions/css/sass/"&gt;Transpile Sass to CSS&lt;/a&gt; using the embedded LibSass transpiler. You can use the &lt;a href="https://gohugo.io/functions/css/sass/#dart-sass"&gt;Dart Sass&lt;/a&gt; transpiler with any edition.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Deploy your site directly to a Google Cloud Storage bucket, an AWS S3 bucket, or an Azure Storage container. See&amp;nbsp;&lt;a href="https://gohugo.io/hosting-and-deployment/hugo-deploy/"&gt;details&lt;/a&gt;.&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Unless your specific deployment needs require the extended/deploy edition, we recommend the extended edition.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install Hugo from a &lt;a href="https://github.com/gohugoio/hugo/releases/latest"&gt;prebuilt binary&lt;/a&gt;, package manager, or package repository. Please see the installation instructions for your operating system:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/macos"&gt;macOS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/linux"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/windows"&gt;Windows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gohugo.io/installation/bsd"&gt;DragonFly BSD, FreeBSD, NetBSD, and OpenBSD&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from source&lt;/h2&gt; 
&lt;p&gt;Prerequisites to build Hugo from source:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Standard edition: Go 1.23.0 or later&lt;/li&gt; 
 &lt;li&gt;Extended edition: Go 1.23.0 or later, and GCC&lt;/li&gt; 
 &lt;li&gt;Extended/deploy edition: Go 1.23.0 or later, and GCC&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Build the standard edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;go install github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build the extended/deploy edition:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;CGO_ENABLED=1 go install -tags extended,withdeploy github.com/gohugoio/hugo@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#gohugoio/hugo&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=gohugoio/hugo&amp;amp;type=Timeline" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Hugo's &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt; includes installation instructions, a quick start guide, conceptual explanations, reference information, and examples.&lt;/p&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Please &lt;strong&gt;do not use the issue queue&lt;/strong&gt; for questions or troubleshooting. Unless you are certain that your issue is a software defect, use the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Hugo’s &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; is an active community of users and developers who answer questions, share knowledge, and provide examples. A quick search of over 20,000 topics will often answer your question. Please be sure to read about &lt;a href="https://discourse.gohugo.io/t/requesting-help/9132"&gt;requesting help&lt;/a&gt; before asking your first question.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;You can contribute to the Hugo project by:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Answering questions on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Improving the &lt;a href="https://gohugo.io/documentation"&gt;documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitoring the &lt;a href="https://github.com/gohugoio/hugo/issues"&gt;issue queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Creating or improving &lt;a href="https://themes.gohugo.io/"&gt;themes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Squashing &lt;a href="https://github.com/gohugoio/hugo/issues?q=is%3Aopen+is%3Aissue+label%3ABug"&gt;bugs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please submit documentation issues and pull requests to the &lt;a href="https://github.com/gohugoio/hugoDocs"&gt;documentation repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you have an idea for an enhancement or new feature, create a new topic on the &lt;a href="https://discourse.gohugo.io"&gt;forum&lt;/a&gt; in the "Feature" category. This will help you to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Determine if the capability already exists&lt;/li&gt; 
 &lt;li&gt;Measure interest&lt;/li&gt; 
 &lt;li&gt;Refine the concept&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If there is sufficient interest, &lt;a href="https://github.com/gohugoio/hugo/issues/new?labels=Proposal%2C+NeedsTriage&amp;amp;template=feature_request.md"&gt;create a proposal&lt;/a&gt;. Do not submit a pull request until the project lead accepts the proposal.&lt;/p&gt; 
&lt;p&gt;For a complete guide to contributing to Hugo, see the &lt;a href="https://raw.githubusercontent.com/gohugoio/hugo/master/CONTRIBUTING.md"&gt;Contribution Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;p&gt;Hugo stands on the shoulders of great open source libraries. Run &lt;code&gt;hugo env --logLevel info&lt;/code&gt; to display a list of dependencies.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;See current dependencies&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-text"&gt;github.com/BurntSushi/locker="v0.0.0-20171006230638-a6e239ea1c69"
github.com/PuerkitoBio/goquery="v1.10.1"
github.com/alecthomas/chroma/v2="v2.15.0"
github.com/andybalholm/cascadia="v1.3.3"
github.com/armon/go-radix="v1.0.1-0.20221118154546-54df44f2176c"
github.com/bep/clocks="v0.5.0"
github.com/bep/debounce="v1.2.0"
github.com/bep/gitmap="v1.6.0"
github.com/bep/goat="v0.5.0"
github.com/bep/godartsass/v2="v2.3.2"
github.com/bep/golibsass="v1.2.0"
github.com/bep/gowebp="v0.3.0"
github.com/bep/imagemeta="v0.8.4"
github.com/bep/lazycache="v0.7.0"
github.com/bep/logg="v0.4.0"
github.com/bep/mclib="v1.20400.20402"
github.com/bep/overlayfs="v0.9.2"
github.com/bep/simplecobra="v0.5.0"
github.com/bep/tmc="v0.5.1"
github.com/cespare/xxhash/v2="v2.3.0"
github.com/clbanning/mxj/v2="v2.7.0"
github.com/cpuguy83/go-md2man/v2="v2.0.4"
github.com/disintegration/gift="v1.2.1"
github.com/dlclark/regexp2="v1.11.5"
github.com/dop251/goja="v0.0.0-20250125213203-5ef83b82af17"
github.com/evanw/esbuild="v0.24.2"
github.com/fatih/color="v1.18.0"
github.com/frankban/quicktest="v1.14.6"
github.com/fsnotify/fsnotify="v1.8.0"
github.com/getkin/kin-openapi="v0.129.0"
github.com/ghodss/yaml="v1.0.0"
github.com/go-openapi/jsonpointer="v0.21.0"
github.com/go-openapi/swag="v0.23.0"
github.com/go-sourcemap/sourcemap="v2.1.4+incompatible"
github.com/gobuffalo/flect="v1.0.3"
github.com/gobwas/glob="v0.2.3"
github.com/gohugoio/go-i18n/v2="v2.1.3-0.20230805085216-e63c13218d0e"
github.com/gohugoio/hashstructure="v0.5.0"
github.com/gohugoio/httpcache="v0.7.0"
github.com/gohugoio/hugo-goldmark-extensions/extras="v0.2.0"
github.com/gohugoio/hugo-goldmark-extensions/passthrough="v0.3.0"
github.com/gohugoio/locales="v0.14.0"
github.com/gohugoio/localescompressed="v1.0.1"
github.com/golang/freetype="v0.0.0-20170609003504-e2365dfdc4a0"
github.com/google/go-cmp="v0.6.0"
github.com/google/pprof="v0.0.0-20250208200701-d0013a598941"
github.com/gorilla/websocket="v1.5.3"
github.com/hairyhenderson/go-codeowners="v0.7.0"
github.com/hashicorp/golang-lru/v2="v2.0.7"
github.com/jdkato/prose="v1.2.1"
github.com/josharian/intern="v1.0.0"
github.com/kr/pretty="v0.3.1"
github.com/kr/text="v0.2.0"
github.com/kyokomi/emoji/v2="v2.2.13"
github.com/lucasb-eyer/go-colorful="v1.2.0"
github.com/mailru/easyjson="v0.7.7"
github.com/makeworld-the-better-one/dither/v2="v2.4.0"
github.com/marekm4/color-extractor="v1.2.1"
github.com/mattn/go-colorable="v0.1.13"
github.com/mattn/go-isatty="v0.0.20"
github.com/mattn/go-runewidth="v0.0.9"
github.com/mazznoer/csscolorparser="v0.1.5"
github.com/mitchellh/mapstructure="v1.5.1-0.20231216201459-8508981c8b6c"
github.com/mohae/deepcopy="v0.0.0-20170929034955-c48cc78d4826"
github.com/muesli/smartcrop="v0.3.0"
github.com/niklasfasching/go-org="v1.7.0"
github.com/oasdiff/yaml3="v0.0.0-20241210130736-a94c01f36349"
github.com/oasdiff/yaml="v0.0.0-20241210131133-6b86fb107d80"
github.com/olekukonko/tablewriter="v0.0.5"
github.com/pbnjay/memory="v0.0.0-20210728143218-7b4eea64cf58"
github.com/pelletier/go-toml/v2="v2.2.3"
github.com/perimeterx/marshmallow="v1.1.5"
github.com/pkg/browser="v0.0.0-20240102092130-5ac0b6a4141c"
github.com/pkg/errors="v0.9.1"
github.com/rivo/uniseg="v0.4.7"
github.com/rogpeppe/go-internal="v1.13.1"
github.com/russross/blackfriday/v2="v2.1.0"
github.com/sass/libsass="3.6.6"
github.com/spf13/afero="v1.11.0"
github.com/spf13/cast="v1.7.1"
github.com/spf13/cobra="v1.8.1"
github.com/spf13/fsync="v0.10.1"
github.com/spf13/pflag="v1.0.6"
github.com/tdewolff/minify/v2="v2.20.37"
github.com/tdewolff/parse/v2="v2.7.15"
github.com/tetratelabs/wazero="v1.8.2"
github.com/webmproject/libwebp="v1.3.2"
github.com/yuin/goldmark-emoji="v1.0.4"
github.com/yuin/goldmark="v1.7.8"
go.uber.org/automaxprocs="v1.5.3"
golang.org/x/crypto="v0.33.0"
golang.org/x/exp="v0.0.0-20250210185358-939b2ce775ac"
golang.org/x/image="v0.24.0"
golang.org/x/mod="v0.23.0"
golang.org/x/net="v0.35.0"
golang.org/x/sync="v0.11.0"
golang.org/x/sys="v0.30.0"
golang.org/x/text="v0.22.0"
golang.org/x/tools="v0.30.0"
golang.org/x/xerrors="v0.0.0-20240903120638-7835f813f4da"
gonum.org/v1/plot="v0.15.0"
google.golang.org/protobuf="v1.36.5"
gopkg.in/yaml.v2="v2.4.0"
gopkg.in/yaml.v3="v3.0.1"
oss.terrastruct.com/d2="v0.6.9"
oss.terrastruct.com/util-go="v0.0.0-20241005222610-44c011a04896"
rsc.io/qr="v0.2.0"
software.sslmate.com/src/go-pkcs12="v0.2.0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>ollama/ollama</title>
      <link>https://github.com/ollama/ollama</link>
      <description>&lt;p&gt;Get up and running with Llama 3.3, DeepSeek-R1, Phi-4, Gemma 3, Mistral Small 3.1 and other large language models.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt;
  &amp;nbsp; 
 &lt;a href="https://ollama.com"&gt; &lt;img alt="ollama" width="240" src="https://github.com/ollama/ollama/assets/3325447/0d0b44e2-8f4a-4e99-9b52-a5c1c741c8f7"&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h1&gt;Ollama&lt;/h1&gt; 
&lt;p&gt;Get up and running with large language models.&lt;/p&gt; 
&lt;h3&gt;macOS&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/Ollama.dmg"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://ollama.com/download/OllamaSetup.exe"&gt;Download&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -fsSL https://ollama.com/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/ollama/ollama/raw/main/docs/linux.md"&gt;Manual install instructions&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;The official &lt;a href="https://hub.docker.com/r/ollama/ollama"&gt;Ollama Docker image&lt;/a&gt; &lt;code&gt;ollama/ollama&lt;/code&gt; is available on Docker Hub.&lt;/p&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-python"&gt;ollama-python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama/ollama-js"&gt;ollama-js&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/ollama"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reddit.com/r/ollama"&gt;Reddit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;p&gt;To run and chat with &lt;a href="https://ollama.com/library/gemma3"&gt;Gemma 3&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run gemma3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model library&lt;/h2&gt; 
&lt;p&gt;Ollama supports a list of models available on &lt;a href="https://ollama.com/library" title="ollama model library"&gt;ollama.com/library&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Here are some example models that can be downloaded:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Parameters&lt;/th&gt; 
   &lt;th&gt;Size&lt;/th&gt; 
   &lt;th&gt;Download&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;815MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;4B&lt;/td&gt; 
   &lt;td&gt;3.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;12B&lt;/td&gt; 
   &lt;td&gt;8.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:12b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemma 3&lt;/td&gt; 
   &lt;td&gt;27B&lt;/td&gt; 
   &lt;td&gt;17GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run gemma3:27b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;QwQ&lt;/td&gt; 
   &lt;td&gt;32B&lt;/td&gt; 
   &lt;td&gt;20GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run qwq&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DeepSeek-R1&lt;/td&gt; 
   &lt;td&gt;671B&lt;/td&gt; 
   &lt;td&gt;404GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run deepseek-r1:671b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;109B&lt;/td&gt; 
   &lt;td&gt;67GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:scout&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 4&lt;/td&gt; 
   &lt;td&gt;400B&lt;/td&gt; 
   &lt;td&gt;245GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama4:maverick&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.3&lt;/td&gt; 
   &lt;td&gt;70B&lt;/td&gt; 
   &lt;td&gt;43GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;3B&lt;/td&gt; 
   &lt;td&gt;2.0GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2&lt;/td&gt; 
   &lt;td&gt;1B&lt;/td&gt; 
   &lt;td&gt;1.3GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2:1b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;11B&lt;/td&gt; 
   &lt;td&gt;7.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.2 Vision&lt;/td&gt; 
   &lt;td&gt;90B&lt;/td&gt; 
   &lt;td&gt;55GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.2-vision:90b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.7GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 3.1&lt;/td&gt; 
   &lt;td&gt;405B&lt;/td&gt; 
   &lt;td&gt;231GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama3.1:405b&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4&lt;/td&gt; 
   &lt;td&gt;14B&lt;/td&gt; 
   &lt;td&gt;9.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Phi 4 Mini&lt;/td&gt; 
   &lt;td&gt;3.8B&lt;/td&gt; 
   &lt;td&gt;2.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run phi4-mini&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mistral&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run mistral&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Moondream 2&lt;/td&gt; 
   &lt;td&gt;1.4B&lt;/td&gt; 
   &lt;td&gt;829MB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run moondream&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Neural Chat&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run neural-chat&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starling&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.1GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run starling-lm&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Code Llama&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run codellama&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Llama 2 Uncensored&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;3.8GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llama2-uncensored&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LLaVA&lt;/td&gt; 
   &lt;td&gt;7B&lt;/td&gt; 
   &lt;td&gt;4.5GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run llava&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Granite-3.3&lt;/td&gt; 
   &lt;td&gt;8B&lt;/td&gt; 
   &lt;td&gt;4.9GB&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ollama run granite3.3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You should have at least 8 GB of RAM available to run the 7B models, 16 GB to run the 13B models, and 32 GB to run the 33B models.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Customize a model&lt;/h2&gt; 
&lt;h3&gt;Import from GGUF&lt;/h3&gt; 
&lt;p&gt;Ollama supports importing GGUF models in the Modelfile:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Create a file named &lt;code&gt;Modelfile&lt;/code&gt;, with a &lt;code&gt;FROM&lt;/code&gt; instruction with the local filepath to the model you want to import.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;FROM ./vicuna-33b.Q4_0.gguf
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Create the model in Ollama&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama create example -f Modelfile
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the model&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;ollama run example
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Import from Safetensors&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/import.md"&gt;guide&lt;/a&gt; on importing models for more information.&lt;/p&gt; 
&lt;h3&gt;Customize a prompt&lt;/h3&gt; 
&lt;p&gt;Models from the Ollama library can be customized with a prompt. For example, to customize the &lt;code&gt;llama3.2&lt;/code&gt; model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a &lt;code&gt;Modelfile&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;FROM llama3.2

# set the temperature to 1 [higher is more creative, lower is more coherent]
PARAMETER temperature 1

# set the system message
SYSTEM """
You are Mario from Super Mario Bros. Answer as Mario, the assistant, only.
"""
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next, create and run the model:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ollama create mario -f ./Modelfile
ollama run mario
&amp;gt;&amp;gt;&amp;gt; hi
Hello! It's your friend Mario.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on working with a Modelfile, see the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/modelfile.md"&gt;Modelfile&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;h2&gt;CLI Reference&lt;/h2&gt; 
&lt;h3&gt;Create a model&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama create&lt;/code&gt; is used to create a model from a Modelfile.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama create mymodel -f ./Modelfile
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pull a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama pull llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This command can also be used to update a local model. Only the diff will be pulled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Remove a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama rm llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Copy a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama cp llama3.2 my-model
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multiline input&lt;/h3&gt; 
&lt;p&gt;For multiline input, you can wrap text with &lt;code&gt;"""&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; """Hello,
... world!
... """
I'm a basic program that prints the famous "Hello, world!" message to the console.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Multimodal models&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;ollama run llava "What's in this image? /Users/jmorgan/Desktop/smile.png"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: The image features a yellow smiley face, which is likely the central focus of the picture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Pass the prompt as an argument&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama run llama3.2 "Summarize this file: $(cat README.md)"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;: Ollama is a lightweight, extensible framework for building and running language models on the local machine. It provides a simple API for creating, running, and managing models, as well as a library of pre-built models that can be easily used in a variety of applications.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Show model information&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama show llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List models on your computer&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama list
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;List which models are currently loaded&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama ps
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stop a model which is currently running&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ollama stop llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start Ollama&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;ollama serve&lt;/code&gt; is used when you want to start ollama without running the desktop application.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/ollama/ollama/raw/main/docs/development.md"&gt;developer guide&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Running local builds&lt;/h3&gt; 
&lt;p&gt;Next, start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, in a separate shell, run a model:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;./ollama run llama3.2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;REST API&lt;/h2&gt; 
&lt;p&gt;Ollama has a REST API for running and managing models.&lt;/p&gt; 
&lt;h3&gt;Generate a response&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/generate -d '{
  "model": "llama3.2",
  "prompt":"Why is the sky blue?"
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chat with a model&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl http://localhost:11434/api/chat -d '{
  "model": "llama3.2",
  "messages": [
    { "role": "user", "content": "why is the sky blue?" }
  ]
}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/ollama/ollama/main/docs/api.md"&gt;API documentation&lt;/a&gt; for all endpoints.&lt;/p&gt; 
&lt;h2&gt;Community Integrations&lt;/h2&gt; 
&lt;h3&gt;Web &amp;amp; Desktop&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/open-webui/open-webui"&gt;Open WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat (macOS with ReactNative)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted (macOS native)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fmaclen/hollama"&gt;Hollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ParisNeo/lollms-webui"&gt;Lollms-Webui&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danny-avila/LibreChat"&gt;LibreChat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bionic-gpt/bionic-gpt"&gt;Bionic GPT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rtcfirefly/ollama-ui"&gt;HTML UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jikkuatwork/saddle"&gt;Saddle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tagspaces.org"&gt;TagSpaces&lt;/a&gt; (A platform for file-based apps, &lt;a href="https://docs.tagspaces.org/ai/"&gt;utilizing Ollama&lt;/a&gt; for the generation of tags and descriptions)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanfioravanti/chatbot-ollama"&gt;Chatbot UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mckaywrigley/chatbot-ui"&gt;Chatbot UI v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama-interface/Ollama-Gui?tab=readme-ov-file"&gt;Typescript UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richawo/minimal-llm-ui"&gt;Minimalistic React UI for Ollama Models&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/Ollamac"&gt;Ollamac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enricoros/big-AGI"&gt;big-AGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cheshire-cat-ai/core"&gt;Cheshire Cat assistant framework&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/semperai/amica"&gt;Amica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BruceMacD/chatd"&gt;chatd&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kghandour/Ollama-SwiftUI"&gt;Ollama-SwiftUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langgenius/dify"&gt;Dify.AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mindmac.app"&gt;MindMac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakobhoeg/nextjs-ollama-llm-ui"&gt;NextJS Web Interface for Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://msty.app"&gt;Msty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Bin-Huang/Chatbox"&gt;Chatbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tgraupmann/WinForm_Ollama_Copilot"&gt;WinForm Ollama Copilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web"&gt;NextChat&lt;/a&gt; with &lt;a href="https://docs.nextchat.dev/models/ollama"&gt;Get Started Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mmo80/alpaca-webui"&gt;Alpaca WebUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enoch1118/ollamaGUI"&gt;OllamaGUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/InternLM/OpenAOE"&gt;OpenAOE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/leonid20000/OdinRunes"&gt;Odin Runes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mrdjohnson/llm-x"&gt;LLM-X&lt;/a&gt; (Progressive Web App)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mintplex-Labs/anything-llm"&gt;AnythingLLM (Docker + MacOs/Windows/Linux native app)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_basic_chat"&gt;Ollama Basic Chat: Uses HyperDiv Reactive UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drazdra/ollama-chats"&gt;Ollama-chats RPG&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://intellibar.app/"&gt;IntelliBar&lt;/a&gt; (AI-powered assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/jirapt"&gt;Jirapt&lt;/a&gt; (Jira Integration to generate issues, tasks, epics)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AliAhmedNada/ojira"&gt;ojira&lt;/a&gt; (Jira chrome plugin to easily generate descriptions for tasks)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/QA-Pilot"&gt;QA-Pilot&lt;/a&gt; (Interactive chat tool that can leverage Ollama models for rapid understanding and navigation of GitHub code repositories)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sugarforever/chat-ollama"&gt;ChatOllama&lt;/a&gt; (Open Source Chatbot based on Ollama with Knowledge Bases)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nagi-ovo/CRAG-Ollama-Chat"&gt;CRAG Ollama Chat&lt;/a&gt; (Simple Web Search with Corrective RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/infiniflow/ragflow"&gt;RAGFlow&lt;/a&gt; (Open-source Retrieval-Augmented Generation engine based on deep document understanding)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StreamDeploy-DevRel/streamdeploy-llm-app-scaffold"&gt;StreamDeploy&lt;/a&gt; (LLM Application Scaffold)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/swuecho/chat"&gt;chat&lt;/a&gt; (chat web app for teams)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lobehub/lobe-chat"&gt;Lobe Chat&lt;/a&gt; with &lt;a href="https://lobehub.com/docs/self-hosting/examples/ollama"&gt;Integrating Doc&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/datvodinh/rag-chatbot.git"&gt;Ollama RAG Chatbot&lt;/a&gt; (Local Chat with multiple PDFs using Ollama and RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.nurgo-software.com/products/brainsoup"&gt;BrainSoup&lt;/a&gt; (Flexible native client with RAG &amp;amp; multi-agent automation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Renset/macai"&gt;macai&lt;/a&gt; (macOS client for Ollama, ChatGPT, and other compatible API back-ends)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/RWKV-Runner"&gt;RWKV-Runner&lt;/a&gt; (RWKV offline LLM deployment tool, also usable as a client for ChatGPT and Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dezoito/ollama-grid-search"&gt;Ollama Grid Search&lt;/a&gt; (app to evaluate and compare models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Otacon/olpaka"&gt;Olpaka&lt;/a&gt; (User-friendly Flutter Web App for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://casibase.org"&gt;Casibase&lt;/a&gt; (An open source AI knowledge base and dialogue system combining the latest RAG, SSO, ollama support, and multiple large language models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CrazyNeil/OllamaSpring"&gt;OllamaSpring&lt;/a&gt; (Ollama Client for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kartikm7/llocal"&gt;LLocal.in&lt;/a&gt; (Easy to use Electron Desktop Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dcSpark/shinkai-apps"&gt;Shinkai Desktop&lt;/a&gt; (Two click install Local AI using Ollama + Files + RAG)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeyoyt/ailama"&gt;AiLama&lt;/a&gt; (A Discord User App that allows you to interact with Ollama anywhere in Discord)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_mesop/"&gt;Ollama with Google Mesop&lt;/a&gt; (Mesop Chat Client implementation with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SciPhi-AI/R2R"&gt;R2R&lt;/a&gt; (Open-source RAG engine)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elearningshow/ollama-kis"&gt;Ollama-Kis&lt;/a&gt; (A simple easy-to-use GUI with sample custom LLM for Drivers Education)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://opengpa.org"&gt;OpenGPA&lt;/a&gt; (Open-source offline-first Enterprise Agentic Application)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mateuszmigas/painting-droid"&gt;Painting Droid&lt;/a&gt; (Painting app with AI integrations)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.kerlig.com/"&gt;Kerlig AI&lt;/a&gt; (AI writing assistant for macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MindWorkAI/AI-Studio"&gt;AI Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gyopak/sidellama"&gt;Sidellama&lt;/a&gt; (browser-based LLM client)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trypromptly/LLMStack"&gt;LLMStack&lt;/a&gt; (No-code multi-agent framework to build LLM agents and workflows)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://boltai.com"&gt;BoltAI for Mac&lt;/a&gt; (AI Chat Client for Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/av/harbor"&gt;Harbor&lt;/a&gt; (Containerized LLM Toolkit with Ollama as default backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szczyglis-dev/py-gpt"&gt;PyGPT&lt;/a&gt; (AI desktop assistant for Linux, Windows, and Mac)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jeffser/Alpaca"&gt;Alpaca&lt;/a&gt; (An Ollama client application for Linux and macOS made with GTK4 and Adwaita)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Significant-Gravitas/AutoGPT/raw/master/docs/content/platform/ollama.md"&gt;AutoGPT&lt;/a&gt; (AutoGPT Ollama integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jonathanhecl.com/go-crew/"&gt;Go-CREW&lt;/a&gt; (Powerful Offline RAG in Golang)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openvmp/partcad/"&gt;PartCAD&lt;/a&gt; (CAD model generation with OpenSCAD and CadQuery)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j-web-ui"&gt;Ollama4j Web UI&lt;/a&gt; - Java-based Web UI for Ollama built with Vaadin, Spring Boot, and Ollama4j&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kspviswa/pyOllaMx"&gt;PyOllaMx&lt;/a&gt; - macOS application capable of chatting with both Ollama and Apple MLX models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt; - Formerly known as Claude Dev is a VSCode extension for multi-file/whole-repo coding&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kangfenmao/cherry-studio"&gt;Cherry Studio&lt;/a&gt; (Desktop client with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nickthecook/archyve"&gt;Archyve&lt;/a&gt; (RAG-enabling document library)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama-crew-mesop"&gt;crewAI with Mesop&lt;/a&gt; (Mesop Web Interface to run crewAI with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chyok/ollama-gui"&gt;Tkinter-based client&lt;/a&gt; (Python tkinter-based Client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trendy-design/llmchat"&gt;LLMChat&lt;/a&gt; (Privacy focused, 100% local, intuitive all-in-one chat interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Leon-Sander/Local-Multimodal-AI-Chat"&gt;Local Multimodal AI Chat&lt;/a&gt; (Ollama-based LLM Chat with support for multiple features, including PDF RAG, voice chat, image-based interactions, and integration with OpenAI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xark-argo/argo"&gt;ARGO&lt;/a&gt; (Locally download and run Ollama and Huggingface models with RAG and deep research on Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EliasPereirah/OrionChat"&gt;OrionChat&lt;/a&gt; - OrionChat is a web interface for chatting with different AI providers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bklieger-groq/g1"&gt;G1&lt;/a&gt; (Prototype of using prompting strategies to improve the LLM's reasoning through o1-like reasoning chains.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemonit-eric-mao/ollama-web-management"&gt;Web management&lt;/a&gt; (Web management page)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/promptery/promptery"&gt;Promptery&lt;/a&gt; (desktop client for Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/annilq/chat-ollama"&gt;chat-ollama&lt;/a&gt; (a React Native client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/spacellama"&gt;SpaceLlama&lt;/a&gt; (Firefox and Chrome extension to quickly summarize web pages with ollama in a sidebar)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/youlama"&gt;YouLama&lt;/a&gt; (Webapp to quickly summarize any YouTube video, supporting Invidious as well)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tcsenpai/dualmind"&gt;DualMind&lt;/a&gt; (Experimental app allowing two models to talk to each other in the terminal or in a web interface)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/h1ddenpr0cess20/ollamarama-matrix"&gt;ollamarama-matrix&lt;/a&gt; (Ollama chatbot for the Matrix chat protocol)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anan1213095357/ollama-chat-app"&gt;ollama-chat-app&lt;/a&gt; (Flutter-based chat app)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.perfectmemory.ai/"&gt;Perfect Memory AI&lt;/a&gt; (Productivity AI assists personalized by what you have seen on your screen, heard, and said in the meetings)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexastack/hexabot"&gt;Hexabot&lt;/a&gt; (A conversational AI builder)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/reddit_analyzer"&gt;Reddit Rate&lt;/a&gt; (Search and Rate Reddit topics with a weighted summation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/OpenTalkGpt"&gt;OpenTalkGpt&lt;/a&gt; (Chrome Extension to manage open-source models supported by Ollama, create custom models, and chat with models from a user-friendly UI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vinhnx/vt.ai"&gt;VT&lt;/a&gt; (A minimal multimodal AI chat app, with dynamic conversation routing. Supports local models via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nosia-ai/nosia"&gt;Nosia&lt;/a&gt; (Easy to install and use RAG platform based on Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/witsy"&gt;Witsy&lt;/a&gt; (An AI Desktop application available for Mac/Windows/Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/US-Artificial-Intelligence/abbey"&gt;Abbey&lt;/a&gt; (A configurable AI interface server with notebooks, document storage, and YouTube support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmayboroda/minima"&gt;Minima&lt;/a&gt; (RAG with on-premises or fully local workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AidfulAI/aidful-ollama-model-delete"&gt;aidful-ollama-model-delete&lt;/a&gt; (User interface for simplified model cleanup)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ItzCrazyKns/Perplexica"&gt;Perplexica&lt;/a&gt; (An AI-powered search engine &amp;amp; an open-source alternative to Perplexity AI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oslook/ollama-webui"&gt;Ollama Chat WebUI for Docker &lt;/a&gt; (Support for local docker deployment, lightweight ollama webui)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-tooklit/ollama-docs"&gt;AI Toolkit for Visual Studio Code&lt;/a&gt; (Microsoft-official VSCode extension to chat, test, evaluate models with Ollama support, and use them in your AI applications.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anilkay/MinimalNextOllamaChat"&gt;MinimalNextOllamaChat&lt;/a&gt; (Minimal Web UI for Chat and Model Control)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TilmanGriesel/chipper"&gt;Chipper&lt;/a&gt; AI interface for tinkerers (Ollama, Haystack RAG, Python)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CosmicEventHorizon/ChibiChat"&gt;ChibiChat&lt;/a&gt; (Kotlin-based Android app to chat with Ollama and Koboldcpp API endpoints)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qusaismael/localllm"&gt;LocalLLM&lt;/a&gt; (Minimal Web-App to run ollama models on it with a GUI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buiducnhat/ollamazing"&gt;Ollamazing&lt;/a&gt; (Web extension to run Ollama models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benhaotang/OpenDeepResearcher-via-searxng"&gt;OpenDeepResearcher-via-searxng&lt;/a&gt; (A Deep Research equivalent endpoint with Ollama support for running locally)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AIDotNet/AntSK"&gt;AntSK&lt;/a&gt; (Out-of-the-box &amp;amp; Adaptable RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/MaxKB/"&gt;MaxKB&lt;/a&gt; (Ready-to-use &amp;amp; flexible RAG Chatbot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/danielekp/yla"&gt;yla&lt;/a&gt; (Web interface to freely interact with your customized models)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RockChinQ/LangBot"&gt;LangBot&lt;/a&gt; (LLM-based instant messaging bots platform, with Agents, RAG features, supports multiple platforms)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1Panel-dev/1Panel/"&gt;1Panel&lt;/a&gt; (Web-based Linux Server Management Tool)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Soulter/AstrBot/"&gt;AstrBot&lt;/a&gt; (User-friendly LLM-based multi-platform chatbot with a WebUI, supporting RAG, LLM agents, and plugins integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aharon-Bensadoun/Flufy"&gt;Flufy&lt;/a&gt; (A beautiful chat interface for interacting with Ollama's API. Built with React, TypeScript, and Material-UI.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeozeozeo/ellama"&gt;Ellama&lt;/a&gt; (Friendly native app to chat with an Ollama instance)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediar-ai/screenpipe"&gt;screenpipe&lt;/a&gt; Build agents powered by your screen history&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hengkysteen/ollamb"&gt;Ollamb&lt;/a&gt; (Simple yet rich in features, cross-platform built with Flutter and designed for Ollama. Try the &lt;a href="https://hengkysteen.github.io/demo/ollamb/"&gt;web demo&lt;/a&gt;.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Writeopia/Writeopia"&gt;Writeopia&lt;/a&gt; (Text editor with integration with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AppFlowy-IO/AppFlowy"&gt;AppFlowy&lt;/a&gt; (AI collaborative workspace with Ollama, cross-platform and self-hostable)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cushydigit/lumina.git"&gt;Lumina&lt;/a&gt; (A lightweight, minimal React.js frontend for interacting with Ollama servers)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/tiny-notepad"&gt;Tiny Notepad&lt;/a&gt; (A lightweight, notepad-like interface to chat with ollama available on PyPI)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hellotunamayo/macLlama"&gt;macLlama (macOS native)&lt;/a&gt; (A native macOS GUI application for interacting with Ollama models, featuring a chat interface.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philberndt/GPTranslate"&gt;GPTranslate&lt;/a&gt; (A fast and lightweight, AI powered desktop translation application written with Rust and Tauri. Features real-time translation with OpenAI/Azure/Ollama.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NGC13009/ollama-launcher"&gt;ollama launcher&lt;/a&gt; (A launcher for Ollama, aiming to provide users with convenient functions such as ollama server launching, management, or configuration.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aj-Seven/ai-hub"&gt;ai-hub&lt;/a&gt; (AI Hub supports multiple models via API keys and Chat support via Ollama API.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/mayan-edms/mayan-edms"&gt;Mayan EDMS&lt;/a&gt; (Open source document management system to organize, tag, search, and automate your files with powerful Ollama driven workflows.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://cloud.google.com/run/docs/tutorials/gpu-gemma2-with-ollama"&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fly.io/docs/python/do-more/add-ollama/"&gt;Fly.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.koyeb.com/deploy/ollama"&gt;Koyeb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Terminal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggozad/oterm"&gt;oterm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-kostyaev/ellama"&gt;Ellama Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zweifisch/ollama"&gt;Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paradoxical-dev/neollama"&gt;neollama&lt;/a&gt; UI client for interacting with models from within Neovim&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/David-Kunz/gen.nvim"&gt;gen.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nomnivore/ollama.nvim"&gt;ollama.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-souza/ollero.nvim"&gt;ollero.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gerazov/ollama-chat.nvim"&gt;ollama-chat.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huynle/ogpt.nvim"&gt;ogpt.nvim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karthink/gptel"&gt;gptel Emacs client&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dustinblackman/oatmeal"&gt;Oatmeal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pgibler/cmdh"&gt;cmdh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/npahlfer/ooo"&gt;ooo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reid41/shell-pilot"&gt;shell-pilot&lt;/a&gt;(Interact with models via pure shell scripts on Linux or macOS)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pythops/tenere"&gt;tenere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/taketwo/llm-ollama"&gt;llm-ollama&lt;/a&gt; for &lt;a href="https://llm.datasette.io/en/stable/"&gt;Datasette's LLM CLI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anaisbetts/typechat-cli"&gt;typechat-cli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djcopley/ShellOracle"&gt;ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yusufcanb/tlm"&gt;tlm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ericcurtin/podman-ollama"&gt;podman-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/gollama"&gt;gollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/paulrobello/parllama"&gt;ParLlama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cognitivetech/ollama-ebook-summary/"&gt;Ollama eBook Summary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_moe"&gt;Ollama Mixture of Experts (MOE) in 50 lines of code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepo-ec/vim-intelligence-bridge"&gt;vim-intelligence-bridge&lt;/a&gt; Simple interaction of "Ollama" with the Vim editor&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x-cmd.com/mod/ollama"&gt;x-cmd ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drunkwcodes/bb7"&gt;bb7&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;SwollamaCLI&lt;/a&gt; bundled with the Swollama Swift package. &lt;a href="https://github.com/marcusziade/Swollama?tab=readme-ov-file#cli-usage"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sigoden/aichat"&gt;aichat&lt;/a&gt; All-in-one LLM CLI tool featuring Shell Assistant, Chat-REPL, RAG, AI tools &amp;amp; agents, with access to OpenAI, Claude, Gemini, Ollama, Groq, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rrg92/powershai"&gt;PowershAI&lt;/a&gt; PowerShell module that brings AI to terminal on Windows, including support for Ollama&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abyss-c0re/deepshell"&gt;DeepShell&lt;/a&gt; Your self-hosted AI assistant. Interactive Shell, Files and Folders analysis.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/orbiton"&gt;orbiton&lt;/a&gt; Configuration-free text editor and IDE with support for tab completion with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/molbal/orca-cli"&gt;orca-cli&lt;/a&gt; Ollama Registry CLI Application - Browse, pull, and download models from Ollama Registry in your terminal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gguf-to-ollama"&gt;GGUF-to-Ollama&lt;/a&gt; - Importing GGUF to Ollama made easy (multiplatform)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapidarchitect/ollama_strands"&gt;AWS-Strands-With-Ollama&lt;/a&gt; - AWS Strands Agents with Ollama Examples&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-multirun"&gt;ollama-multirun&lt;/a&gt; - A bash shell script to run a single prompt against any or all of your locally installed ollama models, saving the output and performance statistics as easily navigable web pages. (&lt;a href="https://attogram.github.io/ai_test_zone/"&gt;Demo&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/attogram/ollama-bash-toolshed"&gt;ollama-bash-toolshed&lt;/a&gt; - Bash scripts to chat with tool using models. Add new tools to your shed with ease. Runs on Ollama.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apple Vision Pro&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Cross-platform AI chat app supporting Apple Vision Pro via "Designed for iPad")&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/timescale/pgai"&gt;pgai&lt;/a&gt; - PostgreSQL as a vector database (Create and search embeddings from Ollama models using pgvector) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/timescale/pgai/raw/main/docs/vectorizer-quick-start.md"&gt;Get started guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mindsdb/mindsdb/raw/staging/mindsdb/integrations/handlers/ollama_handler/README.md"&gt;MindsDB&lt;/a&gt; (Connects Ollama models with nearly 200 data platforms and apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philippgille/chromem-go/raw/v0.5.0/embed_ollama.go"&gt;chromem-go&lt;/a&gt; with &lt;a href="https://github.com/philippgille/chromem-go/tree/v0.5.0/examples/rag-wikipedia-ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dbkangaroo/kangaroo"&gt;Kangaroo&lt;/a&gt; (AI-powered SQL client and admin tool for popular databases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Package managers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://archlinux.org/packages/extra/x86_64/ollama/"&gt;Pacman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gentoo/guru/tree/master/app-misc/ollama"&gt;Gentoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://formulae.brew.sh/formula/ollama"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://artifacthub.io/packages/helm/ollama-helm/ollama"&gt;Helm Chart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeberg.org/tusharhero/ollama-guix"&gt;Guix channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://search.nixos.org/packages?show=ollama&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=ollama"&gt;Nix package&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev/blog/ollama-part-one"&gt;Flox&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://python.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain&lt;/a&gt; and &lt;a href="https://js.langchain.com/docs/integrations/chat/ollama/"&gt;LangChain.js&lt;/a&gt; with &lt;a href="https://js.langchain.com/docs/tutorials/local_rag/"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://firebase.google.com/docs/genkit/plugins/ollama"&gt;Firebase Genkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crewAIInc/crewAI"&gt;crewAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://remembersoftwares.github.io/yacana/"&gt;Yacana&lt;/a&gt; (User-friendly multi-agent framework for brainstorming and executing predetermined flows with built-in tool integration)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/spring-projects/spring-ai"&gt;Spring AI&lt;/a&gt; with &lt;a href="https://docs.spring.io/spring-ai/reference/api/chat/ollama-chat.html"&gt;reference&lt;/a&gt; and &lt;a href="https://github.com/tzolov/ollama-tools"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tmc/langchaingo/"&gt;LangChainGo&lt;/a&gt; with &lt;a href="https://github.com/tmc/langchaingo/tree/main/examples/ollama-completion-example"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/langchain4j/langchain4j"&gt;LangChain4j&lt;/a&gt; with &lt;a href="https://github.com/langchain4j/langchain4j-examples/tree/main/ollama-examples/src/main/java"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Abraxas-365/langchain-rust"&gt;LangChainRust&lt;/a&gt; with &lt;a href="https://github.com/Abraxas-365/langchain-rust/raw/main/examples/llm_ollama.rs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tryAGI/LangChain"&gt;LangChain for .NET&lt;/a&gt; with &lt;a href="https://github.com/tryAGI/LangChain/raw/main/examples/LangChain.Samples.OpenAI/Program.cs"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theodo-group/LLPhant?tab=readme-ov-file#ollama"&gt;LLPhant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.llamaindex.ai/en/stable/examples/llm/ollama/"&gt;LlamaIndex&lt;/a&gt; and &lt;a href="https://ts.llamaindex.ai/modules/llms/available_llms/ollama"&gt;LlamaIndexTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/presbrey/ollamafarm"&gt;OllamaFarm for Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/awaescher/OllamaSharp"&gt;OllamaSharp for .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gbaptista/ollama-ai"&gt;Ollama for Ruby&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pepperoni21/ollama-rs"&gt;Ollama-rs for Rust&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmont-dev/ollama-hpp"&gt;Ollama-hpp for C++&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ollama4j/ollama4j"&gt;Ollama4j for Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://modelfusion.dev/integration/model-provider/ollama"&gt;ModelFusion Typescript Library&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinhermawan/OllamaKit"&gt;OllamaKit for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/breitburg/dart-ollama"&gt;Ollama for Dart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudstudio/ollama-laravel"&gt;Ollama for Laravel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidmigloz/langchain_dart"&gt;LangChainDart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/semantic-kernel/tree/main/python/semantic_kernel/connectors/ai/ollama"&gt;Semantic Kernel - Python&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deepset-ai/haystack-integrations/raw/main/integrations/ollama.md"&gt;Haystack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/brainlid/langchain"&gt;Elixir LangChain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JBGruber/rollama"&gt;Ollama for R - rollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hauselin/ollama-r"&gt;Ollama for R - ollama-r&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lebrunel/ollama-ex"&gt;Ollama-ex for Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/b-tocs/abap_btocs_ollama"&gt;Ollama Connector for SAP ABAP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testcontainers.com/modules/ollama/"&gt;Testcontainers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://portkey.ai/docs/welcome/integration-guides/ollama"&gt;Portkey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svilupp/PromptingTools.jl"&gt;PromptingTools.jl&lt;/a&gt; with an &lt;a href="https://svilupp.github.io/PromptingTools.jl/dev/examples/working_with_ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Project-Llama/llamascript"&gt;LlamaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emirsahin1/llm-axe"&gt;llm-axe&lt;/a&gt; (Python Toolkit for Building LLM Powered Apps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.gollm.co/examples/ollama-example"&gt;Gollm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonathanhecl/gollama"&gt;Gollama for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyproto/ollamaclient"&gt;Ollamaclient for Golang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/tozd/go/fun"&gt;High-level function abstraction in Go&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArdaGnsrn/ollama-php"&gt;Ollama PHP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/agents-flex/agents-flex"&gt;Agents-Flex for Java&lt;/a&gt; with &lt;a href="https://github.com/agents-flex/agents-flex/tree/main/agents-flex-llm/agents-flex-llm-ollama/src/test/java/com/agentsflex/llm/ollama"&gt;example&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/parakeet-nest/parakeet"&gt;Parakeet&lt;/a&gt; is a GoLang library, made to simplify the development of small generative AI applications with Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andygill/haverscript"&gt;Haverscript&lt;/a&gt; with &lt;a href="https://github.com/andygill/haverscript/tree/main/examples"&gt;examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattt/ollama-swift"&gt;Ollama for Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marcusziade/Swollama"&gt;Swollama for Swift&lt;/a&gt; with &lt;a href="https://marcusziade.github.io/Swollama/documentation/swollama/"&gt;DocC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/prasad89/golamify"&gt;GoLamify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharad/ollama-haskell"&gt;Ollama for Haskell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nbonamy/multi-llm-ts"&gt;multi-llm-ts&lt;/a&gt; (A Typescript/JavaScript library allowing access to different LLM in a unified API)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lofcz/llmtornado"&gt;LlmTornado&lt;/a&gt; (C# library providing a unified interface for major FOSS &amp;amp; Commercial inference APIs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dravenk/ollama-zig"&gt;Ollama for Zig&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lunary-ai/abso"&gt;Abso&lt;/a&gt; (OpenAI-compatible TypeScript SDK for any LLM provider)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/goodreasonai/nichey"&gt;Nichey&lt;/a&gt; is a Python package for generating custom wikis for your research topic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kassane/ollama-d"&gt;Ollama for D&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/OllamaPlusPlus"&gt;OllamaPlusPlus&lt;/a&gt; (Very simple C++ library for Ollama)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aws-samples/swift-chat"&gt;SwiftChat&lt;/a&gt; (Lightning-fast Cross-platform AI chat app with native UI for Android, iOS, and iPad)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mobile-Artificial-Intelligence/maid"&gt;Maid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JHubi1/ollama-app"&gt;Ollama App&lt;/a&gt; (Modern and easy-to-use multi-platform client for Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1runeberg/confichat"&gt;ConfiChat&lt;/a&gt; (Lightweight, standalone, multi-platform, and privacy-focused LLM chat interface with optional encryption)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sunshine0523/OllamaServer"&gt;Ollama Android Chat&lt;/a&gt; (No need for Termux, start the Ollama service with one click on an Android device)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ibrahimcetin/reins"&gt;Reins&lt;/a&gt; (Easily tweak parameters, customize system prompts per chat, and enhance your AI experiments with reasoning model support.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Extensions &amp;amp; Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MassimilianoPasquini97/raycast_ollama"&gt;Raycast extension&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mxyng/discollama"&gt;Discollama&lt;/a&gt; (Discord bot inside the Ollama discord channel)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/continuedev/continue"&gt;Continue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewh1teagle/vibe"&gt;Vibe&lt;/a&gt; (Transcribe and analyze meetings with Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hinterdupfinger/obsidian-ollama"&gt;Obsidian Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/omagdy7/ollama-logseq"&gt;Logseq Ollama plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andersrex/notesollama"&gt;NotesOllama&lt;/a&gt; (Apple Notes Ollama plugin)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samalba/dagger-chatbot"&gt;Dagger Chatbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mekb-turtle/discord-ai-bot"&gt;Discord AI Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruecat/ollama-telegram"&gt;Ollama Telegram Bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ej52/hass-ollama-conversation"&gt;Hass Ollama Conversation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abrenneke/rivet-plugin-ollama"&gt;Rivet plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/longy2k/obsidian-bmo-chatbot"&gt;Obsidian BMO Chatbot plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/herval/cliobot"&gt;Cliobot&lt;/a&gt; (Telegram bot with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logancyang/obsidian-copilot"&gt;Copilot for Obsidian plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pfrankov/obsidian-local-gpt"&gt;Obsidian Local GPT plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openinterpreter.com/language-model-setup/local-models/ollama"&gt;Open Interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ex3ndr/llama-coder"&gt;Llama Coder&lt;/a&gt; (Copilot alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bernardo-bruning/ollama-copilot"&gt;Ollama Copilot&lt;/a&gt; (Proxy that allows you to use Ollama as a copilot like GitHub Copilot)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rjmacarthy/twinny"&gt;twinny&lt;/a&gt; (Copilot and Copilot chat alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RussellCanfield/wingman-ai"&gt;Wingman-AI&lt;/a&gt; (Copilot code and chat alternative using Ollama and Hugging Face)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/n4ze3m/page-assist"&gt;Page Assist&lt;/a&gt; (Chrome Extension)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/imoize/plasmoid-ollamacontrol"&gt;Plasmoid Ollama Control&lt;/a&gt; (KDE Plasma extension that allows you to quickly manage/control Ollama model)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tusharhero/aitelegrambot"&gt;AI Telegram Bot&lt;/a&gt; (Telegram bot using Ollama in backend)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yaroslavyaroslav/OpenAI-sublime-text"&gt;AI ST Completion&lt;/a&gt; (Sublime Text 4 AI assistant plugin with Ollama support)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kevinthedang/discord-ollama"&gt;Discord-Ollama Chat Bot&lt;/a&gt; (Generalized TypeScript Discord Bot w/ Tuning Documentation)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josStorer/chatGPTBox"&gt;ChatGPTBox: All in one browser extension&lt;/a&gt; with &lt;a href="https://github.com/josStorer/chatGPTBox/issues/616#issuecomment-1975186467"&gt;Integrating Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rapmd73/Companion"&gt;Discord AI chat/moderation bot&lt;/a&gt; Chat/moderation bot written in python. Uses Ollama to create personalities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nischalj10/headless-ollama"&gt;Headless Ollama&lt;/a&gt; (Scripts to automatically install ollama client &amp;amp; models on any OS for apps that depend on ollama server)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xuyangbocn/terraform-aws-self-host-llm"&gt;Terraform AWS Ollama &amp;amp; Open WebUI&lt;/a&gt; (A Terraform module to deploy on AWS a ready-to-use Ollama service, together with its front-end Open WebUI service.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakubburkiewicz/node-red-contrib-ollama"&gt;node-red-contrib-ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivostoykov/localAI"&gt;Local AI Helper&lt;/a&gt; (Chrome and Firefox extensions that enable interactions with the active tab and customisable API endpoints. Includes secure storage for user prompts.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jake83741/vnc-lm"&gt;vnc-lm&lt;/a&gt; (Discord bot for messaging with LLMs through Ollama and LiteLLM. Seamlessly move between local and flagship models.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SilasMarvin/lsp-ai"&gt;LSP-AI&lt;/a&gt; (Open-source language server for AI-powered functionality)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Palm1r/QodeAssist"&gt;QodeAssist&lt;/a&gt; (AI-powered coding assistant plugin for Qt Creator)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ECuiDev/obsidian-quiz-generator"&gt;Obsidian Quiz Generator plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/philffm/ai-summary-helper"&gt;AI Summmary Helper plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suncloudsmoon/TextCraft"&gt;TextCraft&lt;/a&gt; (Copilot in Word alternative using Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zeitlings/alfred-ollama"&gt;Alfred Ollama&lt;/a&gt; (Alfred Workflow)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adarshM84/TextLLaMA"&gt;TextLLaMA&lt;/a&gt; A Chrome Extension that helps you write emails, correct grammar, and translate into any language&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zyphixor/simple-discord-ai"&gt;Simple-Discord-AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innightwolfsleep/llm_telegram_bot"&gt;LLM Telegram Bot&lt;/a&gt; (telegram bot, primary for RP. Oobabooga-like buttons, &lt;a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui"&gt;A1111&lt;/a&gt; API integration e.t.c)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sammcj/mcp-llm"&gt;mcp-llm&lt;/a&gt; (MCP Server to allow LLMs to call other LLMs)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/SimpleOllamaUnity"&gt;SimpleOllamaUnity&lt;/a&gt; (Unity Engine extension for communicating with Ollama in a few lines of code. Also works at runtime)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HardCodeDev777/UnityCodeLama"&gt;UnityCodeLama&lt;/a&gt; (Unity Edtior tool to analyze scripts via Ollama)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/NativeMindBrowser/NativeMindExtension"&gt;NativeMind&lt;/a&gt; (Private, on-device AI Assistant, no cloud dependencies)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gmai.premex.se/"&gt;GMAI - Gradle Managed AI&lt;/a&gt; (Gradle plugin for automated Ollama lifecycle management during build phases)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported backends&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt; project founded by Georgi Gerganov.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Observability&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.comet.com/docs/opik/cookbook/ollama"&gt;Opik&lt;/a&gt; is an open-source platform to debug, evaluate, and monitor your LLM applications, RAG systems, and agentic workflows with comprehensive tracing, automated evaluations, and production-ready dashboards. Opik supports native intergration to Ollama.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lunary.ai/docs/integrations/ollama"&gt;Lunary&lt;/a&gt; is the leading open-source LLM observability platform. It provides a variety of enterprise-grade features such as real-time analytics, prompt templates management, PII masking, and comprehensive agent tracing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openlit/openlit"&gt;OpenLIT&lt;/a&gt; is an OpenTelemetry-native tool for monitoring Ollama Applications &amp;amp; GPUs using traces and metrics.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.honeyhive.ai/integrations/ollama"&gt;HoneyHive&lt;/a&gt; is an AI observability and evaluation platform for AI agents. Use HoneyHive to evaluate agent performance, interrogate failures, and monitor quality in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://langfuse.com/docs/integrations/ollama"&gt;Langfuse&lt;/a&gt; is an open source LLM observability platform that enables teams to collaboratively monitor, evaluate and debug AI applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mlflow.org/docs/latest/llms/tracing/index.html#automatic-tracing"&gt;MLflow Tracing&lt;/a&gt; is an open source LLM observability tool with a convenient API to log and visualize traces, making it easy to debug and evaluate GenAI applications.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>restic/restic</title>
      <link>https://github.com/restic/restic</link>
      <description>&lt;p&gt;Fast, secure, efficient backup program&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://restic.readthedocs.io/en/latest/?badge=latest"&gt;&lt;img src="https://readthedocs.org/projects/restic/badge/?version=latest" alt="Documentation"&gt;&lt;/a&gt; &lt;a href="https://github.com/restic/restic/actions?query=workflow%3Atest"&gt;&lt;img src="https://github.com/restic/restic/workflows/test/badge.svg?sanitize=true" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/restic/restic"&gt;&lt;img src="https://goreportcard.com/badge/github.com/restic/restic" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Introduction&lt;/h1&gt; 
&lt;p&gt;restic is a backup program that is fast, efficient and secure. It supports the three major operating systems (Linux, macOS, Windows) and a few smaller ones (FreeBSD, OpenBSD).&lt;/p&gt; 
&lt;p&gt;For detailed usage and installation instructions check out the &lt;a href="https://restic.readthedocs.io/en/latest"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can ask questions in our &lt;a href="https://forum.restic.net"&gt;Discourse forum&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quick start&lt;/h2&gt; 
&lt;p&gt;Once you've &lt;a href="https://restic.readthedocs.io/en/latest/020_installation.html"&gt;installed&lt;/a&gt; restic, start off with creating a repository for your backups:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ restic init --repo /tmp/backup
enter password for new backend:
enter password again:
created restic backend 085b3c76b9 at /tmp/backup
Please note that knowledge of your password is required to access the repository.
Losing your password means that your data is irrecoverably lost.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and add some data:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ restic --repo /tmp/backup backup ~/work
enter password for repository:
scan [/home/user/work]
scanned 764 directories, 1816 files in 0:00
[0:29] 100.00%  54.732 MiB/s  1.582 GiB / 1.582 GiB  2580 / 2580 items  0 errors  ETA 0:00
duration: 0:29, 54.47MiB/s
snapshot 40dc1520 saved
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next you can either use &lt;code&gt;restic restore&lt;/code&gt; to restore files or use &lt;code&gt;restic mount&lt;/code&gt; to mount the repository via fuse and browse the files from previous snapshots.&lt;/p&gt; 
&lt;p&gt;For more options check out the &lt;a href="https://restic.readthedocs.io/en/latest/"&gt;online documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Backends&lt;/h1&gt; 
&lt;p&gt;Saving a backup on the same machine is nice but not a real backup strategy. Therefore, restic supports the following backends for storing backups natively:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#local"&gt;Local directory&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#sftp"&gt;sftp server (via SSH)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#rest-server"&gt;HTTP REST server&lt;/a&gt; (&lt;a href="https://restic.readthedocs.io/en/latest/100_references.html#rest-backend"&gt;protocol&lt;/a&gt;, &lt;a href="https://github.com/restic/rest-server"&gt;rest-server&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#amazon-s3"&gt;Amazon S3&lt;/a&gt; (either from Amazon or using the &lt;a href="https://minio.io"&gt;Minio&lt;/a&gt; server)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#openstack-swift"&gt;OpenStack Swift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#backblaze-b2"&gt;BackBlaze B2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#microsoft-azure-blob-storage"&gt;Microsoft Azure Blob Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#google-cloud-storage"&gt;Google Cloud Storage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;And many other services via the &lt;a href="https://rclone.org"&gt;rclone&lt;/a&gt; &lt;a href="https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html#other-services-via-rclone"&gt;Backend&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Design Principles&lt;/h1&gt; 
&lt;p&gt;Restic is a program that does backups right and was designed with the following principles in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy&lt;/strong&gt;: Doing backups should be a frictionless process, otherwise you might be tempted to skip it. Restic should be easy to configure and use, so that, in the event of a data loss, you can just restore it. Likewise, restoring data should not be complicated.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Fast&lt;/strong&gt;: Backing up your data with restic should only be limited by your network or hard disk bandwidth so that you can backup your files every day. Nobody does backups if it takes too much time. Restoring backups should only transfer data that is needed for the files that are to be restored, so that this process is also fast.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verifiable&lt;/strong&gt;: Much more important than backup is restore, so restic enables you to easily verify that all data can be restored.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure&lt;/strong&gt;: Restic uses cryptography to guarantee confidentiality and integrity of your data. The location the backup data is stored is assumed not to be a trusted environment (e.g. a shared space where others like system administrators are able to access your backups). Restic is built to secure your data against such attackers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Efficient&lt;/strong&gt;: With the growth of data, additional snapshots should only take the storage of the actual increment. Even more, duplicate data should be de-duplicated before it is actually written to the storage back end to save precious backup space.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Reproducible Builds&lt;/h1&gt; 
&lt;p&gt;The binaries released with each restic version starting at 0.6.1 are &lt;a href="https://reproducible-builds.org/"&gt;reproducible&lt;/a&gt;, which means that you can reproduce a byte identical version from the source code for that release. Instructions on how to do that are contained in the &lt;a href="https://github.com/restic/builder"&gt;builder repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;p&gt;You can follow the restic project on Mastodon &lt;a href="https://fosstodon.org/@restic"&gt;@resticbackup&lt;/a&gt; or subscribe to the &lt;a href="https://restic.net/blog/"&gt;project blog&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Restic is licensed under &lt;a href="https://opensource.org/licenses/BSD-2-Clause"&gt;BSD 2-Clause License&lt;/a&gt;. You can find the complete text in &lt;a href="https://raw.githubusercontent.com/restic/restic/master/LICENSE"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;p&gt;Backend integration tests for Google Cloud Storage and Microsoft Azure Blob Storage are sponsored by &lt;a href="https://appscode.com"&gt;AppsCode&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://appscode.com"&gt;&lt;img src="https://cdn.appscode.com/images/logo/appscode/ac-logo-color.png" alt="Sponsored by AppsCode"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XTLS/Xray-core</title>
      <link>https://github.com/XTLS/Xray-core</link>
      <description>&lt;p&gt;Xray, Penetrates Everything. Also the best v2ray-core. Where the magic happens. An open platform for various uses.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project X&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS"&gt;Project X&lt;/a&gt; originates from XTLS protocol, providing a set of network tools such as &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt; and &lt;a href="https://github.com/XTLS/REALITY"&gt;REALITY&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core#readme"&gt;README&lt;/a&gt; is open, so feel free to submit your project &lt;a href="https://github.com/XTLS/Xray-core/pulls"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donation &amp;amp; NFTs&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;Collect a Project X NFT to support the development of Project X!&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;&lt;img alt="Project X NFT" width="150px" src="https://raw2.seadn.io/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/7fa9ce900fb39b44226348db330e32/8b7fa9ce900fb39b44226348db330e32.svg?sanitize=true"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ETH/USDT/USDC: &lt;code&gt;0xDc3Fe44F0f25D13CACb1C4896CD0D321df3146Ee&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REALITY NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Related links: &lt;a href="https://opensea.io/collection/xtls"&gt;https://opensea.io/collection/xtls&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/3633"&gt;Announcement of NFTs by Project X&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/4113"&gt;XHTTP: Beyond REALITY&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/LICENSE"&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://xtls.github.io"&gt;Project X Official Website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXray"&gt;Project X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXtls"&gt;Project X Channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectVless"&gt;Project VLESS&lt;/a&gt; (Русский)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXhttp"&gt;Project XHTTP&lt;/a&gt; (Persian)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux Script 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-install"&gt;XTLS/Xray-install&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/team-cloudchaser/tempest"&gt;tempest&lt;/a&gt; (supports &lt;a href="https://systemd.io"&gt;&lt;code&gt;systemd&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/OpenRC/openrc"&gt;OpenRC&lt;/a&gt;; Linux-only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Docker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://ghcr.io/xtls/xray-core"&gt;ghcr.io/xtls/xray-core&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hub.docker.com/r/teddysun/xray"&gt;teddysun/xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/wulabing/xray_docker"&gt;wulabing/xray_docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Web Panel - &lt;strong&gt;WARNING: Please DO NOT USE plain HTTP panels like 3X-UI&lt;/strong&gt;, as they are believed to be bribed by Iran GFW for supporting plain HTTP by default and refused to change (&lt;a href="https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331"&gt;https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331&lt;/a&gt;), which has already put many users' data security in danger in the past few years. &lt;strong&gt;If you are already using 3X-UI, please switch to the following panels, which are verified to support HTTPS and SSH port forwarding only:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/panel"&gt;Remnawave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Gozargah/Marzban"&gt;Marzban&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/qist/xray-ui"&gt;Xray-UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/Hiddify-Manager"&gt;Hiddify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;One Click 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zxcvos/Xray-script"&gt;Xray-REALITY&lt;/a&gt;, &lt;a href="https://github.com/sajjaddg/xray-reality"&gt;xray-reality&lt;/a&gt;, &lt;a href="https://github.com/aleskxyz/reality-ezpz"&gt;reality-ezpz&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hello-yunshu/Xray_bash_onekey"&gt;Xray_bash_onekey&lt;/a&gt;, &lt;a href="https://github.com/LordPenguin666/XTool"&gt;XTool&lt;/a&gt;, &lt;a href="https://github.com/vpainless/vpainless"&gt;VPainLess&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mack-a/v2ray-agent"&gt;v2ray-agent&lt;/a&gt;, &lt;a href="https://github.com/wulabing/Xray_onekey"&gt;Xray_onekey&lt;/a&gt;, &lt;a href="https://github.com/proxysu/ProxySU"&gt;ProxySU&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Magisk 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Asterisk4Magisk/Xray4Magisk"&gt;Xray4Magisk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/E7KMbb/Xray_For_Magisk"&gt;Xray_For_Magisk&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Homebrew 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;brew install xray&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Example 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/REALITY#readme"&gt;VLESS-XTLS-uTLS-REALITY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/VLESS-TCP-XTLS-Vision"&gt;VLESS-TCP-XTLS-Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/All-in-One-fallbacks-Nginx"&gt;All-in-One-fallbacks-Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray-examples 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples"&gt;XTLS/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-examples"&gt;chika0801/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lxhao61/integrated-examples"&gt;lxhao61/integrated-examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tutorial 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-install"&gt;XTLS Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cscot.pages.dev/2023/03/02/Xray-REALITY-tutorial/"&gt;REALITY (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SasukeFreestyle/XTLS-Iran-Reality"&gt;XTLS-Iran-Reality (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://computerscot.github.io/vless-xtls-utls-reality-steal-oneself.html"&gt;Xray REALITY with 'steal oneself' (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://g800.pages.dev/wireguard"&gt;Xray with WireGuard inbound (English)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;GUI Clients&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenWrt 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/xiaorouji/openwrt-passwall"&gt;PassWall&lt;/a&gt;, &lt;a href="https://github.com/xiaorouji/openwrt-passwall2"&gt;PassWall 2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fw876/helloworld"&gt;ShadowSocksR Plus+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yichya/luci-app-xray"&gt;luci-app-xray&lt;/a&gt; (&lt;a href="https://github.com/yichya/openwrt-xray"&gt;openwrt-xray&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Asuswrt-Merlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/DanielLavrushin/asuswrt-merlin-xrayui"&gt;XRAYUI&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayN"&gt;v2rayN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/InvisibleManVPN/InvisibleMan-XRayClient"&gt;Invisible Man - Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Android 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayNG"&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/X-flutter"&gt;X-flutter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SaeedDev94/Xray"&gt;SaeedDev94/Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lhear/SimpleXray"&gt;SimpleXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt; (&lt;a href="https://apps.apple.com/us/app/happ-proxy-utility-for-tv/id6748297274"&gt;tvOS&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/streisand/id6450534064"&gt;Streisand&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;macOS arm64 &amp;amp; x64 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yanue/V2rayU"&gt;V2rayU&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tzmax/V2RayXS"&gt;V2RayXS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/v2rayA/v2rayA"&gt;v2rayA&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ketetefid/GorzRay"&gt;GorzRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Others that support VLESS, XTLS, REALITY, XUDP, PLUX...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/shadowrocket/id932747118"&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/us/app/loon/id1373567447"&gt;Loon&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Tools 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lilendian0x00/xray-knife"&gt;xray-knife&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kutovoys/xray-checker"&gt;xray-checker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Wrapper 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/libXray"&gt;XTLS/libXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/xtls-sdk"&gt;xtls-sdk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/xtlsapi"&gt;xtlsapi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/AndroidLibXrayLite"&gt;AndroidLibXrayLite&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Xray-core-python"&gt;Xray-core-python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XVGuardian/xray-api"&gt;xray-api&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR"&gt;XrayR&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR-release"&gt;XrayR-release&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/missuo/XrayR-V2Board"&gt;XrayR-V2Board&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Cores 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amnezia-vpn"&gt;Amnezia VPN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;mihomo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SagerNet/sing-box"&gt;sing-box&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/XTLS/Xray-core"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-core/releases/tag/v1.0.0"&gt;Xray-core v1.0.0&lt;/a&gt; was forked from &lt;a href="https://github.com/v2fly/v2ray-core/commit/9a03cc5c98d04cc28320fcee26dbc236b3291256"&gt;v2fly-core 9a03cc5&lt;/a&gt;, and we have made &amp;amp; accumulated a huge number of enhancements over time, check &lt;a href="https://github.com/XTLS/Xray-core/releases"&gt;the release notes for each version&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For third-party projects used in &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt;, check your local or &lt;a href="https://github.com/XTLS/Xray-core/raw/main/go.mod"&gt;the latest go.mod&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;One-line Compilation&lt;/h2&gt; 
&lt;h3&gt;Windows (PowerShell)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$env:CGO_ENABLED=0
go build -o xray.exe -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux / macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reproducible Releases&lt;/h3&gt; 
&lt;p&gt;Make sure that you are using the same Go version, and remember to set the git commit id (7 bytes):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-X github.com/xtls/xray-core/core.build=REPLACE -s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/XTLS/Xray-core"&gt;&lt;img src="https://starchart.cc/XTLS/Xray-core.svg?sanitize=true" alt="Stargazers over time"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>miniflux/v2</title>
      <link>https://github.com/miniflux/v2</link>
      <description>&lt;p&gt;Minimalist and opinionated feed reader&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Miniflux 2&lt;/h1&gt; 
&lt;p&gt;Miniflux is a minimalist and opinionated feed reader. It's simple, fast, lightweight and super easy to install.&lt;/p&gt; 
&lt;p&gt;Official website: &lt;a href="https://miniflux.app"&gt;https://miniflux.app&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Feed Reader&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported feed formats: Atom 0.3/1.0, RSS 1.0/2.0, and JSON Feed 1.0/1.1.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/OPML"&gt;OPML&lt;/a&gt; file import/export and URL import.&lt;/li&gt; 
 &lt;li&gt;Supports multiple attachments (podcasts, videos, music, and images enclosures).&lt;/li&gt; 
 &lt;li&gt;Plays videos from YouTube directly inside Miniflux.&lt;/li&gt; 
 &lt;li&gt;Organizes articles using categories and bookmarks.&lt;/li&gt; 
 &lt;li&gt;Share individual articles publicly.&lt;/li&gt; 
 &lt;li&gt;Fetches website icons (favicons).&lt;/li&gt; 
 &lt;li&gt;Saves articles to third-party services.&lt;/li&gt; 
 &lt;li&gt;Provides full-text search (powered by Postgres).&lt;/li&gt; 
 &lt;li&gt;Available in 20 languages: Portuguese (Brazilian), Chinese (Simplified and Traditional), Dutch, English (US), Finnish, French, German, Greek, Hindi, Indonesian, Italian, Japanese, Polish, Romanian, Russian, Taiwanese POJ, Ukrainian, Spanish, and Turkish.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Privacy and Security&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Removes pixel trackers.&lt;/li&gt; 
 &lt;li&gt;Strips tracking parameters from URLs (e.g., &lt;code&gt;utm_source&lt;/code&gt;, &lt;code&gt;utm_medium&lt;/code&gt;, &lt;code&gt;utm_campaign&lt;/code&gt;, &lt;code&gt;fbclid&lt;/code&gt;, etc.).&lt;/li&gt; 
 &lt;li&gt;Retrieves original links when feeds are sourced from FeedBurner.&lt;/li&gt; 
 &lt;li&gt;Opens external links with attributes &lt;code&gt;rel="noopener noreferrer" referrerpolicy="no-referrer"&lt;/code&gt; for improved security.&lt;/li&gt; 
 &lt;li&gt;Implements the HTTP header &lt;code&gt;Referrer-Policy: no-referrer&lt;/code&gt; to prevent referrer leakage.&lt;/li&gt; 
 &lt;li&gt;Provides a media proxy to avoid tracking and resolve mixed content warnings when using HTTPS.&lt;/li&gt; 
 &lt;li&gt;Plays YouTube videos via the privacy-focused domain &lt;code&gt;youtube-nocookie.com&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Supports alternative YouTube video players such as &lt;a href="https://invidio.us"&gt;Invidious&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Blocks external JavaScript to prevent tracking and enhance security.&lt;/li&gt; 
 &lt;li&gt;Sanitizes external content before rendering it.&lt;/li&gt; 
 &lt;li&gt;Enforces a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP"&gt;Content Security&lt;/a&gt; and a &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API"&gt;Trusted Types Policy&lt;/a&gt; to only application JavaScript and blocks inline scripts and styles.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Bot Protection Bypass Mechanisms&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optionally disable HTTP/2 to mitigate fingerprinting.&lt;/li&gt; 
 &lt;li&gt;Allows configuration of a custom user agent.&lt;/li&gt; 
 &lt;li&gt;Supports adding custom cookies for specific use cases.&lt;/li&gt; 
 &lt;li&gt;Enables the use of proxies for enhanced privacy or bypassing restrictions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Content Manipulation&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fetches the original article and extracts only the relevant content using a local Readability parser.&lt;/li&gt; 
 &lt;li&gt;Allows custom scraper rules based on &lt;abbr title="Cascading Style Sheets"&gt;CSS&lt;/abbr&gt; selectors.&lt;/li&gt; 
 &lt;li&gt;Supports custom rewriting rules for content manipulation.&lt;/li&gt; 
 &lt;li&gt;Provides a regex filter to include or exclude articles based on specific patterns.&lt;/li&gt; 
 &lt;li&gt;Optionally permits self-signed or invalid certificates (disabled by default).&lt;/li&gt; 
 &lt;li&gt;Scrapes YouTube's website to retrieve video duration as read time or uses the YouTube API (disabled by default).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;User Interface&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Optimized stylesheet for readability.&lt;/li&gt; 
 &lt;li&gt;Responsive design that adapts seamlessly to desktop, tablet, and mobile devices.&lt;/li&gt; 
 &lt;li&gt;Minimalistic and distraction-free user interface.&lt;/li&gt; 
 &lt;li&gt;No requirement to download an app from Apple App Store or Google Play Store.&lt;/li&gt; 
 &lt;li&gt;Can be added directly to the home screen for quick access.&lt;/li&gt; 
 &lt;li&gt;Supports a wide range of keyboard shortcuts for efficient navigation.&lt;/li&gt; 
 &lt;li&gt;Optional touch gesture support for navigation on mobile devices.&lt;/li&gt; 
 &lt;li&gt;Custom stylesheets and JavaScript to personalize the user interface to your preferences.&lt;/li&gt; 
 &lt;li&gt;Themes: 
  &lt;ul&gt; 
   &lt;li&gt;Light (Sans-Serif)&lt;/li&gt; 
   &lt;li&gt;Light (Serif)&lt;/li&gt; 
   &lt;li&gt;Dark (Sans-Serif)&lt;/li&gt; 
   &lt;li&gt;Dark (Serif)&lt;/li&gt; 
   &lt;li&gt;System (Sans-Serif) – Automatically switches between Dark and Light themes based on system preferences.&lt;/li&gt; 
   &lt;li&gt;System (Serif)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Integrations&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;25+ integrations with third-party services: &lt;a href="https://github.com/caronc/apprise"&gt;Apprise&lt;/a&gt;, &lt;a href="https://sr.ht/~bouncepaw/betula/"&gt;Betula&lt;/a&gt;, &lt;a href="https://cubox.cc/"&gt;Cubox&lt;/a&gt;, &lt;a href="https://discord.com/"&gt;Discord&lt;/a&gt;, &lt;a href="https://github.com/jonschoning/espial"&gt;Espial&lt;/a&gt;, &lt;a href="https://www.instapaper.com/"&gt;Instapaper&lt;/a&gt;, &lt;a href="https://www.linkace.org/"&gt;LinkAce&lt;/a&gt;, &lt;a href="https://github.com/sissbruecker/linkding"&gt;Linkding&lt;/a&gt;, &lt;a href="https://linkwarden.app/"&gt;LinkWarden&lt;/a&gt;, &lt;a href="https://matrix.org"&gt;Matrix&lt;/a&gt;, &lt;a href="https://www.notion.com/"&gt;Notion&lt;/a&gt;, &lt;a href="https://ntfy.sh/"&gt;Ntfy&lt;/a&gt;, &lt;a href="https://keeper.nunux.org/"&gt;Nunux Keeper&lt;/a&gt;, &lt;a href="https://pinboard.in/"&gt;Pinboard&lt;/a&gt;, &lt;a href="https://pushover.net"&gt;Pushover&lt;/a&gt;, &lt;a href="https://raindrop.io/"&gt;RainDrop&lt;/a&gt;, &lt;a href="https://readeck.org/en/"&gt;Readeck&lt;/a&gt;, &lt;a href="https://readwise.io/read"&gt;Readwise Reader&lt;/a&gt;, &lt;a href="https://rss-bridge.org/"&gt;RssBridge&lt;/a&gt;, &lt;a href="https://github.com/shaarli/Shaarli"&gt;Shaarli&lt;/a&gt;, &lt;a href="https://github.com/go-shiori/shiori"&gt;Shiori&lt;/a&gt;, &lt;a href="https://slack.com/"&gt;Slack&lt;/a&gt;, &lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt;, &lt;a href="https://www.wallabag.org/"&gt;Wallabag&lt;/a&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Bookmarklet for subscribing to websites directly from any web browser.&lt;/li&gt; 
 &lt;li&gt;Webhooks for real-time notifications or custom integrations.&lt;/li&gt; 
 &lt;li&gt;Compatibility with existing mobile applications using the Fever or Google Reader API.&lt;/li&gt; 
 &lt;li&gt;REST API with client libraries available in &lt;a href="https://github.com/miniflux/v2/tree/main/client"&gt;Go&lt;/a&gt; and &lt;a href="https://github.com/miniflux/python-client"&gt;Python&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local username and password.&lt;/li&gt; 
 &lt;li&gt;Passkeys (&lt;a href="https://en.wikipedia.org/wiki/WebAuthn"&gt;WebAuthn&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;Google (OAuth2).&lt;/li&gt; 
 &lt;li&gt;Generic OpenID Connect.&lt;/li&gt; 
 &lt;li&gt;Reverse-Proxy authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Technical Stuff&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Written in &lt;a href="https://golang.org/"&gt;Go (Golang)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Single binary compiled statically without dependency.&lt;/li&gt; 
 &lt;li&gt;Works only with &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Does not use any ORM or any complicated frameworks.&lt;/li&gt; 
 &lt;li&gt;Uses modern vanilla JavaScript only when necessary.&lt;/li&gt; 
 &lt;li&gt;All static files are bundled into the application binary using the Go &lt;code&gt;embed&lt;/code&gt; package.&lt;/li&gt; 
 &lt;li&gt;Supports the Systemd &lt;code&gt;sd_notify&lt;/code&gt; protocol for process monitoring.&lt;/li&gt; 
 &lt;li&gt;Configures HTTPS automatically with Let's Encrypt.&lt;/li&gt; 
 &lt;li&gt;Allows the use of custom &lt;abbr title="Secure Sockets Layer"&gt;SSL&lt;/abbr&gt; certificates.&lt;/li&gt; 
 &lt;li&gt;Supports &lt;a href="https://en.wikipedia.org/wiki/HTTP/2"&gt;HTTP/2&lt;/a&gt; when TLS is enabled.&lt;/li&gt; 
 &lt;li&gt;Updates feeds in the background using an internal scheduler or a traditional cron job.&lt;/li&gt; 
 &lt;li&gt;Uses native lazy loading for images and iframes.&lt;/li&gt; 
 &lt;li&gt;Compatible only with modern browsers.&lt;/li&gt; 
 &lt;li&gt;Adheres to the &lt;a href="https://12factor.net/"&gt;Twelve-Factor App&lt;/a&gt; methodology.&lt;/li&gt; 
 &lt;li&gt;Provides official Debian/RPM packages and pre-built binaries.&lt;/li&gt; 
 &lt;li&gt;Publishes a Docker image to Docker Hub, GitHub Registry, and Quay.io Registry, with ARM architecture support.&lt;/li&gt; 
 &lt;li&gt;Uses a limited amount of third-party go dependencies&lt;/li&gt; 
 &lt;li&gt;Has a comprehensive testsuite, with both unit tests and integration tests.&lt;/li&gt; 
 &lt;li&gt;Only uses a couple of MB of memory and a negligible amount of CPU, even with several hundreds of feeds.&lt;/li&gt; 
 &lt;li&gt;Respects/sends Last-Modified, If-Modified-Since, If-None-Match, Cache-Control, Expires and ETags headers, and has a default polling interval of 1h.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The Miniflux documentation is available here: &lt;a href="https://miniflux.app/docs/"&gt;https://miniflux.app/docs/&lt;/a&gt; (&lt;a href="https://miniflux.app/miniflux.1.html"&gt;Man page&lt;/a&gt;)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/opinionated.html"&gt;Opinionated?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/features.html"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/requirements.html"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/installation.html"&gt;Installation Instructions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/upgrade.html"&gt;Upgrading to a New Version&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/configuration.html"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/cli.html"&gt;Command Line Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/ui.html"&gt;User Interface Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/keyboard_shortcuts.html"&gt;Keyboard Shortcuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/#integrations"&gt;Integration with External Services&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/rules.html"&gt;Rewrite and Scraper Rules&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/api.html"&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/development.html"&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/docs/i18n.html"&gt;Internationalization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://miniflux.app/faq.html"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p&gt;Default theme:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://miniflux.app/images/overview.png" alt="Default theme"&gt;&lt;/p&gt; 
&lt;p&gt;Dark theme when using keyboard navigation:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://miniflux.app/images/item-selection-black-theme.png" alt="Dark theme"&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Authors: Frédéric Guillot - &lt;a href="https://github.com/miniflux/v2/graphs/contributors"&gt;List of contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Distributed under Apache 2.0 License&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mudler/LocalAI</title>
      <link>https://github.com/mudler/LocalAI</link>
      <description>&lt;p&gt;🤖 The free, Open Source alternative to OpenAI, Claude and others. Self-hosted and local-first. Drop-in replacement for OpenAI, running on consumer-grade hardware. No GPU required. Runs gguf, transformers, diffusers and many more models architectures. Features: Generate Text, Audio, Video, Images, Voice Cloning, Distributed, P2P inference&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br&gt; &lt;img width="300" src="https://raw.githubusercontent.com/mudler/LocalAI/master/core/http/static/logo.png"&gt; &lt;br&gt; &lt;br&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/go-skynet/LocalAI/fork" target="blank"&gt; &lt;img src="https://img.shields.io/github/forks/go-skynet/LocalAI?style=for-the-badge" alt="LocalAI forks"&gt; &lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/stargazers" target="blank"&gt; &lt;img src="https://img.shields.io/github/stars/go-skynet/LocalAI?style=for-the-badge" alt="LocalAI stars"&gt; &lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/pulls" target="blank"&gt; &lt;img src="https://img.shields.io/github/issues-pr/go-skynet/LocalAI?style=for-the-badge" alt="LocalAI pull-requests"&gt; &lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/releases"&gt; &lt;img src="https://img.shields.io/github/release/go-skynet/LocalAI?&amp;amp;label=Latest&amp;amp;style=for-the-badge"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://hub.docker.com/r/localai/localai" target="blank"&gt; &lt;img src="https://img.shields.io/badge/dockerhub-images-important.svg?logo=Docker" alt="LocalAI Docker hub"&gt; &lt;/a&gt; &lt;a href="https://quay.io/repository/go-skynet/local-ai?tab=tags&amp;amp;tag=latest" target="blank"&gt; &lt;img src="https://img.shields.io/badge/quay.io-images-important.svg?" alt="LocalAI Quay.io"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://twitter.com/LocalAI_API" target="blank"&gt; &lt;img src="https://img.shields.io/badge/X-%23000000.svg?style=for-the-badge&amp;amp;logo=X&amp;amp;logoColor=white&amp;amp;label=LocalAI_API" alt="Follow LocalAI_API"&gt; &lt;/a&gt; &lt;a href="https://discord.gg/uJAeKSAGDy" target="blank"&gt; &lt;img src="https://dcbadge.vercel.app/api/server/uJAeKSAGDy?style=flat-square&amp;amp;theme=default-inverted" alt="Join LocalAI Discord Community"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/5539" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/5539" alt="mudler%2FLocalAI | Trendshift" style="width: 250px; height: 55px;" width="250" height="55"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;span&gt;💡&lt;/span&gt; Get help - &lt;a href="https://localai.io/faq/"&gt;❓FAQ&lt;/a&gt; &lt;a href="https://github.com/go-skynet/LocalAI/discussions"&gt;💭Discussions&lt;/a&gt; &lt;a href="https://discord.gg/uJAeKSAGDy"&gt;&lt;span&gt;💬&lt;/span&gt; Discord&lt;/a&gt; &lt;a href="https://localai.io/"&gt;&lt;span&gt;📖&lt;/span&gt; Documentation website&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://localai.io/basics/getting_started/"&gt;💻 Quickstart&lt;/a&gt; &lt;a href="https://models.localai.io/"&gt;🖼️ Models&lt;/a&gt; &lt;a href="https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap"&gt;🚀 Roadmap&lt;/a&gt; &lt;a href="https://demo.localai.io"&gt;🥽 Demo&lt;/a&gt; &lt;a href="https://explorer.localai.io"&gt;🌍 Explorer&lt;/a&gt; &lt;a href="https://github.com/mudler/LocalAI-examples"&gt;🛫 Examples&lt;/a&gt; Try on &lt;a href="https://t.me/localaiofficial_bot"&gt;&lt;img src="https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&amp;amp;logo=telegram&amp;amp;logoColor=white" alt="Telegram"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/test.yml/badge.svg?sanitize=true" alt="tests"&gt;&lt;/a&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/release.yaml/badge.svg?sanitize=true" alt="Build and Release"&gt;&lt;/a&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/image.yml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/image.yml/badge.svg?sanitize=true" alt="build container images"&gt;&lt;/a&gt;&lt;a href="https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml"&gt;&lt;img src="https://github.com/go-skynet/LocalAI/actions/workflows/bump_deps.yaml/badge.svg?sanitize=true" alt="Bump dependencies"&gt;&lt;/a&gt;&lt;a href="https://artifacthub.io/packages/search?repo=localai"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/localai" alt="Artifact Hub"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;LocalAI&lt;/strong&gt; is the free, Open Source OpenAI alternative. LocalAI act as a drop-in replacement REST API that's compatible with OpenAI (Elevenlabs, Anthropic... ) API specifications for local AI inferencing. It allows you to run LLMs, generate images, audio (and not only) locally or on-prem with consumer grade hardware, supporting multiple model families. Does not require GPU. It is created and maintained by &lt;a href="https://github.com/mudler"&gt;Ettore Di Giacinto&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📚🆕 Local Stack Family&lt;/h2&gt; 
&lt;p&gt;🆕 LocalAI is now part of a comprehensive suite of AI tools designed to work together:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;a href="https://github.com/mudler/LocalAGI"&gt; &lt;img src="https://raw.githubusercontent.com/mudler/LocalAGI/refs/heads/main/webui/react-ui/public/logo_2.png" width="300" alt="LocalAGI Logo"&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;h3&gt;&lt;a href="https://github.com/mudler/LocalAGI"&gt;LocalAGI&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;A powerful Local AI agent management platform that serves as a drop-in replacement for OpenAI's Responses API, enhanced with advanced agentic capabilities.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;a href="https://github.com/mudler/LocalRecall"&gt; &lt;img src="https://raw.githubusercontent.com/mudler/LocalRecall/refs/heads/main/static/localrecall_horizontal.png" width="300" alt="LocalRecall Logo"&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="50%" valign="top"&gt; &lt;h3&gt;&lt;a href="https://github.com/mudler/LocalRecall"&gt;LocalRecall&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;A REST-ful API and knowledge base management system that provides persistent memory and storage capabilities for AI agents.&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Talk Interface&lt;/th&gt; 
   &lt;th&gt;Generate Audio&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_tts.png" alt="Screenshot 2025-03-31 at 12-01-36 LocalAI - Talk"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_tts.png" alt="Screenshot 2025-03-31 at 12-01-29 LocalAI - Generate audio with voice-en-us-ryan-low"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Models Overview&lt;/th&gt; 
   &lt;th&gt;Generate Images&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_gallery.png" alt="Screenshot 2025-03-31 at 12-01-20 LocalAI - Models"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_image.png" alt="Screenshot 2025-03-31 at 12-31-41 LocalAI - Generate images with flux 1-dev"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Chat Interface&lt;/th&gt; 
   &lt;th&gt;Home&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_chat.png" alt="Screenshot 2025-03-31 at 11-57-44 LocalAI - Chat with localai-functioncall-qwen2 5-7b-v0 5"&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_home.png" alt="Screenshot 2025-03-31 at 11-57-23 LocalAI API - c2a39e3 (c2a39e3639227cfd94ffffe9f5691239acc275a8)"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Login&lt;/th&gt; 
   &lt;th&gt;Swarm&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_login.png" alt="Screenshot 2025-03-31 at 12-09-59 "&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/mudler/LocalAI/master/docs/assets/images/screenshots/screenshot_p2p.png" alt="Screenshot 2025-03-31 at 12-10-39 LocalAI - P2P dashboard"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;💻 Quickstart&lt;/h2&gt; 
&lt;p&gt;Run the installer script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Basic installation
curl https://localai.io/install.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more installation options, see &lt;a href="https://localai.io/docs/advanced/installer/"&gt;Installer Options&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Or run with docker:&lt;/p&gt; 
&lt;h3&gt;CPU only image:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -ti --name local-ai -p 8080:8080 localai/localai:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NVIDIA GPU Images:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# CUDA 12.0
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-gpu-nvidia-cuda-12

# CUDA 11.7
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-gpu-nvidia-cuda-11

# NVIDIA Jetson (L4T) ARM64
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-nvidia-l4t-arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AMD GPU Images (ROCm):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -ti --name local-ai -p 8080:8080 --device=/dev/kfd --device=/dev/dri --group-add=video localai/localai:latest-gpu-hipblas
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Intel GPU Images (oneAPI):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Intel GPU with FP16 support
docker run -ti --name local-ai -p 8080:8080 --device=/dev/dri/card1 --device=/dev/dri/renderD128 localai/localai:latest-gpu-intel-f16

# Intel GPU with FP32 support
docker run -ti --name local-ai -p 8080:8080 --device=/dev/dri/card1 --device=/dev/dri/renderD128 localai/localai:latest-gpu-intel-f32
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Vulkan GPU Images:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-gpu-vulkan
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;AIO Images (pre-downloaded models):&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# CPU version
docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-aio-cpu

# NVIDIA CUDA 12 version
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-aio-gpu-nvidia-cuda-12

# NVIDIA CUDA 11 version
docker run -ti --name local-ai -p 8080:8080 --gpus all localai/localai:latest-aio-gpu-nvidia-cuda-11

# Intel GPU version
docker run -ti --name local-ai -p 8080:8080 localai/localai:latest-aio-gpu-intel-f16

# AMD GPU version
docker run -ti --name local-ai -p 8080:8080 --device=/dev/kfd --device=/dev/dri --group-add=video localai/localai:latest-aio-gpu-hipblas
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information about the AIO images and pre-downloaded models, see &lt;a href="https://localai.io/basics/container/"&gt;Container Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To load models:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# From the model gallery (see available models with `local-ai models list`, in the WebUI from the model tab, or visiting https://models.localai.io)
local-ai run llama-3.2-1b-instruct:q4_k_m
# Start LocalAI with the phi-2 model directly from huggingface
local-ai run huggingface://TheBloke/phi-2-GGUF/phi-2.Q8_0.gguf
# Install and run a model from the Ollama OCI registry
local-ai run ollama://gemma:2b
# Run a model from a configuration file
local-ai run https://gist.githubusercontent.com/.../phi-2.yaml
# Install and run a model from a standard OCI registry (e.g., Docker Hub)
local-ai run oci://localai/phi-2:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚡ &lt;strong&gt;Automatic Backend Detection&lt;/strong&gt;: When you install models from the gallery or YAML files, LocalAI automatically detects your system's GPU capabilities (NVIDIA, AMD, Intel) and downloads the appropriate backend. For advanced configuration options, see &lt;a href="https://localai.io/features/gpu-acceleration/#automatic-backend-detection"&gt;GPU Acceleration&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For more information, see &lt;a href="https://localai.io/basics/getting_started/index.html"&gt;💻 Getting started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📰 Latest project news&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;July/August 2025: 🔍 &lt;a href="https://localai.io/features/object-detection/"&gt;Object Detection&lt;/a&gt; added to the API featuring &lt;a href="https://github.com/roboflow/rf-detr"&gt;rf-detr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;July 2025: All backends migrated outside of the main binary. LocalAI is now more lightweight, small, and automatically downloads the required backend to run the model. &lt;a href="https://github.com/mudler/LocalAI/releases/tag/v3.2.0"&gt;Read the release notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;June 2025: &lt;a href="https://github.com/mudler/LocalAI/pull/5607"&gt;Backend management&lt;/a&gt; has been added. Attention: extras images are going to be deprecated from the next release! Read &lt;a href="https://github.com/mudler/LocalAI/pull/5607"&gt;the backend management PR&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;May 2025: &lt;a href="https://github.com/mudler/LocalAI/pull/5466"&gt;Audio input&lt;/a&gt; and &lt;a href="https://github.com/mudler/LocalAI/pull/5396"&gt;Reranking&lt;/a&gt; in llama.cpp backend, &lt;a href="https://github.com/mudler/LocalAI/pull/5392"&gt;Realtime API&lt;/a&gt;, Support to Gemma, SmollVLM, and more multimodal models (available in the gallery).&lt;/li&gt; 
 &lt;li&gt;May 2025: Important: image name changes &lt;a href="https://github.com/mudler/LocalAI/releases/tag/v2.29.0"&gt;See release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Apr 2025: Rebrand, WebUI enhancements&lt;/li&gt; 
 &lt;li&gt;Apr 2025: &lt;a href="https://github.com/mudler/LocalAGI"&gt;LocalAGI&lt;/a&gt; and &lt;a href="https://github.com/mudler/LocalRecall"&gt;LocalRecall&lt;/a&gt; join the LocalAI family stack.&lt;/li&gt; 
 &lt;li&gt;Apr 2025: WebUI overhaul, AIO images updates&lt;/li&gt; 
 &lt;li&gt;Feb 2025: Backend cleanup, Breaking changes, new backends (kokoro, OutelTTS, faster-whisper), Nvidia L4T images&lt;/li&gt; 
 &lt;li&gt;Jan 2025: LocalAI model release: &lt;a href="https://huggingface.co/mudler/LocalAI-functioncall-phi-4-v0.3"&gt;https://huggingface.co/mudler/LocalAI-functioncall-phi-4-v0.3&lt;/a&gt;, SANA support in diffusers: &lt;a href="https://github.com/mudler/LocalAI/pull/4603"&gt;https://github.com/mudler/LocalAI/pull/4603&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dec 2024: stablediffusion.cpp backend (ggml) added ( &lt;a href="https://github.com/mudler/LocalAI/pull/4289"&gt;https://github.com/mudler/LocalAI/pull/4289&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;Nov 2024: Bark.cpp backend added ( &lt;a href="https://github.com/mudler/LocalAI/pull/4287"&gt;https://github.com/mudler/LocalAI/pull/4287&lt;/a&gt; )&lt;/li&gt; 
 &lt;li&gt;Nov 2024: Voice activity detection models (&lt;strong&gt;VAD&lt;/strong&gt;) added to the API: &lt;a href="https://github.com/mudler/LocalAI/pull/4204"&gt;https://github.com/mudler/LocalAI/pull/4204&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Oct 2024: examples moved to &lt;a href="https://github.com/mudler/LocalAI-examples"&gt;LocalAI-examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Aug 2024: 🆕 FLUX-1, &lt;a href="https://explorer.localai.io"&gt;P2P Explorer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;July 2024: 🔥🔥 🆕 P2P Dashboard, LocalAI Federated mode and AI Swarms: &lt;a href="https://github.com/mudler/LocalAI/pull/2723"&gt;https://github.com/mudler/LocalAI/pull/2723&lt;/a&gt;. P2P Global community pools: &lt;a href="https://github.com/mudler/LocalAI/issues/3113"&gt;https://github.com/mudler/LocalAI/issues/3113&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;May 2024: 🔥🔥 Decentralized P2P llama.cpp: &lt;a href="https://github.com/mudler/LocalAI/pull/2343"&gt;https://github.com/mudler/LocalAI/pull/2343&lt;/a&gt; (peer2peer llama.cpp!) 👉 Docs &lt;a href="https://localai.io/features/distribute/"&gt;https://localai.io/features/distribute/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;May 2024: 🔥🔥 Distributed inferencing: &lt;a href="https://github.com/mudler/LocalAI/pull/2324"&gt;https://github.com/mudler/LocalAI/pull/2324&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;April 2024: Reranker API: &lt;a href="https://github.com/mudler/LocalAI/pull/2121"&gt;https://github.com/mudler/LocalAI/pull/2121&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Roadmap items: &lt;a href="https://github.com/mudler/LocalAI/issues?q=is%3Aissue+is%3Aopen+label%3Aroadmap"&gt;List of issues&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 &lt;a href="https://localai.io/features/"&gt;Features&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;🧩 &lt;a href="https://localai.io/backends/"&gt;Backend Gallery&lt;/a&gt;: Install/remove backends on the fly, powered by OCI images — fully customizable and API-driven.&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://localai.io/features/text-generation/"&gt;Text generation with GPTs&lt;/a&gt; (&lt;code&gt;llama.cpp&lt;/code&gt;, &lt;code&gt;transformers&lt;/code&gt;, &lt;code&gt;vllm&lt;/code&gt; ... &lt;a href="https://localai.io/model-compatibility/index.html#model-compatibility-table"&gt;&lt;span&gt;📖&lt;/span&gt; and more&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;🗣 &lt;a href="https://localai.io/features/text-to-audio/"&gt;Text to Audio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔈 &lt;a href="https://localai.io/features/audio-to-text/"&gt;Audio to Text&lt;/a&gt; (Audio transcription with &lt;code&gt;whisper.cpp&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;a href="https://localai.io/features/image-generation"&gt;Image generation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔥 &lt;a href="https://localai.io/features/openai-functions/"&gt;OpenAI-alike tools API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🧠 &lt;a href="https://localai.io/features/embeddings/"&gt;Embeddings generation for vector databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;✍️ &lt;a href="https://localai.io/features/constrained_grammars/"&gt;Constrained grammars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🖼️ &lt;a href="https://localai.io/models/"&gt;Download Models directly from Huggingface &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🥽 &lt;a href="https://localai.io/features/gpt-vision/"&gt;Vision API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔍 &lt;a href="https://localai.io/features/object-detection/"&gt;Object Detection&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📈 &lt;a href="https://localai.io/features/reranker/"&gt;Reranker API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🆕🖧 &lt;a href="https://localai.io/features/distribute/"&gt;P2P Inferencing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mudler/LocalAGI"&gt;Agentic capabilities&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🔊 Voice activity detection (Silero-VAD support)&lt;/li&gt; 
 &lt;li&gt;🌍 Integrated WebUI!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔗 Community and integrations&lt;/h3&gt; 
&lt;p&gt;Build and deploy custom containers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sozercan/aikit"&gt;https://github.com/sozercan/aikit&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;WebUIs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jirubizu/localai-admin"&gt;https://github.com/Jirubizu/localai-admin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-skynet/LocalAI-frontend"&gt;https://github.com/go-skynet/LocalAI-frontend&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;QA-Pilot(An interactive chat project that leverages LocalAI LLMs for rapid understanding and navigation of GitHub code repository) &lt;a href="https://github.com/reid41/QA-Pilot"&gt;https://github.com/reid41/QA-Pilot&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Model galleries&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-skynet/model-gallery"&gt;https://github.com/go-skynet/model-gallery&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Other:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Helm chart &lt;a href="https://github.com/go-skynet/helm-charts"&gt;https://github.com/go-skynet/helm-charts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;VSCode extension &lt;a href="https://github.com/badgooooor/localai-vscode-plugin"&gt;https://github.com/badgooooor/localai-vscode-plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Langchain: &lt;a href="https://python.langchain.com/docs/integrations/providers/localai/"&gt;https://python.langchain.com/docs/integrations/providers/localai/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Terminal utility &lt;a href="https://github.com/djcopley/ShellOracle"&gt;https://github.com/djcopley/ShellOracle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Local Smart assistant &lt;a href="https://github.com/mudler/LocalAGI"&gt;https://github.com/mudler/LocalAGI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Home Assistant &lt;a href="https://github.com/sammcj/homeassistant-localai"&gt;https://github.com/sammcj/homeassistant-localai&lt;/a&gt; / &lt;a href="https://github.com/drndos/hass-openai-custom-conversation"&gt;https://github.com/drndos/hass-openai-custom-conversation&lt;/a&gt; / &lt;a href="https://github.com/valentinfrlch/ha-gpt4vision"&gt;https://github.com/valentinfrlch/ha-gpt4vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord bot &lt;a href="https://github.com/mudler/LocalAGI/tree/main/examples/discord"&gt;https://github.com/mudler/LocalAGI/tree/main/examples/discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Slack bot &lt;a href="https://github.com/mudler/LocalAGI/tree/main/examples/slack"&gt;https://github.com/mudler/LocalAGI/tree/main/examples/slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Shell-Pilot(Interact with LLM using LocalAI models via pure shell scripts on your Linux or MacOS system) &lt;a href="https://github.com/reid41/shell-pilot"&gt;https://github.com/reid41/shell-pilot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Telegram bot &lt;a href="https://github.com/mudler/LocalAI/tree/master/examples/telegram-bot"&gt;https://github.com/mudler/LocalAI/tree/master/examples/telegram-bot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Another Telegram Bot &lt;a href="https://github.com/JackBekket/Hellper"&gt;https://github.com/JackBekket/Hellper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Auto-documentation &lt;a href="https://github.com/JackBekket/Reflexia"&gt;https://github.com/JackBekket/Reflexia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Github bot which answer on issues, with code and documentation as context &lt;a href="https://github.com/JackBekket/GitHelper"&gt;https://github.com/JackBekket/GitHelper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Github Actions: &lt;a href="https://github.com/marketplace/actions/start-localai"&gt;https://github.com/marketplace/actions/start-localai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Examples: &lt;a href="https://github.com/mudler/LocalAI/tree/master/examples/"&gt;https://github.com/mudler/LocalAI/tree/master/examples/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🔗 Resources&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/docs/advanced/fine-tuning/"&gt;LLM finetuning guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/basics/build/index.html"&gt;How to build locally&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/basics/getting_started/index.html#run-localai-in-kubernetes"&gt;How to install in Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://localai.io/docs/integrations/"&gt;Projects integrating LocalAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://io.midori-ai.xyz/howtos/"&gt;How tos section&lt;/a&gt; (curated by our community)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;📖&lt;/span&gt; 🎥 &lt;a href="https://localai.io/basics/news/#media-blogs-social"&gt;Media, Blogs, Social&lt;/a&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.suse.com/c/running-ai-locally/"&gt;Run Visual studio code with LocalAI (SUSE)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🆕 &lt;a href="https://mudler.pm/posts/local-ai-jetson-nano-devkit/"&gt;Run LocalAI on Jetson Nano Devkit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.pulumi.com/blog/low-code-llm-apps-with-local-ai-flowise-and-pulumi/"&gt;Run LocalAI on AWS EKS with Pulumi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://staleks.hashnode.dev/installing-localai-on-aws-ec2-instance"&gt;Run LocalAI on AWS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mudler.pm/posts/smart-slackbot-for-teams/"&gt;Create a slackbot for teams and OSS projects that answer to documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PKrDNuJ_dfE"&gt;LocalAI meets k8sgpt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mudler.pm/posts/localai-question-answering/"&gt;Question Answering on Documents locally with LangChain, LocalAI, Chroma, and GPT4All&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@tyler_97636/k8sgpt-localai-unlock-kubernetes-superpowers-for-free-584790de9b65"&gt;Tutorial to use k8sgpt with LocalAI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you utilize this repository, data in a downstream project, please consider citing it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@misc{localai,
  author = {Ettore Di Giacinto},
  title = {LocalAI: The free, Open source OpenAI alternative},
  year = {2023},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/go-skynet/LocalAI}},
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Do you find LocalAI useful?&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Support the project by becoming &lt;a href="https://github.com/sponsors/mudler"&gt;a backer or sponsor&lt;/a&gt;. Your logo will show up here with a link to your website.&lt;/p&gt; 
&lt;p&gt;A huge thank you to our generous sponsors who support this project covering CI expenses, and our &lt;a href="https://github.com/sponsors/mudler"&gt;Sponsor list&lt;/a&gt;:&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.spectrocloud.com/" target="blank"&gt; &lt;img height="200" src="https://github.com/user-attachments/assets/72eab1dd-8b93-4fc0-9ade-84db49f24962"&gt; &lt;/a&gt; &lt;a href="https://www.premai.io/" target="blank"&gt; &lt;img height="200" src="https://github.com/mudler/LocalAI/assets/2420543/42e4ca83-661e-4f79-8e46-ae43689683d6"&gt; &lt;br&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;🌟 Star history&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#go-skynet/LocalAI&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=go-skynet/LocalAI&amp;amp;type=Date" alt="LocalAI Star history Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📖 License&lt;/h2&gt; 
&lt;p&gt;LocalAI is a community-driven project created by &lt;a href="https://github.com/mudler/"&gt;Ettore Di Giacinto&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;MIT - Author Ettore Di Giacinto &lt;a href="mailto:mudler@localai.io"&gt;mudler@localai.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🙇 Acknowledgements&lt;/h2&gt; 
&lt;p&gt;LocalAI couldn't have been built without the help of great software already available from the community. Thank you!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tatsu-lab/stanford_alpaca"&gt;https://github.com/tatsu-lab/stanford_alpaca&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cornelk/llama-go"&gt;https://github.com/cornelk/llama-go&lt;/a&gt; for the initial ideas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antimatter15/alpaca.cpp"&gt;https://github.com/antimatter15/alpaca.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EdVince/Stable-Diffusion-NCNN"&gt;https://github.com/EdVince/Stable-Diffusion-NCNN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/whisper.cpp"&gt;https://github.com/ggerganov/whisper.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rhasspy/piper"&gt;https://github.com/rhasspy/piper&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤗 Contributors&lt;/h2&gt; 
&lt;p&gt;This is a community project, a special thanks to our contributors! 🤗 &lt;a href="https://github.com/go-skynet/LocalAI/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=go-skynet/LocalAI"&gt; &lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>syncthing/syncthing</title>
      <link>https://github.com/syncthing/syncthing</link>
      <description>&lt;p&gt;Open Source Continuous File Synchronization&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://syncthing.net/"&gt;&lt;img src="https://raw.githubusercontent.com/syncthing/syncthing/main/assets/logo-text-128.png" alt="Syncthing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://www.mozilla.org/MPL/2.0/"&gt;&lt;img src="https://img.shields.io/badge/license-MPLv2-blue.svg?style=flat-square" alt="MPLv2 License"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/88"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/88/badge" alt="CII Best Practices"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/syncthing/syncthing"&gt;&lt;img src="https://goreportcard.com/badge/github.com/syncthing/syncthing" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Syncthing is a &lt;strong&gt;continuous file synchronization program&lt;/strong&gt;. It synchronizes files between two or more computers. We strive to fulfill the goals below. The goals are listed in order of importance, the most important ones first. This is the summary version of the goal list - for more commentary, see the full &lt;a href="https://github.com/syncthing/syncthing/raw/main/GOALS.md"&gt;Goals document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Syncthing should be:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe From Data Loss&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Protecting the user's data is paramount. We take every reasonable precaution to avoid corrupting the user's files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Against Attackers&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Again, protecting the user's data is paramount. Regardless of our other goals, we must never allow the user's data to be susceptible to eavesdropping or modification by unauthorized parties.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy to Use&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should be approachable, understandable, and inclusive.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;User interaction should be required only when absolutely necessary.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Universally Available&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should run on every common computer. We are mindful that the latest technology is not always available to every individual.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Individuals&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing is primarily about empowering the individual user with safe, secure, and easy to use file synchronization.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Everything Else&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;There are many things we care about that don't make it on to the list. It is fine to optimize for these values, as long as they are not in conflict with the stated goals above.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href="https://docs.syncthing.net/intro/getting-started.html"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few examples for keeping Syncthing running in the background on your system in &lt;a href="https://github.com/syncthing/syncthing/raw/main/etc"&gt;the etc directory&lt;/a&gt;. There are also several &lt;a href="https://docs.syncthing.net/users/contrib.html#gui-wrappers"&gt;GUI implementations&lt;/a&gt; for Windows, Mac, and Linux.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;To run Syncthing in Docker, see &lt;a href="https://github.com/syncthing/syncthing/raw/main/README-Docker.md"&gt;the Docker README&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting in Touch&lt;/h2&gt; 
&lt;p&gt;The first and best point of contact is the &lt;a href="https://forum.syncthing.net/"&gt;Forum&lt;/a&gt;. If you've found something that is clearly a bug, feel free to report it in the &lt;a href="https://github.com/syncthing/syncthing/issues"&gt;GitHub issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe that you’ve found a Syncthing-related security vulnerability, please report it by emailing &lt;a href="mailto:security@syncthing.net"&gt;security@syncthing.net&lt;/a&gt;. Do not report it in the Forum or issue tracker.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Building Syncthing from source is easy. After extracting the source bundle from a release or checking out git, you just need to run &lt;code&gt;go run build.go&lt;/code&gt; and the binaries are created in &lt;code&gt;./bin&lt;/code&gt;. There's &lt;a href="https://docs.syncthing.net/dev/building.html"&gt;a guide&lt;/a&gt; with more details on the build process.&lt;/p&gt; 
&lt;h2&gt;Signed Releases&lt;/h2&gt; 
&lt;p&gt;Release binaries are GPG signed with the key available from &lt;a href="https://syncthing.net/security/"&gt;https://syncthing.net/security/&lt;/a&gt;. There is also a built-in automatic upgrade mechanism (disabled in some distribution channels) which uses a compiled in ECDSA signature. macOS and Windows binaries are also code-signed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see the Syncthing &lt;a href="https://docs.syncthing.net/"&gt;documentation site&lt;/a&gt; &lt;a href="https://github.com/syncthing/docs"&gt;[source]&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All code is licensed under the &lt;a href="https://github.com/syncthing/syncthing/raw/main/LICENSE"&gt;MPLv2 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>tailscale/tailscale</title>
      <link>https://github.com/tailscale/tailscale</link>
      <description>&lt;p&gt;The easiest, most secure way to use WireGuard and 2FA.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Tailscale&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://tailscale.com"&gt;https://tailscale.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Private WireGuard® networks made easy&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;This repository contains the majority of Tailscale's open source code. Notably, it includes the &lt;code&gt;tailscaled&lt;/code&gt; daemon and the &lt;code&gt;tailscale&lt;/code&gt; CLI tool. The &lt;code&gt;tailscaled&lt;/code&gt; daemon runs on Linux, Windows, &lt;a href="https://tailscale.com/kb/1065/macos-variants/"&gt;macOS&lt;/a&gt;, and to varying degrees on FreeBSD and OpenBSD. The Tailscale iOS and Android apps use this repo's code, but this repo doesn't contain the mobile GUI code.&lt;/p&gt; 
&lt;p&gt;Other &lt;a href="https://github.com/orgs/tailscale/repositories"&gt;Tailscale repos&lt;/a&gt; of note:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the Android app is at &lt;a href="https://github.com/tailscale/tailscale-android"&gt;https://github.com/tailscale/tailscale-android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the Synology package is at &lt;a href="https://github.com/tailscale/tailscale-synology"&gt;https://github.com/tailscale/tailscale-synology&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the QNAP package is at &lt;a href="https://github.com/tailscale/tailscale-qpkg"&gt;https://github.com/tailscale/tailscale-qpkg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;the Chocolatey packaging is at &lt;a href="https://github.com/tailscale/tailscale-chocolatey"&gt;https://github.com/tailscale/tailscale-chocolatey&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For background on which parts of Tailscale are open source and why, see &lt;a href="https://tailscale.com/opensource/"&gt;https://tailscale.com/opensource/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using&lt;/h2&gt; 
&lt;p&gt;We serve packages for a variety of distros and platforms at &lt;a href="https://pkgs.tailscale.com/"&gt;https://pkgs.tailscale.com&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Other clients&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://tailscale.com/download"&gt;macOS, iOS, and Windows clients&lt;/a&gt; use the code in this repository but additionally include small GUI wrappers. The GUI wrappers on non-open source platforms are themselves not open source.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;We always require the latest Go release, currently Go 1.23. (While we build releases with our &lt;a href="https://github.com/tailscale/go/"&gt;Go fork&lt;/a&gt;, its use is not required.)&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install tailscale.com/cmd/tailscale{,d}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're packaging Tailscale for distribution, use &lt;code&gt;build_dist.sh&lt;/code&gt; instead, to burn commit IDs and version info into the binaries:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;./build_dist.sh tailscale.com/cmd/tailscale
./build_dist.sh tailscale.com/cmd/tailscaled
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your distro has conventions that preclude the use of &lt;code&gt;build_dist.sh&lt;/code&gt;, please do the equivalent of what it does in your distro's way, so that bug reports contain useful version information.&lt;/p&gt; 
&lt;h2&gt;Bugs&lt;/h2&gt; 
&lt;p&gt;Please file any issues about this code or the hosted service on &lt;a href="https://github.com/tailscale/tailscale/issues"&gt;the issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;PRs welcome! But please file bugs. Commit messages should &lt;a href="https://docs.github.com/en/github/writing-on-github/autolinked-references-and-urls"&gt;reference bugs&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We require &lt;a href="https://en.wikipedia.org/wiki/Developer_Certificate_of_Origin"&gt;Developer Certificate of Origin&lt;/a&gt; &lt;code&gt;Signed-off-by&lt;/code&gt; lines in commits.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/tailscale/tailscale/main/docs/commit-messages.md"&gt;commit-messages.md&lt;/a&gt; (or skim &lt;code&gt;git log&lt;/code&gt;) for our commit message style.&lt;/p&gt; 
&lt;h2&gt;About Us&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://tailscale.com/"&gt;Tailscale&lt;/a&gt; is primarily developed by the people at &lt;a href="https://github.com/orgs/tailscale/people"&gt;https://github.com/orgs/tailscale/people&lt;/a&gt;. For other contributors, see:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tailscale/tailscale/graphs/contributors"&gt;https://github.com/tailscale/tailscale/graphs/contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tailscale/tailscale-android/graphs/contributors"&gt;https://github.com/tailscale/tailscale-android/graphs/contributors&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Legal&lt;/h2&gt; 
&lt;p&gt;WireGuard is a registered trademark of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cloudreve/cloudreve</title>
      <link>https://github.com/cloudreve/cloudreve</link>
      <description>&lt;p&gt;🌩 Self-hosted file management and sharing system, supports multiple storage providers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/cloudreve/Cloudreve/raw/master/README_zh-CN.md"&gt;中文版本&lt;/a&gt;&lt;/p&gt; 
&lt;h1 align="center"&gt; &lt;br&gt; &lt;a href="https://cloudreve.org/" alt="logo"&gt;&lt;img src="https://raw.githubusercontent.com/cloudreve/frontend/master/public/static/img/logo192.png" width="150"&gt;&lt;/a&gt; &lt;br&gt; Cloudreve &lt;br&gt; &lt;/h1&gt; 
&lt;h4 align="center"&gt;Self-hosted file management system with muilt-cloud support.&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a href="https://dev.azure.com/abslantliu/Cloudreve/_build?definitionId=6"&gt; &lt;img src="https://dev.azure.com/abslantliu/Cloudreve/_apis/build/status%2Fcloudreve.Cloudreve?branchName=refs%2Fpull%2F2481%2Fmerge" alt="Azure pipelines"&gt; &lt;/a&gt; &lt;a href="https://github.com/cloudreve/Cloudreve/releases"&gt; &lt;img src="https://img.shields.io/github/v/release/cloudreve/Cloudreve?include_prereleases"&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/cloudreve/cloudreve"&gt; &lt;img src="https://img.shields.io/docker/image-size/cloudreve/cloudreve"&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/cloudreve/cloudreve"&gt; &lt;img alt="Docker Pulls" src="https://img.shields.io/docker/pulls/cloudreve/cloudreve"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://cloudreve.org"&gt;Homepage&lt;/a&gt; • &lt;a href="https://demo.cloudreve.org"&gt;Try it&lt;/a&gt; • &lt;a href="https://github.com/cloudreve/cloudreve/discussions"&gt;Discussion&lt;/a&gt; • &lt;a href="https://docs.cloudreve.org"&gt;Documents&lt;/a&gt; • &lt;a href="https://github.com/cloudreve/Cloudreve/releases"&gt;Download&lt;/a&gt; • &lt;a href="https://t.me/cloudreve_official"&gt;Telegram&lt;/a&gt; • &lt;a href="https://discord.com/invite/WTpMFpZT76"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudreve/docs/master/images/homepage.png" alt="Screenshot"&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;✨&lt;/span&gt; Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;☁&lt;/span&gt; Support storing files into Local, Remote node, OneDrive, S3 compatible API, Qiniu, Aliyun OSS, Tencent COS, Upyun.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;📤&lt;/span&gt; Upload/Download in directly transmission from client to storage providers.&lt;/li&gt; 
 &lt;li&gt;💾 Integrate with Aria2/qBittorrent to download files in background, use multiple download nodes to share the load.&lt;/li&gt; 
 &lt;li&gt;📚 Compress/Extract files, download files in batch.&lt;/li&gt; 
 &lt;li&gt;💻 WebDAV support covering all storage providers.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;⚡&lt;/span&gt;Drag&amp;amp;Drop to upload files or folders, with resumeable upload support.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;🗃&lt;/span&gt; Extract media metadata from files, search files by metadata or tags.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;👩👧👦&lt;/span&gt; Multi-users with multi-groups.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;🔗&lt;/span&gt; Create share links for files and folders with expiration date.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;👁🗨&lt;/span&gt; Preview videos, images, audios, ePub files online; edit texts, diagrams, Markdown, images, Office documents online.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;🎨&lt;/span&gt; Customize theme colors, dark mode, PWA application, SPA, i18n.&lt;/li&gt; 
 &lt;li&gt;&lt;span&gt;🚀&lt;/span&gt; All-In-One packing, with all features out-of-the-box.&lt;/li&gt; 
 &lt;li&gt;🌈 ... ...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;🛠&lt;/span&gt; Deploy&lt;/h2&gt; 
&lt;p&gt;To deploy Cloudreve, you can refer to &lt;a href="https://docs.cloudreve.org/overview/quickstart"&gt;Getting started&lt;/a&gt; for a quick local deployment to test.&lt;/p&gt; 
&lt;p&gt;When you're ready to deploy Cloudreve to a production environment, you can refer to &lt;a href="https://docs.cloudreve.org/overview/deploy/"&gt;Deploy&lt;/a&gt; for a complete deployment.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⚙&lt;/span&gt; Build&lt;/h2&gt; 
&lt;p&gt;Please refer to &lt;a href="https://docs.cloudreve.org/overview/build/"&gt;Build&lt;/a&gt; for how to build Cloudreve from source code.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;🚀&lt;/span&gt; Contributing&lt;/h2&gt; 
&lt;p&gt;If you're interested in contributing to Cloudreve, please refer to &lt;a href="https://docs.cloudreve.org/api/contributing/"&gt;Contributing&lt;/a&gt; for how to contribute to Cloudreve.&lt;/p&gt; 
&lt;h2&gt;&lt;span&gt;⚗&lt;/span&gt; Stacks&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/"&gt;Go&lt;/a&gt; + &lt;a href="https://github.com/gin-gonic/gin"&gt;Gin&lt;/a&gt; + &lt;a href="https://github.com/ent/ent"&gt;ent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; + &lt;a href="https://github.com/reduxjs/redux"&gt;Redux&lt;/a&gt; + &lt;a href="https://github.com/mui-org/material-ui"&gt;Material-UI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;span&gt;📜&lt;/span&gt; License&lt;/h2&gt; 
&lt;p&gt;GPL V3&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>alireza0/s-ui</title>
      <link>https://github.com/alireza0/s-ui</link>
      <description>&lt;p&gt;An advanced Web Panel • Built for SagerNet/Sing-Box&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;S-UI&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;An Advanced Web Panel • Built on SagerNet/Sing-Box&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/alireza0/s-ui.svg?sanitize=true" alt=""&gt; &lt;img src="https://img.shields.io/docker/pulls/alireza7/s-ui.svg?sanitize=true" alt="S-UI Docker pull"&gt; &lt;a href="https://goreportcard.com/report/github.com/alireza0/s-ui"&gt;&lt;img src="https://goreportcard.com/badge/github.com/alireza0/s-ui" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://img.shields.io/github/downloads/alireza0/s-ui/total.svg"&gt;&lt;img src="https://img.shields.io/github/downloads/alireza0/s-ui/total.svg?sanitize=true" alt="Downloads"&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;&lt;img src="https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true" alt="License"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project is only for personal learning and communication, please do not use it for illegal purposes, please do not use it in a production environment&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;If you think this project is helpful to you, you may wish to give a&lt;/strong&gt;&lt;span&gt;🌟&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/alireza7"&gt;&lt;img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="&amp;quot;Buy Me A Coffee&amp;quot;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;USDT (TRC20): &lt;code&gt;TYTq73Gj6dJ67qe58JVPD9zpjW2cc9XgVz&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Overview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Features&lt;/th&gt; 
   &lt;th align="center"&gt;Enable?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Protocol&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Language&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Client/Inbound&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Advanced Traffic Routing Interface&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Client &amp;amp; Traffic &amp;amp; System Status&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Subscription Service (link/json + info)&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dark/Light Theme&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API Interface&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/alireza0/s-ui/wiki/API-Documentation"&gt;API-Documentation Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Default Installation Information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Panel Port: 2095&lt;/li&gt; 
 &lt;li&gt;Panel Path: /app/&lt;/li&gt; 
 &lt;li&gt;Subscription Port: 2096&lt;/li&gt; 
 &lt;li&gt;Subscription Path: /sub/&lt;/li&gt; 
 &lt;li&gt;User/Password: admin&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Upgrade to Latest Version&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/alireza0/s-ui/master/install.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install legacy Version&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; To install your desired legacy version, add the version to the end of the installation command. e.g., ver &lt;code&gt;1.0.0&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;VERSION=1.0.0 &amp;amp;&amp;amp; bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/alireza0/s-ui/$VERSION/install.sh) $VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Manual installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get the latest version of S-UI based on your OS/Architecture from GitHub: &lt;a href="https://github.com/alireza0/s-ui/releases/latest"&gt;https://github.com/alireza0/s-ui/releases/latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt; Get the latest version of &lt;code&gt;s-ui.sh&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/alireza0/s-ui/master/s-ui.sh"&gt;https://raw.githubusercontent.com/alireza0/s-ui/master/s-ui.sh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt; Copy &lt;code&gt;s-ui.sh&lt;/code&gt; to /usr/bin/ and run &lt;code&gt;chmod +x /usr/bin/s-ui&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Extract s-ui tar.gz file to a directory of your choice and navigate to the directory where you extracted the tar.gz file.&lt;/li&gt; 
 &lt;li&gt;Copy *.service files to /etc/systemd/system/ and run &lt;code&gt;systemctl daemon-reload&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Enable autostart and start S-UI service using &lt;code&gt;systemctl enable s-ui --now&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Start sing-box service using &lt;code&gt;systemctl enable sing-box --now&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Uninstall S-UI&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo -i

systemctl disable s-ui  --now

rm -f /etc/systemd/system/sing-box.service
systemctl daemon-reload

rm -fr /usr/local/s-ui
rm /usr/bin/s-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install using Docker&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Usage&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install Docker&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;curl -fsSL https://get.docker.com | sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install S-UI&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Docker compose method&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;mkdir s-ui &amp;amp;&amp;amp; cd s-ui
wget -q https://raw.githubusercontent.com/alireza0/s-ui/master/docker-compose.yml
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Use docker&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;mkdir s-ui &amp;amp;&amp;amp; cd s-ui
docker run -itd \
    -p 2095:2095 -p 2096:2096 -p 443:443 -p 80:80 \
    -v $PWD/db/:/usr/local/s-ui/db/ \
    -v $PWD/cert/:/root/cert/ \
    --name s-ui --restart=unless-stopped \
    alireza7/s-ui:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Build your own image&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/alireza0/s-ui
git submodule update --init --recursive
docker build -t s-ui .
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Manual run ( contribution )&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Build and run whole project&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;./runSUI.sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Clone the repository&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# clone repository
git clone https://github.com/alireza0/s-ui
# clone submodules
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;- Frontend&lt;/h3&gt; 
 &lt;p&gt;Visit &lt;a href="https://github.com/alireza0/s-ui-frontend"&gt;s-ui-frontend&lt;/a&gt; for frontend code&lt;/p&gt; 
 &lt;h3&gt;- Backend&lt;/h3&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Please build frontend once before!&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;To build backend:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# remove old frontend compiled files
rm -fr web/html/*
# apply new frontend compiled files
cp -R frontend/dist/ web/html/
# build
go build -o sui main.go
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To run backend (from root folder of repository):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;./sui
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Languages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;English&lt;/li&gt; 
 &lt;li&gt;Farsi&lt;/li&gt; 
 &lt;li&gt;Vietnamese&lt;/li&gt; 
 &lt;li&gt;Chinese (Simplified)&lt;/li&gt; 
 &lt;li&gt;Chinese (Traditional)&lt;/li&gt; 
 &lt;li&gt;Russian&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported protocols: 
  &lt;ul&gt; 
   &lt;li&gt;General: Mixed, SOCKS, HTTP, HTTPS, Direct, Redirect, TProxy&lt;/li&gt; 
   &lt;li&gt;V2Ray based: VLESS, VMess, Trojan, Shadowsocks&lt;/li&gt; 
   &lt;li&gt;Other protocols: ShadowTLS, Hysteria, Hysteria2, Naive, TUIC&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Supports XTLS protocols&lt;/li&gt; 
 &lt;li&gt;An advanced interface for routing traffic, incorporating PROXY Protocol, External, and Transparent Proxy, SSL Certificate, and Port&lt;/li&gt; 
 &lt;li&gt;An advanced interface for inbound and outbound configuration&lt;/li&gt; 
 &lt;li&gt;Clients’ traffic cap and expiration date&lt;/li&gt; 
 &lt;li&gt;Displays online clients, inbounds and outbounds with traffic statistics, and system status monitoring&lt;/li&gt; 
 &lt;li&gt;Subscription service with ability to add external links and subscription&lt;/li&gt; 
 &lt;li&gt;HTTPS for secure access to the web panel and subscription service (self-provided domain + SSL certificate)&lt;/li&gt; 
 &lt;li&gt;Dark/Light theme&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Recommended OS&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ubuntu 20.04+&lt;/li&gt; 
 &lt;li&gt;Debian 11+&lt;/li&gt; 
 &lt;li&gt;CentOS 8+&lt;/li&gt; 
 &lt;li&gt;Fedora 36+&lt;/li&gt; 
 &lt;li&gt;Arch Linux&lt;/li&gt; 
 &lt;li&gt;Parch Linux&lt;/li&gt; 
 &lt;li&gt;Manjaro&lt;/li&gt; 
 &lt;li&gt;Armbian&lt;/li&gt; 
 &lt;li&gt;AlmaLinux 9+&lt;/li&gt; 
 &lt;li&gt;Rocky Linux 9+&lt;/li&gt; 
 &lt;li&gt;Oracle Linux 8+&lt;/li&gt; 
 &lt;li&gt;OpenSUSE Tubleweed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Variables&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Usage&lt;/h3&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Variable&lt;/th&gt; 
    &lt;th align="center"&gt;Type&lt;/th&gt; 
    &lt;th align="left"&gt;Default&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_LOG_LEVEL&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;"debug"&lt;/code&gt; | &lt;code&gt;"info"&lt;/code&gt; | &lt;code&gt;"warn"&lt;/code&gt; | &lt;code&gt;"error"&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"info"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_DEBUG&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_BIN_FOLDER&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"bin"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_DB_FOLDER&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"db"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SINGBOX_API&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h2&gt;SSL Certificate&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Certbot&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;snap install core; snap refresh core
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot

certbot certonly --standalone --register-unsafely-without-email --non-interactive --agree-tos -d &amp;lt;Your Domain Name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Stargazers over Time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/alireza0/s-ui"&gt;&lt;img src="https://starchart.cc/alireza0/s-ui.svg?sanitize=true" alt="Stargazers over time"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>safing/portmaster</title>
      <link>https://github.com/safing/portmaster</link>
      <description>&lt;p&gt;🏔 Love Freedom - ❌ Block Mass Surveillance&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Get Peace of Mind &lt;br&gt; with &lt;a href="https://safing.io/"&gt;Easy Privacy&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;Portmaster is a free and open-source application firewall that does the heavy lifting for you. Restore privacy and take back control over all your computer's network activity.&lt;/p&gt; 
&lt;p&gt;With great defaults your privacy improves without any effort. And if you want to configure and control everything down to the last detail - Portmaster has you covered too. Developed in the EU 🇪🇺, Austria.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://safing.io/download/"&gt;Download for Free&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://safing.io/about/"&gt;About Us&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://safing.io/assets/img/page-specific/landing/portmaster-thumbnail.png?" alt="Portmaster User Interface"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;seen on:&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.heise.de/tests/Datenschutz-Firewall-Portmaster-im-Test-9611687.html"&gt;&lt;img src="https://safing.io/assets/img/external/heise_online.svg?sanitize=true" height="35"&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.ghacks.net/2022/11/08/portmaster-1-0-released-open-source-application-firewall/"&gt;&lt;img src="https://safing.io/assets/img/external/ghacks.png" alt="ghacks.net"&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://www.youtube.com/watch?v=E8cTRhGtmcM"&gt;&lt;img src="https://safing.io/assets/img/external/techlore.png" alt="Techlore"&gt;&lt;/a&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;a href="https://lifehacker.com/the-lesser-known-apps-everyone-should-install-on-a-new-1850223434"&gt;&lt;img src="https://safing.io/assets/img/external/logos/lifehacker.webp" alt="Lifehacker"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://safing.io/features/"&gt;Features&lt;/a&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Monitor All Network Activity&lt;/li&gt; 
 &lt;li&gt;Full Control: Block Anything&lt;/li&gt; 
 &lt;li&gt;Automatically Block Trackers &amp;amp; Malware&lt;/li&gt; 
 &lt;li&gt;Set Global &amp;amp; Per‑App Settings&lt;/li&gt; 
 &lt;li&gt;Secure DNS (Doh/DoT)&lt;/li&gt; 
 &lt;li&gt;Record and Search Network Activity (&lt;a href="https://safing.io/pricing/"&gt;$&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Per-App Bandwidth Usage (&lt;a href="https://safing.io/pricing/"&gt;$&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://safing.io/spn/"&gt;SPN, our Next-Gen Privacy Network&lt;/a&gt; (&lt;a href="https://safing.io/pricing/"&gt;$$&lt;/a&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h1&gt;Technical Introduction&lt;/h1&gt; 
&lt;p&gt;Portmaster is a privacy suite for your Windows and Linux desktop.&lt;/p&gt; 
&lt;h3&gt;Base Technology&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Portmaster integrates into network stack using nfqueue on Linux and a kernel driver (WFP) on Windows.&lt;/li&gt; 
 &lt;li&gt;Packets are intercepted at the raw packet level - every packet is seen and can be stopped.&lt;/li&gt; 
 &lt;li&gt;Ownership of connections is found using eBPF and &lt;code&gt;/proc&lt;/code&gt; on Linux and a kernel driver and the IP Helper API (&lt;code&gt;iphlpapi.dll&lt;/code&gt;) on Windows.&lt;/li&gt; 
 &lt;li&gt;Most settings can be defined per app, which can be matched in different ways.&lt;/li&gt; 
 &lt;li&gt;Support for special processes with weird or concealed paths/actors: 
  &lt;ul&gt; 
   &lt;li&gt;Snap, AppImage and Script support on Linux&lt;/li&gt; 
   &lt;li&gt;Windows Store apps and svchost.exe system services support on Windows&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Everything is 100% local on your device. (except the SPN, naturally) 
  &lt;ul&gt; 
   &lt;li&gt;Updates are fully signed and downloaded automatically.&lt;/li&gt; 
   &lt;li&gt;Intelligence data (block lists, geoip) is downloaded and applied automatically.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;The Portmaster Core Service runs as a system service, the UI elements (App, Notifier) run in user context.&lt;/li&gt; 
 &lt;li&gt;The main UI still uses electron as a wrapper :/ - but this will change in the future. You can also open the UI in the browser&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature: Secure DNS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Portmaster intercepts "astray" DNS queries and reroutes them to itself for seamless integration.&lt;/li&gt; 
 &lt;li&gt;DNS queries are resolved by the default or configured DoT/DoH resolvers.&lt;/li&gt; 
 &lt;li&gt;Full support for split horizon and horizon validation to defend against rebinding attacks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature: Privacy Filter&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define allowed network scopes: Localhost, LAN, Internet, P2P, Inbound.&lt;/li&gt; 
 &lt;li&gt;Easy rules based on Internet entities: Domain, IP, Country and more.&lt;/li&gt; 
 &lt;li&gt;Filter Lists block common malware, ad, tracker domains etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature: Network History ($)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Record connections and their details in a local database and search all of it later&lt;/li&gt; 
 &lt;li&gt;Auto-delete old history or delete on demand&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature: Bandwidth Visibility ($)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitor bandwidth usage per connection and app&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feature: SPN - Safing Privacy Network ($$)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Privacy Network aimed at use cases "between" VPN and Tor.&lt;/li&gt; 
 &lt;li&gt;Uses onion encryption over multiple hops just like Tor.&lt;/li&gt; 
 &lt;li&gt;Routes are chosen to cover most distance within the network to increase privacy.&lt;/li&gt; 
 &lt;li&gt;Exits are chosen near the destination server. This automatically geo-unblocks in many cases.&lt;/li&gt; 
 &lt;li&gt;Exclude apps and domains/entities from using SPN.&lt;/li&gt; 
 &lt;li&gt;Change routing algorithm and focus per app.&lt;/li&gt; 
 &lt;li&gt;Nodes are hosted by Safing (company behind Portmaster) and the community.&lt;/li&gt; 
 &lt;li&gt;Speeds are pretty decent (&amp;gt;100MBit/s).&lt;/li&gt; 
 &lt;li&gt;Further Reading: &lt;a href="https://safing.io/files/whitepaper/Gate17.pdf"&gt;SPN Whitepaper&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All details and guides in the dedicated &lt;a href="https://wiki.safing.io/"&gt;wiki&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://wiki.safing.io/en/Portmaster/App"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Install 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://wiki.safing.io/en/Portmaster/Install/Windows"&gt;on Windows&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://wiki.safing.io/en/Portmaster/Install/Linux"&gt;on Linux&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.safing.io/en/Contribute"&gt;Contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.safing.io/en/Portmaster/App/Compatibility#vpn-compatibly"&gt;VPN Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.safing.io/en/Portmaster/App/Compatibility"&gt;Software Compatibility&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wiki.safing.io/en/Portmaster/Architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.safing.io/portmaster/settings"&gt;Settings Handbook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.safing.io/portmaster/api"&gt;Portmaster Developer API&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Build Portmaster Yourself (WIP)&lt;/h1&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://earthly.dev/get-earthly"&gt;Install Earthly CLI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.docker.com/engine/install/"&gt;Install Docker Engine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;earthly +release&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Find artifacts in &lt;code&gt;./dist&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>cloudwego/eino</title>
      <link>https://github.com/cloudwego/eino</link>
      <description>&lt;p&gt;The ultimate LLM/AI application development framework in Golang.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eino&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/badges/.badges/main/coverage.svg?sanitize=true" alt="coverage"&gt; &lt;a href="https://github.com/cloudwego/eino/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/cloudwego/eino" alt="Release"&gt;&lt;/a&gt; &lt;a href="https://www.cloudwego.io/"&gt;&lt;img src="https://img.shields.io/website?up_message=cloudwego&amp;amp;url=https%3A%2F%2Fwww.cloudwego.io%2F" alt="WebSite"&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudwego/eino/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/cloudwego/eino" alt="License"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/cloudwego/eino"&gt;&lt;img src="https://goreportcard.com/badge/github.com/cloudwego/eino" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudwego/kitex/eino"&gt;&lt;img src="https://img.shields.io/github/issues/cloudwego/eino" alt="OpenIssue"&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudwego/eino/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://img.shields.io/github/issues-closed/cloudwego/eino" alt="ClosedIssue"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/cloudwego/eino" alt="Stars"&gt; &lt;img src="https://img.shields.io/github/forks/cloudwego/eino" alt="Forks"&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/cloudwego/eino/main/README.zh_CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Eino['aino]&lt;/strong&gt; (pronounced similarly to "I know") aims to be the ultimate LLM application development framework in Golang. Drawing inspirations from many excellent LLM application development frameworks in the open-source community such as LangChain &amp;amp; LlamaIndex, etc., as well as learning from cutting-edge research and real world applications, Eino offers an LLM application development framework that emphasizes on simplicity, scalability, reliability and effectiveness that better aligns with Golang programming conventions.&lt;/p&gt; 
&lt;p&gt;What Eino provides are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;a carefully curated list of &lt;strong&gt;component&lt;/strong&gt; abstractions and implementations that can be easily reused and combined to build LLM applications&lt;/li&gt; 
 &lt;li&gt;a powerful &lt;strong&gt;composition&lt;/strong&gt; framework that does the heavy lifting of strong type checking, stream processing, concurrency management, aspect injection, option assignment, etc. for the user.&lt;/li&gt; 
 &lt;li&gt;a set of meticulously designed &lt;strong&gt;API&lt;/strong&gt; that obsesses on simplicity and clarity.&lt;/li&gt; 
 &lt;li&gt;an ever-growing collection of best practices in the form of bundled &lt;strong&gt;flows&lt;/strong&gt; and &lt;strong&gt;examples&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;a useful set of tools that covers the entire development cycle, from visualized development and debugging to online tracing and evaluation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the above arsenal, Eino can standardize, simplify, and improve efficiency at different stages of the AI application development cycle: &lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/eino_concept.jpeg" alt=""&gt;&lt;/p&gt; 
&lt;h1&gt;A quick walkthrough&lt;/h1&gt; 
&lt;p&gt;Use a component directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;model, _ := openai.NewChatModel(ctx, config) // create an invokable LLM instance
message, _ := model.Generate(ctx, []*Message{
    SystemMessage("you are a helpful assistant."),
    UserMessage("what does the future AI App look like?")})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, you can do that, Eino provides lots of useful components to use out of the box. But you can do more by using orchestration, for three reasons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;orchestration encapsulates common patterns of LLM application.&lt;/li&gt; 
 &lt;li&gt;orchestration solves the difficult problem of processing stream response by the LLM.&lt;/li&gt; 
 &lt;li&gt;orchestration handles type safety, concurrency management, aspect injection and option assignment for you.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Eino provides two set of APIs for orchestration&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;API&lt;/th&gt; 
   &lt;th&gt;Characteristics and usage&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chain&lt;/td&gt; 
   &lt;td&gt;Simple chained directed graph that can only go forward.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Graph&lt;/td&gt; 
   &lt;td&gt;Cyclic or Acyclic directed graph. Powerful and flexible.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Let's create a simple chain: a ChatTemplate followed by a ChatModel.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/simple_chain.png" alt=""&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;chain, _ := NewChain[map[string]any, *Message]().
           AppendChatTemplate(prompt).
           AppendChatModel(model).
           Compile(ctx)

chain.Invoke(ctx, map[string]any{"query": "what's your name?"})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now let's create a graph that uses a ChatModel to generate answer or tool calls, then uses a ToolsNode to execute those tools if needed.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/tool_call_graph.png" alt=""&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;graph := NewGraph[map[string]any, *schema.Message]()

_ = graph.AddChatTemplateNode("node_template", chatTpl)
_ = graph.AddChatModelNode("node_model", chatModel)
_ = graph.AddToolsNode("node_tools", toolsNode)
_ = graph.AddLambdaNode("node_converter", takeOne)

_ = graph.AddEdge(START, "node_template")
_ = graph.AddEdge("node_template", "node_model")
_ = graph.AddBranch("node_model", branch)
_ = graph.AddEdge("node_tools", "node_converter")
_ = graph.AddEdge("node_converter", END)

compiledGraph, err := graph.Compile(ctx)
if err != nil {
return err
}
out, err := r.Invoke(ctx, map[string]any{"query":"Beijing's weather this weekend"})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now let's create a 'ReAct' agent: A ChatModel binds to Tools. It receives input Messages and decides independently whether to call the Tool or output the final result. The execution result of the Tool will again become the input Message for the ChatModel and serve as the context for the next round of independent judgment.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/react.png" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;We provide a complete implementation for ReAct Agent out of the box in the &lt;code&gt;flow&lt;/code&gt; package. Check out the code here: &lt;a href="https://github.com/cloudwego/eino/raw/main/flow/agent/react/react.go"&gt;flow/agent/react&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Our implementation of ReAct Agent uses Eino's &lt;strong&gt;graph orchestration&lt;/strong&gt; exclusively, which provides the following benefits out of the box:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type checking: it makes sure the two nodes' input and output types match at compile time.&lt;/li&gt; 
 &lt;li&gt;Stream processing: concatenates message stream before passing to chatModel and toolsNode if needed, and copies the stream into callback handlers.&lt;/li&gt; 
 &lt;li&gt;Concurrency management: the shared state can be safely read and written because the StatePreHandler is concurrency safe.&lt;/li&gt; 
 &lt;li&gt;Aspect injection: injects callback aspects before and after the execution of ChatModel if the specified ChatModel implementation hasn't injected itself.&lt;/li&gt; 
 &lt;li&gt;Option assignment: call options are assigned either globally, to specific component type or to specific node.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, you could easily extend the compiled graph with callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;handler := NewHandlerBuilder().
  OnStartFn(
    func(ctx context.Context, info *RunInfo, input CallbackInput) context.Context) {
        log.Infof("onStart, runInfo: %v, input: %v", info, input)
    }).
  OnEndFn(
    func(ctx context.Context, info *RunInfo, output CallbackOutput) context.Context) {
        log.Infof("onEnd, runInfo: %v, out: %v", info, output)
    }).
  Build()
  
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or you could easily assign options to different nodes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;// assign to All nodes
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))

// assign only to ChatModel nodes
compiledGraph.Invoke(ctx, input, WithChatModelOption(WithTemperature(0.5))

// assign only to node_1
compiledGraph.Invoke(ctx, input, WithCallbacks(handler).DesignateNode("node_1"))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Key Features&lt;/h1&gt; 
&lt;h2&gt;Rich Components&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Encapsulates common building blocks into &lt;strong&gt;component abstractions&lt;/strong&gt;, each have multiple &lt;strong&gt;component implementations&lt;/strong&gt; that are ready to be used out of the box.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;component abstractions such as ChatModel, Tool, ChatTemplate, Retriever, Document Loader, Lambda, etc.&lt;/li&gt; 
   &lt;li&gt;each component type has an interface of its own: defined Input &amp;amp; Output Type, defined Option type, and streaming paradigms that make sense.&lt;/li&gt; 
   &lt;li&gt;implementations are transparent. Abstractions are all you care about when orchestrating components together.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Implementations can be nested and captures complex business logic.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ReAct Agent, MultiQueryRetriever, Host MultiAgent, etc. They consist of multiple components and non-trivial business logic.&lt;/li&gt; 
   &lt;li&gt;They are still transparent from the outside. A MultiQueryRetriever can be used anywhere that accepts a Retriever.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Powerful Orchestration&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Data flows from Retriever / Document Loaders / ChatTemplate to ChatModel, then flows to Tools and parsed as Final Answer. This directed, controlled flow of data through multiple components can be implemented through &lt;strong&gt;graph orchestration&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Component instances are graph nodes, and edges are data flow channels.&lt;/li&gt; 
 &lt;li&gt;Graph orchestration is powerful and flexible enough to implement complex business logic: 
  &lt;ul&gt; 
   &lt;li&gt;type checking, stream processing, concurrency management, aspect injection and option assignment are handled by the framework.&lt;/li&gt; 
   &lt;li&gt;branch out execution at runtime, read and write global state, or do field level data mapping using workflow(currently in alpha stage).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Complete Stream Processing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stream processing is important because ChatModel outputs chunks of messages in real time as it generates them. It's especially important with orchestration because more components need to handle streaming data.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;concatenates&lt;/strong&gt; stream chunks for downstream nodes that only accepts non-stream input, such as ToolsNode.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;boxes&lt;/strong&gt; non stream into stream when stream is needed during graph execution.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;merges&lt;/strong&gt; multiple streams as they converge into a single downward node.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;copies&lt;/strong&gt; stream as they fan out to different downward node, or is passed to callback handlers.&lt;/li&gt; 
 &lt;li&gt;Orchestration elements such as &lt;strong&gt;branch&lt;/strong&gt; and &lt;strong&gt;state handlers&lt;/strong&gt; are also stream aware.&lt;/li&gt; 
 &lt;li&gt;With these streaming processing abilities, the streaming paradigms of components themselves become transparent to the user.&lt;/li&gt; 
 &lt;li&gt;A compiled Graph can run with 4 different streaming paradigms:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Streaming Paradigm&lt;/th&gt; 
   &lt;th&gt;Explanation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Invoke&lt;/td&gt; 
   &lt;td&gt;Accepts non-stream type I and returns non-stream type O&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Stream&lt;/td&gt; 
   &lt;td&gt;Accepts non-stream type I and returns stream type StreamReader[O]&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Collect&lt;/td&gt; 
   &lt;td&gt;Accepts stream type StreamReader[I] and returns non-stream type O&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Transform&lt;/td&gt; 
   &lt;td&gt;Accepts stream type StreamReader[I] and returns stream type StreamReader[O]&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Highly Extensible Aspects (Callbacks)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Aspects handle cross-cutting concerns such as logging, tracing, metrics, etc., as well as exposing internal details of component implementations.&lt;/li&gt; 
 &lt;li&gt;Five aspects are supported: &lt;strong&gt;OnStart, OnEnd, OnError, OnStartWithStreamInput, OnEndWithStreamOutput&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Developers can easily create custom callback handlers, add them during graph run via options, and they will be invoked during graph run.&lt;/li&gt; 
 &lt;li&gt;Graph can also inject aspects to those component implementations that do not support callbacks on their own.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Eino Framework Structure&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/eino_framework.jpeg" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;The Eino framework consists of several parts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Eino(this repo): Contains Eino's type definitions, streaming mechanism, component abstractions, orchestration capabilities, aspect mechanisms, etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/cloudwego/eino-ext"&gt;EinoExt&lt;/a&gt;: Component implementations, callback handlers implementations, component usage examples, and various tools such as evaluators, prompt optimizers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/cloudwego/eino-ext/tree/main/devops"&gt;Eino Devops&lt;/a&gt;: visualized developing, visualized debugging etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/cloudwego/eino-examples"&gt;EinoExamples&lt;/a&gt; is the repo containing example applications and best practices for Eino.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Detailed Documentation&lt;/h2&gt; 
&lt;p&gt;For learning and using Eino, we provide a comprehensive Eino User Manual to help you quickly understand the concepts in Eino and master the skills of developing AI applications based on Eino. Start exploring through the &lt;a href="https://www.cloudwego.io/zh/docs/eino/"&gt;Eino User Manual&lt;/a&gt; now!&lt;/p&gt; 
&lt;p&gt;For a quick introduction to building AI applications with Eino, we recommend starting with &lt;a href="https://www.cloudwego.io/zh/docs/eino/quick_start/"&gt;Eino: Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.18 and above.&lt;/li&gt; 
 &lt;li&gt;Eino relies on &lt;a href="https://github.com/getkin/kin-openapi"&gt;kin-openapi&lt;/a&gt; 's OpenAPI JSONSchema implementation. In order to remain compatible with Go 1.18, we have fixed kin-openapi's version to be v0.118.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a potential security issue in this project, or think you may have discovered a security issue, we ask that you notify Bytedance Security via our &lt;a href="https://security.bytedance.com/src"&gt;security center&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/cloudwego/eino/main/sec@bytedance.com"&gt;vulnerability reporting email&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please do &lt;strong&gt;not&lt;/strong&gt; create a public GitHub issue.&lt;/p&gt; 
&lt;h2&gt;Contact US&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;How to become a member: &lt;a href="https://github.com/cloudwego/community/raw/main/COMMUNITY_MEMBERSHIP.md"&gt;COMMUNITY MEMBERSHIP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Issues: &lt;a href="https://github.com/cloudwego/eino/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lark: Scan the QR code below with &lt;a href="https://www.feishu.cn/en/"&gt;Register Feishu&lt;/a&gt; to join our CloudWeGo/eino user group.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;    &lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/lark_group_zh.png" alt="LarkGroup" width="200"&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/cloudwego/eino/main/LICENSE-APACHE"&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>IceWhaleTech/CasaOS</title>
      <link>https://github.com/IceWhaleTech/CasaOS</link>
      <description>&lt;p&gt;CasaOS - A simple, easy-to-use, elegant open-source Personal Cloud system.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;CasaOS - Your Personal Cloud&lt;/h1&gt; 
&lt;!-- Readme i18n links --&gt; 
&lt;!-- &gt; English | [中文](#) | [Français](#) --&gt; 
&lt;p align="center"&gt; 
 &lt;!-- CasaOS Banner --&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_dark_night_800x300.png"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800x300.png"&gt; 
  &lt;img alt="CasaOS" src="https://raw.githubusercontent.com/IceWhaleTech/logo/main/casaos/casaos_banner_twilight_blue_800x300.png"&gt; 
 &lt;/picture&gt; &lt;br&gt; &lt;i&gt;Connect with the community, establish autonomy, reduce the cost of SaaS, and MAXIMIZE the potential for a personalized copilot.&lt;/i&gt; &lt;br&gt; &lt;br&gt; 
 &lt;!-- CasaOS Badges --&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS" target="_blank"&gt; &lt;img alt="CasaOS Version" src="https://img.shields.io/github/v/release/IceWhaleTech/CasaOS?color=162453&amp;amp;style=flat-square&amp;amp;label=CasaOS"&gt; &lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/raw/main/LICENSE" target="_blank"&gt; &lt;img alt="CasaOS License" src="https://img.shields.io/github/license/IceWhaleTech/CasaOS?color=162453&amp;amp;style=flat-square&amp;amp;label=License"&gt; &lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/pulls" target="_blank"&gt; &lt;img alt="CasaOS Pull Requests" src="https://img.shields.io/github/issues-pr/IceWhaleTech/CasaOS?color=162453&amp;amp;style=flat-square&amp;amp;label=PRs"&gt; &lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/issues" target="_blank"&gt; &lt;img alt="CasaOS Issues" src="https://img.shields.io/github/issues/IceWhaleTech/CasaOS?color=162453&amp;amp;style=flat-square&amp;amp;label=Issues"&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/IceWhaleTech/CasaOS"&gt; &lt;img src="https://codecov.io/gh/IceWhaleTech/CasaOS/branch/main/graph/badge.svg?token=l9uMKGlkxM"&gt; &lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/stargazers" target="_blank"&gt; &lt;img alt="CasaOS Stargazers" src="https://img.shields.io/github/stars/IceWhaleTech/CasaOS?color=162453&amp;amp;style=flat-square&amp;amp;label=Stars"&gt; &lt;/a&gt; 
 &lt;!-- &lt;a href="https://github.com/IceWhaleTech/CasaOS/releases" target="_blank"&gt;
    &lt;img alt="CasaOS Downloads" src="https://img.shields.io/github/downloads/IceWhaleTech/CasaOS/total?color=162453&amp;style=flat-square" /&gt;
    &lt;/a&gt; --&gt; &lt;br&gt; 
 &lt;!-- CasaOS Community --&gt; &lt;a href="https://discord.gg/knqAbbBbeX" target="_blank"&gt; &lt;img alt="IceWhale Discord" src="https://img.shields.io/discord/884667213326463016?color=162453&amp;amp;style=flat-square&amp;amp;label=Discord&amp;amp;logo=discord&amp;amp;logoColor=fff"&gt; &lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/discussions" target="_blank"&gt; &lt;img alt="CasaOS GitHub Discussions" src="https://img.shields.io/github/discussions/IceWhaleTech/CasaOS?color=162453&amp;amp;style=flat-square&amp;amp;label=Discussions&amp;amp;logo=github"&gt; &lt;/a&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#credits"&gt;&lt;img alt="All Contributors" src="https://img.shields.io/static/v1?label=All%20Contributors&amp;amp;message=15&amp;amp;color=162453&amp;amp;style=flat-square&amp;amp;logo=Handshake&amp;amp;logoColor=fff"&gt;&lt;/a&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:END --&gt; &lt;br&gt; 
 &lt;!-- CasaOS YouTube --&gt; &lt;a href="https://www.youtube.com/channel/UC2zMrUYT17AJhIl9XWZzT8g" target="_blank"&gt; &lt;img alt="YouTube Tutorial Views" src="https://img.shields.io/youtube/channel/views/UC2zMrUYT17AJhIl9XWZzT8g?style=for-the-badge&amp;amp;logo=youtube&amp;amp;logoColor=red&amp;amp;label=YouTube%20Tutorial%20Views"&gt; &lt;/a&gt; &lt;br&gt; 
 &lt;!-- CasaOS Links --&gt; &lt;a href="https://www.casaos.io" target="_blank"&gt;Website&lt;/a&gt; | &lt;a href="http://demo.casaos.io" target="_blank"&gt;Demo&lt;/a&gt; | &lt;a href="https://github.com/IceWhaleTech/CasaOS" target="_blank"&gt;GitHub&lt;/a&gt; &lt;br&gt; &lt;br&gt; 
 &lt;!-- CasaOS Snapshots --&gt; &lt;kbd&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="snapshot-dark.jpg"&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="snapshot-light.jpg"&gt; 
   &lt;img alt="CasaOS Snapshot" src="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/snapshot-light.jpg"&gt; 
  &lt;/picture&gt; &lt;/kbd&gt; &lt;/p&gt; 
&lt;h2&gt;Why do you need Personal Cloud?&lt;/h2&gt; 
&lt;p&gt;In 2020, the team noticed three important trends:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The cost of computing power and storage was decreasing fast.&lt;/li&gt; 
 &lt;li&gt;A part of cloud computing was moving towards edge computing.&lt;/li&gt; 
 &lt;li&gt;The issue of consumer data asset ownership and attribution had been ignored.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Based on these trends, the team proposed a thought experiment internally: what if personal clouds were available under $100 in next five years? This personal cloud would provide a low-cost data collaboration solution as a personal data center, storing and managing data for creators and small organizations. A distributed collaborative computing network can be formed by personal servers located around the world. It could also control and connect all smart devices, providing cross-ecosystem local intelligent services.&lt;/p&gt; 
&lt;p&gt;Furthermore, the personal cloud could combine personal data to train personalized AI assistants. The idea is that this technology would be an effective way to solve the issue of consumer data asset ownership and , as well as provide a more affordable and efficient computing solution for individuals and small organizations.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you think what we are doing is valuable. Please &lt;strong&gt;give us a star ⭐&lt;/strong&gt; and &lt;strong&gt;fork it 🤞&lt;/strong&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Friendly UI designed for home scenarios 
  &lt;ul&gt; 
   &lt;li&gt;No code, no forms, intuitive, design for humanity&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Multiple hardware and base system support 
  &lt;ul&gt; 
   &lt;li&gt;ZimaBoard, NUC, RPi, old computers, whatever is available.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Selected apps in the app store, one-click installation 
  &lt;ul&gt; 
   &lt;li&gt;Nextcloud, HomeAssistant, AdGuard, Jellyfin, *arr and more!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Easily install numerous Docker apps 
  &lt;ul&gt; 
   &lt;li&gt;Over 100,000 apps from the Docker ecosystem can be easily installed&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Elegant drive and file management 
  &lt;ul&gt; 
   &lt;li&gt;What you see is what you get. No technical background required.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Well-designed system/app widgets 
  &lt;ul&gt; 
   &lt;li&gt;What you care about, at a glance. Resource usage, app status, and more!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;CasaOS fully supports ZimaBoard, Intel NUC, and Raspberry Pi. Also, more computers and development boards and fully compatible with Ubuntu, Debian, Raspberry Pi OS, and CentOS with one-liner installation.&lt;/p&gt; 
&lt;h3&gt;Hardware Compatibility&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;amd64 / x86-64&lt;/li&gt; 
 &lt;li&gt;arm64&lt;/li&gt; 
 &lt;li&gt;armv7&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;System Compatibility&lt;/h3&gt; 
&lt;p&gt;Official Support&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Debian 12 (✅ Tested, Recommended)&lt;/li&gt; 
 &lt;li&gt;Ubuntu Server 20.04 (✅ Tested)&lt;/li&gt; 
 &lt;li&gt;Raspberry Pi OS (✅ Tested)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Community Support&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Elementary 6.1 (✅ Tested)&lt;/li&gt; 
 &lt;li&gt;Armbian 22.04 (✅ Tested)&lt;/li&gt; 
 &lt;li&gt;Alpine (🚧 Not Fully Tested Yet)&lt;/li&gt; 
 &lt;li&gt;OpenWrt (🚧 Not Fully Tested Yet)&lt;/li&gt; 
 &lt;li&gt;ArchLinux (🚧 Not Fully Tested Yet)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Setup CasaOS&lt;/h3&gt; 
&lt;p&gt;Freshly install a system from the list above and run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget -qO- https://get.casaos.io | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -fsSL https://get.casaos.io | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update CasaOS&lt;/h3&gt; 
&lt;p&gt;CasaOS can be updated from the User Interface (UI), via &lt;code&gt;Settings ... Update&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively it can be updated from a terminal session. To update from a terminal session, it must be done either from a secure shell (ssh) session to the device or from a directly attached terminal and keyboard to the device running CasaOS, this cannot be done from the terminal via the CasaOS User Interface (UI). To update to the latest release of CasaOS from a terminal session run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget -qO- https://get.casaos.io/update | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -fsSL https://get.casaos.io/update | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To determine version of CasaOS from a terminal session run this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;casaos -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Uninstall CasaOS&lt;/h3&gt; 
&lt;p&gt;v0.3.3 or newer&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;casaos-uninstall
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Before v0.3.3&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -fsSL https://get.icewhale.io/casaos-uninstall.sh | sudo bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The word Casa comes from the Spanish word for "home". Project CasaOS originated as a pre-installed system for the crowdfunded product &lt;a href="https://www.zimaboard.com"&gt;ZimaBoard&lt;/a&gt; on Kickstarter.&lt;/p&gt; 
&lt;p&gt;After looking at many systems and software on the market, the team found no server system designed for home scenarios, sadly true.&lt;/p&gt; 
&lt;p&gt;So, we set out to build this open-source project to develop CasaOS with our own hands, everyone in the community, and you.&lt;/p&gt; 
&lt;p&gt;We believe that through community-driven collaborative innovation and open communication with global developers, we can reshape the digital home experience like never before.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;A warm welcome for you to get help or share great ideas in the &lt;a href="https://discord.gg/knqAbbBbeX"&gt;Discord&lt;/a&gt;!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/knqAbbBbeX"&gt;&lt;img src="https://discordapp.com/api/guilds/884667213326463016/widget.png?style=banner2" alt="Discord Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;CasaOS is a community-driven open source project and the people involved are CasaOS users. That means CasaOS will always need contributions from community members just like you!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href="https://wiki.casaos.io/en/contribute"&gt;https://wiki.casaos.io/en/contribute&lt;/a&gt; for ways of contributing to CasaOS&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://wiki.casaos.io/en/contribute/development"&gt;https://wiki.casaos.io/en/contribute/development&lt;/a&gt; if you want to be involved in code contribution specifically&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;p&gt;Many thanks to everyone who has helped CasaOS so far!&lt;/p&gt; 
&lt;p&gt;Everyone's contribution is greatly appreciated. (&lt;a href="https://allcontributors.org/docs/en/emoji-key"&gt;Emoji Key&lt;/a&gt;)&lt;/p&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section --&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- markdownlint-disable --&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/jerrykuku"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9485680?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;老竭力&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=jerrykuku" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=jerrykuku" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-jerrykuku" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#infra-jerrykuku" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#maintenance-jerrykuku" title="Maintenance"&gt;🚧&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#platform-jerrykuku" title="Packaging/porting to new platform"&gt;📦&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-jerrykuku" title="Answering Questions"&gt;💬&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3Ajerrykuku" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/LinkLeong"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13556972?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;link&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=LinkLeong" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=LinkLeong" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-LinkLeong" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#infra-LinkLeong" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#maintenance-LinkLeong" title="Maintenance"&gt;🚧&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-LinkLeong" title="Answering Questions"&gt;💬&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3ALinkLeong" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/tigerinus"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7172560?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;太戈&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=tigerinus" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=tigerinus" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-tigerinus" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#infra-tigerinus" title="Infrastructure (Hosting, Build-Tools, etc)"&gt;🚇&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#maintenance-tigerinus" title="Maintenance"&gt;🚧&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#mentoring-tigerinus" title="Mentoring"&gt;🧑‍🏫&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#security-tigerinus" title="Security"&gt;🛡️&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-tigerinus" title="Answering Questions"&gt;💬&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3Atigerinus" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Lauren-ED209"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8243355?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Lauren&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-Lauren-ED209" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#fundingFinding-Lauren-ED209" title="Funding Finding"&gt;🔍&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#projectManagement-Lauren-ED209" title="Project Management"&gt;📆&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-Lauren-ED209" title="Answering Questions"&gt;💬&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=Lauren-ED209" title="Tests"&gt;⚠️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://JohnGuan.Cn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3358477?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;John Guan&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#blog-JohnGuan" title="Blogposts"&gt;📝&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#content-JohnGuan" title="Content"&gt;🖋&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=JohnGuan" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-JohnGuan" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#eventOrganizing-JohnGuan" title="Event Organizing"&gt;📋&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#mentoring-JohnGuan" title="Mentoring"&gt;🧑‍🏫&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-JohnGuan" title="Answering Questions"&gt;💬&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/pulls?q=is%3Apr+reviewed-by%3AJohnGuan" title="Reviewed Pull Requests"&gt;👀&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://blog.tippybits.com"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17506770?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;David Tippett&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=dtaivpp" title="Documentation"&gt;📖&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-dtaivpp" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-dtaivpp" title="Answering Questions"&gt;💬&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/zarevskaya"&gt;&lt;img src="https://avatars.githubusercontent.com/u/60230221?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Skaya&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#mentoring-zarevskaya" title="Mentoring"&gt;🧑‍🏫&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-zarevskaya" title="Answering Questions"&gt;💬&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#tutorial-zarevskaya" title="Tutorials"&gt;✅&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#translation-zarevskaya" title="Translation"&gt;🌍&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/AuthorShin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4959043?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;AuthorShin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=AuthorShin" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/issues?q=author%3AAuthorShin" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-AuthorShin" title="Answering Questions"&gt;💬&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-AuthorShin" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/baptiste313"&gt;&lt;img src="https://avatars.githubusercontent.com/u/93325157?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;baptiste313&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#translation-baptiste313" title="Translation"&gt;🌍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/DrMxrcy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58747968?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;DrMxrcy&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=DrMxrcy" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-DrMxrcy" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-DrMxrcy" title="Answering Questions"&gt;💬&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Joooost"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12090673?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Joooost&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-Joooost" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://potyarkin.ml"&gt;&lt;img src="https://avatars.githubusercontent.com/u/334908?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Vitaly Potyarkin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-sio" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/bearfrieze"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1023813?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Bjørn Friese&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-bearfrieze" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/Protektor-Desura"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1195496?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;Protektor&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/issues?q=author%3AProtektor-Desura" title="Bug reports"&gt;🐛&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#ideas-Protektor-Desura" title="Ideas, Planning, &amp;amp; Feedback"&gt;🤔&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#question-Protektor-Desura" title="Answering Questions"&gt;💬&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/llwaini"&gt;&lt;img src="https://avatars.githubusercontent.com/u/59589857?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;llwaini&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#projectManagement-llwaini" title="Project Management"&gt;📆&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=llwaini" title="Tests"&gt;⚠️&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/IceWhaleTech/CasaOS/main/#tutorial-llwaini" title="Tutorials"&gt;✅&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/CorrectRoadH"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29306285?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;CorrectRoadH&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=correctroadh" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=correctroadh" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://github.com/zhanghengxin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24197448?v=4?s=100" width="100px;" alt=""&gt;&lt;br&gt;&lt;sub&gt;&lt;b&gt;zhanghengxin&lt;/b&gt;&lt;/sub&gt;&lt;/a&gt;&lt;br&gt;&lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=zhanghengxin" title="Code"&gt;💻&lt;/a&gt; &lt;a href="https://github.com/IceWhaleTech/CasaOS/commits?author=zhanghengxin" title="Documentation"&gt;📖&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;!-- markdownlint-restore --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;!-- ALL-CONTRIBUTORS-LIST:END --&gt; 
&lt;p&gt;This project follows the &lt;a href="https://github.com/all-contributors/all-contributors"&gt;all-contributors&lt;/a&gt; specification. Contributions of any kind are welcome!&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;Detailed changes for each release are documented in the &lt;a href="https://github.com/IceWhaleTech/CasaOS/releases"&gt;release notes&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;p align="center"&gt; &lt;a href="https://dashboard.trackgit.com/token/l5q8egi92tfhlxd70l2l"&gt; &lt;img src="https://us-central1-trackgit-analytics.cloudfunctions.net/token/ping/l5q8egi92tfhlxd70l2l" alt="trackgit-views"&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AdguardTeam/AdGuardHome</title>
      <link>https://github.com/AdguardTeam/AdGuardHome</link>
      <description>&lt;p&gt;Network-wide ads &amp; trackers blocking DNS server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="doc/adguard_home_darkmode.svg"&gt; 
  &lt;img alt="AdGuard Home" src="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/doc/adguard_home_lightmode.svg?sanitize=true" width="300px"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;Privacy protection center for you and your devices&lt;/h3&gt; 
&lt;p align="center"&gt; Free and open source, powerful network-wide ads &amp;amp; trackers blocking DNS server. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://adguard.com/"&gt;AdGuard.com&lt;/a&gt; | &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt; | &lt;a href="https://reddit.com/r/Adguard"&gt;Reddit&lt;/a&gt; | &lt;a href="https://twitter.com/AdGuard"&gt;Twitter&lt;/a&gt; | &lt;a href="https://t.me/adguard_en"&gt;Telegram&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href="https://codecov.io/github/AdguardTeam/AdGuardHome?branch=master"&gt; &lt;img src="https://img.shields.io/codecov/c/github/AdguardTeam/AdGuardHome/master.svg?sanitize=true" alt="Code Coverage"&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/AdguardTeam/AdGuardHome"&gt; &lt;img src="https://goreportcard.com/badge/github.com/AdguardTeam/AdGuardHome" alt="Go Report Card"&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt; &lt;img alt="Docker Pulls" src="https://img.shields.io/docker/pulls/adguard/adguardhome.svg?maxAge=604800"&gt; &lt;/a&gt; &lt;br&gt; &lt;a href="https://github.com/AdguardTeam/AdGuardHome/releases"&gt; &lt;img src="https://img.shields.io/github/release/AdguardTeam/AdGuardHome/all.svg?sanitize=true" alt="Latest release"&gt; &lt;/a&gt; &lt;a href="https://snapcraft.io/adguard-home"&gt; &lt;img alt="adguard-home" src="https://snapcraft.io/adguard-home/badge.svg?sanitize=true"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;img src="https://cdn.adtidy.org/public/Adguard/Common/adguard_home.gif" width="800"&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it'll cover ALL your home devices, and you don't need any client-side software for that.&lt;/p&gt; 
&lt;p&gt;It operates as a DNS server that re-routes tracking domains to a “black hole”, thus preventing your devices from connecting to those servers. It's based on software we use for our public &lt;a href="https://adguard-dns.io/"&gt;AdGuard DNS&lt;/a&gt; servers, and both share a lot of code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides"&gt;Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api"&gt;API&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build"&gt;How to build from source&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues"&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate"&gt;Help with translations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other"&gt;Other&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy"&gt;Privacy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started" id="getting-started" name="getting-started"&gt;Getting Started&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac" id="automated-install-linux-and-mac" name="automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;To install with &lt;code&gt;curl&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;wget&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget --no-verbose -O - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;fetch&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fetch -o - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script also accepts some options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-c &amp;lt;channel&amp;gt;&lt;/code&gt; to use specified channel;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-r&lt;/code&gt; to reinstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-u&lt;/code&gt; to uninstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v&lt;/code&gt; for verbose output.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that options &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-u&lt;/code&gt; are mutually exclusive.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods" id="alternative-methods" name="alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#manual-installation" id="manual-installation" name="manual-installation"&gt;Manual installation&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Please read the &lt;strong&gt;&lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/"&gt;Getting Started&lt;/a&gt;&lt;/strong&gt; article on our Wiki to learn how to install AdGuard Home manually, and how to configure your devices to use it.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker" id="docker" name="docker"&gt;Docker&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can use our official Docker image on &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#snap-store" id="snap-store" name="snap-store"&gt;Snap Store&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;If you're running &lt;strong&gt;Linux,&lt;/strong&gt; there's a secure and easy way to install AdGuard Home: get it from the &lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides" id="guides" name="guides"&gt;Guides&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api" id="api" name="api"&gt;API&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to integrate with AdGuard Home, you can use our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/openapi"&gt;REST API&lt;/a&gt;. Alternatively, you can use this &lt;a href="https://pypi.org/project/adguardhome/"&gt;python client&lt;/a&gt;, which is used to build the &lt;a href="https://www.home-assistant.io/integrations/adguard/"&gt;AdGuard Home Hass.io Add-on&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison" id="comparison" name="comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns" id="comparison-adguard-dns" name="comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Running your own AdGuard Home server allows you to do much more than using a public DNS server. It's a completely different level. See for yourself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Choose what exactly the server blocks and permits.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Monitor your network activity.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add your own custom filtering rules.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Most importantly, it's your own server, and you are the only one who's in control.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole" id="comparison-pi-hole" name="comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;At this point, AdGuard Home has a lot in common with Pi-Hole. Both block ads and trackers using the so-called “DNS sinkholing” method and both allow customizing what's blocked.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We're not going to stop here. DNS sinkholing is not a bad starting point, but this is just the beginning.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;AdGuard Home provides a lot of features out-of-the-box with no need to install and configure additional software. We want it to be simple to the point when even casual users can set it up with minimal effort.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Some of the listed features can be added to Pi-Hole by installing additional software or by manually using SSH terminal and reconfiguring one of the utilities Pi-Hole consists of. However, in our opinion, this cannot be legitimately counted as a Pi-Hole's feature.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;AdGuard&amp;nbsp;Home&lt;/th&gt; 
   &lt;th&gt;Pi-Hole&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking ads and trackers&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Customizing blocklists&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in DHCP server&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTPS for the Admin interface&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;Kind of, but you'll need to manually configure lighttpd&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Encrypted DNS upstream servers (DNS-over-HTTPS, DNS-over-TLS, DNSCrypt)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cross-platform&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (not natively, only via Docker)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running as a DNS-over-HTTPS or DNS-over-TLS server&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking phishing and malware domains&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Parental control (blocking adult domains)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Force Safe search on search engines&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per-client (device) configuration&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Access settings (choose who can use AGH DNS)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running &lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/#running-without-superuser"&gt;without root privileges&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock" id="comparison-adblock" name="comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;It depends.&lt;/p&gt; 
&lt;p&gt;DNS sinkholing is capable of blocking a big percentage of ads, but it lacks the flexibility and the power of traditional ad blockers. You can get a good impression about the difference between these methods by reading &lt;a href="https://adguard.com/blog/adguard-vs-adaway-dns66.html"&gt;this article&lt;/a&gt;, which compares AdGuard for Android (a traditional ad blocker) to hosts-level ad blockers (which are almost identical to DNS-based blockers in their capabilities). This level of protection is enough for some users.&lt;/p&gt; 
&lt;p&gt;Additionally, using a DNS-based blocker can help to block ads, tracking and analytics requests on other types of devices, such as SmartTVs, smart speakers or other kinds of IoT devices (on which you can't install traditional ad blockers).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations" id="comparison-limitations" name="comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Here are some examples of what cannot be blocked by a DNS-level blocker:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;YouTube, Twitch ads;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Facebook, Twitter, Instagram sponsored posts.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Essentially, any advertising that shares a domain with content cannot be blocked by a DNS-level blocker.&lt;/p&gt; 
&lt;p&gt;Is there a chance to handle this in the future? DNS will never be enough to do this. Our only option is to use a content blocking proxy like what we do in the standalone AdGuard applications. We're &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues/1228"&gt;going to bring&lt;/a&gt; this feature support to AdGuard Home in the future. Unfortunately, even in this case, there still will be cases when this won't be enough or would require quite a complicated configuration.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build" id="how-to-build" name="how-to-build"&gt;How to build from source&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites" id="prerequisites" name="prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;make init&lt;/code&gt; to prepare the development environment.&lt;/p&gt; 
&lt;p&gt;You will need this to build AdGuard Home:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; v1.24 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; v20.19 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt; v10.8 or later;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building" id="building" name="building"&gt;Building&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Open your terminal and execute these commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/AdguardTeam/AdGuardHome
cd AdGuardHome
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The non-standard &lt;code&gt;-j&lt;/code&gt; flag is currently not supported, so building with &lt;code&gt;make -j 4&lt;/code&gt; or setting your &lt;code&gt;MAKEFLAGS&lt;/code&gt; to include, for example, &lt;code&gt;-j 4&lt;/code&gt; is likely to break the build. If you do have your &lt;code&gt;MAKEFLAGS&lt;/code&gt; set to that, and you don't want to change it, you can override it by running &lt;code&gt;make -j 1&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Check the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/Makefile"&gt;&lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt; to learn about other commands.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building-cross" id="building-cross" name="building-cross"&gt;Building for a different platform&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can build AdGuard Home for any OS/ARCH that Go supports. In order to do this, specify &lt;code&gt;GOOS&lt;/code&gt; and &lt;code&gt;GOARCH&lt;/code&gt; environment variables as macros when running &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;env GOOS='linux' GOARCH='arm64' make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make GOOS='linux' GOARCH='arm64'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#preparing-releases" id="preparing-releases" name="preparing-releases"&gt;Preparing releases&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You'll need &lt;a href="https://snapcraft.io/"&gt;&lt;code&gt;snapcraft&lt;/code&gt;&lt;/a&gt; to prepare a release build. Once installed, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make build-release CHANNEL='...' VERSION='...'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-releasesh-build-a-release-for-all-platforms"&gt;&lt;code&gt;build-release&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker-image" id="docker-image" name="docker-image"&gt;Docker image&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Run &lt;code&gt;make build-docker&lt;/code&gt; to build the Docker image locally (the one that we publish to DockerHub). Please note, that we're using &lt;a href="https://docs.docker.com/buildx/working-with-buildx/"&gt;Docker Buildx&lt;/a&gt; to build our official image.&lt;/p&gt; 
&lt;p&gt;You may need to prepare before using these builds:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;(Linux-only) Install Qemu:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Prepare the builder:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker buildx create --name buildx-builder --driver docker-container --use
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-dockersh-build-a-multi-architecture-docker-image"&gt;&lt;code&gt;build-docker&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#debugging-the-frontend" id="debugging-the-frontend" name="debugging-the-frontend"&gt;Debugging the frontend&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;When you need to debug the frontend without recompiling the production version every time, for example to check how your labels would look on a form, you can run the frontend build a development environment.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In a separate terminal, run:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;( cd ./client/ &amp;amp;&amp;amp; env NODE_ENV='development' npm run watch )
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run your &lt;code&gt;AdGuardHome&lt;/code&gt; binary with the &lt;code&gt;--local-frontend&lt;/code&gt; flag, which instructs AdGuard Home to ignore the built-in frontend files and use those from the &lt;code&gt;./build/&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now any changes you make in the &lt;code&gt;./client/&lt;/code&gt; directory should be recompiled and become available on the web UI. Make sure that you disable the browser cache to make sure that you actually get the recompiled version.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#e2e-frontend-tests" id="e2e-frontend-tests" name="e2e-frontend-tests"&gt;End-to-End (E2E) Frontend Tests&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;AdGuard Home uses &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for E2E testing. Tests are located in &lt;code&gt;tests/e2e&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Running Tests:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e&lt;/code&gt; – run all tests (headless).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:interactive&lt;/code&gt; – run tests interactively.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:debug&lt;/code&gt; – run tests in debug mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:codegen&lt;/code&gt; – generate new test code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install dependencies.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npx playwright install&lt;/code&gt; to set up required browsers.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Playwright will download and install its own browser binaries for testing, which may differ from the browsers installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing" id="contributing" name="contributing"&gt;Contributing&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;You are welcome to fork this repository, make your changes and &lt;a href="https://github.com/AdguardTeam/AdGuardHome/pulls"&gt;submit a pull request&lt;/a&gt;. Please make sure you follow our &lt;a href="https://github.com/AdguardTeam/CodeGuidelines/"&gt;code guidelines&lt;/a&gt; though.&lt;/p&gt; 
&lt;p&gt;Please note that we don't expect people to contribute to both UI and backend parts of the program simultaneously. Ideally, the backend part is implemented first, i.e. configuration, API, and the functionality itself. The UI part can be implemented later in a different pull request by a different person.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions" id="test-unstable-versions" name="test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;There are two update channels that you can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;beta&lt;/code&gt;: beta versions of AdGuard Home. More or less stable versions, usually released every two weeks or more often.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;edge&lt;/code&gt;: the newest version of AdGuard Home from the development branch. New updates are pushed to this channel daily.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are three options how you can install an unstable version:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; channels.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; tags.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Standalone builds. Use the automated installation script or look for the available builds &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki/Platforms"&gt;on the Wiki&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Script to install a beta version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c beta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Script to install an edge version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c edge
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues" id="reporting-issues" name="reporting-issues"&gt;Report issues&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you run into any problem or have a suggestion, head to &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues"&gt;this page&lt;/a&gt; and click on the “New issue” button. Please follow the instructions in the issue form carefully and don't forget to start by searching for duplicates.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate" id="translate" name="translate"&gt;Help with translations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to help with AdGuard Home translations, please learn more about translating AdGuard products &lt;a href="https://kb.adguard.com/en/general/adguard-translations"&gt;in our Knowledge Base&lt;/a&gt;. You can contribute to the &lt;a href="https://crowdin.com/project/adguard-applications/en#/adguard-home"&gt;AdGuardHome project on CrowdIn&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other" id="help-other" name="help-other"&gt;Other&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Another way you can contribute is by &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;looking for issues&lt;/a&gt; marked as &lt;code&gt;help wanted&lt;/code&gt;, asking if the issue is up for grabs, and sending a PR fixing the bug or implementing the feature.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses" id="uses" name="uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please note that these projects are not affiliated with AdGuard, but are made by third-party developers and fans.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://apps.apple.com/app/apple-store/id1543143740"&gt;AdGuard Home Remote&lt;/a&gt;: iOS app by &lt;a href="https://rocketscience-it.nl/"&gt;Joost&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/frenck/python-adguardhome"&gt;Python library&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hassio-addons/addon-adguard-home"&gt;Home Assistant add-on&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/kongfl888/luci-app-adguardhome"&gt;OpenWrt LUCI app&lt;/a&gt; by &lt;a href="https://github.com/kongfl888"&gt;@kongfl888&lt;/a&gt; (originally by &lt;a href="https://github.com/rufengsuixing"&gt;@rufengsuixing&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/bakito/adguardhome-sync"&gt;AdGuardHome sync&lt;/a&gt; by &lt;a href="https://github.com/bakito"&gt;@bakito&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Lissy93/AdGuardian-Term"&gt;Terminal-based, real-time traffic monitoring and statistics for your AdGuard Home instance&lt;/a&gt; by &lt;a href="https://github.com/Lissy93"&gt;@Lissy93&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://forum.gl-inet.com/t/adguardhome-on-gl-routers/10664"&gt;AdGuard Home on GLInet routers&lt;/a&gt; by &lt;a href="https://gl-inet.com/"&gt;Gl-Inet&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://git.cloudron.io/cloudron/adguard-home-app"&gt;Cloudron app&lt;/a&gt; by &lt;a href="https://github.com/gramakri"&gt;@gramakri&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/jumpsmm7/Asuswrt-Merlin-AdGuardHome-Installer"&gt;Asuswrt-Merlin-AdGuardHome-Installer&lt;/a&gt; by &lt;a href="https://github.com/jumpsmm7"&gt;@jumpsmm7&lt;/a&gt; aka &lt;a href="https://www.snbforums.com/members/somewhereovertherainbow.64179/"&gt;@SomeWhereOverTheRainBow&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Andrea055/AdguardHomeAPI"&gt;Node.js library&lt;/a&gt; by &lt;a href="https://github.com/Andrea055/"&gt;@Andrea055&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/satheshshiva/Adguard-Home-Browser-Ext"&gt;Browser Extension&lt;/a&gt; by &lt;a href="https://github.com/satheshshiva/"&gt;@satheshshiva&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/diasdmhub/AdGuard_Home_Zabbix_Template"&gt;Zabbix Template for AdGuard Home&lt;/a&gt; by &lt;a href="https://github.com/diasdmhub"&gt;@diasdmhub&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://community.chocolatey.org/packages/adguardhome/"&gt;Chocolatey package&lt;/a&gt; by &lt;a href="https://community.chocolatey.org/profiles/niks255"&gt;niks255&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments" id="acknowledgments" name="acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software wouldn't have been possible without:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bluele/gcache"&gt;gcache&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/miekg/dns"&gt;miekg's dns&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/go-yaml/yaml"&gt;go-yaml&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://godoc.org/github.com/kardianos/service"&gt;service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/dnsproxy"&gt;dnsproxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/urlfilter"&gt;urlfilter&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://reactjs.org"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tabler/tabler"&gt;Tabler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;And many more Node.js packages.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cliqz-oss/whotracks.me"&gt;whotracks.me data&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You might have seen that &lt;a href="https://coredns.io"&gt;CoreDNS&lt;/a&gt; was mentioned here before, but we've stopped using it in AdGuard Home.&lt;/p&gt; 
&lt;p&gt;For the full list of all Node.js packages in use, please take a look at &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/client/package.json"&gt;&lt;code&gt;client/package.json&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy" id="privacy" name="privacy"&gt;Privacy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Our main idea is that you are the one, who should be in control of your data. So it is only natural, that AdGuard Home does not collect any usage statistics, and does not use any web services unless you configure it to do so. See also the &lt;a href="https://adguard.com/en/privacy/home.html"&gt;full privacy policy&lt;/a&gt; with every bit that &lt;em&gt;could in theory be sent&lt;/em&gt; by AdGuard Home is available.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>