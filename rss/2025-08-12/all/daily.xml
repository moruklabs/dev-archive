<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Mon, 11 Aug 2025 01:30:55 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>nomic-ai/gpt4all</title>
      <link>https://github.com/nomic-ai/gpt4all</link>
      <description>&lt;p&gt;GPT4All: Run Local LLMs on Any Device. Open-source and available for commercial use.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;GPT4All&lt;/h1&gt; 
&lt;p align="center"&gt; Now with support for DeepSeek R1 Distillations &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.nomic.ai/gpt4all"&gt;Website&lt;/a&gt; • &lt;a href="https://docs.gpt4all.io"&gt;Documentation&lt;/a&gt; • &lt;a href="https://discord.gg/mGZE39AS3e"&gt;Discord&lt;/a&gt; • &lt;a href="https://www.youtube.com/watch?v=gQcZDXRVJok"&gt;YouTube Tutorial&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; GPT4All runs large language models (LLMs) privately on everyday desktops &amp;amp; laptops. &lt;/p&gt; 
&lt;p align="center"&gt; No API calls or GPUs required - you can just download the application and &lt;a href="https://docs.gpt4all.io/gpt4all_desktop/quickstart.html#quickstart"&gt;get started&lt;/a&gt;. &lt;/p&gt; 
&lt;p align="center"&gt; Read about what's new in &lt;a href="https://www.nomic.ai/blog/tag/gpt4all"&gt;our blog&lt;/a&gt;. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://nomic.ai/gpt4all/#newsletter-form"&gt;Subscribe to the newsletter&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/nomic-ai/gpt4all/assets/70534565/513a0f15-4964-4109-89e4-4f9a9011f311"&gt;https://github.com/nomic-ai/gpt4all/assets/70534565/513a0f15-4964-4109-89e4-4f9a9011f311&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; GPT4All is made possible by our compute partner &lt;a href="https://www.paperspace.com/"&gt;Paperspace&lt;/a&gt;. &lt;/p&gt; 
&lt;h2&gt;Download Links&lt;/h2&gt; 
&lt;p&gt; — &lt;a href="https://gpt4all.io/installers/gpt4all-installer-win64.exe"&gt; &lt;img src="https://raw.githubusercontent.com/nomic-ai/gpt4all/main/gpt4all-bindings/python/docs/assets/windows.png" style="height: 1em; width: auto" /&gt; Windows Installer &lt;/a&gt; — &lt;/p&gt; 
&lt;p&gt; — &lt;a href="https://gpt4all.io/installers/gpt4all-installer-win64-arm.exe"&gt; &lt;img src="https://raw.githubusercontent.com/nomic-ai/gpt4all/main/gpt4all-bindings/python/docs/assets/windows.png" style="height: 1em; width: auto" /&gt; Windows ARM Installer &lt;/a&gt; — &lt;/p&gt; 
&lt;p&gt; — &lt;a href="https://gpt4all.io/installers/gpt4all-installer-darwin.dmg"&gt; &lt;img src="https://raw.githubusercontent.com/nomic-ai/gpt4all/main/gpt4all-bindings/python/docs/assets/mac.png" style="height: 1em; width: auto" /&gt; macOS Installer &lt;/a&gt; — &lt;/p&gt; 
&lt;p&gt; — &lt;a href="https://gpt4all.io/installers/gpt4all-installer-linux.run"&gt; &lt;img src="https://raw.githubusercontent.com/nomic-ai/gpt4all/main/gpt4all-bindings/python/docs/assets/ubuntu.svg?sanitize=true" style="height: 1em; width: auto" /&gt; Ubuntu Installer &lt;/a&gt; — &lt;/p&gt; 
&lt;p&gt; The Windows and Linux builds require Intel Core i3 2nd Gen / AMD Bulldozer, or better. &lt;/p&gt; 
&lt;p&gt; The Windows ARM build supports Qualcomm Snapdragon and Microsoft SQ1/SQ2 processors. &lt;/p&gt; 
&lt;p&gt; The Linux build is x86-64 only (no ARM). &lt;/p&gt; 
&lt;p&gt; The macOS build requires Monterey 12.6 or newer. Best results with Apple Silicon M-series processors. &lt;/p&gt; 
&lt;p&gt;See the full &lt;a href="https://raw.githubusercontent.com/nomic-ai/gpt4all/main/gpt4all-chat/system_requirements.md"&gt;System Requirements&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;p&gt; &lt;a href="https://flathub.org/apps/io.gpt4all.gpt4all"&gt; &lt;img style="height: 2em; width: auto" alt="Get it on Flathub" src="https://flathub.org/api/badge" /&gt;&lt;br /&gt; Flathub (community maintained) &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Install GPT4All Python&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;gpt4all&lt;/code&gt; gives you access to LLMs with our Python client around &lt;a href="https://github.com/ggerganov/llama.cpp"&gt;&lt;code&gt;llama.cpp&lt;/code&gt;&lt;/a&gt; implementations.&lt;/p&gt; 
&lt;p&gt;Nomic contributes to open source software like &lt;a href="https://github.com/ggerganov/llama.cpp"&gt;&lt;code&gt;llama.cpp&lt;/code&gt;&lt;/a&gt; to make LLMs accessible and efficient &lt;strong&gt;for all&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install gpt4all
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from gpt4all import GPT4All
model = GPT4All("Meta-Llama-3-8B-Instruct.Q4_0.gguf") # downloads / loads a 4.66GB LLM
with model.chat_session():
    print(model.generate("How can I run LLMs efficiently on my laptop?", max_tokens=1024))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Integrations&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;🦜&lt;/span&gt;&lt;span&gt;🔗&lt;/span&gt; &lt;a href="https://python.langchain.com/v0.2/docs/integrations/providers/gpt4all/"&gt;Langchain&lt;/a&gt; &lt;span&gt;🗃&lt;/span&gt; &lt;a href="https://github.com/weaviate/weaviate"&gt;Weaviate Vector Database&lt;/a&gt; - &lt;a href="https://weaviate.io/developers/weaviate/modules/retriever-vectorizer-modules/text2vec-gpt4all"&gt;module docs&lt;/a&gt; &lt;span&gt;🔭&lt;/span&gt; &lt;a href="https://github.com/openlit/openlit"&gt;OpenLIT (OTel-native Monitoring)&lt;/a&gt; - &lt;a href="https://docs.openlit.io/latest/integrations/gpt4all"&gt;Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Release History&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;July 2nd, 2024&lt;/strong&gt;: V3.0.0 Release 
  &lt;ul&gt; 
   &lt;li&gt;Fresh redesign of the chat application UI&lt;/li&gt; 
   &lt;li&gt;Improved user workflow for LocalDocs&lt;/li&gt; 
   &lt;li&gt;Expanded access to more model architectures&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;October 19th, 2023&lt;/strong&gt;: GGUF Support Launches with Support for: 
  &lt;ul&gt; 
   &lt;li&gt;Mistral 7b base model, an updated model gallery on our website, several new local code models including Rift Coder v1.5&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.nomic.ai/posts/gpt4all-gpu-inference-with-vulkan"&gt;Nomic Vulkan&lt;/a&gt; support for Q4_0 and Q4_1 quantizations in GGUF.&lt;/li&gt; 
   &lt;li&gt;Offline build support for running old versions of the GPT4All Local LLM Chat Client.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;September 18th, 2023&lt;/strong&gt;: &lt;a href="https://blog.nomic.ai/posts/gpt4all-gpu-inference-with-vulkan"&gt;Nomic Vulkan&lt;/a&gt; launches supporting local LLM inference on NVIDIA and AMD GPUs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;July 2023&lt;/strong&gt;: Stable support for LocalDocs, a feature that allows you to privately and locally chat with your data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;June 28th, 2023&lt;/strong&gt;: &lt;a href="https://github.com/nomic-ai/gpt4all/tree/cef74c2be20f5b697055d5b8b506861c7b997fab/gpt4all-api"&gt;Docker-based API server&lt;/a&gt; launches allowing inference of local LLMs from an OpenAI-compatible HTTP endpoint.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;GPT4All welcomes contributions, involvement, and discussion from the open source community! Please see CONTRIBUTING.md and follow the issues, bug reports, and PR markdown templates.&lt;/p&gt; 
&lt;p&gt;Check project discord, with project owners, or through existing issues/PRs to avoid duplicate work. Please make sure to tag all of the above with relevant project identifiers or your contribution could potentially get lost. Example tags: &lt;code&gt;backend&lt;/code&gt;, &lt;code&gt;bindings&lt;/code&gt;, &lt;code&gt;python-bindings&lt;/code&gt;, &lt;code&gt;documentation&lt;/code&gt;, etc.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you utilize this repository, models or data in a downstream project, please consider citing it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@misc{gpt4all,
  author = {Yuvanesh Anand and Zach Nussbaum and Brandon Duderstadt and Benjamin Schmidt and Andriy Mulyar},
  title = {GPT4All: Training an Assistant-style Chatbot with Large Scale Data Distillation from GPT-3.5-Turbo},
  year = {2023},
  publisher = {GitHub},
  journal = {GitHub repository},
  howpublished = {\url{https://github.com/nomic-ai/gpt4all}},
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>menloresearch/jan</title>
      <link>https://github.com/menloresearch/jan</link>
      <description>&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Local AI Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/menloresearch/jan/dev/docs/src/pages/docs/_assets/jan-app.png" alt="Jan AI" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/menloresearch/jan" /&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/menloresearch/jan" /&gt; &lt;img alt="Github Contributors" src="https://img.shields.io/github/contributors/menloresearch/jan" /&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/menloresearch/jan" /&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://jan.ai/docs/quickstart"&gt;Getting Started&lt;/a&gt; - &lt;a href="https://jan.ai/docs"&gt;Docs&lt;/a&gt; - &lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - &lt;a href="https://github.com/menloresearch/jan/issues"&gt;Bug reports&lt;/a&gt; - &lt;a href="https://discord.gg/AsJ8krTT3N"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jan is an AI assistant that can run 100% offline on your device. Download and run LLMs with &lt;strong&gt;full control&lt;/strong&gt; and &lt;strong&gt;privacy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started is by downloading one of the following versions for your respective operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Stable&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Nightly&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;macOS&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (deb)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (AppImage)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Download from &lt;a href="https://jan.ai/"&gt;jan.ai&lt;/a&gt; or &lt;a href="https://github.com/menloresearch/jan/releases"&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local AI Models&lt;/strong&gt;: Download and run LLMs (Llama, Gemma, Qwen, etc.) from HuggingFace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Integration&lt;/strong&gt;: Connect to OpenAI, Anthropic, Mistral, Groq, and others&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Assistants&lt;/strong&gt;: Create specialized AI assistants for your tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI-Compatible API&lt;/strong&gt;: Local server at &lt;code&gt;localhost:1337&lt;/code&gt; for other applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: MCP integration for enhanced capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt;: Everything runs locally when you want it to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;For those who enjoy the scenic route:&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js ≥ 20.0.0&lt;/li&gt; 
 &lt;li&gt;Yarn ≥ 1.22.0&lt;/li&gt; 
 &lt;li&gt;Make ≥ 3.81&lt;/li&gt; 
 &lt;li&gt;Rust (for Tauri)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This handles everything: installs dependencies, builds core components, and launches the app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available make targets:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Mise (easier)&lt;/h3&gt; 
&lt;p&gt;You can also run with &lt;a href="https://mise.jdx.dev/"&gt;mise&lt;/a&gt;, which is a bit easier as it ensures Node.js, Rust, and other dependency versions are automatically managed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan

# Install mise (if not already installed)
curl https://mise.run | sh

# Install tools and start development
mise install    # installs Node.js, Rust, and other tools
mise dev        # runs the full development setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available mise commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;mise dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise tasks&lt;/code&gt; - List all available tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn build:core
yarn build:extensions
yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Minimum specs for a decent experience:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 13.6+ (8GB RAM for 3B models, 16GB for 7B, 32GB for 13B)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 10+ with GPU support for NVIDIA/AMD/Intel Arc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Most distributions work, GPU acceleration available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed compatibility, check our &lt;a href="https://jan.ai/docs/desktop/mac"&gt;installation guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If things go sideways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check our &lt;a href="https://jan.ai/docs/troubleshooting"&gt;troubleshooting docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy your error logs and system specs&lt;/li&gt; 
 &lt;li&gt;Ask for help in our &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; &lt;code&gt;#🆘|jan-help&lt;/code&gt; channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions welcome. See &lt;a href="https://raw.githubusercontent.com/menloresearch/jan/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for the full spiel.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/docs"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/api-reference"&gt;API Reference&lt;/a&gt; - For the technically inclined&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/menloresearch/jan/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@jan.ai"&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:hr@jan.ai"&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 - Because sharing is caring.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Built on the shoulders of giants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scalar/scalar"&gt;Scalar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>polarsource/polar</title>
      <link>https://github.com/polarsource/polar</link>
      <description>&lt;p&gt;An open source engine for your digital products. Sell SaaS and digital products in minutes.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://polar.sh"&gt; &lt;img src="https://github.com/user-attachments/assets/89a588e5-0c58-429a-8bbe-20f70af41372" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://www.producthunt.com/posts/polar-5?embed=true&amp;amp;utm_source=badge-top-post-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-polar-5" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=484271&amp;amp;theme=dark&amp;amp;period=daily" alt="Polar - An open source monetization platform for developers | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://www.producthunt.com/posts/polar-5?embed=true&amp;amp;utm_source=badge-top-post-topic-badge&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-polar-5" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/top-post-topic-badge.svg?post_id=484271&amp;amp;theme=dark&amp;amp;period=monthly&amp;amp;topic_id=267" alt="Polar - An open source monetization platform for developers | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://polar.sh"&gt;Website&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://polar.sh/blog"&gt;Blog&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://polar.sh/docs"&gt;Docs&lt;/a&gt; &lt;span&gt;&amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp;&lt;/span&gt; &lt;a href="https://docs.polar.sh/api-reference"&gt;API Reference&lt;/a&gt;&lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://discord.gg/Pnhfz3UThd"&gt; &lt;img src="https://img.shields.io/badge/chat-on%20discord-7289DA.svg?sanitize=true" alt="Discord Chat" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=polar_sh"&gt; &lt;img src="https://img.shields.io/twitter/follow/polar_sh.svg?label=Follow%20@polar_sh" alt="Follow @polar_sh" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Polar: Open Source payments infrastructure for the 21st century&lt;/h2&gt; 
&lt;p&gt;Focus on building your passion, while we focus on the infrastructure to get you paid.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sell SaaS and digital products in minutes&lt;/li&gt; 
 &lt;li&gt;All-in-one funding &amp;amp; monetization platform for developers.&lt;/li&gt; 
 &lt;li&gt;Sell access to GitHub repositories, Discord Support channels, File Downloads, License Keys &amp;amp; much more with Digital Products &amp;amp; Subscriptions.&lt;/li&gt; 
 &lt;li&gt;We're the merchant of record handling the... 
  &lt;ul&gt; 
   &lt;li&gt;...boilerplate (billing, receipts, customer accounts etc)&lt;/li&gt; 
   &lt;li&gt;...headaches (sales tax, VAT)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pricing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;4% + 40¢&lt;/li&gt; 
 &lt;li&gt;No fixed monthly costs&lt;/li&gt; 
 &lt;li&gt;Additional fees may apply. &lt;a href="https://docs.polar.sh/documentation/polar-as-merchant-of-record/fees"&gt;Read more&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap, Issues &amp;amp; Feature Requests&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;🎯 Upcoming milestones.&lt;/strong&gt; &lt;a href="https://github.com/polarsource/polar/issues/3242"&gt;Check out what we're building towards&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;💬 Shape the future of Polar with us.&lt;/strong&gt; &lt;a href="https://discord.gg/Pnhfz3UThd"&gt;Join our Discord&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🐛 Found a bug?&lt;/strong&gt; &lt;a href="https://github.com/polarsource/polar/issues"&gt;Submit it here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🔓 Found a security vulnerability?&lt;/strong&gt; We greatly appreciate responsible and private disclosures. See &lt;a href="https://raw.githubusercontent.com/polarsource/polar/main/SECURITY.md"&gt;Security&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Polar API &amp;amp; SDK&lt;/h3&gt; 
&lt;p&gt;You can integrate Polar on your docs, sites or services using our &lt;a href="https://docs.polar.sh/api-reference"&gt;Public API&lt;/a&gt; and &lt;a href="https://docs.polar.sh/developers/webhooks"&gt;Webhook API&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;We also maintain SDKs for the following languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;JavaScript (Node.js and browsers): &lt;a href="https://github.com/polarsource/polar-js"&gt;polarsource/polar-js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Python: &lt;a href="https://github.com/polarsource/polar-python"&gt;polarsource/polar-python&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;Our &lt;a href="https://raw.githubusercontent.com/polarsource/polar/main/DEVELOPMENT.md"&gt;&lt;code&gt;DEVELOPMENT.md&lt;/code&gt;&lt;/a&gt; file contains everything you need to know to configure your development environment.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Want to get started quickly? Use GitHub Codespaces.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://codespaces.new/polarsource/polar?machine=standardLinux32gb"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Contributors&lt;/h3&gt; 
&lt;a href="https://github.com/polarsource/polar/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=polarsource/polar" /&gt; &lt;/a&gt; 
&lt;h2&gt;Monorepo&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/polarsource/polar/main/server/README.md"&gt;server&lt;/a&gt;&lt;/strong&gt; – Python / FastAPI / Dramatiq / SQLAlchemy (PostgreSQL) / Redis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/polarsource/polar/main/clients/README.md"&gt;clients&lt;/a&gt;&lt;/strong&gt; – Turborepo 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/polarsource/polar/main/clients/apps/web"&gt;web&lt;/a&gt; (Dashboard) – NextJS (TypeScript)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/polarsource/polar/main/clients/packages/polarkit"&gt;polarkit&lt;/a&gt; - Shared React components&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;sub&gt;♥️🙏 To our &lt;code&gt;pyproject.toml&lt;/code&gt; friends: &lt;a href="https://github.com/tiangolo/fastapi"&gt;FastAPI&lt;/a&gt;, &lt;a href="https://github.com/pydantic/pydantic"&gt;Pydantic&lt;/a&gt;, &lt;a href="https://github.com/Bogdanp/dramatiq"&gt;Dramatiq&lt;/a&gt;, &lt;a href="https://github.com/sqlalchemy/sqlalchemy"&gt;SQLAlchemy&lt;/a&gt;, &lt;a href="https://github.com/yanyongyu/githubkit"&gt;Githubkit&lt;/a&gt;, &lt;a href="https://github.com/sysid/sse-starlette"&gt;sse-starlette&lt;/a&gt;, &lt;a href="https://github.com/encode/uvicorn"&gt;Uvicorn&lt;/a&gt;, &lt;a href="https://github.com/frankie567/httpx-oauth"&gt;httpx-oauth&lt;/a&gt;, &lt;a href="https://github.com/pallets/jinja"&gt;jinja&lt;/a&gt;, &lt;a href="https://github.com/pallets-eco/blinker"&gt;blinker&lt;/a&gt;, &lt;a href="https://github.com/jpadilla/pyjwt"&gt;pyjwt&lt;/a&gt;, &lt;a href="https://github.com/getsentry/sentry"&gt;Sentry&lt;/a&gt; + more&lt;/sub&gt;&lt;br /&gt; &lt;sub&gt;♥️🙏 To our &lt;code&gt;package.json&lt;/code&gt; friends: &lt;a href="https://github.com/vercel/next.js/"&gt;Next.js&lt;/a&gt;, &lt;a href="https://github.com/TanStack/query"&gt;TanStack Query&lt;/a&gt;, &lt;a href="https://github.com/tailwindlabs/tailwindcss"&gt;tailwindcss&lt;/a&gt;, &lt;a href="https://github.com/pmndrs/zustand"&gt;zustand&lt;/a&gt;, &lt;a href="https://github.com/ferdikoomen/openapi-typescript-codegen"&gt;openapi-typescript-codegen&lt;/a&gt;, &lt;a href="https://github.com/axios/axios"&gt;axios&lt;/a&gt;, &lt;a href="https://github.com/radix-ui/primitives"&gt;radix-ui&lt;/a&gt;, &lt;a href="https://github.com/pacocoursey/cmdk"&gt;cmdk&lt;/a&gt;, &lt;a href="https://github.com/framer/motion"&gt;framer-motion&lt;/a&gt; + more&lt;/sub&gt;&lt;br /&gt; &lt;sub&gt;♥️🙏 To &lt;a href="https://ipinfo.io"&gt;IPinfo&lt;/a&gt; that provides IP address data to help us geolocate customers during checkout.&lt;/sub&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>xiaoyaocz/dart_simple_live</title>
      <link>https://github.com/xiaoyaocz/dart_simple_live</link>
      <description>&lt;p&gt;简简单单的看直播&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;h3&gt;⚠ 本项目不提供Release安装包，请自行编译后运行测试。&lt;/h3&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; &lt;img width="128" src="https://raw.githubusercontent.com/xiaoyaocz/dart_simple_live/master/assets/logo.png" alt="Simple Live logo" /&gt; &lt;/p&gt; 
&lt;h2 align="center"&gt;Simple Live&lt;/h2&gt; 
&lt;p align="center"&gt; 简简单单的看直播 &lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/xiaoyaocz/dart_simple_live/master/assets/screenshot_light.jpg" alt="浅色模式" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/xiaoyaocz/dart_simple_live/master/assets/screenshot_dark.jpg" alt="深色模式" /&gt;&lt;/p&gt; 
&lt;h2&gt;支持直播平台：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;虎牙直播&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;斗鱼直播&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;哔哩哔哩直播&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;抖音直播&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;APP支持平台&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Android&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; iOS&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Windows &lt;code&gt;BETA&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; MacOS &lt;code&gt;BETA&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Linux &lt;code&gt;BETA&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Android TV &lt;code&gt;BETA&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;项目结构&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;simple_live_core&lt;/code&gt; 项目核心库，实现获取各个网站的信息及弹幕。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;simple_live_console&lt;/code&gt; 基于simple_live_core的控制台程序。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;simple_live_app&lt;/code&gt; 基于核心库实现的Flutter APP客户端。&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;simple_live_tv_app&lt;/code&gt; 基于核心库实现的Flutter Android TV客户端。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;环境&lt;/h2&gt; 
&lt;p&gt;Flutter : &lt;code&gt;3.22&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;参考及引用&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/xiaoyaocz/AllLive"&gt;AllLive&lt;/a&gt; &lt;code&gt;本项目的C#版，有兴趣可以看看&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/xiaoyaocz/dart_tars_protocol.git"&gt;dart_tars_protocol&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/wbt5/real-url"&gt;wbt5/real-url&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/lovelyyoshino/Bilibili-Live-API/raw/master/API.WebSocket.md"&gt;lovelyyoshino/Bilibili-Live-API&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/IsoaSFlus/danmaku"&gt;IsoaSFlus/danmaku&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/BacooTang/huya-danmu"&gt;BacooTang/huya-danmu&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/TarsCloud/Tars"&gt;TarsCloud/Tars&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/YunzhiYike/douyin-live"&gt;YunzhiYike/douyin-live&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/5ime/Tiktok_Signature"&gt;5ime/Tiktok_Signature&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;声明&lt;/h2&gt; 
&lt;p&gt;本项目的所有功能都是基于互联网上公开的资料开发，无任何破解、逆向工程等行为。&lt;/p&gt; 
&lt;p&gt;本项目仅用于学习交流编程技术，严禁将本项目用于商业目的。如有任何商业行为，均与本项目无关。&lt;/p&gt; 
&lt;p&gt;如果本项目存在侵犯您的合法权益的情况，请及时与开发者联系，开发者将会及时删除有关内容。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>umami-software/umami</title>
      <link>https://github.com/umami-software/umami</link>
      <description>&lt;p&gt;Umami is a modern, privacy-focused alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://content.umami.is/website/images/umami-logo.png" alt="Umami Logo" width="100" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Umami&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;i&gt;Umami is a simple, fast, privacy-focused alternative to Google Analytics.&lt;/i&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami/releases"&gt; &lt;img src="https://img.shields.io/github/release/umami-software/umami.svg?sanitize=true" alt="GitHub Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/raw/master/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/umami-software/umami.svg?sanitize=true" alt="MIT License" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/actions"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/umami-software/umami/ci.yml" alt="Build Status" /&gt; &lt;/a&gt; &lt;a href="https://analytics.umami.is/share/LGazGOecbDtaIwDr/umami.is" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Try%20Demo%20Now-Click%20Here-brightgreen" alt="Umami Demo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href="https://umami.is/docs/"&gt;umami.is/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛠 Installing from Source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js version 18.18 or newer&lt;/li&gt; 
 &lt;li&gt;A database. Umami supports &lt;a href="https://www.mariadb.org/"&gt;MariaDB&lt;/a&gt; (minimum v10.5), &lt;a href="https://www.mysql.com/"&gt;MySQL&lt;/a&gt; (minimum v8.0) and &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; (minimum v12.14) databases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the Source Code and Install Packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/umami-software/umami.git
cd umami
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure Umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DATABASE_URL=connection-url
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection URL format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;postgresql://username:mypassword@localhost:5432/mydb
mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;The build step will create tables in your database if you are installing for the first time. It will also create a login user with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Start the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;By default, this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/"&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href="https://nextjs.org/docs/api-reference/cli#production"&gt;port&lt;/a&gt; to serve the application directly.&lt;/em&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🐳 Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the Umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🔄 Getting Updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update the Docker image, simply pull the new images and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose pull
docker compose up --force-recreate -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🛟 Support&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami"&gt; &lt;img src="https://img.shields.io/badge/GitHub--blue?style=social&amp;amp;logo=github" alt="GitHub" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/umami_software"&gt; &lt;img src="https://img.shields.io/badge/Twitter--blue?style=social&amp;amp;logo=twitter" alt="Twitter" /&gt; &lt;/a&gt; &lt;a href="https://linkedin.com/company/umami-software"&gt; &lt;img src="https://img.shields.io/badge/LinkedIn--blue?style=social&amp;amp;logo=linkedin" alt="LinkedIn" /&gt; &lt;/a&gt; &lt;a href="https://umami.is/discord"&gt; &lt;img src="https://img.shields.io/badge/Discord--blue?style=social&amp;amp;logo=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>topjohnwu/Magisk</title>
      <link>https://github.com/topjohnwu/Magisk</link>
      <description>&lt;p&gt;The Magic Mask for Android&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/topjohnwu/Magisk/master/docs/images/logo.png" alt="" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/topjohnwu/magisk-files/count/count.json"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?color=green&amp;amp;label=Downloads&amp;amp;query=totalString&amp;amp;url=https%3A%2F%2Fraw.githubusercontent.com%2Ftopjohnwu%2Fmagisk-files%2Fcount%2Fcount.json&amp;amp;cacheSeconds=1800" alt="Downloads" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;This is not an officially supported Google product&lt;/h4&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Magisk is a suite of open source software for customizing Android, supporting devices higher than Android 6.0.&lt;br /&gt; Some highlight features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MagiskSU&lt;/strong&gt;: Provide root access for applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Magisk Modules&lt;/strong&gt;: Modify read-only partitions by installing modules&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MagiskBoot&lt;/strong&gt;: The most complete tool for unpacking and repacking Android boot images&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Zygisk&lt;/strong&gt;: Run code in every Android applications' processes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/topjohnwu/Magisk/releases"&gt;Github&lt;/a&gt; is the only source where you can get official Magisk information and downloads.&lt;/p&gt; 
&lt;h2&gt;Useful Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://topjohnwu.github.io/Magisk/install.html"&gt;Installation Instruction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://topjohnwu.github.io/Magisk/build.html"&gt;Building and Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://topjohnwu.github.io/Magisk/"&gt;Magisk Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/topjohnwu/zygisk-module-sample"&gt;Zygisk module sample&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Bug Reports&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Only bug reports from Debug builds will be accepted.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;For installation issues, upload both boot image and install logs.&lt;br /&gt; For Magisk issues, upload boot logcat or dmesg.&lt;br /&gt; For Magisk app crashes, record and upload the logcat when the crash occurs.&lt;/p&gt; 
&lt;h2&gt;Translation Contributions&lt;/h2&gt; 
&lt;p&gt;Default string resources for the Magisk app and its stub APK are located here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;app/core/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;app/stub/src/main/res/values/strings.xml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Translate each and place them in the respective locations (&lt;code&gt;[module]/src/main/res/values-[lang]/strings.xml&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Magisk, including all git submodules are free software:
you can redistribute it and/or modify it under the terms of the
GNU General Public License as published by the Free Software Foundation,
either version 3 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>idosal/git-mcp</title>
      <link>https://github.com/idosal/git-mcp</link>
      <description>&lt;p&gt;Put an end to code hallucinations! GitMCP is a free, open-source, remote MCP server for any GitHub project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitMCP&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img width="884" alt="image" src="https://github.com/user-attachments/assets/2bf3e3df-556c-49c6-ab7b-36c279d53bba" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-what-is-gitmcp"&gt;What is GitMCP&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-getting-started"&gt;Getting Started&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-how-it-works"&gt;How It Works&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-badge"&gt;Badge&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-examples"&gt;Examples&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-faq"&gt;FAQ&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-privacy"&gt;Privacy&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/idosal1"&gt;&lt;img src="https://img.shields.io/twitter/follow/idosal1?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/liadyosef"&gt;&lt;img src="https://img.shields.io/twitter/follow/liadyosef?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.pulsemcp.com/servers/idosal-git-mcp"&gt;&lt;img src="https://www.pulsemcp.com/badge/top-pick/idosal-git-mcp" width="400" alt="Pulse MCP Badge" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;🤔 What is GitMCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Stop vibe-hallucinating and start vibe-coding!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitmcp.io"&gt;GitMCP&lt;/a&gt; is a free, open-source, remote &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt; server that transforms &lt;strong&gt;any&lt;/strong&gt; GitHub project (repositories or GitHub pages) into a documentation hub. It enables AI tools like Cursor to access up-to-date documentation and code, even if the LLM has never encountered them, thereby eliminating code hallucinations seamlessly.&lt;/p&gt; 
&lt;p&gt;GitMCP supports &lt;strong&gt;two flavors&lt;/strong&gt; -&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Specific Repository (&lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt; or &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;):&lt;/strong&gt; Use these when you primarily work with a select number of libraries. This ensures your AI assistant always targets the correct project, enhancing security and relevance by preventing access to unintended repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generic Server (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;):&lt;/strong&gt; Use this for maximum flexibility when you need to switch between different repositories frequently. The AI assistant will prompt you (or decide based on context) which repository to access for each request. Be mindful that this relies on correctly identifying the target repository each time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;With GitMCP:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI assistants access the &lt;em&gt;latest&lt;/em&gt; documentation and code directly from the source.&lt;/li&gt; 
 &lt;li&gt;Get accurate API usage and reliable code examples.&lt;/li&gt; 
 &lt;li&gt;Work effectively even with niche, new, or rapidly changing libraries.&lt;/li&gt; 
 &lt;li&gt;Significantly reduced hallucinations and improved code correctness.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, this side-by-side comparison shows the result for the same one-shot prompt in Cursor when creating a &lt;a href="https://github.com/mrdoob/three.js"&gt;three.js&lt;/a&gt; scene -&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45"&gt;https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;😎 &lt;strong&gt;Latest Documentation on ANY GitHub Project&lt;/strong&gt;: Grant your AI assistant seamless access to the GitHub project's documentation and code. The built-in smart search capabilities help find exactly what the AI needs without using too many tokens!&lt;/li&gt; 
 &lt;li&gt;🧠 &lt;strong&gt;No More Hallucinations&lt;/strong&gt;: With GitMCP, your AI assistant can provide accurate and relevant answers to your questions.&lt;/li&gt; 
 &lt;li&gt;☁️ &lt;strong&gt;Zero Setup&lt;/strong&gt;: GitMCP runs in the cloud. Simply add the chosen GitMCP URL as an MCP server in your IDE — no downloads, installations, signups, or changes are required.&lt;/li&gt; 
 &lt;li&gt;💬 &lt;strong&gt;Embedded Chat&lt;/strong&gt;: Start quickly by chatting directly with the repository's documentation through our in-browser chat!&lt;/li&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Open, Free, and Private&lt;/strong&gt;: GitMCP is open-source and completely free to use. It doesn't collect personal information or store queries. You can even self-host it!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;video src="https://github.com/user-attachments/assets/2c3afaf9-6c08-436e-9efd-db8710554430"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Getting Started&lt;/h2&gt; 
&lt;p&gt;Using GitMCP is easy! Simply follow these steps:&lt;/p&gt; 
&lt;h3&gt;Step 1: Choose the type of server you want&lt;/h3&gt; 
&lt;p&gt;Choose one of these URL formats depending on what you want to connect to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For GitHub repositories: &lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For GitHub Pages sites: &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For a generic tool that supports any repository (dynamic): &lt;code&gt;gitmcp.io/docs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Replace &lt;code&gt;{owner}&lt;/code&gt; with the GitHub username or organization name, and &lt;code&gt;{repo}&lt;/code&gt; with the repository name.&lt;/p&gt; 
&lt;p&gt;For your convenience, you can also use the conversion tool on the landing page to format the GitHub URL into an MCP URL!&lt;/p&gt; 
&lt;h3&gt;Step 2: Connect your AI assistant&lt;/h3&gt; 
&lt;p&gt;Select your AI assistant from the options below and follow the configuration instructions:&lt;/p&gt; 
&lt;h4&gt;Connecting Cursor&lt;/h4&gt; 
&lt;p&gt;Update your Cursor configuration file at &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Claude Desktop&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;In Claude Desktop, go to Settings &amp;gt; Developer &amp;gt; Edit Config&lt;/li&gt; 
 &lt;li&gt;Replace the configuration with: &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Connecting Windsurf&lt;/h4&gt; 
&lt;p&gt;Update your Windsurf configuration file at &lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "serverUrl": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting VSCode&lt;/h4&gt; 
&lt;p&gt;Update your VSCode configuration file at &lt;code&gt;.vscode/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "gitmcp": {
      "type": "sse",
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Cline&lt;/h4&gt; 
&lt;p&gt;Update your Cline configuration file at &lt;code&gt;~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}",
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Highlight AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Highlight AI and click the plugins icon (@ symbol) in the sidebar&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Installed Plugins&lt;/strong&gt; at the top of the sidebar&lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Custom Plugin&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Add a plugin using a custom SSE URL&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Plugin name: &lt;code&gt;gitmcp&lt;/code&gt; SSE URL: &lt;code&gt;https://gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more details on adding custom MCP servers to HighlightAI, refer to &lt;a href="https://docs.highlightai.com/learn/developers/plugins/custom-plugins-setup"&gt;the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Connecting Augment Code&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Augment Code settings&lt;/li&gt; 
 &lt;li&gt;Navigate to the MCP section&lt;/li&gt; 
 &lt;li&gt;Add a new MCP server with the following details:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Name the MCP server: &lt;code&gt;git-mcp Docs&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Use this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx mcp-remote https://gitmcp.io/{owner}/{repo}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Msty AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Msty Studio&lt;/li&gt; 
 &lt;li&gt;Go to Tools &amp;gt; Import Tools from JSON Clipboard&lt;/li&gt; 
 &lt;li&gt;Paste the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring MCP servers in Augment Code, visit &lt;a href="https://docs.augmentcode.com/setup-augment/mcp"&gt;the Augment Code documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember to replace &lt;code&gt;{owner}&lt;/code&gt; and &lt;code&gt;{repo}&lt;/code&gt; with the actual GitHub username/organization and repository name. You can also use the dynamic endpoint &lt;code&gt;https://gitmcp.io/docs&lt;/code&gt; to allow your AI to access any repository on demand.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;⚙ How It Works&lt;/h2&gt; 
&lt;p&gt;GitMCP connects your AI assistant to GitHub repositories using the Model Context Protocol (MCP), a standard that lets AI tools request additional information from external sources.&lt;/p&gt; 
&lt;p&gt;What happens when you use GitMCP:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;You provide the GitMCP URL&lt;/strong&gt; to your AI assistant (e.g., &lt;code&gt;gitmcp.io/microsoft/typescript&lt;/code&gt;). GitMCP exposes tools like documentation fetching, smart search, code search, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt the AI assistant&lt;/strong&gt; on documentation/code-related questions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI sends requests&lt;/strong&gt; to GitMCP to use its tools (with your approval).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitMCP executes the AI's request&lt;/strong&gt; and returns the requested data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI receives the information&lt;/strong&gt; and generates a more accurate, grounded response without hallucinations.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported Documentation&lt;/h3&gt; 
&lt;p&gt;GitMCP currently supports the following documents (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://llmstxt.org"&gt;llms.txt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AI-optimized version of the project's documentation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;/root&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;💡 Examples&lt;/h2&gt; 
&lt;p&gt;Here are some examples of how to use GitMCP with different AI assistants and repositories:&lt;/p&gt; 
&lt;h3&gt;Example 1: Using Windsurf with a specific repository&lt;/h3&gt; 
&lt;p&gt;For the GitHub repository &lt;code&gt;https://github.com/microsoft/playwright-mcp&lt;/code&gt;, add &lt;code&gt;https://gitmcp.io/microsoft/playwright-mcp&lt;/code&gt; as an MCP server to Windsurf.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Claude:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"How do I use the Playwright MCP"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Windsurf will pull the relevant documentation from GitMCP to implement the memory feature correctly.&lt;/p&gt; 
&lt;h3&gt;Example 2: Using Cursor with a GitHub Pages site&lt;/h3&gt; 
&lt;p&gt;For the GitHub Pages site &lt;code&gt;langchain-ai.github.io/langgraph&lt;/code&gt;, add &lt;code&gt;https://langchain-ai.gitmcp.io/langgraph&lt;/code&gt; as an MCP server to Cursor.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Cursor:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Add memory to my LangGraph agent"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cursor will pull the relevant documentation and code from GitMCP to correctly implement the memory feature.&lt;/p&gt; 
&lt;h3&gt;Example 3: Using Claude Desktop with the dynamic endpoint&lt;/h3&gt; 
&lt;p&gt;You don't have to pick specific repositories. The generic &lt;code&gt;gitmcp.io/docs&lt;/code&gt; endpoint allows AI to pick the GitHub project on the fly!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to any AI assistant:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"I want to learn about the OpenAI Whisper speech recognition model. Explain how it works.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Claude will pull the data from GitMCP and answer the question.&lt;/p&gt; 
&lt;h2&gt;🛠️ Tools&lt;/h2&gt; 
&lt;p&gt;GitMCP provides AI assistants with several valuable tools to help them access, understand, and query GitHub repositories.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool gets the primary documentation from a GitHub repository. It works by retrieving relevant documentation (e.g., &lt;code&gt;llms.txt&lt;/code&gt;). This gives the AI a good overview of what the project is about&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For general questions about a project's purpose, features, or how to get started&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool lets the AI search through a repository's documentation by providing a specific search query. Instead of loading all the documentation (which could be very large), it uses intelligent search to find just the relevant parts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For specific questions about particular features, functions, or concepts within a project&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_url_content&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool helps the AI get information from links mentioned in the documentation. It retrieves the content from those links and converts it to a format the AI can easily read.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When documentation references external information that would help answer your question&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_code&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool searches through the actual code in the repository using GitHub's code search. It helps AI find specific code examples or implementation details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When you want examples of how something is implemented or need technical details not covered in documentation&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When using the dynamic endpoint (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;), these tools are named slightly differently (&lt;code&gt;fetch_generic_documentation&lt;/code&gt;, &lt;code&gt;search_generic_code&lt;/code&gt;, and &lt;code&gt;search_generic_documentation&lt;/code&gt;) and need additional information about which repository to access.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📊 Badge&lt;/h2&gt; 
&lt;p&gt;GitMCP has a badge to your repository's README. It allows users to quickly access your documentation through their IDE or browser (using the embedded chat). It also showcases how many times your documentation has been accessed through GitMCP.&lt;/p&gt; 
&lt;p&gt;Example (&lt;code&gt;idosal/git-mcp&lt;/code&gt;): &lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Adding the Badge to Your Repository&lt;/h3&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;[![GitMCP](https://img.shields.io/endpoint?url=https://gitmcp.io/badge/OWNER/REPO)](https://gitmcp.io/OWNER/REPO)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;OWNER&lt;/code&gt; with your GitHub username or organization, and &lt;code&gt;REPO&lt;/code&gt; with your repository name.&lt;/p&gt; 
&lt;h3&gt;How We Count Views&lt;/h3&gt; 
&lt;p&gt;Increment for each tool call on the specific repository.&lt;/p&gt; 
&lt;h3&gt;Customizing the Badge&lt;/h3&gt; 
&lt;p&gt;You can customize the badge's appearance with parameters:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color for the badge value&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;aquamarine&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;?color=green&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Badge label&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GitMCP&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Please reach out!&lt;/p&gt; 
&lt;h2&gt;❓ FAQ&lt;/h2&gt; 
&lt;h3&gt;What is the Model Context Protocol?&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://modelcontextprotocol.io/introduction"&gt;Model Context Protocol&lt;/a&gt; is a standard that allows AI assistants to request and receive additional context from external sources in a structured manner, enhancing their understanding and performance.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP work with any AI assistant?&lt;/h3&gt; 
&lt;p&gt;Yes, GitMCP is compatible with any AI assistant supporting the Model Context Protocol, including tools like Cursor, VSCode, Claude, etc.&lt;/p&gt; 
&lt;h3&gt;Is GitMCP compatible with all GitHub projects?&lt;/h3&gt; 
&lt;p&gt;Absolutely! GitMCP works with any public GitHub repository without requiring any modifications. It prioritizes the &lt;code&gt;llms.txt&lt;/code&gt; file and falls back to &lt;code&gt;README.md&lt;/code&gt; or other pages if the former is unavailable. Future updates aim to support additional documentation methods and even generate content dynamically.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP cost money?&lt;/h3&gt; 
&lt;p&gt;No, GitMCP is a free service to the community with no associated costs.&lt;/p&gt; 
&lt;h2&gt;🔒 Privacy&lt;/h2&gt; 
&lt;p&gt;GitMCP is deeply committed to its users' privacy. The service doesn't have access to or store any personally identifiable information as it doesn't require authentication. In addition, it doesn't store any queries sent by the agents. Moreover, as GitMCP is an open-source project, it can be deployed independently in your environment.&lt;/p&gt; 
&lt;p&gt;GitMCP only accesses content that is already publicly available and only when queried by a user. GitMCP does not automatically scrape repositories. Before accessing any GitHub Pages site, the code checks for &lt;code&gt;robots.txt&lt;/code&gt; rules and follows the directives set by site owners, allowing them to opt out. Please note that GitMCP doesn't permanently store data regarding the GitHub projects or their content.&lt;/p&gt; 
&lt;h2&gt;👥 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions, feedback, and ideas! Please review our &lt;a href="https://github.com/idosal/git-mcp/raw/main/.github/CONTRIBUTING.md"&gt;contribution&lt;/a&gt; guidelines.&lt;/p&gt; 
&lt;h3&gt;Local Development Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/idosal/git-mcp.git
cd git-mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run locally for development&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
# or
pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Using MCP Inspector for Testing&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the MCP Inspector tool:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the inspector interface:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Set Transport Type to &lt;code&gt;SSE&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Enter your GitMCP URL (e.g., &lt;code&gt;http://localhost:5173/docs&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;Click "Connect"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;GitMCP is provided "as is" without warranty of any kind. While we strive to ensure the reliability and security of our service, we are not responsible for any damages or issues that may arise from its use. GitHub projects accessed through GitMCP are subject to their respective owners' terms and conditions. GitMCP is not affiliated with GitHub or any of the mentioned AI tools.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#idosal/git-mcp&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=idosal/git-mcp&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fastapi/full-stack-fastapi-template</title>
      <link>https://github.com/fastapi/full-stack-fastapi-template</link>
      <description>&lt;p&gt;Full stack, modern web application template. Using FastAPI, React, SQLModel, PostgreSQL, Docker, GitHub Actions, automatic HTTPS and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Full Stack FastAPI Template&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template/actions?query=workflow%3ATest" target="_blank"&gt;&lt;img src="https://github.com/fastapi/full-stack-fastapi-template/workflows/Test/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/full-stack-fastapi-template" target="_blank"&gt;&lt;img src="https://coverage-badge.samuelcolvin.workers.dev/fastapi/full-stack-fastapi-template.svg?sanitize=true" alt="Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Technology Stack and Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚡ &lt;a href="https://fastapi.tiangolo.com"&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/a&gt; for the Python backend API. 
  &lt;ul&gt; 
   &lt;li&gt;🧰 &lt;a href="https://sqlmodel.tiangolo.com"&gt;SQLModel&lt;/a&gt; for the Python SQL database interactions (ORM).&lt;/li&gt; 
   &lt;li&gt;🔍 &lt;a href="https://docs.pydantic.dev"&gt;Pydantic&lt;/a&gt;, used by FastAPI, for the data validation and settings management.&lt;/li&gt; 
   &lt;li&gt;💾 &lt;a href="https://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; as the SQL database.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🚀 &lt;a href="https://react.dev"&gt;React&lt;/a&gt; for the frontend. 
  &lt;ul&gt; 
   &lt;li&gt;💃 Using TypeScript, hooks, Vite, and other parts of a modern frontend stack.&lt;/li&gt; 
   &lt;li&gt;🎨 &lt;a href="https://chakra-ui.com"&gt;Chakra UI&lt;/a&gt; for the frontend components.&lt;/li&gt; 
   &lt;li&gt;🤖 An automatically generated frontend client.&lt;/li&gt; 
   &lt;li&gt;🧪 &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for End-to-End testing.&lt;/li&gt; 
   &lt;li&gt;🦇 Dark mode support.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;🐋 &lt;a href="https://www.docker.com"&gt;Docker Compose&lt;/a&gt; for development and production.&lt;/li&gt; 
 &lt;li&gt;🔒 Secure password hashing by default.&lt;/li&gt; 
 &lt;li&gt;🔑 JWT (JSON Web Token) authentication.&lt;/li&gt; 
 &lt;li&gt;📫 Email based password recovery.&lt;/li&gt; 
 &lt;li&gt;✅ Tests with &lt;a href="https://pytest.org"&gt;Pytest&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;📞 &lt;a href="https://traefik.io"&gt;Traefik&lt;/a&gt; as a reverse proxy / load balancer.&lt;/li&gt; 
 &lt;li&gt;🚢 Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.&lt;/li&gt; 
 &lt;li&gt;🏭 CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dashboard Login&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/login.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Admin&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Create User&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-create.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Items&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-items.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - User Settings&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-user-settings.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Dark Mode&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-dark.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Interactive API Documentation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/docs.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How To Use It&lt;/h2&gt; 
&lt;p&gt;You can &lt;strong&gt;just fork or clone&lt;/strong&gt; this repository and use it as is.&lt;/p&gt; 
&lt;p&gt;✨ It just works. ✨&lt;/p&gt; 
&lt;h3&gt;How to Use a Private Repository&lt;/h3&gt; 
&lt;p&gt;If you want to have a private repository, GitHub won't allow you to simply fork it as it doesn't allow changing the visibility of forks.&lt;/p&gt; 
&lt;p&gt;But you can do the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new GitHub repo, for example &lt;code&gt;my-full-stack&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Clone this repository manually, set the name with the name of the project you want to use, for example &lt;code&gt;my-full-stack&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:fastapi/full-stack-fastapi-template.git my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter into the new directory:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the new origin to your new repository, copy it from the GitHub interface, for example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote set-url origin git@github.com:octocat/my-full-stack.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add this repo as another "remote" to allow you to get updates later:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote add upstream git@github.com:fastapi/full-stack-fastapi-template.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Push the code to your new repository:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update From the Original Template&lt;/h3&gt; 
&lt;p&gt;After cloning the repository, and after doing changes, you might want to get the latest changes from this original template.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you added the original repository as a remote, you can check it with:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote -v

origin    git@github.com:octocat/my-full-stack.git (fetch)
origin    git@github.com:octocat/my-full-stack.git (push)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (fetch)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (push)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull the latest changes without merging:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull --no-commit upstream master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will download the latest changes from this template without committing them, that way you can check everything is right before committing.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If there are conflicts, solve them in your editor.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once you are done, commit the changes:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git merge --continue
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure&lt;/h3&gt; 
&lt;p&gt;You can then update configs in the &lt;code&gt;.env&lt;/code&gt; files to customize your configurations.&lt;/p&gt; 
&lt;p&gt;Before deploying it, make sure you change at least the values for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FIRST_SUPERUSER_PASSWORD&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POSTGRES_PASSWORD&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can (and should) pass these as environment variables from secrets.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt; docs for more details.&lt;/p&gt; 
&lt;h3&gt;Generate Secret Keys&lt;/h3&gt; 
&lt;p&gt;Some environment variables in the &lt;code&gt;.env&lt;/code&gt; file have a default value of &lt;code&gt;changethis&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You have to change them with a secret key, to generate secret keys you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -c "import secrets; print(secrets.token_urlsafe(32))"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy the content and use that as password / secret key. And run that again to generate another secure key.&lt;/p&gt; 
&lt;h2&gt;How To Use It - Alternative With Copier&lt;/h2&gt; 
&lt;p&gt;This repository also supports generating a new project using &lt;a href="https://copier.readthedocs.io"&gt;Copier&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It will copy all the files, ask you configuration questions, and update the &lt;code&gt;.env&lt;/code&gt; files with your answers.&lt;/p&gt; 
&lt;h3&gt;Install Copier&lt;/h3&gt; 
&lt;p&gt;You can install Copier with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or better, if you have &lt;a href="https://pipx.pypa.io/"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt;, you can run it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have &lt;code&gt;pipx&lt;/code&gt;, installing copier is optional, you could run it directly.&lt;/p&gt; 
&lt;h3&gt;Generate a Project With Copier&lt;/h3&gt; 
&lt;p&gt;Decide a name for your new project's directory, you will use it below. For example, &lt;code&gt;my-awesome-project&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Go to the directory that will be the parent of your project, and run the command with your project's name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have &lt;code&gt;pipx&lt;/code&gt; and you didn't install &lt;code&gt;copier&lt;/code&gt;, you can run it directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx run copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; the &lt;code&gt;--trust&lt;/code&gt; option is necessary to be able to execute a &lt;a href="https://github.com/fastapi/full-stack-fastapi-template/raw/master/.copier/update_dotenv.py"&gt;post-creation script&lt;/a&gt; that updates your &lt;code&gt;.env&lt;/code&gt; files.&lt;/p&gt; 
&lt;h3&gt;Input Variables&lt;/h3&gt; 
&lt;p&gt;Copier will ask you for some data, you might want to have at hand before generating the project.&lt;/p&gt; 
&lt;p&gt;But don't worry, you can just update any of that in the &lt;code&gt;.env&lt;/code&gt; files afterwards.&lt;/p&gt; 
&lt;p&gt;The input variables, with their default values (some auto generated) are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;project_name&lt;/code&gt;: (default: &lt;code&gt;"FastAPI Project"&lt;/code&gt;) The name of the project, shown to API users (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stack_name&lt;/code&gt;: (default: &lt;code&gt;"fastapi-project"&lt;/code&gt;) The name of the stack used for Docker Compose labels and project name (no spaces, no periods) (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;secret_key&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The secret key for the project, used for security, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser&lt;/code&gt;: (default: &lt;code&gt;"admin@example.com"&lt;/code&gt;) The email of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_host&lt;/code&gt;: (default: "") The SMTP server host to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_user&lt;/code&gt;: (default: "") The SMTP server user to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_password&lt;/code&gt;: (default: "") The SMTP server password to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;emails_from_email&lt;/code&gt;: (default: &lt;code&gt;"info@example.com"&lt;/code&gt;) The email account to send emails from, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;postgres_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password for the PostgreSQL database, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sentry_dsn&lt;/code&gt;: (default: "") The DSN for Sentry, if you are using it, you can set it later in .env.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backend Development&lt;/h2&gt; 
&lt;p&gt;Backend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/backend/README.md"&gt;backend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frontend Development&lt;/h2&gt; 
&lt;p&gt;Frontend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/frontend/README.md"&gt;frontend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Deployment docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;General development docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/development.md"&gt;development.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This includes using Docker Compose, custom local domains, &lt;code&gt;.env&lt;/code&gt; configurations, etc.&lt;/p&gt; 
&lt;h2&gt;Release Notes&lt;/h2&gt; 
&lt;p&gt;Check the file &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/release-notes.md"&gt;release-notes.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Full Stack FastAPI Template is licensed under the terms of the MIT license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/codex</title>
      <link>https://github.com/openai/codex</link>
      <description>&lt;p&gt;Lightweight coding agent that runs in your terminal&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt;OpenAI Codex CLI&lt;/h1&gt; 
&lt;p align="center"&gt;&lt;code&gt;npm i -g @openai/codex&lt;/code&gt;&lt;br /&gt;or &lt;code&gt;brew install codex&lt;/code&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;strong&gt;Codex CLI&lt;/strong&gt; is a coding agent from OpenAI that runs locally on your computer.&lt;br /&gt;If you are looking for the &lt;em&gt;cloud-based agent&lt;/em&gt; from OpenAI, &lt;strong&gt;Codex Web&lt;/strong&gt;, see &lt;a href="https://chatgpt.com/codex"&gt;chatgpt.com/codex&lt;/a&gt;.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-splash.png" alt="Codex CLI splash" width="50%" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Table of contents&lt;/strong&gt;&lt;/summary&gt; 
 &lt;!-- Begin ToC --&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#quickstart"&gt;Quickstart&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#installing-and-running-codex-cli"&gt;Installing and running Codex CLI&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#using-codex-with-your-chatgpt-plan"&gt;Using Codex with your ChatGPT plan&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#connecting-on-a-headless-machine"&gt;Connecting on a "Headless" Machine&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#authenticate-locally-and-copy-your-credentials-to-the-headless-machine"&gt;Authenticate locally and copy your credentials to the "headless" machine&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#connecting-through-vps-or-remote"&gt;Connecting through VPS or remote&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#usage-based-billing-alternative-use-an-openai-api-key"&gt;Usage-based billing alternative: Use an OpenAI API key&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#choosing-codexs-level-of-autonomy"&gt;Choosing Codex's level of autonomy&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#1-readwrite"&gt;&lt;strong&gt;1. Read/write&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#2-read-only"&gt;&lt;strong&gt;2. Read-only&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#3-advanced-configuration"&gt;&lt;strong&gt;3. Advanced configuration&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#can-i-run-without-any-approvals"&gt;Can I run without ANY approvals?&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#fine-tuning-in-configtoml"&gt;Fine-tuning in &lt;code&gt;config.toml&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#example-prompts"&gt;Example prompts&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#running-with-a-prompt-as-input"&gt;Running with a prompt as input&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#using-open-source-models"&gt;Using Open Source Models&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#platform-sandboxing-details"&gt;Platform sandboxing details&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#experimental-technology-disclaimer"&gt;Experimental technology disclaimer&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#system-requirements"&gt;System requirements&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#cli-reference"&gt;CLI reference&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#memory--project-docs"&gt;Memory &amp;amp; project docs&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#non-interactive--ci-mode"&gt;Non-interactive / CI mode&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#model-context-protocol-mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#tracing--verbose-logging"&gt;Tracing / verbose logging&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#dotslash"&gt;DotSlash&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#configuration"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#zero-data-retention-zdr-usage"&gt;Zero data retention (ZDR) usage&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#codex-open-source-fund"&gt;Codex open source fund&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#contributing"&gt;Contributing&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#development-workflow"&gt;Development workflow&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#writing-high-impact-code-changes"&gt;Writing high-impact code changes&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#opening-a-pull-request"&gt;Opening a pull request&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#review-process"&gt;Review process&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#community-values"&gt;Community values&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#getting-help"&gt;Getting help&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#contributor-license-agreement-cla"&gt;Contributor license agreement (CLA)&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#quick-fixes"&gt;Quick fixes&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#releasing-codex"&gt;Releasing &lt;code&gt;codex&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#security--responsible-ai"&gt;Security &amp;amp; responsible AI&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/openai/codex/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;!-- End ToC --&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;h3&gt;Installing and running Codex CLI&lt;/h3&gt; 
&lt;p&gt;Install globally with your preferred package manager:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npm install -g @openai/codex  # Alternatively: `brew install codex`
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then simply run &lt;code&gt;codex&lt;/code&gt; to get started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;codex
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;You can also go to the &lt;a href="https://github.com/openai/codex/releases/latest"&gt;latest GitHub Release&lt;/a&gt; and download the appropriate binary for your platform.&lt;/summary&gt; 
 &lt;p&gt;Each GitHub Release contains many executables, but in practice, you likely want one of these:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;macOS 
   &lt;ul&gt; 
    &lt;li&gt;Apple Silicon/arm64: &lt;code&gt;codex-aarch64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;x86_64 (older Mac hardware): &lt;code&gt;codex-x86_64-apple-darwin.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Linux 
   &lt;ul&gt; 
    &lt;li&gt;x86_64: &lt;code&gt;codex-x86_64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
    &lt;li&gt;arm64: &lt;code&gt;codex-aarch64-unknown-linux-musl.tar.gz&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;Each archive contains a single entry with the platform baked into the name (e.g., &lt;code&gt;codex-x86_64-unknown-linux-musl&lt;/code&gt;), so you likely want to rename it to &lt;code&gt;codex&lt;/code&gt; after extracting it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Using Codex with your ChatGPT plan&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/openai/codex/main/.github/codex-cli-login.png" alt="Codex CLI login" width="50%" /&gt; &lt;/p&gt; 
&lt;p&gt;Run &lt;code&gt;codex&lt;/code&gt; and select &lt;strong&gt;Sign in with ChatGPT&lt;/strong&gt;. You'll need a Plus, Pro, or Team ChatGPT account, and will get access to our latest models, including &lt;code&gt;gpt-5&lt;/code&gt;, at no extra cost to your plan. (Enterprise is coming soon.)&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Important: If you've used the Codex CLI before, follow these steps to migrate from usage-based billing with your API key:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Update the CLI and ensure &lt;code&gt;codex --version&lt;/code&gt; is &lt;code&gt;0.20.0&lt;/code&gt; or later&lt;/li&gt; 
  &lt;li&gt;Delete &lt;code&gt;~/.codex/auth.json&lt;/code&gt; (this should be &lt;code&gt;C:\Users\USERNAME\.codex\auth.json&lt;/code&gt; on Windows)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;codex login&lt;/code&gt; again&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you encounter problems with the login flow, please comment on &lt;a href="https://github.com/openai/codex/issues/1243"&gt;this issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Connecting on a "Headless" Machine&lt;/h3&gt; 
&lt;p&gt;Today, the login process entails running a server on &lt;code&gt;localhost:1455&lt;/code&gt;. If you are on a "headless" server, such as a Docker container or are &lt;code&gt;ssh&lt;/code&gt;'d into a remote machine, loading &lt;code&gt;localhost:1455&lt;/code&gt; in the browser on your local machine will not automatically connect to the webserver running on the &lt;em&gt;headless&lt;/em&gt; machine, so you must use one of the following workarounds:&lt;/p&gt; 
&lt;h4&gt;Authenticate locally and copy your credentials to the "headless" machine&lt;/h4&gt; 
&lt;p&gt;The easiest solution is likely to run through the &lt;code&gt;codex login&lt;/code&gt; process on your local machine such that &lt;code&gt;localhost:1455&lt;/code&gt; &lt;em&gt;is&lt;/em&gt; accessible in your web browser. When you complete the authentication process, an &lt;code&gt;auth.json&lt;/code&gt; file should be available at &lt;code&gt;$CODEX_HOME/auth.json&lt;/code&gt; (on Mac/Linux, &lt;code&gt;$CODEX_HOME&lt;/code&gt; defaults to &lt;code&gt;~/.codex&lt;/code&gt; whereas on Windows, it defaults to &lt;code&gt;%USERPROFILE%\.codex&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;Because the &lt;code&gt;auth.json&lt;/code&gt; file is not tied to a specific host, once you complete the authentication flow locally, you can copy the &lt;code&gt;$CODEX_HOME/auth.json&lt;/code&gt; file to the headless machine and then &lt;code&gt;codex&lt;/code&gt; should "just work" on that machine. Note to copy a file to a Docker container, you can do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# substitute MY_CONTAINER with the name or id of your Docker container:
CONTAINER_HOME=$(docker exec MY_CONTAINER printenv HOME)
docker exec MY_CONTAINER mkdir -p "$CONTAINER_HOME/.codex"
docker cp auth.json MY_CONTAINER:"$CONTAINER_HOME/.codex/auth.json"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;whereas if you are &lt;code&gt;ssh&lt;/code&gt;'d into a remote machine, you likely want to use &lt;a href="https://en.wikipedia.org/wiki/Secure_copy_protocol"&gt;&lt;code&gt;scp&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ssh user@remote 'mkdir -p ~/.codex'
scp ~/.codex/auth.json user@remote:~/.codex/auth.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or try this one-liner:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;ssh user@remote 'mkdir -p ~/.codex &amp;amp;&amp;amp; cat &amp;gt; ~/.codex/auth.json' &amp;lt; ~/.codex/auth.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting through VPS or remote&lt;/h4&gt; 
&lt;p&gt;If you run Codex on a remote machine (VPS/server) without a local browser, the login helper starts a server on &lt;code&gt;localhost:1455&lt;/code&gt; on the remote host. To complete login in your local browser, forward that port to your machine before starting the login flow:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# From your local machine
ssh -L 1455:localhost:1455 &amp;lt;user&amp;gt;@&amp;lt;remote-host&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then, in that SSH session, run &lt;code&gt;codex&lt;/code&gt; and select "Sign in with ChatGPT". When prompted, open the printed URL (it will be &lt;code&gt;http://localhost:1455/...&lt;/code&gt;) in your local browser. The traffic will be tunneled to the remote server.&lt;/p&gt; 
&lt;h3&gt;Usage-based billing alternative: Use an OpenAI API key&lt;/h3&gt; 
&lt;p&gt;If you prefer to pay-as-you-go, you can still authenticate with your OpenAI API key by setting it as an environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;export OPENAI_API_KEY="your-api-key-here"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;This command only sets the key for your current terminal session, which we recommend. To set it for all future sessions, you can also add the &lt;code&gt;export&lt;/code&gt; line to your shell's configuration file (e.g., &lt;code&gt;~/.zshrc&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;If you have signed in with ChatGPT, Codex will default to using your ChatGPT credits. If you wish to use your API key, use the &lt;code&gt;/logout&lt;/code&gt; command to clear your ChatGPT authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Choosing Codex's level of autonomy&lt;/h3&gt; 
&lt;p&gt;We always recommend running Codex in its default sandbox that gives you strong guardrails around what the agent can do. The default sandbox prevents it from editing files outside its workspace, or from accessing the network.&lt;/p&gt; 
&lt;p&gt;When you launch Codex in a new folder, it detects whether the folder is version controlled and recommends one of two levels of autonomy:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;1. Read/write&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Codex can run commands and write files in the workspace without approval.&lt;/li&gt; 
 &lt;li&gt;To write files in other folders, access network, update git or perform other actions protected by the sandbox, Codex will need your permission.&lt;/li&gt; 
 &lt;li&gt;By default, the workspace includes the current directory, as well as temporary directories like &lt;code&gt;/tmp&lt;/code&gt;. You can see what directories are in the workspace with the &lt;code&gt;/status&lt;/code&gt; command. See the docs for how to customize this behavior.&lt;/li&gt; 
 &lt;li&gt;Advanced: You can manually specify this configuration by running &lt;code&gt;codex --sandbox workspace-write --ask-for-approval on-request&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;This is the recommended default for version-controlled folders.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;2. Read-only&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Codex can run read-only commands without approval.&lt;/li&gt; 
 &lt;li&gt;To edit files, access network, or perform other actions protected by the sandbox, Codex will need your permission.&lt;/li&gt; 
 &lt;li&gt;Advanced: You can manually specify this configuration by running &lt;code&gt;codex --sandbox read-only --ask-for-approval on-request&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;This is the recommended default non-version-controlled folders.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;3. Advanced configuration&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Codex gives you fine-grained control over the sandbox with the &lt;code&gt;--sandbox&lt;/code&gt; option, and over when it requests approval with the &lt;code&gt;--ask-for-approval&lt;/code&gt; option. Run &lt;code&gt;codex help&lt;/code&gt; for more on these options.&lt;/p&gt; 
&lt;h4&gt;Can I run without ANY approvals?&lt;/h4&gt; 
&lt;p&gt;Yes, run codex non-interactively with &lt;code&gt;--ask-for-approval never&lt;/code&gt;. This option works with all &lt;code&gt;--sandbox&lt;/code&gt; options, so you still have full control over Codex's level of autonomy. It will make its best attempt with whatever contrainsts you provide. For example:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox read-only&lt;/code&gt; when you are running many agents to answer questions in parallel in the same workspace.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox workspace-write&lt;/code&gt; when you want the agent to non-interactively take time to produce the best outcome, with strong guardrails around its behavior.&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;codex --ask-for-approval never --sandbox danger-full-access&lt;/code&gt; to dangerously give the agent full autonomy. Because this disables important safety mechanisms, we recommend against using this unless running Codex in an isolated environment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Fine-tuning in &lt;code&gt;config.toml&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# approval mode
approval_policy = "untrusted"
sandbox_mode    = "read-only"

# full-auto mode
approval_policy = "on-request"
sandbox_mode    = "workspace-write"

# Optional: allow network in workspace-write mode
[sandbox_workspace_write]
network_access = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also save presets as &lt;strong&gt;profiles&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[profiles.full_auto]
approval_policy = "on-request"
sandbox_mode    = "workspace-write"

[profiles.readonly_quiet]
approval_policy = "never"
sandbox_mode    = "read-only"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Example prompts&lt;/h3&gt; 
&lt;p&gt;Below are a few bite-size examples you can copy-paste. Replace the text in quotes with your own task. See the &lt;a href="https://github.com/openai/codex/raw/main/codex-cli/examples/prompting_guide.md"&gt;prompting guide&lt;/a&gt; for more tips and usage patterns.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;✨&lt;/th&gt; 
   &lt;th&gt;What you type&lt;/th&gt; 
   &lt;th&gt;What happens&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Refactor the Dashboard component to React Hooks"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Codex rewrites the class component, runs &lt;code&gt;npm test&lt;/code&gt;, and shows the diff.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Generate SQL migrations for adding a users table"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Infers your ORM, creates migration files, and runs them in a sandboxed DB.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Write unit tests for utils/date.ts"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generates tests, executes them, and iterates until they pass.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;4&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Bulk-rename *.jpeg -&amp;gt; *.jpg with git mv"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Safely renames files and updates imports/usages.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;5&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Explain what this regex does: ^(?=.*[A-Z]).{8,}$"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Outputs a step-by-step human explanation.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Carefully review this repo, and propose 3 high impact well-scoped PRs"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Suggests impactful PRs in the current codebase.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;7&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "Look for vulnerabilities and create a security review report"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Finds and explains security bugs.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Running with a prompt as input&lt;/h2&gt; 
&lt;p&gt;You can also run Codex CLI with a prompt as input:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;codex "explain this codebase to me"
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;codex --full-auto "create the fanciest todo-list app"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That's it - Codex will scaffold a file, run it inside a sandbox, install any missing dependencies, and show you the live result. Approve the changes and they'll be committed to your working directory.&lt;/p&gt; 
&lt;h2&gt;Using Open Source Models&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Use &lt;code&gt;--profile&lt;/code&gt; to use other models&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Codex also allows you to use other providers that support the OpenAI Chat Completions (or Responses) API.&lt;/p&gt; 
 &lt;p&gt;To do so, you must first define custom &lt;a href="https://raw.githubusercontent.com/openai/codex/main/config.md#model_providers"&gt;providers&lt;/a&gt; in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;. For example, the provider for a standard Ollama setup would be defined as follows:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.ollama]
name = "Ollama"
base_url = "http://localhost:11434/v1"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The &lt;code&gt;base_url&lt;/code&gt; will have &lt;code&gt;/chat/completions&lt;/code&gt; appended to it to build the full URL for the request.&lt;/p&gt; 
 &lt;p&gt;For providers that also require an &lt;code&gt;Authorization&lt;/code&gt; header of the form &lt;code&gt;Bearer: SECRET&lt;/code&gt;, an &lt;code&gt;env_key&lt;/code&gt; can be specified, which indicates the environment variable to read to use as the value of &lt;code&gt;SECRET&lt;/code&gt; when making a request:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.openrouter]
name = "OpenRouter"
base_url = "https://openrouter.ai/api/v1"
env_key = "OPENROUTER_API_KEY"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Providers that speak the Responses API are also supported by adding &lt;code&gt;wire_api = "responses"&lt;/code&gt; as part of the definition. Accessing OpenAI models via Azure is an example of such a provider, though it also requires specifying additional &lt;code&gt;query_params&lt;/code&gt; that need to be appended to the request URL:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.azure]
name = "Azure"
# Make sure you set the appropriate subdomain for this URL.
base_url = "https://YOUR_PROJECT_NAME.openai.azure.com/openai"
env_key = "AZURE_OPENAI_API_KEY"  # Or "OPENAI_API_KEY", whichever you use.
# Newer versions appear to support the responses API, see https://github.com/openai/codex/pull/1321
query_params = { api-version = "2025-04-01-preview" }
wire_api = "responses"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once you have defined a provider you wish to use, you can configure it as your default provider as follows:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;model_provider = "azure"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;[!TIP] If you find yourself experimenting with a variety of models and providers, then you likely want to invest in defining a &lt;em&gt;profile&lt;/em&gt; for each configuration like so:&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[profiles.o3]
model_provider = "azure"
model = "o3"

[profiles.mistral]
model_provider = "ollama"
model = "mistral"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This way, you can specify one command-line argument (.e.g., &lt;code&gt;--profile o3&lt;/code&gt;, &lt;code&gt;--profile mistral&lt;/code&gt;) to override multiple settings together.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p&gt;Codex can run fully locally against an OpenAI-compatible OSS host (like Ollama) using the &lt;code&gt;--oss&lt;/code&gt; flag:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Interactive UI: 
  &lt;ul&gt; 
   &lt;li&gt;codex --oss&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Non-interactive (programmatic) mode: 
  &lt;ul&gt; 
   &lt;li&gt;echo "Refactor utils" | codex exec --oss&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Model selection when using &lt;code&gt;--oss&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you omit &lt;code&gt;-m/--model&lt;/code&gt;, Codex defaults to -m gpt-oss:20b and will verify it exists locally (downloading if needed).&lt;/li&gt; 
 &lt;li&gt;To pick a different size, pass one of: 
  &lt;ul&gt; 
   &lt;li&gt;-m "gpt-oss:20b"&lt;/li&gt; 
   &lt;li&gt;-m "gpt-oss:120b"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Point Codex at your own OSS host:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;By default, &lt;code&gt;--oss&lt;/code&gt; talks to &lt;a href="http://localhost:11434/v1"&gt;http://localhost:11434/v1&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;To use a different host, set one of these environment variables before running Codex: 
  &lt;ul&gt; 
   &lt;li&gt;CODEX_OSS_BASE_URL, for example: 
    &lt;ul&gt; 
     &lt;li&gt;CODEX_OSS_BASE_URL="&lt;a href="http://my-ollama.example.com:11434/v1"&gt;http://my-ollama.example.com:11434/v1&lt;/a&gt;" codex --oss -m gpt-oss:20b&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;or CODEX_OSS_PORT (when the host is localhost): 
    &lt;ul&gt; 
     &lt;li&gt;CODEX_OSS_PORT=11434 codex --oss&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Advanced: you can persist this in your config instead of environment variables by overriding the built-in &lt;code&gt;oss&lt;/code&gt; provider in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;[model_providers.oss]
name = "Open Source"
base_url = "http://my-ollama.example.com:11434/v1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Platform sandboxing details&lt;/h3&gt; 
&lt;p&gt;The mechanism Codex uses to implement the sandbox policy depends on your OS:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS 12+&lt;/strong&gt; uses &lt;strong&gt;Apple Seatbelt&lt;/strong&gt; and runs commands using &lt;code&gt;sandbox-exec&lt;/code&gt; with a profile (&lt;code&gt;-p&lt;/code&gt;) that corresponds to the &lt;code&gt;--sandbox&lt;/code&gt; that was specified.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt; uses a combination of Landlock/seccomp APIs to enforce the &lt;code&gt;sandbox&lt;/code&gt; configuration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that when running Linux in a containerized environment such as Docker, sandboxing may not work if the host/container configuration does not support the necessary Landlock/seccomp APIs. In such cases, we recommend configuring your Docker container so that it provides the sandbox guarantees you are looking for and then running &lt;code&gt;codex&lt;/code&gt; with &lt;code&gt;--sandbox danger-full-access&lt;/code&gt; (or, more simply, the &lt;code&gt;--dangerously-bypass-approvals-and-sandbox&lt;/code&gt; flag) within your container.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Experimental technology disclaimer&lt;/h2&gt; 
&lt;p&gt;Codex CLI is an experimental project under active development. It is not yet stable, may contain bugs, incomplete features, or undergo breaking changes. We're building it in the open with the community and welcome:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug reports&lt;/li&gt; 
 &lt;li&gt;Feature requests&lt;/li&gt; 
 &lt;li&gt;Pull requests&lt;/li&gt; 
 &lt;li&gt;Good vibes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Help us improve by filing issues or submitting PRs (see the section below for how to contribute)!&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;System requirements&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Requirement&lt;/th&gt; 
   &lt;th&gt;Details&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Operating systems&lt;/td&gt; 
   &lt;td&gt;macOS 12+, Ubuntu 20.04+/Debian 10+, or Windows 11 &lt;strong&gt;via WSL2&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Git (optional, recommended)&lt;/td&gt; 
   &lt;td&gt;2.23+ for built-in PR helpers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RAM&lt;/td&gt; 
   &lt;td&gt;4-GB minimum (8-GB recommended)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h2&gt;CLI reference&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Purpose&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Interactive TUI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex "..."&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Initial prompt for interactive TUI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex "fix lint errors"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;codex exec "..."&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Non-interactive "automation mode"&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;codex exec "explain utils.ts"&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Key flags: &lt;code&gt;--model/-m&lt;/code&gt;, &lt;code&gt;--ask-for-approval/-a&lt;/code&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Memory &amp;amp; project docs&lt;/h2&gt; 
&lt;p&gt;You can give Codex extra instructions and guidance using &lt;code&gt;AGENTS.md&lt;/code&gt; files. Codex looks for &lt;code&gt;AGENTS.md&lt;/code&gt; files in the following places, and merges them top-down:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;~/.codex/AGENTS.md&lt;/code&gt; - personal global guidance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGENTS.md&lt;/code&gt; at repo root - shared project notes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AGENTS.md&lt;/code&gt; in the current working directory - sub-folder/feature specifics&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Non-interactive / CI mode&lt;/h2&gt; 
&lt;p&gt;Run Codex head-less in pipelines. Example GitHub Action step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;- name: Update changelog via Codex
  run: |
    npm install -g @openai/codex
    export OPENAI_API_KEY="${{ secrets.OPENAI_KEY }}"
    codex exec --full-auto "update CHANGELOG for next release"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Model Context Protocol (MCP)&lt;/h2&gt; 
&lt;p&gt;The Codex CLI can be configured to leverage MCP servers by defining an &lt;a href="https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md#mcp_servers"&gt;&lt;code&gt;mcp_servers&lt;/code&gt;&lt;/a&gt; section in &lt;code&gt;~/.codex/config.toml&lt;/code&gt;. It is intended to mirror how tools such as Claude and Cursor define &lt;code&gt;mcpServers&lt;/code&gt; in their respective JSON config files, though the Codex format is slightly different since it uses TOML rather than JSON, e.g.:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# IMPORTANT: the top-level key is `mcp_servers` rather than `mcpServers`.
[mcp_servers.server-name]
command = "npx"
args = ["-y", "mcp-server"]
env = { "API_KEY" = "value" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] It is somewhat experimental, but the Codex CLI can also be run as an MCP &lt;em&gt;server&lt;/em&gt; via &lt;code&gt;codex mcp&lt;/code&gt;. If you launch it with an MCP client such as &lt;code&gt;npx @modelcontextprotocol/inspector codex mcp&lt;/code&gt; and send it a &lt;code&gt;tools/list&lt;/code&gt; request, you will see that there is only one tool, &lt;code&gt;codex&lt;/code&gt;, that accepts a grab-bag of inputs, including a catch-all &lt;code&gt;config&lt;/code&gt; map for anything you might want to override. Feel free to play around with it and provide feedback via GitHub issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Tracing / verbose logging&lt;/h2&gt; 
&lt;p&gt;Because Codex is written in Rust, it honors the &lt;code&gt;RUST_LOG&lt;/code&gt; environment variable to configure its logging behavior.&lt;/p&gt; 
&lt;p&gt;The TUI defaults to &lt;code&gt;RUST_LOG=codex_core=info,codex_tui=info&lt;/code&gt; and log messages are written to &lt;code&gt;~/.codex/log/codex-tui.log&lt;/code&gt;, so you can leave the following running in a separate terminal to monitor log messages as they are written:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;tail -F ~/.codex/log/codex-tui.log
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By comparison, the non-interactive mode (&lt;code&gt;codex exec&lt;/code&gt;) defaults to &lt;code&gt;RUST_LOG=error&lt;/code&gt;, but messages are printed inline, so there is no need to monitor a separate file.&lt;/p&gt; 
&lt;p&gt;See the Rust documentation on &lt;a href="https://docs.rs/env_logger/latest/env_logger/#enabling-logging"&gt;&lt;code&gt;RUST_LOG&lt;/code&gt;&lt;/a&gt; for more information on the configuration options.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;DotSlash&lt;/h3&gt; 
&lt;p&gt;The GitHub Release also contains a &lt;a href="https://dotslash-cli.com/"&gt;DotSlash&lt;/a&gt; file for the Codex CLI named &lt;code&gt;codex&lt;/code&gt;. Using a DotSlash file makes it possible to make a lightweight commit to source control to ensure all contributors use the same version of an executable, regardless of what platform they use for development.&lt;/p&gt;  
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Build from source&lt;/strong&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Clone the repository and navigate to the root of the Cargo workspace.
git clone https://github.com/openai/codex.git
cd codex/codex-rs

# Install the Rust toolchain, if necessary.
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source "$HOME/.cargo/env"
rustup component add rustfmt
rustup component add clippy

# Build Codex.
cargo build

# Launch the TUI with a sample prompt.
cargo run --bin codex -- "explain this codebase to me"

# After making changes, ensure the code is clean.
cargo fmt -- --config imports_granularity=Item
cargo clippy --tests

# Run the tests.
cargo test
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Codex supports a rich set of configuration options documented in &lt;a href="https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md"&gt;&lt;code&gt;codex-rs/config.md&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By default, Codex loads its configuration from &lt;code&gt;~/.codex/config.toml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Though &lt;code&gt;--config&lt;/code&gt; can be used to set/override ad-hoc config values for individual invocations of &lt;code&gt;codex&lt;/code&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;OpenAI released a model called Codex in 2021 - is this related?&lt;/summary&gt; 
 &lt;p&gt;In 2021, OpenAI released Codex, an AI system designed to generate code from natural language prompts. That original Codex model was deprecated as of March 2023 and is separate from the CLI tool.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Which models are supported?&lt;/summary&gt; 
 &lt;p&gt;Any model available with &lt;a href="https://platform.openai.com/docs/api-reference/responses"&gt;Responses API&lt;/a&gt;. The default is &lt;code&gt;o4-mini&lt;/code&gt;, but pass &lt;code&gt;--model gpt-4.1&lt;/code&gt; or set &lt;code&gt;model: gpt-4.1&lt;/code&gt; in your config file to override.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Why does &lt;code&gt;o3&lt;/code&gt; or &lt;code&gt;o4-mini&lt;/code&gt; not work for me?&lt;/summary&gt; 
 &lt;p&gt;It's possible that your &lt;a href="https://help.openai.com/en/articles/10910291-api-organization-verification"&gt;API account needs to be verified&lt;/a&gt; in order to start streaming responses and seeing chain of thought summaries from the API. If you're still running into issues, please let us know!&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;How do I stop Codex from editing my files?&lt;/summary&gt; 
 &lt;p&gt;Codex runs model-generated commands in a sandbox. If a proposed command or file change doesn't look right, you can simply type &lt;strong&gt;n&lt;/strong&gt; to deny the command or give the model feedback.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Does it work on Windows?&lt;/summary&gt; 
 &lt;p&gt;Not directly. It requires &lt;a href="https://learn.microsoft.com/en-us/windows/wsl/install"&gt;Windows Subsystem for Linux (WSL2)&lt;/a&gt; - Codex has been tested on macOS and Linux with Node 22.&lt;/p&gt; 
&lt;/details&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Zero data retention (ZDR) usage&lt;/h2&gt; 
&lt;p&gt;Codex CLI &lt;strong&gt;does&lt;/strong&gt; support OpenAI organizations with &lt;a href="https://platform.openai.com/docs/guides/your-data#zero-data-retention"&gt;Zero Data Retention (ZDR)&lt;/a&gt; enabled. If your OpenAI organization has Zero Data Retention enabled and you still encounter errors such as:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;OpenAI rejected the request. Error details: Status: 400, Code: unsupported_parameter, Type: invalid_request_error, Message: 400 Previous response cannot be used for this organization due to Zero Data Retention.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ensure you are running &lt;code&gt;codex&lt;/code&gt; with &lt;code&gt;--config disable_response_storage=true&lt;/code&gt; or add this line to &lt;code&gt;~/.codex/config.toml&lt;/code&gt; to avoid specifying the command line option each time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;disable_response_storage = true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/openai/codex/main/codex-rs/config.md#disable_response_storage"&gt;the configuration documentation on &lt;code&gt;disable_response_storage&lt;/code&gt;&lt;/a&gt; for details.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Codex open source fund&lt;/h2&gt; 
&lt;p&gt;We're excited to launch a &lt;strong&gt;$1 million initiative&lt;/strong&gt; supporting open source projects that use Codex CLI and other OpenAI models.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Grants are awarded up to &lt;strong&gt;$25,000&lt;/strong&gt; API credits.&lt;/li&gt; 
 &lt;li&gt;Applications are reviewed &lt;strong&gt;on a rolling basis&lt;/strong&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Interested? &lt;a href="https://openai.com/form/codex-open-source-fund/"&gt;Apply here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project is under active development and the code will likely change pretty significantly. We'll update this message once that's complete!&lt;/p&gt; 
&lt;p&gt;More broadly we welcome contributions - whether you are opening your very first pull request or you're a seasoned maintainer. At the same time we care about reliability and long-term maintainability, so the bar for merging code is intentionally &lt;strong&gt;high&lt;/strong&gt;. The guidelines below spell out what "high-quality" means in practice and should make the whole process transparent and friendly.&lt;/p&gt; 
&lt;h3&gt;Development workflow&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a &lt;em&gt;topic branch&lt;/em&gt; from &lt;code&gt;main&lt;/code&gt; - e.g. &lt;code&gt;feat/interactive-prompt&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Keep your changes focused. Multiple unrelated fixes should be opened as separate PRs.&lt;/li&gt; 
 &lt;li&gt;Following the &lt;a href="https://raw.githubusercontent.com/openai/codex/main/#development-workflow"&gt;development setup&lt;/a&gt; instructions above, ensure your change is free of lint warnings and test failures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Writing high-impact code changes&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Start with an issue.&lt;/strong&gt; Open a new one or comment on an existing discussion so we can agree on the solution before code is written.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Add or update tests.&lt;/strong&gt; Every new feature or bug-fix should come with test coverage that fails before your change and passes afterwards. 100% coverage is not required, but aim for meaningful assertions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Document behaviour.&lt;/strong&gt; If your change affects user-facing behaviour, update the README, inline help (&lt;code&gt;codex --help&lt;/code&gt;), or relevant example projects.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Keep commits atomic.&lt;/strong&gt; Each commit should compile and the tests should pass. This makes reviews and potential rollbacks easier.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Opening a pull request&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fill in the PR template (or include similar information) - &lt;strong&gt;What? Why? How?&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;strong&gt;all&lt;/strong&gt; checks locally (&lt;code&gt;cargo test &amp;amp;&amp;amp; cargo clippy --tests &amp;amp;&amp;amp; cargo fmt -- --config imports_granularity=Item&lt;/code&gt;). CI failures that could have been caught locally slow down the process.&lt;/li&gt; 
 &lt;li&gt;Make sure your branch is up-to-date with &lt;code&gt;main&lt;/code&gt; and that you have resolved merge conflicts.&lt;/li&gt; 
 &lt;li&gt;Mark the PR as &lt;strong&gt;Ready for review&lt;/strong&gt; only when you believe it is in a merge-able state.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Review process&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;One maintainer will be assigned as a primary reviewer.&lt;/li&gt; 
 &lt;li&gt;We may ask for changes - please do not take this personally. We value the work, we just also value consistency and long-term maintainability.&lt;/li&gt; 
 &lt;li&gt;When there is consensus that the PR meets the bar, a maintainer will squash-and-merge.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Community values&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Be kind and inclusive.&lt;/strong&gt; Treat others with respect; we follow the &lt;a href="https://www.contributor-covenant.org/"&gt;Contributor Covenant&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Assume good intent.&lt;/strong&gt; Written communication is hard - err on the side of generosity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Teach &amp;amp; learn.&lt;/strong&gt; If you spot something confusing, open an issue or PR with improvements.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Getting help&lt;/h3&gt; 
&lt;p&gt;If you run into problems setting up the project, would like feedback on an idea, or just want to say &lt;em&gt;hi&lt;/em&gt; - please open a Discussion or jump into the relevant issue. We are happy to help.&lt;/p&gt; 
&lt;p&gt;Together we can make Codex CLI an incredible tool. &lt;strong&gt;Happy hacking!&lt;/strong&gt; &lt;span&gt;🚀&lt;/span&gt;&lt;/p&gt; 
&lt;h3&gt;Contributor license agreement (CLA)&lt;/h3&gt; 
&lt;p&gt;All contributors &lt;strong&gt;must&lt;/strong&gt; accept the CLA. The process is lightweight:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Open your pull request.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Paste the following comment (or reply &lt;code&gt;recheck&lt;/code&gt; if you've signed before):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-text"&gt;I have read the CLA Document and I hereby sign the CLA
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The CLA-Assistant bot records your signature in the repo and marks the status check as passed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;No special Git commands, email attachments, or commit footers required.&lt;/p&gt; 
&lt;h4&gt;Quick fixes&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Scenario&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Amend last commit&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;git commit --amend -s --no-edit &amp;amp;&amp;amp; git push -f&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The &lt;strong&gt;DCO check&lt;/strong&gt; blocks merges until every commit in the PR carries the footer (with squash this is just the one).&lt;/p&gt; 
&lt;h3&gt;Releasing &lt;code&gt;codex&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;For admins only.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Make sure you are on &lt;code&gt;main&lt;/code&gt; and have no local changes. Then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;VERSION=0.2.0  # Can also be 0.2.0-alpha.1 or any valid Rust version.
./codex-rs/scripts/create_github_release.sh "$VERSION"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will make a local commit on top of &lt;code&gt;main&lt;/code&gt; with &lt;code&gt;version&lt;/code&gt; set to &lt;code&gt;$VERSION&lt;/code&gt; in &lt;code&gt;codex-rs/Cargo.toml&lt;/code&gt; (note that on &lt;code&gt;main&lt;/code&gt;, we leave the version as &lt;code&gt;version = "0.0.0"&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;This will push the commit using the tag &lt;code&gt;rust-v${VERSION}&lt;/code&gt;, which in turn kicks off &lt;a href="https://raw.githubusercontent.com/openai/codex/main/.github/workflows/rust-release.yml"&gt;the release workflow&lt;/a&gt;. This will create a new GitHub Release named &lt;code&gt;$VERSION&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;If everything looks good in the generated GitHub Release, uncheck the &lt;strong&gt;pre-release&lt;/strong&gt; box so it is the latest release.&lt;/p&gt; 
&lt;p&gt;Create a PR to update &lt;a href="https://github.com/Homebrew/homebrew-core/raw/main/Formula/c/codex.rb"&gt;&lt;code&gt;Formula/c/codex.rb&lt;/code&gt;&lt;/a&gt; on Homebrew.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Security &amp;amp; responsible AI&lt;/h2&gt; 
&lt;p&gt;Have you discovered a vulnerability or have concerns about model output? Please e-mail &lt;strong&gt;&lt;a href="mailto:security@openai.com"&gt;security@openai.com&lt;/a&gt;&lt;/strong&gt; and we will respond promptly.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the &lt;a href="https://raw.githubusercontent.com/openai/codex/main/LICENSE"&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-node</title>
      <link>https://github.com/openai/openai-node</link>
      <description>&lt;p&gt;Official JavaScript / TypeScript library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI TypeScript and JavaScript API Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://npmjs.org/package/openai"&gt;&lt;img src="https://img.shields.io/npm/v/openai.svg?label=npm%20(stable)" alt="NPM version" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/bundlephobia/minzip/openai" alt="npm bundle size" /&gt; &lt;a href="https://jsr.io/@openai/openai"&gt;&lt;img src="https://jsr.io/badges/@openai/openai" alt="JSR Version" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This library provides convenient access to the OpenAI REST API from TypeScript or JavaScript.&lt;/p&gt; 
&lt;p&gt;It is generated from our &lt;a href="https://github.com/openai/openai-openapi"&gt;OpenAPI specification&lt;/a&gt; with &lt;a href="https://stainlessapi.com/"&gt;Stainless&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to use the OpenAI API, check out our &lt;a href="https://platform.openai.com/docs/api-reference"&gt;API Reference&lt;/a&gt; and &lt;a href="https://platform.openai.com/docs"&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installation from JSR&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;deno add jsr:@openai/openai
npx jsr add @openai/openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These commands will make the module importable from the &lt;code&gt;@openai/openai&lt;/code&gt; scope. You can also &lt;a href="https://jsr.io/docs/using-packages#importing-with-jsr-specifiers"&gt;import directly from JSR&lt;/a&gt; without an install step if you're using the Deno JavaScript runtime:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'jsr:@openai/openai';
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/api.md"&gt;api.md file&lt;/a&gt; along with many &lt;a href="https://github.com/openai/openai-node/tree/master/examples"&gt;code examples&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The primary API for interacting with OpenAI models is the &lt;a href="https://platform.openai.com/docs/api-reference/responses"&gt;Responses API&lt;/a&gt;. You can generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  apiKey: process.env['OPENAI_API_KEY'], // This is the default and can be omitted
});

const response = await client.responses.create({
  model: 'gpt-4o',
  instructions: 'You are a coding assistant that talks like a pirate',
  input: 'Are semicolons optional in JavaScript?',
});

console.log(response.output_text);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The previous standard (supported indefinitely) for generating text is the &lt;a href="https://platform.openai.com/docs/api-reference/chat"&gt;Chat Completions API&lt;/a&gt;. You can use that API to generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  apiKey: process.env['OPENAI_API_KEY'], // This is the default and can be omitted
});

const completion = await client.chat.completions.create({
  model: 'gpt-4o',
  messages: [
    { role: 'developer', content: 'Talk like a pirate.' },
    { role: 'user', content: 'Are semicolons optional in JavaScript?' },
  ],
});

console.log(completion.choices[0].message.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Streaming responses&lt;/h2&gt; 
&lt;p&gt;We provide support for streaming responses using Server Sent Events (SSE).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI();

const stream = await client.responses.create({
  model: 'gpt-4o',
  input: 'Say "Sheep sleep deep" ten times fast!',
  stream: true,
});

for await (const event of stream) {
  console.log(event);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;File uploads&lt;/h2&gt; 
&lt;p&gt;Request parameters that correspond to file uploads can be passed in many different forms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;File&lt;/code&gt; (or an object with the same structure)&lt;/li&gt; 
 &lt;li&gt;a &lt;code&gt;fetch&lt;/code&gt; &lt;code&gt;Response&lt;/code&gt; (or an object with the same structure)&lt;/li&gt; 
 &lt;li&gt;an &lt;code&gt;fs.ReadStream&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;the return value of our &lt;code&gt;toFile&lt;/code&gt; helper&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import fs from 'fs';
import OpenAI, { toFile } from 'openai';

const client = new OpenAI();

// If you have access to Node `fs` we recommend using `fs.createReadStream()`:
await client.files.create({ file: fs.createReadStream('input.jsonl'), purpose: 'fine-tune' });

// Or if you have the web `File` API you can pass a `File` instance:
await client.files.create({ file: new File(['my bytes'], 'input.jsonl'), purpose: 'fine-tune' });

// You can also pass a `fetch` `Response`:
await client.files.create({ file: await fetch('https://somesite/input.jsonl'), purpose: 'fine-tune' });

// Finally, if none of the above are convenient, you can use our `toFile` helper:
await client.files.create({
  file: await toFile(Buffer.from('my bytes'), 'input.jsonl'),
  purpose: 'fine-tune',
});
await client.files.create({
  file: await toFile(new Uint8Array([0, 1, 2]), 'input.jsonl'),
  purpose: 'fine-tune',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Webhook Verification&lt;/h2&gt; 
&lt;p&gt;Verifying webhook signatures is &lt;em&gt;optional but encouraged&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For more information about webhooks, see &lt;a href="https://platform.openai.com/docs/guides/webhooks"&gt;the API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Parsing webhook payloads&lt;/h3&gt; 
&lt;p&gt;For most use cases, you will likely want to verify the webhook and parse the payload at the same time. To achieve this, we provide the method &lt;code&gt;client.webhooks.unwrap()&lt;/code&gt;, which parses a webhook request and verifies that it was sent by OpenAI. This method will throw an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). The &lt;code&gt;.unwrap()&lt;/code&gt; method will parse this JSON for you into an event object after verifying the webhook was sent from OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { headers } from 'next/headers';
import OpenAI from 'openai';

const client = new OpenAI({
  webhookSecret: process.env.OPENAI_WEBHOOK_SECRET, // env var used by default; explicit here.
});

export async function webhook(request: Request) {
  const headersList = headers();
  const body = await request.text();

  try {
    const event = client.webhooks.unwrap(body, headersList);

    switch (event.type) {
      case 'response.completed':
        console.log('Response completed:', event.data);
        break;
      case 'response.failed':
        console.log('Response failed:', event.data);
        break;
      default:
        console.log('Unhandled event type:', event.type);
    }

    return Response.json({ message: 'ok' });
  } catch (error) {
    console.error('Invalid webhook signature:', error);
    return new Response('Invalid signature', { status: 400 });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verifying webhook payloads directly&lt;/h3&gt; 
&lt;p&gt;In some cases, you may want to verify the webhook separately from parsing the payload. If you prefer to handle these steps separately, we provide the method &lt;code&gt;client.webhooks.verifySignature()&lt;/code&gt; to &lt;em&gt;only verify&lt;/em&gt; the signature of a webhook request. Like &lt;code&gt;.unwrap()&lt;/code&gt;, this method will throw an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). You will then need to parse the body after verifying the signature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { headers } from 'next/headers';
import OpenAI from 'openai';

const client = new OpenAI({
  webhookSecret: process.env.OPENAI_WEBHOOK_SECRET, // env var used by default; explicit here.
});

export async function webhook(request: Request) {
  const headersList = headers();
  const body = await request.text();

  try {
    client.webhooks.verifySignature(body, headersList);

    // Parse the body after verification
    const event = JSON.parse(body);
    console.log('Verified event:', event);

    return Response.json({ message: 'ok' });
  } catch (error) {
    console.error('Invalid webhook signature:', error);
    return new Response('Invalid signature', { status: 400 });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Handling errors&lt;/h2&gt; 
&lt;p&gt;When the library is unable to connect to the API, or if the API returns a non-success status code (i.e., 4xx or 5xx response), a subclass of &lt;code&gt;APIError&lt;/code&gt; will be thrown:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const job = await client.fineTuning.jobs
  .create({ model: 'gpt-4o', training_file: 'file-abc123' })
  .catch(async (err) =&amp;gt; {
    if (err instanceof OpenAI.APIError) {
      console.log(err.request_id);
      console.log(err.status); // 400
      console.log(err.name); // BadRequestError
      console.log(err.headers); // {server: 'nginx', ...}
    } else {
      throw err;
    }
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Error codes are as follows:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Status Code&lt;/th&gt; 
   &lt;th&gt;Error Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;400&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BadRequestError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;401&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;403&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PermissionDeniedError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;404&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;NotFoundError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;422&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UnprocessableEntityError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;429&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;RateLimitError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;gt;=500&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;InternalServerError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APIConnectionError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Request IDs&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href="https://platform.openai.com/docs/api-reference/debugging-requests"&gt;these docs&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All object responses in the SDK provide a &lt;code&gt;_request_id&lt;/code&gt; property which is added from the &lt;code&gt;x-request-id&lt;/code&gt; response header so that you can quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const completion = await client.chat.completions.create({
  messages: [{ role: 'user', content: 'Say this is a test' }],
  model: 'gpt-4o',
});
console.log(completion._request_id); // req_123
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also access the Request ID using the &lt;code&gt;.withResponse()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const { data: stream, request_id } = await openai.chat.completions
  .create({
    model: 'gpt-4',
    messages: [{ role: 'user', content: 'Say this is a test' }],
    stream: true,
  })
  .withResponse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Realtime API Beta&lt;/h2&gt; 
&lt;p&gt;The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as &lt;a href="https://platform.openai.com/docs/guides/function-calling"&gt;function calling&lt;/a&gt; through a &lt;code&gt;WebSocket&lt;/code&gt; connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { OpenAIRealtimeWebSocket } from 'openai/beta/realtime/websocket';

const rt = new OpenAIRealtimeWebSocket({ model: 'gpt-4o-realtime-preview-2024-12-17' });

rt.on('response.text.delta', (event) =&amp;gt; process.stdout.write(event.delta));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/realtime.md"&gt;realtime.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href="https://learn.microsoft.com/azure/ai-services/openai/overview"&gt;Azure OpenAI&lt;/a&gt;, use the &lt;code&gt;AzureOpenAI&lt;/code&gt; class instead of the &lt;code&gt;OpenAI&lt;/code&gt; class.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The Azure API shape slightly differs from the core API shape which means that the static types for responses / params won't always be correct.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { AzureOpenAI } from 'openai';
import { getBearerTokenProvider, DefaultAzureCredential } from '@azure/identity';

const credential = new DefaultAzureCredential();
const scope = 'https://cognitiveservices.azure.com/.default';
const azureADTokenProvider = getBearerTokenProvider(credential, scope);

const openai = new AzureOpenAI({ azureADTokenProvider });

const result = await openai.chat.completions.create({
  model: 'gpt-4o',
  messages: [{ role: 'user', content: 'Say hello!' }],
});

console.log(result.choices[0]!.message?.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Retries&lt;/h3&gt; 
&lt;p&gt;Certain errors will be automatically retried 2 times by default, with a short exponential backoff. Connection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict, 429 Rate Limit, and &amp;gt;=500 Internal errors will all be retried by default.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;maxRetries&lt;/code&gt; option to configure or disable this:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Configure the default for all requests:
const client = new OpenAI({
  maxRetries: 0, // default is 2
});

// Or, configure per-request:
await client.chat.completions.create({ messages: [{ role: 'user', content: 'How can I get the name of the current day in JavaScript?' }], model: 'gpt-4o' }, {
  maxRetries: 5,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Timeouts&lt;/h3&gt; 
&lt;p&gt;Requests time out after 10 minutes by default. You can configure this with a &lt;code&gt;timeout&lt;/code&gt; option:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Configure the default for all requests:
const client = new OpenAI({
  timeout: 20 * 1000, // 20 seconds (default is 10 minutes)
});

// Override per-request:
await client.chat.completions.create({ messages: [{ role: 'user', content: 'How can I list all files in a directory using Python?' }], model: 'gpt-4o' }, {
  timeout: 5 * 1000,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On timeout, an &lt;code&gt;APIConnectionTimeoutError&lt;/code&gt; is thrown.&lt;/p&gt; 
&lt;p&gt;Note that requests which time out will be &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/#retries"&gt;retried twice by default&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Request IDs&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href="https://platform.openai.com/docs/api-reference/debugging-requests"&gt;these docs&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All object responses in the SDK provide a &lt;code&gt;_request_id&lt;/code&gt; property which is added from the &lt;code&gt;x-request-id&lt;/code&gt; response header so that you can quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const response = await client.responses.create({ model: 'gpt-4o', input: 'testing 123' });
console.log(response._request_id); // req_123
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also access the Request ID using the &lt;code&gt;.withResponse()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const { data: stream, request_id } = await openai.responses
  .create({
    model: 'gpt-4o',
    input: 'Say this is a test',
    stream: true,
  })
  .withResponse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Auto-pagination&lt;/h2&gt; 
&lt;p&gt;List methods in the OpenAI API are paginated. You can use the &lt;code&gt;for await … of&lt;/code&gt; syntax to iterate through items across all pages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;async function fetchAllFineTuningJobs(params) {
  const allFineTuningJobs = [];
  // Automatically fetches more pages as needed.
  for await (const fineTuningJob of client.fineTuning.jobs.list({ limit: 20 })) {
    allFineTuningJobs.push(fineTuningJob);
  }
  return allFineTuningJobs;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can request a single page at a time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let page = await client.fineTuning.jobs.list({ limit: 20 });
for (const fineTuningJob of page.data) {
  console.log(fineTuningJob);
}

// Convenience methods are provided for manually paginating:
while (page.hasNextPage()) {
  page = await page.getNextPage();
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Realtime API Beta&lt;/h2&gt; 
&lt;p&gt;The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as &lt;a href="https://platform.openai.com/docs/guides/function-calling"&gt;function calling&lt;/a&gt; through a &lt;code&gt;WebSocket&lt;/code&gt; connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { OpenAIRealtimeWebSocket } from 'openai/beta/realtime/websocket';

const rt = new OpenAIRealtimeWebSocket({ model: 'gpt-4o-realtime-preview-2024-12-17' });

rt.on('response.text.delta', (event) =&amp;gt; process.stdout.write(event.delta));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/realtime.md"&gt;realtime.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href="https://learn.microsoft.com/azure/ai-services/openai/overview"&gt;Azure OpenAI&lt;/a&gt;, use the &lt;code&gt;AzureOpenAI&lt;/code&gt; class instead of the &lt;code&gt;OpenAI&lt;/code&gt; class.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The Azure API shape slightly differs from the core API shape which means that the static types for responses / params won't always be correct.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { AzureOpenAI } from 'openai';
import { getBearerTokenProvider, DefaultAzureCredential } from '@azure/identity';

const credential = new DefaultAzureCredential();
const scope = 'https://cognitiveservices.azure.com/.default';
const azureADTokenProvider = getBearerTokenProvider(credential, scope);

const openai = new AzureOpenAI({
  azureADTokenProvider,
  apiVersion: '&amp;lt;The API version, e.g. 2024-10-01-preview&amp;gt;',
});

const result = await openai.chat.completions.create({
  model: 'gpt-4o',
  messages: [{ role: 'user', content: 'Say hello!' }],
});

console.log(result.choices[0]!.message?.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on support for the Azure API, see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/azure.md"&gt;azure.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Accessing raw Response data (e.g., headers)&lt;/h3&gt; 
&lt;p&gt;The "raw" &lt;code&gt;Response&lt;/code&gt; returned by &lt;code&gt;fetch()&lt;/code&gt; can be accessed through the &lt;code&gt;.asResponse()&lt;/code&gt; method on the &lt;code&gt;APIPromise&lt;/code&gt; type that all methods return. This method returns as soon as the headers for a successful response are received and does not consume the response body, so you are free to write custom parsing or streaming logic.&lt;/p&gt; 
&lt;p&gt;You can also use the &lt;code&gt;.withResponse()&lt;/code&gt; method to get the raw &lt;code&gt;Response&lt;/code&gt; along with the parsed data. Unlike &lt;code&gt;.asResponse()&lt;/code&gt; this method consumes the body, returning once it is parsed.&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const client = new OpenAI();

const httpResponse = await client.responses
  .create({ model: 'gpt-4o', input: 'say this is a test.' })
  .asResponse();

// access the underlying web standard Response object
console.log(httpResponse.headers.get('X-My-Header'));
console.log(httpResponse.statusText);

const { data: modelResponse, response: raw } = await client.responses
  .create({ model: 'gpt-4o', input: 'say this is a test.' })
  .withResponse();
console.log(raw.headers.get('X-My-Header'));
console.log(modelResponse);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] All log messages are intended for debugging only. The format and content of log messages may change between releases.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Log levels&lt;/h4&gt; 
&lt;p&gt;The log level can be configured in two ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Via the &lt;code&gt;OPENAI_LOG&lt;/code&gt; environment variable&lt;/li&gt; 
 &lt;li&gt;Using the &lt;code&gt;logLevel&lt;/code&gt; client option (overrides the environment variable if set)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  logLevel: 'debug', // Show all log messages
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Available log levels, from most to least verbose:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;'debug'&lt;/code&gt; - Show debug messages, info, warnings, and errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'info'&lt;/code&gt; - Show info messages, warnings, and errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'warn'&lt;/code&gt; - Show warnings and errors (default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'error'&lt;/code&gt; - Show only errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'off'&lt;/code&gt; - Disable all logging&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;At the &lt;code&gt;'debug'&lt;/code&gt; level, all HTTP requests and responses are logged, including headers and bodies. Some authentication-related headers are redacted, but sensitive data in request and response bodies may still be visible.&lt;/p&gt; 
&lt;h4&gt;Custom logger&lt;/h4&gt; 
&lt;p&gt;By default, this library logs to &lt;code&gt;globalThis.console&lt;/code&gt;. You can also provide a custom logger. Most logging libraries are supported, including &lt;a href="https://www.npmjs.com/package/pino"&gt;pino&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/winston"&gt;winston&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/bunyan"&gt;bunyan&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/consola"&gt;consola&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/signale"&gt;signale&lt;/a&gt;, and &lt;a href="https://jsr.io/@std/log"&gt;@std/log&lt;/a&gt;. If your logger doesn't work, please open an issue.&lt;/p&gt; 
&lt;p&gt;When providing a custom logger, the &lt;code&gt;logLevel&lt;/code&gt; option still controls which messages are emitted, messages below the configured level will not be sent to your logger.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import pino from 'pino';

const logger = pino();

const client = new OpenAI({
  logger: logger.child({ name: 'OpenAI' }),
  logLevel: 'debug', // Send all messages to pino, allowing it to filter
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Making custom/undocumented requests&lt;/h3&gt; 
&lt;p&gt;This library is typed for convenient access to the documented API. If you need to access undocumented endpoints, params, or response properties, the library can still be used.&lt;/p&gt; 
&lt;h4&gt;Undocumented endpoints&lt;/h4&gt; 
&lt;p&gt;To make requests to undocumented endpoints, you can use &lt;code&gt;client.get&lt;/code&gt;, &lt;code&gt;client.post&lt;/code&gt;, and other HTTP verbs. Options on the client, such as retries, will be respected when making these requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;await client.post('/some/path', {
  body: { some_prop: 'foo' },
  query: { some_query_arg: 'bar' },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented request params&lt;/h4&gt; 
&lt;p&gt;To make requests using undocumented parameters, you may use &lt;code&gt;// @ts-expect-error&lt;/code&gt; on the undocumented parameter. This library doesn't validate at runtime that the request matches the type, so any extra values you send will be sent as-is.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;client.chat.completions.create({
  // ...
  // @ts-expect-error baz is not yet public
  baz: 'undocumented option',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For requests with the &lt;code&gt;GET&lt;/code&gt; verb, any extra params will be in the query, all other requests will send the extra param in the body.&lt;/p&gt; 
&lt;p&gt;If you want to explicitly send an extra argument, you can do so with the &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt; request options.&lt;/p&gt; 
&lt;h4&gt;Undocumented response properties&lt;/h4&gt; 
&lt;p&gt;To access undocumented response properties, you may access the response object with &lt;code&gt;// @ts-expect-error&lt;/code&gt; on the response object, or cast the response object to the requisite type. Like the request params, we do not validate or strip extra properties from the response from the API.&lt;/p&gt; 
&lt;h3&gt;Customizing the fetch client&lt;/h3&gt; 
&lt;p&gt;If you want to use a different &lt;code&gt;fetch&lt;/code&gt; function, you can either polyfill the global:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import fetch from 'my-fetch';

globalThis.fetch = fetch;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or pass it to the client:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import fetch from 'my-fetch';

const client = new OpenAI({ fetch });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fetch options&lt;/h3&gt; 
&lt;p&gt;If you want to set custom &lt;code&gt;fetch&lt;/code&gt; options without overriding the &lt;code&gt;fetch&lt;/code&gt; function, you can provide a &lt;code&gt;fetchOptions&lt;/code&gt; object when instantiating the client or making a request. (Request-specific options override client options.)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  fetchOptions: {
    // `RequestInit` options
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring proxies&lt;/h4&gt; 
&lt;p&gt;To modify proxy behavior, you can provide custom &lt;code&gt;fetchOptions&lt;/code&gt; that add runtime-specific proxy options to requests:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/node.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Node&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://github.com/nodejs/undici/raw/main/docs/docs/api/ProxyAgent.md#example---proxyagent-with-fetch"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import * as undici from 'undici';

const proxyAgent = new undici.ProxyAgent('http://localhost:8888');
const client = new OpenAI({
  fetchOptions: {
    dispatcher: proxyAgent,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/bun.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Bun&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://bun.sh/guides/http/proxy"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  fetchOptions: {
    proxy: 'http://localhost:8888',
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/deno.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Deno&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://docs.deno.com/api/deno/~/Deno.createHttpClient"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'npm:openai';

const httpClient = Deno.createHttpClient({ proxy: { url: 'http://localhost:8888' } });
const client = new OpenAI({
  fetchOptions: {
    client: httpClient,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;h2&gt;Semantic versioning&lt;/h2&gt; 
&lt;p&gt;This package generally follows &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;SemVer&lt;/a&gt; conventions, though certain backwards-incompatible changes may be released as minor versions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Changes that only affect static types, without breaking runtime behavior.&lt;/li&gt; 
 &lt;li&gt;Changes to library internals which are technically public but not intended or documented for external use. &lt;em&gt;(Please open a GitHub issue to let us know if you are relying on such internals.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Changes that we do not expect to impact the vast majority of users in practice.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.&lt;/p&gt; 
&lt;p&gt;We are keen for your feedback; please open an &lt;a href="https://www.github.com/openai/openai-node/issues"&gt;issue&lt;/a&gt; with questions, bugs, or suggestions.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;TypeScript &amp;gt;= 4.9 is supported.&lt;/p&gt; 
&lt;p&gt;The following runtimes are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Node.js 20 LTS or later (&lt;a href="https://endoflife.date/nodejs"&gt;non-EOL&lt;/a&gt;) versions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deno v1.28.0 or higher.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bun 1.0 or later.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloudflare Workers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Vercel Edge Runtime.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Jest 28 or greater with the &lt;code&gt;"node"&lt;/code&gt; environment (&lt;code&gt;"jsdom"&lt;/code&gt; is not supported at this time).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nitro v2.6 or greater.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Web browsers: disabled by default to avoid exposing your secret API credentials. Enable browser support by explicitly setting &lt;code&gt;dangerouslyAllowBrowser&lt;/code&gt; to true'.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;More explanation&lt;/summary&gt; 
   &lt;h3&gt;Why is this dangerous?&lt;/h3&gt; 
   &lt;p&gt;Enabling the &lt;code&gt;dangerouslyAllowBrowser&lt;/code&gt; option can be dangerous because it exposes your secret API credentials in the client-side code. Web browsers are inherently less secure than server environments, any user with access to the browser can potentially inspect, extract, and misuse these credentials. This could lead to unauthorized access using your credentials and potentially compromise sensitive data or functionality.&lt;/p&gt; 
   &lt;h3&gt;When might this not be dangerous?&lt;/h3&gt; 
   &lt;p&gt;In certain scenarios where enabling browser support might not pose significant risks:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Internal Tools: If the application is used solely within a controlled internal environment where the users are trusted, the risk of credential exposure can be mitigated.&lt;/li&gt; 
    &lt;li&gt;Public APIs with Limited Scope: If your API has very limited scope and the exposed credentials do not grant access to sensitive data or critical operations, the potential impact of exposure is reduced.&lt;/li&gt; 
    &lt;li&gt;Development or debugging purpose: Enabling this feature temporarily might be acceptable, provided the credentials are short-lived, aren't also used in production environments, or are frequently rotated.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/details&gt;&lt;/li&gt; 
&lt;/ul&gt;  
&lt;p&gt;Note that React Native is not supported at this time.&lt;/p&gt; 
&lt;p&gt;If you are interested in other runtime environments, please open or upvote an issue on GitHub.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/CONTRIBUTING.md"&gt;the contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>libsdl-org/SDL</title>
      <link>https://github.com/libsdl-org/SDL</link>
      <description>&lt;p&gt;Simple Directmedia Layer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Simple DirectMedia Layer (SDL for short) is a cross-platform library designed to make it easy to write multi-media software, such as games and emulators.&lt;/p&gt; 
&lt;p&gt;You can find the latest release and additional information at: &lt;a href="https://www.libsdl.org/"&gt;https://www.libsdl.org/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Installation instructions and a quick introduction is available in &lt;a href="https://raw.githubusercontent.com/libsdl-org/SDL/main/INSTALL.md"&gt;INSTALL.md&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This library is distributed under the terms of the zlib license, available in &lt;a href="https://raw.githubusercontent.com/libsdl-org/SDL/main/LICENSE.txt"&gt;LICENSE.txt&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Enjoy!&lt;/p&gt; 
&lt;p&gt;Sam Lantinga (&lt;a href="mailto:slouken@libsdl.org"&gt;slouken@libsdl.org&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RSSNext/Folo</title>
      <link>https://github.com/RSSNext/Folo</link>
      <description>&lt;p&gt;🧡 Follow everything in one place&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://github.com/RSSNext/Folo"&gt; &lt;img src="https://github.com/RSSNext/Folo/raw/refs/heads/dev/apps/desktop/layer/renderer/public/icon.svg?sanitize=true" alt="Logo" width="80" height="80" /&gt; &lt;/a&gt; 
 &lt;h3&gt;Folo&lt;/h3&gt; 
 &lt;p&gt; &lt;img src="https://github.com/user-attachments/assets/cbe924f2-d8b0-48b0-814e-7c06ccb1911c" height="60" /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://github.com/user-attachments/assets/6997a236-3df3-49d5-98a4-514f6d1a02c4" height="60" /&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://github.com/RSSNext/Folo/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/RSSNext/Follow?color=ffcb47&amp;amp;labelColor=black&amp;amp;style=flat-square&amp;amp;logo=github&amp;amp;label=Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/RSSNext/Folo?style=flat-square&amp;amp;logo=github&amp;amp;label=Contributors&amp;amp;labelColor=black" /&gt;&lt;/a&gt; &lt;a href="https://status.follow.is/" target="_blank"&gt;&lt;img src="https://status.follow.is/api/badge/18/uptime?color=%2344CC10&amp;amp;labelColor=black&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/RSSNext/Folo/total?color=369eff&amp;amp;labelColor=black&amp;amp;logo=github&amp;amp;style=flat-square&amp;amp;label=Downloads" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=folo_is"&gt;&lt;img src="https://img.shields.io/badge/Follow-blue?color=1d9bf0&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/followapp" target="_blank"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;amp;query=approximate_member_count&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;amp;style=flat-square&amp;amp;logo=folo&amp;amp;logoColor=white&amp;amp;label=Mobile&amp;amp;labelColor=black&amp;amp;color=FF5C00" /&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604"&gt;&lt;img src="https://img.shields.io/itunes/v/6739802604?style=flat-square&amp;amp;logo=apple&amp;amp;label=App%20Store&amp;amp;color=FF5C00&amp;amp;labelColor=black" /&gt;&lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=is.follow" target="_blank"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Dis.follow%26gl%3DUS%26hl%3Den%26l%3DAndroid%26m%3D%24version&amp;amp;style=flat-square&amp;amp;logo=google-play&amp;amp;label=Google%20Play&amp;amp;labelColor=black&amp;amp;color=FF5C00" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fdesktop%2Fpackage.json&amp;amp;style=flat-square&amp;amp;logo=folo&amp;amp;logoColor=white&amp;amp;label=Desktop&amp;amp;labelColor=black&amp;amp;color=FF5C00" /&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-mac-app-store-version.rss3.workers.dev%2F&amp;amp;query=version&amp;amp;prefix=v&amp;amp;style=flat-square&amp;amp;logo=apple&amp;amp;label=Mac%20App%20Store&amp;amp;labelColor=black&amp;amp;color=FF5C00&amp;amp;cacheSeconds=3600" /&gt;&lt;/a&gt; &lt;a href="https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-microsoft-store-version.rss3.workers.dev%2F&amp;amp;query=version&amp;amp;style=flat-square&amp;amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIj48cGF0aCBmaWxsPSIjZmZmIiBkPSJNMyAzaDguNTN2OC41M0gzek0xMi40NjkgM2g4LjUzdjguNTNoLTguNTN6TTMgMTIuNDdoOC41M1YyMUgzek0xMi40NjkgMTIuNDdoOC41M1YyMWgtOC41M3oiLz48L3N2Zz4%3D&amp;amp;logoColor=white&amp;amp;label=Microsoft%20Store&amp;amp;labelColor=black&amp;amp;color=FF5C00&amp;amp;cacheSeconds=3600&amp;amp;prefix=v" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; 
  &lt;!-- &lt;a href="https://github.com/RSSNext/Folo" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/59b957fb-59ed-4ef0-994e-f6a402a6fe2b" alt="GitHub Trending" height="55"/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt; --&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/35747716-28bf-413a-822b-aa49d49f1aa0" alt="Folo Mobile" width="52%" /&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/198a0165-b8c9-45c1-9116-b473a13a8d0c" alt="Folo Desktop" width="46%" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;As they say, your thoughts are what you read—and we’ve been consuming noisy feeds for too long! Folo organizes content into one timeline, keeping you updated on what matters, noise-free. Share lists, explore collections, and enjoy distraction-free browsing.&lt;/p&gt; 
&lt;h2&gt;👋🏻 Getting Started &amp;amp; Join Our Community&lt;/h2&gt; 
&lt;p&gt;Whether for users or professional developers, Folo will be your open information playground. Please be aware that Folo is currently under active development, and feedback is welcome for any &lt;a href="https://github.com/RSSNext/Folo/issues"&gt;issue&lt;/a&gt; encountered.&lt;/p&gt; 
&lt;p&gt;Feel free to try it using the following methods:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Operating System&lt;/th&gt; 
   &lt;th align="left"&gt;Source&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Any&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://app.folo.is" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/51ef7800-b683-4493-83e8-eb4752366997" alt="Browser" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;iOS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/a94d8698-2a11-4f43-9b0a-b756b17b61f7" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Android&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://play.google.com/store/apps/details?id=is.follow" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/0d178e0b-3ace-4f75-bbde-ab3c0a416ce8" alt="Google Play" height="55" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;macOS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/0d47f902-7fa3-494e-ad28-9ab11af5e6d4" alt="Microsoft Store" height="55" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Windows&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/b3112bab-9dd0-4893-9488-890dcb368f70" alt="Microsoft Store" height="55" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Linux&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You can also install using the following methods maintained by our community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are using Arch Linux, you can install package &lt;a href="https://aur.archlinux.org/packages/folo-appimage"&gt;folo-appimage&lt;/a&gt; that maintained by &lt;a href="https://github.com/ttimochan"&gt;timochan&lt;/a&gt; and &lt;a href="https://github.com/grtsinry43"&gt;grtsinry43&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using Nix, you can install package &lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/fo/follow/package.nix"&gt;follow&lt;/a&gt; that maintained by &lt;a href="https://github.com/iosmanthus"&gt;iosmanthus&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using macOS with &lt;a href="https://brew.sh"&gt;Homebrew&lt;/a&gt;, you can install cask &lt;a href="https://formulae.brew.sh/cask/folo"&gt;folo&lt;/a&gt; that maintained by &lt;a href="https://github.com/realSunyz"&gt;realSunyz&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using Windows with &lt;a href="https://scoop.sh"&gt;Scoop&lt;/a&gt;, you can install manifest &lt;a href="https://github.com/cscnk52/cetacea/raw/master/bucket/folo.json"&gt;folo&lt;/a&gt; that maintained by &lt;a href="https://github.com/cscnk52"&gt;cscnk52&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/followapp"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;amp;query=approximate_member_count&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Discord" /&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;Join our Discord server to connect with developers, request features, and receive support.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://x.com/intent/follow?screen_name=folo_is"&gt;&lt;img src="https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;amp;label=_&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;style=flat-square" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Follow us on X/Twitter for product updates and to join in on reward activities.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Star Us&lt;/strong&gt;, You will receive all release notifications from GitHub without any delay ~&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a08f9437-b24c-4388-8f01-2826e09eeaf2" alt="Image" /&gt;&lt;/p&gt; 
&lt;a href="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=783512367" target="_blank" style="display: block" align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;amp;image_size=auto&amp;amp;color_scheme=dark" width="655" height="auto" /&gt; 
  &lt;img alt="Performance Stats of RSSNext/Folo - Last 28 days" src="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;amp;image_size=auto&amp;amp;color_scheme=light" width="655" height="auto" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;✨ Features&lt;/h2&gt; 
&lt;h3&gt;Customized Information Hub&lt;/h3&gt; 
&lt;p&gt;Subscribe to a vast range of feeds and curated lists. Curate your favorites and keep track of what matters most to you.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/11dc7d21-f5d8-4e41-9269-24fc352aa02b" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;AI At Your Fingertips&lt;/h3&gt; 
&lt;p&gt;A smarter and more efficient browsing with AI-powered features like translation, summary, and more.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/37cf4f2f-4c5e-4775-86e8-2fa1a1b2ecf5" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Dynamic Content Support&lt;/h3&gt; 
&lt;p&gt;Because we know content is more than just text. From articles to videos, images to audio — Folo gets it all covered.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/d1379fd6-8767-476e-b0dc-d61753715e26" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;$POWER An Ownership Economy&lt;/h3&gt; 
&lt;p&gt;Tip creators across instantly with $POWER, support content you love, and unlock value in your own work. Your content, your power.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/23bbcd63-45ca-40c8-83ef-96bd1100b701" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;More Than Just An App&lt;/h3&gt; 
&lt;p&gt;This isn’t just another app. Folo is a community — introducing a new era of openness and community-driven experience.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/62004a04-eaea-4f5d-bfbf-4e68b6b90286" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;You are welcome to join the open source community to build together, please check our &lt;a href="https://raw.githubusercontent.com/RSSNext/Folo/dev/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;🔏 Code signing policy&lt;/h2&gt; 
&lt;p&gt;Folo for Windows uses free code signing provided by &lt;a href="https://about.signpath.io/"&gt;SignPath.io&lt;/a&gt;, certificate by &lt;a href="https://signpath.org/"&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Folo for macOS and iOS are signed and notarized by &lt;a href="https://developer.apple.com/programs/"&gt;Apple Developer Program&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All released files are verified with &lt;a href="https://github.com/RSSNext/Folo/attestations"&gt;GitHub artifact attestations&lt;/a&gt; to ensure their provenance and integrity.&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Folo is licensed under the GNU General Public License version 3 with the addition of the following special exception:&lt;/p&gt; 
&lt;p&gt;All content in the &lt;code&gt;icons/mgc&lt;/code&gt; directory is copyrighted by &lt;a href="https://mgc.mingcute.com/"&gt;https://mgc.mingcute.com/&lt;/a&gt; and cannot be redistributed.&lt;/p&gt; 
&lt;p&gt;All content in the &lt;code&gt;lottie&lt;/code&gt; directory is distributed under the &lt;a href="https://lottiefiles.com/page/license"&gt;Lottie Simple License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>binhnguyennus/awesome-scalability</title>
      <link>https://github.com/binhnguyennus/awesome-scalability</link>
      <description>&lt;p&gt;The Patterns of Scalable, Reliable, and Performant Large-Scale Systems&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="http://awesome-scalability.com/"&gt;&lt;img src="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/logo.png" alt="Logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;An updated and organized reading list for illustrating the patterns of scalable, reliable, and performant large-scale systems. Concepts are explained in the articles of prominent engineers and credible references. Case studies are taken from battle-tested systems that serve millions to billions of users.&lt;/p&gt; 
&lt;h4&gt;If your system goes slow&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Understand your problems: scalability problem (fast for a single user but slow under heavy load) or performance problem (slow for a single user) by reviewing some &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#principle"&gt;design principles&lt;/a&gt; and checking how &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#scalability"&gt;scalability&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#performance"&gt;performance&lt;/a&gt; problems are solved at tech companies. The section of &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#intelligence"&gt;intelligence&lt;/a&gt; are created for those who work with data and machine learning at big (data) and deep (learning) scale.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;If your system goes down&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Even if you lose all one day, you can build all over again if you retain your calm!" - Thuan Pham, former CTO of Uber. So, keep calm and mind the &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#availability"&gt;availability&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#stability"&gt;stability&lt;/a&gt; matters!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;If you are having a system design interview&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Look at some &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#interview"&gt;interview notes&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#architecture"&gt;real-world architectures with completed diagrams&lt;/a&gt; to get a comprehensive view before designing your system on whiteboard. You can check some &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#talk"&gt;talks&lt;/a&gt; of engineers from tech giants to know how they build, scale, and optimize their systems. Good luck!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;If you are building your dream team&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The goal of scaling team is not growing team size but increasing team output and value. You can find out how tech companies reach that goal in various aspects: hiring, management, organization, culture, and communication in the &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#organization"&gt;organization&lt;/a&gt; section.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Community power&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Contributions are greatly welcome! You may want to take a look at the &lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/CONTRIBUTING.md"&gt;contribution guidelines&lt;/a&gt;. If you see a link here that is no longer maintained or is not a good fit, please submit a pull request!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Many long hours of hard work have gone into this project. If you find it helpful, please share on Facebook, &lt;a href="https://ctt.ec/V8B2p"&gt;on Twitter&lt;/a&gt;, &lt;a href="http://t.cn/RnjFLCB"&gt;on Weibo&lt;/a&gt;, or on your chat groups! Knowledge is power, knowledge shared is power multiplied. Thank you!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Content&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#principle"&gt;Principle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#scalability"&gt;Scalability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#availability"&gt;Availability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#stability"&gt;Stability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#performance"&gt;Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#intelligence"&gt;Intelligence&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#interview"&gt;Interview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#organization"&gt;Organization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#talk"&gt;Talk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/binhnguyennus/awesome-scalability/master/#book"&gt;Book&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Principle&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://people.eecs.berkeley.edu/~brewer/papers/GiantScale-IEEE.pdf"&gt;Lessons from Giant-Scale Services - Eric Brewer, UC Berkeley &amp;amp; Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cs.cornell.edu/projects/ladis2009/talks/dean-keynote-ladis2009.pdf"&gt;Designs, Lessons and Advice from Building Large Distributed Systems - Jeff Dean, Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/effective-api-design"&gt;How to Design a Good API &amp;amp; Why it Matters - Joshua Bloch, CMU &amp;amp; Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://mvdirona.com/jrh/work/"&gt;On Efficiency, Reliability, Scaling - James Hamilton, VP at AWS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17americas/program/presentation/rosenthal"&gt;Principles of Chaos Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon16/program/presentation/lueder"&gt;Finding the Order in Chaos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://12factor.net/"&gt;The Twelve-Factor App&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html"&gt;Clean Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.math-cs.gordon.edu/courses/cs211/lectures-2009/Cohesion,Coupling,MVC.pdf"&gt;High Cohesion and Low Coupling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@SkyscannerEng/monoliths-and-microservices-8c65708c3dbf"&gt;Monoliths and Microservices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://robertgreiner.com/2014/08/cap-theorem-revisited/"&gt;CAP Theorem and Trade-offs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.andyet.com/2014/10/01/right-database"&gt;CP Databases and AP Databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://ithare.com/scaling-stateful-objects/"&gt;Stateless vs Stateful Scalability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codinghorror.com/scaling-up-vs-scaling-out-hidden-costs/"&gt;Scale Up vs Scale Out: Hidden Costs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://neo4j.com/blog/acid-vs-base-consistency-models-explained/"&gt;ACID and BASE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.msdn.microsoft.com/csliu/2009/08/27/io-concept-blockingnon-blocking-vs-syncasync/"&gt;Blocking/Non-Blocking and Sync/Async&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://use-the-index-luke.com/sql/testing-scalability"&gt;Performance and Scalability of Databases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2011/2/10/database-isolation-levels-and-their-effects-on-performance-a.html"&gt;Database Isolation Levels and Effects on Performance and Scalability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://martin.kleppmann.com/2017/01/26/data-loss-in-large-clusters.html"&gt;The Probability of Data Loss in Large Clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/previous-versions/msp-n-p/dn271399(v=pandp.10)"&gt;Data Access for Highly-Scalable Solutions: Using SQL, NoSQL, and Polyglot Persistence&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.upwork.com/hiring/data/sql-vs-nosql-databases-whats-the-difference/"&gt;SQL vs NoSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.salesforce.com/sql-or-nosql-9eaf1d92545b"&gt;SQL vs NoSQL - Lesson Learned at Salesforce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.baqend.com/nosql-databases-a-survey-and-decision-guidance-ea7823a822d"&gt;NoSQL Databases: Survey and Decision Guidance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jeeyoungk/how-sharding-works-b4dec46b3f6"&gt;How Sharding Works&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.tom-e-white.com/2007/11/consistent-hashing.html"&gt;Consistent Hashing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@dgryski/consistent-hashing-algorithmic-tradeoffs-ef6b8e2fcae8"&gt;Consistent Hashing: Algorithmic Tradeoffs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://booking.ai/dont-be-tricked-by-the-hashing-trick-192a6aae3087"&gt;Don’t be tricked by the Hashing Trick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/distributing-content-to-open-connect-3e3e391d4dc9"&gt;Uniform Consistent Hashing at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.allthingsdistributed.com/2008/12/eventually_consistent.html"&gt;Eventually Consistent - Werner Vogels, CTO at Amazon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.stevesouders.com/blog/2012/10/11/cache-is-king/"&gt;Cache is King&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.the-paper-trail.org/post/2014-06-06-paper-notes-anti-caching/"&gt;Anti-Caching&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/latency-everywhere-and-it-costs-you-sales-how-crush-it"&gt;Understand Latency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://norvig.com/21-days.html#answers"&gt;Latency Numbers Every Programmer Should Know&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://queue.acm.org/detail.cfm?id=3096459&amp;amp;__s=dnkxuaws9pogqdnxmx8i"&gt;The Calculus of Service Availability&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2014/5/12/4-architecture-issues-when-scaling-web-applications-bottlene.html"&gt;Architecture Issues When Scaling Web Applications: Bottlenecks, Database, CPU, IO&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2012/5/16/big-list-of-20-common-bottlenecks.html"&gt;Common Bottlenecks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://queue.acm.org/detail.cfm?id=3025012"&gt;Life Beyond Distributed Transactions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon15/program/presentation/taveira"&gt;Relying on Software to Redirect Traffic Reliably at Various Layers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17americas/program/presentation/andrus"&gt;Breaking Things on Purpose&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@rdsubhas/10-modern-software-engineering-mistakes-bc67fbef4fc8"&gt;Avoid Over Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.infoq.com/articles/scalability-worst-practices"&gt;Scalability Worst Practices&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@DataStax/instagram-engineerings-3-rules-to-a-scalable-cloud-application-architecture-c44afed31406"&gt;Use Solid Technologies - Don’t Re-invent the Wheel - Keep It Simple!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2018/01/simplicity-by-distributing-complexity.html"&gt;Simplicity by Distributing Complexity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://tech.transferwise.com/why-over-reusing-is-bad/"&gt;Why Over-Reusing is Bad&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codinghorror.com/performance-is-a-feature/"&gt;Performance is a Feature&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeascraft.com/2014/12/11/make-performance-part-of-your-workflow/"&gt;Make Performance Part of Your Workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/the-benefits-of-server-side-rendering-over-client-side-rendering-5d07ff2cefe8"&gt;The Benefits of Server Side Rendering over Client Side Rendering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://architecht.io/lessons-from-facebook-on-engineering-for-scale-f5716f0afc7a"&gt;Automate and Abstract: Lessons at Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://8thlight.com/blog/sarah-sunday/2017/09/15/aws-dos-and-donts.html"&gt;AWS Do's and Don'ts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@hellostanley/design-doesnt-scale-4d81e12cbc3e"&gt;(UI) Design Doesn’t Scale - Stanley Wood, Design Director at Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.brendangregg.com/linuxperf.html"&gt;Linux Performance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.igvita.com/2016/05/20/building-fast-and-resilient-web-applications/"&gt;Building Fast and Resilient Web Applications - Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17asia/program/presentation/wang_daxin"&gt;Accept Partial Failures, Minimize Service Loss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2012/12/31/designing-for-resiliency-will-be-so-2013.html"&gt;Design for Resiliency&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/guide/design-principles/self-healing"&gt;Design for Self-healing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/guide/design-principles/scale-out"&gt;Design for Scaling Out&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/architecture/guide/design-principles/design-for-evolution"&gt;Design for Evolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2013/8/26/reddit-lessons-learned-from-mistakes-made-scaling-to-1-billi.html"&gt;Learn from Mistakes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Scalability&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://martinfowler.com/microservices/"&gt;Microservices and Orchestration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/microservice-architecture/"&gt;Domain-Oriented Microservice Architecture at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/service-architecture-3"&gt;Service Architecture (3 parts: Domain Gateways, Value-Added Services, BFF) at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.riotgames.com/news/thinking-inside-container"&gt;Container (8 parts) at Riot Games&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/containerization-at-pinterest-92295347f2f3"&gt;Containerization at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/the-evolution-of-container-usage-at-netflix-3abfc096781b"&gt;Evolution of Container Usage at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/dockerizing-mysql/"&gt;Dockerizing MySQL at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2018/01/11/testing-of-microservices/"&gt;Testing of Microservices at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/treehouse-engineering/lessons-learned-running-docker-in-production-5dce99ece770"&gt;Docker in Production at Treehouse&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/inside-a-soundcloud-microservice"&gt;Microservice at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://stripe.com/blog/operating-kubernetes"&gt;Operate Kubernetes Reliably at Stripe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.trivago.com/2020/06/10/cross-cluster-traffic-mirroring-with-istio/"&gt;Cross-Cluster Traffic Mirroring with Istio at Trivago&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://open.nytimes.com/agrarian-scale-kubernetes-part-3-ee459887ed7e"&gt;Agrarian-Scale Kubernetes (3 parts) at New York Times&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/bbc-design-engineering/powering-bbc-online-with-nanoservices-727840ba015b"&gt;Nanoservices at BBC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.techatbloomberg.com/blog/powerfulseal-testing-tool-kubernetes-clusters/"&gt;PowerfulSeal: Testing Tool for Kubernetes Clusters at Bloomberg&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/netflix-conductor-a-microservices-orchestrator-2e8d4771bf40"&gt;Conductor: Microservices Orchestrator at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://shopifyengineering.myshopify.com/blogs/engineering/docker-at-shopify-how-we-built-containers-that-power-over-100-000-online-shops"&gt;Docker Containers that Power Over 100.000 Online Shops at Shopify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.engineering/microservice-architecture-at-medium-9c33805eb74f"&gt;Microservice Architecture at Medium&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://boxunix.com/post/bare_metal_to_kube/"&gt;From bare-metal to Kubernetes at Betabrand&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/tinder-engineering/tinders-move-to-kubernetes-cda2a6372f44"&gt;Kubernetes at Tinder&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.quora.com/q/quoraengineering/Adopting-Kubernetes-at-Quora"&gt;Kubernetes at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/building-a-kubernetes-platform-at-pinterest-fb3d9571c948"&gt;Kubernetes Platform at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/building-nubank/microservices-at-nubank-an-overview-2ebcb336c64d"&gt;Microservices at Nubank&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.mercari.com/en/blog/entry/20210831-2019-06-07-155849/"&gt;Payment Transaction Management in Microservices at Mercari&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.snap.com/monolith-to-multicloud-microservices-snap-service-mesh"&gt;Service Mesh at Snap&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/grit-a-protocol-for-distributed-transactions-across-microservices/"&gt;GRIT: Protocol for Distributed Transactions across Microservices at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/palantir/introducing-rubix-kubernetes-at-palantir-ab0ce16ea42e"&gt;Rubix: Kubernetes at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/crisp-critical-path-analysis-for-microservice-architectures/"&gt;CRISP: Critical Path Analysis for Microservice Architectures at Uber&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.wix.engineering/post/scaling-to-100m-to-cache-or-not-to-cache"&gt;Distributed Caching&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/caching-for-a-global-netflix-7bcc457012f1"&gt;EVCache: Distributed In-memory Caching at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/cache-warming-agility-for-a-stateful-service-2d3b1da82642"&gt;EVCache Cache Warmer Infrastructure at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.box.com/blog/introducing-memsniff-robust-memcache-traffic-analyzer/"&gt;Memsniff: Robust Memcache Traffic Analyzer at Box&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2017/11/30/how-etsy-caches/"&gt;Caching with Consistent Hashing and Cache Smearing at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.facebook.com/posts/220956754772273/an-analysis-of-facebook-photo-caching/"&gt;Analysis of Photo Caching at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.facebook.com/posts/964122680272229/web-performance-cache-efficiency-exercise/"&gt;Cache Efficiency Exercise at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://tech.trivago.com/2015/10/15/tcache/"&gt;tCache: Scalable Data-aware Java Caching at Trivago&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.quora.com/Pycache-lightning-fast-in-process-caching"&gt;Pycache: In-process Caching at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://tech.trivago.com/2017/12/19/how-trivago-reduced-memcached-memory-usage-by-50/"&gt;Reduce Memcached Memory Usage by 50% at Trivago&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/03/caching-internal-service-calls-at-yelp.html"&gt;Caching Internal Service Calls at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://allegro.tech/2017/01/estimating-the-cache-efficiency-using-big-data.html"&gt;Estimating the Cache Efficiency using Big Data at Allegro&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2018/04/distributed-cache-akka-kubernetes.html"&gt;Distributed Cache at Zalando&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://clickhouse.com/blog/building-a-distributed-cache-for-s3"&gt;Distributed Cache for S3 at ClickHouse&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/evolution-of-application-data-caching-from-ram-to-ssd-a33d6fa7a690"&gt;Application Data Caching from RAM to SSD at NetFlix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@SkyscannerEng/the-tradeoffs-of-a-replicated-cache-b6680c722f58"&gt;Tradeoffs of Replicated Cache at Skyscanner&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engblog.yext.com/post/geolocation-caching"&gt;Location Caching with Quadtrees at Yext&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/vimeo-engineering-blog/video-metadata-caching-at-vimeo-a54b25f0b304"&gt;Video Metadata Caching at Vimeo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://highscalability.com/blog/2014/9/8/how-twitter-uses-redis-to-scale-105tb-ram-39mm-qps-10000-ins.html"&gt;Scaling Redis at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/scaling-slacks-job-queue-687222e9d100"&gt;Scaling Job Queue with Redis at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://githubengineering.com/moving-persistent-data-out-of-redis/"&gt;Moving persistent data out of Redis at Github&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.instagram.com/storing-hundreds-of-millions-of-simple-key-value-pairs-in-redis-1091ae80f74c"&gt;Storing Hundreds of Millions of Simple Key-Value Pairs in Redis at Instagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://tech.trivago.com/2017/01/25/learn-redis-the-hard-way-in-production/"&gt;Redis at Trivago&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://deliveroo.engineering/2017/01/19/optimising-membership-queries.html"&gt;Optimizing Redis Storage at Deliveroo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.wattpad.com/post/23244724794/store-more-stuff-memory-optimization-in-redis"&gt;Memory Optimization in Redis at Wattpad&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.heroku.com/rolling-redis-fleet"&gt;Redis Fleet at Heroku&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/gradle-remote-build-cache-misses-part-2"&gt;Solving Remote Build Cache Misses (2 parts) at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.flipkart.tech/ratings-reviews-flipkart-part-2-574ab08e75cf"&gt;Ratings &amp;amp; Reviews (2 parts) at Flipkart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/prefetch-caching-of-ebay-items/"&gt;Prefetch Caching of Items at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.wix.engineering/post/how-we-built-a-cross-region-caching-library"&gt;Cross-Region Caching Library at Wix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/improving-distributed-caching-performance-and-efficiency-at-pinterest-92484b5fe39b"&gt;Improving Distributed Caching Performance and Efficiency at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://doordash.engineering/2023/10/19/how-doordash-standardized-and-improved-microservices-caching/"&gt;Standardize and Improve Microservices Caching at DoorDash&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Caching"&gt;HTTP Caching and CDN&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.zynga.com/blogs/engineering/zynga-geo-proxy-reducing-mobile-game-latency"&gt;Zynga Geo Proxy: Reducing Mobile Game Latency at Zynga&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://technology.condenast.com/story/the-why-and-how-of-google-amp-at-conde-nast"&gt;Google AMP at Condé Nast&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://deliveroo.engineering/2016/09/19/ab-testing-cdns.html"&gt;A/B Tests on Hosting Infrastructure (CDNs) at Deliveroo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/how-soundcloud-uses-haproxy-with-kubernetes-for-user-facing-traffic"&gt;HAProxy with Kubernetes for User-facing Traffic at SoundCloud&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/03/meet-bandaid-the-dropbox-service-proxy/"&gt;Bandaid: Service Proxy at Dropbox&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://slack.engineering/service-workers-at-slack-our-quest-for-faster-boot-times-and-offline-support-3492cf79c88"&gt;Service Workers at Slack&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://labs.spotify.com/2020/02/24/how-spotify-aligned-cdn-services-for-a-lightning-fast-streaming-experience/"&gt;CDN Services at Spotify&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html"&gt;Distributed Locking&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.acolyer.org/2015/02/13/the-chubby-lock-service-for-loosely-coupled-distributed-systems/"&gt;Chubby: Lock Service for Loosely Coupled Distributed Systems at Google&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MDuagr729aU"&gt;Distributed Locking at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.gosquared.com/distributed-locks-using-redis"&gt;Distributed Locks using Redis at GoSquared&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2018/zookeeper-at-twitter.html"&gt;ZooKeeper at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://chartio.com/blog/eliminating-duplicate-queries-using-distributed-locking/"&gt;Eliminating Duplicate Queries using Distributed Locking at Chartio&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oreilly.com/ideas/understanding-the-value-of-distributed-tracing"&gt;Distributed Tracking, Tracing, and Measuring&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/a/2012/distributed-systems-tracing-with-zipkin.html"&gt;Zipkin: Distributed Systems Tracing at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/using-kubernetes-pod-metadata-to-improve-zipkin-traces"&gt;Improve Zipkin Traces using Kubernetes Pod Metadata at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/canopy-scalable-tracing-analytics-facebook"&gt;Canopy: Scalable Distributed Tracing &amp;amp; Analysis at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/distributed-tracing-at-pinterest-with-new-open-source-tools-a4f8a5562f6b"&gt;Pintrace: Distributed Tracing at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.atspotify.com/2021/01/20/introducing-xcmetrics-our-all-in-one-tool-for-tracking-xcode-build-metrics/"&gt;XCMetrics: All-in-One Tool for Tracking Xcode Build Metrics at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/distributed-service-call-graph/real-time-distributed-tracing-website-performance-and-efficiency"&gt;Real-time Distributed Tracing at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17americas/program/presentation/arthorne"&gt;Tracking Service Infrastructure at Scale at Shopify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.hellofresh.com/scaling-hellofresh-distributed-tracing-7b182928247d"&gt;Distributed Tracing at HelloFresh&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/analyzing-distributed-trace-data-6aae58919949"&gt;Analyzing Distributed Trace Data at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/distributed-tracing/"&gt;Distributed Tracing at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/jvm-profiler/"&gt;JVM Profiler: Tracing Distributed JVM Applications at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17asia/program/presentation/mah"&gt;Data Checking at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.showmax.com/2016/10/tracing-distributed-systems-at-showmax/"&gt;Tracing Distributed Systems at Showmax&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@palantir/osquery-across-the-enterprise-3c3c9d13ec55"&gt;osquery Across the Enterprise at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2011/02/15/measure-anything-measure-everything/"&gt;StatsD at Etsy&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.csee.umbc.edu/courses/graduate/CMSC621/fall02/lectures/ch11.pdf"&gt;Distributed Scheduling&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.pagerduty.com/eng/distributed-task-scheduling-3/"&gt;Distributed Task Scheduling (3 parts) at PagerDuty&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://landing.google.com/sre/sre-book/chapters/distributed-periodic-scheduling/"&gt;Building Cron at Google&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.quora.com/Quoras-Distributed-Cron-Architecture"&gt;Distributed Cron Architecture at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/chronos-a-replacement-for-cron-f05d7d986a9d"&gt;Chronos: A Replacement for Cron at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engblog.nextdoor.com/we-don-t-run-cron-jobs-at-nextdoor-6f7f9cc62040"&gt;Scheduler at Nextdoor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/peloton/"&gt;Peloton: Unified Resource Scheduler for Diverse Cluster Workloads at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/fenzo-oss-scheduler-for-apache-mesos-frameworks-5c340e77e543"&gt;Fenzo: OSS Scheduler for Apache Mesos Frameworks at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://airflow.apache.org/"&gt;Airflow - Workflow Orchestration&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/airflow-a-workflow-management-platform-46318b977fd8"&gt;Airflow at Airbnb&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.adyen.com/knowledge-hub/apache-airflow-at-adyen"&gt;Airflow at Adyen&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.pandora.com/apache-airflow-at-pandora-1d7a844d68ee"&gt;Airflow at Pandora&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/robinhood-engineering/why-robinhood-uses-airflow-aed13a9a90c8"&gt;Airflow at Robinhood&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://eng.lyft.com/running-apache-airflow-at-lyft-6e53bb8fccff"&gt;Airflow at Lyft&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://drivy.engineering/airflow-architecture/"&gt;Airflow at Drivy&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.grab.com/experimentation-platform-data-pipeline"&gt;Airflow at Grab&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/adobetech/adobe-experience-platform-orchestration-service-with-apache-airflow-952203723c0b"&gt;Airflow at Adobe&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/auditing-airflow-batch-jobs-73b45100045"&gt;Auditing Airflow Job Runs at Walmart&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://hackernoon.com/meet-maat-alibabas-dag-based-distributed-task-scheduler-7c9cf0c83438"&gt;MaaT: DAG-based Distributed Task Scheduler at Alibaba&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.etsy.com/codeascraft/boundary-layer-declarative-airflow-workflows"&gt;boundary-layer: Declarative Airflow Workflows at Etsy&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oreilly.com/ideas/monitoring-distributed-systems"&gt;Distributed Monitoring and Alerting&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/unicorn-rheos-remediation-center/"&gt;Unicorn: Remediation System at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/optimizing-m3/"&gt;M3: Metrics and Monitoring Platform at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2019/05/athena-our-automated-build-health-management-system/"&gt;Athena: Automated Build Health Management System at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2019/11/monitoring-server-applications-with-vortex/"&gt;Vortex: Monitoring Server Applications at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2019/solving-manageability-challenges-with-nuage"&gt;Nuage: Cloud Management Service at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/telltale-netflix-application-monitoring-simplified-5c08bfa780ba"&gt;Telltale: Application Monitoring at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2019/06/smart-alerts-in-thirdeye--linkedins-real-time-monitoring-platfor"&gt;ThirdEye: Monitoring Platform at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/periskop-exception-monitoring-service"&gt;Periskop: Exception Monitoring Service at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2017/02/meet-securitybot-open-sourcing-automated-security-at-scale/"&gt;Securitybot: Distributed Alerting Bot at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon18asia/presentation/xinchi"&gt;Monitoring System at Alibaba&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/dailymotion/real-user-monitoring-1948375f8be5"&gt;Real User Monitoring at Dailymotion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/observability-at-scale/"&gt;Alerting Ecosystem at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/alerting-framework-at-airbnb-35ba48df894f"&gt;Alerting Framework at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/alerting-on-slos"&gt;Alerting on Service-Level Objectives (SLOs) at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/observability-anomaly-detection/"&gt;Job-based Forecasting Workflow for Observability Anomaly Detection at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.hackerearth.com/2017/03/21/monitoring-and-alert-system-using-graphite-and-cabot/"&gt;Monitoring and Alert System using Graphite and Cabot at HackerEarth&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/a/2016/observability-at-twitter-technical-overview-part-ii.html"&gt;Observability (2 parts) at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/distributed-security-alerting-c89414c992d6"&gt;Distributed Security Alerting at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/news-alerting-bloomberg"&gt;Real-Time News Alerting at Bloomberg&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2019/an-inside-look-at-linkedins-data-pipeline-monitoring-system-"&gt;Data Pipeline Monitoring System at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.picnic.nl/monitoring-and-observability-at-picnic-684cefd845c4"&gt;Monitoring and Observability at Picnic&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-us/library/cc767123.aspx"&gt;Distributed Security&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/02/security-at-scale-the-dropbox-approach/"&gt;Approach to Security at Scale at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/introducing-aardvark-and-repokid-53b081bf3a7e"&gt;Aardvark and Repokid: AWS Least Privilege for Distributed, High-Velocity Development at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.slideshare.net/MikeSvoboda/2017-lisa-linkedins-distributed-firewall-dfw"&gt;LISA: Distributed Firewall at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.coinbase.com/how-coinbase-builds-secure-infrastructure-to-store-bitcoin-in-the-cloud-30a6504e40ba"&gt;Secure Infrastructure To Store Bitcoin In The Cloud at Coinbase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/binaryalert-real-time-serverless-malware-detection-ca44370c1b90"&gt;BinaryAlert: Real-time Serverless Malware Detection at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://segment.com/blog/secure-access-to-100-aws-accounts/"&gt;Scalable IAM Architecture to Secure Access to 100 AWS Accounts at Segment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.indeedblog.com/blog/2018/04/oaudit-toolbox/"&gt;OAuth Audit Toolbox at Indeed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/04/ad-password-blacklisting.html"&gt;Active Directory Password Blacklisting at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/syscall-auditing-at-scale-e6a3ca8ac1b8"&gt;Syscall Auditing at Scale at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/160481899076/open-sourcing-athenz-fine-grained-role-based"&gt;Athenz: Fine-Grained, Role-Based Access Control at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/05/introducing-webauthn-support-for-secure-dropbox-sign-in/"&gt;WebAuthn Support for Secure Sign In at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/moving-fast-and-securing-things-540e6c5ae58a"&gt;Security Development Lifecycle at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kinvolk.io/blog/2018/04/towards-unprivileged-container-builds/"&gt;Unprivileged Container Builds at Kinvolk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/netflix-sirt-releases-diffy-a-differencing-engine-for-digital-forensics-in-the-cloud-37b71abd2698"&gt;Diffy: Differencing Engine for Digital Forensics in the Cloud at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/netflix-cloud-security-detecting-credential-compromise-in-aws-9493d6fd373a"&gt;Detecting Credential Compromise in AWS at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2018/09/18/scalable-user-privacy/"&gt;Scalable User Privacy at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.indeedblog.com/blog/2018/09/application-scanning/"&gt;AVA: Audit Web Applications at Indeed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/11/ttl-as-a-service.html"&gt;TTL as a Service: Automatic Revocation of Stale Privileges at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/engineering-dive-into-slack-enterprise-key-management-1fce471b178c"&gt;Enterprise Key Management at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitch.tv/en/2019/03/15/how-twitch-addresses-scalability-and-authentication/"&gt;Scalability and Authentication at Twitch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/edge-authentication-and-token-agnostic-identity-propagation-514e47e0b602"&gt;Edge Authentication and Token-Agnostic Identity Propagation at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.palantir.com/hardening-palantirs-kubernetes-infrastructure-with-cilium-1c40d4c7ef0"&gt;Hardening Kubernetes Infrastructure with Cilium at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/improving-web-vulnerability-management-through-automation-2631570d8415"&gt;Improving Web Vulnerability Management through Automation at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dropbox.tech/application/dropbox-passwords-clock-skew-payload-sync-merge"&gt;Clock Skew when Syncing Password Payloads at Drobbox&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/pdf/1704.00411.pdf"&gt;Distributed Messaging, Queuing, and Event Streaming&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2017/05/introducing-cape/"&gt;Cape: Event Stream Processing Framework at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2019/brooklin-open-source"&gt;Brooklin: Distributed Service for Near Real-Time Data Streaming at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/04/samza-aeon--latency-insights-for-asynchronous-one-way-flows"&gt;Samza: Stream Processing System for Latency Insighs at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/161855616651/open-sourcing-bullet-yahoos-forward-looking"&gt;Bullet: Forward-Looking Query Engine for Streaming Data at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2018/05/29/the-eventhorizon-saga/"&gt;EventHorizon: Tool for Watching Events Streaming at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.quora.com/Qmessage-Handling-Billions-of-Tasks-Per-Day"&gt;Qmessage: Distributed, Asynchronous Task Queue at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/cherami/"&gt;Cherami: Message Queue System for Transporting Async Tasks at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/dynein-building-a-distributed-delayed-job-queueing-system-93ab10f05f99"&gt;Dynein: Distributed Delayed Job Queueing System at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/timestone-netflixs-high-throughput-low-latency-priority-queueing-system-with-built-in-support-1abf249ba95f"&gt;Timestone: Queueing System for Non-Parallelizable Workloads at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.riotgames.com/news/riot-messaging-service"&gt;Messaging Service at Riot Games&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dropbox.tech/infrastructure/infrastructure-messaging-system-model-async-platform-evolution"&gt;Messaging System Model at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.zillow.com/engineering/debugging-production-event-logging/"&gt;Debugging Production with Event Logging at Zillow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/building-a-cross-platform-in-app-messaging-orchestration-service-86ba614f92d8"&gt;Cross-platform In-app Messaging Orchestration Service at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/re-architecting-the-video-gatekeeper-f7b0ac2f6b00"&gt;Video Gatekeeper at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/neflix-push-messaging-scale"&gt;Scaling Push Messaging for Millions of Devices at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.indeedblog.com/blog/2017/06/delaying-messages/"&gt;Delaying Asynchronous Message Processing with RabbitMQ at Indeed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/135321837876/benchmarking-streaming-computation-engines-at"&gt;Benchmarking Streaming Computation Engines at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://deliveroo.engineering/2019/02/05/improving-stream-data-quality-with-protobuf-schema-validation.html"&gt;Improving Stream Data Quality With Protobuf Schema Validation at Deliveroo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.engineering/scaling-email-infrastructure-for-medium-digest-254223c883b8"&gt;Scaling Email Infrastructure at Medium&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/real-time-messaging/"&gt;Real-time Messaging at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/nikeengineering/moving-faster-with-aws-by-creating-an-event-stream-database-dedec8ca3eeb"&gt;Event Stream Database at Nike&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/udemy-engineering/designing-the-new-event-tracking-system-at-udemy-a45e502216fd"&gt;Event Tracking System at Udemy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://martinfowler.com/articles/201701-event-driven.html"&gt;Event-Driven Messaging&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/swlh/creating-coding-excellence-with-domain-driven-design-88f73d2232c3"&gt;Domain-Driven Design at Alibaba&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/weebly-engineering/how-to-organize-your-monolith-before-breaking-it-into-services-69cbdb9248b0"&gt;Domain-Driven Design at Weebly&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.moonpig.com/development/modelling-for-domain-driven-design"&gt;Domain-Driven Design at Moonpig&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/netflix-scale-event-sourcing"&gt;Scaling Event Sourcing for Netflix Downloads&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/@eulerfx/scaling-event-sourcing-at-jet-9c873cac33b8"&gt;Scaling Event-Sourcing at Jet.com&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/event-sourcing-in-action-with-ebays-continuous-delivery-team/"&gt;Event Sourcing (2 parts) at eBay&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/inside-freenow/event-sourcing-an-evolutionary-perspective-31e7387aa6f1"&gt;Event Sourcing at FREE NOW&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/engineering-brainly/scalable-content-feed-using-event-sourcing-and-cqrs-patterns-e09df98bf977"&gt;Scalable content feed using Event Sourcing and CQRS patterns at Brainly&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aws.amazon.com/pub-sub-messaging/"&gt;Pub-Sub Messaging&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/150078336821/open-sourcing-pulsar-pub-sub-messaging-at-scale"&gt;Pulsar: Pub-Sub Messaging at Scale at Yahoo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://code.facebook.com/posts/188966771280871/wormhole-pub-sub-system-moving-data-through-space-and-time/"&gt;Wormhole: Pub-Sub System at Facebook&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/memq-an-efficient-scalable-cloud-native-pubsub-system-4402695dd4e7"&gt;MemQ: Cloud Native Pub-Sub System at Pinterest&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/how-netflix-microservices-tackle-dataset-pub-sub-4a068adcc9a"&gt;Pub-Sub in Microservices at Netflix&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://martin.kleppmann.com/papers/kafka-debull15.pdf"&gt;Kafka - Message Broker&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://engineering.linkedin.com/kafka/running-kafka-scale"&gt;Kafka at LinkedIn&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/how-pinterest-runs-kafka-at-scale-ff9c6f735be"&gt;Kafka at Pinterest&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://tech.trello.com/why-we-chose-kafka/"&gt;Kafka at Trello&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.salesforce.com/how-apache-kafka-inspired-our-platform-events-architecture-2f351fe4cf63"&gt;Kafka at Salesforce&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://open.nytimes.com/publishing-with-apache-kafka-at-the-new-york-times-7f0e3b7d2077"&gt;Kafka at The New York Times&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2016/07/billions-of-messages-a-day-yelps-real-time-data-pipeline.html"&gt;Kafka at Yelp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/criteo-labs/upgrading-kafka-on-a-large-infra-3ee99f56e970"&gt;Kafka at Criteo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://shopifyengineering.myshopify.com/blogs/engineering/running-apache-kafka-on-kubernetes-at-shopify"&gt;Kafka on Kubernetes at Shopify&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2022/03/kafka-on-paasta-part-two.html"&gt;Kafka on PaaSTA: Running Kafka on Kubernetes at Yelp (2 parts)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2019/01/migrating-kafkas-zookeeper-with-no-downtime.html"&gt;Migrating Kafka's Zookeeper with No Downtime at Yelp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://eng.uber.com/reliable-reprocessing/"&gt;Reprocessing and Dead Letter Queues with Kafka at Uber&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://eng.uber.com/chaperone/"&gt;Chaperone: Audit Kafka End-to-End at Uber&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2019/01/finding-kafkas-throughput-limit-in-dropbox-infrastructure/"&gt;Finding Kafka throughput limit in infrastructure at Dropbox&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/cost-orchestration-at-walmart-f34918af67c4"&gt;Cost Orchestration at Walmart&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/hulu-tech-blog/how-hulu-uses-influxdb-and-kafka-to-scale-to-over-1-million-metrics-a-second-1721476aaff5"&gt;InfluxDB and Kafka to Scale to Over 1 Million Metrics a Second at Hulu&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/paypal-tech/scaling-kafka-to-support-paypals-data-growth-a0b4da420fab"&gt;Scaling Kafka to Support Data Growth at PayPal&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Data_deduplication"&gt;Stream Data Deduplication&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.confluent.io/blog/exactly-once-semantics-are-possible-heres-how-apache-kafka-does-it/"&gt;Exactly-once Semantics with Kafka&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="http://eng.tapjoy.com/blog-list/real-time-deduping-at-scale"&gt;Real-time Deduping at Tapjoy&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://segment.com/blog/exactly-once-delivery/"&gt;Deduplication at Segment&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/@andrewsumin/efficient-storage-how-we-went-down-from-50-pb-to-32-pb-99f9c61bf6b4"&gt;Deduplication at Mail.Ru&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/mixpaneleng/petabyte-scale-data-deduplication-mixpanel-engineering-e808c70c99f8"&gt;Petabyte Scale Data Deduplication at Mixpanel&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codinghorror.com/the-problem-with-logging/"&gt;Distributed Logging&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/distributed-systems/log-what-every-software-engineer-should-know-about-real-time-datas-unifying"&gt;Logging at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/scalable-and-reliable-data-ingestion-at-pinterest-b921c2ee8754"&gt;Scalable and Reliable Log Ingestion at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2015/building-distributedlog-twitter-s-high-performance-replicated-log-servic.html"&gt;High-performance Replicated Log Service at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://databricks.com/blog/2017/12/14/the-architecture-of-the-next-cern-accelerator-logging-service.html"&gt;Logging Service with Spark at CERN Accelerator&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.quora.com/Logging-and-Aggregation-at-Quora"&gt;Logging and Aggregation at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://badoo.com/techblog/blog/2016/06/06/collection-and-analysis-of-daemon-logs-at-badoo/"&gt;Collection and Analysis of Daemon Logs at Badoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/palantir/using-static-code-analysis-to-improve-log-parsing-18f0d1843965"&gt;Log Parsing with Static Code Analysis at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/low-latency-and-high-throughput-cal-ingress/"&gt;Centralized Application Logging at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/hyper-scale-vpc-flow-logs-enrichment-to-provide-network-insight-e5f1db02910d"&gt;Enrich VPC Flow Logs at Hyper Scale to provide Network Insight at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/109908973316/bookkeeper-yahoos-distributed-log-storage-is"&gt;BookKeeper: Distributed Log Storage at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.facebook.com/posts/357056558062811/logdevice-a-distributed-data-store-for-logs/"&gt;LogDevice: Distributed Data Store for Logs at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/03/introducing-logfeeder.html"&gt;LogFeeder: Log Collection System at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/dblog-a-generic-change-data-capture-framework-69351fb9099b"&gt;DBLog: Generic Change-Data-Capture Framework at Netflix&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://nwds.cs.washington.edu/files/nwds/pdf/Distributed-WR.pdf"&gt;Distributed Searching&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://instagram-engineering.com/search-architecture-eeb34a936d3a"&gt;Search Architecture at Instagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.cs.otago.ac.nz/homepages/andrew/papers/2017-8.pdf"&gt;Search Architecture at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/box-tech-blog/scaling-box-search-using-lumos-22d9e0cb4175"&gt;Search Architecture at Box&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/coupang-tech/the-evolution-of-search-discovery-indexing-platform-fa43e41305f9"&gt;Search Discovery Indexing Platform at Coupang&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/building-a-universal-search-system-for-pinterest-e4cb03a898d4"&gt;Universal Search System at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/making-e-commerce-search-faster/"&gt;Improving Search Engine Efficiency by over 25% at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/palantir/indexing-and-querying-telemetry-logs-with-lucene-234c5ce3e5f3"&gt;Indexing and Querying Telemetry Logs with Lucene at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tripadvisor.com/engineering/query-understanding-at-tripadvisor/"&gt;Query Understanding at TripAdvisor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/03/search-federation-architecture-at-linkedin"&gt;Search Federation Architecture at LinkedIn (2018)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/search-at-slack-431f8c80619e"&gt;Search at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://careersatdoordash.com/blog/introducing-doordashs-in-house-search-engine/"&gt;Search Engine at DoorDash&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2022/stability-and-scalability-for-search"&gt;Stability and Scalability for Search at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/a/2014/building-a-complete-tweet-index.html"&gt;Search Service at Twitter (2014)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/traveloka-engineering/high-quality-autocomplete-search-part-2-d5b15bb0dadf"&gt;Autocomplete Search (2 parts) at Traveloka&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://product.canva.com/building-a-data-driven-autocorrection-system/"&gt;Data-Driven Autocorrection System at Canva&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.flipkart.tech/adapting-search-to-indian-phonetics-cdbe65259686"&gt;Adapting Search to Indian Phonetics at Flipkart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/09/architecture-of-nautilus-the-new-dropbox-search-engine/"&gt;Nautilus: Search Engine at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/search/did-you-mean-galene"&gt;Galene: Search Architecture of LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/manas-a-high-performing-customized-search-system-cf189f6ca40f"&gt;Manas: High Performing Customized Search System at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.flipkart.tech/sherlock-near-real-time-search-indexing-95519783859d"&gt;Sherlock: Near Real Time Search Indexing at Flipkart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/nebula-as-a-storage-platform-to-build-airbnbs-search-backends-ecc577b05f06"&gt;Nebula: Storage Platform to Build Search Backends at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://logz.io/blog/15-tech-companies-chose-elk-stack/"&gt;ELK (Elasticsearch, Logstash, Kibana) Stack&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://eng.uber.com/elk/"&gt;Predictions in Real Time with ELK at Uber&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://webuild.envato.com/blog/building-a-scalable-elk-stack/"&gt;Building a scalable ELK stack at Envato&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://robinhood.engineering/taming-elk-4e1349f077c3"&gt;ELK at Robinhood&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/uber-elasticsearch-clusters?utm_source=presentations_about_Case_Study&amp;amp;utm_medium=link&amp;amp;utm_campaign=Case_Study"&gt;Scaling Elasticsearch Clusters at Uber&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/elasticsearch-performance-tuning-practice-at-ebay/"&gt;Elasticsearch Performance Tuning Practice at eBay&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/tinder-engineering/how-we-improved-our-performance-using-elasticsearch-plugins-part-2-b051da2ee85b"&gt;Improve Performance using Elasticsearch Plugins (2 parts) at Tinder&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://kickstarter.engineering/elasticsearch-at-kickstarter-db3c487887fc"&gt;Elasticsearch at Kickstarter&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://tech.trivago.com/2016/01/19/logstash_protobuf_codec/"&gt;Log Parsing with Logstash and Google Protocol Buffers at Trivago&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/06/fast-order-search.html"&gt;Fast Order Search using Data Pipeline and Elasticsearch at Yelp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2017/06/moving-yelps-core-business-search-to-elasticsearch.html"&gt;Moving Core Business Search to Elasticsearch at Yelp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="http://engineering.vinted.com/2017/06/05/sharding-out-elasticsearch/"&gt;Sharding out Elasticsearch at Vinted&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="http://engineering.wattpad.com/post/146216619727/self-ranking-search-with-elasticsearch-at-wattpad"&gt;Self-Ranking Search with Elasticsearch at Wattpad&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://github.blog/2019-03-05-vulcanizer-a-library-for-operating-elasticsearch/"&gt;Vulcanizer: a library for operating Elasticsearch at Github&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://highscalability.com/blog/2011/11/1/finding-the-right-data-solution-for-your-application-in-the.html"&gt;Distributed Storage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@denisanikin/what-an-in-memory-database-is-and-how-it-persists-data-efficiently-f43868cff4c1"&gt;In-memory Storage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="http://highscalability.com/blog/2012/8/14/memsql-architecture-the-fast-mvcc-inmem-lockfree-codegen-and.html"&gt;MemSQL Architecture - The Fast (MVCC, InMem, LockFree, CodeGen) And Familiar (SQL)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.quora.com/Optimizing-Memcached-Efficiency"&gt;Optimizing Memcached Efficiency at Quora&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://blogs.cisco.com/datacenter/memsql"&gt;Real-Time Data Warehouse with MemSQL on Cisco UCS&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="http://eng.tapjoy.com/blog-list/moving-to-memsql"&gt;Moving to MemSQL at Tapjoy&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://conferences.oreilly.com/strata/strata-ca/public/schedule/detail/68131"&gt;MemSQL and Kinesis for Real-time Insights at Disney&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.pandora.com/using-memsql-at-pandora-79a86cb09b57"&gt;MemSQL to Query Hundreds of Billions of Rows in a Dashboard at Pandora&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.datacenterknowledge.com/archives/2013/10/04/object-storage-the-future-of-scale-out"&gt;Object Storage&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://eng.uber.com/scaling-hdfs/"&gt;Scaling HDFS at Uber&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://databricks.com/blog/2017/05/31/top-5-reasons-for-choosing-s3-over-hdfs.html"&gt;Reasons for Choosing S3 over HDFS at Databricks&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.quantcast.com/blog/quantcast-file-system-on-amazon-s3/"&gt;File System on Amazon S3 at Quantcast&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://tech.trivago.com/2018/09/03/efficient-image-recovery-at-scale-using-amazon-s3-versioning/"&gt;Image Recovery at Scale Using S3 Versioning at Trivago&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/116391291701/yahoo-cloud-object-store-object-storage-at"&gt;Cloud Object Store at Yahoo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17americas/program/presentation/shenoy"&gt;Ambry: Distributed Immutable Object Store at LinkedIn&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/02/dynamometer--scale-testing-hdfs-on-minimal-hardware-with-maximum"&gt;Dynamometer: Scale Testing HDFS on Minimal Hardware with Maximum Fidelity at LinkedIn&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/hammerspace-persistent-concurrent-off-heap-storage-3db39bb04472"&gt;Hammerspace: Persistent, Concurrent, Off-heap Storage at Airbnb&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/mezzfs-mounting-object-storage-in-netflixs-media-processing-platform-cda01c446ba"&gt;MezzFS: Mounting Object Storage in Media Processing Platform at Netflix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2016/05/inside-the-magic-pocket/"&gt;Magic Pocket: In-house Multi-exabyte Storage System at Dropbox&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.mysql.com/products/cluster/scalability.html"&gt;Relational Databases&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.uber.com/en-SG/blog/mysql-at-uber/"&gt;MySQL at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/learn-to-stop-using-shiny-new-things-and-love-mysql-3e1613c2ce14"&gt;MySQL at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitch.tv/en/2016/10/11/how-twitch-uses-postgresql-c34aa9e56f58"&gt;PostgreSQL at Twitch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/tracking-the-money-scaling-financial-reporting-at-airbnb-6d742b80f040"&gt;Scaling MySQL-based Financial Reporting System at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.wix.engineering/post/scaling-to-100m-mysql-is-a-better-nosql"&gt;Scaling MySQL at Wix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.fb.com/2023/05/16/data-infrastructure/mysql-raft-meta/"&gt;Building and Deploying MySQL Raft at Meta&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/unlocking-horizontal-scalability-in-our-web-serving-tier-d907449cdbcf"&gt;MaxScale (MySQL) Database Proxy at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.uber.com/en-NL/blog/postgres-to-mysql-migration/"&gt;Switching from Postgres to MySQL at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.instagram.com/handling-growth-with-postgres-5-tips-from-instagram-d5d7e7ffdfcb"&gt;Handling Growth with Postgres at Instagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://tech.transferwise.com/scaling-our-analytics-database/"&gt;Scaling the Analytics Database (Postgres) at TransferWise&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/adyen/updating-a-50-terabyte-postgresql-database-f64384b799e7"&gt;Updating a 50 Terabyte PostgreSQL Database at Adyen&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/paypal-engineering/scaling-database-access-for-100s-of-billions-of-queries-per-day-paypal-introducing-hera-e192adacda54"&gt;Scaling Database Access for 100s of Billions of Queries per Day at PayPal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2020/11/minimizing-read-write-mysql-downtime.html"&gt;Minimizing Read-Write MySQL Downtime at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.fb.com/2021/07/22/data-infrastructure/mysql/"&gt;Migrating MySQL from 5.6 to 8.0 at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://quoraengineering.quora.com/Migration-from-HBase-to-MyRocks-at-Quora"&gt;Migration from HBase to MyRocks at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/relational-databases/replication/types-of-replication"&gt;Replication&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/booking-com-infrastructure/evaluating-mysql-parallel-replication-part-4-annex-under-the-hood-eb456cf8b2fb"&gt;MySQL Parallel Replication (4 parts) at Booking.com&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://githubengineering.com/mitigating-replication-lag-and-reducing-read-load-with-freno/"&gt;Mitigating MySQL Replication Lag and Reducing Read Load at Github&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://shopify.engineering/read-consistency-database-replicas"&gt;Read Consistency with Database Replicas at Shopify&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/04/black-box-auditing.html"&gt;Black-Box Auditing: Verifying End-to-End Replication Integrity between MySQL and Redshift at Yelp&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/how-we-partitioned-airbnb-s-main-database-in-two-weeks-55f7e006ff21"&gt;Partitioning Main MySQL Database at Airbnb&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://eng.uber.com/herb-datacenter-replication/"&gt;Herb: Multi-DC Replication Engine for Schemaless Datastore at Uber&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://quabase.sei.cmu.edu/mediawiki/index.php/Shard_data_set_across_multiple_servers_(Range-based)"&gt;Sharding&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/sharding-pinterest-how-we-scaled-our-mysql-fleet-3f341e96ca6f"&gt;Sharding MySQL at Pinterest&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.twilio.com/engineering/2014/06/26/how-we-replaced-our-data-pipeline-with-zero-downtime"&gt;Sharding MySQL at Twilio&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/square-corner-blog/sharding-cash-10280fa3ef3b"&gt;Sharding MySQL at Square&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.quora.com/q/quoraengineering/MySQL-sharding-at-Quora"&gt;Sharding MySQL at Quora&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://eng.uber.com/schemaless-rewrite/"&gt;Sharding Layer of Schemaless Datastore at Uber&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://instagram-engineering.com/sharding-ids-at-instagram-1cf5a71e5a5c"&gt;Sharding &amp;amp; IDs at Instagram&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.notion.so/blog/sharding-postgres-at-notion"&gt;Sharding Postgres at Notion&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://blog.box.com/blog/solr-improving-performance-batch-indexing/"&gt;Solr: Improving Performance for Batch Indexing at Box&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/tinder-engineering/geosharded-recommendations-part-3-consistency-2d2cb2f0594b"&gt;Geosharded Recommendations (3 parts) at Tinder&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.fb.com/production-engineering/scaling-services-with-shard-manager/"&gt;Scaling Services with Shard Manager at Facebook&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://research.fb.com/wp-content/uploads/2019/03/Presto-SQL-on-Everything.pdf?"&gt;Presto the Distributed SQL Query Engine&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/presto-at-pinterest-a8bda7515e52"&gt;Presto at Pinterest&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://eng.lyft.com/presto-infrastructure-at-lyft-b10adb9db01"&gt;Presto Infrastructure at Lyft&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.grab.com/scaling-like-a-boss-with-presto"&gt;Presto at Grab&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://eng.uber.com/presto/"&gt;Engineering Data Analytics with Presto and Apache Parquet at Uber&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://slack.engineering/data-wrangling-at-slack-f2e0ff633b69"&gt;Data Wrangling at Slack&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/using-presto-in-our-big-data-platform-on-aws-938035909fd4"&gt;Presto in Big Data Platform on AWS at Netflix&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.eventbrite.com/engineering/big-data-workloads-presto-auto-scaling/"&gt;Presto Auto Scaling at Eventbrite&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.uber.com/en-MY/blog/speed-up-presto-with-alluxio-local-cache/"&gt;Speed Up Presto with Alluxio Local Cache at Uber&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.thoughtworks.com/insights/blog/nosql-databases-overview"&gt;NoSQL Databases&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="http://www.cs.ucsb.edu/~agrawal/fall2009/dynamo.pdf"&gt;Key-Value Databases&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/nikeengineering/becoming-a-nimble-giant-how-dynamo-db-serves-nike-at-scale-4cc375dbb18e"&gt;DynamoDB at Nike&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://segment.com/blog/the-million-dollar-eng-problem/"&gt;DynamoDB at Segment&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://blog.mapbox.com/scaling-mapbox-infrastructure-with-dynamodb-streams-d53eabc5e972"&gt;DynamoDB at Mapbox&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/a/2014/manhattan-our-real-time-multi-tenant-distributed-database-for-twitter-scale.html"&gt;Manhattan: Distributed Key-Value Database at Twitter&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/120730204806/sherpa-scales-new-heights"&gt;Sherpa: Distributed NoSQL Key-Value Store at Yahoo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/178262468576/introducing-halodb-a-fast-embedded-key-value"&gt;HaloDB: Embedded Key-Value Storage Engine at Yahoo&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="http://engineering.indeedblog.com/blog/2018/02/indeed-mph/"&gt;MPH: Fast and Compact Immutable Key-Value Stores at Indeed&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2017/02/building-venice-with-apache-helix"&gt;Venice: Distributed Key-Value Database at Linkedin&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://aws.amazon.com/nosql/columnar/"&gt;Columnar Databases&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="http://www.cs.cornell.edu/projects/ladis2009/papers/lakshman-ladis2009.pdf"&gt;Cassandra&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://www.slideshare.net/DataStax/cassandra-at-instagram-2016"&gt;Cassandra at Instagram&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/building-object-store-storing-images-in-cassandra-walmart-scale-a6b9c02af593"&gt;Storing Images in Cassandra at Walmart&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://blog.discordapp.com/how-discord-stores-billions-of-messages-7fa6ec7ee4c7"&gt;Storing Messages with Cassandra at Discord&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/avoid-pitfalls-in-scaling-your-cassandra-cluster-lessons-and-remedies-a71ca01f8c04"&gt;Scaling Cassandra Cluster at Walmart&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2016/08/how-we-scaled-our-ad-analytics-with-cassandra.html"&gt;Scaling Ad Analytics with Cassandra at Yelp&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://medium.com/dream11-tech-blog/leaderboard-dream11-4efc6f93c23e"&gt;Scaling to 100+ Million Reads/Writes using Spark and Cassandra at Dream11&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://www.zomato.com/blog/how-we-moved-our-food-feed-from-redis-to-cassandra"&gt;Moving Food Feed from Redis to Cassandra at Zomato&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/benchmarking-cassandra-scalability-on-aws-over-a-million-writes-per-second-39f45f066c9e"&gt;Benchmarking Cassandra Scalability on AWS at Netflix&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://quickbooks-engineering.intuit.com/service-decomposition-at-scale-70405ac2f637"&gt;Service Decomposition at Scale with Cassandra at Intuit QuickBooks&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/keeping-counts-in-sync"&gt;Cassandra for Keeping Counts In Sync at SoundCloud&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://medium.com/glassdoor-engineering/cassandra-driver-configuration-for-improved-performance-and-load-balancing-1b0106ce12bb"&gt;Cassandra Driver Configuration for Improved Performance and Load Balancing at Glassdoor&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://labs.spotify.com/2018/09/04/introducing-cstar-the-spotify-cassandra-orchestration-tool-now-open-source/"&gt;cstar: Cassandra Orchestration Tool at Spotify&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://hbase.apache.org/"&gt;HBase&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://engineering.salesforce.com/investing-in-big-data-apache-hbase-b9d98661a66b"&gt;HBase at Salesforce&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://www.facebook.com/notes/facebook-engineering/the-underlying-technology-of-messages/454991608919/"&gt;HBase in Facebook Messages&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://blog.imgur.com/2015/09/15/tech-tuesday-imgur-notifications-from-mysql-to-hbase/"&gt;HBase in Imgur Notification&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/improving-hbase-backup-efficiency-at-pinterest-86159da4b954"&gt;Improving HBase Backup Efficiency at Pinterest&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://www.slideshare.net/HBaseCon/hbase-practice-at-xiaomi"&gt;HBase at Xiaomi&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.allthingsdistributed.com/2018/11/amazon-redshift-performance-optimization.html"&gt;Redshift&lt;/a&gt; 
      &lt;ul&gt; 
       &lt;li&gt;&lt;a href="https://engineering.giphy.com/scaling-redshift-without-scaling-costs/"&gt;Redshift at GIPHY&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://www.hudl.com/bits/the-low-hanging-fruit-of-redshift-performance"&gt;Redshift at Hudl&lt;/a&gt;&lt;/li&gt; 
       &lt;li&gt;&lt;a href="https://drivy.engineering/redshift_tips_ticks_part_1/"&gt;Redshift at Drivy&lt;/a&gt;&lt;/li&gt; 
      &lt;/ul&gt; &lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://msdn.microsoft.com/en-us/magazine/hh547103.aspx"&gt;Document Databases&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://www.mongodb.com/blog/post/ebay-building-mission-critical-multi-data-center-applications-with-mongodb"&gt;eBay: Building Mission-Critical Multi-Data Center Applications with MongoDB&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.mongodb.com/blog/post/mongodb-at-baidu-powering-100-apps-across-600-nodes-at-pb-scale"&gt;MongoDB at Baidu: Multi-Tenant Cluster Storing 200+ Billion Documents across 160 Shards&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/build-addepar/migrating-mountains-of-mongo-data-63e530539952"&gt;Migrating Mongo Data at Addepar&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.baqend.com/parse-is-gone-a-few-secrets-about-their-infrastructure-91b3ab2fcf71"&gt;The AWS and MongoDB Infrastructure of Parse (acquired by Facebook)&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/build-addepar/migrating-mountains-of-mongo-data-63e530539952"&gt;Migrating Mountains of Mongo Data at Addepar&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2017/12/couchbase-ecosystem-at-linkedin"&gt;Couchbase Ecosystem at LinkedIn&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/zendesk-engineering/resurrecting-amazon-simpledb-9404034ec506"&gt;SimpleDB at Zendesk&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://engineering.linkedin.com/espresso/introducing-espresso-linkedins-hot-new-distributed-document-store"&gt;Espresso: Distributed Document Store at LinkedIn&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.eecs.harvard.edu/margo/papers/systor13-bench/"&gt;Graph Databases&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/a/2010/introducing-flockdb.html"&gt;FlockDB: Distributed Graph Database at Twitter&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://www.cs.cmu.edu/~pavlo/courses/fall2013/static/papers/11730-atc13-bronson.pdf"&gt;TAO: Distributed Data Store for the Social Graph at Facebook&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/akutan-a-distributed-knowledge-graph-store/"&gt;Akutan: Distributed Knowledge Graph Store at eBay&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.influxdata.com/time-series-database/"&gt;Time Series Databases&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://code.facebook.com/posts/952820474848503/beringei-a-high-performance-time-series-storage-engine/"&gt;Beringei: High-performance Time Series Storage Engine at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/metricsdb.html"&gt;MetricsDB: TimeSeries Database for storing metrics at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/introducing-atlas-netflixs-primary-telemetry-platform-bd31f4d8ed9a"&gt;Atlas: In-memory Dimensional Time Series Database at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2015/11/17/monitoring-at-spotify-introducing-heroic/"&gt;Heroic: Time Series Database at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/roshi-a-crdt-system-for-timestamped-events"&gt;Roshi: Distributed Storage System for Time-Series Event at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/goku-building-a-scalable-and-high-performant-time-series-database-system-a8ff5758a181"&gt;Goku: Time Series Database at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/scaling-time-series-data-storage-part-ii-d67939655586"&gt;Scaling Time Series Data Storage (2 parts) at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/introducing-netflix-timeseries-data-abstraction-layer-31552f6326f8"&gt;Time Series Data Abstraction Layer at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://druid.apache.org/"&gt;Druid - Real-time Analytics Database&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/druid-airbnb-data-platform-601c312f2a4c"&gt;Druid at Airbnb&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/event-stream-analytics-at-walmart-with-druid-dcf1a37ceda7"&gt;Druid at Walmart&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/monitoring-at-ebay-with-druid/"&gt;Druid at eBay&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://netflixtechblog.com/how-netflix-uses-druid-for-real-time-insights-to-ensure-a-high-quality-experience-19e1e8568d06"&gt;Druid at Netflix&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterexplained.com/articles/intro-to-distributed-version-control-illustrated/"&gt;Distributed Repositories, Dependencies, and Configurations Management&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://githubengineering.com/introducing-dgit/"&gt;DGit: Distributed Git at Github&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@palantir/stemma-distributed-git-server-70afbca0fc29"&gt;Stemma: Distributed Git Server at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.flickr.net/2016/03/24/configuration-management-for-distributed-systems-using-github-and-cfg4j/"&gt;Configuration Management for Distributed Systems at Flickr&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.msdn.microsoft.com/bharry/2017/05/24/the-largest-git-repo-on-the-planet/"&gt;Git Repository at Microsoft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/news/2017/02/GVFS"&gt;Solve Git Problem with Large Repositories at Microsoft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cacm.acm.org/magazines/2016/7/204032-why-google-stores-billions-of-lines-of-code-in-a-single-repository/fulltext"&gt;Single Repository at Google&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/adyen/from-0-100-billion-scaling-infrastructure-and-workflow-at-adyen-7b63b690dfb6"&gt;Scaling Infrastructure and (Git) Workflow at Adyen&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/booking-com-infrastructure/dotfiles-distribution-dedb69c66a75"&gt;Dotfiles Distribution at Booking.com&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/06/yelps-secret-detector.html"&gt;Secret Detector: Preventing Secrets in Source Code at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/09/managing-software-dependency-at-scale"&gt;Managing Software Dependency at Scale at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2020/continuous-integration"&gt;Merging Code in High-velocity Repositories at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2018/dynamic-configuration-at-twitter.html"&gt;Dynamic Configuration at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/mixpaneleng/dynamic-configuration-at-mixpanel-94bfcf97d6b8"&gt;Dynamic Configuration at Mixpanel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://sg.godaddy.com/engineering/2019/03/06/dynamic-configuration-for-nodejs/"&gt;Dynamic Configuration at GoDaddy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.atspotify.com/2023/5/fleet-management-at-spotify-part-3-fleet-wide-refactoring"&gt;Fleet Management (3 parts) at Spotify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.synopsys.com/blogs/software-security/agile-cicd-devops-glossary/"&gt;Scaling Continuous Integration and Continuous Delivery&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://code.fb.com/web/rapid-release-at-massive-scale/"&gt;Continuous Integration Stack at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/towards-true-continuous-integration-distributed-repositories-and-dependencies-2a2e3108c051"&gt;Continuous Integration with Distributed Repositories and Dependencies at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2019/12/continuous-integration-and-deployment-with-bazel/"&gt;Continuous Integration and Deployment with Bazel at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/adopting-bazel-for-web-at-scale-a784b2dbe325"&gt;Adopting Bazel for Web at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.buzzfeed.com/continuous-deployments-at-buzzfeed-d171f76c1ac4"&gt;Continuous Deployments at BuzzFeed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/155765242061/open-sourcing-screwdriver-yahoos-continuous"&gt;Screwdriver: Continuous Delivery Build System for Dynamic Infrastructure at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.betterment.com/resources/ci-cd-shortening-the-feedback-loop/"&gt;CI/CD at Betterment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/engineering-brainly/ci-cd-at-scale-fdfb0f49e031"&gt;CI/CD at Brainly&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.shopify.com/blogs/engineering/scaling-ios-ci-with-anka"&gt;Scaling iOS CI with Anka at Shopify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2019/04/Scaling-Jira-Server-Administration-For-The-Enterprise.html"&gt;Scaling Jira Server at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://flexport.engineering/how-flexport-halved-testing-costs-with-an-auto-scaling-ci-cd-cluster-8304297222f"&gt;Auto-scaling CI/CD cluster at Flexport&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Availability&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://queue.acm.org/detail.cfm?id=2371297"&gt;Resilience Engineering: Learning to Embrace Failure&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2017/11/resilience-engineering-at-linkedin-with-project-waterbear"&gt;Resilience Engineering with Project Waterbear at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.iheart.com/resiliency-against-traffic-oversaturation-77c5ed92a5fb"&gt;Resiliency against Traffic Oversaturation at iHeartRadio&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.gojekengineering.com/resiliency-in-distributed-systems-efd30f74baf4"&gt;Resiliency in Distributed Systems at GO-JEK&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/practical-nosql-resilience-design-pattern-for-the-enterprise/"&gt;Practical NoSQL Resilience Design Pattern for the Enterprise at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.quora.com/Ensuring-Quoras-Resilience-to-Disaster"&gt;Ensuring Resilience to Disaster at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/expedia-website-resiliency?utm_source=presentations_about_Case_Study&amp;amp;utm_medium=link&amp;amp;utm_campaign=Case_Study"&gt;Site Resiliency at Expedia&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/resiliency-and-disaster-recovery-with-kafka/"&gt;Resiliency and Disaster Recovery with Kafka at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/kafka/"&gt;Disaster Recovery for Multi-Region Kafka at Uber&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://cloudpatterns.org/mechanisms/failover_system"&gt;Failover&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon16/program/presentation/heady"&gt;The Evolution of Global Traffic Routing and Failover&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17asia/program/presentation/liu_zehua"&gt;Testing for Disaster Recovery Failover Testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.risingstack.com/designing-microservices-architecture-for-failure/"&gt;Designing a Microservices Architecture for Failure&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.gosquared.com/use-elb-automatic-failover"&gt;ELB for Automatic Failover at GoSquared&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://americanexpress.io/eliminate-the-database-for-higher-availability/"&gt;Eliminate the Database for Higher Availability at American Express&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.vinted.com/2015/09/03/failover-with-redis-sentinel/"&gt;Failover with Redis Sentinel at Vinted&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.freeagent.com/2017/02/06/ha-infrastructure-without-breaking-the-bank/"&gt;High-availability SaaS Infrastructure at FreeAgent&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.blog/2018-06-20-mysql-high-availability-at-github/"&gt;MySQL High Availability at GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.eventbrite.com/engineering/mysql-high-availability-at-eventbrite/"&gt;MySQL High Availability at Eventbrite&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/business-continuity-disaster-recovery-in-the-microservices-world-ef2adca363df"&gt;Business Continuity &amp;amp; Disaster Recovery at Walmart&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.vivekpanyam.com/scaling-a-web-service-load-balancing/"&gt;Load Balancing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.envoyproxy.io/introduction-to-modern-network-load-balancing-and-proxying-a57f6ff80236"&gt;Introduction to Modern Network Load Balancing and Proxying&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.f5.com/company/blog/top-five-scalability-patterns"&gt;Top Five (Load Balancing) Scalability Patterns&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon15europe/program/presentation/shuff"&gt;Load Balancing infrastructure to support more than 1.3 billion users at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.facebook.com/posts/1734309626831603/dhcplb-an-open-source-load-balancer/"&gt;DHCPLB: DHCP Load Balancer at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.facebook.com/posts/1906146702752923/open-sourcing-katran-a-scalable-network-load-balancer/"&gt;Katran: Scalable Network Load Balancer at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/daperture-load-balancer.html"&gt;Deterministic Aperture: A Distributed, Load Balancing Algorithm at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/netflix-shares-cloud-load-balancing-and-failover-tool-eureka-c10647ef95e5"&gt;Load Balancing with Eureka at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/netflix-edge-load-balancing-695308b5548c"&gt;Edge Load Balancing at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/open-sourcing-zuul-2-82ea476cb2b3"&gt;Zuul 2: Cloud Gateway at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2017/05/taking-zero-downtime-load-balancing-even-further.html"&gt;Load Balancing at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://githubengineering.com/introducing-glb/"&gt;Load Balancing at Github&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/vimeo-engineering-blog/improving-load-balancing-with-a-new-consistent-hashing-algorithm-9f1bd75709ed"&gt;Consistent Hashing to Improve Load Balancing at Vimeo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.500px.com/udp-load-balancing-with-keepalived-167382d7ad08"&gt;UDP Load Balancing at 500 pixel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/qalm/"&gt;QALM: QoS Load Management Framework at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17europe/program/presentation/rastogi"&gt;Traffic Steering using Rum DNS at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/10/dropbox-traffic-infrastructure-edge-network/"&gt;Traffic Infrastructure (Edge Network) at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2020/01/intelligent-dns-based-load-balancing-at-dropbox/"&gt;Intelligent DNS based load balancing at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://stripe.com/en-sg/blog/secret-life-of-dns"&gt;Monitor DNS systems at Stripe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/monday-engineering/how-and-why-we-migrated-our-dns-from-cloudflare-to-a-multi-dns-architecture-part-3-584a470f4062"&gt;Multi-DNS Architecture (3 parts) at Monday&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/hulu-tech-blog/building-hulus-dynamic-anycast-dns-infrastructure-985a7a11fd30"&gt;Dynamic Anycast DNS Infrastructure at Hulu&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.keycdn.com/support/rate-limiting/"&gt;Rate Limiting&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.cloudflare.com/counting-things-a-lot-of-different-things/"&gt;Rate Limiting for Scaling to Millions of Domains at Cloudflare&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/111288877956/cloud-bouncer-distributed-rate-limiting-at-yahoo"&gt;Cloud Bouncer: Distributed Rate Limiting at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://stripe.com/blog/rate-limiters"&gt;Scaling API with Rate Limiters at Stripe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://allegro.tech/2017/04/hermes-max-rate.html"&gt;Distributed Rate Limiting at Allegro&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.twilio.com/blog/2017/11/chaos-engineering-ratequeue-ha.html"&gt;Ratequeue: Core Queueing-And-Rate-Limiting System at Twilio&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.grab.com/quotas-service"&gt;Quotas Service at Grab&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/figma-design/an-alternative-approach-to-rate-limiting-f8a06cf7c94c"&gt;Rate Limiting at Figma&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@BotmetricHQ/top-11-hard-won-lessons-learned-about-aws-auto-scaling-5bfe56da755f"&gt;Autoscaling&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/auto-scaling-pinterest-df1d2beb4d64"&gt;Autoscaling Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/square-corner-blog/autoscaling-based-on-request-queuing-c4c0f57f860f"&gt;Autoscaling Based on Request Queuing at Square&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://tech.trivago.com/2017/02/17/your-definite-guide-for-autoscaling-jenkins/"&gt;Autoscaling Jenkins at Trivago&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2017/11/20/autoscaling-pub-sub-consumers/"&gt;Autoscaling Pub-Sub Consumers at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2018/12/18/bigtable-autoscaler-saving-money-and-time-using-managed-storage/"&gt;Autoscaling Bigtable Clusters based on CPU Load at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2019/06/autoscaling-aws-step-functions-activities.html"&gt;Autoscaling AWS Step Functions Activities at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/scryer-netflixs-predictive-auto-scaling-engine-a3f8fc922270"&gt;Scryer: Predictive Auto Scaling Engine at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/palantir/bouncer-simple-aws-auto-scaling-rollovers-c5af601d65d4"&gt;Bouncer: Simple AWS Auto Scaling Rollovers at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2019/02/autoscaling-mesos-clusters-with-clusterman.html"&gt;Clusterman: Autoscaling Mesos Clusters at Yelp&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://static.googleusercontent.com/media/research.google.com/en/us/pubs/archive/36737.pdf"&gt;Availability in Globally Distributed Storage Systems at Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/68823943185/nodejs-high-availability"&gt;NodeJS High Availability at Yahoo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/pulse/introduction-every-day-monday-operations-benjamin-purgason"&gt;Operations (11 parts) at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17americas/program/presentation/barot"&gt;Monitoring Powers High Availability for LinkedIn Feed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.facebook.com/posts/166966743929963/how-production-engineers-support-global-events-on-facebook/"&gt;Supporting Global Events at Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/blablacar-tech/the-expendables-backends-high-availability-at-blablacar-8cea3b95b26b"&gt;High Availability at BlaBlaCar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@NetflixTechBlog/tips-for-high-availability-be0472f2599c"&gt;High Availability at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.twilio.com/engineering/2011/12/12/scaling-high-availablity-infrastructure-in-cloud"&gt;High Availability Cloud Infrastructure at Twilio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2019/01/automating-datacenter-operations-at-dropbox/"&gt;Automating Datacenter Operations at Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://technology.riotgames.com/news/globalizing-player-accounts"&gt;Globalizing Player Accounts at Riot Games&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stability&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://martinfowler.com/bliki/CircuitBreaker.html"&gt;Circuit Breaker&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/circuit-breaking-distributed-systems"&gt;Circuit Breaking in Distributed Systems&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://f5.com/about-us/blog/articles/the-art-of-scaling-containers-circuit-breakers-28919"&gt;Circuit Breaker for Scaling Containers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/lessons-in-resilience-at-SoundCloud"&gt;Lessons in Resilience at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://tech.trivago.com/2016/02/23/protector/"&gt;Protector: Circuit Breaker for Time Series Databases at Trivago&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.heroku.com/improved-production-stability-with-circuit-breakers"&gt;Improved Production Stability with Circuit Breakers at Heroku&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/zendesk-engineering/the-joys-of-circuit-breaking-ee6584acd687"&gt;Circuit Breaker at Zendesk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/traveloka-engineering/circuit-breakers-dont-let-your-dependencies-bring-you-down-5ba1c5cf1eec"&gt;Circuit Breaker at Traveloka&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://shopify.engineering/circuit-breaker-misconfigured"&gt;Circuit Breaker at Shopify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javaworld.com/article/2824163/application-performance/stability-patterns-applied-in-a-restful-architecture.html"&gt;Timeouts&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/fault-tolerance-in-a-high-volume-distributed-system-91ab4faae74a"&gt;Fault Tolerance (Timeouts and Retries, Thread Separation, Semaphores, Circuit Breakers) at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://doordash.engineering/2018/12/21/enforce-timeout-a-doordash-reliability-methodology/"&gt;Enforce Timeout: A Reliability Methodology at DoorDash&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/a-vip-connection-timeout-issue-caused-by-snat-and-tcp-tw-recycle/"&gt;Troubleshooting a Connection Timeout Issue with tcp_tw_recycle Enabled at eBay&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/booking-com-infrastructure/better-crash-safe-replication-for-mysql-a336a69b317f"&gt;Crash-safe Replication for MySQL at Booking.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://skife.org/architecture/fault-tolerance/2009/12/31/bulkheads.html"&gt;Bulkheads: Partition and Tolerate Failure in One Part&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/sql/relational-databases/policy-based-management/place-data-and-log-files-on-separate-drives"&gt;Steady State: Always Put Logs on Separate Disk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.sosp.org/2001/papers/welsh.pdf"&gt;Throttling: Maintain a Steady Pace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2017/11/improving-resiliency-and-stability-of-a-large-scale-api"&gt;Multi-Clustering: Improving Resiliency and Stability of a Large-scale Monolithic API Service at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.riotgames.com/news/determinism-league-legends-fixing-divergences"&gt;Determinism (4 parts) in League of Legends Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Performance&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://stackify.com/application-performance-metrics/"&gt;Performance Optimization on OS, Storage, Database, Network&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://engineering.instagram.com/improving-performance-with-background-data-prefetching-b191acb39898"&gt;Improving Performance with Background Data Prefetching at Instagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2020/fixing-linux-filesystem-performance-regressions"&gt;Fixing Linux filesystem performance regressions at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/how-ebays-shopping-cart-used-compression-techniques-to-solve-network-io-bottlenecks/"&gt;Compression Techniques to Solve Network I/O Bottlenecks at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2017/09/optimizing-web-servers-for-high-throughput-and-low-latency/"&gt;Optimizing Web Servers for High Throughput and Low Latency at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/linux-performance-analysis-in-60-000-milliseconds-accc10403c55"&gt;Linux Performance Analysis in 60.000 Milliseconds at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.mixpanel.com/2018/07/31/live-downsizing-google-cloud-pds-for-fun-and-profit/"&gt;Live Downsizing Google Cloud Persistent Disks (PD-SSD) at Mixpanel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://zapier.com/engineering/celery-python-jemalloc/"&gt;Decreasing RAM Usage by 40% Using jemalloc with Python &amp;amp; Celery at Zapier&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/reducing-slacks-memory-footprint-4480fec7e8eb"&gt;Reducing Memory Footprint at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/continuous-load-testing/"&gt;Continuous Load Testing at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/driving-user-growth-with-performance-improvements-cfc50dafadd7"&gt;Performance Improvements at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f9xI2jR71Ms"&gt;Server Side Rendering at Wix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/02/making-30x-performance-improvements-on-yelps-mysqlstreamer.html"&gt;30x Performance Improvements on MySQLStreamer at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/optimizing-the-netflix-api-5c9ac715cf19"&gt;Optimizing APIs at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/performance-monitoring-with-riemann-and-clojure-eafc07fcd375"&gt;Performance Monitoring with Riemann and Clojure at Walmart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.zynga.com/blogs/engineering/live-games-have-evolving-performance"&gt;Performance Tracking Dashboard for Live Games at Zynga&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/optimization-of-cal-report-hadoop-mapreduce-job/"&gt;Optimizing CAL Report Hadoop MapReduce Jobs at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/performance-tuning-on-quartz-scheduler/"&gt;Performance Tuning on Quartz Scheduler at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.riotgames.com/news/profiling-optimisation"&gt;Profiling C++ (Part 1: Optimization, Part 2: Measurement and Analysis) at Riot Games&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/homeaway-tech-blog/profiling-react-server-side-rendering-to-free-the-node-js-event-loop-7f0fe455a901"&gt;Profiling React Server-Side Rendering at HomeAway&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/dailymotion-engineering/hardware-assisted-video-transcoding-at-dailymotion-66cd2db448ae"&gt;Hardware-Assisted Video Transcoding at Dailymotion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/11/cross-shard-transactions-at-10-million-requests-per-second/"&gt;Cross Shard Transactions at 10 Million RPS at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/api-profiling-at-pinterest-6fa9333b4961"&gt;API Profiling at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2017/07/generating-web-pages-in-parallel-with-pagelets.html"&gt;Pagelets Parallelize Server-side Processing at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/improving-key-expiration-in-redis.html"&gt;Improving key expiration in Redis at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/mindgeek-engineering-blog/ad-delivery-network-performance-optimization-with-flame-graphs-bc550cf59cf7"&gt;Ad Delivery Network Performance Optimization with Flame Graphs at MindGeek&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/predictive-cpu-isolation-of-containers-at-netflix-91f014d856c7"&gt;Predictive CPU isolation of containers at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/improving-hdfs-i-o-utilization-for-efficiency/"&gt;Improving HDFS I/O Utilization for Efficiency at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2020/04/23/cloud-jewels-estimating-kwh-in-the-cloud/"&gt;Cloud Jewels: Estimating kWh in the Cloud at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.indeedblog.com/blog/2019/12/unthrottled-fixing-cpu-limits-in-the-cloud/"&gt;Unthrottled: Fixing CPU Limits in the Cloud (2 parts) at Indeed&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://confluence.atlassian.com/enterprise/garbage-collection-gc-tuning-guide-461504616.html"&gt;Performance Optimization by Tuning Garbage Collection&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/garbage-collection/garbage-collection-optimization-high-throughput-and-low-latency-java-applications"&gt;Garbage Collection in Java Applications at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/adobetech/engineering-high-throughput-low-latency-machine-learning-services-7d45edac0271"&gt;Garbage Collection in High-Throughput, Low-Latency Machine Learning Services at Adobe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/garbage-collection-in-redux-applications"&gt;Garbage Collection in Redux Applications at SoundCloud&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitch.tv/go-memory-ballast-how-i-learnt-to-stop-worrying-and-love-the-heap-26c2462549a2"&gt;Garbage Collection in Go Application at Twitch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.linux.com/blog/can-nodejs-scale-ask-team-alibaba"&gt;Analyzing V8 Garbage Collection Logs at Alibaba&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://instagram-engineering.com/copy-on-write-friendly-python-garbage-collection-ad6ed5233ddf"&gt;Python Garbage Collection for Dropping 50% Memory Growth Per Request at Instagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://githubengineering.com/removing-oobgc/"&gt;Performance Impact of Removing Out of Band Garbage Collector (OOBGC) at Github&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://allegro.tech/2018/05/a-comedy-of-errors-debugging-java-memory-leaks.html"&gt;Debugging Java Memory Leaks at Allegro&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=X4tmr3nhZRg"&gt;Optimizing JVM at Alibaba&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/jvm-tuning-garbage-collection/"&gt;Tuning JVM Memory for Large-scale Services at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/walmartglobaltech/solr-performance-tuning-beb7d0d0f8d9"&gt;Solr Performance Tuning at Walmart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.flipkart.tech/memory-tuning-a-high-throughput-microservice-ed57b3e60997"&gt;Memory Tuning a High Throughput Microservice at Flipkart&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/performance/why-performance-matters/"&gt;Performance Optimization on Image, Video, Page Load&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://code.facebook.com/posts/129055711052260/optimizing-360-photos-at-scale/"&gt;Optimizing 360 Photos at Scale at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2017/05/30/reducing-image-file-size-at-etsy/"&gt;Reducing Image File Size in the Photos Infrastructure at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/improving-gif-performance-on-pinterest-8dad74bf92f1"&gt;Improving GIF Performance at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/optimizing-video-playback-performance-caf55ce310d1"&gt;Optimizing Video Playback Performance at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/optimized-shot-based-encodes-now-streaming-4b9464204830"&gt;Optimizing Video Stream for Low Bandwidth with Dynamic Optimizer at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://youtube-eng.googleblog.com/2018/04/making-high-quality-video-efficient.html"&gt;Adaptive Video Streaming at YouTube&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/dailymotion/reducing-video-loading-time-fa9c997a2294"&gt;Reducing Video Loading Time at Dailymotion&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.zillow.com/engineering/improving-homepage-performance/"&gt;Improving Homepage Performance at Zillow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/expedia-engineering/go-fast-or-go-home-the-process-of-optimizing-for-client-performance-57bb497402e"&gt;The Process of Optimizing for Client Performance at Expedia&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/bbc-design-engineering/bbc-world-service-web-performance-26b08f7abfcc"&gt;Web Performance at BBC&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.akamai.com/2016/02/understanding-brotlis-potential.html"&gt;Performance Optimization by Brotli Compression&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2017/05/boosting-site-speed-using-brotli-compression"&gt;Boosting Site Speed Using Brotli Compression at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/booking-com-development/bookings-journey-with-brotli-978b249d34f3"&gt;Brotli at Booking.com&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.treebo.com/a-tale-of-brotli-compression-bcb071d9780a"&gt;Brotli at Treebo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dropbox.tech/infrastructure/deploying-brotli-for-static-content"&gt;Deploying Brotli for Static Content at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2017/07/progressive-enhancement-with-brotli.html"&gt;Progressive Enhancement with Brotli at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://doordash.engineering/2019/01/02/speeding-up-redis-with-compression/"&gt;Speeding Up Redis with Compression at DoorDash&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.techempower.com/benchmarks/"&gt;Performance Optimization on Languages and Frameworks&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/python-at-netflix-bba45dae649e"&gt;Python at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://instagram-engineering.com/python-at-scale-strict-modules-c0bb9245c834"&gt;Python at scale (3 parts) at Instagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.issuu.com/2018/12/10/our-current-ocaml-best-practices-part-2"&gt;OCaml best practices (2 parts) at Issuu&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://slack.engineering/taking-php-seriously-cf7a60065329"&gt;PHP at Slack&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.trivago.com/2020/03/02/why-we-chose-go/"&gt;Go at Trivago&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2021/11/08/etsys-journey-to-typescript/"&gt;TypeScript at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.etsy.com/sg-en/codeascraft/sealed-classes-opened-my-mind"&gt;Kotlin for taming state at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://doordash.engineering/2022/03/22/how-to-leverage-functional-programming-in-kotlin-to-write-better-cleaner-code/"&gt;Kotlin at DoorDash&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/bumble-tech/bpf-and-go-modern-forms-of-introspection-in-linux-6b9802682223"&gt;BPF and Go at Bumble&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/gitlab-magazine/why-we-use-ruby-on-rails-to-build-gitlab-601dce4a7a38"&gt;Ruby on Rails at GitLab&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/figma-design/rust-in-production-at-figma-e10a0ec31929"&gt;Rust in production at Figma&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.wework.com/choosing-a-language-stack-cac3726928f6"&gt;Choosing a Language Stack at WeWork&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.discord.com/why-discord-is-switching-from-go-to-rust-a190bbca2b1f"&gt;Switching from Go to Rust at Discord&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/agoda-engineering/happy-asp-net-core-performance-optimization-4e21a383d299"&gt;ASP.NET Core Performance Optimization at Agoda&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/data-race-patterns-in-go/"&gt;Data Race Patterns in Go at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/java-21-virtual-threads-dude-wheres-my-lock-3052540e231d"&gt;Java 21 Virtual Threads at Netflix&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Intelligence&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://insights.sei.cmu.edu/sei_blog/2017/05/reference-architectures-for-big-data-systems.html"&gt;Big Data&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/uber-big-data-platform/"&gt;Data Platform at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.unibw.de/code/events-u/jt-2018-workshops/ws3_bigdata_vortrag_widmann.pdf"&gt;Data Platform at BMW&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CSDIThSwA7s"&gt;Data Platform at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.flipkart.tech/overview-of-flipkart-data-platform-20c6d3e9a196"&gt;Data Platform at Flipkart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/coupang-tech/evolving-the-coupang-data-platform-308e305a9c45"&gt;Data Platform at Coupang&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://doordash.engineering/2020/09/25/how-doordash-is-scaling-its-data-platform/"&gt;Data Platform at DoorDash&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.khanacademy.org/posts/khanalytics.htm"&gt;Data Platform at Khan Academy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/data-infrastructure-at-airbnb-8adfb34f169c"&gt;Data Infrastructure at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/big-data-infrastructure-linkedin"&gt;Data Infrastructure at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.gojekengineering.com/data-infrastructure-at-go-jek-cd4dc8cbd929"&gt;Data Infrastructure at GO-JEK&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/scalable-and-reliable-data-ingestion-at-pinterest-b921c2ee8754"&gt;Data Ingestion Infrastructure at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/behind-the-pins-building-analytics-f7b508cdacab"&gt;Data Analytics Architecture at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.atspotify.com/2022/03/why-we-switched-our-data-orchestration-service/"&gt;Data Orchestration Service at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2017/10/23/big-data-processing-at-spotify-the-road-to-scio-part-2/"&gt;Big Data Processing (2 parts) at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cdn.oreillystatic.com/en/assets/1/event/160/Big%20data%20processing%20with%20Hadoop%20and%20Spark%2C%20the%20Uber%20way%20Presentation.pdf"&gt;Big Data Processing at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cdn.oreillystatic.com/en/assets/1/event/269/Lyft_s%20analytics%20pipeline_%20From%20Redshift%20to%20Apache%20Hive%20and%20Presto%20Presentation.pdf"&gt;Analytics Pipeline at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.grammarly.com/blog/building-a-versatile-analytics-pipeline-on-top-of-apache-spark"&gt;Analytics Pipeline at Grammarly&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/teads-engineering/give-meaning-to-100-billion-analytics-events-a-day-d6ba09aa8f44"&gt;Analytics Pipeline at Teads&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/paypal-ml-fraud-prevention-2018"&gt;ML Data Pipelines for Real-Time Fraud Prevention at PayPal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cdn.oreillystatic.com/en/assets/1/event/269/Big%20data%20analytics%20and%20machine%20learning%20techniques%20to%20drive%20and%20grow%20business%20Presentation%201.pdf"&gt;Big Data Analytics and ML Techniques at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cdn.oreillystatic.com/en/assets/1/event/137/Building%20a%20self-serve%20real-time%20reporting%20platform%20at%20LinkedIn%20Presentation%201.pdf"&gt;Self-Serve Reporting Platform on Hadoop at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2019/04/privacy-preserving-analytics-and-reporting-at-linkedin"&gt;Privacy-Preserving Analytics and Reporting at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/how-we-build-a-robust-analytics-platform-using-spark-kafka-and-cassandra-lambda-architecture-70c2d1bc8981"&gt;Analytics Platform for Tracking Item Availability at Walmart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.uber.com/en-SG/blog/real-time-analytics-for-mobile-app-crashes/"&gt;Real-Time Analytics for Mobile App Crashes using Apache Pinot at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.fb.com/data-center-engineering/hardware-analytics-and-lifecycle-optimization-halo-at-facebook/"&gt;HALO: Hardware Analytics and Lifecycle Optimization at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://techblog.king.com/rbea-scalable-real-time-analytics-king/"&gt;RBEA: Real-time Analytics Platform at King&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/aresdb/"&gt;AresDB: GPU-Powered Real-time Analytics Engine at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/athenax/"&gt;AthenaX: Streaming Analytics Platform at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.uber.com/en-SG/blog/jupiter-batch-ingestion-platform/"&gt;Jupiter: Config Driven Adtech Batch Ingestion Platform at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/delta-a-data-synchronization-and-enrichment-platform-e82c36a79aee"&gt;Delta: Data Synchronization and Enrichment Platform at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/keystone-real-time-stream-processing-platform-a3ee651812a"&gt;Keystone: Real-time Stream Processing Platform at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/databook/"&gt;Databook: Turning Big Data into Knowledge with Metadata at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/amundsen-lyfts-data-discovery-metadata-engine-62d27254fbb9"&gt;Amundsen: Data Discovery &amp;amp; Metadata Engine at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/maze/"&gt;Maze: Funnel Visualization Platform at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/metacat-making-big-data-discoverable-and-meaningful-at-netflix-56fb36a53520"&gt;Metacat: Making Big Data Discoverable and Meaningful at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/capturing-data-evolution-in-a-service-oriented-architecture-72f7c643ee6f"&gt;SpinalTap: Change Data Capture System at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/announcing-the-accelerator-processing-1-000-000-000-lines-per-second-on-a-single-computer/"&gt;Accelerator: Fast Data Processing Framework at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/180867271141/a-new-chapter-for-omid"&gt;Omid: Transaction Processing Platform at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/157196488076/open-sourcing-tensorflowonspark-distributed-deep"&gt;TensorFlowOnSpark: Distributed Deep Learning on Big Data Clusters at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/139916828451/caffeonspark-open-sourced-for-distributed-deep"&gt;CaffeOnSpark: Distributed Deep Learning on Big Data Clusters at Yahoo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/adobetech/spark-on-scala-adobe-analytics-reference-architecture-7457f5614b4c"&gt;Spark on Scala: Analytics Reference Architecture at Adobe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.atspotify.com/2020/11/02/spotifys-new-experimentation-platform-part-2/"&gt;Experimentation Platform (2 parts) at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/https-medium-com-jonathan-parks-scaling-erf-23fd17c91166"&gt;Experimentation Platform at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2017/10/zalando-smart-product-platform.html"&gt;Smart Product Platform at Zalando&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.slideshare.net/wyukawa/strata2017-sg"&gt;Log Analysis Platform at LINE&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/myntra-engineering/universal-dashboarding-platform-udp-data-visualisation-platform-at-myntra-5f2522fcf72d"&gt;Data Visualisation Platform at Myntra&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/building-and-scaling-data-lineage-at-netflix-to-improve-data-infrastructure-reliability-and-1a52526a7977"&gt;Building and Scaling Data Lineage at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/building-a-scalable-data-management-system-for-computer-vision-tasks-a6dee8f1c580"&gt;Building a scalable data management system for computer vision tasks at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2019/07/31/an-introduction-to-structured-data-at-etsy/"&gt;Structured Data at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/scaling-a-mature-data-pipeline-managing-overhead-f34835cbc866"&gt;Scaling a Mature Data Pipeline - Managing Overhead at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/on-spark-hive-and-small-files-an-in-depth-look-at-spark-partitioning-strategies-a9a364f908"&gt;Spark Partitioning Strategies at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2021/the-exabyte-club--linkedin-s-journey-of-scaling-the-hadoop-distr"&gt;Scaling the Hadoop Distributed File System at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2021/scaling-linkedin-s-hadoop-yarn-cluster-beyond-10-000-nodes"&gt;Scaling Hadoop YARN cluster beyond 10,000 nodes at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/securely-scaling-big-data-access-controls-at-pinterest-bbc3406a1695"&gt;Scaling Big Data Access Controls at Pinterest&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.csie.ntu.edu.tw/~cjlin/talks/bigdata-bilbao.pdf"&gt;Distributed Machine Learning&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2020/07/ML-platform-overview.html"&gt;Machine Learning Platform at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2021/12/21/redesigning-etsys-machine-learning-platform/"&gt;Machine Learning Platform at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2022/04/zalando-machine-learning-platform.html"&gt;Machine Learning Platform at Zalando&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.uber.com/en-SG/blog/scaling-ai-ml-infrastructure-at-uber/"&gt;Scaling AI/ML Infrastructure at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/the-recommendation-system-at-lyft-67bc9dcc1793"&gt;Recommendation System at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/lyfts-reinforcement-learning-platform-670f77ff46ec"&gt;Reinforcement Learning Platform at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.etsy.com/sg-en/codeascraft/building-a-platform-for-serving-recommendations-at-etsy"&gt;Platform for Serving Recommendations at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.atspotify.com/2022/06/how-we-built-infrastructure-to-run-user-forecasts-at-spotify/"&gt;Infrastructure to Run User Forecasts at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.fb.com/developer-tools/aroma/"&gt;Aroma: Using ML for Code Recommendation at Facebook&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/introducing-flyte-cloud-native-machine-learning-and-data-processing-platform-fb2bb3046a59"&gt;Flyte: Cloud Native Machine Learning and Data Processing Platform at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/lyftlearn-ml-model-training-infrastructure-built-on-kubernetes-aef8218842bb"&gt;LyftLearn: ML Model Training Infrastructure built on Kubernetes at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/horovod/"&gt;Horovod: Open Source Distributed Deep Learning Framework for TensorFlow at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.uber.com/blog/genie-ubers-gen-ai-on-call-copilot/"&gt;Genie: Gen AI On-Call Copilot at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/cota/"&gt;COTA: Improving Customer Care with NLP &amp;amp; Machine Learning at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/manifold/"&gt;Manifold: Model-Agnostic Visual Debugging Tool for Machine Learning at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://githubengineering.com/topics/"&gt;Repo-Topix: Topic Extraction Framework at Github&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/05/concourse--generating-personalized-content-notifications-in-near"&gt;Concourse: Generating Personalized Content Notifications in Near-Real-Time at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/altus-care-apply-chatbot-to-ebay-platform-engineering/"&gt;Altus Care: Applying a Chatbot to Platform Engineering at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/pykrylov-accelerating-machine-learning-research-at-ebay/"&gt;PyKrylov: Accelerating Machine Learning Research at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.box.com/blog/box-graph-how-we-built-spontaneous-social-network/"&gt;Box Graph: Spontaneous Social Network at Box&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hackernoon.com/pricingnet-modelling-the-global-airline-industry-with-neural-networks-833844d20ea6"&gt;PricingNet: Pricing Modelling with Neural Networks at Skyscanner&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/pintext-a-multitask-text-embedding-system-in-pinterest-b80ece364555"&gt;PinText: Multitask Text Embedding System at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/searchsage-learning-search-query-representations-at-pinterest-654f2bb887fc"&gt;SearchSage: Learning Search Query Representations at Pinterest&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dropbox.tech/machine-learning/cannes--how-ml-saves-us--1-7m-a-year-on-document-previews"&gt;Cannes: ML saves $1.7M a year on document previews at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2018/01/building-a-distributed-ml-pipeline-part1.html"&gt;Scaling Gradient Boosted Trees for Click-Through-Rate Prediction at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://machinelearning.apple.com/2017/12/06/learning-with-privacy-at-scale.html"&gt;Learning with Privacy at Scale at Apple&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/mercari-engineering/mercaris-image-classification-experiment-using-deep-learning-9b4e994a18ec"&gt;Deep Learning for Image Classification Experiment at Mercari&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://allegro.tech/2016/12/deep-learning-for-frame-detection.html"&gt;Deep Learning for Frame Detection in Product Images at Allegro&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/hulu-tech-blog/content-based-video-relevance-prediction-b2c448e14752"&gt;Content-based Video Relevance Prediction at Hulu&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2024/03/moderating-inappropriate-video-content-at-yelp.html"&gt;Moderating Inappropriate Video Content at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.tripadvisor.com/improving-tripadvisor-photo-selection-deep-learning/"&gt;Improving Photo Selection With Deep Learning at TripAdvisor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.tripadvisor.com/engineering/personalized-recommendations-for-experiences-using-deep-learning/"&gt;Personalized Recommendations for Experiences Using Deep Learning at TripAdvisor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/bbc-design-engineering/developing-personalised-recommender-systems-at-the-bbc-e26c5e0c4216"&gt;Personalised Recommender Systems at BBC&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://technology.condenast.com/story/handbag-brand-and-color-detection"&gt;Machine Learning (2 parts) at Condé Nast&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://technology.condenast.com/story/natural-language-processing-and-content-analysis-at-conde-nast-part-2-system-architecture"&gt;Natural Language Processing and Content Analysis (2 parts) at Condé Nast&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.iheart.com/mapping-the-world-of-music-using-machine-learning-part-2-aa50b6a0304c"&gt;Mapping the World of Music Using Machine Learning (2 parts) at iHeartRadio&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/using-machine-learning-to-improve-streaming-quality-at-netflix-9651263ef09f"&gt;Machine Learning to Improve Streaming Quality at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.gojekengineering.com/how-we-use-machine-learning-to-match-drivers-riders-b06d617b9e5"&gt;Machine Learning to Match Drivers &amp;amp; Riders at GO-JEK&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://youtube-eng.googleblog.com/2015/10/improving-youtube-video-thumbnails-with_8.html"&gt;Improving Video Thumbnails with Deep Neural Nets at YouTube&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.instacart.com/how-instacart-delivers-on-time-using-quantile-regression-2383e2e03edb"&gt;Quantile Regression for Delivering On Time at Instacart&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2018/02/search-deep-neural-network.html"&gt;Cross-Lingual End-to-End Product Search with Deep Learning at Zalando&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.janestreet.com/real-world-machine-learning-part-1/"&gt;Machine Learning at Jane Street&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.quora.com/A-Machine-Learning-Approach-to-Ranking-Answers-on-Quora"&gt;Machine Learning for Ranking Answers End-to-End at Quora&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.flipboard.com/2017/02/storyclustering"&gt;Clustering Similar Stories Using LDA at Flipboard&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://code.flickr.net/2017/03/07/introducing-similarity-search-at-flickr/"&gt;Similarity Search at Flickr&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.indeedblog.com/blog/2016/04/building-a-large-scale-machine-learning-pipeline-for-job-recommendations/"&gt;Large-Scale Machine Learning Pipeline for Job Recommendations at Indeed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.taboola.com/deep-learning-from-prototype-to-production/"&gt;Deep Learning from Prototype to Production at Taboola&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cdn.oreillystatic.com/en/assets/1/event/144/Atom%20smashing%20using%20machine%20learning%20at%20CERN%20Presentation.pdf"&gt;Atom Smashing using Machine Learning at CERN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.engineering/mapping-mediums-tags-1b9a78d77cf0"&gt;Mapping Tags at Medium&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.monsanto.com/2015/11/23/chinese-restaurant-process/"&gt;Clustering with the Dirichlet Process Mixture Model in Scala at Monsanto&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.foursquare.com/you-are-probably-here-better-map-pins-with-dbscan-random-forests-9d51e8c1964d"&gt;Map Pins with DBSCAN &amp;amp; Random Forests at Foursquare&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/forecasting-introduction/"&gt;Forecasting at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.uber.com/transforming-financial-forecasting-machine-learning/"&gt;Financial Forecasting at Uber&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/insights/2018/ml-workflows.html"&gt;Productionizing ML with Workflows at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.ebayinc.com/stories/blogs/tech/gui-testing-powered-by-deep-learning/"&gt;GUI Testing Powered by Deep Learning at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://engineering.pivotal.io/post/scaling-machine-learning-to-recommend-driving-routes/"&gt;Scaling Machine Learning to Recommend Driving Routes at Pivotal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/doordash-real-time-predictions"&gt;Real-Time Predictions at DoorDash&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/09/machine-intelligence-at-dropbox-an-update-from-our-dbxi-team/"&gt;Machine Intelligence at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blogs.dropbox.com/tech/2018/10/using-machine-learning-to-index-text-from-billions-of-images/"&gt;Machine Learning for Indexing Text from Billions of Images at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2018/07/12/modeling-user-journey-via-semantic-embeddings/"&gt;Modeling User Journeys via Semantic Embeddings at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/09/automated-fake-account-detection-at-linkedin"&gt;Automated Fake Account Detection at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/contextualizing-airbnb-by-building-knowledge-graph-b7077e268d5a"&gt;Building Knowledge Graph at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://instagram-engineering.com/core-modeling-at-instagram-a51e0158aa48"&gt;Core Modeling at Instagram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.mercari.com/entry/2019/04/26/163000"&gt;Neural Architecture Search (NAS) for Prohibited Item Detection at Mercari&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/amenity-detection-and-beyond-new-frontiers-of-computer-vision-at-airbnb-144a4441b72e"&gt;Computer Vision at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.zillow.com/engineering/behind-zillow-3d-home-backend-algorithms/"&gt;3D Home Backend Algorithms at Zillow&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/making-long-term-forecasts-at-lyft-fac475b3ba52"&gt;Long-term Forecasts at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2019/10/discovering-popular-dishes-with-deep-learning.html"&gt;Discovering Popular Dishes with Deep Learning at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/splitnet-architecture-for-ad-candidate-ranking.html"&gt;SplitNet Architecture for Ad Candidate Ranking at Twitter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.indeedblog.com/blog/2019/09/jobs-filter/"&gt;Jobs Filter at Indeed&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2019/12/architecting-wait-time-estimations.html"&gt;Architecting Restaurant Wait Time Predictions at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2016/08/07/commodity-music-ml-services/"&gt;Music Personalization at Spotify&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://sg.godaddy.com/engineering/2019/07/26/domain-name-valuation/"&gt;Deep Learning for Domain Name Valuation at GoDaddy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://stripe.com/blog/similarity-clustering"&gt;Similarity Clustering to Catch Fraud Rings at Stripe&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2020/10/29/bringing-personalized-search-to-etsy/"&gt;Personalized Search at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://eng.lyft.com/ml-feature-serving-infrastructure-at-lyft-d30bf2d3c32a"&gt;ML Feature Serving Infrastructure at Lyft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://codeascraft.com/2021/03/23/how-we-built-a-context-specific-bidding-system-for-etsy-ads/"&gt;Context-Specific Bidding System at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2021/05/moderating-promotional-spam-and-inappropriate-content-in-photos-at-scale-at-yelp.html"&gt;Moderating Promotional Spam and Inappropriate Content in Photos at Scale at Yelp&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://dropbox.tech/machine-learning/optimizing-payments-with-machine-learning"&gt;Optimizing Payments with Machine Learning at Dropbox&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://netflixtechblog.com/scaling-media-machine-learning-at-netflix-f19b400243"&gt;Scaling Media Machine Learning at Netflix&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/ebays-blazingly-fast-billion-scale-vector-similarity-engine/"&gt;Similarity Engine at eBay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.etsy.com/codeascraft/machine-learning-in-content-moderation-at-etsy"&gt;Machine Learning in Content Moderation at Etsy&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.engineering/the-stack-that-helped-medium-drive-2-6-millennia-of-reading-time-e56801f7c492"&gt;Tech Stack at Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.shopify.com/blogs/engineering/e-commerce-at-scale-inside-shopifys-tech-stack"&gt;Tech Stack at Shopify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/building-services-at-airbnb-part-4-23c95e428064"&gt;Building Services (4 parts) at Airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://evernote.com/blog/a-digest-of-evernotes-architecture/"&gt;Architecture of Evernote&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.riotgames.com/news/chat-service-architecture-persistence"&gt;Architecture of Chat Service (3 parts) at Riot Games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://technology.riotgames.com/news/architecture-league-client-update"&gt;Architecture of League of Legends Client Update&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2020/building-twitters-ad-platform-architecture-for-the-future.html"&gt;Architecture of Ad Platform at Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://eng.uber.com/architecture-api-gateway/"&gt;Architecture of API Gateway at Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/tinder/how-we-built-the-tinder-api-gateway-831c6ca5ceca"&gt;Architecture of API Gateway at Tinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://slack.engineering/how-slack-built-shared-channels-8d42c895b19f"&gt;Basic Architecture of Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/a-lightweight-distributed-architecture-to-handle-thousands-of-library-releases-at-ebay/"&gt;Lightweight Distributed Architecture to Handle Thousands of Library Releases at eBay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/architecture/brief-history-scaling-linkedin"&gt;Back-end at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yahooeng.tumblr.com/post/157200523046/introducing-tripod-flickrs-backend-refactored"&gt;Back-end at Flickr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zendesk-engineering/the-history-of-infrastructure-at-zendesk-part-3-foundation-team-forming-and-evolving-9859e40f5390"&gt;Infrastructure (3 parts) at Zendesk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bytes.grubhub.com/cloud-infrastructure-at-grubhub-94db998a898a"&gt;Cloud Infrastructure at Grubhub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/01/now-you-see-me--now-you-dont--linkedins-real-time-presence-platf"&gt;Real-time Presence Platform at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2019/05/building-member-trust-through-a-centralized-and-scalable-setting"&gt;Settings Platform at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/glassdoor-engineering/building-a-nearline-system-for-scale-and-performance-part-ii-9e01bf51b23d"&gt;Nearline System for Scale and Performance (2 parts) at Glassdoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/building-a-real-time-user-action-counting-system-for-ads-88a60d9c9a"&gt;Real-time User Action Counting System for Ads at Pinterest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.riotgames.com/news/riot-games-api-deep-dive"&gt;API Platform at Riot Games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.nytimes.com/play-by-play-moving-the-nyt-games-platform-to-gcp-with-zero-downtime-cf425898d569"&gt;Games Platform at The New York Times&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bytes.swiggy.com/kabootar-swiggys-communication-platform-e5a43cc25629"&gt;Kabootar: Communication Platform at Swiggy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/https-medium-com-netflix-techblog-simone-a-distributed-simulation-service-b2c85131ca1b"&gt;Simone: Distributed Simulation Service at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2017/04/how-yelp-runs-millions-of-tests-every-day.html"&gt;Seagull: Distributed System that Helps Running &amp;gt; 20 Million Tests Per Day at Yelp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/agoda-engineering/priceaggregator-an-intelligent-system-for-hotel-price-fetching-part-3-52acfc705081"&gt;PriceAggregator: Intelligent System for Hotel Price Fetching (3 parts) at Agoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/tinder-engineering/phoenix-tinders-testing-platform-part-iii-520728b9537"&gt;Phoenix: Testing Platform (3 parts) at Tinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netflixtechblog.com/ready-for-changes-with-hexagonal-architecture-b315ec967749"&gt;Hexagonal Architecture at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.slideshare.net/linecorp/architecture-sustaining-line-sticker-services"&gt;Architecture of Sticker Services at LINE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@palantir/terraforming-stack-overflow-enterprise-in-aws-47ee431e6be7"&gt;Stack Overflow Enterprise at Palantir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@Pinterest_Engineering/building-a-dynamic-and-responsive-pinterest-7d410e99f0a9"&gt;Architecture of Following Feed, Interest Feed, and Picked For You at Pinterest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.wework.com/our-api-specification-workflow-9337448d6ee6"&gt;API Specification Workflow at WeWork&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/netflix-techblog/implementing-the-netflix-media-database-53b5a840b42a"&gt;Media Database at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/walmartlabs/member-transaction-history-architecture-8b6e34b87c21"&gt;Member Transaction History Architecture at Walmart&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dropbox.tech/infrastructure/-testing-our-new-sync-engine"&gt;Sync Engine (2 parts) at Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.twitter.com/engineering/en_us/topics/infrastructure/2021/how-we-built-twitter-s-highly-reliable-ads-pacing-service"&gt;Ads Pacing Service at Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://netflixtechblog.com/rapid-event-notification-system-at-netflix-6deb1d2b57d1"&gt;Rapid Event Notification System at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.redhat.com/architect/portfolio/detail/12-integrating-a-modern-payments-architecture"&gt;Architectures of Finance, Banking, and Payment Systems&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://monzo.com/blog/2016/09/19/building-a-modern-bank-backend/"&gt;Bank Backend at Monzo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@Wealthsimple/engineering-at-wealthsimple-reinventing-our-trading-platform-for-scale-17e332241b6c"&gt;Trading Platform for Scale at Wealthsimple&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/margobank/choosing-an-architecture-85750e1e5a03"&gt;Core Banking System at Margo Bank&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/nubank-architecture"&gt;Architecture of Nubank&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://tech.transferwise.com/the-transferwise-stack-heartbeat-of-our-little-revolution/"&gt;Tech Stack at TransferWise&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/build-addepar/our-tech-stack-a4f55dab4b0d"&gt;Tech Stack at Addepar&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/avoiding-double-payments-in-a-distributed-payments-system-2981f6b070bb"&gt;Avoiding Double Payments in a Distributed Payments System at Airbnb&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.etsy.com/sg-en/codeascraft/scaling-etsy-payments-with-vitess-part-3--reducing-cutover-risk"&gt;Scaling Payments (3 parts) at Etsy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://paytm.com/blog/engineering/how-paytm-handles-millions-of-digital-transactions-safely-everyday/"&gt;Handles Millions of Digital Transactions Safely Everyday at Paytm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.grammarly.com/blog/engineering/billing-and-payments-platform/"&gt;Billing and Payment Platform at Grammarly&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Interview&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.somethingsimilar.com/2013/01/14/notes-on-distributed-systems-for-young-bloods/"&gt;Designing Large-Scale Systems&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://blog.codinghorror.com/my-scaling-hero/"&gt;My Scaling Hero - Jeff Atwood (a dose of Endorphins before your interview, JK)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://static.googleusercontent.com/media/research.google.com/en//people/jeff/stanford-295-talk.pdf"&gt;Software Engineering Advice from Building Large-Scale Distributed Systems - Jeff Dean&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://lethain.com/introduction-to-architecting-systems-for-scale/"&gt;Introduction to Architecting Systems for Scale&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hackernoon.com/anatomy-of-a-system-design-interview-4cb57d75a53f"&gt;Anatomy of a System Design Interview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://blog.gainlo.co/index.php/2015/10/22/8-things-you-need-to-know-before-system-design-interviews/"&gt;8 Things You Need to Know Before a System Design Interview&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hackernoon.com/top-10-system-design-interview-questions-for-software-engineers-8561290f0444"&gt;Top 10 System Design Interview Questions &lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://towardsdatascience.com/10-common-software-architectural-patterns-in-a-nutshell-a0b47a1e9013"&gt;Top 10 Common Large-Scale Software Architectural Patterns in a Nutshell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://lynnlangit.com/2017/03/14/beyond-relational/"&gt;Cloud Big Data Design Patterns - Lynn Langit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hackernoon.com/how-not-to-design-netflix-in-your-45-minute-system-design-interview-64953391a054"&gt;How NOT to design Netflix in your 45-minute System Design Interview?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://zapier.com/engineering/api-best-practices/"&gt;API Best Practices: Webhooks, Deprecation, and Design&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cse.wustl.edu/~jain/cse567-06/ftp/os_monitors/index.html"&gt;Explaining Low-Level Systems (OS, Network/Protocol, Database, Storage)&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="http://veithen.github.io/2013/11/18/iowait-linux.html"&gt;The Precise Meaning of I/O Wait Time in Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://research.google.com/archive/paxos_made_live.html"&gt;Paxos Made Live – An Engineering Perspective&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://martin.kleppmann.com/2016/02/08/how-to-do-distributed-locking.html"&gt;How to do Distributed Locking&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://elliot.land/post/sql-transaction-isolation-levels-explained"&gt;SQL Transaction Isolation Levels Explained&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.glassdoor.com/Interview/What-happens-when-you-type-www-google-com-in-your-browser-QTN_56396.htm"&gt;"What Happens When... and How" Questions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="http://highscalability.com/blog/2017/12/11/netflix-what-happens-when-you-press-play.html"&gt;Netflix: What Happens When You Press Play?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://monzo.com/blog/2018/04/05/how-monzo-to-monzo-payments-work/"&gt;Monzo: How Peer-To-Peer Payments Work&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://githubengineering.com/transit-and-peering-how-your-requests-reach-github/"&gt;Transit and Peering: How Your Requests Reach GitHub&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://labs.spotify.com/2018/08/31/smoother-streaming-with-bbr/"&gt;How Spotify Streams Music&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Organization&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developers.soundcloud.com/blog/engineering-levels"&gt;Engineering Levels at SoundCloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/palantir/dev-versus-delta-demystifying-engineering-roles-at-palantir-ad44c2a6e87"&gt;Engineering Roles at Palantir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dropbox.tech/culture/our-updated-engineering-career-framework"&gt;Engineering Career Framework at Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-PXi_7Ld5kU"&gt;Scaling Engineering Teams at Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/03/scaling-decision-making-across-teams-within-linkedin-engineering"&gt;Scaling Decision-Making Across Teams at LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.gojekengineering.com/the-dynamics-of-scaling-an-organisation-cb96dbe8aecd"&gt;Scaling Data Science Team at GOJEK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2018/05/scaling-agile-zalando.html"&gt;Scaling Agile at Zalando&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/how-we-run-bol-com-with-60-autonomous-teams-fe7a98c0759"&gt;Scaling Agile at bol.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.intercom.com/how-we-build-software/"&gt;Lessons Learned from Scaling a Product Team at Intercom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@eleonorazucconi/toby-oliver-cto-typeform-on-hiring-managing-and-scaling-engineering-teams-86bef9e5a708"&gt;Hiring, Managing, and Scaling Engineering Teams at Typeform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://instagram-engineering.com/scaling-the-datagram-team-fc67bcf9b721"&gt;Scaling the Datagram Team at Instagram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/flexport-design/designing-a-design-team-a9a066bc48a5"&gt;Scaling the Design Team at Flexport&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/salesforce-ux/the-salesforce-team-model-for-scaling-a-design-system-d89c2a2d404b"&gt;Team Model for Scaling a Design System at Salesforce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/wish-engineering/scaling-the-analytics-team-at-wish-part-4-recruiting-2a9823b9f5a"&gt;Building Analytics Team (4 parts) at Wish&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/transferwise-ideas/from-2-founders-to-1000-employees-how-a-small-scale-startup-grew-into-a-global-community-9f26371a551b"&gt;From 2 Founders to 1000 Employees at Transferwise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/thinking-design/lessons-learned-growing-a-ux-team-from-10-to-170-f7b47be02262"&gt;Lessons Learned Growing a UX Team from 10 to 170 at Adobe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@sarahtavel/five-lessons-from-scaling-pinterest-6a699a889b08"&gt;Five Lessons from Scaling at Pinterest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://engineering.vinted.com/2018/09/04/how-we-approach-engineering-at-vinted/"&gt;Approach Engineering at Vinted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.indeedblog.com/blog/2018/10/using-metrics-to-improve-the-development-process-and-coach-people/"&gt;Using Metrics to Improve the Development Process (and Coach People) at Indeed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@SkyscannerEng/9-mistakes-to-avoid-while-creating-an-internal-product-63d579b00b1a"&gt;Mistakes to Avoid while Creating an Internal Product at Skyscanner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeascraft.com/2018/01/04/selecting-a-cloud-provider/"&gt;RACI (Responsible, Accountable, Consulted, Informed) at Etsy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2018/10/four-pillars-leadership.html"&gt;Four Pillars of Leading People (Empathy, Inspiration, Trust, Honesty) at Zalando&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.shopify.com/blogs/engineering/pair-programming-explained"&gt;Pair Programming at Shopify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.asana.com/2017/12/distributed-responsibility-engineering-manager/"&gt;Distributed Responsibility at Asana&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.zalando.com/posts/2019/03/rotating-engineers-at-zalando.html"&gt;Rotating Engineers at Zalando&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/pinterest-engineering/how-pinterest-supercharged-its-growth-team-with-experiment-idea-review-fd6571a02fb8"&gt;Experiment Idea Review at Pinterest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineering.atspotify.com/2020/06/25/tech-migrations-the-spotify-way/"&gt;Tech Migrations at Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://engineeringblog.yelp.com/2021/01/whose-code-is-it-anyway.html"&gt;Improving Code Ownership at Yelp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tech.ebayinc.com/engineering/how-creating-an-agile-code-base-helped-ebay-pivot-for-apple-silicon/"&gt;Agile Code Base at eBay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/miro-engineering/agile-data-engineering-at-miro-ec2dcc8a3fcb"&gt;Agile Data Engineering at Miro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/airbnb-engineering/incident-management-ae863dc5d47f"&gt;Automated Incident Management through Slack at Airbnb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/bbc-product-technology/refactor-organisation-80e4e171d922"&gt;Refactor Organization at BBC&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ai.google/research/pubs/pub47025"&gt;Code Review&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/@palantir/code-review-best-practices-19e02780015f"&gt;Code Review at Palantir&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linecorp.com/en/blog/effective-code-review/"&gt;Code Review at LINE&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.engineering/code-reviews-at-medium-bed2c0dce13a"&gt;Code Reviews at Medium&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://engineering.linkedin.com/blog/2018/06/scaling-collective-code-ownership-with-code-reviews"&gt;Code Review at LinkedIn&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://medium.com/disney-streaming/the-secret-to-better-code-reviews-c14c7884b9ac"&gt;Code Review at Disney&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.netlify.com/blog/2020/03/05/feedback-ladders-how-we-encode-code-reviews-at-netlify/"&gt;Code Review at Netlify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Talk&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Y6Ev8GIlbxc"&gt;Distributed Systems in One Lesson - Tim Berglund, Senior Director of Developer Experience at Confluent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon17americas/program/presentation/erlich"&gt;Building Real Time Infrastructure at Facebook - Jeff Barber and Shie Erlich, Software Engineer at Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usenix.org/conference/srecon16/program/presentation/alvidrez"&gt;Building Reliable Social Infrastructure for Google - Marc Alvidrez, Senior Manager at Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=K8YuavUy6Qc"&gt;Building a Distributed Build System at Google Scale - Aysylu Greenberg, SDE at Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ggizCjUCCqE"&gt;Site Reliability Engineering at Dropbox - Tammy Butow, Site Reliability Engineering Manager at Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H4vMcD7zKM0"&gt;How Google Does Planet-Scale for Planet-Scale Infra - Melissa Binde, SRE Director for Google Cloud Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CZ3wIuvmHeM&amp;amp;t=2837s"&gt;Netflix Guide to Microservices - Josh Evans, Director of Operations Engineering at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1-3Ahy7Fxsc"&gt;Achieving Rapid Response Times in Large Online Services - Jeff Dean, Google Senior Fellow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=N8NWDHgWA28"&gt;Architecture to Handle 80K RPS Celebrity Sales at Shopify - Simon Eskildsen, Engineering Lead at Shopify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QCHiNEw73AU"&gt;Lessons of Scale at Facebook - Bobby Johnson, Director of Engineering at Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.salesforce.com/video/1757880/"&gt;Performance Optimization for the Greater China Region at Salesforce - Jeff Cheng, Enterprise Architect at Salesforce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vimeo.com/252367076"&gt;How GIPHY Delivers a GIF to 300 Millions Users - Alex Hoang and Nima Khoshini, Services Engineers at GIPHY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=wzsxJqeVIhY&amp;amp;list=PLMu8-hpCxIVENuAue7bd0eCAglLGY_8AW&amp;amp;index=7"&gt;High Performance Packet Processing Platform at Alibaba - Haiyong Wang, Senior Director at Alibaba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atscaleconference.com/videos/solving-large-scale-data-center-and-cloud-interconnection-problems/"&gt;Solving Large-scale Data Center and Cloud Interconnection Problems - Ihab Tarazi, CTO at Equinix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PE4gwstWhmc"&gt;Scaling Dropbox - Kevin Modzelewski, Back-end Engineer at Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IhGWOaD5BYQ"&gt;Scaling Reliability at Dropbox - Sat Kriya Khalsa, SRE at Dropbox&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atscaleconference.com/videos/performance-scale-2018-opening-remarks/"&gt;Scaling with Performance at Facebook - Bill Jia, VP of Infrastructure at Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IO4teCbHvZw"&gt;Scaling Live Videos to a Billion Users at Facebook - Sachin Kulkarni, Director of Engineering at Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hnpzNAPiC0E"&gt;Scaling Infrastructure at Instagram - Lisa Guo, Instagram Engineering&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6OvrFkLSoZ0"&gt;Scaling Infrastructure at Twitter - Yao Yue, Staff Software Engineer at Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LfqyhM1LeIU"&gt;Scaling Infrastructure at Etsy - Bethany Macri, Engineering Manager at Etsy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atscaleconference.com/videos/scaling-alibabas-real-time-infrastructure-for-global-shopping-holiday/"&gt;Scaling Real-time Infrastructure at Alibaba for Global Shopping Holiday - Xiaowei Jiang, Senior Director at Alibaba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cdsfRXr9pJU"&gt;Scaling Data Infrastructure at Spotify - Matti (Lepistö) Pehrs, Spotify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jQNCuD_hxdQ&amp;amp;list=RDhnpzNAPiC0E&amp;amp;index=11"&gt;Scaling Pinterest - Marty Weiner, Pinterest’s founding engineer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/slack-scalability"&gt;Scaling Slack - Bing Wei, Software Engineer (Infrastructure) at Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5yDO-tmIoXY&amp;amp;feature=youtu.be"&gt;Scaling Backend at Youtube - Sugu Sougoumarane, SDE at Youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=nuiLcWE8sPA"&gt;Scaling Backend at Uber - Matt Ranney, Chief Systems Architect at Uber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tbqcsHg-Q_o"&gt;Scaling Global CDN at Netflix - Dave Temkin, Director of Global Networks at Netflix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bxhYNfFeVF4"&gt;Scaling Load Balancing Infra to Support 1.3 Billion Users at Facebook - Patrick Shuff, Production Engineer at Facebook&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RlkCdM_f3p4"&gt;Scaling (a NSFW site) to 200 Million Views A Day And Beyond - Eric Pickup, Lead Platform Developer at MindGeek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.infoq.com/presentations/quora-analytics"&gt;Scaling Counting Infrastructure at Quora - Chun-Ho Hung and Nikhil Gar, SEs at Quora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=g_MPGU_m01s"&gt;Scaling Git at Microsoft - Saeed Noursalehi, Principal Program Manager at Microsoft&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=F-f0-k46WVk"&gt;Scaling Multitenant Architecture Across Multiple Data Centres at Shopify - Weingarten, Engineering Lead at Shopify&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A Piece of Cake&lt;/h2&gt; 
&lt;p&gt;Roses are red. Violets are blue. &lt;a href="https://nguyenquocbinh.org/"&gt;Binh&lt;/a&gt; likes sweet. &lt;a href="https://paypal.me/binhnguyennus"&gt;Treat Binh a tiramisu?&lt;/a&gt; &lt;span&gt;🍰&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>