<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Daily Trending</title>
    <description>Daily Trending of TypeScript in GitHub</description>
    <pubDate>Mon, 11 Aug 2025 01:41:59 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>assistant-ui/assistant-ui</title>
      <link>https://github.com/assistant-ui/assistant-ui</link>
      <description>&lt;p&gt;Typescript/React Library for AI Chatüí¨üöÄ&lt;/p&gt;&lt;hr&gt;&lt;a href="https://www.assistant-ui.com"&gt; &lt;img src="https://raw.githubusercontent.com/assistant-ui/assistant-ui/main/.github/assets/header.svg?sanitize=true" alt="assistant-ui Header" width="100%" style="width: 1000px" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.assistant-ui.com"&gt;Product&lt;/a&gt; ¬∑ &lt;a href="https://www.assistant-ui.com/docs/getting-started"&gt;Documentation&lt;/a&gt; ¬∑ &lt;a href="https://www.assistant-ui.com/examples"&gt;Examples&lt;/a&gt; ¬∑ &lt;a href="https://discord.gg/S9dwgCNEFs"&gt;Discord Community&lt;/a&gt; ¬∑ &lt;a href="https://cal.com/simon-farshid/assistant-ui"&gt;Contact Sales&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/assistant-ui/assistant-ui"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://app.workweave.ai/reports/repository/org_GhSIrtWo37b5B3Mv0At3wQ1Q/722184017"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fapp.workweave.ai%2Fapi%2Frepository%2Fbadge%2Forg_GhSIrtWo37b5B3Mv0At3wQ1Q%2F722184017&amp;amp;cacheSeconds=3600" alt="Weave Badge" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Backed_by-Y_Combinator-orange" alt="Backed by Y Combinator" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/assistant-ui/assistant-ui"&gt;‚≠êÔ∏è Star us on GitHub&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The UX of ChatGPT in your React app üí¨üöÄ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;assistant-ui&lt;/strong&gt; is an open source TypeScript/React library for AI chat.&lt;/p&gt; 
&lt;p&gt;The library handles essential chat features such as auto-scrolling, accessibility, and real-time updates, while providing easy integration with LangGraph, AI SDK, and custom backends.&lt;/p&gt; 
&lt;p&gt;The API of assistant-ui is inspired by libraries like shadcn/ui and cmdk. Instead of a single monolithic chat component, developers get primitive components that can be fully customized.&lt;/p&gt; 
&lt;p&gt;We have wide model provider support (OpenAI, Anthropic, Mistral, Perplexity, AWS Bedrock, Azure, Google Gemini, Hugging Face, Fireworks, Cohere, Replicate, Ollama) out of the box and the ability to integrate custom APIs.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can get started by running &lt;code&gt;npx assistant-ui create&lt;/code&gt; (new project) or &lt;code&gt;npx assistant-ui init&lt;/code&gt; (existing project) in your terminal.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/k6Dc8URmLjk"&gt;&lt;img src="https://raw.githubusercontent.com/assistant-ui/assistant-ui/main/.github/assets/assistant-ui-starter.gif" alt="assistant-ui starter template" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;shadcn/ui 
  &lt;ul&gt; 
   &lt;li&gt;Radix UI-inspired primitives for AI Chat&lt;/li&gt; 
   &lt;li&gt;Beautiful shadcn/ui theme to get you started&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Chat UI 
  &lt;ul&gt; 
   &lt;li&gt;Streaming, Auto-scrolling, Markdown, Code Highlighting, File Attachments, and more&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts and accessibility features&lt;/li&gt; 
 &lt;li&gt;Generative UI 
  &lt;ul&gt; 
   &lt;li&gt;Map LLM tool calls and JSONs to custom UI components&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Frontend tool calls 
  &lt;ul&gt; 
   &lt;li&gt;Let LLMs take action in your frontend application&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Human tool calls 
  &lt;ul&gt; 
   &lt;li&gt;Human approvals and input collection&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Chat history and analytics 
  &lt;ul&gt; 
   &lt;li&gt;Sign up for assistant-cloud and configure by simply setting an environment variable&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Choose your backend&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI SDK 
  &lt;ul&gt; 
   &lt;li&gt;First class integration into AI SDK by Vercel. Connect to any LLM provider supported by AI SDK.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;LangGraph 
  &lt;ul&gt; 
   &lt;li&gt;First class integration into LangGraph and LangGraph Cloud. Connect to any LLM provider supported by LangChain.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Custom 
  &lt;ul&gt; 
   &lt;li&gt;Use assistant-ui as the visualization layer on top your own backend/streaming protocols.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Customization&lt;/h2&gt; 
&lt;p&gt;The API of assistant-ui is inspired by libraries like Radix UI and cmdk. Instead of a single monolithic chat component, we give you composable primitives and a great starter configuration. You have full control over the look and feel of every pixel while leaving auto-scrolling, LLM streaming and accessibility to us.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/assistant-ui/assistant-ui/main/.github/assets/components.png" alt="Overview of components" /&gt;&lt;/p&gt; 
&lt;p&gt;Sample customization to make a perplexity lookalike:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/assistant-ui/assistant-ui/main/.github/assets/perplexity.gif" alt="Perplexity clone created with assistant-ui" /&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;Demo Video&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/ZW56UHlqTCQ"&gt;&lt;img src="https://img.youtube.com/vi/ZW56UHlqTCQ/hqdefault.jpg" alt="Short Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/9eLKs9AM4tU"&gt;&lt;img src="https://img.youtube.com/vi/9eLKs9AM4tU/hqdefault.jpg" alt="Long Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Traction&lt;/h2&gt; 
&lt;p&gt;Hundreds of projects use assistant-ui to build in-app AI assistants, including companies like LangChain, AthenaIntelligence, Browser Use, and more.&lt;/p&gt; 
&lt;p&gt;With &amp;gt;200k monthly downloads, assistant-ui is the most popular UI library for building AI chat.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/assistant-ui/assistant-ui/main/.github/assets/growth.png" alt="Growth" style="max-width: 400px;" /&gt; 
&lt;h2&gt;2025 Q1 Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Assistant Cloud&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Chat Persistence&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; React 19, Tailwind v4, NextJS 19 support&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Improved Markdown rendering performance&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; LangGraph &lt;code&gt;interrupt()&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Open in v0 support&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Improved documentation (work in progress)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; OpenAI Realtime Voice (work in progress)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Resume interrupted LLM calls (work in progress)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Native PDF attachment support&lt;/li&gt; 
 &lt;li&gt;[&amp;nbsp;] Follow-up suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Next Steps&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.assistant-ui.com/"&gt;Check out example demos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.assistant-ui.com/docs/"&gt;Read our docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.com/invite/S9dwgCNEFs"&gt;Join our Discord&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cal.com/simon-farshid/assistant-ui"&gt;Book a sales call&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>AykutSarac/jsoncrack.com</title>
      <link>https://github.com/AykutSarac/jsoncrack.com</link>
      <description>&lt;p&gt;‚ú® Innovative and open-source visualization application that transforms various data formats, such as JSON, YAML, XML, CSV and more, into interactive graphs.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://github.com/AykutSarac/jsoncrack.com"&gt; &lt;img src="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/public/assets/192.png" height="50" alt="Logo" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;JSON Crack&lt;/h1&gt; 
&lt;p align="center"&gt; The open-source JSON Editor. &lt;br /&gt; &lt;a href="https://jsoncrack.com"&gt;&lt;strong&gt;Learn more ¬ª&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://todiagram.com"&gt;ToDiagram&lt;/a&gt; ¬∑ &lt;a href="https://discord.gg/yVyTtCRueq"&gt;Discord&lt;/a&gt; ¬∑ &lt;a href="https://jsoncrack.com"&gt;Website&lt;/a&gt; ¬∑ &lt;a href="https://github.com/AykutSarac/jsoncrack.com/issues"&gt;Issues&lt;/a&gt; ¬∑ &lt;a href="https://marketplace.visualstudio.com/items?itemName=AykutSarac.jsoncrack-vscode"&gt;VS Code&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;!-- ABOUT THE PROJECT --&gt; 
&lt;h2&gt;About the Project&lt;/h2&gt; 
&lt;img width="100%" alt="booking-screen" src="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/public/assets/editor.webp" /&gt; 
&lt;h2&gt;Visualize JSON into interactive graphs&lt;/h2&gt; 
&lt;p&gt;JSON Crack is a tool for visualizing JSON data in a structured, interactive graphs, making it easier to explore, format, and validate JSON. It offers features like converting JSON to other formats (CSV, YAML), generating JSON Schema, executing queries, and exporting visualizations as images. Designed for both readability and usability.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Visualizer&lt;/strong&gt;: Instantly convert JSON, YAML, CSV, XML, and TOML into interactive graphs or trees in dark or light mode.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Convert&lt;/strong&gt;: Seamlessly transform data formats, like JSON to CSV or XML to JSON, for easy sharing.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Format &amp;amp; Validate&lt;/strong&gt;: Beautify and validate JSON, YAML, and CSV for clear and accurate data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation&lt;/strong&gt;: Generate TypeScript interfaces, Golang structs, and JSON Schema.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSON Schema&lt;/strong&gt;: Create JSON Schema, mock data, and validate various data formats.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced Tools&lt;/strong&gt;: Decode JWT, randomize data, and run jq or JSON path queries.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Export Image&lt;/strong&gt;: Download your visualization as PNG, JPEG, or SVG.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy&lt;/strong&gt;: All data processing is local; nothing is stored on our servers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Recognition&lt;/h2&gt; 
&lt;a href="https://news.ycombinator.com/item?id=32626873"&gt; &lt;img style="width: 250px; height: 54px;" width="250" height="54" alt="Featured on Hacker News" src="https://hackernews-badge.vercel.app/api?id=32626873" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://producthunt.com/posts/JSON-Crack?utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_souce=badge-jsoncrack" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=332281&amp;amp;theme=light" alt="JSON Crack | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Built With&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://nextjs.org/?ref=jsoncrack.com"&gt;Next.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reactjs.org/?ref=jsoncrack.com"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reaflow.dev/?ref=jsoncrack.com"&gt;Reaflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suren-atoyan/monaco-react"&gt;Monaco Editor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stay Up-to-Date&lt;/h2&gt; 
&lt;p&gt;JSON Crack officially launched as v1.0 on the 17th of February 2022 and we've come a long way so far. Watch &lt;strong&gt;releases&lt;/strong&gt; of this repository to be notified of future updates:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/AykutSarac/jsoncrack.com"&gt;&lt;img src="https://img.shields.io/github/stars/AykutSarac/jsoncrack.com" alt="Star at GitHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- GETTING STARTED --&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To get a local copy up and running, please follow these simple steps.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Here is what you need to be able to run JSON Crack.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js (Version: &amp;gt;=18.x)&lt;/li&gt; 
 &lt;li&gt;Pnpm &lt;em&gt;(recommended)&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repo into a public GitHub repository (or fork &lt;a href="https://github.com/AykutSarac/jsoncrack.com/fork"&gt;https://github.com/AykutSarac/jsoncrack.com/fork&lt;/a&gt;). If you plan to distribute the code, read the &lt;a href="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/LICENSE.md"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for additional details.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/AykutSarac/jsoncrack.com.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Go to the project folder&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;cd jsoncrack.com
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install packages&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the project&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;pnpm dev

# Running on http://localhost:3000/
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;üê≥ A &lt;a href="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/Dockerfile"&gt;&lt;code&gt;Dockerfile&lt;/code&gt;&lt;/a&gt; is provided in the root of the repository. If you want to run JSON Crack locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;# Build a Docker image with:
docker compose build

# Run locally with `docker-compose`
docker compose up

# Go to http://localhost:8888
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The supported node limit can be changed by editing the &lt;code&gt;NEXT_PUBLIC_NODE_LIMIT&lt;/code&gt; value in the &lt;code&gt;.env&lt;/code&gt; file at the project root.&lt;/p&gt; 
&lt;!-- LICENSE --&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/AykutSarac/jsoncrack.com/main/LICENSE.md"&gt;&lt;code&gt;LICENSE&lt;/code&gt;&lt;/a&gt; for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>clash-verge-rev/clash-verge-rev</title>
      <link>https://github.com/clash-verge-rev/clash-verge-rev</link>
      <description>&lt;p&gt;A modern GUI client based on Tauri, designed to run in Windows, macOS and Linux for tailored proxy experience&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/src-tauri/icons/icon.png" alt="Clash" width="128" /&gt; &lt;br /&gt; Continuation of &lt;a href="https://github.com/zzzgydi/clash-verge"&gt;Clash Verge&lt;/a&gt; &lt;br /&gt; &lt;/h1&gt; 
&lt;h3 align="center"&gt; A Clash Meta GUI based on &lt;a href="https://github.com/tauri-apps/tauri"&gt;Tauri&lt;/a&gt;. &lt;/h3&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Dark&lt;/th&gt; 
   &lt;th&gt;Light&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/docs/preview_dark.png" alt="È¢ÑËßà" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/docs/preview_light.png" alt="È¢ÑËßà" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;ËØ∑Âà∞ÂèëÂ∏ÉÈ°µÈù¢‰∏ãËΩΩÂØπÂ∫îÁöÑÂÆâË£ÖÂåÖÔºö&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases"&gt;Release page&lt;/a&gt;&lt;br /&gt; Go to the &lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases"&gt;Release page&lt;/a&gt; to download the corresponding installation package&lt;br /&gt; Supports Windows (x64/x86), Linux (x64/arm64) and macOS 10.15+ (intel/apple).&lt;/p&gt; 
&lt;h4&gt;ÊàëÂ∫îÂΩìÊÄéÊ†∑ÈÄâÊã©ÂèëË°åÁâà&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;ÁâàÊú¨&lt;/th&gt; 
   &lt;th align="left"&gt;ÁâπÂæÅ&lt;/th&gt; 
   &lt;th align="left"&gt;ÈìæÊé•&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Stable&lt;/td&gt; 
   &lt;td align="left"&gt;Ê≠£ÂºèÁâàÔºåÈ´òÂèØÈù†ÊÄßÔºåÈÄÇÂêàÊó•Â∏∏‰ΩøÁî®„ÄÇ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases"&gt;Release&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Alpha&lt;/td&gt; 
   &lt;td align="left"&gt;Êó©ÊúüÊµãËØïÁâàÔºåÂäüËÉΩÊú™ÂÆåÂñÑÔºåÂèØËÉΩÂ≠òÂú®Áº∫Èô∑„ÄÇ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases/tag/alpha"&gt;Alpha&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;AutoBuild&lt;/td&gt; 
   &lt;td align="left"&gt;ÊªöÂä®Êõ¥Êñ∞ÁâàÔºåÊåÅÁª≠ÈõÜÊàêÊõ¥Êñ∞ÔºåÈÄÇÂêàÂºÄÂèëÊµãËØï„ÄÇ&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/clash-verge-rev/clash-verge-rev/releases/tag/autobuild"&gt;AutoBuild&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;ÂÆâË£ÖËØ¥ÊòéÂíåÂ∏∏ËßÅÈóÆÈ¢òÔºåËØ∑Âà∞ &lt;a href="https://clash-verge-rev.github.io/"&gt;ÊñáÊ°£È°µ&lt;/a&gt; Êü•Áúã&lt;/h4&gt; 
&lt;hr /&gt; 
&lt;h3&gt;TG È¢ëÈÅì: &lt;a href="https://t.me/clash_verge_re"&gt;@clash_verge_rev&lt;/a&gt;&lt;/h3&gt; 
&lt;h2&gt;Promotion&lt;/h2&gt; 
&lt;h4&gt;&lt;a href="https://verge.dginv.click/#/register?code=oaxsAGo6"&gt;ÁãóÁãóÂä†ÈÄü ‚Äî‚Äî ÊäÄÊúØÊµÅÊú∫Âú∫ Doggygo VPN&lt;/a&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;È´òÊÄßËÉΩÊµ∑Â§ñÊú∫Âú∫ÔºåÂÖçË¥πËØïÁî®Ôºå‰ºòÊÉ†Â•óÈ§êÔºåËß£ÈîÅÊµÅÂ™í‰ΩìÔºåÂÖ®ÁêÉÈ¶ñÂÆ∂ÊîØÊåÅ Hysteria ÂçèËÆÆ„ÄÇ&lt;/li&gt; 
 &lt;li&gt;‰ΩøÁî® Clash Verge ‰∏ìÂ±ûÈÇÄËØ∑ÈìæÊé•Ê≥®ÂÜåÈÄÅ 3 Â§©ÔºåÊØèÂ§© 1G ÊµÅÈáèÂÖçË¥πËØïÁî®Ôºö&lt;a href="https://verge.dginv.click/#/register?code=oaxsAGo6"&gt;ÁÇπÊ≠§Ê≥®ÂÜå&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Clash Verge ‰∏ìÂ±û 8 Êäò‰ºòÊÉ†Á†Å: verge20 (‰ªÖÊúâ 500 ‰ªΩ)&lt;/li&gt; 
 &lt;li&gt;‰ºòÊÉ†Â•óÈ§êÊØèÊúà‰ªÖÈúÄ 15.8 ÂÖÉÔºå160G ÊµÅÈáèÔºåÂπ¥‰ªò 8 Êäò&lt;/li&gt; 
 &lt;li&gt;Êµ∑Â§ñÂõ¢ÈòüÔºåÊó†Ë∑ëË∑ØÈ£éÈô©ÔºåÈ´òËææ 50% Ëøî‰Ω£&lt;/li&gt; 
 &lt;li&gt;ÈõÜÁæ§Ë¥üËΩΩÂùáË°°ËÆæËÆ°ÔºåÈ´òÈÄü‰∏ìÁ∫ø(ÂÖºÂÆπËÄÅÂÆ¢Êà∑Á´Ø)ÔºåÊûÅ‰ΩéÂª∂ËøüÔºåÊó†ËßÜÊôöÈ´òÂ≥∞Ôºå4K ÁßíÂºÄ&lt;/li&gt; 
 &lt;li&gt;ÂÖ®ÁêÉÈ¶ñÂÆ∂ Hysteria ÂçèËÆÆÊú∫Âú∫ÔºåÁé∞Â∑≤‰∏äÁ∫øÊõ¥Âø´ÁöÑ &lt;code&gt;Hysteria2&lt;/code&gt; ÂçèËÆÆ(Clash Verge ÂÆ¢Êà∑Á´ØÊúÄ‰Ω≥Êê≠ÈÖç)&lt;/li&gt; 
 &lt;li&gt;Ëß£ÈîÅÊµÅÂ™í‰ΩìÂèä ChatGPT&lt;/li&gt; 
 &lt;li&gt;ÂÆòÁΩëÔºö&lt;a href="https://verge.dginv.click/#/register?code=oaxsAGo6"&gt;https://ÁãóÁãóÂä†ÈÄü.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Êú¨È°πÁõÆÁöÑÊûÑÂª∫‰∏éÂèëÂ∏ÉÁéØÂ¢ÉÁî± &lt;a href="https://yxvm.com/aff.php?aff=827"&gt;YXVM&lt;/a&gt; Áã¨Á´ãÊúçÂä°Âô®ÂÖ®ÂäõÊîØÊåÅÔºå&lt;/h4&gt; 
&lt;p&gt;ÊÑüË∞¢Êèê‰æõ Áã¨‰∫´ËµÑÊ∫ê„ÄÅÈ´òÊÄßËÉΩ„ÄÅÈ´òÈÄüÁΩëÁªú ÁöÑÂº∫Â§ßÂêéÁ´ØÁéØÂ¢É„ÄÇÂ¶ÇÊûú‰Ω†ËßâÂæó‰∏ãËΩΩÂ§üÂø´„ÄÅ‰ΩøÁî®Â§üÁàΩÔºåÈÇ£ÊòØÂõ†‰∏∫Êàë‰ª¨Áî®‰∫ÜÂ•ΩÊúçÂä°Âô®ÔºÅ&lt;/p&gt; 
&lt;p&gt;üß© YXVM Áã¨Á´ãÊúçÂä°Âô®‰ºòÂäøÔºö&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;üåé ‰ºòË¥®ÁΩëÁªúÔºåÂõûÁ®ã‰ºòÂåñÔºå‰∏ãËΩΩÂø´Âà∞È£ûËµ∑&lt;/li&gt; 
 &lt;li&gt;üîß Áâ©ÁêÜÊú∫Áã¨‰∫´ËµÑÊ∫êÔºåÈùûVPSÂèØÊØîÔºåÊÄßËÉΩÊãâÊª°&lt;/li&gt; 
 &lt;li&gt;üß† ÈÄÇÂêàË∑ë‰ª£ÁêÜ„ÄÅÊê≠Âª∫ WEB Á´ô CDN Á´ô „ÄÅÊêû CI/CD Êàñ‰ªª‰ΩïÈ´òË¥üËΩΩÂ∫îÁî®&lt;/li&gt; 
 &lt;li&gt;üí° ÊîØÊåÅÂç≥ÂºÄÂç≥Áî®ÔºåÂ§öÊú∫ÊàøÈÄâÊã©ÔºåCN2 / IEPL ÂèØÈÄâ&lt;/li&gt; 
 &lt;li&gt;üì¶ Êú¨È°πÁõÆ‰ΩøÁî®ÈÖçÁΩÆÂ∑≤Âú®ÂîÆÔºåÊ¨¢ËøéÂêåÊ¨æÂÖ•ÊâãÔºÅ&lt;/li&gt; 
 &lt;li&gt;üéØ ÊÉ≥Ë¶ÅÂêåÊ¨æÊûÑÂª∫‰ΩìÈ™åÔºü&lt;a href="https://yxvm.com/aff.php?aff=827"&gt;Á´ãÂç≥‰∏ãÂçï YXVM Áã¨Á´ãÊúçÂä°Âô®ÔºÅ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Âü∫‰∫éÊÄßËÉΩÂº∫Âä≤ÁöÑ Rust Âíå Tauri 2 Ê°ÜÊû∂&lt;/li&gt; 
 &lt;li&gt;ÂÜÖÁΩÆ&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;Clash.Meta(mihomo)&lt;/a&gt;ÂÜÖÊ†∏ÔºåÂπ∂ÊîØÊåÅÂàáÊç¢ &lt;code&gt;Alpha&lt;/code&gt; ÁâàÊú¨ÂÜÖÊ†∏„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÁÆÄÊ¥ÅÁæéËßÇÁöÑÁî®Êà∑ÁïåÈù¢ÔºåÊîØÊåÅËá™ÂÆö‰πâ‰∏ªÈ¢òÈ¢úËâ≤„ÄÅ‰ª£ÁêÜÁªÑ/ÊâòÁõòÂõæÊ†á‰ª•Âèä &lt;code&gt;CSS Injection&lt;/code&gt;„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÈÖçÁΩÆÊñá‰ª∂ÁÆ°ÁêÜÂíåÂ¢ûÂº∫ÔºàMerge Âíå ScriptÔºâÔºåÈÖçÁΩÆÊñá‰ª∂ËØ≠Ê≥ïÊèêÁ§∫„ÄÇ&lt;/li&gt; 
 &lt;li&gt;Á≥ªÁªü‰ª£ÁêÜÂíåÂÆàÂç´„ÄÅ&lt;code&gt;TUN(ËôöÊãüÁΩëÂç°)&lt;/code&gt; Ê®°Âºè„ÄÇ&lt;/li&gt; 
 &lt;li&gt;ÂèØËßÜÂåñËäÇÁÇπÂíåËßÑÂàôÁºñËæë&lt;/li&gt; 
 &lt;li&gt;WebDav ÈÖçÁΩÆÂ§á‰ªΩÂíåÂêåÊ≠•&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;FAQ&lt;/h3&gt; 
&lt;p&gt;Refer to &lt;a href="https://clash-verge-rev.github.io/faq/windows.html"&gt;Doc FAQ Page&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Donation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/clash-verge-rev"&gt;ÊçêÂä©Clash Verge RevÁöÑÂºÄÂèë&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;To run the development server, execute the following commands after all prerequisites for &lt;strong&gt;Tauri&lt;/strong&gt; are installed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm i
pnpm run check
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;Issue and PR welcome!&lt;/p&gt; 
&lt;h2&gt;Acknowledgement&lt;/h2&gt; 
&lt;p&gt;Clash Verge rev was based on or inspired by these projects and so on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zzzgydi/clash-verge"&gt;zzzgydi/clash-verge&lt;/a&gt;: A Clash GUI based on tauri. Supports Windows, macOS and Linux.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tauri-apps/tauri"&gt;tauri-apps/tauri&lt;/a&gt;: Build smaller, faster, and more secure desktop applications with a web frontend.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Dreamacro/clash"&gt;Dreamacro/clash&lt;/a&gt;: A rule-based tunnel in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;MetaCubeX/mihomo&lt;/a&gt;: A rule-based tunnel in Go.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Fndroid/clash_for_windows_pkg"&gt;Fndroid/clash_for_windows_pkg&lt;/a&gt;: A Windows/macOS GUI based on Clash.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;vitejs/vite&lt;/a&gt;: Next generation frontend tooling. It's fast!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;GPL-3.0 License. See &lt;a href="https://raw.githubusercontent.com/clash-verge-rev/clash-verge-rev/dev/LICENSE"&gt;License here&lt;/a&gt; for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openai/openai-node</title>
      <link>https://github.com/openai/openai-node</link>
      <description>&lt;p&gt;Official JavaScript / TypeScript library for the OpenAI API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenAI TypeScript and JavaScript API Library&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://npmjs.org/package/openai"&gt;&lt;img src="https://img.shields.io/npm/v/openai.svg?label=npm%20(stable)" alt="NPM version" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/bundlephobia/minzip/openai" alt="npm bundle size" /&gt; &lt;a href="https://jsr.io/@openai/openai"&gt;&lt;img src="https://jsr.io/badges/@openai/openai" alt="JSR Version" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This library provides convenient access to the OpenAI REST API from TypeScript or JavaScript.&lt;/p&gt; 
&lt;p&gt;It is generated from our &lt;a href="https://github.com/openai/openai-openapi"&gt;OpenAPI specification&lt;/a&gt; with &lt;a href="https://stainlessapi.com/"&gt;Stainless&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To learn how to use the OpenAI API, check out our &lt;a href="https://platform.openai.com/docs/api-reference"&gt;API Reference&lt;/a&gt; and &lt;a href="https://platform.openai.com/docs"&gt;Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Installation from JSR&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;deno add jsr:@openai/openai
npx jsr add @openai/openai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These commands will make the module importable from the &lt;code&gt;@openai/openai&lt;/code&gt; scope. You can also &lt;a href="https://jsr.io/docs/using-packages#importing-with-jsr-specifiers"&gt;import directly from JSR&lt;/a&gt; without an install step if you're using the Deno JavaScript runtime:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'jsr:@openai/openai';
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The full API of this library can be found in &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/api.md"&gt;api.md file&lt;/a&gt; along with many &lt;a href="https://github.com/openai/openai-node/tree/master/examples"&gt;code examples&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The primary API for interacting with OpenAI models is the &lt;a href="https://platform.openai.com/docs/api-reference/responses"&gt;Responses API&lt;/a&gt;. You can generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  apiKey: process.env['OPENAI_API_KEY'], // This is the default and can be omitted
});

const response = await client.responses.create({
  model: 'gpt-4o',
  instructions: 'You are a coding assistant that talks like a pirate',
  input: 'Are semicolons optional in JavaScript?',
});

console.log(response.output_text);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The previous standard (supported indefinitely) for generating text is the &lt;a href="https://platform.openai.com/docs/api-reference/chat"&gt;Chat Completions API&lt;/a&gt;. You can use that API to generate text from the model with the code below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  apiKey: process.env['OPENAI_API_KEY'], // This is the default and can be omitted
});

const completion = await client.chat.completions.create({
  model: 'gpt-4o',
  messages: [
    { role: 'developer', content: 'Talk like a pirate.' },
    { role: 'user', content: 'Are semicolons optional in JavaScript?' },
  ],
});

console.log(completion.choices[0].message.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Streaming responses&lt;/h2&gt; 
&lt;p&gt;We provide support for streaming responses using Server Sent Events (SSE).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI();

const stream = await client.responses.create({
  model: 'gpt-4o',
  input: 'Say "Sheep sleep deep" ten times fast!',
  stream: true,
});

for await (const event of stream) {
  console.log(event);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;File uploads&lt;/h2&gt; 
&lt;p&gt;Request parameters that correspond to file uploads can be passed in many different forms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;File&lt;/code&gt; (or an object with the same structure)&lt;/li&gt; 
 &lt;li&gt;a &lt;code&gt;fetch&lt;/code&gt; &lt;code&gt;Response&lt;/code&gt; (or an object with the same structure)&lt;/li&gt; 
 &lt;li&gt;an &lt;code&gt;fs.ReadStream&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;the return value of our &lt;code&gt;toFile&lt;/code&gt; helper&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import fs from 'fs';
import OpenAI, { toFile } from 'openai';

const client = new OpenAI();

// If you have access to Node `fs` we recommend using `fs.createReadStream()`:
await client.files.create({ file: fs.createReadStream('input.jsonl'), purpose: 'fine-tune' });

// Or if you have the web `File` API you can pass a `File` instance:
await client.files.create({ file: new File(['my bytes'], 'input.jsonl'), purpose: 'fine-tune' });

// You can also pass a `fetch` `Response`:
await client.files.create({ file: await fetch('https://somesite/input.jsonl'), purpose: 'fine-tune' });

// Finally, if none of the above are convenient, you can use our `toFile` helper:
await client.files.create({
  file: await toFile(Buffer.from('my bytes'), 'input.jsonl'),
  purpose: 'fine-tune',
});
await client.files.create({
  file: await toFile(new Uint8Array([0, 1, 2]), 'input.jsonl'),
  purpose: 'fine-tune',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Webhook Verification&lt;/h2&gt; 
&lt;p&gt;Verifying webhook signatures is &lt;em&gt;optional but encouraged&lt;/em&gt;.&lt;/p&gt; 
&lt;p&gt;For more information about webhooks, see &lt;a href="https://platform.openai.com/docs/guides/webhooks"&gt;the API docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Parsing webhook payloads&lt;/h3&gt; 
&lt;p&gt;For most use cases, you will likely want to verify the webhook and parse the payload at the same time. To achieve this, we provide the method &lt;code&gt;client.webhooks.unwrap()&lt;/code&gt;, which parses a webhook request and verifies that it was sent by OpenAI. This method will throw an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). The &lt;code&gt;.unwrap()&lt;/code&gt; method will parse this JSON for you into an event object after verifying the webhook was sent from OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { headers } from 'next/headers';
import OpenAI from 'openai';

const client = new OpenAI({
  webhookSecret: process.env.OPENAI_WEBHOOK_SECRET, // env var used by default; explicit here.
});

export async function webhook(request: Request) {
  const headersList = headers();
  const body = await request.text();

  try {
    const event = client.webhooks.unwrap(body, headersList);

    switch (event.type) {
      case 'response.completed':
        console.log('Response completed:', event.data);
        break;
      case 'response.failed':
        console.log('Response failed:', event.data);
        break;
      default:
        console.log('Unhandled event type:', event.type);
    }

    return Response.json({ message: 'ok' });
  } catch (error) {
    console.error('Invalid webhook signature:', error);
    return new Response('Invalid signature', { status: 400 });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Verifying webhook payloads directly&lt;/h3&gt; 
&lt;p&gt;In some cases, you may want to verify the webhook separately from parsing the payload. If you prefer to handle these steps separately, we provide the method &lt;code&gt;client.webhooks.verifySignature()&lt;/code&gt; to &lt;em&gt;only verify&lt;/em&gt; the signature of a webhook request. Like &lt;code&gt;.unwrap()&lt;/code&gt;, this method will throw an error if the signature is invalid.&lt;/p&gt; 
&lt;p&gt;Note that the &lt;code&gt;body&lt;/code&gt; parameter must be the raw JSON string sent from the server (do not parse it first). You will then need to parse the body after verifying the signature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { headers } from 'next/headers';
import OpenAI from 'openai';

const client = new OpenAI({
  webhookSecret: process.env.OPENAI_WEBHOOK_SECRET, // env var used by default; explicit here.
});

export async function webhook(request: Request) {
  const headersList = headers();
  const body = await request.text();

  try {
    client.webhooks.verifySignature(body, headersList);

    // Parse the body after verification
    const event = JSON.parse(body);
    console.log('Verified event:', event);

    return Response.json({ message: 'ok' });
  } catch (error) {
    console.error('Invalid webhook signature:', error);
    return new Response('Invalid signature', { status: 400 });
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Handling errors&lt;/h2&gt; 
&lt;p&gt;When the library is unable to connect to the API, or if the API returns a non-success status code (i.e., 4xx or 5xx response), a subclass of &lt;code&gt;APIError&lt;/code&gt; will be thrown:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const job = await client.fineTuning.jobs
  .create({ model: 'gpt-4o', training_file: 'file-abc123' })
  .catch(async (err) =&amp;gt; {
    if (err instanceof OpenAI.APIError) {
      console.log(err.request_id);
      console.log(err.status); // 400
      console.log(err.name); // BadRequestError
      console.log(err.headers); // {server: 'nginx', ...}
    } else {
      throw err;
    }
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Error codes are as follows:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Status Code&lt;/th&gt; 
   &lt;th&gt;Error Type&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;400&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;BadRequestError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;401&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AuthenticationError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;403&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;PermissionDeniedError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;404&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;NotFoundError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;422&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;UnprocessableEntityError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;429&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;RateLimitError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&amp;gt;=500&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;InternalServerError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;APIConnectionError&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Request IDs&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href="https://platform.openai.com/docs/api-reference/debugging-requests"&gt;these docs&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All object responses in the SDK provide a &lt;code&gt;_request_id&lt;/code&gt; property which is added from the &lt;code&gt;x-request-id&lt;/code&gt; response header so that you can quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const completion = await client.chat.completions.create({
  messages: [{ role: 'user', content: 'Say this is a test' }],
  model: 'gpt-4o',
});
console.log(completion._request_id); // req_123
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also access the Request ID using the &lt;code&gt;.withResponse()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const { data: stream, request_id } = await openai.chat.completions
  .create({
    model: 'gpt-4',
    messages: [{ role: 'user', content: 'Say this is a test' }],
    stream: true,
  })
  .withResponse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Realtime API Beta&lt;/h2&gt; 
&lt;p&gt;The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as &lt;a href="https://platform.openai.com/docs/guides/function-calling"&gt;function calling&lt;/a&gt; through a &lt;code&gt;WebSocket&lt;/code&gt; connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { OpenAIRealtimeWebSocket } from 'openai/beta/realtime/websocket';

const rt = new OpenAIRealtimeWebSocket({ model: 'gpt-4o-realtime-preview-2024-12-17' });

rt.on('response.text.delta', (event) =&amp;gt; process.stdout.write(event.delta));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/realtime.md"&gt;realtime.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href="https://learn.microsoft.com/azure/ai-services/openai/overview"&gt;Azure OpenAI&lt;/a&gt;, use the &lt;code&gt;AzureOpenAI&lt;/code&gt; class instead of the &lt;code&gt;OpenAI&lt;/code&gt; class.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The Azure API shape slightly differs from the core API shape which means that the static types for responses / params won't always be correct.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { AzureOpenAI } from 'openai';
import { getBearerTokenProvider, DefaultAzureCredential } from '@azure/identity';

const credential = new DefaultAzureCredential();
const scope = 'https://cognitiveservices.azure.com/.default';
const azureADTokenProvider = getBearerTokenProvider(credential, scope);

const openai = new AzureOpenAI({ azureADTokenProvider });

const result = await openai.chat.completions.create({
  model: 'gpt-4o',
  messages: [{ role: 'user', content: 'Say hello!' }],
});

console.log(result.choices[0]!.message?.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Retries&lt;/h3&gt; 
&lt;p&gt;Certain errors will be automatically retried 2 times by default, with a short exponential backoff. Connection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict, 429 Rate Limit, and &amp;gt;=500 Internal errors will all be retried by default.&lt;/p&gt; 
&lt;p&gt;You can use the &lt;code&gt;maxRetries&lt;/code&gt; option to configure or disable this:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Configure the default for all requests:
const client = new OpenAI({
  maxRetries: 0, // default is 2
});

// Or, configure per-request:
await client.chat.completions.create({ messages: [{ role: 'user', content: 'How can I get the name of the current day in JavaScript?' }], model: 'gpt-4o' }, {
  maxRetries: 5,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Timeouts&lt;/h3&gt; 
&lt;p&gt;Requests time out after 10 minutes by default. You can configure this with a &lt;code&gt;timeout&lt;/code&gt; option:&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// Configure the default for all requests:
const client = new OpenAI({
  timeout: 20 * 1000, // 20 seconds (default is 10 minutes)
});

// Override per-request:
await client.chat.completions.create({ messages: [{ role: 'user', content: 'How can I list all files in a directory using Python?' }], model: 'gpt-4o' }, {
  timeout: 5 * 1000,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On timeout, an &lt;code&gt;APIConnectionTimeoutError&lt;/code&gt; is thrown.&lt;/p&gt; 
&lt;p&gt;Note that requests which time out will be &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/#retries"&gt;retried twice by default&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Request IDs&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For more information on debugging requests, see &lt;a href="https://platform.openai.com/docs/api-reference/debugging-requests"&gt;these docs&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All object responses in the SDK provide a &lt;code&gt;_request_id&lt;/code&gt; property which is added from the &lt;code&gt;x-request-id&lt;/code&gt; response header so that you can quickly log failing requests and report them back to OpenAI.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const response = await client.responses.create({ model: 'gpt-4o', input: 'testing 123' });
console.log(response._request_id); // req_123
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also access the Request ID using the &lt;code&gt;.withResponse()&lt;/code&gt; method:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const { data: stream, request_id } = await openai.responses
  .create({
    model: 'gpt-4o',
    input: 'Say this is a test',
    stream: true,
  })
  .withResponse();
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Auto-pagination&lt;/h2&gt; 
&lt;p&gt;List methods in the OpenAI API are paginated. You can use the &lt;code&gt;for await ‚Ä¶ of&lt;/code&gt; syntax to iterate through items across all pages:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;async function fetchAllFineTuningJobs(params) {
  const allFineTuningJobs = [];
  // Automatically fetches more pages as needed.
  for await (const fineTuningJob of client.fineTuning.jobs.list({ limit: 20 })) {
    allFineTuningJobs.push(fineTuningJob);
  }
  return allFineTuningJobs;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can request a single page at a time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let page = await client.fineTuning.jobs.list({ limit: 20 });
for (const fineTuningJob of page.data) {
  console.log(fineTuningJob);
}

// Convenience methods are provided for manually paginating:
while (page.hasNextPage()) {
  page = await page.getNextPage();
  // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Realtime API Beta&lt;/h2&gt; 
&lt;p&gt;The Realtime API enables you to build low-latency, multi-modal conversational experiences. It currently supports text and audio as both input and output, as well as &lt;a href="https://platform.openai.com/docs/guides/function-calling"&gt;function calling&lt;/a&gt; through a &lt;code&gt;WebSocket&lt;/code&gt; connection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { OpenAIRealtimeWebSocket } from 'openai/beta/realtime/websocket';

const rt = new OpenAIRealtimeWebSocket({ model: 'gpt-4o-realtime-preview-2024-12-17' });

rt.on('response.text.delta', (event) =&amp;gt; process.stdout.write(event.delta));
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/realtime.md"&gt;realtime.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Microsoft Azure OpenAI&lt;/h2&gt; 
&lt;p&gt;To use this library with &lt;a href="https://learn.microsoft.com/azure/ai-services/openai/overview"&gt;Azure OpenAI&lt;/a&gt;, use the &lt;code&gt;AzureOpenAI&lt;/code&gt; class instead of the &lt;code&gt;OpenAI&lt;/code&gt; class.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] The Azure API shape slightly differs from the core API shape which means that the static types for responses / params won't always be correct.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { AzureOpenAI } from 'openai';
import { getBearerTokenProvider, DefaultAzureCredential } from '@azure/identity';

const credential = new DefaultAzureCredential();
const scope = 'https://cognitiveservices.azure.com/.default';
const azureADTokenProvider = getBearerTokenProvider(credential, scope);

const openai = new AzureOpenAI({
  azureADTokenProvider,
  apiVersion: '&amp;lt;The API version, e.g. 2024-10-01-preview&amp;gt;',
});

const result = await openai.chat.completions.create({
  model: 'gpt-4o',
  messages: [{ role: 'user', content: 'Say hello!' }],
});

console.log(result.choices[0]!.message?.content);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information on support for the Azure API, see &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/azure.md"&gt;azure.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Advanced Usage&lt;/h2&gt; 
&lt;h3&gt;Accessing raw Response data (e.g., headers)&lt;/h3&gt; 
&lt;p&gt;The "raw" &lt;code&gt;Response&lt;/code&gt; returned by &lt;code&gt;fetch()&lt;/code&gt; can be accessed through the &lt;code&gt;.asResponse()&lt;/code&gt; method on the &lt;code&gt;APIPromise&lt;/code&gt; type that all methods return. This method returns as soon as the headers for a successful response are received and does not consume the response body, so you are free to write custom parsing or streaming logic.&lt;/p&gt; 
&lt;p&gt;You can also use the &lt;code&gt;.withResponse()&lt;/code&gt; method to get the raw &lt;code&gt;Response&lt;/code&gt; along with the parsed data. Unlike &lt;code&gt;.asResponse()&lt;/code&gt; this method consumes the body, returning once it is parsed.&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;const client = new OpenAI();

const httpResponse = await client.responses
  .create({ model: 'gpt-4o', input: 'say this is a test.' })
  .asResponse();

// access the underlying web standard Response object
console.log(httpResponse.headers.get('X-My-Header'));
console.log(httpResponse.statusText);

const { data: modelResponse, response: raw } = await client.responses
  .create({ model: 'gpt-4o', input: 'say this is a test.' })
  .withResponse();
console.log(raw.headers.get('X-My-Header'));
console.log(modelResponse);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Logging&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] All log messages are intended for debugging only. The format and content of log messages may change between releases.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Log levels&lt;/h4&gt; 
&lt;p&gt;The log level can be configured in two ways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Via the &lt;code&gt;OPENAI_LOG&lt;/code&gt; environment variable&lt;/li&gt; 
 &lt;li&gt;Using the &lt;code&gt;logLevel&lt;/code&gt; client option (overrides the environment variable if set)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  logLevel: 'debug', // Show all log messages
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Available log levels, from most to least verbose:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;'debug'&lt;/code&gt; - Show debug messages, info, warnings, and errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'info'&lt;/code&gt; - Show info messages, warnings, and errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'warn'&lt;/code&gt; - Show warnings and errors (default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'error'&lt;/code&gt; - Show only errors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;'off'&lt;/code&gt; - Disable all logging&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;At the &lt;code&gt;'debug'&lt;/code&gt; level, all HTTP requests and responses are logged, including headers and bodies. Some authentication-related headers are redacted, but sensitive data in request and response bodies may still be visible.&lt;/p&gt; 
&lt;h4&gt;Custom logger&lt;/h4&gt; 
&lt;p&gt;By default, this library logs to &lt;code&gt;globalThis.console&lt;/code&gt;. You can also provide a custom logger. Most logging libraries are supported, including &lt;a href="https://www.npmjs.com/package/pino"&gt;pino&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/winston"&gt;winston&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/bunyan"&gt;bunyan&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/consola"&gt;consola&lt;/a&gt;, &lt;a href="https://www.npmjs.com/package/signale"&gt;signale&lt;/a&gt;, and &lt;a href="https://jsr.io/@std/log"&gt;@std/log&lt;/a&gt;. If your logger doesn't work, please open an issue.&lt;/p&gt; 
&lt;p&gt;When providing a custom logger, the &lt;code&gt;logLevel&lt;/code&gt; option still controls which messages are emitted, messages below the configured level will not be sent to your logger.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import pino from 'pino';

const logger = pino();

const client = new OpenAI({
  logger: logger.child({ name: 'OpenAI' }),
  logLevel: 'debug', // Send all messages to pino, allowing it to filter
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Making custom/undocumented requests&lt;/h3&gt; 
&lt;p&gt;This library is typed for convenient access to the documented API. If you need to access undocumented endpoints, params, or response properties, the library can still be used.&lt;/p&gt; 
&lt;h4&gt;Undocumented endpoints&lt;/h4&gt; 
&lt;p&gt;To make requests to undocumented endpoints, you can use &lt;code&gt;client.get&lt;/code&gt;, &lt;code&gt;client.post&lt;/code&gt;, and other HTTP verbs. Options on the client, such as retries, will be respected when making these requests.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;await client.post('/some/path', {
  body: { some_prop: 'foo' },
  query: { some_query_arg: 'bar' },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Undocumented request params&lt;/h4&gt; 
&lt;p&gt;To make requests using undocumented parameters, you may use &lt;code&gt;// @ts-expect-error&lt;/code&gt; on the undocumented parameter. This library doesn't validate at runtime that the request matches the type, so any extra values you send will be sent as-is.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;client.chat.completions.create({
  // ...
  // @ts-expect-error baz is not yet public
  baz: 'undocumented option',
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For requests with the &lt;code&gt;GET&lt;/code&gt; verb, any extra params will be in the query, all other requests will send the extra param in the body.&lt;/p&gt; 
&lt;p&gt;If you want to explicitly send an extra argument, you can do so with the &lt;code&gt;query&lt;/code&gt;, &lt;code&gt;body&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt; request options.&lt;/p&gt; 
&lt;h4&gt;Undocumented response properties&lt;/h4&gt; 
&lt;p&gt;To access undocumented response properties, you may access the response object with &lt;code&gt;// @ts-expect-error&lt;/code&gt; on the response object, or cast the response object to the requisite type. Like the request params, we do not validate or strip extra properties from the response from the API.&lt;/p&gt; 
&lt;h3&gt;Customizing the fetch client&lt;/h3&gt; 
&lt;p&gt;If you want to use a different &lt;code&gt;fetch&lt;/code&gt; function, you can either polyfill the global:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import fetch from 'my-fetch';

globalThis.fetch = fetch;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or pass it to the client:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import fetch from 'my-fetch';

const client = new OpenAI({ fetch });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fetch options&lt;/h3&gt; 
&lt;p&gt;If you want to set custom &lt;code&gt;fetch&lt;/code&gt; options without overriding the &lt;code&gt;fetch&lt;/code&gt; function, you can provide a &lt;code&gt;fetchOptions&lt;/code&gt; object when instantiating the client or making a request. (Request-specific options override client options.)&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  fetchOptions: {
    // `RequestInit` options
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Configuring proxies&lt;/h4&gt; 
&lt;p&gt;To modify proxy behavior, you can provide custom &lt;code&gt;fetchOptions&lt;/code&gt; that add runtime-specific proxy options to requests:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/node.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Node&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://github.com/nodejs/undici/raw/main/docs/docs/api/ProxyAgent.md#example---proxyagent-with-fetch"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';
import * as undici from 'undici';

const proxyAgent = new undici.ProxyAgent('http://localhost:8888');
const client = new OpenAI({
  fetchOptions: {
    dispatcher: proxyAgent,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/bun.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Bun&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://bun.sh/guides/http/proxy"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'openai';

const client = new OpenAI({
  fetchOptions: {
    proxy: 'http://localhost:8888',
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/stainless-api/sdk-assets/refs/heads/main/deno.svg?sanitize=true" align="top" width="18" height="21" /&gt; &lt;strong&gt;Deno&lt;/strong&gt; &lt;sup&gt;[&lt;a href="https://docs.deno.com/api/deno/~/Deno.createHttpClient"&gt;docs&lt;/a&gt;]&lt;/sup&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import OpenAI from 'npm:openai';

const httpClient = Deno.createHttpClient({ proxy: { url: 'http://localhost:8888' } });
const client = new OpenAI({
  fetchOptions: {
    client: httpClient,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;h2&gt;Semantic versioning&lt;/h2&gt; 
&lt;p&gt;This package generally follows &lt;a href="https://semver.org/spec/v2.0.0.html"&gt;SemVer&lt;/a&gt; conventions, though certain backwards-incompatible changes may be released as minor versions:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Changes that only affect static types, without breaking runtime behavior.&lt;/li&gt; 
 &lt;li&gt;Changes to library internals which are technically public but not intended or documented for external use. &lt;em&gt;(Please open a GitHub issue to let us know if you are relying on such internals.)&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;Changes that we do not expect to impact the vast majority of users in practice.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;We take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.&lt;/p&gt; 
&lt;p&gt;We are keen for your feedback; please open an &lt;a href="https://www.github.com/openai/openai-node/issues"&gt;issue&lt;/a&gt; with questions, bugs, or suggestions.&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;p&gt;TypeScript &amp;gt;= 4.9 is supported.&lt;/p&gt; 
&lt;p&gt;The following runtimes are supported:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Node.js 20 LTS or later (&lt;a href="https://endoflife.date/nodejs"&gt;non-EOL&lt;/a&gt;) versions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Deno v1.28.0 or higher.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bun 1.0 or later.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Cloudflare Workers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Vercel Edge Runtime.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Jest 28 or greater with the &lt;code&gt;"node"&lt;/code&gt; environment (&lt;code&gt;"jsdom"&lt;/code&gt; is not supported at this time).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nitro v2.6 or greater.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Web browsers: disabled by default to avoid exposing your secret API credentials. Enable browser support by explicitly setting &lt;code&gt;dangerouslyAllowBrowser&lt;/code&gt; to true'.&lt;/p&gt; 
  &lt;details&gt; 
   &lt;summary&gt;More explanation&lt;/summary&gt; 
   &lt;h3&gt;Why is this dangerous?&lt;/h3&gt; 
   &lt;p&gt;Enabling the &lt;code&gt;dangerouslyAllowBrowser&lt;/code&gt; option can be dangerous because it exposes your secret API credentials in the client-side code. Web browsers are inherently less secure than server environments, any user with access to the browser can potentially inspect, extract, and misuse these credentials. This could lead to unauthorized access using your credentials and potentially compromise sensitive data or functionality.&lt;/p&gt; 
   &lt;h3&gt;When might this not be dangerous?&lt;/h3&gt; 
   &lt;p&gt;In certain scenarios where enabling browser support might not pose significant risks:&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Internal Tools: If the application is used solely within a controlled internal environment where the users are trusted, the risk of credential exposure can be mitigated.&lt;/li&gt; 
    &lt;li&gt;Public APIs with Limited Scope: If your API has very limited scope and the exposed credentials do not grant access to sensitive data or critical operations, the potential impact of exposure is reduced.&lt;/li&gt; 
    &lt;li&gt;Development or debugging purpose: Enabling this feature temporarily might be acceptable, provided the credentials are short-lived, aren't also used in production environments, or are frequently rotated.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/details&gt;&lt;/li&gt; 
&lt;/ul&gt;  
&lt;p&gt;Note that React Native is not supported at this time.&lt;/p&gt; 
&lt;p&gt;If you are interested in other runtime environments, please open or upvote an issue on GitHub.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/openai/openai-node/master/CONTRIBUTING.md"&gt;the contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RSSNext/Folo</title>
      <link>https://github.com/RSSNext/Folo</link>
      <description>&lt;p&gt;üß° Follow everything in one place&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://github.com/RSSNext/Folo"&gt; &lt;img src="https://github.com/RSSNext/Folo/raw/refs/heads/dev/apps/desktop/layer/renderer/public/icon.svg?sanitize=true" alt="Logo" width="80" height="80" /&gt; &lt;/a&gt; 
 &lt;h3&gt;Folo&lt;/h3&gt; 
 &lt;p&gt; &lt;img src="https://github.com/user-attachments/assets/cbe924f2-d8b0-48b0-814e-7c06ccb1911c" height="60" /&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://github.com/user-attachments/assets/6997a236-3df3-49d5-98a4-514f6d1a02c4" height="60" /&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://github.com/RSSNext/Folo/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/RSSNext/Follow?color=ffcb47&amp;amp;labelColor=black&amp;amp;style=flat-square&amp;amp;logo=github&amp;amp;label=Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/RSSNext/Folo?style=flat-square&amp;amp;logo=github&amp;amp;label=Contributors&amp;amp;labelColor=black" /&gt;&lt;/a&gt; &lt;a href="https://status.follow.is/" target="_blank"&gt;&lt;img src="https://status.follow.is/api/badge/18/uptime?color=%2344CC10&amp;amp;labelColor=black&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/RSSNext/Folo/total?color=369eff&amp;amp;labelColor=black&amp;amp;logo=github&amp;amp;style=flat-square&amp;amp;label=Downloads" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=folo_is"&gt;&lt;img src="https://img.shields.io/badge/Follow-blue?color=1d9bf0&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/followapp" target="_blank"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;amp;query=approximate_member_count&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fmobile%2Fpackage.json&amp;amp;style=flat-square&amp;amp;logo=folo&amp;amp;logoColor=white&amp;amp;label=Mobile&amp;amp;labelColor=black&amp;amp;color=FF5C00" /&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604"&gt;&lt;img src="https://img.shields.io/itunes/v/6739802604?style=flat-square&amp;amp;logo=apple&amp;amp;label=App%20Store&amp;amp;color=FF5C00&amp;amp;labelColor=black" /&gt;&lt;/a&gt; &lt;a href="https://play.google.com/store/apps/details?id=is.follow" target="_blank"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Fplay.cuzi.workers.dev%2Fplay%3Fi%3Dis.follow%26gl%3DUS%26hl%3Den%26l%3DAndroid%26m%3D%24version&amp;amp;style=flat-square&amp;amp;logo=google-play&amp;amp;label=Google%20Play&amp;amp;labelColor=black&amp;amp;color=FF5C00" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases"&gt;&lt;img src="https://img.shields.io/github/package-json/v/RSSNext/Folo?filename=%2Fapps%2Fdesktop%2Fpackage.json&amp;amp;style=flat-square&amp;amp;logo=folo&amp;amp;logoColor=white&amp;amp;label=Desktop&amp;amp;labelColor=black&amp;amp;color=FF5C00" /&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-mac-app-store-version.rss3.workers.dev%2F&amp;amp;query=version&amp;amp;prefix=v&amp;amp;style=flat-square&amp;amp;logo=apple&amp;amp;label=Mac%20App%20Store&amp;amp;labelColor=black&amp;amp;color=FF5C00&amp;amp;cacheSeconds=3600" /&gt;&lt;/a&gt; &lt;a href="https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Ffolo-microsoft-store-version.rss3.workers.dev%2F&amp;amp;query=version&amp;amp;style=flat-square&amp;amp;logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIyNCIgaGVpZ2h0PSIyNCIgdmlld0JveD0iMCAwIDI0IDI0IiBmaWxsPSJub25lIj48cGF0aCBmaWxsPSIjZmZmIiBkPSJNMyAzaDguNTN2OC41M0gzek0xMi40NjkgM2g4LjUzdjguNTNoLTguNTN6TTMgMTIuNDdoOC41M1YyMUgzek0xMi40NjkgMTIuNDdoOC41M1YyMWgtOC41M3oiLz48L3N2Zz4%3D&amp;amp;logoColor=white&amp;amp;label=Microsoft%20Store&amp;amp;labelColor=black&amp;amp;color=FF5C00&amp;amp;cacheSeconds=3600&amp;amp;prefix=v" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; 
  &lt;!-- &lt;a href="https://github.com/RSSNext/Folo" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/59b957fb-59ed-4ef0-994e-f6a402a6fe2b" alt="GitHub Trending" height="55"/&gt;&lt;/a&gt;
    &lt;br /&gt;
    &lt;br /&gt; --&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/35747716-28bf-413a-822b-aa49d49f1aa0" alt="Folo Mobile" width="52%" /&gt;&lt;/a&gt; &lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/198a0165-b8c9-45c1-9116-b473a13a8d0c" alt="Folo Desktop" width="46%" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;As they say, your thoughts are what you read‚Äîand we‚Äôve been consuming noisy feeds for too long! Folo organizes content into one timeline, keeping you updated on what matters, noise-free. Share lists, explore collections, and enjoy distraction-free browsing.&lt;/p&gt; 
&lt;h2&gt;üëãüèª Getting Started &amp;amp; Join Our Community&lt;/h2&gt; 
&lt;p&gt;Whether for users or professional developers, Folo will be your open information playground. Please be aware that Folo is currently under active development, and feedback is welcome for any &lt;a href="https://github.com/RSSNext/Folo/issues"&gt;issue&lt;/a&gt; encountered.&lt;/p&gt; 
&lt;p&gt;Feel free to try it using the following methods:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Operating System&lt;/th&gt; 
   &lt;th align="left"&gt;Source&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Any&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://app.folo.is" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/51ef7800-b683-4493-83e8-eb4752366997" alt="Browser" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;iOS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/a94d8698-2a11-4f43-9b0a-b756b17b61f7" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Android&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://play.google.com/store/apps/details?id=is.follow" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/0d178e0b-3ace-4f75-bbde-ab3c0a416ce8" alt="Google Play" height="55" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;macOS&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.apple.com/us/app/folo-follow-everything/id6739802604" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/0d47f902-7fa3-494e-ad28-9ab11af5e6d4" alt="Microsoft Store" height="55" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Windows&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://apps.microsoft.com/detail/9nvfzpv0v0ht?mode=direct" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/b3112bab-9dd0-4893-9488-890dcb368f70" alt="Microsoft Store" height="55" /&gt;&lt;/a&gt; &lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Linux&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/RSSNext/Folo/releases/latest" target="_blank"&gt;&lt;img src="https://github.com/user-attachments/assets/cf61e197-d756-4606-a8ad-fb591f79fdfc" alt="App Store" height="55" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;You can also install using the following methods maintained by our community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are using Arch Linux, you can install package &lt;a href="https://aur.archlinux.org/packages/folo-appimage"&gt;folo-appimage&lt;/a&gt; that maintained by &lt;a href="https://github.com/ttimochan"&gt;timochan&lt;/a&gt; and &lt;a href="https://github.com/grtsinry43"&gt;grtsinry43&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using Nix, you can install package &lt;a href="https://github.com/NixOS/nixpkgs/raw/master/pkgs/by-name/fo/follow/package.nix"&gt;follow&lt;/a&gt; that maintained by &lt;a href="https://github.com/iosmanthus"&gt;iosmanthus&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using macOS with &lt;a href="https://brew.sh"&gt;Homebrew&lt;/a&gt;, you can install cask &lt;a href="https://formulae.brew.sh/cask/folo"&gt;folo&lt;/a&gt; that maintained by &lt;a href="https://github.com/realSunyz"&gt;realSunyz&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;If you are using Windows with &lt;a href="https://scoop.sh"&gt;Scoop&lt;/a&gt;, you can install manifest &lt;a href="https://github.com/cscnk52/cetacea/raw/master/bucket/folo.json"&gt;folo&lt;/a&gt; that maintained by &lt;a href="https://github.com/cscnk52"&gt;cscnk52&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/followapp"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2Ffollowapp%3Fwith_counts%3Dtrue&amp;amp;query=approximate_member_count&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=flat-square" alt="Discord" /&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;Join our Discord server to connect with developers, request features, and receive support.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://x.com/intent/follow?screen_name=folo_is"&gt;&lt;img src="https://img.shields.io/badge/any_text-Follow-blue?color=2CA5E0&amp;amp;label=_&amp;amp;logo=x&amp;amp;labelColor=black&amp;amp;style=flat-square" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Follow us on X/Twitter for product updates and to join in on reward activities.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Star Us&lt;/strong&gt;, You will receive all release notifications from GitHub without any delay ~&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/a08f9437-b24c-4388-8f01-2826e09eeaf2" alt="Image" /&gt;&lt;/p&gt; 
&lt;a href="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats?repo_id=783512367" target="_blank" style="display: block" align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;amp;image_size=auto&amp;amp;color_scheme=dark" width="655" height="auto" /&gt; 
  &lt;img alt="Performance Stats of RSSNext/Folo - Last 28 days" src="https://next.ossinsight.io/widgets/official/compose-last-28-days-stats/thumbnail.png?repo_id=783512367&amp;amp;image_size=auto&amp;amp;color_scheme=light" width="655" height="auto" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;h3&gt;Customized Information Hub&lt;/h3&gt; 
&lt;p&gt;Subscribe to a vast range of feeds and curated lists. Curate your favorites and keep track of what matters most to you.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/11dc7d21-f5d8-4e41-9269-24fc352aa02b" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;AI At Your Fingertips&lt;/h3&gt; 
&lt;p&gt;A smarter and more efficient browsing with AI-powered features like translation, summary, and more.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/37cf4f2f-4c5e-4775-86e8-2fa1a1b2ecf5" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;Dynamic Content Support&lt;/h3&gt; 
&lt;p&gt;Because we know content is more than just text. From articles to videos, images to audio ‚Äî Folo gets it all covered.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/d1379fd6-8767-476e-b0dc-d61753715e26" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;$POWER An Ownership Economy&lt;/h3&gt; 
&lt;p&gt;Tip creators across instantly with $POWER, support content you love, and unlock value in your own work. Your content, your power.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/23bbcd63-45ca-40c8-83ef-96bd1100b701" alt="" /&gt;&lt;/p&gt; 
&lt;h3&gt;More Than Just An App&lt;/h3&gt; 
&lt;p&gt;This isn‚Äôt just another app. Folo is a community ‚Äî introducing a new era of openness and community-driven experience.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/62004a04-eaea-4f5d-bfbf-4e68b6b90286" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;You are welcome to join the open source community to build together, please check our &lt;a href="https://raw.githubusercontent.com/RSSNext/Folo/dev/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;üîè Code signing policy&lt;/h2&gt; 
&lt;p&gt;Folo for Windows uses free code signing provided by &lt;a href="https://about.signpath.io/"&gt;SignPath.io&lt;/a&gt;, certificate by &lt;a href="https://signpath.org/"&gt;SignPath Foundation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Folo for macOS and iOS are signed and notarized by &lt;a href="https://developer.apple.com/programs/"&gt;Apple Developer Program&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All released files are verified with &lt;a href="https://github.com/RSSNext/Folo/attestations"&gt;GitHub artifact attestations&lt;/a&gt; to ensure their provenance and integrity.&lt;/p&gt; 
&lt;h2&gt;üìù License&lt;/h2&gt; 
&lt;p&gt;Folo is licensed under the GNU General Public License version 3 with the addition of the following special exception:&lt;/p&gt; 
&lt;p&gt;All content in the &lt;code&gt;icons/mgc&lt;/code&gt; directory is copyrighted by &lt;a href="https://mgc.mingcute.com/"&gt;https://mgc.mingcute.com/&lt;/a&gt; and cannot be redistributed.&lt;/p&gt; 
&lt;p&gt;All content in the &lt;code&gt;lottie&lt;/code&gt; directory is distributed under the &lt;a href="https://lottiefiles.com/page/license"&gt;Lottie Simple License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TriliumNext/Trilium</title>
      <link>https://github.com/TriliumNext/Trilium</link>
      <description>&lt;p&gt;Build your personal knowledge base with Trilium Notes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Trilium Notes&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/sponsors/eliandoran" alt="GitHub Sponsors" /&gt; &lt;img src="https://img.shields.io/liberapay/patrons/ElianDoran" alt="LiberaPay patrons" /&gt;&lt;br /&gt; &lt;img src="https://img.shields.io/docker/pulls/triliumnext/notes" alt="Docker Pulls" /&gt; &lt;img src="https://img.shields.io/github/downloads/triliumnext/notes/total" alt="GitHub Downloads (all assets, all releases)" /&gt;&lt;br /&gt; &lt;a href="https://app.relative-ci.com/projects/Di5q7dz9daNDZ9UXi0Bp"&gt;&lt;img src="https://badges.relative-ci.com/badges/Di5q7dz9daNDZ9UXi0Bp?branch=develop" alt="RelativeCI" /&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/trilium/"&gt;&lt;img src="https://hosted.weblate.org/widget/trilium/svg-badge.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README-ZH_CN.md"&gt;Chinese&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.ru.md"&gt;Russian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.ja.md"&gt;Japanese&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.it.md"&gt;Italian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/README.es.md"&gt;Spanish&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Trilium Notes is a free and open-source, cross-platform hierarchical note taking application with focus on building large personal knowledge bases.&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://triliumnext.github.io/Docs/Wiki/screenshot-tour"&gt;screenshots&lt;/a&gt; for quick overview:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/screenshot-tour"&gt;&lt;img src="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/app.png" alt="Trilium Screenshot" width="1000" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;üéÅ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Notes can be arranged into arbitrarily deep tree. Single note can be placed into multiple places in the tree (see &lt;a href="https://triliumnext.github.io/Docs/Wiki/cloning-notes"&gt;cloning&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Rich WYSIWYG note editor including e.g. tables, images and &lt;a href="https://triliumnext.github.io/Docs/Wiki/text-notes"&gt;math&lt;/a&gt; with markdown &lt;a href="https://triliumnext.github.io/Docs/Wiki/text-notes#autoformat"&gt;autoformat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Support for editing &lt;a href="https://triliumnext.github.io/Docs/Wiki/code-notes"&gt;notes with source code&lt;/a&gt;, including syntax highlighting&lt;/li&gt; 
 &lt;li&gt;Fast and easy &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-navigation"&gt;navigation between notes&lt;/a&gt;, full text search and &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-hoisting"&gt;note hoisting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Seamless &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-revisions"&gt;note versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Note &lt;a href="https://triliumnext.github.io/Docs/Wiki/attributes"&gt;attributes&lt;/a&gt; can be used for note organization, querying and advanced &lt;a href="https://triliumnext.github.io/Docs/Wiki/scripts"&gt;scripting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;UI available in English, German, Spanish, French, Romanian, and Chinese (simplified and traditional)&lt;/li&gt; 
 &lt;li&gt;Direct &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20%26%20Setup/Server%20Installation/Multi-Factor%20Authentication.md"&gt;OpenID and TOTP integration&lt;/a&gt; for more secure login&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/synchronization"&gt;Synchronization&lt;/a&gt; with self-hosted sync server 
  &lt;ul&gt; 
   &lt;li&gt;there's a &lt;a href="https://trilium.cc/paid-hosting"&gt;3rd party service for hosting synchronisation server&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/sharing"&gt;Sharing&lt;/a&gt; (publishing) notes to public internet&lt;/li&gt; 
 &lt;li&gt;Strong &lt;a href="https://triliumnext.github.io/Docs/Wiki/protected-notes"&gt;note encryption&lt;/a&gt; with per-note granularity&lt;/li&gt; 
 &lt;li&gt;Sketching diagrams, based on &lt;a href="https://excalidraw.com/"&gt;Excalidraw&lt;/a&gt; (note type "canvas")&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/relation-map"&gt;Relation maps&lt;/a&gt; and &lt;a href="https://triliumnext.github.io/Docs/Wiki/link-map"&gt;link maps&lt;/a&gt; for visualizing notes and their relations&lt;/li&gt; 
 &lt;li&gt;Mind maps, based on &lt;a href="https://docs.mind-elixir.com/"&gt;Mind Elixir&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Note%20Types/Geo%20Map.md"&gt;Geo maps&lt;/a&gt; with location pins and GPX tracks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/scripts"&gt;Scripting&lt;/a&gt; - see &lt;a href="https://triliumnext.github.io/Docs/Wiki/advanced-showcases"&gt;Advanced showcases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/etapi"&gt;REST API&lt;/a&gt; for automation&lt;/li&gt; 
 &lt;li&gt;Scales well in both usability and performance upwards of 100 000 notes&lt;/li&gt; 
 &lt;li&gt;Touch optimized &lt;a href="https://triliumnext.github.io/Docs/Wiki/mobile-frontend"&gt;mobile frontend&lt;/a&gt; for smartphones and tablets&lt;/li&gt; 
 &lt;li&gt;Built-in &lt;a href="https://triliumnext.github.io/Docs/Wiki/themes"&gt;dark theme&lt;/a&gt;, support for user themes&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/evernote-import"&gt;Evernote&lt;/a&gt; and &lt;a href="https://triliumnext.github.io/Docs/Wiki/markdown"&gt;Markdown import &amp;amp; export&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/web-clipper"&gt;Web Clipper&lt;/a&gt; for easy saving of web content&lt;/li&gt; 
 &lt;li&gt;Customizable UI (sidebar buttons, user-defined widgets, ...)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Advanced%20Usage/Metrics.md"&gt;Metrics&lt;/a&gt;, along with a &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Advanced%20Usage/Metrics/grafana-dashboard.json"&gt;Grafana Dashboard&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;‚ú® Check out the following third-party resources/communities for more TriliumNext related goodies:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nriver/awesome-trilium"&gt;awesome-trilium&lt;/a&gt; for 3rd party themes, scripts, plugins and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://trilium.rocks/"&gt;TriliumRocks!&lt;/a&gt; for tutorials, guides, and much more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;‚ö†Ô∏è Why TriliumNext?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/zadam/trilium/issues/4620"&gt;The original Trilium project is in maintenance mode&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Migrating from Trilium?&lt;/h3&gt; 
&lt;p&gt;There are no special migration steps to migrate from a zadam/Trilium instance to a TriliumNext/Notes instance. Simply &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/#-installation"&gt;install TriliumNext/Notes&lt;/a&gt; as usual and it will use your existing database.&lt;/p&gt; 
&lt;p&gt;Versions up to and including &lt;a href="https://github.com/TriliumNext/Notes/releases/tag/v0.90.4"&gt;v0.90.4&lt;/a&gt; are compatible with the latest zadam/trilium version of &lt;a href="https://github.com/zadam/trilium/releases/tag/v0.63.7"&gt;v0.63.7&lt;/a&gt;. Any later versions of TriliumNext have their sync versions incremented.&lt;/p&gt; 
&lt;h2&gt;üìñ Documentation&lt;/h2&gt; 
&lt;p&gt;We're currently in the progress of moving the documentation to in-app (hit the &lt;code&gt;F1&lt;/code&gt; key within Trilium). As a result, there may be some missing parts until we've completed the migration. If you'd prefer to navigate through the documentation within GitHub, you can navigate the &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/"&gt;User Guide&lt;/a&gt; documentation.&lt;/p&gt; 
&lt;p&gt;Below are some quick links for your convenience to navigate the documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20&amp;amp;%20Setup/Server%20Installation.md"&gt;Server installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20&amp;amp;%20Setup/Server%20Installation/1.%20Installing%20the%20server/Using%20Docker.md"&gt;Docker installation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Installation%20%26%20Setup/Upgrading%20TriliumNext.md"&gt;Upgrading TriliumNext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/User%20Guide/User%20Guide/Basic%20Concepts%20and%20Features/Notes.md"&gt;Concepts and Features - Note&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://triliumnext.github.io/Docs/Wiki/patterns-of-personal-knowledge"&gt;Patterns of personal knowledge base&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Until we finish reorganizing the documentation, you may also want to &lt;a href="https://triliumnext.github.io/Docs"&gt;browse the old documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üí¨ Discuss with us&lt;/h2&gt; 
&lt;p&gt;Feel free to join our official conversations. We would love to hear what features, suggestions, or issues you may have!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#triliumnext:matrix.org"&gt;Matrix&lt;/a&gt; (For synchronous discussions.) 
  &lt;ul&gt; 
   &lt;li&gt;The &lt;code&gt;General&lt;/code&gt; Matrix room is also bridged to &lt;a href="xmpp:discuss@trilium.thisgreat.party?join"&gt;XMPP&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TriliumNext/Notes/discussions"&gt;Github Discussions&lt;/a&gt; (For asynchronous discussions.)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TriliumNext/Notes/issues"&gt;Github Issues&lt;/a&gt; (For bug reports and feature requests.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üèó Installation&lt;/h2&gt; 
&lt;h3&gt;Windows / MacOS&lt;/h3&gt; 
&lt;p&gt;Download the binary release for your platform from the &lt;a href="https://github.com/TriliumNext/Notes/releases/latest"&gt;latest release page&lt;/a&gt;, unzip the package and run the &lt;code&gt;trilium&lt;/code&gt; executable.&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;If your distribution is listed in the table below, use your distribution's package.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/triliumnext/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/triliumnext.svg?sanitize=true" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You may also download the binary release for your platform from the &lt;a href="https://github.com/TriliumNext/Notes/releases/latest"&gt;latest release page&lt;/a&gt;, unzip the package and run the &lt;code&gt;trilium&lt;/code&gt; executable.&lt;/p&gt; 
&lt;p&gt;TriliumNext is also provided as a Flatpak, but not yet published on FlatHub.&lt;/p&gt; 
&lt;h3&gt;Browser (any OS)&lt;/h3&gt; 
&lt;p&gt;If you use a server installation (see below), you can directly access the web interface (which is almost identical to the desktop app).&lt;/p&gt; 
&lt;p&gt;Currently only the latest versions of Chrome &amp;amp; Firefox are supported (and tested).&lt;/p&gt; 
&lt;h3&gt;Mobile&lt;/h3&gt; 
&lt;p&gt;To use TriliumNext on a mobile device, you can use a mobile web browser to access the mobile interface of a server installation (see below).&lt;/p&gt; 
&lt;p&gt;If you prefer a native Android app, you can use &lt;a href="https://apt.izzysoft.de/fdroid/index/apk/eu.fliegendewurst.triliumdroid"&gt;TriliumDroid&lt;/a&gt;. Report bugs and missing features at &lt;a href="https://github.com/FliegendeWurst/TriliumDroid"&gt;their repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See issue &lt;a href="https://github.com/TriliumNext/Notes/issues/72"&gt;https://github.com/TriliumNext/Notes/issues/72&lt;/a&gt; for more information on mobile app support.&lt;/p&gt; 
&lt;h3&gt;Server&lt;/h3&gt; 
&lt;p&gt;To install TriliumNext on your own server (including via Docker from &lt;a href="https://hub.docker.com/r/triliumnext/notes"&gt;Dockerhub&lt;/a&gt;) follow &lt;a href="https://triliumnext.github.io/Docs/Wiki/server-installation"&gt;the server installation docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;üíª Contribute&lt;/h2&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;If you are a native speaker, help us translate Trilium by heading over to our &lt;a href="https://hosted.weblate.org/engage/trilium/"&gt;Weblate page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Here's the language coverage we have so far:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/trilium/"&gt;&lt;img src="https://hosted.weblate.org/widget/trilium/multi-auto.svg?sanitize=true" alt="Translation status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Code&lt;/h3&gt; 
&lt;p&gt;Download the repository, install dependencies using &lt;code&gt;pnpm&lt;/code&gt; and then run the server (available at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm run server:start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;Download the repository, install dependencies using &lt;code&gt;pnpm&lt;/code&gt; and then run the environment required to edit the documentation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm nx run edit-docs:edit-docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Building the Executable&lt;/h3&gt; 
&lt;p&gt;Download the repository, install dependencies using &lt;code&gt;pnpm&lt;/code&gt; and then build the desktop app for Windows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/TriliumNext/Trilium.git
cd Trilium
pnpm install
pnpm nx --project=desktop electron-forge:make -- --arch=x64 --platform=win32
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details, see the &lt;a href="https://github.com/TriliumNext/Notes/raw/develop/docs/Developer%20Guide/Developer%20Guide/Building%20and%20deployment/Running%20a%20development%20build.md"&gt;development docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Developer Documentation&lt;/h3&gt; 
&lt;p&gt;Please view the &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/docs/Developer%20Guide/Developer%20Guide/Environment%20Setup.md"&gt;documentation guide&lt;/a&gt; for details. If you have more questions, feel free to reach out via the links described in the "Discuss with us" section above.&lt;/p&gt; 
&lt;h2&gt;üëè Shoutouts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ckeditor/ckeditor5"&gt;CKEditor 5&lt;/a&gt; - best WYSIWYG editor on the market, very interactive and listening team&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mar10/fancytree"&gt;FancyTree&lt;/a&gt; - very feature rich tree library without real competition. Trilium Notes would not be the same without it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codemirror/CodeMirror"&gt;CodeMirror&lt;/a&gt; - code editor with support for huge amount of languages&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsplumb/jsplumb"&gt;jsPlumb&lt;/a&gt; - visual connectivity library without competition. Used in &lt;a href="https://triliumnext.github.io/Docs/Wiki/relation-map.html"&gt;relation maps&lt;/a&gt; and &lt;a href="https://triliumnext.github.io/Docs/Wiki/note-map.html#link-map"&gt;link maps&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;ü§ù Support&lt;/h2&gt; 
&lt;p&gt;Support for the TriliumNext organization will be possible in the near future. For now, you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support continued development on TriliumNext by supporting our developers: &lt;a href="https://github.com/sponsors/eliandoran"&gt;eliandoran&lt;/a&gt; (See the &lt;a href="https://raw.githubusercontent.com/TriliumNext/Trilium/main/%5Bdevelopers%5D(%5Burl%5D(https://github.com/TriliumNext/Notes/graphs/contributors))"&gt;repository insights&lt;/a&gt; for a full list)&lt;/li&gt; 
 &lt;li&gt;Show a token of gratitude to the original Trilium developer (&lt;a href="https://github.com/sponsors/zadam"&gt;zadam&lt;/a&gt;) via &lt;a href="https://paypal.me/za4am"&gt;PayPal&lt;/a&gt; or Bitcoin (bitcoin:bc1qv3svjn40v89mnkre5vyvs2xw6y8phaltl385d2).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üîë License&lt;/h2&gt; 
&lt;p&gt;Copyright 2017-2025 zadam, Elian Doran, and other contributors&lt;/p&gt; 
&lt;p&gt;This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>umami-software/umami</title>
      <link>https://github.com/umami-software/umami</link>
      <description>&lt;p&gt;Umami is a modern, privacy-focused alternative to Google Analytics.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://content.umami.is/website/images/umami-logo.png" alt="Umami Logo" width="100" /&gt; &lt;/p&gt; 
&lt;h1 align="center"&gt;Umami&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;i&gt;Umami is a simple, fast, privacy-focused alternative to Google Analytics.&lt;/i&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami/releases"&gt; &lt;img src="https://img.shields.io/github/release/umami-software/umami.svg?sanitize=true" alt="GitHub Release" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/raw/master/LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/umami-software/umami.svg?sanitize=true" alt="MIT License" /&gt; &lt;/a&gt; &lt;a href="https://github.com/umami-software/umami/actions"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/umami-software/umami/ci.yml" alt="Build Status" /&gt; &lt;/a&gt; &lt;a href="https://analytics.umami.is/share/LGazGOecbDtaIwDr/umami.is" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Try%20Demo%20Now-Click%20Here-brightgreen" alt="Umami Demo" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;p&gt;A detailed getting started guide can be found at &lt;a href="https://umami.is/docs/"&gt;umami.is/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üõ† Installing from Source&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;A server with Node.js version 18.18 or newer&lt;/li&gt; 
 &lt;li&gt;A database. Umami supports &lt;a href="https://www.mariadb.org/"&gt;MariaDB&lt;/a&gt; (minimum v10.5), &lt;a href="https://www.mysql.com/"&gt;MySQL&lt;/a&gt; (minimum v8.0) and &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; (minimum v12.14) databases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Get the Source Code and Install Packages&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/umami-software/umami.git
cd umami
npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure Umami&lt;/h3&gt; 
&lt;p&gt;Create an &lt;code&gt;.env&lt;/code&gt; file with the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DATABASE_URL=connection-url
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The connection URL format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;postgresql://username:mypassword@localhost:5432/mydb
mysql://username:mypassword@localhost:3306/mydb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;The build step will create tables in your database if you are installing for the first time. It will also create a login user with username &lt;strong&gt;admin&lt;/strong&gt; and password &lt;strong&gt;umami&lt;/strong&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Start the Application&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;By default, this will launch the application on &lt;code&gt;http://localhost:3000&lt;/code&gt;. You will need to either &lt;a href="https://docs.nginx.com/nginx/admin-guide/web-server/reverse-proxy/"&gt;proxy&lt;/a&gt; requests from your web server or change the &lt;a href="https://nextjs.org/docs/api-reference/cli#production"&gt;port&lt;/a&gt; to serve the application directly.&lt;/em&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üê≥ Installing with Docker&lt;/h2&gt; 
&lt;p&gt;To build the Umami container and start up a Postgres database, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, to pull just the Umami Docker image with PostgreSQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:postgresql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or with MySQL support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull docker.umami.is/umami-software/umami:mysql-latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üîÑ Getting Updates&lt;/h2&gt; 
&lt;p&gt;To get the latest features, simply do a pull, install any new dependencies, and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update the Docker image, simply pull the new images and rebuild:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker compose pull
docker compose up --force-recreate -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;üõü Support&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/umami-software/umami"&gt; &lt;img src="https://img.shields.io/badge/GitHub--blue?style=social&amp;amp;logo=github" alt="GitHub" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/umami_software"&gt; &lt;img src="https://img.shields.io/badge/Twitter--blue?style=social&amp;amp;logo=twitter" alt="Twitter" /&gt; &lt;/a&gt; &lt;a href="https://linkedin.com/company/umami-software"&gt; &lt;img src="https://img.shields.io/badge/LinkedIn--blue?style=social&amp;amp;logo=linkedin" alt="LinkedIn" /&gt; &lt;/a&gt; &lt;a href="https://umami.is/discord"&gt; &lt;img src="https://img.shields.io/badge/Discord--blue?style=social&amp;amp;logo=discord" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>idosal/git-mcp</title>
      <link>https://github.com/idosal/git-mcp</link>
      <description>&lt;p&gt;Put an end to code hallucinations! GitMCP is a free, open-source, remote MCP server for any GitHub project&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GitMCP&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img width="884" alt="image" src="https://github.com/user-attachments/assets/2bf3e3df-556c-49c6-ab7b-36c279d53bba" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-what-is-gitmcp"&gt;What is GitMCP&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-features"&gt;Features&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-getting-started"&gt;Getting Started&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-how-it-works"&gt;How It Works&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-badge"&gt;Badge&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-examples"&gt;Examples&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-faq"&gt;FAQ&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-privacy"&gt;Privacy&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-contributing"&gt;Contributing&lt;/a&gt; ‚Ä¢ &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/#-license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/idosal1"&gt;&lt;img src="https://img.shields.io/twitter/follow/idosal1?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/liadyosef"&gt;&lt;img src="https://img.shields.io/twitter/follow/liadyosef?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://www.pulsemcp.com/servers/idosal-git-mcp"&gt;&lt;img src="https://www.pulsemcp.com/badge/top-pick/idosal-git-mcp" width="400" alt="Pulse MCP Badge" /&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;ü§î What is GitMCP?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Stop vibe-hallucinating and start vibe-coding!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://gitmcp.io"&gt;GitMCP&lt;/a&gt; is a free, open-source, remote &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/mcp"&gt;Model Context Protocol (MCP)&lt;/a&gt; server that transforms &lt;strong&gt;any&lt;/strong&gt; GitHub project (repositories or GitHub pages) into a documentation hub. It enables AI tools like Cursor to access up-to-date documentation and code, even if the LLM has never encountered them, thereby eliminating code hallucinations seamlessly.&lt;/p&gt; 
&lt;p&gt;GitMCP supports &lt;strong&gt;two flavors&lt;/strong&gt; -&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Specific Repository (&lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt; or &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;):&lt;/strong&gt; Use these when you primarily work with a select number of libraries. This ensures your AI assistant always targets the correct project, enhancing security and relevance by preventing access to unintended repositories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generic Server (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;):&lt;/strong&gt; Use this for maximum flexibility when you need to switch between different repositories frequently. The AI assistant will prompt you (or decide based on context) which repository to access for each request. Be mindful that this relies on correctly identifying the target repository each time.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;With GitMCP:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;AI assistants access the &lt;em&gt;latest&lt;/em&gt; documentation and code directly from the source.&lt;/li&gt; 
 &lt;li&gt;Get accurate API usage and reliable code examples.&lt;/li&gt; 
 &lt;li&gt;Work effectively even with niche, new, or rapidly changing libraries.&lt;/li&gt; 
 &lt;li&gt;Significantly reduced hallucinations and improved code correctness.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, this side-by-side comparison shows the result for the same one-shot prompt in Cursor when creating a &lt;a href="https://github.com/mrdoob/three.js"&gt;three.js&lt;/a&gt; scene -&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45"&gt;https://github.com/user-attachments/assets/fbf1b4a7-f9f0-4c0e-831c-4d64faae2c45&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;‚ú® Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;üòé &lt;strong&gt;Latest Documentation on ANY GitHub Project&lt;/strong&gt;: Grant your AI assistant seamless access to the GitHub project's documentation and code. The built-in smart search capabilities help find exactly what the AI needs without using too many tokens!&lt;/li&gt; 
 &lt;li&gt;üß† &lt;strong&gt;No More Hallucinations&lt;/strong&gt;: With GitMCP, your AI assistant can provide accurate and relevant answers to your questions.&lt;/li&gt; 
 &lt;li&gt;‚òÅÔ∏è &lt;strong&gt;Zero Setup&lt;/strong&gt;: GitMCP runs in the cloud. Simply add the chosen GitMCP URL as an MCP server in your IDE ‚Äî no downloads, installations, signups, or changes are required.&lt;/li&gt; 
 &lt;li&gt;üí¨ &lt;strong&gt;Embedded Chat&lt;/strong&gt;: Start quickly by chatting directly with the repository's documentation through our in-browser chat!&lt;/li&gt; 
 &lt;li&gt;‚úÖ &lt;strong&gt;Open, Free, and Private&lt;/strong&gt;: GitMCP is open-source and completely free to use. It doesn't collect personal information or store queries. You can even self-host it!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;
 &lt;video src="https://github.com/user-attachments/assets/2c3afaf9-6c08-436e-9efd-db8710554430"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;h2&gt;üöÄ Getting Started&lt;/h2&gt; 
&lt;p&gt;Using GitMCP is easy! Simply follow these steps:&lt;/p&gt; 
&lt;h3&gt;Step 1: Choose the type of server you want&lt;/h3&gt; 
&lt;p&gt;Choose one of these URL formats depending on what you want to connect to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For GitHub repositories: &lt;code&gt;gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For GitHub Pages sites: &lt;code&gt;{owner}.gitmcp.io/{repo}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;For a generic tool that supports any repository (dynamic): &lt;code&gt;gitmcp.io/docs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Replace &lt;code&gt;{owner}&lt;/code&gt; with the GitHub username or organization name, and &lt;code&gt;{repo}&lt;/code&gt; with the repository name.&lt;/p&gt; 
&lt;p&gt;For your convenience, you can also use the conversion tool on the landing page to format the GitHub URL into an MCP URL!&lt;/p&gt; 
&lt;h3&gt;Step 2: Connect your AI assistant&lt;/h3&gt; 
&lt;p&gt;Select your AI assistant from the options below and follow the configuration instructions:&lt;/p&gt; 
&lt;h4&gt;Connecting Cursor&lt;/h4&gt; 
&lt;p&gt;Update your Cursor configuration file at &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Claude Desktop&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;In Claude Desktop, go to Settings &amp;gt; Developer &amp;gt; Edit Config&lt;/li&gt; 
 &lt;li&gt;Replace the configuration with: &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Connecting Windsurf&lt;/h4&gt; 
&lt;p&gt;Update your Windsurf configuration file at &lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "serverUrl": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting VSCode&lt;/h4&gt; 
&lt;p&gt;Update your VSCode configuration file at &lt;code&gt;.vscode/mcp.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "gitmcp": {
      "type": "sse",
      "url": "https://gitmcp.io/{owner}/{repo}"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Cline&lt;/h4&gt; 
&lt;p&gt;Update your Cline configuration file at &lt;code&gt;~/Library/Application Support/Code/User/globalStorage/saoudrizwan.claude-dev/settings/cline_mcp_settings.json&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "gitmcp": {
      "url": "https://gitmcp.io/{owner}/{repo}",
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Highlight AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Highlight AI and click the plugins icon (@ symbol) in the sidebar&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Installed Plugins&lt;/strong&gt; at the top of the sidebar&lt;/li&gt; 
 &lt;li&gt;Select &lt;strong&gt;Custom Plugin&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Add a plugin using a custom SSE URL&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Plugin name: &lt;code&gt;gitmcp&lt;/code&gt; SSE URL: &lt;code&gt;https://gitmcp.io/{owner}/{repo}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more details on adding custom MCP servers to HighlightAI, refer to &lt;a href="https://docs.highlightai.com/learn/developers/plugins/custom-plugins-setup"&gt;the documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Connecting Augment Code&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Augment Code settings&lt;/li&gt; 
 &lt;li&gt;Navigate to the MCP section&lt;/li&gt; 
 &lt;li&gt;Add a new MCP server with the following details:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Name the MCP server: &lt;code&gt;git-mcp Docs&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Use this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx mcp-remote https://gitmcp.io/{owner}/{repo}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the following configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Connecting Msty AI&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open Msty Studio&lt;/li&gt; 
 &lt;li&gt;Go to Tools &amp;gt; Import Tools from JSON Clipboard&lt;/li&gt; 
 &lt;li&gt;Paste the following configuration:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "git-mcp Docs": {
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/{owner}/{repo}"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring MCP servers in Augment Code, visit &lt;a href="https://docs.augmentcode.com/setup-augment/mcp"&gt;the Augment Code documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Remember to replace &lt;code&gt;{owner}&lt;/code&gt; and &lt;code&gt;{repo}&lt;/code&gt; with the actual GitHub username/organization and repository name. You can also use the dynamic endpoint &lt;code&gt;https://gitmcp.io/docs&lt;/code&gt; to allow your AI to access any repository on demand.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;‚öô How It Works&lt;/h2&gt; 
&lt;p&gt;GitMCP connects your AI assistant to GitHub repositories using the Model Context Protocol (MCP), a standard that lets AI tools request additional information from external sources.&lt;/p&gt; 
&lt;p&gt;What happens when you use GitMCP:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;You provide the GitMCP URL&lt;/strong&gt; to your AI assistant (e.g., &lt;code&gt;gitmcp.io/microsoft/typescript&lt;/code&gt;). GitMCP exposes tools like documentation fetching, smart search, code search, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prompt the AI assistant&lt;/strong&gt; on documentation/code-related questions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI sends requests&lt;/strong&gt; to GitMCP to use its tools (with your approval).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitMCP executes the AI's request&lt;/strong&gt; and returns the requested data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your AI receives the information&lt;/strong&gt; and generates a more accurate, grounded response without hallucinations.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Supported Documentation&lt;/h3&gt; 
&lt;p&gt;GitMCP currently supports the following documents (in order of priority):&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://llmstxt.org"&gt;llms.txt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;AI-optimized version of the project's documentation&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;README.md&lt;/code&gt;/root&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üí° Examples&lt;/h2&gt; 
&lt;p&gt;Here are some examples of how to use GitMCP with different AI assistants and repositories:&lt;/p&gt; 
&lt;h3&gt;Example 1: Using Windsurf with a specific repository&lt;/h3&gt; 
&lt;p&gt;For the GitHub repository &lt;code&gt;https://github.com/microsoft/playwright-mcp&lt;/code&gt;, add &lt;code&gt;https://gitmcp.io/microsoft/playwright-mcp&lt;/code&gt; as an MCP server to Windsurf.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Claude:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"How do I use the Playwright MCP"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Windsurf will pull the relevant documentation from GitMCP to implement the memory feature correctly.&lt;/p&gt; 
&lt;h3&gt;Example 2: Using Cursor with a GitHub Pages site&lt;/h3&gt; 
&lt;p&gt;For the GitHub Pages site &lt;code&gt;langchain-ai.github.io/langgraph&lt;/code&gt;, add &lt;code&gt;https://langchain-ai.gitmcp.io/langgraph&lt;/code&gt; as an MCP server to Cursor.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to Cursor:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"Add memory to my LangGraph agent"&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Cursor will pull the relevant documentation and code from GitMCP to correctly implement the memory feature.&lt;/p&gt; 
&lt;h3&gt;Example 3: Using Claude Desktop with the dynamic endpoint&lt;/h3&gt; 
&lt;p&gt;You don't have to pick specific repositories. The generic &lt;code&gt;gitmcp.io/docs&lt;/code&gt; endpoint allows AI to pick the GitHub project on the fly!&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Prompt to any AI assistant:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"I want to learn about the OpenAI Whisper speech recognition model. Explain how it works.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Claude will pull the data from GitMCP and answer the question.&lt;/p&gt; 
&lt;h2&gt;üõ†Ô∏è Tools&lt;/h2&gt; 
&lt;p&gt;GitMCP provides AI assistants with several valuable tools to help them access, understand, and query GitHub repositories.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool gets the primary documentation from a GitHub repository. It works by retrieving relevant documentation (e.g., &lt;code&gt;llms.txt&lt;/code&gt;). This gives the AI a good overview of what the project is about&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For general questions about a project's purpose, features, or how to get started&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_documentation&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool lets the AI search through a repository's documentation by providing a specific search query. Instead of loading all the documentation (which could be very large), it uses intelligent search to find just the relevant parts.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; For specific questions about particular features, functions, or concepts within a project&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;fetch_url_content&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool helps the AI get information from links mentioned in the documentation. It retrieves the content from those links and converts it to a format the AI can easily read.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When documentation references external information that would help answer your question&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;search_&amp;lt;repo-name&amp;gt;_code&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;This tool searches through the actual code in the repository using GitHub's code search. It helps AI find specific code examples or implementation details.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;When it's useful:&lt;/strong&gt; When you want examples of how something is implemented or need technical details not covered in documentation&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When using the dynamic endpoint (&lt;code&gt;gitmcp.io/docs&lt;/code&gt;), these tools are named slightly differently (&lt;code&gt;fetch_generic_documentation&lt;/code&gt;, &lt;code&gt;search_generic_code&lt;/code&gt;, and &lt;code&gt;search_generic_documentation&lt;/code&gt;) and need additional information about which repository to access.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;üìä Badge&lt;/h2&gt; 
&lt;p&gt;GitMCP has a badge to your repository's README. It allows users to quickly access your documentation through their IDE or browser (using the embedded chat). It also showcases how many times your documentation has been accessed through GitMCP.&lt;/p&gt; 
&lt;p&gt;Example (&lt;code&gt;idosal/git-mcp&lt;/code&gt;): &lt;a href="https://gitmcp.io/idosal/git-mcp"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://gitmcp.io/badge/idosal/git-mcp" alt="GitMCP" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Adding the Badge to Your Repository&lt;/h3&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;README.md&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;[![GitMCP](https://img.shields.io/endpoint?url=https://gitmcp.io/badge/OWNER/REPO)](https://gitmcp.io/OWNER/REPO)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Replace &lt;code&gt;OWNER&lt;/code&gt; with your GitHub username or organization, and &lt;code&gt;REPO&lt;/code&gt; with your repository name.&lt;/p&gt; 
&lt;h3&gt;How We Count Views&lt;/h3&gt; 
&lt;p&gt;Increment for each tool call on the specific repository.&lt;/p&gt; 
&lt;h3&gt;Customizing the Badge&lt;/h3&gt; 
&lt;p&gt;You can customize the badge's appearance with parameters:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Parameter&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color for the badge value&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;aquamarine&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;?color=green&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;label&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Badge label&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GitMCP&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Documentation&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Please reach out!&lt;/p&gt; 
&lt;h2&gt;‚ùì FAQ&lt;/h2&gt; 
&lt;h3&gt;What is the Model Context Protocol?&lt;/h3&gt; 
&lt;p&gt;The &lt;a href="https://modelcontextprotocol.io/introduction"&gt;Model Context Protocol&lt;/a&gt; is a standard that allows AI assistants to request and receive additional context from external sources in a structured manner, enhancing their understanding and performance.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP work with any AI assistant?&lt;/h3&gt; 
&lt;p&gt;Yes, GitMCP is compatible with any AI assistant supporting the Model Context Protocol, including tools like Cursor, VSCode, Claude, etc.&lt;/p&gt; 
&lt;h3&gt;Is GitMCP compatible with all GitHub projects?&lt;/h3&gt; 
&lt;p&gt;Absolutely! GitMCP works with any public GitHub repository without requiring any modifications. It prioritizes the &lt;code&gt;llms.txt&lt;/code&gt; file and falls back to &lt;code&gt;README.md&lt;/code&gt; or other pages if the former is unavailable. Future updates aim to support additional documentation methods and even generate content dynamically.&lt;/p&gt; 
&lt;h3&gt;Does GitMCP cost money?&lt;/h3&gt; 
&lt;p&gt;No, GitMCP is a free service to the community with no associated costs.&lt;/p&gt; 
&lt;h2&gt;üîí Privacy&lt;/h2&gt; 
&lt;p&gt;GitMCP is deeply committed to its users' privacy. The service doesn't have access to or store any personally identifiable information as it doesn't require authentication. In addition, it doesn't store any queries sent by the agents. Moreover, as GitMCP is an open-source project, it can be deployed independently in your environment.&lt;/p&gt; 
&lt;p&gt;GitMCP only accesses content that is already publicly available and only when queried by a user. GitMCP does not automatically scrape repositories. Before accessing any GitHub Pages site, the code checks for &lt;code&gt;robots.txt&lt;/code&gt; rules and follows the directives set by site owners, allowing them to opt out. Please note that GitMCP doesn't permanently store data regarding the GitHub projects or their content.&lt;/p&gt; 
&lt;h2&gt;üë• Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions, feedback, and ideas! Please review our &lt;a href="https://github.com/idosal/git-mcp/raw/main/.github/CONTRIBUTING.md"&gt;contribution&lt;/a&gt; guidelines.&lt;/p&gt; 
&lt;h3&gt;Local Development Setup&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/idosal/git-mcp.git
cd git-mcp
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run locally for development&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
# or
pnpm dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Using MCP Inspector for Testing&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install the MCP Inspector tool:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx @modelcontextprotocol/inspector
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;In the inspector interface:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Set Transport Type to &lt;code&gt;SSE&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Enter your GitMCP URL (e.g., &lt;code&gt;http://localhost:5173/docs&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;Click "Connect"&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/idosal/git-mcp/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;p&gt;GitMCP is provided "as is" without warranty of any kind. While we strive to ensure the reliability and security of our service, we are not responsible for any damages or issues that may arise from its use. GitHub projects accessed through GitMCP are subject to their respective owners' terms and conditions. GitMCP is not affiliated with GitHub or any of the mentioned AI tools.&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#idosal/git-mcp&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=idosal/git-mcp&amp;amp;type=Timeline" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kortix-ai/suna</title>
      <link>https://github.com/kortix-ai/suna</link>
      <description>&lt;p&gt;Suna - Open Source Generalist AI Agent&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;Kortix ‚Äì Open Source Platform to Build, Manage and Train AI Agents&lt;/h1&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kortix-ai/suna/main/frontend/public/banner.png" alt="Kortix Screenshot" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;The complete platform for creating autonomous AI agents that work for you&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Kortix is a comprehensive open source platform that empowers you to build, manage, and train sophisticated AI agents for any use case. Create powerful agents that act autonomously on your behalf, from general-purpose assistants to specialized automation tools.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/license"&gt;&lt;img src="https://img.shields.io/badge/License-Apache--2.0-blue" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Py6pCBUUPw"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/Py6pCBUUPw?style=flat" alt="Discord Follow" /&gt;&lt;/a&gt; &lt;a href="https://x.com/kortixai"&gt;&lt;img src="https://img.shields.io/twitter/follow/kortixai" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kortix-ai/suna"&gt;&lt;img src="https://img.shields.io/github/stars/kortix-ai/suna" alt="GitHub Repo stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kortix-ai/suna/labels/bug"&gt;&lt;img src="https://img.shields.io/github/issues/kortix-ai/suna" alt="Issues" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;!-- Keep these links. Translations will automatically update with the README. --&gt; 
 &lt;p&gt;&lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=de"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=es"&gt;Espa√±ol&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=fr"&gt;fran√ßais&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=ja"&gt;Êó•Êú¨Ë™û&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=ko"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=pt"&gt;Portugu√™s&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=ru"&gt;–†—É—Å—Å–∫–∏–π&lt;/a&gt; | &lt;a href="https://www.readme-i18n.com/kortix-ai/suna?lang=zh"&gt;‰∏≠Êñá&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;üåü What Makes Kortix Special&lt;/h2&gt; 
&lt;h3&gt;ü§ñ Includes Suna ‚Äì Flagship Generalist AI Worker&lt;/h3&gt; 
&lt;p&gt;Meet Suna, our showcase agent that demonstrates the full power of the Kortix platform. Through natural conversation, Suna handles research, data analysis, browser automation, file management, and complex workflows ‚Äì showing you what's possible when you build with Kortix.&lt;/p&gt; 
&lt;h3&gt;üîß Build Custom Suna-Type Agents&lt;/h3&gt; 
&lt;p&gt;Create your own specialized agents tailored to specific domains, workflows, or business needs. Whether you need agents for customer service, data processing, content creation, or industry-specific tasks, Kortix provides the infrastructure and tools to build, deploy, and scale them.&lt;/p&gt; 
&lt;h3&gt;üöÄ Complete Platform Capabilities&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Browser Automation&lt;/strong&gt;: Navigate websites, extract data, fill forms, automate web workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Management&lt;/strong&gt;: Create, edit, and organize documents, spreadsheets, presentations, code&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Web Intelligence&lt;/strong&gt;: Crawling, search capabilities, data extraction and synthesis&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;System Operations&lt;/strong&gt;: Command-line execution, system administration, DevOps tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API Integrations&lt;/strong&gt;: Connect with external services and automate cross-platform workflows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Agent Builder&lt;/strong&gt;: Visual tools to configure, customize, and deploy agents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìã Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-what-makes-kortix-special"&gt;üåü What Makes Kortix Special&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-agent-examples--use-cases"&gt;üéØ Agent Examples &amp;amp; Use Cases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#%EF%B8%8F-platform-architecture"&gt;üèóÔ∏è Platform Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-quick-start"&gt;üöÄ Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-self-hosting"&gt;üè† Self-Hosting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-contributing"&gt;ü§ù Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/#-license"&gt;üìÑ License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üéØ Agent Examples &amp;amp; Use Cases&lt;/h2&gt; 
&lt;h3&gt;Suna - Your Generalist AI Worker&lt;/h3&gt; 
&lt;p&gt;Suna demonstrates the full capabilities of the Kortix platform as a versatile AI worker that can:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üîç Research &amp;amp; Analysis&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Conduct comprehensive web research across multiple sources&lt;/li&gt; 
 &lt;li&gt;Analyze documents, reports, and datasets&lt;/li&gt; 
 &lt;li&gt;Synthesize information and create detailed summaries&lt;/li&gt; 
 &lt;li&gt;Market research and competitive intelligence&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üåê Browser Automation&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Navigate complex websites and web applications&lt;/li&gt; 
 &lt;li&gt;Extract data from multiple pages automatically&lt;/li&gt; 
 &lt;li&gt;Fill forms and submit information&lt;/li&gt; 
 &lt;li&gt;Automate repetitive web-based workflows&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üìÅ File &amp;amp; Document Management&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create and edit documents, spreadsheets, presentations&lt;/li&gt; 
 &lt;li&gt;Organize and structure file systems&lt;/li&gt; 
 &lt;li&gt;Convert between different file formats&lt;/li&gt; 
 &lt;li&gt;Generate reports and documentation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üìä Data Processing &amp;amp; Analysis&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clean and transform datasets from various sources&lt;/li&gt; 
 &lt;li&gt;Perform statistical analysis and create visualizations&lt;/li&gt; 
 &lt;li&gt;Monitor KPIs and generate insights&lt;/li&gt; 
 &lt;li&gt;Integrate data from multiple APIs and databases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‚öôÔ∏è System Administration&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Execute command-line operations safely&lt;/li&gt; 
 &lt;li&gt;Manage system configurations and deployments&lt;/li&gt; 
 &lt;li&gt;Automate DevOps workflows&lt;/li&gt; 
 &lt;li&gt;Monitor system health and performance&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Build Your Own Specialized Agents&lt;/h3&gt; 
&lt;p&gt;The Kortix platform enables you to create agents tailored to specific needs:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;üéß Customer Service Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Handle support tickets and FAQ responses&lt;/li&gt; 
 &lt;li&gt;Manage user onboarding and training&lt;/li&gt; 
 &lt;li&gt;Escalate complex issues to human agents&lt;/li&gt; 
 &lt;li&gt;Track customer satisfaction and feedback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;‚úçÔ∏è Content Creation Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Generate marketing copy and social media posts&lt;/li&gt; 
 &lt;li&gt;Create technical documentation and tutorials&lt;/li&gt; 
 &lt;li&gt;Develop educational content and training materials&lt;/li&gt; 
 &lt;li&gt;Maintain content calendars and publishing schedules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üìà Sales &amp;amp; Marketing Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Qualify leads and manage CRM systems&lt;/li&gt; 
 &lt;li&gt;Schedule meetings and follow up with prospects&lt;/li&gt; 
 &lt;li&gt;Create personalized outreach campaigns&lt;/li&gt; 
 &lt;li&gt;Generate sales reports and forecasts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üî¨ Research &amp;amp; Development Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Conduct academic and scientific research&lt;/li&gt; 
 &lt;li&gt;Monitor industry trends and innovations&lt;/li&gt; 
 &lt;li&gt;Analyze patents and competitive landscapes&lt;/li&gt; 
 &lt;li&gt;Generate research reports and recommendations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;üè≠ Industry-Specific Agents&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Healthcare: Patient data analysis, appointment scheduling&lt;/li&gt; 
 &lt;li&gt;Finance: Risk assessment, compliance monitoring&lt;/li&gt; 
 &lt;li&gt;Legal: Document review, case research&lt;/li&gt; 
 &lt;li&gt;Education: Curriculum development, student assessment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each agent can be configured with custom tools, workflows, knowledge bases, and integrations specific to your requirements.&lt;/p&gt; 
&lt;h2&gt;üèóÔ∏è Platform Architecture&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/images/diagram.png" alt="Architecture Diagram" /&gt;&lt;/p&gt; 
&lt;p&gt;Kortix consists of four main components that work together to provide a complete AI agent development platform:&lt;/p&gt; 
&lt;h3&gt;üîß Backend API&lt;/h3&gt; 
&lt;p&gt;Python/FastAPI service that powers the agent platform with REST endpoints, thread management, agent orchestration, and LLM integration with Anthropic, OpenAI, and others via LiteLLM. Includes agent builder tools, workflow management, and extensible tool system.&lt;/p&gt; 
&lt;h3&gt;üñ•Ô∏è Frontend Dashboard&lt;/h3&gt; 
&lt;p&gt;Next.js/React application providing a comprehensive agent management interface with chat interfaces, agent configuration dashboards, workflow builders, monitoring tools, and deployment controls.&lt;/p&gt; 
&lt;h3&gt;üê≥ Agent Runtime&lt;/h3&gt; 
&lt;p&gt;Isolated Docker execution environments for each agent instance featuring browser automation, code interpreter, file system access, tool integration, security sandboxing, and scalable agent deployment.&lt;/p&gt; 
&lt;h3&gt;üóÑÔ∏è Database &amp;amp; Storage&lt;/h3&gt; 
&lt;p&gt;Supabase-powered data layer handling authentication, user management, agent configurations, conversation history, file storage, workflow state, analytics, and real-time subscriptions for live agent monitoring.&lt;/p&gt; 
&lt;h2&gt;üöÄ Quick Start&lt;/h2&gt; 
&lt;p&gt;Get your Kortix platform running in minutes with our automated setup wizard:&lt;/p&gt; 
&lt;h3&gt;1Ô∏è‚É£ Clone the Repository&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/kortix-ai/suna.git
cd suna
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;2Ô∏è‚É£ Run the Setup Wizard&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python setup.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The wizard will guide you through 14 steps with progress saving, so you can resume if interrupted.&lt;/p&gt; 
&lt;h3&gt;3Ô∏è‚É£ Start the Platform&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python start.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;That's it! Your Kortix platform will be running with Suna ready to assist you.&lt;/p&gt; 
&lt;h2&gt;üè† Self-Hosting&lt;/h2&gt; 
&lt;p&gt;Kortix can be self-hosted on your own infrastructure using our comprehensive setup wizard, giving you complete control over your AI agent platform. For a complete guide to self-hosting Kortix, please refer to our &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Self-Hosting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;üîß Setup Process Includes&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;üèóÔ∏è Infrastructure&lt;/strong&gt;: Supabase project setup for database and authentication&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;‚ö° Performance&lt;/strong&gt;: Redis configuration for caching and session management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üõ°Ô∏è Security&lt;/strong&gt;: Daytona setup for secure agent execution environments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ü§ñ AI Integration&lt;/strong&gt;: LLM providers (Anthropic, OpenAI, OpenRouter, etc.)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üåê Web Capabilities&lt;/strong&gt;: Search and scraping (Tavily, Firecrawl)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìã Workflows&lt;/strong&gt;: QStash for background job processing&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üîó Automation&lt;/strong&gt;: Webhook handling for automated tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;üìä Data Sources&lt;/strong&gt;: Optional RapidAPI integrations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;üìö Manual Setup&lt;/h3&gt; 
&lt;p&gt;For advanced users who prefer manual configuration, see the &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Self-Hosting Guide&lt;/a&gt; for detailed manual setup instructions.&lt;/p&gt; 
&lt;p&gt;The wizard will guide you through all necessary steps to get your Kortix platform up and running. For detailed instructions, troubleshooting tips, and advanced configuration options, see the &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Self-Hosting Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;ü§ù Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions from the community! Whether you're fixing bugs, adding features, or improving documentation, your help makes Kortix better for everyone.&lt;/p&gt; 
&lt;p&gt;Please see our &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;How to set up your development environment&lt;/li&gt; 
 &lt;li&gt;Code style and standards&lt;/li&gt; 
 &lt;li&gt;Pull request process&lt;/li&gt; 
 &lt;li&gt;Community guidelines&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;üìÑ License&lt;/h2&gt; 
&lt;p&gt;Kortix is licensed under the Apache License, Version 2.0. See &lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;Ready to build your first AI agent?&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/kortix-ai/suna/main/docs/SELF-HOSTING.md"&gt;Get Started&lt;/a&gt; ‚Ä¢ &lt;a href="https://discord.gg/Py6pCBUUPw"&gt;Join Discord&lt;/a&gt; ‚Ä¢ &lt;a href="https://x.com/kortixai"&gt;Follow on Twitter&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>freestyle-sh/Adorable</title>
      <link>https://github.com/freestyle-sh/Adorable</link>
      <description>&lt;p&gt;Open Source Lovable&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/freestyle-sh/Adorable/main/icon.png" alt="description" width="75" /&gt; &lt;/p&gt; 
&lt;h1&gt;Adorable&lt;/h1&gt; 
&lt;p&gt;Open-source version of &lt;strong&gt;Lovable&lt;/strong&gt; - an AI agent that can make websites and apps through a chat interface.&lt;/p&gt; 
&lt;p&gt;For guidance on building app builders with AI, see the &lt;a href="https://docs.freestyle.sh/guides/app-builder"&gt;Freestyle guide on Building an App Builder&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat interface for interacting with AI code assistants&lt;/li&gt; 
 &lt;li&gt;Patch-based code editing with user approval&lt;/li&gt; 
 &lt;li&gt;Git integration for version control&lt;/li&gt; 
 &lt;li&gt;Preview capabilities for code changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup Instructions&lt;/h2&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js&lt;/li&gt; 
 &lt;li&gt;PostgreSQL database (&lt;a href="https://neon.tech"&gt;Neon&lt;/a&gt; is easy and has a good free tier)&lt;/li&gt; 
 &lt;li&gt;Redis (for caching and session management)&lt;/li&gt; 
 &lt;li&gt;Anthropic API key&lt;/li&gt; 
 &lt;li&gt;Freestyle API key&lt;/li&gt; 
 &lt;li&gt;Morph API key (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/freestyle-sh/adorable
cd adorable
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Get a Freestyle API key&lt;/p&gt; &lt;p&gt;Head to &lt;a href="https://admin.freestyle.sh/dashboard/api-tokens"&gt;our API keys page&lt;/a&gt; to get yours. We're totally free to use right now!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up environment variables: Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory with the following variables:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# Database
DATABASE_URL=postgresql://username:password@localhost:5432/adorable

# Anthropic API
ANTHROPIC_API_KEY=your_anthropic_api_key

# Freestyle API
FREESTYLE_API_KEY=your_freestyle_api_key
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Initialize the database:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx drizzle-kit push
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up Redis&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The easiest way to run Redis locally is with Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --name adorable-redis -p 6379:6379 -d redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start a Redis server on port 6379. If you already have Redis running, you can skip this step.&lt;/p&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;.env&lt;/code&gt; file (if not already present):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;REDIS_URL=redis://localhost:6379
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;Set up &lt;a href="https://stack-auth.com"&gt;Stack Auth&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Go to the &lt;a href="https://app.stack-auth.com"&gt;Stack Auth dashboard&lt;/a&gt; and create a new application. In Configuration &amp;gt; Domains, enable &lt;code&gt;Allow all localhost callbacks for development&lt;/code&gt; to be able to sign in locally.&lt;/p&gt; 
&lt;p&gt;You'll need to add the following environment variables to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;NEXT_PUBLIC_STACK_PROJECT_ID=&amp;lt;your-project-id&amp;gt;
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=&amp;lt;your-publishable-client-key&amp;gt;
STACK_SECRET_SERVER_KEY=&amp;lt;your-secret-server-key&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Add a Preview Domain (optional)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Go to the &lt;a href="https://admin.freestyle.sh/dashboard/domains"&gt;Freestyle dashboard&lt;/a&gt; and verify a new domain. Then follow the &lt;a href="https://docs.freestyle.sh/web/deploy-to-custom-domain"&gt;DNS Instructions&lt;/a&gt; to point your domain to Freestyle.&lt;/p&gt; 
&lt;p&gt;Finally, add the following environment variable to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;PREVIEW_DOMAIN=&amp;lt;your-domain&amp;gt; # formatted like adorable.app
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="8"&gt; 
 &lt;li&gt;Add Morph for Fast Apply (optional)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Get a Morph API key from &lt;a href="https://morphllm.com"&gt;morphllm.com&lt;/a&gt; and add it to your &lt;code&gt;.env&lt;/code&gt; file to enable the fast edit tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;MORPH_API_KEY=&amp;lt;your-morph-api-key&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This automatically enables the Morph fast edit tool which provides faster code modifications.&lt;/p&gt; 
&lt;ol start="9"&gt; 
 &lt;li&gt; &lt;p&gt;Run the development server:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developer Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freestyle-sh/Adorable/main/docs/forking.md"&gt;Forking Guide&lt;/a&gt; - Comprehensive guide for developers working with this codebase&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;For production deployment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the included deployment script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./deploy.sh
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Kilo-Org/kilocode</title>
      <link>https://github.com/Kilo-Org/kilocode</link>
      <description>&lt;p&gt;Open Source AI coding assistant for planning, building, and fixing code. We're a superset of Roo, Cline, and our own features. Follow us: kilocode.ai/social&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/visual-studio-marketplace/v/kilocode.Kilo-Code.svg?label=VS%20Code%20Marketplace" alt="VS Code Marketplace" /&gt;&lt;/a&gt; 
 &lt;!--&lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;&lt;img src="https://img.shields.io/badge/Get%20$20%20of%20free%20tokens-green?logo=claude&amp;logoColor=white" alt="Get $20 of tokens for free"&gt;&lt;/a&gt;--&gt; &lt;a href="https://x.com/kilo_code"&gt;&lt;img src="https://img.shields.io/twitter/follow/kilo_code?style=flat&amp;amp;logo=x&amp;amp;color=555" alt="X (Twitter)" /&gt;&lt;/a&gt; &lt;a href="https://blog.kilocode.ai"&gt;&lt;img src="https://img.shields.io/badge/Blog-555?style=flat&amp;amp;logo=substack&amp;amp;logoColor=white" alt="Substack Blog" /&gt;&lt;/a&gt; &lt;a href="https://kilocode.ai/discord"&gt;&lt;img src="https://img.shields.io/discord/1349288496988160052?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://www.reddit.com/r/kilocode/"&gt;&lt;img src="https://img.shields.io/reddit/subreddit-subscribers/kilocode?style=flat&amp;amp;logo=reddit&amp;amp;logoColor=white" alt="Reddit" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;üöÄ Kilo Code&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Open-source VS Code AI agent. Merged features from &lt;a href="https://github.com/RooVetGit/Roo-Code"&gt;Roo Code&lt;/a&gt; and &lt;a href="https://github.com/cline/cline"&gt;Cline&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ú® Generate code from natural language&lt;/li&gt; 
 &lt;li&gt;‚úÖ Checks its own work&lt;/li&gt; 
 &lt;li&gt;üß™ Run terminal commands&lt;/li&gt; 
 &lt;li&gt;üåê Automate the browser&lt;/li&gt; 
 &lt;li&gt;ü§ñ Latest AI models&lt;/li&gt; 
 &lt;li&gt;üéÅ API keys optional&lt;/li&gt; 
 &lt;li&gt;üí° &lt;strong&gt;$20 free credits for Gemini 2.5 Pro, Claude 4 Sonnet &amp;amp; Opus, and GPT-4.1&lt;/strong&gt;&lt;br /&gt;Share feedback and earn more credits!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/Kilo-Org/kilocode/refs/heads/main/kilo.gif" width="100%" /&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai/vscode-marketplace?utm_source=Readme"&gt;VS Code Marketplace&lt;/a&gt; (download)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kilocode.ai"&gt;Official KiloCode.ai Home page&lt;/a&gt; (learn more)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Code Generation:&lt;/strong&gt; Generate code using natural language.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Task Automation:&lt;/strong&gt; Automate repetitive coding tasks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Refactoring:&lt;/strong&gt; Refactor and improve existing code.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server Marketplace&lt;/strong&gt;: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi Mode&lt;/strong&gt;: Plan with Architect, Code with Coder, and Debug with Debugger, and make your own custom modes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to get started with Kilo Code&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install the Kilo Code extension from the &lt;a href="https://marketplace.visualstudio.com/items?itemName=kilocode.Kilo-Code"&gt;VS Code Marketplace&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Log in with your Google Account to get $20 in free Claude 4 Sonnet &amp;amp; Opus credits.&lt;/li&gt; 
 &lt;li&gt;Start using the extension. Here's a video to help you get started (just click on the image below and you'll be redirected to YouTube):&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/pqGfYXgrhig"&gt;&lt;img src="https://img.youtube.com/vi/pqGfYXgrhig/maxresdefault.jpg" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Difference between Roo Code and Cline&lt;/h2&gt; 
&lt;p&gt;We're doing our best to combine the best of both worlds. Kilo Code combines all features of Cline, Roo, and adds a few of our own additions. It has the best features of both, and we're working on making it even better!&lt;/p&gt; 
&lt;p&gt;No need to fiddle with API keys, Kilo Code ships with the latest AI models plugged in, including Claude 4 Sonnet and Opus and Gemini 2.5 Pro.&lt;/p&gt; 
&lt;p&gt;Kilo Code is a direct fork from Roo Code, but also includes the following features from Cline (and more):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MCP Server Marketplace: Easily find, and use MCP servers to extend the agent capabilities.&lt;/li&gt; 
 &lt;li&gt;System notifications: Get notified when the agent is done with a task.&lt;/li&gt; 
 &lt;li&gt;Easy model connection: with bigger free tier.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extension Development&lt;/h2&gt; 
&lt;p&gt;For details on building and developing the extension, see &lt;a href="https://raw.githubusercontent.com/Kilo-Org/kilocode/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>backstage/backstage</title>
      <link>https://github.com/backstage/backstage</link>
      <description>&lt;p&gt;Backstage is an open framework for building developer portals&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://backstage.io/"&gt;&lt;img src="https://raw.githubusercontent.com/backstage/backstage/master/docs/assets/headline.png" alt="headline" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;&lt;a href="https://backstage.io"&gt;Backstage&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/backstage/backstage/master/README-ko_kr.md"&gt;ÌïúÍµ≠Ïñ¥&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/backstage/backstage/master/README-zh_Hans.md"&gt;‰∏≠ÊñáÁâà&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/backstage/backstage/master/README-fr_FR.md"&gt;Fran√ßais&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.cncf.io/projects"&gt;&lt;img src="https://img.shields.io/badge/cncf%20status-incubation-blue.svg?sanitize=true" alt="CNCF Status" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/backstage-687207715902193673"&gt;&lt;img src="https://img.shields.io/discord/687207715902193673?logo=discord&amp;amp;label=Discord&amp;amp;color=5865F2&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/code_style-prettier-ff69b4.svg?sanitize=true" alt="Code style" /&gt; &lt;a href="https://codecov.io/gh/backstage/backstage"&gt;&lt;img src="https://img.shields.io/codecov/c/github/backstage/backstage" alt="Codecov" /&gt;&lt;/a&gt; &lt;a href="https://github.com/backstage/backstage/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/backstage/backstage" alt="" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/7678"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/7678/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/backstage/backstage"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/backstage/backstage/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Backstage?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://backstage.io/"&gt;Backstage&lt;/a&gt; is an open source framework for building developer portals. Powered by a centralized software catalog, Backstage restores order to your microservices and infrastructure and enables your product teams to ship high-quality code quickly without compromising autonomy.&lt;/p&gt; 
&lt;p&gt;Backstage unifies all your infrastructure tooling, services, and documentation to create a streamlined development environment from end to end.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/backstage/backstage/master/docs/assets/header.png" alt="software-catalog" /&gt;&lt;/p&gt; 
&lt;p&gt;Out of the box, Backstage includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs/features/software-catalog/"&gt;Backstage Software Catalog&lt;/a&gt; for managing all your software such as microservices, libraries, data pipelines, websites, and ML models&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs/features/software-templates/"&gt;Backstage Software Templates&lt;/a&gt; for quickly spinning up new projects and standardizing your tooling with your organization‚Äôs best practices&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs/features/techdocs/"&gt;Backstage TechDocs&lt;/a&gt; for making it easy to create, maintain, find, and use technical documentation, using a "docs like code" approach&lt;/li&gt; 
 &lt;li&gt;Plus, a growing ecosystem of &lt;a href="https://github.com/backstage/backstage/tree/master/plugins"&gt;open source plugins&lt;/a&gt; that further expand Backstage‚Äôs customizability and functionality&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Backstage was created by Spotify but is now hosted by the &lt;a href="https://www.cncf.io"&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; as an Incubation level project. For more information, see the &lt;a href="https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation"&gt;announcement&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Project roadmap&lt;/h2&gt; 
&lt;p&gt;For information about the detailed project roadmap including delivered milestones, see &lt;a href="https://backstage.io/docs/overview/roadmap"&gt;the Roadmap&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;To start using Backstage, see the &lt;a href="https://backstage.io/docs/getting-started"&gt;Getting Started documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The documentation of Backstage includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs"&gt;Main documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs/features/software-catalog/"&gt;Software Catalog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs/overview/architecture-overview"&gt;Architecture&lt;/a&gt; (&lt;a href="https://backstage.io/docs/architecture-decisions/"&gt;Decisions&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs/dls/design"&gt;Designing for Backstage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/storybook"&gt;Storybook - UI components&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;To engage with our community, you can use the following resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/backstage-687207715902193673"&gt;Discord chatroom&lt;/a&gt; - Get support or discuss the project&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/backstage/backstage/raw/master/CONTRIBUTING.md"&gt;Contributing to Backstage&lt;/a&gt; - Start here if you want to contribute&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/backstage/backstage/labels/rfc"&gt;RFCs&lt;/a&gt; - Help shape the technical direction&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/docs/faq"&gt;FAQ&lt;/a&gt; - Frequently Asked Questions&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/backstage/backstage/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; - This is how we roll&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/backstage/backstage/master/ADOPTERS.md"&gt;Adopters&lt;/a&gt; - Companies already using Backstage&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://backstage.io/blog/"&gt;Blog&lt;/a&gt; - Announcements and updates&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spoti.fi/backstagenewsletter"&gt;Newsletter&lt;/a&gt; - Subscribe to our email newsletter&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/backstage/community"&gt;Backstage Community Sessions&lt;/a&gt; - Join monthly meetups and explore Backstage community&lt;/li&gt; 
 &lt;li&gt;Give us a star ‚≠êÔ∏è - If you are using Backstage or think it is an interesting project, we would love a star ‚ù§Ô∏è&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Governance&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/backstage/community/raw/main/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt; document in the &lt;a href="https://github.com/backstage/community"&gt;backstage/community&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Copyright 2020-2025 ¬© The Backstage Authors. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page: &lt;a href="https://www.linuxfoundation.org/trademark-usage"&gt;https://www.linuxfoundation.org/trademark-usage&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0: &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;http://www.apache.org/licenses/LICENSE-2.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;Please report sensitive security issues using Spotify's &lt;a href="https://hackerone.com/spotify"&gt;bug-bounty program&lt;/a&gt; rather than GitHub.&lt;/p&gt; 
&lt;p&gt;For further details, see our complete &lt;a href="https://raw.githubusercontent.com/backstage/backstage/master/SECURITY.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>menloresearch/jan</title>
      <link>https://github.com/menloresearch/jan</link>
      <description>&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Local AI Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/menloresearch/jan/dev/docs/src/pages/docs/_assets/jan-app.png" alt="Jan AI" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/menloresearch/jan" /&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/menloresearch/jan" /&gt; &lt;img alt="Github Contributors" src="https://img.shields.io/github/contributors/menloresearch/jan" /&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/menloresearch/jan" /&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://jan.ai/docs/quickstart"&gt;Getting Started&lt;/a&gt; - &lt;a href="https://jan.ai/docs"&gt;Docs&lt;/a&gt; - &lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - &lt;a href="https://github.com/menloresearch/jan/issues"&gt;Bug reports&lt;/a&gt; - &lt;a href="https://discord.gg/AsJ8krTT3N"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jan is an AI assistant that can run 100% offline on your device. Download and run LLMs with &lt;strong&gt;full control&lt;/strong&gt; and &lt;strong&gt;privacy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started is by downloading one of the following versions for your respective operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Stable&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Nightly&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;macOS&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (deb)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (AppImage)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Download from &lt;a href="https://jan.ai/"&gt;jan.ai&lt;/a&gt; or &lt;a href="https://github.com/menloresearch/jan/releases"&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local AI Models&lt;/strong&gt;: Download and run LLMs (Llama, Gemma, Qwen, etc.) from HuggingFace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Integration&lt;/strong&gt;: Connect to OpenAI, Anthropic, Mistral, Groq, and others&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Assistants&lt;/strong&gt;: Create specialized AI assistants for your tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI-Compatible API&lt;/strong&gt;: Local server at &lt;code&gt;localhost:1337&lt;/code&gt; for other applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: MCP integration for enhanced capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt;: Everything runs locally when you want it to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;For those who enjoy the scenic route:&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js ‚â• 20.0.0&lt;/li&gt; 
 &lt;li&gt;Yarn ‚â• 1.22.0&lt;/li&gt; 
 &lt;li&gt;Make ‚â• 3.81&lt;/li&gt; 
 &lt;li&gt;Rust (for Tauri)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This handles everything: installs dependencies, builds core components, and launches the app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available make targets:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Mise (easier)&lt;/h3&gt; 
&lt;p&gt;You can also run with &lt;a href="https://mise.jdx.dev/"&gt;mise&lt;/a&gt;, which is a bit easier as it ensures Node.js, Rust, and other dependency versions are automatically managed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan

# Install mise (if not already installed)
curl https://mise.run | sh

# Install tools and start development
mise install    # installs Node.js, Rust, and other tools
mise dev        # runs the full development setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available mise commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;mise dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise tasks&lt;/code&gt; - List all available tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn build:core
yarn build:extensions
yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Minimum specs for a decent experience:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 13.6+ (8GB RAM for 3B models, 16GB for 7B, 32GB for 13B)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 10+ with GPU support for NVIDIA/AMD/Intel Arc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Most distributions work, GPU acceleration available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed compatibility, check our &lt;a href="https://jan.ai/docs/desktop/mac"&gt;installation guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If things go sideways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check our &lt;a href="https://jan.ai/docs/troubleshooting"&gt;troubleshooting docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy your error logs and system specs&lt;/li&gt; 
 &lt;li&gt;Ask for help in our &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; &lt;code&gt;#üÜò|jan-help&lt;/code&gt; channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions welcome. See &lt;a href="https://raw.githubusercontent.com/menloresearch/jan/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for the full spiel.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/docs"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/api-reference"&gt;API Reference&lt;/a&gt; - For the technically inclined&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/menloresearch/jan/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@jan.ai"&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:hr@jan.ai"&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 - Because sharing is caring.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Built on the shoulders of giants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scalar/scalar"&gt;Scalar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>fastapi/full-stack-fastapi-template</title>
      <link>https://github.com/fastapi/full-stack-fastapi-template</link>
      <description>&lt;p&gt;Full stack, modern web application template. Using FastAPI, React, SQLModel, PostgreSQL, Docker, GitHub Actions, automatic HTTPS and more.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Full Stack FastAPI Template&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template/actions?query=workflow%3ATest" target="_blank"&gt;&lt;img src="https://github.com/fastapi/full-stack-fastapi-template/workflows/Test/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://coverage-badge.samuelcolvin.workers.dev/redirect/fastapi/full-stack-fastapi-template" target="_blank"&gt;&lt;img src="https://coverage-badge.samuelcolvin.workers.dev/fastapi/full-stack-fastapi-template.svg?sanitize=true" alt="Coverage" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Technology Stack and Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;‚ö° &lt;a href="https://fastapi.tiangolo.com"&gt;&lt;strong&gt;FastAPI&lt;/strong&gt;&lt;/a&gt; for the Python backend API. 
  &lt;ul&gt; 
   &lt;li&gt;üß∞ &lt;a href="https://sqlmodel.tiangolo.com"&gt;SQLModel&lt;/a&gt; for the Python SQL database interactions (ORM).&lt;/li&gt; 
   &lt;li&gt;üîç &lt;a href="https://docs.pydantic.dev"&gt;Pydantic&lt;/a&gt;, used by FastAPI, for the data validation and settings management.&lt;/li&gt; 
   &lt;li&gt;üíæ &lt;a href="https://www.postgresql.org"&gt;PostgreSQL&lt;/a&gt; as the SQL database.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üöÄ &lt;a href="https://react.dev"&gt;React&lt;/a&gt; for the frontend. 
  &lt;ul&gt; 
   &lt;li&gt;üíÉ Using TypeScript, hooks, Vite, and other parts of a modern frontend stack.&lt;/li&gt; 
   &lt;li&gt;üé® &lt;a href="https://chakra-ui.com"&gt;Chakra UI&lt;/a&gt; for the frontend components.&lt;/li&gt; 
   &lt;li&gt;ü§ñ An automatically generated frontend client.&lt;/li&gt; 
   &lt;li&gt;üß™ &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for End-to-End testing.&lt;/li&gt; 
   &lt;li&gt;ü¶á Dark mode support.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;üêã &lt;a href="https://www.docker.com"&gt;Docker Compose&lt;/a&gt; for development and production.&lt;/li&gt; 
 &lt;li&gt;üîí Secure password hashing by default.&lt;/li&gt; 
 &lt;li&gt;üîë JWT (JSON Web Token) authentication.&lt;/li&gt; 
 &lt;li&gt;üì´ Email based password recovery.&lt;/li&gt; 
 &lt;li&gt;‚úÖ Tests with &lt;a href="https://pytest.org"&gt;Pytest&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;üìû &lt;a href="https://traefik.io"&gt;Traefik&lt;/a&gt; as a reverse proxy / load balancer.&lt;/li&gt; 
 &lt;li&gt;üö¢ Deployment instructions using Docker Compose, including how to set up a frontend Traefik proxy to handle automatic HTTPS certificates.&lt;/li&gt; 
 &lt;li&gt;üè≠ CI (continuous integration) and CD (continuous deployment) based on GitHub Actions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Dashboard Login&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/login.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Admin&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Create User&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-create.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Items&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-items.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - User Settings&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-user-settings.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Dashboard - Dark Mode&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/dashboard-dark.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Interactive API Documentation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/fastapi/full-stack-fastapi-template"&gt;&lt;img src="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/img/docs.png" alt="API docs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;How To Use It&lt;/h2&gt; 
&lt;p&gt;You can &lt;strong&gt;just fork or clone&lt;/strong&gt; this repository and use it as is.&lt;/p&gt; 
&lt;p&gt;‚ú® It just works. ‚ú®&lt;/p&gt; 
&lt;h3&gt;How to Use a Private Repository&lt;/h3&gt; 
&lt;p&gt;If you want to have a private repository, GitHub won't allow you to simply fork it as it doesn't allow changing the visibility of forks.&lt;/p&gt; 
&lt;p&gt;But you can do the following:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Create a new GitHub repo, for example &lt;code&gt;my-full-stack&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Clone this repository manually, set the name with the name of the project you want to use, for example &lt;code&gt;my-full-stack&lt;/code&gt;:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone git@github.com:fastapi/full-stack-fastapi-template.git my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Enter into the new directory:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd my-full-stack
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set the new origin to your new repository, copy it from the GitHub interface, for example:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote set-url origin git@github.com:octocat/my-full-stack.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Add this repo as another "remote" to allow you to get updates later:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote add upstream git@github.com:fastapi/full-stack-fastapi-template.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Push the code to your new repository:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Update From the Original Template&lt;/h3&gt; 
&lt;p&gt;After cloning the repository, and after doing changes, you might want to get the latest changes from this original template.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure you added the original repository as a remote, you can check it with:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git remote -v

origin    git@github.com:octocat/my-full-stack.git (fetch)
origin    git@github.com:octocat/my-full-stack.git (push)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (fetch)
upstream    git@github.com:fastapi/full-stack-fastapi-template.git (push)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull the latest changes without merging:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull --no-commit upstream master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will download the latest changes from this template without committing them, that way you can check everything is right before committing.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;If there are conflicts, solve them in your editor.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Once you are done, commit the changes:&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git merge --continue
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configure&lt;/h3&gt; 
&lt;p&gt;You can then update configs in the &lt;code&gt;.env&lt;/code&gt; files to customize your configurations.&lt;/p&gt; 
&lt;p&gt;Before deploying it, make sure you change at least the values for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;SECRET_KEY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;FIRST_SUPERUSER_PASSWORD&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;POSTGRES_PASSWORD&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can (and should) pass these as environment variables from secrets.&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt; docs for more details.&lt;/p&gt; 
&lt;h3&gt;Generate Secret Keys&lt;/h3&gt; 
&lt;p&gt;Some environment variables in the &lt;code&gt;.env&lt;/code&gt; file have a default value of &lt;code&gt;changethis&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You have to change them with a secret key, to generate secret keys you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;python -c "import secrets; print(secrets.token_urlsafe(32))"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Copy the content and use that as password / secret key. And run that again to generate another secure key.&lt;/p&gt; 
&lt;h2&gt;How To Use It - Alternative With Copier&lt;/h2&gt; 
&lt;p&gt;This repository also supports generating a new project using &lt;a href="https://copier.readthedocs.io"&gt;Copier&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;It will copy all the files, ask you configuration questions, and update the &lt;code&gt;.env&lt;/code&gt; files with your answers.&lt;/p&gt; 
&lt;h3&gt;Install Copier&lt;/h3&gt; 
&lt;p&gt;You can install Copier with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or better, if you have &lt;a href="https://pipx.pypa.io/"&gt;&lt;code&gt;pipx&lt;/code&gt;&lt;/a&gt;, you can run it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx install copier
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: If you have &lt;code&gt;pipx&lt;/code&gt;, installing copier is optional, you could run it directly.&lt;/p&gt; 
&lt;h3&gt;Generate a Project With Copier&lt;/h3&gt; 
&lt;p&gt;Decide a name for your new project's directory, you will use it below. For example, &lt;code&gt;my-awesome-project&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Go to the directory that will be the parent of your project, and run the command with your project's name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you have &lt;code&gt;pipx&lt;/code&gt; and you didn't install &lt;code&gt;copier&lt;/code&gt;, you can run it directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pipx run copier copy https://github.com/fastapi/full-stack-fastapi-template my-awesome-project --trust
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; the &lt;code&gt;--trust&lt;/code&gt; option is necessary to be able to execute a &lt;a href="https://github.com/fastapi/full-stack-fastapi-template/raw/master/.copier/update_dotenv.py"&gt;post-creation script&lt;/a&gt; that updates your &lt;code&gt;.env&lt;/code&gt; files.&lt;/p&gt; 
&lt;h3&gt;Input Variables&lt;/h3&gt; 
&lt;p&gt;Copier will ask you for some data, you might want to have at hand before generating the project.&lt;/p&gt; 
&lt;p&gt;But don't worry, you can just update any of that in the &lt;code&gt;.env&lt;/code&gt; files afterwards.&lt;/p&gt; 
&lt;p&gt;The input variables, with their default values (some auto generated) are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;project_name&lt;/code&gt;: (default: &lt;code&gt;"FastAPI Project"&lt;/code&gt;) The name of the project, shown to API users (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stack_name&lt;/code&gt;: (default: &lt;code&gt;"fastapi-project"&lt;/code&gt;) The name of the stack used for Docker Compose labels and project name (no spaces, no periods) (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;secret_key&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The secret key for the project, used for security, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser&lt;/code&gt;: (default: &lt;code&gt;"admin@example.com"&lt;/code&gt;) The email of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;first_superuser_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password of the first superuser (in .env).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_host&lt;/code&gt;: (default: "") The SMTP server host to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_user&lt;/code&gt;: (default: "") The SMTP server user to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;smtp_password&lt;/code&gt;: (default: "") The SMTP server password to send emails, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;emails_from_email&lt;/code&gt;: (default: &lt;code&gt;"info@example.com"&lt;/code&gt;) The email account to send emails from, you can set it later in .env.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;postgres_password&lt;/code&gt;: (default: &lt;code&gt;"changethis"&lt;/code&gt;) The password for the PostgreSQL database, stored in .env, you can generate one with the method above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sentry_dsn&lt;/code&gt;: (default: "") The DSN for Sentry, if you are using it, you can set it later in .env.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Backend Development&lt;/h2&gt; 
&lt;p&gt;Backend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/backend/README.md"&gt;backend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frontend Development&lt;/h2&gt; 
&lt;p&gt;Frontend docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/frontend/README.md"&gt;frontend/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;Deployment docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/deployment.md"&gt;deployment.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;General development docs: &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/development.md"&gt;development.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This includes using Docker Compose, custom local domains, &lt;code&gt;.env&lt;/code&gt; configurations, etc.&lt;/p&gt; 
&lt;h2&gt;Release Notes&lt;/h2&gt; 
&lt;p&gt;Check the file &lt;a href="https://raw.githubusercontent.com/fastapi/full-stack-fastapi-template/master/release-notes.md"&gt;release-notes.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Full Stack FastAPI Template is licensed under the terms of the MIT license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>infinitered/ignite</title>
      <link>https://github.com/infinitered/ignite</link>
      <description>&lt;p&gt;Infinite Red's battle-tested React Native project boilerplate, along with a CLI, component/model generators, and more! 9 years of continuous development and counting.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/1479215/206780298-2b98221d-9c57-4cd3-866a-cf85ec1ddd9e.jpg" alt="Ignite README Splash Image" /&gt;&lt;/p&gt; 
&lt;h1&gt;Ignite - the battle-tested React Native boilerplate&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://badge.fury.io/js/ignite-cli" target="_blank"&gt;&lt;img src="https://badge.fury.io/js/ignite-cli.svg?sanitize=true" alt="npm version" height="20" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/infinitered/ignite" alt="GitHub Repo stars" /&gt; &lt;img src="https://img.shields.io/twitter/follow/ir_ignite" alt="Twitter Follow" /&gt; &lt;a href="https://dl.circleci.com/status-badge/redirect/gh/infinitered/ignite/tree/master"&gt;&lt;img src="https://dl.circleci.com/status-badge/img/gh/infinitered/ignite/tree/master.svg?style=svg" alt="CircleCI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Proven React Native boilerplate&lt;/h2&gt; 
&lt;p&gt;Developed and maintained consistently since 2016, Ignite is the oldest active and most popular third-party React Native / Expo app boilerplate.&lt;/p&gt; 
&lt;p&gt;This is the React Native starting point that the &lt;a href="https://infinite.red/react-native-app-development-company"&gt;Infinite Red&lt;/a&gt; team uses on a day-to-day basis to build client apps. Developers who use Ignite report that it saves them two to four weeks of time on average off the beginning of their React Native project!&lt;/p&gt; 
&lt;h2&gt;Intro Videos&lt;/h2&gt; 
&lt;p&gt;Here are a few videos / talks that introduce Ignite and show off some of its features. Check them out!&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%"&gt; 
    &lt;figure&gt; 
     &lt;a href="https://www.youtube.com/watch?v=KOSvDlFyg20"&gt; &lt;img src="https://img.youtube.com/vi/KOSvDlFyg20/sddefault.jpg" alt="Getting Started with Ignite" width="100%" /&gt;&lt;br /&gt; 
      &lt;figcaption&gt;
       &lt;strong&gt;Getting Started with Ignite&lt;/strong&gt;
      &lt;/figcaption&gt; &lt;/a&gt; 
    &lt;/figure&gt; &lt;/td&gt; 
   &lt;td&gt; 
    &lt;figure&gt; 
     &lt;a href="https://www.youtube.com/watch?v=dNWkJOpD6YE&amp;amp;list=PLFHvL21g9bk0XOO9XK6d6S9w1jBU6Dz_U&amp;amp;index=16"&gt; &lt;img src="https://img.youtube.com/vi/dNWkJOpD6YE/sddefault.jpg" alt="Sweetening React Native Development With Ignite" width="100%" /&gt;&lt;br /&gt; 
      &lt;figcaption&gt;
       &lt;strong&gt;Ignite talk at Chain React 2024 - Robin Heinze&lt;/strong&gt;
      &lt;/figcaption&gt; &lt;/a&gt; 
    &lt;/figure&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;&lt;a href="https://github.com/infinitered/ignite/raw/master/docs/README.md"&gt;Full Documentation&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;We've put great effort into the documentation as a team, please &lt;a href="https://github.com/infinitered/ignite/raw/master/docs"&gt;read through it here&lt;/a&gt;. If you're unsure why a certain decision was made related to this boilerplate or how to proceed with a particular feature, it's likely documented. If it still isn't clear, go through the proper &lt;a href="https://raw.githubusercontent.com/infinitered/ignite/master/#reporting-bugs--getting-help"&gt;help channels&lt;/a&gt; and we always welcome PRs to improve the docs!&lt;/p&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;p&gt;Nothing makes it into Ignite unless it's been proven on projects that Infinite Red works on. Ignite apps include the following rock-solid technical decisions out of the box:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Library&lt;/th&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React Native&lt;/td&gt; 
   &lt;td&gt;Mobile Framework&lt;/td&gt; 
   &lt;td&gt;v0.79&lt;/td&gt; 
   &lt;td&gt;The best cross-platform mobile framework&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React&lt;/td&gt; 
   &lt;td&gt;UI Framework&lt;/td&gt; 
   &lt;td&gt;v19&lt;/td&gt; 
   &lt;td&gt;The most popular UI framework in the world&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TypeScript&lt;/td&gt; 
   &lt;td&gt;Language&lt;/td&gt; 
   &lt;td&gt;v5&lt;/td&gt; 
   &lt;td&gt;Static typechecking&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React Navigation&lt;/td&gt; 
   &lt;td&gt;Navigation&lt;/td&gt; 
   &lt;td&gt;v7&lt;/td&gt; 
   &lt;td&gt;Performant and consistent navigation framework&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Expo&lt;/td&gt; 
   &lt;td&gt;SDK&lt;/td&gt; 
   &lt;td&gt;v53&lt;/td&gt; 
   &lt;td&gt;Allows (optional) Expo modules&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Expo Font&lt;/td&gt; 
   &lt;td&gt;Custom Fonts&lt;/td&gt; 
   &lt;td&gt;v13&lt;/td&gt; 
   &lt;td&gt;Import custom fonts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Expo Localization&lt;/td&gt; 
   &lt;td&gt;Internationalization&lt;/td&gt; 
   &lt;td&gt;v16&lt;/td&gt; 
   &lt;td&gt;i18n support (including RTL!)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Expo Status Bar&lt;/td&gt; 
   &lt;td&gt;Status Bar Library&lt;/td&gt; 
   &lt;td&gt;v2&lt;/td&gt; 
   &lt;td&gt;Status bar support&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;RN Reanimated&lt;/td&gt; 
   &lt;td&gt;Animations&lt;/td&gt; 
   &lt;td&gt;v3&lt;/td&gt; 
   &lt;td&gt;Beautiful and performant animations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MMKV&lt;/td&gt; 
   &lt;td&gt;Persistence&lt;/td&gt; 
   &lt;td&gt;v3&lt;/td&gt; 
   &lt;td&gt;State persistence&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;apisauce&lt;/td&gt; 
   &lt;td&gt;REST client&lt;/td&gt; 
   &lt;td&gt;v3&lt;/td&gt; 
   &lt;td&gt;Communicate with back-end&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Jest&lt;/td&gt; 
   &lt;td&gt;Test Runner&lt;/td&gt; 
   &lt;td&gt;v29&lt;/td&gt; 
   &lt;td&gt;Standard test runner for JS apps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;date-fns&lt;/td&gt; 
   &lt;td&gt;Date library&lt;/td&gt; 
   &lt;td&gt;v4&lt;/td&gt; 
   &lt;td&gt;Excellent date library&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;react-native-keyboard-controller&lt;/td&gt; 
   &lt;td&gt;Keyboard library&lt;/td&gt; 
   &lt;td&gt;v1&lt;/td&gt; 
   &lt;td&gt;Great keyboard manager library&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;react-native-edge-to-edge&lt;/td&gt; 
   &lt;td&gt;UI library&lt;/td&gt; 
   &lt;td&gt;v1&lt;/td&gt; 
   &lt;td&gt;Enables edge-to-edge in Android&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reactotron RN&lt;/td&gt; 
   &lt;td&gt;Inspector/Debugger&lt;/td&gt; 
   &lt;td&gt;v5&lt;/td&gt; 
   &lt;td&gt;JS debugging&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Maestro&lt;/td&gt; 
   &lt;td&gt;Testing Framework&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Automate end-to-end UI testing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hermes&lt;/td&gt; 
   &lt;td&gt;JS engine&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Fine-tuned JS engine for RN&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Ignite also comes with a &lt;a href="https://raw.githubusercontent.com/infinitered/ignite/master/docs/boilerplate/app/components/Components.md"&gt;component library&lt;/a&gt; that is tuned for custom designs, theming support, testing, custom fonts, generators, and much, much more.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Prerequisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;You'll need at least a recent version of &lt;a href="https://nodejs.org/en"&gt;Node&lt;/a&gt; to run the CLI&lt;/li&gt; 
 &lt;li&gt;For compiling/running in a simulator, make sure you're set up for React Native by following &lt;a href="https://reactnative.dev/docs/environment-setup"&gt;the official documentation&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The Ignite CLI will walk you through the steps to ignite a new React Native app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Get walked through the prompts for the different options to start your new app
npx ignite-cli@latest new PizzaApp

# Accept all the recommended defaults and get straight to coding!
npx ignite-cli@latest new PizzaApp --yes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once you're up and running, check out our &lt;a href="https://docs.infinite.red/ignite-cli/Guide/"&gt;Getting Started Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you'd like to follow a tutorial, check out &lt;a href="https://shift.infinite.red/creating-a-trivia-app-with-ignite-bowser-part-1-1987cc6e93a1"&gt;this one from Robin Heinze&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;The above commands may fail with various errors, depending on your operating system and dependency versions. Some troubleshooting steps to follow:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Uninstall global versions of the Ignite CLI via &lt;code&gt;npm uninstall -g ignite-cli&lt;/code&gt; and use the CLI via &lt;code&gt;npx ignite-cli&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Make sure you are using a reasonably recent version of Node. This can be checked via the &lt;code&gt;node --version&lt;/code&gt; command. If you require multiple Node versions on your system, install &lt;code&gt;nvm&lt;/code&gt;, and then run &lt;code&gt;nvm install --lts&lt;/code&gt;. At the time of writing, Node LTS is v20.x.x.&lt;/li&gt; 
 &lt;li&gt;If the installation fails because of an Xcode error (missing Xcode command line tools), the easiest way to install them is to run &lt;code&gt;sudo xcode-select --install&lt;/code&gt; in your terminal.&lt;/li&gt; 
 &lt;li&gt;If Xcode and command line tools are already installed, but the installation complains about missing patch dependencies, you may need to switch the Xcode location to something else: &lt;code&gt;sudo xcode-select -s /Applications/Xcode.app/Contents/Developer&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Opening the project in Xcode can give you other insights into what's happening: &lt;code&gt;open ./ios/&amp;lt;yourapp&amp;gt;.xcworkspace&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Add the &lt;code&gt;--debug&lt;/code&gt; switch to the Ignite CLI new command to provide additional output during project initialization&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reporting Bugs / Getting Help&lt;/h2&gt; 
&lt;p&gt;If you run into problems, first search the issues and discussions in this repository. If you don't find anything, you can come talk to our friendly and active developers in the Infinite Red Community Slack (&lt;a href="https://community.infinite.red"&gt;community.infinite.red&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;If you still need help after reaching out to the proper channels, feel free to open a new GitHub issue via &lt;code&gt;npx ignite-cli issue "Unable to Ignite new app"&lt;/code&gt; (as an example). This will help start writing your issue with the correct diagnostic information included.&lt;/p&gt; 
&lt;h2&gt;Contributing to Ignite&lt;/h2&gt; 
&lt;p&gt;Want to contribute to Ignite? Check out &lt;a href="https://raw.githubusercontent.com/infinitered/ignite/master/docs/contributing/Contributing-To-Ignite.md"&gt;the contributing guide&lt;/a&gt; for more info on how to work with the codebase.&lt;/p&gt; 
&lt;h2&gt;Need Inspiration?&lt;/h2&gt; 
&lt;p&gt;If you need battle-tested solutions from Infinite Red experts on everything from Accessibility, to CI/CD configuration, head to &lt;a href="https://ignitecookbook.com"&gt;Ignite Cookbook&lt;/a&gt; for code snippets from our team and the community!&lt;/p&gt; 
&lt;h2&gt;No time to learn React Native? Hire Infinite Red for your next project&lt;/h2&gt; 
&lt;p&gt;We get it ‚Äì sometimes there just isn‚Äôt enough time on a project to learn the ins and outs of a new framework. Infinite Red‚Äôs here to help! Our experienced team of React Native engineers have worked with companies like Microsoft, GasBuddy, Zoom, and Mercari to bring some of the most complex React Native projects to life.&lt;/p&gt; 
&lt;p&gt;Whether it‚Äôs running a full project or training a team on React Native, we can help you solve your company‚Äôs toughest engineering challenges ‚Äì and make it a great experience at the same time.&lt;/p&gt; 
&lt;p&gt;Ready to see how we can work together? &lt;a href="https://infinite.red/contact"&gt;Send us a message&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Further Reading&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch Jamon Holmgren's talk at React Live Amsterdam 2019 where he uses Ignite to build an app in less than 30 minutes: &lt;a href="https://www.youtube.com/watch?v=OgiFKMd_TeY"&gt;https://www.youtube.com/watch?v=OgiFKMd_TeY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Prior art includes &lt;a href="https://github.com/infinitered/ignite-andross"&gt;Ignite Andross&lt;/a&gt; and &lt;a href="https://github.com/infinitered/ignite-bowser"&gt;Ignite Bowser&lt;/a&gt; (which is very similar to the current version of Ignite).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://infinite.red/react-native-app-development-company"&gt;Who are We?&lt;/a&gt; - Learn More About Infinite Red, the top React Native app development company&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License and Trademark Notice&lt;/h2&gt; 
&lt;p&gt;This project's source code is licensed under the &lt;a href="https://raw.githubusercontent.com/infinitered/ignite/master/LICENSE"&gt;MIT License&lt;/a&gt;. The Ignite name, its logo, and any other brand assets associated with Ignite and Infinite Red are the exclusive property of Infinite Red, Inc. These marks are not covered by the MIT License provided herein and may not be used without explicit written permission from Infinite Red, Inc.&lt;/p&gt; 
&lt;h3&gt;Note on Generated Code&lt;/h3&gt; 
&lt;p&gt;The MIT License applies solely to the source code of the Ignite CLI and the source code of the included boilerplate project. Any source code generated by using the Ignite CLI, not including trademark assets described above, is owned entirely by the individual or entity that generated it.&lt;/p&gt; 
&lt;p&gt;However, some files may be added or installed automatically as part of the generation process (e.g. through npm packages). These files are subject to their own licenses, which may include more restrictive terms. It is your responsibility to review and comply with the licenses of any third-party dependencies included in the generated project.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>