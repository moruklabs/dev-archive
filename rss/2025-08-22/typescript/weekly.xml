<rss version="2.0">
  <channel>
    <title>GitHub TypeScript Weekly Trending</title>
    <description>Weekly Trending of TypeScript in GitHub</description>
    <pubDate>Thu, 21 Aug 2025 01:47:03 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>hcengineering/platform</title>
      <link>https://github.com/hcengineering/platform</link>
      <description>&lt;p&gt;Huly — All-in-One Project Management Platform (alternative to Linear, Jira, Slack, Notion, Motion)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Huly Platform&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://x.com/huly_io"&gt;&lt;img src="https://img.shields.io/twitter/follow/huly_io?style=for-the-badge" alt="X (formerly Twitter) Follow" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/hcengineering/platform?style=for-the-badge" alt="GitHub License" /&gt;&lt;/p&gt; 
&lt;p&gt;⭐️ Your star shines on us. Star us on GitHub!&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;The Huly Platform is a robust framework designed to accelerate the development of business applications, such as CRM systems. This repository includes several applications, such as Chat, Project Management, CRM, HRM, and ATS. Various teams are building products on top of the Platform, including &lt;a href="https://huly.io"&gt;Huly&lt;/a&gt; and &lt;a href="https://tracex.co"&gt;TraceX&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://repository-images.githubusercontent.com/392073243/6d27d5cc-38cd-4d88-affe-bb88b393180c" alt="Huly" /&gt;&lt;/p&gt; 
&lt;h2&gt;Self-Hosting&lt;/h2&gt; 
&lt;p&gt;If you're primarily interested in self-hosting Huly without the intention to modify or contribute to its development, please use &lt;a href="https://github.com/hcengineering/huly-selfhost"&gt;huly-selfhost&lt;/a&gt;. This project offers a convenient method to host Huly using &lt;code&gt;docker&lt;/code&gt;, designed for ease of use and quick setup. Explore this option to effortlessly enjoy Huly on your own server.&lt;/p&gt; 
&lt;h2&gt;Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/c42c99e21691fa60ea61b5cdf11c2e0647621534.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;API Client&lt;/h2&gt; 
&lt;p&gt;If you want to interact with Huly programmatically, check out our &lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/packages/api-client/README.md"&gt;API Client&lt;/a&gt; documentation. The API client provides a typed interface for all Huly operations and can be used to build integrations and custom applications.&lt;/p&gt; 
&lt;p&gt;You can find API usage examples in the &lt;a href="https://github.com/hcengineering/huly-examples"&gt;Huly examples&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#huly-platform"&gt;Huly Platform&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#about"&gt;About&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#self-hosting"&gt;Self-Hosting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#activity"&gt;Activity&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#api-client"&gt;API Client&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#pre-requisites"&gt;Pre-requisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#verification"&gt;Verification&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#branches--contributing"&gt;Branches &amp;amp; Contributing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#setup-dev-environment"&gt;Setup dev environment&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#fast-start"&gt;Fast start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#build-and-run"&gt;Build and run&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#run-in-development-mode"&gt;Run in development mode&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#update-project-structure-and-database"&gt;Update project structure and database&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#build--watch"&gt;Build &amp;amp; Watch&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#tests"&gt;Tests&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#unit-tests"&gt;Unit tests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#ui-tests"&gt;UI tests&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#package-publishing"&gt;Package publishing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#additional-testing"&gt;Additional testing&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hcengineering/platform/develop/#wsl-build-guide"&gt;WSL build guide&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Pre-requisites&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Before proceeding, ensure that your system meets the following requirements: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; (v20.11.0 is required)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/get-docker/"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.docker.com/compose/install/"&gt;Docker Compose&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Verification&lt;/h2&gt; 
&lt;p&gt;To verify the installation, perform the following checks in your terminal:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure that the &lt;code&gt;docker&lt;/code&gt; commands are available:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker --version
docker compose version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Branches &amp;amp; Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;main&lt;/code&gt; branch is the default branch used for production deployments. Changes to this branch are made from the &lt;code&gt;staging&lt;/code&gt; branch once a version is ready for community use.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;staging&lt;/code&gt; branch is used for pre-release testing. It is stable enough for testing but not yet ready for production deployment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;The &lt;code&gt;develop&lt;/code&gt; branch is used for development and is the default branch for contributions.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We periodically merge &lt;code&gt;develop&lt;/code&gt; into &lt;code&gt;staging&lt;/code&gt; to perform testing builds. Once we are satisfied with the build quality in our pre-release deployment, we merge changes into &lt;code&gt;main&lt;/code&gt; and release a new version to the community.&lt;/p&gt; 
&lt;h2&gt;Setup dev environment&lt;/h2&gt; 
&lt;h3&gt;To initialise the communication submodule&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git submodule init
git submodule update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;To update the communication submodule&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git submodule update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Authentication&lt;/h3&gt; 
&lt;p&gt;This project uses GitHub Packages for dependency management. To successfully download dependencies, you need to generate a GitHub personal access token and log in to npm using that token.&lt;/p&gt; 
&lt;p&gt;Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Generate a GitHub Token:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log in to your GitHub account&lt;/li&gt; 
 &lt;li&gt;Go to &lt;strong&gt;Settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Developer settings&lt;/strong&gt; &amp;gt; &lt;strong&gt;Personal access tokens&lt;/strong&gt; (&lt;a href="https://github.com/settings/personal-access-tokens"&gt;https://github.com/settings/personal-access-tokens&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Click &lt;strong&gt;Generate new token&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Select the required scopes (at least &lt;code&gt;read:packages&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Generate the token and copy it&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Authenticate with npm:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm login --registry=https://npm.pkg.github.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When prompted, enter your GitHub username, use the generated token as your password&lt;/p&gt; 
&lt;h2&gt;Fast start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/fast-start.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;You need Microsoft's &lt;a href="https://rushjs.io"&gt;rush&lt;/a&gt; to install the application.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Install Rush globally using the command:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @microsoft/rush
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Navigate to the repository root and run the following commands:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush install
rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/presetup-rush.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build and run&lt;/h2&gt; 
&lt;p&gt;Development environment setup requires Docker to be installed on system.&lt;/p&gt; 
&lt;p&gt;Support is available for both amd64 and arm64 containers on Linux and macOS.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./dev/
rush build    # Will build all the required packages.
# rush rebuild  # could be used to omit build cache.
rush bundle   # Will prepare bundles.
rush package  # Will build all webpack packages.
rush validate # Will validate all sources with typescript and generate d.ts files required for ts-node execution.
rush svelte-check # Optional. svelte files validation using svelte-check.
rush docker:build   # Will build Docker containers for all applications in the local Docker environment.
rush docker:up # Will set up all the containers
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be aware &lt;code&gt;rush docker:build&lt;/code&gt; will automatically execute all required phases like build, bundle, package.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can just execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sh ./scripts/build.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, Docker volumes named dev_db, dev_elastic, and dev_files will be created for the MongoDB, Elasticsearch, and MinIO instances.&lt;/p&gt; 
&lt;p&gt;Add the following line to your /etc/hosts file&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-plain"&gt;127.0.0.1 huly.local
::1 huly.local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Accessing the URL &lt;a href="http://huly.local:8087"&gt;http://huly.local:8087&lt;/a&gt; will lead you to the app in development mode.&lt;/p&gt; 
&lt;p&gt;Limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local installation does not support sending emails, thus disabling functionalities such as password recovery and email notifications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Run in development mode&lt;/h2&gt; 
&lt;p&gt;Development mode allows for live reloading and a smoother development process.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd dev/prod
rush validate
rushx dev-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then go to &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Select "Sign up" on the right panel and click the "Sign up with password" link at the bottom. Enter the new user's credentials, then proceed to create a workspace for them.&lt;/p&gt; 
&lt;h2&gt;Update project structure and database&lt;/h2&gt; 
&lt;p&gt;If the project's structure is updated, it may be necessary to relink and rebuild the projects.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush update
rush build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If a build fails, but the code is correct, try to delete the &lt;a href="https://rushjs.io/pages/maintainer/build_cache/"&gt;build cache&lt;/a&gt; and retry.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# from the project root
rm -rf common/temp/build-cache
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Build &amp;amp; Watch&lt;/h2&gt; 
&lt;p&gt;For development purpose &lt;code&gt;rush build:watch&lt;/code&gt; action could be used.&lt;/p&gt; 
&lt;p&gt;It includes build and validate phases in watch mode.&lt;/p&gt; 
&lt;h2&gt;Tests&lt;/h2&gt; 
&lt;h3&gt;Unit tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rush test # To execute all tests

rushx test # For individual test execution inside a package directory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;UI tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./tests
rush build
rush bundle
rush docker:build
## creates test Docker containers and sets up test database
./prepare.sh
## runs UI tests
rushx uitest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To execute tests in the development environment, please follow these steps:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd ./tests
./create-local.sh ## use ./restore-local.sh if you only want to restore the workspace to a predefined initial state for sanity.
cd ./sanity
rushx dev-uitest # To execute all tests against the development environment.
rushx dev-debug -g 'pattern' # To execute tests in debug mode with only the matching test pattern.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Package publishing&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;node ./common/scripts/bump.js -p projectName
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Additional testing&lt;/h2&gt; 
&lt;p&gt;This project is tested with BrowserStack.&lt;/p&gt; 
&lt;h2&gt;WSL build guide&lt;/h2&gt; 
&lt;p&gt;This guide describes the nuances of building and running the application from source code located on your NTFS drive, which is accessible from both Windows and WSL.&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;h4&gt;Disk Space Requirements&lt;/h4&gt; 
&lt;p&gt;Ensure you have sufficient disk space available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A fully deployed local application in clean Docker will consume slightly more than &lt;strong&gt;35 GB&lt;/strong&gt; of WSL virtual disk space&lt;/li&gt; 
 &lt;li&gt;The application folder after build (sources + artifacts) will occupy &lt;strong&gt;4.5 GB&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If there's insufficient space on your system drive (usually &lt;code&gt;C:\&lt;/code&gt;), you can change the virtual disk location in Docker Settings → Resources → Advanced.&lt;/p&gt; 
&lt;h4&gt;Docker WSL Integration&lt;/h4&gt; 
&lt;p&gt;Make sure Docker is accessible from WSL:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to Docker Settings → Resources → Advanced → WSL Integration&lt;/li&gt; 
 &lt;li&gt;Select the distribution where you'll be building and running the application&lt;/li&gt; 
 &lt;li&gt;Verify integration works by running this command in WSL: &lt;pre&gt;&lt;code class="language-bash"&gt;docker run hello-world
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Common Issues and Solutions&lt;/h3&gt; 
&lt;h4&gt;Git Line Endings on Windows&lt;/h4&gt; 
&lt;p&gt;Windows Git often automatically replaces line endings. Since most build scripts are &lt;code&gt;.sh&lt;/code&gt; files, ensure your Windows checkout doesn't break them.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Solution options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Checkout from WSL instead of Windows&lt;/li&gt; 
 &lt;li&gt;Configure Git on Windows to disable auto-replacement: &lt;pre&gt;&lt;code class="language-bash"&gt;git config --global core.autocrlf false
&lt;/code&gt;&lt;/pre&gt; This disables auto-replacement for all repositories on your machine.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Elevated Privileges in WSL&lt;/h4&gt; 
&lt;p&gt;Some commands in the instructions require elevated privileges when working in WSL. If you're using Ubuntu distribution, prefix commands with &lt;code&gt;sudo&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo npm install -g @microsoft/rush
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;WSL Configuration&lt;/h4&gt; 
&lt;p&gt;If the source code is located on a Windows NTFS drive, then edit the &lt;code&gt;/etc/wsl.conf&lt;/code&gt; file in WSL (e.g., &lt;code&gt;sudo nano /etc/wsl.conf&lt;/code&gt;) and add the following content if it doesn't exist:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ini"&gt;[automount]
enabled = true
root = /mnt/
options = "metadata,umask=22,fmask=11"

[interop]
appendWindowsPath = false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, we recommend storing the repository on a WSL disk, as this dramatically improves build and maintenance operations.&lt;/p&gt; 
&lt;h3&gt;Running the Application&lt;/h3&gt; 
&lt;p&gt;After these preparations, the build instructions should work without issues.&lt;/p&gt; 
&lt;h4&gt;Port Conflicts&lt;/h4&gt; 
&lt;p&gt;When starting the application (&lt;code&gt;rush docker:up&lt;/code&gt;), some network ports in Windows might be occupied. You can fix port mapping in the &lt;code&gt;\dev\docker-compose.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Depending on which port you change, you'll need to:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Find what's using that port&lt;/li&gt; 
 &lt;li&gt;Update the new address in the corresponding service configuration&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;© 2025 &lt;a href="https://hardcoreeng.com"&gt;Hardcore Engineering Inc&lt;/a&gt;.&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jitsi/jitsi-meet</title>
      <link>https://github.com/jitsi/jitsi-meet</link>
      <description>&lt;p&gt;Jitsi Meet - Secure, Simple and Scalable Video Conferences that you use as a standalone app or embed in your web application.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;p align="center"&gt;Jitsi Meet&lt;/p&gt;&lt;/h1&gt; 
&lt;p&gt;Jitsi Meet is a set of Open Source projects which empower users to use and deploy video conferencing platforms with state-of-the-art video quality and features.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/readme-img1.png" width="900" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Amongst others here are the main features Jitsi Meet offers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for all current browsers&lt;/li&gt; 
 &lt;li&gt;Mobile applications&lt;/li&gt; 
 &lt;li&gt;Web and native SDKs for integration&lt;/li&gt; 
 &lt;li&gt;HD audio and video&lt;/li&gt; 
 &lt;li&gt;Content sharing&lt;/li&gt; 
 &lt;li&gt;Raise hand and reactions&lt;/li&gt; 
 &lt;li&gt;Chat with private conversations&lt;/li&gt; 
 &lt;li&gt;Polls&lt;/li&gt; 
 &lt;li&gt;Virtual backgrounds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And many more!&lt;/p&gt; 
&lt;h2&gt;Using Jitsi Meet&lt;/h2&gt; 
&lt;p&gt;Using Jitsi Meet is straightforward, as it's browser based. Head over to &lt;a href="https://meet.jit.si"&gt;meet.jit.si&lt;/a&gt; and give it a try. It's scalable and free to use. All you need is a Google, Facebook or GitHub account in order to start a meeting. All browsers are supported!&lt;/p&gt; 
&lt;p&gt;Using mobile? No problem, you can either use your mobile web browser or our fully-featured mobile apps:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Android&lt;/th&gt; 
   &lt;th align="center"&gt;Android (F-Droid)&lt;/th&gt; 
   &lt;th align="center"&gt;iOS&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://play.google.com/store/apps/details?id=org.jitsi.meet"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/google-play-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://f-droid.org/packages/org.jitsi.meet/"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/f-droid-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://itunes.apple.com/us/app/jitsi-meet/id1165103905"&gt;&lt;img src="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/resources/img/appstore-badge.png" height="50" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you are feeling adventurous and want to get an early scoop of the features as they are being developed you can also sign up for our open beta testing here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://play.google.com/apps/testing/org.jitsi.meet"&gt;Android&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://testflight.apple.com/join/isy6ja7S"&gt;iOS&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running your own instance&lt;/h2&gt; 
&lt;p&gt;If you'd like to run your own Jitsi Meet installation head over to the &lt;a href="https://jitsi.github.io/handbook/docs/devops-guide/"&gt;handbook&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;We provide Debian packages and a comprehensive Docker setup to make deployments as simple as possible. Advanced users also have the possibility of building all the components from source.&lt;/p&gt; 
&lt;p&gt;You can check the latest releases &lt;a href="https://jitsi.github.io/handbook/docs/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Jitsi as a Service&lt;/h2&gt; 
&lt;p&gt;If you like the branding capabilities of running your own instance but you'd like to avoid dealing with the complexity of monitoring, scaling and updates, JaaS might be for you.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://jaas.8x8.vc"&gt;8x8 Jitsi as a Service (JaaS)&lt;/a&gt; is an enterprise-ready video meeting platform that allows developers, organizations and businesses to easily build and deploy video solutions. With Jitsi as a Service we now give you all the power of Jitsi running on our global platform so you can focus on building secure and branded video experiences.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;All the Jitsi Meet documentation is available in &lt;a href="https://jitsi.github.io/handbook/"&gt;the handbook&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For a comprehensive description of all Jitsi Meet's security aspects, please check &lt;a href="https://jitsi.org/security"&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a detailed description of Jitsi Meet's End-to-End Encryption (E2EE) implementation, please check &lt;a href="https://jitsi.org/e2ee-whitepaper/"&gt;this link&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Jitsi Meet, see &lt;a href="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;If you are looking to contribute to Jitsi Meet, first of all, thank you! Please see our &lt;a href="https://raw.githubusercontent.com/jitsi/jitsi-meet/master/CONTRIBUTING.md"&gt;guidelines for contributing&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;footer&gt; 
 &lt;p align="center" style="font-size: smaller;"&gt; Built with ❤️ by the Jitsi team at &lt;a href="https://8x8.com" target="_blank"&gt;8x8&lt;/a&gt; and our community. &lt;/p&gt; 
&lt;/footer&gt;</description>
    </item>
    
    <item>
      <title>MotiaDev/motia</title>
      <link>https://github.com/MotiaDev/motia</link>
      <description>&lt;p&gt;Modern Backend Framework that unifies APIs, background jobs, workflows, and AI Agents into a single core primitive with built-in observability and state management.&lt;/p&gt;&lt;hr&gt;&lt;a href="https://motia.dev"&gt; &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/github-readme-banner.png" alt="Motia Banner" width="100%" /&gt; &lt;/a&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/14032" style="margin-right:8px;"&gt; &lt;img src="https://trendshift.io/api/badge/repositories/14032" alt="Motia" style="width: 250px; height: 55px; margin-right:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;a href="https://vercel.com/blog/summer-2025-oss-program#motia" target="_blank" style="margin-left:8px;"&gt; &lt;img alt="Vercel OSS Program" src="https://vercel.com/oss/program-badge.svg?sanitize=true" style="width: 250px; height: 55px; margin-left:8px;" width="250" height="55" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt;🔥 The Unified Backend Framework That Eliminates Runtime Fragmentation 🔥&lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;em&gt;APIs, background jobs, workflows, and AI agents in one system. JavaScript, TypeScript, Python, and more in one codebase.&lt;/em&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.npmjs.com/package/motia"&gt; &lt;img src="https://img.shields.io/npm/v/motia?style=flat&amp;amp;logo=npm&amp;amp;logoColor=white&amp;amp;color=CB3837&amp;amp;labelColor=000000" alt="npm version" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-MIT-green?style=flat&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="license" /&gt; &lt;/a&gt; &lt;a href="https://github.com/MotiaDev/motia"&gt; &lt;img src="https://img.shields.io/github/stars/MotiaDev/motia?style=flat&amp;amp;logo=github&amp;amp;logoColor=white&amp;amp;color=yellow&amp;amp;labelColor=000000" alt="GitHub stars" /&gt; &lt;/a&gt; &lt;a href="https://twitter.com/motiadev" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/Follow-@motiadev-1DA1F2?style=flat&amp;amp;logo=twitter&amp;amp;logoColor=white&amp;amp;labelColor=000000" alt="Twitter Follow" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/motia" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1322278831184281721?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;color=5865F2&amp;amp;label=Discord&amp;amp;labelColor=000000" alt="Discord" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.motia.dev/manifesto"&gt;💡 Motia Manifesto&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/getting-started/quick-start"&gt;🚀 Quick Start&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs/concepts/steps/defining-steps"&gt;📋 Defining Steps&lt;/a&gt; • &lt;a href="https://www.motia.dev/docs"&gt;📚 Docs&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 What is Motia?&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Motia solves backend fragmentation.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Modern software engineering is splintered – APIs live in one framework, background jobs in another, queues have their own tooling, and AI agents are springing up in yet more isolated runtimes. &lt;strong&gt;This fragmentation demands a unified system.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Motia unifies APIs, background jobs, workflows, and AI agents into a &lt;strong&gt;single coherent system&lt;/strong&gt; with shared observability and developer experience. Similar to how React simplified frontend development where everything is a component, &lt;strong&gt;Motia simplifies backend development where everything is a Step&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Write &lt;strong&gt;JavaScript, TypeScript, Python, and more&lt;/strong&gt; in the same workflow. &lt;strong&gt;What used to take 5 frameworks to build now comes out of the box with Motia.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://motia.dev"&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/Motia_Github_Repository_GIF.gif" alt="Motia combines APIs, background queues, and AI agents into one system" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quickstart&lt;/h2&gt; 
&lt;p&gt;Get Motia project up and running in &lt;strong&gt;under 60 seconds&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;1. Bootstrap a New Motia Project&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia@latest create -i   # runs the interactive terminal
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the prompts to pick a template, project name, and language. &lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/motia-terminal.gif" alt="motia-terminal" /&gt;&lt;/p&gt; 
&lt;h3&gt;2. Start the Workbench&lt;/h3&gt; 
&lt;p&gt;Inside your new project folder, launch the dev server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx motia dev # ➜ http://localhost:3000
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;That's it!&lt;/strong&gt; You have:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ REST APIs with validation&lt;/li&gt; 
 &lt;li&gt;✅ Visual debugger &amp;amp; tracing&lt;/li&gt; 
 &lt;li&gt;✅ Multi-language support&lt;/li&gt; 
 &lt;li&gt;✅ Event-driven architecture&lt;/li&gt; 
 &lt;li&gt;✅ Zero configuration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/MotiaDev/motia/main/assets/new-workbench.png" alt="new-workbench" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📖 &lt;strong&gt;&lt;a href="https://motia.dev/docs/getting-started/quick-start"&gt;Full tutorial in our docs →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🎯 Step Types&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Trigger&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;api&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP Request&lt;/td&gt; 
   &lt;td&gt;REST endpoints&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;event&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Topic subscription&lt;/td&gt; 
   &lt;td&gt;Background processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;cron&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Schedule&lt;/td&gt; 
   &lt;td&gt;Recurring jobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;code&gt;noop&lt;/code&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Manual&lt;/td&gt; 
   &lt;td&gt;External processes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📖 &lt;strong&gt;&lt;a href="https://motia.dev/docs/concepts/steps"&gt;Learn more about Steps →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🎯 Examples&lt;/h2&gt; 
&lt;h3&gt;🏆 &lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;ChessArena.ai&lt;/a&gt;&lt;/strong&gt; - Full-Featured Production App&lt;/h3&gt; 
&lt;p&gt;A complete chess platform benchmarking LLM performance with real-time evaluation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://chessarena.ai"&gt;Live Website →&lt;/a&gt;&lt;/strong&gt; | &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/chessarena-ai"&gt;Source Code →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;img src="https://github.com/MotiaDev/chessarena-ai/raw/main/public/images/chessarena.gif?raw=true" alt="ChessArena.ai in action (raw GIF)" /&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Built from scratch to production deployment, featuring:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🔐 &lt;strong&gt;Authentication &amp;amp; user management&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;🤖 &lt;strong&gt;Multi-agent LLM evaluation&lt;/strong&gt; (OpenAI, Claude, Gemini, Grok)&lt;/li&gt; 
 &lt;li&gt;🐍 &lt;strong&gt;Python engine integration&lt;/strong&gt; (Stockfish chess evaluation)&lt;/li&gt; 
 &lt;li&gt;📊 &lt;strong&gt;Real-time streaming&lt;/strong&gt; with live move updates and scoring&lt;/li&gt; 
 &lt;li&gt;🎨 &lt;strong&gt;Modern React UI&lt;/strong&gt; with interactive chess boards&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Event-driven workflows&lt;/strong&gt; connecting TypeScript APIs to Python processors&lt;/li&gt; 
 &lt;li&gt;📈 &lt;strong&gt;Live leaderboards&lt;/strong&gt; with move-by-move quality scoring&lt;/li&gt; 
 &lt;li&gt;🚀 &lt;strong&gt;Production deployment&lt;/strong&gt; on Motia Cloud&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📚 &lt;strong&gt;More Examples&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples"&gt;View all 20+ examples →&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Example&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/ai-deep-research-agent"&gt;AI Research Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web research with iterative analysis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/streaming-ai-chatbot"&gt;Streaming Chatbot&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time AI responses&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/gmail-workflow"&gt;Gmail Automation&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart email processing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/github-integration-workflow"&gt;GitHub PR Manager&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Automated PR workflows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia-examples/tree/main/examples/finance-agent"&gt;Finance Agent&lt;/a&gt;&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Real-time market analysis&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Features demonstrated:&lt;/strong&gt; Multi-language workflows • Real-time streaming • AI integration • Production deployment&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌐 Language Support&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;TypeScript&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;✅ Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ruby&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🚧 Beta&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Go&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;🔄 Soon&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;📚 Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;📖 Documentation&lt;/a&gt;&lt;/strong&gt; - Complete guides and API reference&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;💬 Discord&lt;/a&gt;&lt;/strong&gt; - Community support and discussions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/issues"&gt;🐛 GitHub Issues&lt;/a&gt;&lt;/strong&gt; - Bug reports and feature requests&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/orgs/MotiaDev/projects/2"&gt;🗺️ Roadmap&lt;/a&gt;&lt;/strong&gt; - Upcoming features and progress&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚧 Roadmap&lt;/h2&gt; 
&lt;p&gt;We have a public roadmap for Motia, you can view it &lt;a href="https://github.com/orgs/MotiaDev/projects/2/views/4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Feel free to add comments to the issues, or create a new issue if you have a feature request.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
   &lt;th&gt;Link&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Python Types&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/485"&gt;#485&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Python types&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: RBAC&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/495"&gt;#495&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for RBAC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Streams: Workbench UI&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/497"&gt;#497&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench UI&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Queue Strategies&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/476"&gt;#476&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Queue Strategies&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Reactive Steps&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/477"&gt;#477&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Reactive Steps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Point in time triggers&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/480"&gt;#480&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Point in time triggers&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Workbench plugins&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/481"&gt;#481&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for Workbench plugins&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/482"&gt;#482&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Rewrite our Core in either Go or Rust&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/483"&gt;#483&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Decrease deployment time&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in database support&lt;/td&gt; 
   &lt;td&gt;Planned&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MotiaDev/motia/issues/484"&gt;#484&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add support for built-in database&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions! Check our &lt;strong&gt;&lt;a href="https://github.com/MotiaDev/motia/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;&lt;/strong&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://motia.dev"&gt;🚀 Get Started&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://motia.dev/docs"&gt;📖 Docs&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://discord.gg/motia"&gt;💬 Discord&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.star-history.com/#motiadev/motia&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=motiadev/motia&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;sub&gt;⭐ &lt;strong&gt;Star us if you find Motia useful!&lt;/strong&gt;&lt;/sub&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>epicenter-so/epicenter</title>
      <link>https://github.com/epicenter-so/epicenter</link>
      <description>&lt;p&gt;Press shortcut → speak → get text. Free and open source. More local-first apps soon ❤️&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://epicenter.so"&gt; &lt;img width="200" src="https://github.com/user-attachments/assets/9e210c52-2740-43b6-af3f-e6eaf4b5c397" alt="Epicenter" /&gt; &lt;/a&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;Epicenter&lt;/h1&gt; 
&lt;p align="center"&gt;Local-first, open-source apps&lt;/p&gt; 
&lt;p align="center"&gt;Own your data. Use any model you want. Free and open source ❤️&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;📢 Repository Update:&lt;/strong&gt; The &lt;a href="https://github.com/braden-w/whispering/"&gt;Whispering&lt;/a&gt; repository is now part of &lt;strong&gt;Epicenter&lt;/strong&gt;! You can find it &lt;a href="https://github.com/epicenter-so/epicenter/tree/main/apps/whispering"&gt;here&lt;/a&gt;. Everything else remains the same—same tools, same philosophy, same team.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p align="center"&gt; 
 &lt;!-- GitHub Stars Badge --&gt; &lt;a href="https://github.com/epicenter-so/epicenter" target="_blank"&gt; &lt;img alt="GitHub stars" src="https://img.shields.io/github/stars/epicenter-so/epicenter?style=flat-square" /&gt; &lt;/a&gt; 
 &lt;!-- Latest Version Badge --&gt; &lt;img src="https://img.shields.io/github/v/release/epicenter-so/epicenter?style=flat-square&amp;amp;label=Latest%20Version&amp;amp;color=brightgreen" /&gt; 
 &lt;!-- License Badge --&gt; &lt;a href="https://raw.githubusercontent.com/epicenter-so/epicenter/main/LICENSE" target="_blank"&gt; &lt;img alt="MIT License" src="https://img.shields.io/github/license/epicenter-so/epicenter.svg?style=flat-square" /&gt; &lt;/a&gt; 
 &lt;!-- Discord Badge --&gt; &lt;a href="https://go.epicenter.so/discord" target="_blank"&gt; &lt;img alt="Discord" src="https://img.shields.io/badge/Discord-Join%20us-5865F2?style=flat-square&amp;amp;logo=discord&amp;amp;logoColor=white" /&gt; &lt;/a&gt; 
 &lt;!-- Platform Support Badges --&gt; &lt;a href="https://github.com/epicenter-so/epicenter/releases" target="_blank"&gt; &lt;img alt="macOS" src="https://img.shields.io/badge/-macOS-black?style=flat-square&amp;amp;logo=apple&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/epicenter-so/epicenter/releases" target="_blank"&gt; &lt;img alt="Windows" src="https://img.shields.io/badge/-Windows-blue?style=flat-square&amp;amp;logo=windows&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;a href="https://github.com/epicenter-so/epicenter/releases" target="_blank"&gt; &lt;img alt="Linux" src="https://img.shields.io/badge/-Linux-yellow?style=flat-square&amp;amp;logo=linux&amp;amp;logoColor=white" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/epicenter-so/epicenter/main/#current-tools"&gt;Tools&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/epicenter-so/epicenter/main/#where-were-headed"&gt;Vision&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/epicenter-so/epicenter/main/#join-us"&gt;Contributing&lt;/a&gt; • &lt;a href="https://go.epicenter.so/discord"&gt;Discord&lt;/a&gt; • &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is Epicenter?&lt;/h2&gt; 
&lt;p&gt;Epicenter is an ecosystem of open-source, local-first apps. Our eventual goal is to store all of your data—notes, transcripts, chat histories—in a single folder of plain text and SQLite. Every tool we build shares this memory. It's open, tweakable, and yours. Grep it, open it in Obsidian, host it wherever you like. The choice is yours.&lt;/p&gt; 
&lt;h2&gt;Current Tools&lt;/h2&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td align="center" width="50%"&gt; &lt;h3&gt;🎙️ &lt;a href="https://github.com/epicenter-so/epicenter/tree/main/apps/whispering"&gt;Whispering&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;Press shortcut → speak → get text. Desktop transcription that cuts out the middleman. Bring your own API key.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;→ &lt;a href="https://github.com/epicenter-so/epicenter/tree/main/apps/whispering"&gt;Explore Whispering&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td align="center" width="50%"&gt; &lt;h3&gt;🤖 &lt;a href="https://github.com/epicenter-so/epicenter/tree/main/apps/sh"&gt;epicenter.sh&lt;/a&gt;&lt;/h3&gt; &lt;p&gt;A local-first assistant you can chat with. It lives in your folder, becoming the access point to everything you've ever written, thought, or built.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;→ &lt;a href="https://github.com/epicenter-so/epicenter/tree/main/apps/sh"&gt;Explore epicenter.sh&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Where We're Headed&lt;/h2&gt; 
&lt;p&gt;Our vision is to build a personal workspace where you own your data, choose your models, and replace siloed apps with open, interoperable alternatives. All while preserving authenticity and being free and open source.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Epicenter will have more apps in the future, but for now, the best way to get started is to run Whispering locally:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Prerequisites: Install Bun from https://bun.sh (run bun upgrade if there's issues)
git clone https://github.com/epicenter-so/epicenter.git
cd epicenter
bun install  # Will prompt to upgrade if your Bun version is too old
cd apps/whispering
bun dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Join Us&lt;/h2&gt; 
&lt;h2&gt;Discord Community&lt;/h2&gt; 
&lt;p&gt;If you think like a generalist, build like a hacker, and value tools that respect your mind—you'll fit right in.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;→ &lt;a href="https://go.epicenter.so/discord"&gt;Join our Discord&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h3&gt;We're looking for contributors&lt;/h3&gt; 
&lt;p&gt;If you're passionate about open source, local-first software, or are just a cracked Svelte/TypeScript developer—we'd love to build with you.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;→ &lt;a href="https://raw.githubusercontent.com/epicenter-so/epicenter/main/CONTRIBUTING.md"&gt;Read our Contributing Guide&lt;/a&gt; to get started&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Contributors coordinate and share ideas in our Discord community.&lt;/p&gt; 
&lt;h2&gt;Tech Stack&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img alt="Svelte 5" src="https://img.shields.io/badge/-Svelte%205-orange?style=flat-square&amp;amp;logo=svelte&amp;amp;logoColor=white" /&gt; &lt;img alt="Tauri" src="https://img.shields.io/badge/-Tauri-blue?style=flat-square&amp;amp;logo=tauri&amp;amp;logoColor=white" /&gt; &lt;img alt="TypeScript" src="https://img.shields.io/badge/-TypeScript-blue?style=flat-square&amp;amp;logo=typescript&amp;amp;logoColor=white" /&gt; &lt;img alt="Rust" src="https://img.shields.io/badge/-Rust-orange?style=flat-square&amp;amp;logo=rust&amp;amp;logoColor=white" /&gt; &lt;img alt="TanStack Query" src="https://img.shields.io/badge/-TanStack%20Query-red?style=flat-square&amp;amp;logo=react-query&amp;amp;logoColor=white" /&gt; &lt;img alt="Tailwind CSS" src="https://img.shields.io/badge/-Tailwind%20CSS-38B2AC?style=flat-square&amp;amp;logo=tailwind-css&amp;amp;logoColor=white" /&gt; &lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/epicenter-so/epicenter/main/LICENSE"&gt;MIT&lt;/a&gt;. Build on it. Fork it. Make it yours. Please contribute if you can.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;strong&gt;Contact:&lt;/strong&gt; &lt;a href="mailto:github@bradenwong.com"&gt;github@bradenwong.com&lt;/a&gt; | &lt;a href="https://go.epicenter.so/discord"&gt;Discord&lt;/a&gt; | &lt;a href="https://twitter.com/braden_wong_"&gt;@braden_wong_&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;sub&gt;Built with ❤️ for data ownership, local-first, and open-souce&lt;/sub&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>openreplay/openreplay</title>
      <link>https://github.com/openreplay/openreplay</link>
      <description>&lt;p&gt;Session replay, cobrowsing and product analytics you can self-host. Ideal for reproducing issues and iterating on your product.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_FR.md"&gt;Français&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_ESP.md"&gt;Español&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_RU.md"&gt;Русский&lt;/a&gt; &amp;nbsp;|&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/README_AR.md"&gt;العربية&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://openreplay.com/#gh-light-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/openreplay-git-banner-light.png" width="100%" /&gt; &lt;/a&gt; &lt;a href="https://openreplay.com/#gh-dark-mode-only"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/openreplay-git-banner-dark.png" width="100%" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;Session replay for developers&lt;/h3&gt; 
&lt;p align="center"&gt;The most advanced session replay for building delightful web apps.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-aws"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-aws.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-gcp"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-google-cloud.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-azure"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-azure.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;a href="https://docs.openreplay.com/deployment/deploy-digitalocean"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/btn-deploy-digital-ocean.svg?sanitize=true" height="40" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/openreplay/openreplay"&gt; &lt;img src="https://raw.githubusercontent.com/openreplay/openreplay/main/static/openreplay-git-hero.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;OpenReplay is an open-source session replay suite you can host yourself, that lets you see what users do on your web app, helping you troubleshoot issues faster.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Session replay.&lt;/strong&gt; OpenReplay replays what users do, but not only. It also shows you what went under the hood, how your website or app behaves by capturing network activity, console logs, JS errors, store actions/state, page speed metrics, cpu/memory usage and much more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Low footprint&lt;/strong&gt;. With a ~26KB (.br) tracker that asynchronously sends minimal data for a very limited impact on performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Self-hosted&lt;/strong&gt;. No more security compliance checks, 3rd-parties processing user data. Everything OpenReplay captures stays in your cloud for a complete control over your data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy controls&lt;/strong&gt;. Fine-grained security features for sanitizing user data.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy deploy&lt;/strong&gt;. With support of major public cloud providers (AWS, GCP, Azure, DigitalOcean).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Session replay:&lt;/strong&gt; Lets you relive your users' experience, see where they struggle and how it affects their behavior. Each session replay is automatically analyzed based on heuristics, for easy triage.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Spot:&lt;/strong&gt; A Chrome extension that lets record bugs directly from your browser — each recording includes all the technical details developers need to fix them.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;DevTools:&lt;/strong&gt; It's like debugging in your own browser. OpenReplay provides you with the full context (network activity, JS errors, store actions/state and 40+ metrics) so you can instantly reproduce bugs and understand performance issues.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Assist:&lt;/strong&gt; Helps you support your users by seeing their live screen and instantly hopping on call (WebRTC) with them without requiring any 3rd-party screen sharing software.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Omni-search:&lt;/strong&gt; Search and filter by almost any user action/criteria, session attribute or technical event, so you can answer any question. No instrumentation required.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Analytics:&lt;/strong&gt; For surfacing the most impactful issues causing conversion and revenue loss.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fine-grained privacy controls:&lt;/strong&gt; Choose what to capture, what to obscure or what to ignore so user data doesn't even reach your servers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Plugins oriented:&lt;/strong&gt; Get to the root cause even faster by tracking application state (Redux, VueX, MobX, NgRx, Pinia and Zustand) and logging GraphQL queries (Apollo, Relay) and Fetch/Axios requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integrations:&lt;/strong&gt; Sync your backend logs with your session replays and see what happened front-to-back. OpenReplay supports Sentry, Datadog, CloudWatch, Stackdriver, Elastic and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment Options&lt;/h2&gt; 
&lt;p&gt;OpenReplay can be deployed anywhere. Follow our step-by-step guides for deploying it on major public clouds:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-aws"&gt;AWS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-gcp"&gt;Google Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-azure"&gt;Azure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-digitalocean"&gt;Digital Ocean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-scaleway"&gt;Scaleway&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-ovhcloud"&gt;OVHcloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.openreplay.com/deployment/deploy-kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;OpenReplay Cloud&lt;/h2&gt; 
&lt;p&gt;For those who want to simply use OpenReplay as a service, &lt;a href="https://app.openreplay.com/signup"&gt;sign up&lt;/a&gt; for a free account on our cloud offering.&lt;/p&gt; 
&lt;h2&gt;Community Support&lt;/h2&gt; 
&lt;p&gt;Please refer to the &lt;a href="https://docs.openreplay.com/"&gt;official OpenReplay documentation&lt;/a&gt;. That should help you troubleshoot common issues. For additional help, you can reach out to us on one of these channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://slack.openreplay.com"&gt;Slack&lt;/a&gt;&amp;nbsp;(Connect with our engineers and community)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openreplay/openreplay/issues"&gt;GitHub&lt;/a&gt;&amp;nbsp;(Bug and issue reports)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/OpenReplayHQ"&gt;Twitter&lt;/a&gt;&amp;nbsp;(Product updates, Great content)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCcnWlW-5wEuuPAwjTR1Ydxw"&gt;YouTube&lt;/a&gt;&amp;nbsp;(How-to tutorials, past Community Calls)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openreplay.com"&gt;Website chat&lt;/a&gt; (Talk to us)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We're always on the lookout for contributions to OpenReplay, and we're glad you're considering it! Not sure where to start? Look for open issues, preferably those marked as good first issues.&lt;/p&gt; 
&lt;p&gt;See our &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;Also, feel free to join our &lt;a href="https://slack.openreplay.com"&gt;Slack&lt;/a&gt; to ask questions, discuss ideas or connect with our contributors.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This monorepo uses several licenses. See &lt;a href="https://raw.githubusercontent.com/openreplay/openreplay/main/LICENSE"&gt;LICENSE&lt;/a&gt; for more details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/poml</title>
      <link>https://github.com/microsoft/poml</link>
      <description>&lt;p&gt;Prompt Orchestration Markup Language&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;POML: Prompt Orchestration Markup Language&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://microsoft.github.io/poml/"&gt;&lt;img src="https://img.shields.io/badge/docs-microsoft.github.io-blue" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://marketplace.visualstudio.com/items?itemName=poml-team.poml"&gt;&lt;img src="https://img.shields.io/visual-studio-marketplace/v/poml-team.poml" alt="VSCode Extension" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/poml/"&gt;&lt;img src="https://img.shields.io/pypi/v/poml" alt="PyPI" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/pomljs"&gt;&lt;img src="https://img.shields.io/npm/v/pomljs" alt="npm (latest)" /&gt;&lt;/a&gt; &lt;a href="https://github.com/microsoft/poml/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/microsoft/poml/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Test Status" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/FhMCqWzAn6"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join-5865F2?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;POML (Prompt Orchestration Markup Language)&lt;/strong&gt; is a novel markup language designed to bring structure, maintainability, and versatility to advanced prompt engineering for Large Language Models (LLMs). It addresses common challenges in prompt development, such as lack of structure, complex data integration, format sensitivity, and inadequate tooling. POML provides a systematic way to organize prompt components, integrate diverse data types seamlessly, and manage presentation variations, empowering developers to create more sophisticated and reliable LLM applications.&lt;/p&gt; 
&lt;h2&gt;Demo Video&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/b9WDcFsKixo"&gt;&lt;img src="https://i3.ytimg.com/vi/b9WDcFsKixo/maxresdefault.jpg" alt="The 5-minute guide to POML" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Structured Prompting Markup&lt;/strong&gt;: Employs an HTML-like syntax with semantic components such as &lt;code&gt;&amp;lt;role&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;task&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;example&amp;gt;&lt;/code&gt; to encourage modular design, enhancing prompt readability, reusability, and maintainability.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Data Handling&lt;/strong&gt;: Incorporates specialized data components (e.g., &lt;code&gt;&amp;lt;document&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;) that seamlessly embed or reference external data sources like text files, spreadsheets, and images, with customizable formatting options.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Decoupled Presentation Styling&lt;/strong&gt;: Features a CSS-like styling system that separates content from presentation. This allows developers to modify styling (e.g., verbosity, syntax format) via &lt;code&gt;&amp;lt;stylesheet&amp;gt;&lt;/code&gt; definitions or inline attributes without altering core prompt logic, mitigating LLM format sensitivity.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Integrated Templating Engine&lt;/strong&gt;: Includes a built-in templating engine with support for variables (&lt;code&gt;{{ }}&lt;/code&gt;), loops (&lt;code&gt;for&lt;/code&gt;), conditionals (&lt;code&gt;if&lt;/code&gt;), and variable definitions (&lt;code&gt;&amp;lt;let&amp;gt;&lt;/code&gt;) for dynamically generating complex, data-driven prompts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rich Development Toolkit&lt;/strong&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;IDE Extension (Visual Studio Code)&lt;/strong&gt;: Provides essential development aids like syntax highlighting, context-aware auto-completion, hover documentation, real-time previews, inline diagnostics for error checking, and integrated interactive testing.&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Software Development Kits (SDKs)&lt;/strong&gt;: Offers SDKs for Node.js (JavaScript/TypeScript) and Python for seamless integration into various application workflows and popular LLM frameworks.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Here's a very simple POML example. Please put it in a file named &lt;code&gt;example.poml&lt;/code&gt;. Make sure it resides in the same directory as the &lt;code&gt;photosynthesis_diagram.png&lt;/code&gt; image file.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-xml"&gt;&amp;lt;poml&amp;gt;
  &amp;lt;role&amp;gt;You are a patient teacher explaining concepts to a 10-year-old.&amp;lt;/role&amp;gt;
  &amp;lt;task&amp;gt;Explain the concept of photosynthesis using the provided image as a reference.&amp;lt;/task&amp;gt;

  &amp;lt;img src="photosynthesis_diagram.png" alt="Diagram of photosynthesis" /&amp;gt;

  &amp;lt;output-format&amp;gt;
    Keep the explanation simple, engaging, and under 100 words.
    Start with "Hey there, future scientist!".
  &amp;lt;/output-format&amp;gt;
&amp;lt;/poml&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example defines a role and task for the LLM, includes an image for context, and specifies the desired output format. With the POML toolkit, the prompt can be easily rendered with a flexible format, and tested with a vision LLM.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Visual Studio Code Extension&lt;/h3&gt; 
&lt;p&gt;Install from &lt;a href="https://marketplace.visualstudio.com/items?itemName=poml-team.poml"&gt;Visual Studio Code Marketplace&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also install the extension manually by downloading the &lt;code&gt;.vsix&lt;/code&gt; file from our &lt;a href="https://github.com/microsoft/poml/releases"&gt;GitHub releases page&lt;/a&gt; and installing it in VS Code via the Extensions view.&lt;/p&gt; 
&lt;p&gt;Before testing prompts with the POML toolkit, make sure you have configured your preferred LLM model, API key, and endpoint. If these are not set, prompt testing will not work.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;To configure in Visual Studio Code:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the extension settings (open "Settings" and search for "POML").&lt;/li&gt; 
 &lt;li&gt;Set your model provider (e.g., OpenAI, Azure, Google), API key, and endpoint URL in the POML section.&lt;/li&gt; 
 &lt;li&gt;Alternatively, you can add these settings directly to your &lt;code&gt;settings.json&lt;/code&gt; file.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Node.js (via npm)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install pomljs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Python (via pip)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install poml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For development or local installation, you might use &lt;code&gt;pip install -e .&lt;/code&gt; from a cloned repository.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Refer to the &lt;a href="https://microsoft.github.io/poml"&gt;documentation&lt;/a&gt; for more details on installing the nightly build.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For detailed information on POML syntax, components, styling, templating, SDKs, and the VS Code extension, please refer to our &lt;a href="https://microsoft.github.io/poml"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Learn More&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Watch our Demo Video on YouTube:&lt;/strong&gt; &lt;a href="https://youtu.be/b9WDcFsKixo"&gt;POML Introduction &amp;amp; Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Join our Discord community:&lt;/strong&gt; Connect with the team and other users on our &lt;a href="https://discord.gg/FhMCqWzAn6"&gt;Discord server&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Read the Prompt Orchestration Markup Language paper:&lt;/strong&gt; &lt;a href="https://arxiv.org/abs/2508.13948"&gt;Prompt Orchestration Markup Language&lt;/a&gt; presents the design of POML and its impact on prompt engineering.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Explore Content-Format Integrated Prompt Optimization:&lt;/strong&gt; &lt;a href="https://arxiv.org/abs/2502.04295"&gt;Beyond Prompt Content: Enhancing LLM Performance via Content-Format Integrated Prompt Optimization&lt;/a&gt; proposes an iterative approach that jointly optimizes prompt content and formatting to improve LLM performance.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find POML useful or related to your research, please cite the following paper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{zhang2025promptorchestrationmarkuplanguage,
      title={Prompt Orchestration Markup Language}, 
      author={Yuge Zhang and Nan Chen and Jiahang Xu and Yuqing Yang},
      year={2025},
      eprint={2508.13948},
      archivePrefix={arXiv},
      primaryClass={cs.HC},
      url={https://arxiv.org/abs/2508.13948}, 
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Ecosystem &amp;amp; Community Projects&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/linmx0130/mini-poml-rs"&gt;mini-poml-rs&lt;/a&gt; – Experimental Rust-based POML renderer for environments without JavaScript or Python interpreters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GhennadiiMir/poml"&gt;poml-ruby&lt;/a&gt; – Ruby gem implementation of POML for Ruby applications.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.opensource.microsoft.com"&gt;https://cla.opensource.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt; 
&lt;h2&gt;Responsible AI&lt;/h2&gt; 
&lt;p&gt;This project has been evaluated and certified to comply with the Microsoft Responsible AI Standard. The team will continue to monitor and maintain the repository, addressing any severe issues, including potential harms, if they arise. For more details, refer to the &lt;a href="https://raw.githubusercontent.com/microsoft/poml/main/RAI_README.md"&gt;Responsible AI Readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the &lt;a href="https://raw.githubusercontent.com/microsoft/poml/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>menloresearch/jan</title>
      <link>https://github.com/menloresearch/jan</link>
      <description>&lt;p&gt;Jan is an open source alternative to ChatGPT that runs 100% offline on your computer&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Jan - Local AI Assistant&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/menloresearch/jan/dev/docs/src/pages/docs/_assets/jan-app.png" alt="Jan AI" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section --&gt; &lt;img alt="GitHub commit activity" src="https://img.shields.io/github/commit-activity/m/menloresearch/jan" /&gt; &lt;img alt="Github Last Commit" src="https://img.shields.io/github/last-commit/menloresearch/jan" /&gt; &lt;img alt="Github Contributors" src="https://img.shields.io/github/contributors/menloresearch/jan" /&gt; &lt;img alt="GitHub closed issues" src="https://img.shields.io/github/issues-closed/menloresearch/jan" /&gt; &lt;img alt="Discord" src="https://img.shields.io/discord/1107178041848909847?label=discord" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://jan.ai/docs/quickstart"&gt;Getting Started&lt;/a&gt; - &lt;a href="https://jan.ai/docs"&gt;Docs&lt;/a&gt; - &lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - &lt;a href="https://github.com/menloresearch/jan/issues"&gt;Bug reports&lt;/a&gt; - &lt;a href="https://discord.gg/AsJ8krTT3N"&gt;Discord&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Jan is an AI assistant that can run 100% offline on your device. Download and run LLMs with &lt;strong&gt;full control&lt;/strong&gt; and &lt;strong&gt;privacy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;The easiest way to get started is by downloading one of the following versions for your respective operating system:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Platform&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Stable&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;b&gt;Nightly&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Windows&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/win-x64"&gt;jan.exe&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;macOS&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/mac-universal"&gt;jan.dmg&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (deb)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-deb"&gt;jan.deb&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;b&gt;Linux (AppImage)&lt;/b&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/latest/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://app.jan.ai/download/nightly/linux-amd64-appimage"&gt;jan.AppImage&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;Download from &lt;a href="https://jan.ai/"&gt;jan.ai&lt;/a&gt; or &lt;a href="https://github.com/menloresearch/jan/releases"&gt;GitHub Releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local AI Models&lt;/strong&gt;: Download and run LLMs (Llama, Gemma, Qwen, etc.) from HuggingFace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud Integration&lt;/strong&gt;: Connect to OpenAI, Anthropic, Mistral, Groq, and others&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Custom Assistants&lt;/strong&gt;: Create specialized AI assistants for your tasks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OpenAI-Compatible API&lt;/strong&gt;: Local server at &lt;code&gt;localhost:1337&lt;/code&gt; for other applications&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Model Context Protocol&lt;/strong&gt;: MCP integration for enhanced capabilities&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Privacy First&lt;/strong&gt;: Everything runs locally when you want it to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Build from Source&lt;/h2&gt; 
&lt;p&gt;For those who enjoy the scenic route:&lt;/p&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js ≥ 20.0.0&lt;/li&gt; 
 &lt;li&gt;Yarn ≥ 1.22.0&lt;/li&gt; 
 &lt;li&gt;Make ≥ 3.81&lt;/li&gt; 
 &lt;li&gt;Rust (for Tauri)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Make&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan
make dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This handles everything: installs dependencies, builds core components, and launches the app.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Available make targets:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;make dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Run with Mise (easier)&lt;/h3&gt; 
&lt;p&gt;You can also run with &lt;a href="https://mise.jdx.dev/"&gt;mise&lt;/a&gt;, which is a bit easier as it ensures Node.js, Rust, and other dependency versions are automatically managed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/menloresearch/jan
cd jan

# Install mise (if not already installed)
curl https://mise.run | sh

# Install tools and start development
mise install    # installs Node.js, Rust, and other tools
mise dev        # runs the full development setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available mise commands:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;mise dev&lt;/code&gt; - Full development setup and launch&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise build&lt;/code&gt; - Production build&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise test&lt;/code&gt; - Run tests and linting&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise clean&lt;/code&gt; - Delete everything and start fresh&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mise tasks&lt;/code&gt; - List all available tasks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Manual Commands&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yarn install
yarn build:tauri:plugin:api
yarn build:core
yarn build:extensions
yarn dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Minimum specs for a decent experience:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: 13.6+ (8GB RAM for 3B models, 16GB for 7B, 32GB for 13B)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 10+ with GPU support for NVIDIA/AMD/Intel Arc&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Most distributions work, GPU acceleration available&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For detailed compatibility, check our &lt;a href="https://jan.ai/docs/desktop/mac"&gt;installation guides&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If things go sideways:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Check our &lt;a href="https://jan.ai/docs/troubleshooting"&gt;troubleshooting docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Copy your error logs and system specs&lt;/li&gt; 
 &lt;li&gt;Ask for help in our &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; &lt;code&gt;#🆘|jan-help&lt;/code&gt; channel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions welcome. See &lt;a href="https://raw.githubusercontent.com/menloresearch/jan/dev/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for the full spiel.&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/docs"&gt;Documentation&lt;/a&gt; - The manual you should read&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/api-reference"&gt;API Reference&lt;/a&gt; - For the technically inclined&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jan.ai/changelog"&gt;Changelog&lt;/a&gt; - What we broke and fixed&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt; - Where the community lives&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bugs&lt;/strong&gt;: &lt;a href="https://github.com/menloresearch/jan/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Business&lt;/strong&gt;: &lt;a href="mailto:hello@jan.ai"&gt;hello@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Jobs&lt;/strong&gt;: &lt;a href="mailto:hr@jan.ai"&gt;hr@jan.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;General Discussion&lt;/strong&gt;: &lt;a href="https://discord.gg/FTk2MvZwJH"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0 - Because sharing is caring.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Built on the shoulders of giants:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ggerganov/llama.cpp"&gt;Llama.cpp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tauri.app/"&gt;Tauri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/scalar/scalar"&gt;Scalar&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>intellectronica/ruler</title>
      <link>https://github.com/intellectronica/ruler</link>
      <description>&lt;p&gt;Ruler — apply the same rules to all coding agents&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Ruler: Centralise Your AI Coding Assistant Instructions&lt;/h1&gt; 
&lt;table style="width:100%"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td style="vertical-align: top;"&gt; &lt;p&gt; &lt;a href="https://github.com/intellectronica/ruler/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/intellectronica/ruler/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/@intellectronica/ruler"&gt;&lt;img src="https://badge.fury.io/js/%40intellectronica%2Fruler.svg?sanitize=true" alt="npm version" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt; &lt;/p&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;strong&gt;GitHub&lt;/strong&gt;: &lt;a href="https://github.com/intellectronica/ruler"&gt;intellectronica/ruler&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;strong&gt;NPM&lt;/strong&gt;: &lt;a href="https://www.npmjs.com/package/@intellectronica/ruler"&gt;@intellectronica/ruler&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; 
    &lt;hr /&gt; &lt;p&gt; &lt;em&gt;Animation by &lt;a href="https://isaacflath.com/"&gt;Isaac Flath&lt;/a&gt; of &lt;strong&gt;&lt;a href="https://elite-ai-assisted-coding.dev/"&gt;Elite AI-Assisted Coding&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt; ➡︎ &lt;/p&gt; &lt;/td&gt; 
   &lt;td style="vertical-align: top; width:33%;"&gt; &lt;img src="https://raw.githubusercontent.com/intellectronica/ruler/main/img/ruler-short.gif" alt="Ruler demo" style="width:300px; height:auto; display:block;" /&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Beta Research Preview&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Please test this version carefully in your environment&lt;/li&gt; 
  &lt;li&gt;Report issues at &lt;a href="https://github.com/intellectronica/ruler/issues"&gt;https://github.com/intellectronica/ruler/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Why Ruler?&lt;/h2&gt; 
&lt;p&gt;Managing instructions across multiple AI coding tools becomes complex as your team grows. Different agents (GitHub Copilot, Claude, Cursor, Aider, etc.) require their own configuration files, leading to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Inconsistent guidance&lt;/strong&gt; across AI tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Duplicated effort&lt;/strong&gt; maintaining multiple config files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Context drift&lt;/strong&gt; as project requirements evolve&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Onboarding friction&lt;/strong&gt; for new AI tools&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Ruler solves this by providing a &lt;strong&gt;single source of truth&lt;/strong&gt; for all your AI agent instructions, automatically distributing them to the right configuration files.&lt;/p&gt; 
&lt;h2&gt;Core Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Centralised Rule Management&lt;/strong&gt;: Store all AI instructions in a dedicated &lt;code&gt;.ruler/&lt;/code&gt; directory using Markdown files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automatic Distribution&lt;/strong&gt;: Ruler applies these rules to configuration files of supported AI agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Targeted Agent Configuration&lt;/strong&gt;: Fine-tune which agents are affected and their specific output paths via &lt;code&gt;ruler.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server Propagation&lt;/strong&gt;: Manage and distribute Model Context Protocol (MCP) server settings&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;.gitignore&lt;/code&gt; Automation&lt;/strong&gt;: Keeps generated agent config files out of version control automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Simple CLI&lt;/strong&gt;: Easy-to-use commands for initialising and applying configurations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported AI Agents&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Agent&lt;/th&gt; 
   &lt;th&gt;Rules File(s)&lt;/th&gt; 
   &lt;th&gt;MCP Configuration&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GitHub Copilot&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.github/copilot-instructions.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.vscode/mcp.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Claude Code&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;CLAUDE.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.mcp.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenAI Codex CLI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AGENTS.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.codex/config.toml&lt;/code&gt;, &lt;code&gt;~/.codex/config.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Jules&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AGENTS.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cursor&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.cursor/rules/ruler_cursor_instructions.mdc&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.cursor/mcp.json&lt;/code&gt;, &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windsurf&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.windsurf/rules/ruler_windsurf_instructions.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;~/.codeium/windsurf/mcp_config.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cline&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.clinerules&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Amp&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AGENT.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Aider&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;ruler_aider_instructions.md&lt;/code&gt;, &lt;code&gt;.aider.conf.yml&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.mcp.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Firebase Studio&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.idx/airules.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Open Hands&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.openhands/microagents/repo.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.openhands/config.toml&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gemini CLI&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;GEMINI.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.gemini/settings.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Junie&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.junie/guidelines.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AugmentCode&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.augment/rules/ruler_augment_instructions.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.vscode/settings.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kilo Code&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.kilocode/rules/ruler_kilocode_instructions.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.kilocode/mcp.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;OpenCode&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;AGENTS.md&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;opencode.json&lt;/code&gt;, &lt;code&gt;~/.config/opencode/opencode.json&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Goose&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;.goosehints&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Node.js 18.x or higher is required.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Global Installation (Recommended for CLI use):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g @intellectronica/ruler
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Using &lt;code&gt;npx&lt;/code&gt; (for one-off commands):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @intellectronica/ruler apply
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Project Initialisation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Navigate to your project's root directory&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;ruler init&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;This creates: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;.ruler/&lt;/code&gt; directory&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;.ruler/instructions.md&lt;/code&gt;: A starter Markdown file for your rules&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;.ruler/ruler.toml&lt;/code&gt;: The main configuration file for Ruler&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;.ruler/mcp.json&lt;/code&gt;: An example MCP server configuration&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Additionally, you can create a global configuration to use when no local &lt;code&gt;.ruler/&lt;/code&gt; directory is found:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler init --global
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The global configuration will be created to &lt;code&gt;$XDG_CONFIG_HOME/ruler&lt;/code&gt; (default: &lt;code&gt;~/.config/ruler&lt;/code&gt;).&lt;/p&gt; 
&lt;h2&gt;Core Concepts&lt;/h2&gt; 
&lt;h3&gt;The &lt;code&gt;.ruler/&lt;/code&gt; Directory&lt;/h3&gt; 
&lt;p&gt;This is your central hub for all AI agent instructions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Rule Files (&lt;code&gt;*.md&lt;/code&gt;)&lt;/strong&gt;: Discovered recursively from &lt;code&gt;.ruler/&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_HOME/ruler&lt;/code&gt; and alphabetically concatenated&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Concatenation Marker&lt;/strong&gt;: Each file's content is prepended with &lt;code&gt;--- Source: &amp;lt;relative_path_to_md_file&amp;gt; ---&lt;/code&gt; for traceability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;ruler.toml&lt;/code&gt;&lt;/strong&gt;: Master configuration for Ruler's behavior, agent selection, and output paths&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;mcp.json&lt;/code&gt;&lt;/strong&gt;: Shared MCP server settings&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Best Practices for Rule Files&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Granularity&lt;/strong&gt;: Break down complex instructions into focused &lt;code&gt;.md&lt;/code&gt; files:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;coding_style.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;api_conventions.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;project_architecture.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;security_guidelines.md&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example rule file (&lt;code&gt;.ruler/python_guidelines.md&lt;/code&gt;):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-markdown"&gt;# Python Project Guidelines

## General Style

- Follow PEP 8 for all Python code
- Use type hints for all function signatures and complex variables
- Keep functions short and focused on a single task

## Error Handling

- Use specific exception types rather than generic `Exception`
- Log errors effectively with context

## Security

- Always validate and sanitize user input
- Be mindful of potential injection vulnerabilities
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage: The &lt;code&gt;apply&lt;/code&gt; Command&lt;/h2&gt; 
&lt;h3&gt;Primary Command&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply [options]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;apply&lt;/code&gt; command looks for &lt;code&gt;.ruler/&lt;/code&gt; in the current directory tree, reading the first match. If no such directory is found, it will look for a global configuration in &lt;code&gt;$XDG_CONFIG_HOME/ruler&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--project-root &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path to your project's root (default: current directory)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--agents &amp;lt;agent1,agent2,...&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Comma-separated list of agent names to target (amp, copilot, claude, codex, cursor, windsurf, cline, aider, firebase, gemini-cli, junie, augmentcode, kilocode)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--config &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path to a custom &lt;code&gt;ruler.toml&lt;/code&gt; configuration file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--mcp&lt;/code&gt; / &lt;code&gt;--with-mcp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable applying MCP server configurations (default: true)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--no-mcp&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disable applying MCP server configurations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--mcp-overwrite&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overwrite native MCP config entirely instead of merging&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--gitignore&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable automatic .gitignore updates (default: true)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--no-gitignore&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disable automatic .gitignore updates&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--local-only&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Do not look for configuration in &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt; / &lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Display detailed output during execution&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Common Examples&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Apply rules to all configured agents:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Apply rules only to GitHub Copilot and Claude:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply --agents copilot,claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Apply rules only to Firebase Studio:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply --agents firebase
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Use a specific configuration file:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply --config ./team-configs/ruler.frontend.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Apply rules with verbose output:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply --verbose
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Apply rules but skip MCP and .gitignore updates:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply --no-mcp --no-gitignore
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage: The &lt;code&gt;revert&lt;/code&gt; Command&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;revert&lt;/code&gt; command safely undoes all changes made by &lt;code&gt;ruler apply&lt;/code&gt;, restoring your project to its pre-ruler state. It intelligently restores files from backups (&lt;code&gt;.bak&lt;/code&gt; files) when available, or removes generated files that didn't exist before.&lt;/p&gt; 
&lt;h3&gt;Why Revert is Needed&lt;/h3&gt; 
&lt;p&gt;When experimenting with different rule configurations or switching between projects, you may want to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Clean slate&lt;/strong&gt;: Remove all ruler-generated files to start fresh&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Restore originals&lt;/strong&gt;: Revert modified files back to their original state&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Selective cleanup&lt;/strong&gt;: Remove configurations for specific agents only&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Safe experimentation&lt;/strong&gt;: Try ruler without fear of permanent changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Primary Command&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler revert [options]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Option&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--project-root &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path to your project's root (default: current directory)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--agents &amp;lt;agent1,agent2,...&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Comma-separated list of agent names to revert (amp, copilot, claude, codex, cursor, windsurf, cline, aider, firebase, gemini-cli, junie, kilocode, opencode)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--config &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Path to a custom &lt;code&gt;ruler.toml&lt;/code&gt; configuration file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--keep-backups&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Keep backup files (.bak) after restoration (default: false)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--dry-run&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Preview changes without actually reverting files&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--verbose&lt;/code&gt; / &lt;code&gt;-v&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Display detailed output during execution&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--local-only&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Only search for local .ruler directories, ignore global config&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Common Examples&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Revert all ruler changes:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler revert
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Preview what would be reverted (dry-run):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler revert --dry-run
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Revert only specific agents:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler revert --agents claude,copilot
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Revert with detailed output:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler revert --verbose
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Keep backup files after reverting:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler revert --keep-backups
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration (&lt;code&gt;ruler.toml&lt;/code&gt;) in Detail&lt;/h2&gt; 
&lt;h3&gt;Location&lt;/h3&gt; 
&lt;p&gt;Defaults to &lt;code&gt;.ruler/ruler.toml&lt;/code&gt; in the project root. Override with &lt;code&gt;--config&lt;/code&gt; CLI option.&lt;/p&gt; 
&lt;h3&gt;Complete Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# Default agents to run when --agents is not specified
# Uses case-insensitive substring matching
default_agents = ["copilot", "claude", "aider"]

# --- Global MCP Server Configuration ---
[mcp]
# Enable/disable MCP propagation globally (default: true)
enabled = true
# Global merge strategy: 'merge' or 'overwrite' (default: 'merge')
merge_strategy = "merge"

# --- Global .gitignore Configuration ---
[gitignore]
# Enable/disable automatic .gitignore updates (default: true)
enabled = true

# --- Agent-Specific Configurations ---
[agents.copilot]
enabled = true
output_path = ".github/copilot-instructions.md"

[agents.claude]
enabled = true
output_path = "CLAUDE.md"

[agents.aider]
enabled = true
output_path_instructions = "ruler_aider_instructions.md"
output_path_config = ".aider.conf.yml"

# OpenAI Codex CLI agent and MCP config
[agents.codex]
enabled = true
output_path = "AGENTS.md"
output_path_config = ".codex/config.toml"

# Agent-specific MCP configuration for Codex CLI
[agents.codex.mcp]
enabled = true
merge_strategy = "merge"

[agents.firebase]
enabled = true
output_path = ".idx/airules.md"

[agents.gemini-cli]
enabled = true

[agents.jules]
enabled = true

[agents.junie]
enabled = true
output_path = ".junie/guidelines.md"

# Agent-specific MCP configuration
[agents.cursor.mcp]
enabled = true
merge_strategy = "merge"

# Disable specific agents
[agents.windsurf]
enabled = false

[agents.kilocode]
enabled = true
output_path = ".kilocode/rules/ruler_kilocode_instructions.md"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration Precedence&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;CLI flags&lt;/strong&gt; (e.g., &lt;code&gt;--agents&lt;/code&gt;, &lt;code&gt;--no-mcp&lt;/code&gt;, &lt;code&gt;--mcp-overwrite&lt;/code&gt;, &lt;code&gt;--no-gitignore&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Settings in &lt;code&gt;ruler.toml&lt;/code&gt;&lt;/strong&gt; (&lt;code&gt;default_agents&lt;/code&gt;, specific agent settings, global sections)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruler's built-in defaults&lt;/strong&gt; (all agents enabled, standard output paths, MCP enabled with 'merge')&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;MCP (Model Context Protocol) Server Configuration&lt;/h2&gt; 
&lt;p&gt;MCP provides broader context to AI models through server configurations. Ruler can manage and distribute these settings across compatible agents.&lt;/p&gt; 
&lt;h3&gt;&lt;code&gt;.ruler/mcp.json&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;Define your project's MCP servers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/path/to/project"
      ]
    },
    "git": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-git", "--repository", "."]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ruler uses this file with the &lt;code&gt;merge&lt;/code&gt; (default) or &lt;code&gt;overwrite&lt;/code&gt; strategy, controlled by &lt;code&gt;ruler.toml&lt;/code&gt; or CLI flags.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note for OpenAI Codex CLI:&lt;/strong&gt; To apply the local Codex CLI MCP configuration, set the &lt;code&gt;CODEX_HOME&lt;/code&gt; environment variable to your project’s &lt;code&gt;.codex&lt;/code&gt; directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export CODEX_HOME="$(pwd)/.codex"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;code&gt;.gitignore&lt;/code&gt; Integration&lt;/h2&gt; 
&lt;p&gt;Ruler automatically manages your &lt;code&gt;.gitignore&lt;/code&gt; file to keep generated agent configuration files out of version control.&lt;/p&gt; 
&lt;h3&gt;How it Works&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Creates or updates &lt;code&gt;.gitignore&lt;/code&gt; in your project root&lt;/li&gt; 
 &lt;li&gt;Adds paths to a managed block marked with &lt;code&gt;# START Ruler Generated Files&lt;/code&gt; and &lt;code&gt;# END Ruler Generated Files&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Preserves existing content outside this block&lt;/li&gt; 
 &lt;li&gt;Sorts paths alphabetically and uses relative POSIX-style paths&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example &lt;code&gt;.gitignore&lt;/code&gt; Section&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-gitignore"&gt;# Your existing rules
node_modules/
*.log

# START Ruler Generated Files
.aider.conf.yml
.clinerules
.cursor/rules/ruler_cursor_instructions.mdc
.github/copilot-instructions.md
.windsurf/rules/ruler_windsurf_instructions.md
AGENTS.md
CLAUDE.md
ruler_aider_instructions.md
# END Ruler Generated Files

dist/
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Control Options&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;CLI flags&lt;/strong&gt;: &lt;code&gt;--gitignore&lt;/code&gt; or &lt;code&gt;--no-gitignore&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configuration&lt;/strong&gt;: &lt;code&gt;[gitignore].enabled&lt;/code&gt; in &lt;code&gt;ruler.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Default&lt;/strong&gt;: enabled&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Practical Usage Scenarios&lt;/h2&gt; 
&lt;h3&gt;Scenario 1: Getting Started Quickly&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize Ruler in your project
cd your-project
ruler init

# Edit the generated files
# - Add your coding guidelines to .ruler/instructions.md
# - Customize .ruler/ruler.toml if needed

# Apply rules to all AI agents
ruler apply
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scenario 2: Team Standardization&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create &lt;code&gt;.ruler/coding_standards.md&lt;/code&gt;, &lt;code&gt;.ruler/api_usage.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Commit the &lt;code&gt;.ruler&lt;/code&gt; directory to your repository&lt;/li&gt; 
 &lt;li&gt;Team members pull changes and run &lt;code&gt;ruler apply&lt;/code&gt; to update their local AI agent configurations&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Scenario 3: Project-Specific Context for AI&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Detail your project's architecture in &lt;code&gt;.ruler/project_overview.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Describe primary data structures in &lt;code&gt;.ruler/data_models.md&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;ruler apply&lt;/code&gt; to help AI tools provide more relevant suggestions&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Integration with NPM Scripts&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "scripts": {
    "ruler:apply": "ruler apply",
    "dev": "npm run ruler:apply &amp;amp;&amp;amp; your_dev_command",
    "precommit": "npm run ruler:apply"
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Integration with GitHub Actions&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# .github/workflows/ruler-check.yml
name: Check Ruler Configuration
on:
  pull_request:
    paths: ['.ruler/**']

jobs:
  check-ruler:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Ruler
        run: npm install -g @intellectronica/ruler

      - name: Apply Ruler configuration
        run: ruler apply --no-gitignore

      - name: Check for uncommitted changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "::error::Ruler configuration is out of sync!"
            echo "Please run 'ruler apply' locally and commit the changes."
            exit 1
          fi
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;h3&gt;Common Issues&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;"Cannot find module" errors:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure Ruler is installed globally: &lt;code&gt;npm install -g @intellectronica/ruler&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Or use &lt;code&gt;npx @intellectronica/ruler&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Permission denied errors:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;On Unix systems, you may need &lt;code&gt;sudo&lt;/code&gt; for global installation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Agent files not updating:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check if the agent is enabled in &lt;code&gt;ruler.toml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Verify agent isn't excluded by &lt;code&gt;--agents&lt;/code&gt; flag&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;--verbose&lt;/code&gt; to see detailed execution logs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Configuration validation errors:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ruler now validates &lt;code&gt;ruler.toml&lt;/code&gt; format and will show specific error details&lt;/li&gt; 
 &lt;li&gt;Check that all configuration values match the expected types and formats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Debug Mode&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;--verbose&lt;/code&gt; flag to see detailed execution logs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;ruler apply --verbose
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This shows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Configuration loading details&lt;/li&gt; 
 &lt;li&gt;Agent selection logic&lt;/li&gt; 
 &lt;li&gt;File processing information&lt;/li&gt; 
 &lt;li&gt;MCP configuration steps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I use different rules for different agents?&lt;/strong&gt; A: Currently, all agents receive the same concatenated rules. For agent-specific instructions, include sections in your rule files like "## GitHub Copilot Specific" or "## Aider Configuration".&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do I temporarily disable Ruler for an agent?&lt;/strong&gt; A: Set &lt;code&gt;enabled = false&lt;/code&gt; in &lt;code&gt;ruler.toml&lt;/code&gt; under &lt;code&gt;[agents.agentname]&lt;/code&gt;, or use &lt;code&gt;--agents&lt;/code&gt; flag to specify only the agents you want.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: What happens to my existing agent configuration files?&lt;/strong&gt; A: Ruler creates backups with &lt;code&gt;.bak&lt;/code&gt; extension before overwriting any existing files.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: Can I run Ruler in CI/CD pipelines?&lt;/strong&gt; A: Yes! Use &lt;code&gt;ruler apply --no-gitignore&lt;/code&gt; in CI to avoid modifying &lt;code&gt;.gitignore&lt;/code&gt;. See the GitHub Actions example above.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Q: How do I migrate from version 0.1.x to 0.2.0?&lt;/strong&gt; A: Version 0.2.0 is backward compatible. Your existing &lt;code&gt;.ruler/&lt;/code&gt; directory and &lt;code&gt;ruler.toml&lt;/code&gt; will continue to work. New features like verbose logging and improved error messages are opt-in.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/intellectronica/ruler.git
cd ruler
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run all tests
npm test

# Run tests with coverage
npm run test:coverage

# Run tests in watch mode
npm run test:watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Code Quality&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run linting
npm run lint

# Run formatting
npm run format
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create a feature branch&lt;/li&gt; 
 &lt;li&gt;Make your changes&lt;/li&gt; 
 &lt;li&gt;Add tests for new functionality&lt;/li&gt; 
 &lt;li&gt;Ensure all tests pass&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For bugs and feature requests, please &lt;a href="https://github.com/intellectronica/ruler/issues"&gt;open an issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;© Eleanor Berger&lt;br /&gt; &lt;a href="https://ai.intellectronica.net/"&gt;ai.intellectronica.net&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>midday-ai/midday</title>
      <link>https://github.com/midday-ai/midday</link>
      <description>&lt;p&gt;Invoicing, Time tracking, File reconciliation, Storage, Financial Overview &amp; your own Assistant made for Freelancers&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/midday-ai/midday/main/github.png" alt="hero" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h1 align="center"&gt;&lt;b&gt;Midday&lt;/b&gt;&lt;/h1&gt; 
&lt;p align="center"&gt; Run your business smarter &lt;br /&gt; &lt;br /&gt; &lt;a href="https://go.midday.ai/anPiuRx"&gt;Discord&lt;/a&gt; · &lt;a href="https://midday.ai"&gt;Website&lt;/a&gt; · &lt;a href="https://github.com/midday-ai/midday/issues"&gt;Issues&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://go.midday.ai/K7GwMoQ"&gt; &lt;img src="https://img.shields.io/badge/Supabase-3ECF8E?style=for-the-badge&amp;amp;logo=supabase&amp;amp;logoColor=white" alt="Supabase" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About Midday&lt;/h2&gt; 
&lt;p&gt;Midday is an all-in-one tool designed to help freelancers, contractors, consultants, and solo entrepreneurs manage their business operations more efficiently. It integrates various functions typically scattered across multiple platforms into a single, cohesive system.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Time Tracking&lt;/strong&gt;: Allows for live time tracking of projects to boost productivity and collaboration, providing insightful project overviews.&lt;br /&gt; &lt;strong&gt;Invoicing&lt;/strong&gt;: An upcoming feature that will enable users to create web-based invoices, collaborate in real-time, and synchronize projects seamlessly.&lt;br /&gt; &lt;strong&gt;Magic Inbox&lt;/strong&gt;: Automatically matches incoming invoices or receipts to the correct transactions, simplifying financial tracking and organization.&lt;br /&gt; &lt;strong&gt;Vault&lt;/strong&gt;: Secure storage for important files like contracts and agreements, keeping everything in one place for easy access​.&lt;br /&gt; &lt;strong&gt;Seamless Export&lt;/strong&gt;: Facilitates easy export of financial data, packaged neatly in CSV files for accountants.&lt;br /&gt; &lt;strong&gt;Assistant&lt;/strong&gt;: Provides tailored insights into financial situations, helping users understand spending patterns, cut costs, and find documents.&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;We are working on the documentation to get started with Midday for local development: &lt;a href="https://docs.midday.ai"&gt;https://docs.midday.ai&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;App Architecture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monorepo&lt;/li&gt; 
 &lt;li&gt;Bun&lt;/li&gt; 
 &lt;li&gt;React&lt;/li&gt; 
 &lt;li&gt;TypeScript&lt;/li&gt; 
 &lt;li&gt;Nextjs&lt;/li&gt; 
 &lt;li&gt;Supabase&lt;/li&gt; 
 &lt;li&gt;Shadcn&lt;/li&gt; 
 &lt;li&gt;Tauri&lt;/li&gt; 
 &lt;li&gt;Expo&lt;/li&gt; 
 &lt;li&gt;TailwindCSS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hosting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supabase (database, storage, realtime, auth)&lt;/li&gt; 
 &lt;li&gt;Vercel (Website, Dashboard)&lt;/li&gt; 
 &lt;li&gt;Fly.io (API/tRPC)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Services&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Trigger.dev (background jobs)&lt;/li&gt; 
 &lt;li&gt;Resend (Transactional &amp;amp; Marketing)&lt;/li&gt; 
 &lt;li&gt;Novu (notifications)&lt;/li&gt; 
 &lt;li&gt;Github Actions (CI/CD)&lt;/li&gt; 
 &lt;li&gt;GoCardLess (Bank connection EU)&lt;/li&gt; 
 &lt;li&gt;Plaid (Bank connection in Canada and US)&lt;/li&gt; 
 &lt;li&gt;Teller (Bank connection in the US)&lt;/li&gt; 
 &lt;li&gt;OpenPanel (Events and Analytics)&lt;/li&gt; 
 &lt;li&gt;Polar (Payment processing)&lt;/li&gt; 
 &lt;li&gt;Typesense (Search)&lt;/li&gt; 
 &lt;li&gt;Mistral&lt;/li&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Repo Activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/96aae855e5dd87c30d53c1d154b37cf7aa5a89b3.svg?sanitize=true" alt="Alt" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;strong&gt;&lt;a href="https://opensource.org/licenses/AGPL-3.0"&gt;AGPL-3.0&lt;/a&gt;&lt;/strong&gt; for non-commercial use.&lt;/p&gt; 
&lt;h3&gt;Commercial Use&lt;/h3&gt; 
&lt;p&gt;For commercial use or deployments requiring a setup fee, please contact us for a commercial license at &lt;a href="mailto:engineer@midday.ai"&gt;engineer@midday.ai&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;By using this software, you agree to the terms of the license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bytedance/UI-TARS-desktop</title>
      <link>https://github.com/bytedance/UI-TARS-desktop</link>
      <description>&lt;p&gt;The Open-sourced Multimodal AI Agent Stack connecting Cutting-edge AI Models and Agent Infra.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;img alt="Agent TARS Banner" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/images/tars.png" /&gt; 
&lt;/picture&gt; 
&lt;br /&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/README.zh-CN.md"&gt;简体中文&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://trendshift.io/repositories/13584"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13584" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;TARS&lt;sup&gt;*&lt;/sup&gt;&lt;/b&gt; is a Multimodal AI Agent stack, currently shipping two projects: &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt;&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS-desktop&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools. &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;UI-TARS Desktop&lt;/b&gt; is a desktop application that provides a native GUI Agent based on the &lt;a href="https://github.com/bytedance/UI-TARS" target="_blank"&gt;UI-TARS&lt;/a&gt; model. &lt;br /&gt; &lt;br /&gt; It primarily ships a &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#get-model-and-run-local-operator" target="_blank"&gt;local&lt;/a&gt; and &lt;a href="https://github.com/bytedance/UI-TARS-desktop/raw/main/docs/quick-start.md#run-remote-operator" target="_blank"&gt;remote&lt;/a&gt; computer as well as browser operators. &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#news"&gt;News&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#agent-tars"&gt;Agent TARS&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#core-features"&gt;Core Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#documentation"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#ui-tars-desktop"&gt;UI-TARS Desktop&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#showcase-1"&gt;Showcase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#quick-start-1"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/#citation"&gt;Citation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;h2&gt;News&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-25]&lt;/strong&gt; We released a Agent TARS Beta and Agent TARS CLI - &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html"&gt;Introducing Agent TARS Beta&lt;/a&gt;, a multimodal AI agent that aims to explore a work form that is closer to human-like task completion through rich multimodal capabilities (such as GUI Agent, Vision) and seamless integration with various real-world tools.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-06-12]&lt;/strong&gt; - 🎁 We are thrilled to announce the release of UI-TARS Desktop v0.2.0! This update introduces two powerful new features: &lt;strong&gt;Remote Computer Operator&lt;/strong&gt; and &lt;strong&gt;Remote Browser Operator&lt;/strong&gt;—both completely free. No configuration required: simply click to remotely control any computer or browser, and experience a new level of convenience and intelligence.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-04-17]&lt;/strong&gt; - 🎉 We're thrilled to announce the release of new UI-TARS Desktop application v0.1.0, featuring a redesigned Agent UI. The application enhances the computer using experience, introduces new browser operation features, and supports &lt;a href="https://seed-tars.com/1.5"&gt;the advanced UI-TARS-1.5 model&lt;/a&gt; for improved performance and precise control.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-02-20]&lt;/strong&gt; - 📦 Introduced &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/sdk.md"&gt;UI TARS SDK&lt;/a&gt;, is a powerful cross-platform toolkit for building GUI automation agents.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;[2025-01-23]&lt;/strong&gt; - 🚀 We updated the &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/deployment.md#cloud-deployment"&gt;Cloud Deployment&lt;/a&gt;&lt;/strong&gt; section in the 中文版: &lt;a href="https://bytedance.sg.larkoffice.com/docx/TCcudYwyIox5vyxiSDLlgIsTgWf#U94rdCxzBoJMLex38NPlHL21gNb"&gt;GUI模型部署教程&lt;/a&gt; with new information related to the ModelScope platform. You can now use the ModelScope platform for deployment.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Agent TARS&lt;/h2&gt; 
&lt;p&gt; &lt;a href="https://npmjs.com/package/@agent-tars/cli?activeTab=readme"&gt;&lt;img src="https://img.shields.io/npm/v/@agent-tars/cli?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=3B82F6&amp;amp;logo=npm&amp;amp;logoColor=white" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/@agent-tars/cli?minimal=true"&gt;&lt;img src="https://img.shields.io/npm/dm/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=0EA5E9&amp;amp;logo=npm&amp;amp;logoColor=white" alt="downloads" /&gt;&lt;/a&gt; &lt;a href="https://nodejs.org/en/about/previous-releases"&gt;&lt;img src="https://img.shields.io/node/v/@agent-tars/cli.svg?style=for-the-badge&amp;amp;colorA=1a1a2e&amp;amp;colorB=06B6D4&amp;amp;logo=node.js&amp;amp;logoColor=white" alt="node version" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/HnKcSBgTVx"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Community-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord Community" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/agent_tars"&gt;&lt;img src="https://img.shields.io/badge/Twitter-Follow%20%40agent__tars-1DA1F2?style=for-the-badge&amp;amp;logo=twitter&amp;amp;logoColor=white" alt="Official Twitter" /&gt;&lt;/a&gt; &lt;a href="https://applink.larkoffice.com/client/chat/chatter/add_by_link?link_token=279h3365-b0fa-407f-89f3-0f96f36cd4d8"&gt;&lt;img src="https://img.shields.io/badge/飞书群-加入交流群-00D4AA?style=for-the-badge&amp;amp;logo=lark&amp;amp;logoColor=white" alt="飞书交流群" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/bytedance/UI-TARS-desktop"&gt;&lt;img src="https://img.shields.io/badge/DeepWiki-Ask%20AI-8B5CF6?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Agent TARS&lt;/b&gt; is a general multimodal AI Agent stack, it brings the power of GUI Agent and Vision into your terminal, computer, browser and product. &lt;br /&gt; &lt;br /&gt; It primarily ships with a &lt;a href="https://agent-tars.com/guide/basic/cli.html" target="_blank"&gt;CLI&lt;/a&gt; and &lt;a href="https://agent-tars.com/guide/basic/web-ui.html" target="_blank"&gt;Web UI&lt;/a&gt; for usage. It aims to provide a workflow that is closer to human-like task completion through cutting-edge multimodal LLMs and seamless integration with various real-world &lt;a href="https://agent-tars.com/guide/basic/mcp.html" target="_blank"&gt;MCP&lt;/a&gt; tools.&lt;/p&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;Please help me book the earliest flight from San Jose to New York on September 1st and the last return flight on September 6th on Priceline
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8"&gt;https://github.com/user-attachments/assets/772b0eef-aef7-4ab9-8cb0-9611820539d8&lt;/a&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="50%" align="center"&gt;Booking Hotel&lt;/th&gt; 
   &lt;th width="50%" align="center"&gt;Generate Chart with extra MCP Servers&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/c9489936-afdc-4d12-adda-d4b90d2a869d" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
   &lt;td align="center"&gt; 
    &lt;video src="https://github.com/user-attachments/assets/a9fd72d0-01bb-4233-aa27-ca95194bbce9" width="50%"&gt;&lt;/video&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;I am in Los Angeles from September 1st to September 6th, with a budget of $5,000. Please help me book a Ritz-Carlton hotel closest to the airport on booking.com and compile a transportation guide for me&lt;/i&gt; &lt;/td&gt; 
   &lt;td align="left"&gt; &lt;b&gt;Instruction:&lt;/b&gt; &lt;i&gt;Draw me a chart of Hangzhou's weather for one month&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;For more use cases, please check out &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt;#842&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Core Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🖱️ &lt;strong&gt;One-Click Out-of-the-box CLI&lt;/strong&gt; - Supports both &lt;strong&gt;headful&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/basic/web-ui.html"&gt;Web UI&lt;/a&gt; and &lt;strong&gt;headless&lt;/strong&gt; &lt;a href="https://agent-tars.com/guide/advanced/server.html"&gt;server&lt;/a&gt;) &lt;a href="https://agent-tars.com/guide/basic/cli.html"&gt;execution&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🌐 &lt;strong&gt;Hybrid Browser Agent&lt;/strong&gt; - Control browsers using &lt;a href="https://agent-tars.com/guide/basic/browser.html#visual-grounding"&gt;GUI Agent&lt;/a&gt;, &lt;a href="https://agent-tars.com/guide/basic/browser.html#dom"&gt;DOM&lt;/a&gt;, or a hybrid strategy.&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Event Stream&lt;/strong&gt; - Protocol-driven Event Stream drives &lt;a href="https://agent-tars.com/beta#context-engineering"&gt;Context Engineering&lt;/a&gt; and &lt;a href="https://agent-tars.com/blog/2025-06-25-introducing-agent-tars-beta.html#easy-to-build-applications"&gt;Agent UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;🧰 &lt;strong&gt;MCP Integration&lt;/strong&gt; - The kernel is built on MCP and also supports mounting &lt;a href="https://agent-tars.com/guide/basic/mcp.html"&gt;MCP Servers&lt;/a&gt; to connect to real-world tools.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;img alt="Agent TARS CLI" src="https://agent-tars.com/agent-tars-cli.png" /&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Luanch with `npx`.
npx @agent-tars/cli@latest

# Install globally, required Node.js &amp;gt;= 22
npm install @agent-tars/cli@latest -g

# Run with your preferred model provider
agent-tars --provider volcengine --model doubao-1-5-thinking-vision-pro-250428 --apiKey your-api-key
agent-tars --provider anthropic --model claude-3-7-sonnet-latest --apiKey your-api-key
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Visit the comprehensive &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt;Quick Start&lt;/a&gt; guide for detailed setup instructions.&lt;/p&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌟 &lt;strong&gt;Explore Agent TARS Universe&lt;/strong&gt; 🌟&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th width="20%" align="center"&gt;Category&lt;/th&gt; 
   &lt;th width="30%" align="center"&gt;Resource Link&lt;/th&gt; 
   &lt;th width="50%" align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🏠 &lt;strong&gt;Central Hub&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com"&gt; &lt;img src="https://img.shields.io/badge/Visit-Website-4F46E5?style=for-the-badge&amp;amp;logo=globe&amp;amp;logoColor=white" alt="Website" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Your gateway to Agent TARS ecosystem&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;📚 &lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/quick-start.html"&gt; &lt;img src="https://img.shields.io/badge/Get-Started-06B6D4?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Quick Start" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Zero to hero in 5 minutes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🚀 &lt;strong&gt;What's New&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/beta"&gt; &lt;img src="https://img.shields.io/badge/Read-Blog-F59E0B?style=for-the-badge&amp;amp;logo=rss&amp;amp;logoColor=white" alt="Blog" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Discover cutting-edge features &amp;amp; vision&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🛠️ &lt;strong&gt;Developer Zone&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/guide/get-started/introduction.html"&gt; &lt;img src="https://img.shields.io/badge/View-Docs-10B981?style=for-the-badge&amp;amp;logo=gitbook&amp;amp;logoColor=white" alt="Docs" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Master every command &amp;amp; features&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🎯 &lt;strong&gt;Showcase&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://github.com/bytedance/UI-TARS-desktop/issues/842"&gt; &lt;img src="https://img.shields.io/badge/View-Examples-8B5CF6?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="Examples" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;View use cases built by the official and community&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;🔧 &lt;strong&gt;Reference&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt; &lt;a href="https://agent-tars.com/api/"&gt; &lt;img src="https://img.shields.io/badge/API-Reference-EF4444?style=for-the-badge&amp;amp;logo=book&amp;amp;logoColor=white" alt="API" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td align="left"&gt;Complete technical reference&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;h2&gt;UI-TARS Desktop&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img alt="UI-TARS" width="260" src="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/apps/ui-tars/resources/icon.png" /&gt; &lt;/p&gt; 
&lt;p&gt;UI-TARS Desktop is a native GUI agent driven by &lt;a href="https://github.com/bytedance/UI-TARS"&gt;UI-TARS&lt;/a&gt; and Seed-1.5-VL/1.6 series models, available on your local computer and remote VM sandbox on cloud.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &amp;nbsp;&amp;nbsp; 📑 &lt;a href="https://arxiv.org/abs/2501.12326"&gt;Paper&lt;/a&gt; &amp;nbsp;&amp;nbsp; | 🤗 &lt;a href="https://huggingface.co/ByteDance-Seed/UI-TARS-1.5-7B"&gt;Hugging Face Models&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🫨 &lt;a href="https://discord.gg/pTXwYVjfcs"&gt;Discord&lt;/a&gt;&amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp;🤖 &lt;a href="https://www.modelscope.cn/collections/UI-TARS-bccb56fa1ef640"&gt;ModelScope&lt;/a&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt; 🖥️ Desktop Application &amp;nbsp;&amp;nbsp; | &amp;nbsp;&amp;nbsp; 👓 &lt;a href="https://github.com/web-infra-dev/midscene"&gt;Midscene (use in browser)&lt;/a&gt; &amp;nbsp;&amp;nbsp; &lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Showcase&lt;/h3&gt; 
&lt;!-- // FIXME: Choose only two demo, one local computer and one remote computer showcase. --&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;Instruction&lt;/th&gt; 
   &lt;th align="center"&gt;Local Operator&lt;/th&gt; 
   &lt;th align="center"&gt;Remote Operator&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Please help me open the autosave feature of VS Code and delay AutoSave operations for 500 milliseconds in the VS Code setting.&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/e0914ce9-ad33-494b-bdec-0c25c1b01a27" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/01e49b69-7070-46c8-b3e3-2aaaaec71800" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Could you help me check the latest open issue of the UI-TARS-Desktop project on GitHub?&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/3d159f54-d24a-4268-96c0-e149607e9199" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;
    &lt;video src="https://github.com/user-attachments/assets/072fb72d-7394-4bfa-95f5-4736e29f7e58" height="300"&gt;&lt;/video&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🤖 Natural language control powered by Vision-Language Model&lt;/li&gt; 
 &lt;li&gt;🖥️ Screenshot and visual recognition support&lt;/li&gt; 
 &lt;li&gt;🎯 Precise mouse and keyboard control&lt;/li&gt; 
 &lt;li&gt;💻 Cross-platform support (Windows/MacOS/Browser)&lt;/li&gt; 
 &lt;li&gt;🔄 Real-time feedback and status display&lt;/li&gt; 
 &lt;li&gt;🔐 Private and secure - fully local processing&lt;/li&gt; 
 &lt;li&gt;🛠️ Effortless setup and intuitive remote operators&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/docs/quick-start.md"&gt;Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/bytedance/UI-TARS-desktop/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the Apache License 2.0.&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you find our paper and code useful in your research, please consider giving a star &lt;span&gt;⭐&lt;/span&gt; and citation &lt;span&gt;📝&lt;/span&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-BibTeX"&gt;@article{qin2025ui,
  title={UI-TARS: Pioneering Automated GUI Interaction with Native Agents},
  author={Qin, Yujia and Ye, Yining and Fang, Junjie and Wang, Haoming and Liang, Shihao and Tian, Shizuo and Zhang, Junda and Li, Jiahao and Li, Yunxin and Huang, Shijue and others},
  journal={arXiv preprint arXiv:2501.12326},
  year={2025}
}
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>freestyle-sh/Adorable</title>
      <link>https://github.com/freestyle-sh/Adorable</link>
      <description>&lt;p&gt;Open Source Lovable&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/freestyle-sh/Adorable/main/icon.png" alt="description" width="75" /&gt; &lt;/p&gt; 
&lt;h1&gt;Adorable&lt;/h1&gt; 
&lt;p&gt;Open-source version of &lt;strong&gt;Lovable&lt;/strong&gt; - an AI agent that can make websites and apps through a chat interface.&lt;/p&gt; 
&lt;p&gt;For guidance on building app builders with AI, see the &lt;a href="https://docs.freestyle.sh/guides/app-builder"&gt;Freestyle guide on Building an App Builder&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Chat interface for interacting with AI code assistants&lt;/li&gt; 
 &lt;li&gt;Patch-based code editing with user approval&lt;/li&gt; 
 &lt;li&gt;Git integration for version control&lt;/li&gt; 
 &lt;li&gt;Preview capabilities for code changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup Instructions&lt;/h2&gt; 
&lt;h3&gt;Dependencies&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js&lt;/li&gt; 
 &lt;li&gt;PostgreSQL database (&lt;a href="https://neon.tech"&gt;Neon&lt;/a&gt; is easy and has a good free tier)&lt;/li&gt; 
 &lt;li&gt;Redis (for caching and session management)&lt;/li&gt; 
 &lt;li&gt;Anthropic API key&lt;/li&gt; 
 &lt;li&gt;Freestyle API key&lt;/li&gt; 
 &lt;li&gt;Morph API key (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone the repository:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/freestyle-sh/adorable
cd adorable
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Install dependencies:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Get a Freestyle API key&lt;/p&gt; &lt;p&gt;Head to &lt;a href="https://admin.freestyle.sh/dashboard/api-tokens"&gt;our API keys page&lt;/a&gt; to get yours. We're totally free to use right now!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up environment variables: Create a &lt;code&gt;.env&lt;/code&gt; file in the root directory with the following variables:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;# Database
DATABASE_URL=postgresql://username:password@localhost:5432/adorable

# Anthropic API
ANTHROPIC_API_KEY=your_anthropic_api_key

# Freestyle API
FREESTYLE_API_KEY=your_freestyle_api_key
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Initialize the database:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npx drizzle-kit push
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set up Redis&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The easiest way to run Redis locally is with Docker:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --name adorable-redis -p 6379:6379 -d redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start a Redis server on port 6379. If you already have Redis running, you can skip this step.&lt;/p&gt; 
&lt;p&gt;Add the following to your &lt;code&gt;.env&lt;/code&gt; file (if not already present):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;REDIS_URL=redis://localhost:6379
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;Set up &lt;a href="https://stack-auth.com"&gt;Stack Auth&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Go to the &lt;a href="https://app.stack-auth.com"&gt;Stack Auth dashboard&lt;/a&gt; and create a new application. In Configuration &amp;gt; Domains, enable &lt;code&gt;Allow all localhost callbacks for development&lt;/code&gt; to be able to sign in locally.&lt;/p&gt; 
&lt;p&gt;You'll need to add the following environment variables to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;NEXT_PUBLIC_STACK_PROJECT_ID=&amp;lt;your-project-id&amp;gt;
NEXT_PUBLIC_STACK_PUBLISHABLE_CLIENT_KEY=&amp;lt;your-publishable-client-key&amp;gt;
STACK_SECRET_SERVER_KEY=&amp;lt;your-secret-server-key&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="7"&gt; 
 &lt;li&gt;Add a Preview Domain (optional)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Go to the &lt;a href="https://admin.freestyle.sh/dashboard/domains"&gt;Freestyle dashboard&lt;/a&gt; and verify a new domain. Then follow the &lt;a href="https://docs.freestyle.sh/web/deploy-to-custom-domain"&gt;DNS Instructions&lt;/a&gt; to point your domain to Freestyle.&lt;/p&gt; 
&lt;p&gt;Finally, add the following environment variable to your &lt;code&gt;.env&lt;/code&gt; file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;PREVIEW_DOMAIN=&amp;lt;your-domain&amp;gt; # formatted like adorable.app
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="8"&gt; 
 &lt;li&gt;Add Morph for Fast Apply (optional)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Get a Morph API key from &lt;a href="https://morphllm.com"&gt;morphllm.com&lt;/a&gt; and add it to your &lt;code&gt;.env&lt;/code&gt; file to enable the fast edit tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-env"&gt;MORPH_API_KEY=&amp;lt;your-morph-api-key&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This automatically enables the Morph fast edit tool which provides faster code modifications.&lt;/p&gt; 
&lt;ol start="9"&gt; 
 &lt;li&gt; &lt;p&gt;Run the development server:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm run dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt; in your browser.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Developer Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/freestyle-sh/Adorable/main/docs/forking.md"&gt;Forking Guide&lt;/a&gt; - Comprehensive guide for developers working with this codebase&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;p&gt;For production deployment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or use the included deployment script:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;./deploy.sh
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>microsoft/data-formulator</title>
      <link>https://github.com/microsoft/data-formulator</link>
      <description>&lt;p&gt;🪄 Create rich visualizations with AI&lt;/p&gt;&lt;hr&gt;&lt;h1&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/favicon.ico" alt="Data Formulator icon" width="28" /&gt; &lt;b&gt;Data Formulator: Create Rich Visualizations with AI&lt;/b&gt; &lt;/h1&gt; 
&lt;div&gt; 
 &lt;p&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;&lt;img src="https://img.shields.io/badge/Paper-arXiv:2408.16119-b31b1b.svg?sanitize=true" alt="arxiv" /&gt;&lt;/a&gt;  &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow.svg?sanitize=true" alt="License: MIT" /&gt;&lt;/a&gt;  &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;&lt;img src="https://img.shields.io/badge/YouTube-white?logo=youtube&amp;amp;logoColor=%23FF0000" alt="YouTube" /&gt;&lt;/a&gt;  &lt;a href="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml"&gt;&lt;img src="https://github.com/microsoft/data-formulator/actions/workflows/python-build.yml/badge.svg?sanitize=true" alt="build" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Transform data and create rich visualizations iteratively with AI 🪄. Try Data Formulator now!&lt;/p&gt; 
&lt;p&gt;Any questions? Ask on the Discord channel! &lt;a href="https://discord.gg/mYCZMQKYZb"&gt;&lt;img src="https://img.shields.io/badge/discord-chat-green?logo=discord" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/microsoft/data-formulator?quickstart=1) --&gt; 
&lt;kbd&gt; &lt;a target="_blank" rel="noopener noreferrer" href="https://codespaces.new/microsoft/data-formulator?quickstart=1" title="open Data Formulator in GitHub Codespaces"&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/data-formulator/main/public/data-formulator-screenshot.png" /&gt;&lt;/a&gt; &lt;/kbd&gt; 
&lt;h2&gt;News 🔥🔥🔥&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;[07-10-2025] Data Formulator 0.2.2: Start with an analysis goal&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Some key frontend performance updates.&lt;/li&gt; 
   &lt;li&gt;You can start your exploration with a goal, or, tab and see if the agent can recommend some good exploration ideas for you. &lt;a href="https://github.com/microsoft/data-formulator/pull/176"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[05-13-2025] Data Formulator 0.2.1.3/4: External Data Loader&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We introduced external data loader class to make import data easier. &lt;a href="https://github.com/microsoft/data-formulator/tree/main/py-src/data_formulator/data_loader"&gt;Readme&lt;/a&gt; and &lt;a href="https://github.com/microsoft/data-formulator/pull/155"&gt;Demo&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Current data loaders: MySQL, Azure Data Explorer (Kusto), Azure Blob and Amazon S3 (json, parquet, csv).&lt;/li&gt; 
     &lt;li&gt;[07-01-2025] Updated with: Postgresql, mssql.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Call for action &lt;a href="https://github.com/microsoft/data-formulator/issues/156"&gt;link&lt;/a&gt;: 
    &lt;ul&gt; 
     &lt;li&gt;Users: let us know which data source you'd like to load data from.&lt;/li&gt; 
     &lt;li&gt;Developers: let's build more data loaders.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[04-23-2025] Data Formulator 0.2: working with &lt;em&gt;large&lt;/em&gt; data 📦📦📦&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Explore large data by: 
    &lt;ol&gt; 
     &lt;li&gt;Upload large data file to the local database (powered by &lt;a href="https://github.com/duckdb/duckdb"&gt;DuckDB&lt;/a&gt;).&lt;/li&gt; 
     &lt;li&gt;Use drag-and-drop to specify charts, and Data Formulator dynamically fetches data from the database to create visualizations (with ⚡️⚡️⚡️ speeds).&lt;/li&gt; 
     &lt;li&gt;Work with AI agents: they generate SQL queries to transform the data to create rich visualizations!&lt;/li&gt; 
     &lt;li&gt;Anchor the result / follow up / create a new branch / join tables; let's dive deeper.&lt;/li&gt; 
    &lt;/ol&gt; &lt;/li&gt; 
   &lt;li&gt;Checkout the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.2"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.2]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Improved overall system performance, and enjoy the updated derive concept functionality.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[03-20-2025] Data Formulator 0.1.7: Anchoring ⚓︎&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Anchor an intermediate dataset, so that followup data analysis are built on top of the anchored data, not the original one.&lt;/li&gt; 
   &lt;li&gt;Clean a data and work with only the cleaned data; create a subset from the original data or join multiple data, and then go from there. AI agents will be less likely to get confused and work faster. ⚡️⚡️&lt;/li&gt; 
   &lt;li&gt;Check out the demos at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.7"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.7]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Don't forget to update Data Formulator to test it out!&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-20-2025] Data Formulator 0.1.6 released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports working with multiple datasets at once! Tell Data Formulator which data tables you would like to use in the encoding shelf, and it will figure out how to join the tables to create a visualization to answer your question. 🪄&lt;/li&gt; 
   &lt;li&gt;Checkout the demo at &lt;a href="https://github.com/microsoft/data-formulator/releases/tag/0.1.6"&gt;[https://github.com/microsoft/data-formulator/releases/tag/0.1.6]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Update your Data Formulator to the latest version to play with the new features.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[02-12-2025] More models supported now!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Now supports OpenAI, Azure, Ollama, and Anthropic models (and more powered by &lt;a href="https://github.com/BerriAI/litellm"&gt;LiteLLM&lt;/a&gt;);&lt;/li&gt; 
   &lt;li&gt;Models with strong code generation and instruction following capabilities are recommended (gpt-4o, claude-3-5-sonnet etc.);&lt;/li&gt; 
   &lt;li&gt;You can store API keys in &lt;code&gt;api-keys.env&lt;/code&gt; to avoid typing them every time (see template &lt;code&gt;api-keys.env.template&lt;/code&gt;).&lt;/li&gt; 
   &lt;li&gt;Let us know which models you have good/bad experiences with, and what models you would like to see supported! &lt;a href="https://github.com/microsoft/data-formulator/issues/49"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[11-07-2024] Minor fun update: data visualization challenges!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;We added a few visualization challenges with the sample datasets. Can you complete them all? &lt;a href="https://github.com/microsoft/data-formulator/issues/53#issue-2641841252"&gt;[try them out!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;Comment in the issue when you did, or share your results/questions with others! &lt;a href="https://github.com/microsoft/data-formulator/issues/53"&gt;[comment here]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-11-2024] Data Formulator python package released!&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;You can now install Data Formulator using Python and run it locally, easily. &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/#get-started"&gt;[check it out]&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Our Codespaces configuration is also updated for fast start up ⚡️. &lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;[try it now!]&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;New experimental feature: load an image or a messy text, and ask AI to parse and clean it for you(!). &lt;a href="https://github.com/microsoft/data-formulator/pull/31#issuecomment-2403652717"&gt;[demo]&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[10-01-2024] Initial release of Data Formulator, check out our &lt;a href="https://www.microsoft.com/en-us/research/blog/data-formulator-exploring-how-ai-can-help-analysts-create-rich-data-visualizations/"&gt;[blog]&lt;/a&gt; and &lt;a href="https://youtu.be/3ndlwt0Wi3c"&gt;[video]&lt;/a&gt;!&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Data Formulator&lt;/strong&gt; is an application from Microsoft Research that uses large language models to transform data, expediting the practice of data visualization.&lt;/p&gt; 
&lt;p&gt;Data Formulator is an AI-powered tool for analysts to iteratively create rich visualizations. Unlike most chat-based AI tools where users need to describe everything in natural language, Data Formulator combines &lt;em&gt;user interface interactions (UI)&lt;/em&gt; and &lt;em&gt;natural language (NL) inputs&lt;/em&gt; for easier interaction. This blended approach makes it easier for users to describe their chart designs while delegating data transformation to AI.&lt;/p&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;p&gt;Play with Data Formulator with one of the following options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 1: Install via Python PIP&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Use Python PIP for an easy setup experience, running locally (recommend: install it in a virtual environment).&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;# install data_formulator
pip install data_formulator

# start data_formulator
data_formulator 

# alternatively, you can run data formulator with this command
python -m data_formulator
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Data Formulator will be automatically opened in the browser at &lt;a href="http://localhost:5000"&gt;http://localhost:5000&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Update: you can specify the port number (e.g., 8080) by &lt;code&gt;python -m data_formulator --port 8080&lt;/code&gt; if the default port is occupied.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 2: Codespaces (5 minutes)&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can also run Data Formulator in Codespaces; we have everything pre-configured. For more details, see &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/CODESPACES.md"&gt;CODESPACES.md&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://codespaces.new/microsoft/data-formulator?quickstart=1"&gt;&lt;img src="https://github.com/codespaces/badge.svg?sanitize=true" alt="Open in GitHub Codespaces" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Option 3: Working in the developer mode&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can build Data Formulator locally if you prefer full control over your development environment and the ability to customize the setup to your specific needs. For detailed instructions, refer to &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;DEVELOPMENT.md&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Data Formulator&lt;/h2&gt; 
&lt;p&gt;Once you've completed the setup using either option, follow these steps to start using Data Formulator:&lt;/p&gt; 
&lt;h3&gt;The basics of data visualization&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Provide OpenAI keys and select a model (GPT-4o suggested) and choose a dataset.&lt;/li&gt; 
 &lt;li&gt;Choose a chart type, and then drag-and-drop data fields to chart properties (x, y, color, ...) to specify visual encodings.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8"&gt;https://github.com/user-attachments/assets/0fbea012-1d2d-46c3-a923-b1fc5eb5e5b8&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Create visualization beyond the initial dataset (powered by 🤖)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;You can type names of &lt;strong&gt;fields that do not exist in current data&lt;/strong&gt; in the encoding shelf: 
  &lt;ul&gt; 
   &lt;li&gt;this tells Data Formulator that you want to create visualizations that require computation or transformation from existing data,&lt;/li&gt; 
   &lt;li&gt;you can optionally provide a natural language prompt to explain and clarify your intent (not necessary when field names are self-explanatory).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Click the &lt;strong&gt;Formulate&lt;/strong&gt; button. 
  &lt;ul&gt; 
   &lt;li&gt;Data Formulator will transform data and instantiate the visualization based on the encoding and prompt.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Inspect the data, chart and code.&lt;/li&gt; 
 &lt;li&gt;To create a new chart based on existing ones, follow up in natural language: 
  &lt;ul&gt; 
   &lt;li&gt;provide a follow up prompt (e.g., &lt;em&gt;``show only top 5!''&lt;/em&gt;),&lt;/li&gt; 
   &lt;li&gt;you may also update visual encodings for the new chart.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba"&gt;https://github.com/user-attachments/assets/160c69d2-f42d-435c-9ff3-b1229b5bddba&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb"&gt;https://github.com/user-attachments/assets/c93b3e84-8ca8-49ae-80ea-f91ceef34acb&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Repeat this process as needed to explore and understand your data. Your explorations are trackable in the &lt;strong&gt;Data Threads&lt;/strong&gt; panel.&lt;/p&gt; 
&lt;h2&gt;Developers' Guide&lt;/h2&gt; 
&lt;p&gt;Follow the &lt;a href="https://raw.githubusercontent.com/microsoft/data-formulator/main/DEVELOPMENT.md"&gt;developers' instructions&lt;/a&gt; to build your new data analysis tools on top of Data Formulator.&lt;/p&gt; 
&lt;h2&gt;Research Papers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2408.16119"&gt;Data Formulator 2: Iteratively Creating Rich Visualizations with AI&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2024dataformulator2iteratively,
      title={Data Formulator 2: Iteratively Creating Rich Visualizations with AI}, 
      author={Chenglong Wang and Bongshin Lee and Steven Drucker and Dan Marshall and Jianfeng Gao},
      year={2024},
      booktitle={ArXiv preprint arXiv:2408.16119},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://arxiv.org/abs/2309.10094"&gt;Data Formulator: AI-powered Concept-driven Visualization Authoring&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code&gt;@article{wang2023data,
  title={Data Formulator: AI-powered Concept-driven Visualization Authoring},
  author={Wang, Chenglong and Thompson, John and Lee, Bongshin},
  journal={IEEE Transactions on Visualization and Computer Graphics},
  year={2023},
  publisher={IEEE}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;This project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit &lt;a href="https://cla.microsoft.com"&gt;https://cla.microsoft.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;When you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.&lt;/p&gt; 
&lt;p&gt;This project has adopted the &lt;a href="https://opensource.microsoft.com/codeofconduct/"&gt;Microsoft Open Source Code of Conduct&lt;/a&gt;. For more information see the &lt;a href="https://opensource.microsoft.com/codeofconduct/faq/"&gt;Code of Conduct FAQ&lt;/a&gt; or contact &lt;a href="mailto:opencode@microsoft.com"&gt;opencode@microsoft.com&lt;/a&gt; with any additional questions or comments.&lt;/p&gt; 
&lt;h2&gt;Trademarks&lt;/h2&gt; 
&lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow &lt;a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general"&gt;Microsoft's Trademark &amp;amp; Brand Guidelines&lt;/a&gt;. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>David-patrick-chuks/Riona-AI-Agent</title>
      <link>https://github.com/David-patrick-chuks/Riona-AI-Agent</link>
      <description>&lt;p&gt;Riona Ai Agent 🌸 is built using Node.js and TypeScript 🛠️, designed for seamless job execution 📸. It's lightweight, efficient, and still evolving 🚧—exciting new features coming soon! 🌟&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Support the Project 🙌&lt;/h2&gt; 
&lt;p&gt;If you'd like to support the development of Instagram-AI-Agent, please consider contributing to the following wallet addresses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Bitcoin (BTC)&lt;/strong&gt;: 1GkWY6pjn7KoAkCnUab2MxnxeEQihknfUi&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ethereum (ETH-erc20)&lt;/strong&gt;: 0xabb45f4d85e7d9db5de684c35ccde7239a167cbb&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Solana (SOL)&lt;/strong&gt;: EQV7fQ57zKNMFXy53WBfo2sCxtkRQVQLqj8sqWGnoyR&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Your support helps keep this project running and growing! 🚀&lt;/p&gt; 
&lt;h2&gt;Instagram-AI-Agent 🌸&lt;/h2&gt; 
&lt;p&gt;Instagram-AI-Agent is an AI-powered automation tool designed for &lt;strong&gt;Instagram&lt;/strong&gt; to automate social media interactions such as posting, liking, and commenting. It leverages advanced AI models to generate engaging content, automate interactions, and manage Instagram accounts efficiently.&lt;/p&gt; 
&lt;p&gt;Before using the automation features, you can personalize the agent by training with the following, including: &lt;a href="https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp"&gt;https://www.instagram.com/dreamlandofficial_1?igsh=NTZvcHRkNjlhYzhp&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;YouTube Video URL&lt;/strong&gt; 🎥&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Audio File&lt;/strong&gt; 🎙️&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Portfolio or Website Link&lt;/strong&gt; 🌐&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File Formats Supported&lt;/strong&gt;: PDF, DOC, DOCX, TXT 📄&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Instagram Automation&lt;/strong&gt;: Automatically log in, post photos, like posts, and leave thoughtful comments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI-Powered Content Generation&lt;/strong&gt;: Use Google Generative AI to create engaging captions and comments.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Proxy Support&lt;/strong&gt;: Use proxies to manage multiple accounts and avoid rate limits.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cookie Management&lt;/strong&gt;: Save and load cookies to maintain sessions across restarts.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Twitter Automation&lt;/strong&gt;: (Coming soon) Automatically tweet, retweet, and like tweets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Automation&lt;/strong&gt;: (Coming soon) Automatically manage repositories, issues, and pull requests.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Clone the repository&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/david-patrick-chuks/Instagram-AI-Agent.git
cd Instagram-AI-Agent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install dependencies&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Set up environment variables&lt;/strong&gt;: Rename the &lt;a href="http://_vscodecontentref_/1"&gt;.env.example&lt;/a&gt; file to &lt;a href="http://_vscodecontentref_/1"&gt;.env&lt;/a&gt; in the root directory and add your Instagram credentials. Refer to the &lt;a href="http://_vscodecontentref_/2"&gt;.env.example&lt;/a&gt; file for the required variables.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-dotenv"&gt;IGusername=your_instagram_username
IGpassword=your_instagram_password 

Xusername= #Twitter username
Xpassword= #Twitter password

MONGODB_URI= #MongoDB URI
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;MongoDB Setup (Using Docker)&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Docker&lt;/strong&gt;: If you don't have Docker installed, download and install it from the &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;official website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run MongoDB using Docker Container&lt;/strong&gt;:&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb mongodb/mongodb-community-server:latest
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run -d -p 27017:27017 --name instagram-ai-mongodb -v mongodb_data:/data/db mongodb/mongodb-community-server:latest
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;(Option 2: use this if you want to have like a permanent storage in you so your data won't be lost or remove if you stop or remove your Docker container)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Modify the MONGODB_URI in the .env file&lt;/strong&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-dotenv"&gt;MONGODB_URI=mongodb://localhost:27017/instagram-ai-agent
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Verify the connection&lt;/strong&gt;: Open a new terminal and run the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker ps
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;You should see the MongoDB container running.&lt;/p&gt; &lt;p&gt;Docker Commands (Additional Info):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;To stop the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker stop instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To start the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker start instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To remove the MongoDB container: &lt;pre&gt;&lt;code class="language-sh"&gt;docker rm instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;li&gt;To remove the MongoDB container and its data: &lt;pre&gt;&lt;code class="language-sh"&gt;docker rm -v instagram-ai-mongodb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Run the Instagram agent&lt;/strong&gt;: &lt;pre&gt;&lt;code class="language-sh"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Upcoming Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the Twitter agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm run start:twitter
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Run the GitHub agent&lt;/strong&gt; (Coming soon):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;npm run start:github
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Structure&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;src/client&lt;/strong&gt;: Contains the main logic for interacting with social media platforms like Instagram.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/config&lt;/strong&gt;: Configuration files, including the logger setup.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/utils&lt;/strong&gt;: Utility functions for handling errors, cookies, data saving, etc.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/Agent&lt;/strong&gt;: Contains the AI agent logic and training scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/Agent/training&lt;/strong&gt;: Training scripts for the AI agent.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/schema&lt;/strong&gt;: Schema definitions for AI-generated content and database models.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;src/test&lt;/strong&gt;: Contains test data and scripts, such as example tweets.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Logging&lt;/h2&gt; 
&lt;p&gt;The project uses a custom logger to log information, warnings, and errors. Logs are saved in the &lt;a href="http://_vscodecontentref_/3"&gt;logs&lt;/a&gt; directory.&lt;/p&gt; 
&lt;h2&gt;Error Handling&lt;/h2&gt; 
&lt;p&gt;Process-level error handlers are set up to catch unhandled promise rejections, uncaught exceptions, and process warnings. Errors are logged using the custom logger.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome! Please fork the repository and submit a pull request with your changes.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License. See the LICENSE file for details.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://ai.google/tools/"&gt;Google Generative AI&lt;/a&gt; for providing the AI models.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puppeteer/puppeteer"&gt;Puppeteer&lt;/a&gt; for browser automation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/berstend/puppeteer-extra"&gt;puppeteer-extra&lt;/a&gt; for additional plugins and enhancements.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>apple/embedding-atlas</title>
      <link>https://github.com/apple/embedding-atlas</link>
      <description>&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Embedding Atlas&lt;/h1&gt; 
&lt;p&gt;Embedding Atlas is a tool that provides interactive visualizations for large embeddings. It allows you to visualize, cross-filter, and search embeddings and metadata.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🏷️ &lt;strong&gt;Automatic data clustering &amp;amp; labeling:&lt;/strong&gt; Interactively visualize and navigate overall data structure.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🫧 &lt;strong&gt;Kernel density estimation &amp;amp; density contours:&lt;/strong&gt; Easily explore and distinguish between dense regions of data and outliers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧊 &lt;strong&gt;Order-independent transparency:&lt;/strong&gt; Ensure clear, accurate rendering of overlapping points.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Real-time search &amp;amp; nearest neighbors:&lt;/strong&gt; Find similar data to a given query or existing data point.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;WebGPU implementation (with WebGL 2 fallback):&lt;/strong&gt; Fast, smooth performance (up to few million points) with modern rendering stack.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📊 &lt;strong&gt;Multi-coordinated views for metadata exploration:&lt;/strong&gt; Interactively link and filter data across metadata columns.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please visit &lt;a href="https://apple.github.io/embedding-atlas"&gt;https://apple.github.io/embedding-atlas&lt;/a&gt; for a demo and documentation.&lt;/p&gt; 
&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="./packages/docs/assets/embedding-atlas-dark.png" /&gt; 
 &lt;img alt="screenshot of Embedding Atlas" src="https://raw.githubusercontent.com/apple/embedding-atlas/main/packages/docs/assets/embedding-atlas-light.png" /&gt; 
&lt;/picture&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;To use Embedding Atlas with Python:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pip install embedding-atlas

embedding-atlas &amp;lt;your-dataset.parquet&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In addition to the command line tool, Embedding Atlas is also available as a Jupyter widget:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from embedding_atlas.widget import EmbeddingAtlasWidget

# Show the Embedding Atlas widget for your data frame:
EmbeddingAtlasWidget(df)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, components from Embedding Atlas are also available in an npm package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install embedding-atlas
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas";

// or with React:
import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas/react";

// or Svelte:
import { EmbeddingAtlas, EmbeddingView, Table } from "embedding-atlas/svelte";
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more information, please visit &lt;a href="https://apple.github.io/embedding-atlas/overview.html"&gt;https://apple.github.io/embedding-atlas/overview.html&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;BibTeX&lt;/h2&gt; 
&lt;p&gt;For the Embedding Atlas tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{ren2025embedding,
  title={Embedding Atlas: Low-Friction, Interactive Embedding Visualization},
  author={Donghao Ren and Fred Hohman and Halden Lin and Dominik Moritz},
  year={2025},
  eprint={2505.06386},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2505.06386},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For the algorithm that automatically produces clusters and labels in the embedding view:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{ren2025scalable,
  title={A Scalable Approach to Clustering Embedding Projections},
  author={Donghao Ren and Fred Hohman and Dominik Moritz},
  year={2025},
  eprint={2504.07285},
  archivePrefix={arXiv},
  primaryClass={cs.HC},
  url={https://arxiv.org/abs/2504.07285},
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;This repo contains multiple sub-packages:&lt;/p&gt; 
&lt;p&gt;Frontend:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/component&lt;/code&gt;: The &lt;code&gt;EmbeddingView&lt;/code&gt; and &lt;code&gt;EmbeddingViewMosaic&lt;/code&gt; components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/table&lt;/code&gt;: The &lt;code&gt;Table&lt;/code&gt; component.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/viewer&lt;/code&gt;: The frontend application for visualizing embedding and other columns. It also provides the &lt;code&gt;EmbeddingAtlas&lt;/code&gt; component that can be embedded in other applications.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/density-clustering&lt;/code&gt;: The density clustering algorithm, written in Rust.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/umap-wasm&lt;/code&gt;: An implementation of UMAP algorithm in WebAssembly (with the &lt;a href="https://github.com/libscran/umappp"&gt;umappp&lt;/a&gt; C++ library).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;packages/embedding-atlas&lt;/code&gt;: The &lt;code&gt;embedding-atlas&lt;/code&gt; package that get published. It imports all of the above and exposes their API in a single package.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Python:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;packages/backend&lt;/code&gt;: A Python package named &lt;code&gt;embedding-atlas&lt;/code&gt; that provides the &lt;code&gt;embedding-atlas&lt;/code&gt; command line tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;packages/docs&lt;/code&gt;: The documentation website.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information, please visit &lt;a href="https://apple.github.io/embedding-atlas/develop.html"&gt;https://apple.github.io/embedding-atlas/develop.html&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This code is released under the &lt;a href="https://raw.githubusercontent.com/apple/embedding-atlas/main/LICENSE"&gt;&lt;code&gt;MIT license&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>huggingface/aisheets</title>
      <link>https://github.com/huggingface/aisheets</link>
      <description>&lt;p&gt;Build, enrich, and transform datasets using AI models with no code&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;🤗 Hugging Face AI Sheets&lt;/h1&gt; 
 &lt;p&gt;&lt;em&gt;Build, enrich, and transform datasets using AI models with no code. Deploy locally or on the Hub with access to thousands of open models.&lt;/em&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://huggingface.co/blog/aisheets"&gt;Introduction&lt;/a&gt; • &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;Try it out&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;
  &lt;video width="400" src="https://github.com/user-attachments/assets/a284e4d4-3c11-4885-96cc-2f6f0314f2a1"&gt;&lt;/video&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;What's AI Sheets?&lt;/h2&gt; 
&lt;p&gt;Hugging Face AI Sheets is an open-source tool for building, enriching, and transforming datasets using AI models with no code. The tool can be deployed locally or on the Hub. It lets you use thousands of open models from the Hugging Face Hub via Inference Providers or local models, including &lt;code&gt;gpt-oss&lt;/code&gt; from OpenAI!&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Using the AI Sheets Space&lt;/h3&gt; 
&lt;p&gt;Try it instantly at &lt;a href="https://huggingface.co/spaces/aisheets/sheets"&gt;https://huggingface.co/spaces/aisheets/sheets&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Using Docker&lt;/h3&gt; 
&lt;p&gt;First, get your Hugging Face token from &lt;a href="https://huggingface.co/settings/tokens"&gt;https://huggingface.co/settings/tokens&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
docker run -p 3000:3000 \
-e HF_TOKEN=HF_TOKEN \
AI Sheets/sheets
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:3000&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h3&gt;Using pnpm&lt;/h3&gt; 
&lt;p&gt;First, &lt;a href="https://pnpm.io/installation"&gt;install pnpm&lt;/a&gt; if you haven't already.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/huggingface/sheets.git
cd sheets
export HF_TOKEN=your_token_here
pnpm install
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;code&gt;http://localhost:5173&lt;/code&gt; in your browser.&lt;/p&gt; 
&lt;h4&gt;Building for production&lt;/h4&gt; 
&lt;p&gt;To build the production application, run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will create a production build in the &lt;code&gt;dist&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;Then, you can launch the built-in Express server to serve the production build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_TOKEN=your_token_here
pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running data generation scripts using HF Jobs&lt;/h2&gt; 
&lt;p&gt;If you want to generate a larger dataset, you can use the above-mentioned config and script, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_inference_client.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 # limit to 100 rows, leave empty for the full dataset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can use a script that utilizes vllm inference instead of the inference client. This script helps you to save on inference costs, but it requires you to set up a vllm-compatible flavor when running the job:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;hf jobs uv run --flavor l4x1 \
-s HF_TOKEN=$HF_TOKEN \
https://github.com/huggingface/aisheets/raw/refs/heads/main/scripts/extend_dataset/with_vllm.py \ # script for running the pipeline
nvidia/Nemotron-Personas dvilasuero/nemotron-kimi-qa-distilled \
--config https://huggingface.co/datasets/dvilasuero/nemotron-personas-kimi-questions/raw/main/config.yml \ # config with prompts
--num-rows 100 \ # limit to 100 rows, leave empty for the full dataset
--vllm-model deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running AI Sheets with custom (and local) LLMs&lt;/h2&gt; 
&lt;p&gt;By default, AI Sheets is configured to use the Huggingface Inference Providers API to run inference on the latest open-source models. However, you can also run Sheets with own custom LLMs, such as those hosted on your own infrastructure or other cloud providers. The only requirement is that your LLMs must support the &lt;a href="https://platform.openai.com/docs/api-reference/introduction"&gt;OpenAI API specification&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Steps&lt;/h3&gt; 
&lt;p&gt;When running AI Sheets with custom LLMs, you need to set some environment variables to point the inference calls to your custom LLMs. Here are the steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should point to the base URL of your custom LLM's API endpoint. For example, if you are using Ollama to run your LLM locally, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since Ollama starts a local server on port &lt;code&gt;11434&lt;/code&gt; by default, this URL will point to your local Ollama instance.&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Set the &lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt; environment variable&lt;/strong&gt;: This variable should specify the name of the model you want to use. For example, if you are using the &lt;code&gt;llama3&lt;/code&gt; model, you would set it like this:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is a crucial step to conform to the OpenAI API specification. The model name is a required parameter in the &lt;a href="https://platform.openai.com/docs/api-reference/responses/create#responses-create-model"&gt;OpenAI API&lt;/a&gt;, and it is used to identify which model to use for inference.&lt;/p&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;&lt;strong&gt;Run the AI Sheets app&lt;/strong&gt;: After setting the environment variables, you can run the Sheets app as usual. The app will now use your custom LLM for inference instead of the default Huggingface Inference Providers API as the default behavior. Anyway, all the models provided by the Huggingface Inference Providers API will still be available when selecting a model in the column settings.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Note: The text-to-image generation feature cannot be customized yet. It will always utilize the Hugging Face Inference Providers API to generate images. Take this into account when running AI Sheets with custom LLMs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Example of running AI Sheets with Ollama&lt;/h3&gt; 
&lt;p&gt;To run AI Sheets with Ollama, you can follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Start the Ollama server, and run the model of your choice&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export OLLAMA_NOHISTORY=1
ollama serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;ollama run llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(Visit the Ollama &lt;a href="https://github.com/ollama/ollama/raw/main/docs/faq.md#how-can-i-specify-the-context-window-size"&gt;FAQ&lt;/a&gt; page to know more about Ollama server configuration)&lt;/p&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Set the environment variables:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;export MODEL_ENDPOINT_URL=http://localhost:11434
export MODEL_ENDPOINT_NAME=llama3
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Run the AI Sheets app:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will start the AI Sheets app and use the &lt;code&gt;llama3&lt;/code&gt; model running on your local Ollama instance for inference.&lt;/p&gt; 
&lt;h2&gt;Advanced configuration&lt;/h2&gt; 
&lt;p&gt;AI Sheets defines some environment variables that can be used to customize the behavior of the application. In the following sections, we will describe the available environment variables and their usage.&lt;/p&gt; 
&lt;h3&gt;&amp;nbsp;Authentication&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_CLIENT_ID&lt;/code&gt;: The Hugging Face OAuth client ID for the application. This is used to authenticate users via the Hugging Face OAuth. If this variable is defined, it will be used to authenticate users. (See how to setup the Hugging Face OAuth &lt;a href="https://huggingface.co/blog/frascuchon/running-sheets-locally#oauth-authentication"&gt;here&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;HF_TOKEN&lt;/code&gt;: A Hugging Face token to use for authentication. If this variable is defined, it will be used for authenticated inference calls, instead of the OAuth token.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;OAUTH_SCOPES&lt;/code&gt;: The scopes to request during the OAuth authentication. The default value is &lt;code&gt;openid profile inference-api manage-repos&lt;/code&gt;. This variable is used to request the necessary permissions for the application to function correctly, and normally does not need to be changed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&amp;nbsp;Inference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL&lt;/code&gt;: The default model id to use when calling the inference API for text generation. The default value is &lt;code&gt;meta-llama/Llama-3.3-70B-Instruct&lt;/code&gt;. This variable can be used to change the default model used for text generation and must be a valid model id from the &lt;a href="https://huggingface.co/models?pipeline_tag=text-generation&amp;amp;inference_provider=all&amp;amp;sort=trending"&gt;Hugging Face Hub&lt;/a&gt;,&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DEFAULT_MODEL_PROVIDER&lt;/code&gt;: The default model provider to use when calling the inference API for text generation. The default value is &lt;code&gt;nebius&lt;/code&gt;. This variable can be used to change the default model provider used for text generation and must be a valid provider from the &lt;a href="https://huggingface.co/docs/inference-providers/en/index"&gt;Hugging Face Inference Providers&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;ORG_BILLING&lt;/code&gt;: The organization billing to use for inference calls. If this variable is defined, the inference calls will be billed to the specified organization. This is useful for organizations that want to manage their inference costs and usage. Remember that users must be part of the organization to use this feature, or an &lt;code&gt;HF_TOKEN&lt;/code&gt; of a user that is part of the organization must be defined.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;: The URL of a custom inference endpoint to use for text generation. If this variable is defined, it will be used instead of the default Hugging Face Inference API. This is useful for using custom inference endpoints that are not hosted on the Hugging Face Hub, such as Ollama or LLM Studio. The URL must be a valid endpoint that supports the &lt;a href="https://platform.openai.com/docs/api-reference/chat/create"&gt;OpenAI API format&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;MODEL_ENDPOINT_NAME&lt;/code&gt;: The model id to use when calling the custom inference endpoint defined by &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt;. This variable is required if &lt;code&gt;MODEL_ENDPOINT_URL&lt;/code&gt; is defined for custom inference endpoints that require a model id, such as Ollama or LLM Studio. The model id must correspond to the model deployed on the custom inference endpoint.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;NUM_CONCURRENT_REQUESTS&lt;/code&gt;: The number of concurrent requests to allow when calling the inference API in the column cells generation process. The default value is &lt;code&gt;5&lt;/code&gt;, and the maximum value is &lt;code&gt;10&lt;/code&gt;. This is useful to control the number of concurrent requests made to the inference API and avoid hitting rate limits defined by the provider.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Miscellaneous&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;DATA_DIR&lt;/code&gt;: The directory where the application will store all its data. The default value is &lt;code&gt;./data&lt;/code&gt;. This variable can be used to change the data directory used by the application. The directory must be writable by the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SERPER_API_KEY&lt;/code&gt;: The API key to use for the Serper web search API. If this variable is defined, it will be used to authenticate web search requests. If this variable is not defined, web search will be disabled. The Serper API key can be obtained from the &lt;a href="https://serper.dev/"&gt;Serper website&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;TELEMETRY_ENABLED&lt;/code&gt;: A boolean value that indicates whether telemetry is enabled or not. The default value is &lt;code&gt;1&lt;/code&gt;. This variable can be used to disable telemetry if desired. Telemetry is used to collect anonymous usage data to help improve the application.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;EXAMPLES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the examples section in the prompt for text generation. The default value is &lt;code&gt;8192&lt;/code&gt;. If the examples section exceeds this size, it will be truncated. This variable can be used when the examples section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;SOURCES_PROMPT_MAX_CONTEXT_SIZE&lt;/code&gt;: The maximum context size (in characters) for the sources section in the prompt for text generation. The default value is &lt;code&gt;61440&lt;/code&gt;. If the sources section exceeds this size, it will be truncated. This variable can be used when the sources section is too large and needs to be reduced to fit within the context size limits of the model.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Developer docs&lt;/h2&gt; 
&lt;h3&gt;Dev dependencies on your vscode&lt;/h3&gt; 
&lt;h4&gt;vitest runner&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest"&gt;https://marketplace.visualstudio.com/items?itemName=rluvaton.vscode-vitest&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;biome&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=biomejs.biome"&gt;https://marketplace.visualstudio.com/items?itemName=biomejs.biome&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Project Structure&lt;/h3&gt; 
&lt;p&gt;This project is using Qwik with &lt;a href="https://qwik.dev/qwikcity/overview/"&gt;QwikCity&lt;/a&gt;. QwikCity is just an extra set of tools on top of Qwik to make it easier to build a full site, including directory-based routing, layouts, and more.&lt;/p&gt; 
&lt;p&gt;Inside your project, you'll see the following directory structure:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;├── public/
│   └── ...
└── src/
    ├── components/ --&amp;gt; Stateless components
    │   └── ...
    ├── features/ --&amp;gt; Components with business logic
    │   └── ...
    └── routes/
        └── ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/routes&lt;/code&gt;: Provides the directory-based routing, which can include a hierarchy of &lt;code&gt;layout.tsx&lt;/code&gt; layout files, and an &lt;code&gt;index.tsx&lt;/code&gt; file as the page. Additionally, &lt;code&gt;index.ts&lt;/code&gt; files are endpoints. Please see the &lt;a href="https://qwik.dev/qwikcity/routing/overview/"&gt;routing docs&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;src/components&lt;/code&gt;: Recommended directory for components.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;public&lt;/code&gt;: Any static assets, like images, can be placed in the public directory. Please see the &lt;a href="https://vitejs.dev/guide/assets.html#the-public-directory"&gt;Vite public directory&lt;/a&gt; for more info.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Development&lt;/h3&gt; 
&lt;p&gt;Run this on your root folder&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;touch .env
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Add in your &lt;code&gt;.env&lt;/code&gt; file the following variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;HF_TOKEN=your_hugging_face_token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Development mode uses &lt;a href="https://vitejs.dev/"&gt;Vite's development server&lt;/a&gt;. The &lt;code&gt;dev&lt;/code&gt; command will server-side render (SSR) the output during development.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: during dev mode, Vite may request a significant number of &lt;code&gt;.js&lt;/code&gt; files. This does not represent a Qwik production build.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Preview&lt;/h3&gt; 
&lt;p&gt;The preview command will create a production build of the client modules, a production build of &lt;code&gt;src/entry.preview.tsx&lt;/code&gt;, and run a local server. The preview server is only for convenience to preview a production build locally and should not be used as a production server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm preview
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production&lt;/h3&gt; 
&lt;p&gt;The production build will generate client and server modules by running both client and server build commands. The build command will use Typescript to run a type check on the source code.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Express Server&lt;/h3&gt; 
&lt;p&gt;This app has a minimal &lt;a href="https://expressjs.com/"&gt;Express server&lt;/a&gt; implementation. After running a full build, you can preview the build using the command:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;pnpm serve
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://localhost:3000/"&gt;http://localhost:3000/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>immich-app/immich</title>
      <link>https://github.com/immich-app/immich</link>
      <description>&lt;p&gt;High performance self-hosted photo and video management solution.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;br /&gt; &lt;a href="https://opensource.org/license/agpl-v3"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL_v3-blue.svg?color=3F51B5&amp;amp;style=for-the-badge&amp;amp;label=License&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="License: AGPLv3" /&gt;&lt;/a&gt; &lt;a href="https://discord.immich.app"&gt; &lt;img src="https://img.shields.io/discord/979116623879368755.svg?label=Discord&amp;amp;logo=Discord&amp;amp;style=for-the-badge&amp;amp;logoColor=000000&amp;amp;labelColor=ececec" alt="Discord" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-logo-stacked-light.svg?sanitize=true" width="300" title="Login With Custom URL" /&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;High performance self-hosted photo and video management solution&lt;/h3&gt; 
&lt;br /&gt; 
&lt;a href="https://immich.app"&gt; &lt;img src="https://raw.githubusercontent.com/immich-app/immich/main/design/immich-screenshots.png" title="Main Screenshot" /&gt; &lt;/a&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ca_ES.md"&gt;Català&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_es_ES.md"&gt;Español&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_fr_FR.md"&gt;Français&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_it_IT.md"&gt;Italiano&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ja_JP.md"&gt;日本語&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ko_KR.md"&gt;한국어&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_de_DE.md"&gt;Deutsch&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_nl_NL.md"&gt;Nederlands&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_tr_TR.md"&gt;Türkçe&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_zh_CN.md"&gt;中文&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_uk_UA.md"&gt;Українська&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ru_RU.md"&gt;Русский&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_pt_BR.md"&gt;Português Brasileiro&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_sv_SE.md"&gt;Svenska&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_ar_JO.md"&gt;العربية&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_vi_VN.md"&gt;Tiếng Việt&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/readme_i18n/README_th_TH.md"&gt;ภาษาไทย&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Disclaimer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;⚠️ The project is under &lt;strong&gt;very active&lt;/strong&gt; development.&lt;/li&gt; 
 &lt;li&gt;⚠️ Expect bugs and breaking changes.&lt;/li&gt; 
 &lt;li&gt;⚠️ &lt;strong&gt;Do not use the app as the only way to store your photos and videos.&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;⚠️ Always follow &lt;a href="https://www.backblaze.com/blog/the-3-2-1-backup-strategy/"&gt;3-2-1&lt;/a&gt; backup plan for your precious photos and videos!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] You can find the main documentation, including installation guides, at &lt;a href="https://immich.app/"&gt;https://immich.app/&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/introduction"&gt;About&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/install/requirements"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/immich-app/immich/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/developer/translations"&gt;Translations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://immich.app/docs/overview/support-the-project"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demo&lt;/h2&gt; 
&lt;p&gt;Access the demo &lt;a href="https://demo.immich.app"&gt;here&lt;/a&gt;. For the mobile app, you can use &lt;code&gt;https://demo.immich.app&lt;/code&gt; for the &lt;code&gt;Server Endpoint URL&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Login credentials&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Email&lt;/th&gt; 
   &lt;th&gt;Password&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="mailto:demo@immich.app"&gt;demo@immich.app&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;demo&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Features&lt;/th&gt; 
   &lt;th&gt;Mobile&lt;/th&gt; 
   &lt;th&gt;Web&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Upload and view videos and photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Auto backup when the app is opened&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Prevent duplication of assets&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Selective album(s) for backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Download photos and videos to local device&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Multi-user support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Album and Shared albums&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Scrubbable/draggable scrollbar&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support raw formats&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Metadata view (EXIF, map)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Search by metadata, objects, faces, and CLIP&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Administrative functions (user management)&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Background backup&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Virtual scroll&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;OAuth support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;API Keys&lt;/td&gt; 
   &lt;td&gt;N/A&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;LivePhoto/MotionPhoto backup and playback&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Support 360 degree image display&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;User-defined storage structure&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Public Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Archive and Favorites&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Global Map&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Partner Sharing&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Facial recognition and clustering&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Memories (x years ago)&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Offline support&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Read-only gallery&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Stacked Photos&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Tags&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Folder View&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;p&gt;Read more about translations &lt;a href="https://immich.app/docs/developer/translations"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/immich/"&gt; &lt;img src="https://hosted.weblate.org/widget/immich/immich/multi-auto.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Repository activity&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/9e86d9dc3ddd137161f2f6d2e758d7863b1789cb.svg?sanitize=true" alt="Activities" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Star history&lt;/h2&gt; 
&lt;a href="https://star-history.com/#immich-app/immich&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=immich-app/immich&amp;amp;type=Date" width="100%" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;a href="https://github.com/alextran1502/immich/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=immich-app/immich" width="100%" /&gt; &lt;/a&gt;</description>
    </item>
    
  </channel>
</rss>