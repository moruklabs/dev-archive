<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Mon, 06 Oct 2025 01:36:37 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>expressjs/express</title>
      <link>https://github.com/expressjs/express</link>
      <description>&lt;p&gt;Fast, unopinionated, minimalist web framework for node.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://expressjs.com/"&gt;&lt;img src="https://i.cloudup.com/zfY6lL7eFa-3000x3000.png" alt="Express Logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Fast, unopinionated, minimalist web framework for &lt;a href="https://nodejs.org"&gt;Node.js&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project has a &lt;a href="https://github.com/expressjs/.github/raw/HEAD/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#table-of-contents"&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#docs--community"&gt;Docs &amp;amp; Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#philosophy"&gt;Philosophy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#examples"&gt;Examples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#security-issues"&gt;Security Issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#running-tests"&gt;Running Tests&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#current-project-team-members"&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#tc-technical-committee"&gt;TC (Technical Committee)&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#tc-emeriti-members"&gt;TC emeriti members&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#triagers"&gt;Triagers&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#emeritus-triagers"&gt;Emeritus Triagers&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://npmjs.org/package/express"&gt;&lt;img src="https://badgen.net/npm/v/express" alt="NPM Version" /&gt;&lt;/a&gt; &lt;a href="https://npmcharts.com/compare/express?minimal=true"&gt;&lt;img src="https://badgen.net/npm/dm/express" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/expressjs/express/actions/workflows/ci.yml"&gt;&lt;img src="https://badgen.net/github/checks/expressjs/express/master?label=CI" alt="Linux Build" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/r/expressjs/express?branch=master"&gt;&lt;img src="https://badgen.net/coveralls/c/github/expressjs/express/master" alt="Test Coverage" /&gt;&lt;/a&gt; &lt;a href="https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/express"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/expressjs/express/badge" alt="OpenSSF Scorecard Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import express from 'express'

const app = express()

app.get('/', (req, res) =&amp;gt; {
  res.send('Hello World')
})

app.listen(3000, () =&amp;gt; {
  console.log('Server is running on http://localhost:3000')
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;This is a &lt;a href="https://nodejs.org/en/"&gt;Node.js&lt;/a&gt; module available through the &lt;a href="https://www.npmjs.com/"&gt;npm registry&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Before installing, &lt;a href="https://nodejs.org/en/download/"&gt;download and install Node.js&lt;/a&gt;. Node.js 18 or higher is required.&lt;/p&gt; 
&lt;p&gt;If this is a brand new project, make sure to create a &lt;code&gt;package.json&lt;/code&gt; first with the &lt;a href="https://docs.npmjs.com/creating-a-package-json-file"&gt;&lt;code&gt;npm init&lt;/code&gt; command&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Installation is done using the &lt;a href="https://docs.npmjs.com/getting-started/installing-npm-packages-locally"&gt;&lt;code&gt;npm install&lt;/code&gt; command&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install express
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow &lt;a href="https://expressjs.com/en/starter/installing.html"&gt;our installing guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Robust routing&lt;/li&gt; 
 &lt;li&gt;Focus on high performance&lt;/li&gt; 
 &lt;li&gt;Super-high test coverage&lt;/li&gt; 
 &lt;li&gt;HTTP helpers (redirection, caching, etc)&lt;/li&gt; 
 &lt;li&gt;View system supporting 14+ template engines&lt;/li&gt; 
 &lt;li&gt;Content negotiation&lt;/li&gt; 
 &lt;li&gt;Executable for generating applications quickly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Docs &amp;amp; Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://expressjs.com/"&gt;Website and Documentation&lt;/a&gt; - [&lt;a href="https://github.com/expressjs/expressjs.com"&gt;website repo&lt;/a&gt;]&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/expressjs"&gt;GitHub Organization&lt;/a&gt; for Official Middleware &amp;amp; Modules&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/expressjs/discussions"&gt;Github Discussions&lt;/a&gt; for discussion on the development and usage of Express&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;PROTIP&lt;/strong&gt; Be sure to read the &lt;a href="https://expressjs.com/en/guide/migrating-5"&gt;migration guide to v5&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;The quickest way to get started with express is to utilize the executable &lt;a href="https://github.com/expressjs/generator"&gt;&lt;code&gt;express(1)&lt;/code&gt;&lt;/a&gt; to generate an application as shown below:&lt;/p&gt; 
&lt;p&gt;Install the executable. The executable's major version will match Express's:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install -g express-generator@4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create the app:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;express /tmp/foo &amp;amp;&amp;amp; cd /tmp/foo
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;View the website at: &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;The Express philosophy is to provide small, robust tooling for HTTP servers, making it a great solution for single page applications, websites, hybrids, or public HTTP APIs.&lt;/p&gt; 
&lt;p&gt;Express does not force you to use any specific ORM or template engine. With support for over 14 template engines via &lt;a href="https://github.com/ladjs/consolidate"&gt;@ladjs/consolidate&lt;/a&gt;, you can quickly craft your perfect framework.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;To view the examples, clone the Express repository:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/expressjs/express.git --depth 1 &amp;amp;&amp;amp; cd express
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run whichever example you want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;node examples/content-negotiation
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The Express.js project welcomes all constructive contributions. Contributions take many forms, from code for bug fixes and enhancements, to additions and fixes to documentation, additional tests, triaging incoming pull requests and issues, and more!&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/expressjs/.github/raw/HEAD/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for more technical details on contributing.&lt;/p&gt; 
&lt;h3&gt;Security Issues&lt;/h3&gt; 
&lt;p&gt;If you discover a security vulnerability in Express, please see &lt;a href="https://raw.githubusercontent.com/expressjs/express/master/SECURITY.md"&gt;Security Policies and Procedures&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Running Tests&lt;/h3&gt; 
&lt;p&gt;To run the test suite, first install the dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then run &lt;code&gt;npm test&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the express.js project, see &lt;a href="https://github.com/expressjs/discussions/raw/HEAD/docs/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The original author of Express is &lt;a href="https://github.com/tj"&gt;TJ Holowaychuk&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/expressjs/express/graphs/contributors"&gt;List of all contributors&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;TC (Technical Committee)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonchurch"&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wesleytodd"&gt;wesleytodd&lt;/a&gt; - &lt;strong&gt;Wes Todd&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LinusU"&gt;LinusU&lt;/a&gt; - &lt;strong&gt;Linus Unnebäck&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/blakeembrey"&gt;blakeembrey&lt;/a&gt; - &lt;strong&gt;Blake Embrey&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sheplu"&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crandmck"&gt;crandmck&lt;/a&gt; - &lt;strong&gt;Rand McKinney&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ctcpip"&gt;ctcpip&lt;/a&gt; - &lt;strong&gt;Chris de Almeida&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;TC emeriti members&lt;/summary&gt; 
 &lt;h4&gt;TC emeriti members&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dougwilson"&gt;dougwilson&lt;/a&gt; - &lt;strong&gt;Douglas Wilson&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hacksparrow"&gt;hacksparrow&lt;/a&gt; - &lt;strong&gt;Hage Yaapa&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonathanong"&gt;jonathanong&lt;/a&gt; - &lt;strong&gt;jongleberry&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/niftylettuce"&gt;niftylettuce&lt;/a&gt; - &lt;strong&gt;niftylettuce&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/troygoode"&gt;troygoode&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aravindvnair99"&gt;aravindvnair99&lt;/a&gt; - &lt;strong&gt;Aravind Nair&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bjohansebas"&gt;bjohansebas&lt;/a&gt; - &lt;strong&gt;Sebastian Beltran&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/carpasse"&gt;carpasse&lt;/a&gt; - &lt;strong&gt;Carlos Serrano&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CBID2"&gt;CBID2&lt;/a&gt; - &lt;strong&gt;Christine Belzie&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dpopp07"&gt;dpopp07&lt;/a&gt; - &lt;strong&gt;Dustin Popp&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/3imed-jaberi"&gt;3imed-jaberi&lt;/a&gt; - &lt;strong&gt;Imed Jaberi&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IamLizu"&gt;IamLizu&lt;/a&gt; - &lt;strong&gt;S M Mahmudul Hasan&lt;/strong&gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Phillip9587"&gt;Phillip9587&lt;/a&gt; - &lt;strong&gt;Phillip Barta&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sushmeet"&gt;Sushmeet&lt;/a&gt; - &lt;strong&gt;Sushmeet Sunger&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rxmarbles"&gt;rxmarbles&lt;/a&gt; &lt;strong&gt;Rick Markins&lt;/strong&gt; (He/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Triagers emeriti members&lt;/summary&gt; 
 &lt;h4&gt;Emeritus Triagers&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AuggieH"&gt;AuggieH&lt;/a&gt; - &lt;strong&gt;Auggie Hudak&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/G-Rath"&gt;G-Rath&lt;/a&gt; - &lt;strong&gt;Gareth Jones&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MohammadXroid"&gt;MohammadXroid&lt;/a&gt; - &lt;strong&gt;Mohammad Ayashi&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NawafSwe"&gt;NawafSwe&lt;/a&gt; - &lt;strong&gt;Nawaf Alsharqi&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NotMoni"&gt;NotMoni&lt;/a&gt; - &lt;strong&gt;Moni&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/VigneshMurugan"&gt;VigneshMurugan&lt;/a&gt; - &lt;strong&gt;Vignesh Murugan&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/davidmashe"&gt;davidmashe&lt;/a&gt; - &lt;strong&gt;David Ashe&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/digitaIfabric"&gt;digitaIfabric&lt;/a&gt; - &lt;strong&gt;David&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/e-l-i-s-e"&gt;e-l-i-s-e&lt;/a&gt; - &lt;strong&gt;Elise Bonner&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fed135"&gt;fed135&lt;/a&gt; - &lt;strong&gt;Frederic Charette&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/firmanJS"&gt;firmanJS&lt;/a&gt; - &lt;strong&gt;Firman Abdul Hakim&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/getspooky"&gt;getspooky&lt;/a&gt; - &lt;strong&gt;Yasser Ameur&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ghinks"&gt;ghinks&lt;/a&gt; - &lt;strong&gt;Glenn&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ghousemohamed"&gt;ghousemohamed&lt;/a&gt; - &lt;strong&gt;Ghouse Mohamed&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jake32321"&gt;jake32321&lt;/a&gt; - &lt;strong&gt;Jake Reed&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonchurch"&gt;jonchurch&lt;/a&gt; - &lt;strong&gt;Jon Church&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lekanikotun"&gt;lekanikotun&lt;/a&gt; - &lt;strong&gt;Troy Goode&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Lekan Ikotun&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mastermatt"&gt;mastermatt&lt;/a&gt; - &lt;strong&gt;Matt R. Wilson&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maxakuru"&gt;maxakuru&lt;/a&gt; - &lt;strong&gt;Max Edell&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mlrawlings"&gt;mlrawlings&lt;/a&gt; - &lt;strong&gt;Michael Rawlings&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rodion-arr"&gt;rodion-arr&lt;/a&gt; - &lt;strong&gt;Rodion Abdurakhimov&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sheplu"&gt;sheplu&lt;/a&gt; - &lt;strong&gt;Jean Burellier&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tarunyadav1"&gt;tarunyadav1&lt;/a&gt; - &lt;strong&gt;Tarun yadav&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/enyoghasim"&gt;enyoghasim&lt;/a&gt; - &lt;strong&gt;David Enyoghasim&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/0ss"&gt;0ss&lt;/a&gt; - &lt;strong&gt;Salah&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/import-brain"&gt;import-brain&lt;/a&gt; - &lt;strong&gt;Eric Cheng&lt;/strong&gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dakshkhetan"&gt;dakshkhetan&lt;/a&gt; - &lt;strong&gt;Daksh Khetan&lt;/strong&gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lucasraziel"&gt;lucasraziel&lt;/a&gt; - &lt;strong&gt;Lucas Soares Do Rego&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mertcanaltin"&gt;mertcanaltin&lt;/a&gt; - &lt;strong&gt;Mert Can Altin&lt;/strong&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/expressjs/express/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>meteor/meteor</title>
      <link>https://github.com/meteor/meteor</link>
      <description>&lt;p&gt;Meteor, the JavaScript App Platform&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://www.meteor.com" target="_blank"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://dmtgy0px4zdqn.cloudfront.net/images/meteor-logo.webp" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/user-attachments/assets/0467afb6-4f36-4cad-9d78-237150d5d881" /&gt; 
   &lt;img alt="Meteor logo" src="https://github.com/user-attachments/assets/0467afb6-4f36-4cad-9d78-237150d5d881" width="300" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://app.travis-ci.com/github/meteor/meteor"&gt;&lt;img src="https://api.travis-ci.com/meteor/meteor.svg?branch=devel" alt="Travis CI Status" /&gt;&lt;/a&gt; &lt;a href="https://app.circleci.com/pipelines/github/meteor/meteor?branch=devel"&gt;&lt;img src="https://circleci.com/gh/meteor/meteor.svg?style=svg" alt="CircleCI Status" /&gt;&lt;/a&gt; &lt;a href="https://meteor.com"&gt;&lt;img src="https://img.shields.io/badge/Meteor-3.2.2-green?logo=meteor&amp;amp;logoColor=white" alt="built with Meteor" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/node/v/meteor" alt="node-current" /&gt; &lt;img src="https://img.shields.io/discord/1247973371040239676" alt="Discord" /&gt; &lt;img src="https://img.shields.io/twitter/follow/meteorjs?style=social" alt="Twitter Follow" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;Meteor is an &lt;strong&gt;ultra-simple&lt;/strong&gt; environment for building &lt;strong&gt;modern&lt;/strong&gt; web applications.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.meteor.com"&gt;Official Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.meteor.com/about/install.html"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.meteor.com/#/full/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;📚 &lt;strong&gt;Create your applications using modern JavaScript&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Benefit from the latest technology updates to rapidly prototype and develop your applications.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;✨ &lt;strong&gt;Integrate technologies you already use&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Use popular frameworks and tools right out-of-the-box. Focus on building features instead of configuring disparate components yourself.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;💻 &lt;strong&gt;Build apps for any device&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Use the same code whether you’re developing for web, iOS, Android, or desktop for a seamless update experience for your users.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;🔥 Getting Started&lt;/h1&gt; 
&lt;p&gt;How about trying a tutorial to get started with your favorite technology?&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;a href="https://docs.meteor.com/tutorials/react/"&gt;&lt;img align="left" width="25" src="https://upload.wikimedia.org/wikipedia/commons/a/a7/React-icon.svg?sanitize=true" /&gt; React&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://blaze-tutorial.meteor.com/"&gt;&lt;img align="left" width="25" src="https://progsoft.net/images/blaze-css-icon-3e80acb3996047afd09f1150f53fcd78e98c1e1b.png" /&gt; Blaze&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://docs.meteor.com/tutorials/vue/meteorjs3-vue3-vue-meteor-tracker.html"&gt;&lt;img align="left" width="25" src="https://vuejs.org/images/logo.png" /&gt; Vue&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;🚀 Quick Start&lt;/h1&gt; 
&lt;p&gt;On your platform, use this line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;&amp;gt; npx meteor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;🚀 To create a project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;&amp;gt; meteor create
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;☄️ Run it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cd my-app
meteor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;🧱 Developer Resources&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Building an application with Meteor?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Deploy on &lt;a href="https://galaxycloud.app"&gt;Galaxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discuss on &lt;a href="https://forums.meteor.com/"&gt;Forums&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Join the &lt;a href="https://discord.gg/hZkTCaVjmT"&gt;Meteor Discord&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Interested in helping or contributing to Meteor? These resources will help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/meteor/meteor/devel/DEVELOPMENT.md"&gt;Core development guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/meteor/meteor/devel/CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meteor/meteor/discussions/"&gt;Feature requests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meteor/meteor/issues"&gt;Issue tracker&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>CodeWithHarry/Sigma-Web-Dev-Course</title>
      <link>https://github.com/CodeWithHarry/Sigma-Web-Dev-Course</link>
      <description>&lt;p&gt;Source Code for Sigma Web Development Course&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Welcome to Sigma's Web Development Course - Hindi Web Development Tutorials! 🚀&lt;/h1&gt; 
&lt;h2&gt;What's Inside:&lt;/h2&gt; 
&lt;p&gt;If you've been itching to dive into the world of web development but feel lost in a sea of English tutorials, you're in the right place! Our course is exclusively in Hindi and is crafted to guide you from being an absolute beginner to a seasoned pro, one step at a time.&lt;/p&gt; 
&lt;h2&gt;Who Can Benefit?&lt;/h2&gt; 
&lt;h3&gt;This course is a perfect fit for:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Beginners eager to start their web development journey&lt;/li&gt; 
 &lt;li&gt;Intermediate developers looking to refine their skills&lt;/li&gt; 
 &lt;li&gt;Individuals who prefer learning in Hindi&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;What You'll Master:&lt;/h2&gt; 
&lt;h3&gt;During this course, you'll delve into:&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;The fundamentals of HTML, CSS, and JavaScript&lt;/li&gt; 
 &lt;li&gt;Both front-end and back-end development&lt;/li&gt; 
 &lt;li&gt;How to seamlessly integrate databases&lt;/li&gt; 
 &lt;li&gt;Real-world project implementation&lt;/li&gt; 
 &lt;li&gt;And a whole lot more!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;The Schedule:&lt;/h2&gt; 
&lt;p&gt;We're committed to your growth. Expect fresh source code additions nearly every day. Keep up the pace with our schedule and watch your skills soar! 📅&lt;/p&gt; 
&lt;p&gt;Get ready to embark on an exciting coding journey! 👨‍💻🌟&lt;/p&gt; 
&lt;p&gt;Ready to start? &lt;a href="https://www.youtube.com/playlist?list=PLu0W_9lII9agq5TrH9XLIKQvv0iaF2X3w"&gt;Click here&lt;/a&gt; to access the complete YouTube playlist.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>facebook/react</title>
      <link>https://github.com/facebook/react</link>
      <description>&lt;p&gt;The library for web and native user interfaces.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://react.dev/"&gt;React&lt;/a&gt; · &lt;a href="https://github.com/facebook/react/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/react"&gt;&lt;img src="https://img.shields.io/npm/v/react.svg?style=flat" alt="npm version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml"&gt;&lt;img src="https://github.com/facebook/react/actions/workflows/runtime_build_and_test.yml/badge.svg?sanitize=true" alt="(Runtime) Build and Test" /&gt;&lt;/a&gt; &lt;a href="https://github.com/facebook/react/actions/workflows/compiler_typescript.yml"&gt;&lt;img src="https://github.com/facebook/react/actions/workflows/compiler_typescript.yml/badge.svg?branch=main" alt="(Compiler) TypeScript" /&gt;&lt;/a&gt; &lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html#your-first-pull-request"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?sanitize=true" alt="PRs Welcome" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;React is a JavaScript library for building user interfaces.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Declarative:&lt;/strong&gt; React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Declarative views make your code more predictable, simpler to understand, and easier to debug.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based:&lt;/strong&gt; Build encapsulated components that manage their own state, then compose them to make complex UIs. Since component logic is written in JavaScript instead of templates, you can easily pass rich data through your app and keep the state out of the DOM.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Learn Once, Write Anywhere:&lt;/strong&gt; We don't make assumptions about the rest of your technology stack, so you can develop new features in React without rewriting existing code. React can also render on the server using &lt;a href="https://nodejs.org/en"&gt;Node&lt;/a&gt; and power mobile apps using &lt;a href="https://reactnative.dev/"&gt;React Native&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://react.dev/learn"&gt;Learn how to use React in your project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;React has been designed for gradual adoption from the start, and &lt;strong&gt;you can use as little or as much React as you need&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use &lt;a href="https://react.dev/learn"&gt;Quick Start&lt;/a&gt; to get a taste of React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/add-react-to-an-existing-project"&gt;Add React to an Existing Project&lt;/a&gt; to use as little or as much React as you need.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/start-a-new-react-project"&gt;Create a New React App&lt;/a&gt; if you're looking for a powerful JavaScript toolchain.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;You can find the React documentation &lt;a href="https://react.dev/"&gt;on the website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Check out the &lt;a href="https://react.dev/learn"&gt;Getting Started&lt;/a&gt; page for a quick overview.&lt;/p&gt; 
&lt;p&gt;The documentation is divided into several sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/tutorial-tic-tac-toe"&gt;Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/thinking-in-react"&gt;Thinking in React&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/describing-the-ui"&gt;Describing the UI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/adding-interactivity"&gt;Adding Interactivity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/managing-state"&gt;Managing State&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/learn/escape-hatches"&gt;Advanced Guides&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/reference/react"&gt;API Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://react.dev/community"&gt;Where to Get Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html"&gt;Contributing Guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can improve it by sending pull requests to &lt;a href="https://github.com/reactjs/react.dev"&gt;this repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Examples&lt;/h2&gt; 
&lt;p&gt;We have several examples &lt;a href="https://react.dev/"&gt;on the website&lt;/a&gt;. Here is the first one to get you started:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { createRoot } from 'react-dom/client';

function HelloMessage({ name }) {
  return &amp;lt;div&amp;gt;Hello {name}&amp;lt;/div&amp;gt;;
}

const root = createRoot(document.getElementById('container'));
root.render(&amp;lt;HelloMessage name="Taylor" /&amp;gt;);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This example will render "Hello Taylor" into a container on the page.&lt;/p&gt; 
&lt;p&gt;You'll notice that we used an HTML-like syntax; &lt;a href="https://react.dev/learn#writing-markup-with-jsx"&gt;we call it JSX&lt;/a&gt;. JSX is not required to use React, but it makes code more readable, and writing it feels like writing HTML.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The main purpose of this repository is to continue evolving React core, making it faster and easier to use. Development of React happens in the open on GitHub, and we are grateful to the community for contributing bugfixes and improvements. Read below to learn how you can take part in improving React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://code.fb.com/codeofconduct"&gt;Code of Conduct&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Facebook has adopted a Code of Conduct that we expect project participants to adhere to. Please read &lt;a href="https://code.fb.com/codeofconduct"&gt;the full text&lt;/a&gt; so that you can understand what actions will and will not be tolerated.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html"&gt;Contributing Guide&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href="https://legacy.reactjs.org/docs/how-to-contribute.html"&gt;contributing guide&lt;/a&gt; to learn about our development process, how to propose bugfixes and improvements, and how to build and test your changes to React.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/facebook/react/labels/good%20first%20issue"&gt;Good First Issues&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;To help you get your feet wet and get you familiar with our contribution process, we have a list of &lt;a href="https://github.com/facebook/react/labels/good%20first%20issue"&gt;good first issues&lt;/a&gt; that contain bugs that have a relatively limited scope. This is a great place to get started.&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;React is &lt;a href="https://raw.githubusercontent.com/facebook/react/main/LICENSE"&gt;MIT licensed&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sohzm/cheating-daddy</title>
      <link>https://github.com/sohzm/cheating-daddy</link>
      <description>&lt;p&gt;a free and opensource app that lets you gain an unfair advantage&lt;/p&gt;&lt;hr&gt;&lt;img width="1299" height="424" alt="cd (1)" src="https://github.com/user-attachments/assets/b25fff4d-043d-4f38-9985-f832ae0d0f6e" /&gt; 
&lt;h2&gt;Recall.ai - API for desktop recording&lt;/h2&gt; 
&lt;p&gt;If you’re looking for a hosted desktop recording API, consider checking out &lt;a href="https://www.recall.ai/product/desktop-recording-sdk/?utm_source=github&amp;amp;utm_medium=sponsorship&amp;amp;utm_campaign=sohzm-cheating-daddy"&gt;Recall.ai&lt;/a&gt;, an API that records Zoom, Google Meet, Microsoft Teams, in-person meetings, and more.&lt;/p&gt; 
&lt;p&gt;This project is sponsored by Recall.ai.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Use latest MacOS and Windows version, older versions have limited support&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; During testing it wont answer if you ask something, you need to simulate interviewer asking question, which it will answer&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;A real-time AI assistant that provides contextual help during video calls, interviews, presentations, and meetings using screen capture and audio analysis.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Live AI Assistance&lt;/strong&gt;: Real-time help powered by Google Gemini 2.0 Flash Live&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Screen &amp;amp; Audio Capture&lt;/strong&gt;: Analyzes what you see and hear for contextual responses&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Profiles&lt;/strong&gt;: Interview, Sales Call, Business Meeting, Presentation, Negotiation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Transparent Overlay&lt;/strong&gt;: Always-on-top window that can be positioned anywhere&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Click-through Mode&lt;/strong&gt;: Make window transparent to clicks when needed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cross-platform&lt;/strong&gt;: Works on macOS, Windows, and Linux (kinda, dont use, just for testing rn)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Get a Gemini API Key&lt;/strong&gt;: Visit &lt;a href="https://aistudio.google.com/apikey"&gt;Google AI Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install Dependencies&lt;/strong&gt;: &lt;code&gt;npm install&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Run the App&lt;/strong&gt;: &lt;code&gt;npm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Enter your Gemini API key in the main window&lt;/li&gt; 
 &lt;li&gt;Choose your profile and language in settings&lt;/li&gt; 
 &lt;li&gt;Click "Start Session" to begin&lt;/li&gt; 
 &lt;li&gt;Position the window using keyboard shortcuts&lt;/li&gt; 
 &lt;li&gt;The AI will provide real-time assistance based on your screen and what interview asks&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Keyboard Shortcuts&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Window Movement&lt;/strong&gt;: &lt;code&gt;Ctrl/Cmd + Arrow Keys&lt;/code&gt; - Move window&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Click-through&lt;/strong&gt;: &lt;code&gt;Ctrl/Cmd + M&lt;/code&gt; - Toggle mouse events&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Close/Back&lt;/strong&gt;: &lt;code&gt;Ctrl/Cmd + \&lt;/code&gt; - Close window or go back&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Send Message&lt;/strong&gt;: &lt;code&gt;Enter&lt;/code&gt; - Send text to AI&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Audio Capture&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS&lt;/strong&gt;: &lt;a href="https://github.com/Mohammed-Yasin-Mulla/Sound"&gt;SystemAudioDump&lt;/a&gt; for system audio&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Loopback audio capture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux&lt;/strong&gt;: Microphone input&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Electron-compatible OS (macOS, Windows, Linux)&lt;/li&gt; 
 &lt;li&gt;Gemini API key&lt;/li&gt; 
 &lt;li&gt;Screen recording permissions&lt;/li&gt; 
 &lt;li&gt;Microphone/audio permissions&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>aandrew-me/ytDownloader</title>
      <link>https://github.com/aandrew-me/ytDownloader</link>
      <description>&lt;p&gt;Desktop App for downloading Videos and Audios from hundreds of sites&lt;/p&gt;&lt;hr&gt;&lt;img src="https://github-production-user-asset-6210df.s3.amazonaws.com/66430340/238887646-33b4cba9-3c45-4042-83d1-b79e94a3a769.png" style="width:80px;" /&gt; 
&lt;h1&gt;ytDownloader&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://flathub.org/apps/details/me.aandrew.ytdownloader"&gt;&lt;img src="https://img.shields.io/flathub/downloads/io.github.aandrew_me.ytdn?label=Flathub%20downloads" alt="Flathub" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aandrew-me/ytDownloader/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aandrew-me/ytdownloader/total?label=Github%20downloads" alt="GitHub downloads" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aandrew-me/ytDownloader/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/aandrew-me/ytdownloader?label=latest%20release" alt="GitHub release (latest by date)" /&gt;&lt;/a&gt; &lt;a href="https://flathub.org/apps/io.github.aandrew_me.ytdn"&gt;&lt;img src="https://img.shields.io/flathub/v/io.github.aandrew_me.ytdn" alt="Flathub" /&gt;&lt;/a&gt; &lt;a href="https://snapcraft.io/ytdownloader"&gt;&lt;img src="https://badgen.net/snapcraft/v/ytdownloader" alt="Snapcraft" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/chocolatey/v/ytdownloader" alt="Chocolatey Version" /&gt; &lt;img src="https://img.shields.io/winget/v/aandrew-me.ytDownloader" alt="WinGet Package Version" /&gt;&lt;/p&gt; 
&lt;p&gt;A modern GUI video and audio downloader supporting &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/supportedsites.md"&gt;hundreds of sites&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://snapcraft.io/ytdownloader"&gt;&lt;img src="https://snapcraft.io/static/images/badges/en/snap-store-black.svg?sanitize=true" alt="Get it from the Snap Store" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Linux.AppImage"&gt;&lt;img src="https://raw.githubusercontent.com/srevinsaju/get-appimage/master/static/badges/get-appimage-branding-blue.png" alt="Get AppImage" /&gt;&lt;/a&gt; &lt;a href="https://flathub.org/apps/io.github.aandrew_me.ytdn"&gt;&lt;img src="https://flathub.org/assets/badges/flathub-badge-en.svg?sanitize=true" style="width:180px;" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Win.exe
"&gt;&lt;img src="https://user-images.githubusercontent.com/66430340/187172806-a8edd12a-ef58-4a05-96a3-99d7490b42f6.png" style="width:190px;" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Mac_arm64.dmg"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/aandrew-me/badges/download_mac_apple_silicon.png" style="width:200px;" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aandrew-me/ytDownloader/releases/latest/download/YTDownloader_Mac_x64.dmg"&gt;&lt;img src="https://cdn.jsdelivr.net/gh/aandrew-me/badges/download_mac_intel.png" style="width:200px;" /&gt;&lt;/a&gt; &lt;a href="https://community.chocolatey.org/packages/ytdownloader"&gt;&lt;img style="width:200px;" src="https://github-production-user-asset-6210df.s3.amazonaws.com/66430340/238886537-7b2769fe-bd62-4921-a0eb-edf2eb06216d.png" alt="Chocolatey" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features 🚀&lt;/h2&gt; 
&lt;p&gt;✅ Supports hundreds of sites including Youtube, Facebook, Instagram, Tiktok, Twitter and so on.&lt;/p&gt; 
&lt;p&gt;✅ Multiple themes&lt;/p&gt; 
&lt;p&gt;✅ Video Compressor with Hardware Acceleration&lt;/p&gt; 
&lt;p&gt;✅ Advanced options like Range Selection, Subtitles&lt;/p&gt; 
&lt;p&gt;✅ Download playlists&lt;/p&gt; 
&lt;p&gt;✅ Available on Linux, Windows &amp;amp; macOS&lt;/p&gt; 
&lt;p&gt;✅ Fast download speeds&lt;/p&gt; 
&lt;p&gt;✅ And of-course no trackers or ads&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;!-- ![dark](https://user-images.githubusercontent.com/66430340/196022794-885e5b90-40d2-4b58-a8fa-74f10c6e470e.png) --&gt; 
&lt;!-- ![light](https://user-images.githubusercontent.com/66430340/196022796-1215038d-bafb-4450-82b1-7baddd60c0e8.png) --&gt; 
&lt;!-- ![ytdownloader_dark](https://github.com/aandrew-me/ytDownloader/assets/66430340/62efbca0-28b8-4016-bcf2-1a14bcaa782c) --&gt; 
&lt;!-- ![ytdownloader_light](https://github.com/aandrew-me/ytDownloader/assets/66430340/34f5270f-bdea-460e-8622-6459cd147b73) --&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/0e810d71-6e8e-428f-9cca-9af71b5d7c16" alt="ss_dark" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/12097005-b41c-44a3-a579-61b8e990432f" alt="ss_prefs" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/b366aa8e-a004-4697-873f-965f51752f15" alt="ss_compressor" /&gt;&lt;/p&gt; 
&lt;!-- ![ytdownloader_dark](https://github.com/aandrew-me/ytDownloader/assets/66430340/2f6695e7-6ca0-4f7c-91a0-0ad735c1e3af) --&gt; 
&lt;!-- ![ytdownloader_light](https://github.com/aandrew-me/ytDownloader/assets/66430340/3c974ab0-8257-4b8a-88ec-ee6bd119751e) --&gt; 
&lt;h1&gt;Installation&lt;/h1&gt; 
&lt;h2&gt;Windows 🪟&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Traditional way&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Download and install the exe or msi file. Exe file lets you choose custom download location, msi file doesn't ask for location. Windows defender may show a popup saying &lt;strong&gt;Windows Protected Your PC&lt;/strong&gt;. Just click on &lt;strong&gt;More info&lt;/strong&gt; and click on &lt;strong&gt;Run Anyway&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Chocolatey&lt;/strong&gt; App can be installed from &lt;a href="https://community.chocolatey.org/packages/ytdownloader"&gt;Chocolatey&lt;/a&gt; using the following command&lt;/p&gt; &lt;pre&gt;&lt;code&gt;choco install ytdownloader
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Scoop&lt;/strong&gt; App can be installed with &lt;a href="https://scoop.sh"&gt;Scoop&lt;/a&gt; using the following command&lt;/p&gt; &lt;pre&gt;&lt;code&gt;scoop install https://raw.githubusercontent.com/aandrew-me/ytDownloader/main/ytdownloader.json
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Winget&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;App can be installed with &lt;a href="https://github.com/microsoft/winget-cli"&gt;Winget&lt;/a&gt; using the following command&lt;/p&gt; &lt;pre&gt;&lt;code&gt;winget install aandrew-me.ytDownloader
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Linux 🐧&lt;/h2&gt; 
&lt;p&gt;Linux has several options available - Flatpak, AppImage and Snap. Flatpak is recommended. For arm processors, download from flathub.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h3&gt;AppImage&lt;/h3&gt; &lt;p&gt;&lt;strong&gt;AppImage&lt;/strong&gt; format is supported on most Linux distros and has Auto-Update support. It just needs to be executed after downloading. See more about &lt;a href="https://appimage.org/"&gt;AppImages here&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="https://github.com/TheAssassin/AppImageLauncher"&gt;AppImageLauncher&lt;/a&gt; is recommended for integrating AppImages.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Flatpak&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;flatpak install flathub io.github.aandrew_me.ytdn
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;h3&gt;Snapcraft&lt;/h3&gt; &lt;pre&gt;&lt;code&gt;sudo snap install ytdownloader
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;macOS 🍎&lt;/h2&gt; 
&lt;p&gt;Since the app is not signed, when you will try to open the app, macOS will not allow you to open it.&lt;/p&gt; 
&lt;p&gt;You need to open terminal and execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo xattr -r -d com.apple.quarantine /Applications/YTDownloader.app 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You will also need to install &lt;code&gt;yt-dlp&lt;/code&gt; with &lt;a href="https://brew.sh/"&gt;homebrew&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;brew install yt-dlp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Internationalization (Localization) 🌍&lt;/h2&gt; 
&lt;p&gt;Translations into other languages would be highly appreciated. If you want to help translating the app to other languages, you can join from &lt;a href="https://crwd.in/ytdownloader"&gt;here&lt;/a&gt;. Open a new issue and that language will be added to Crowdin. Please don't make pull requests with json files, instead use Crowdin.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://crowdin.com/project/ytdownloader"&gt;&lt;img src="https://badges.crowdin.net/ytdownloader/localized.svg?sanitize=true" alt="Crowdin" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;✅ Available languages&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Arabic&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;English&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Simplified Chinese&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Finnish&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;French&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;German&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Greek&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hungarian&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Italian&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Japanese&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Persian&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Polish&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Portuguese (Brazil)&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Russian&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Spanish&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Turkish&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ukrainian&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vietnamese&lt;/td&gt; 
   &lt;td&gt;✔️&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Thanks to &lt;a href="https://github.com/nxjosephofficial"&gt;nxjosephofficial&lt;/a&gt;, &lt;a href="https://t.me/linuxsauna"&gt;LINUX-SAUNA&lt;/a&gt;, &lt;a href="https://github.com/proxycon"&gt;Proxycon&lt;/a&gt;, &lt;a href="https://github.com/albanobattistella"&gt;albanobattistella&lt;/a&gt;, &lt;a href="https://github.com/TheBlueQuasar"&gt;TheBlueQuasar&lt;/a&gt;, &lt;a href="https://github.com/MrQuerter"&gt;MrQuerter&lt;/a&gt;, &lt;a href="https://github.com/KotoWhiskas"&gt;KotoWhiskas&lt;/a&gt;, &lt;a href="https://github.com/andre1828"&gt;André&lt;/a&gt;, &lt;a href="https://github.com/haggen88"&gt;haggen88&lt;/a&gt;, &lt;a href="https://github.com/XfedeX"&gt;XfedeX&lt;/a&gt;, &lt;a href="https://github.com/th3knv"&gt;Jok3r&lt;/a&gt;, &lt;a href="https://github.com/TitouanReal"&gt;TitouanReal&lt;/a&gt;, &lt;a href="https://github.com/soredake"&gt;soredake&lt;/a&gt;, &lt;a href="https://github.com/thiennguyenqn"&gt;yoi&lt;/a&gt;, &lt;a href="https://github.com/HowlingWerewolf"&gt;HowlingWerewolf&lt;/a&gt;, &lt;a href="https://github.com/kum4423"&gt;Kum&lt;/a&gt;, &lt;a href="https://crowdin.com/profile/m7md_b4kry"&gt;Mohammed Bakry&lt;/a&gt;, &lt;a href="https://github.com/jackiotyu"&gt;Huang Bingfeng&lt;/a&gt; and others for helping.&lt;/p&gt; 
&lt;h2&gt;Used technologies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp"&gt;yt-dlp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ffmpeg.org/"&gt;ffmpeg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/"&gt;nodeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.flaticon.com/"&gt;flaticon&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;For building or running from source code&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/"&gt;Nodejs&lt;/a&gt; (along with npm) needs to be installed.&lt;/p&gt; 
&lt;p&gt;Required commands to get started.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/aandrew-me/ytDownloader.git
cd ytDownloader
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run with &lt;a href="https://www.electronjs.org/"&gt;Electron&lt;/a&gt; :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You need to download ffmpeg and put it in the root directory of the project. If you don't need to build for arm processor, you can download ffmpeg by executing any of the files - linux.sh / mac.sh / windows.sh depending on the platform. Otherwise you need to download ffmpeg from &lt;a href="https://github.com/yt-dlp/FFmpeg-Builds/releases"&gt;here&lt;/a&gt; for windows/linux and from &lt;a href="http://www.osxexperts.net/"&gt;here&lt;/a&gt; for mac (not tested)&lt;/p&gt; 
&lt;p&gt;To build for Linux (It will create packages as specified in package.json). The builds are stored in &lt;strong&gt;release&lt;/strong&gt; folder.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run linux
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build for Windows&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run windows
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To build for macOS&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run mac
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you only want to build for one format, you can do&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx electron-builder -l appimage
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will just create a linux appimage build.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>paperwm/PaperWM</title>
      <link>https://github.com/paperwm/PaperWM</link>
      <description>&lt;p&gt;Tiled scrollable window management for GNOME Shell&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;PaperWM&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/paperwm/PaperWM/discussions"&gt;&lt;img src="https://img.shields.io/badge/PaperWM_Discussions-join_chat-brightgreen" alt="project chat" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;PaperWM is a &lt;a href="https://www.gnome.org/"&gt;GNOME Shell&lt;/a&gt; extension which provides scrollable tiling of windows and per monitor workspaces. It's inspired by paper notebooks and tiling window managers.&lt;/p&gt; 
&lt;p&gt;While technically an &lt;a href="https://extensions.gnome.org/about/"&gt;extension&lt;/a&gt; it's to a large extent built on top of the Gnome desktop rather than merely extending it.&lt;/p&gt; 
&lt;p&gt;PaperWM aims to continually support &lt;a href="https://release.gnome.org/calendar/#branches"&gt;current stable&lt;/a&gt; GNOME Shell versions (currently GNOME 47-49). Older versions of PaperWM can generally be installed on older GNOME Shell versions (see &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#install-via-source"&gt;Install via Source&lt;/a&gt; for more information on targeting an older/EOL Gnome version).&lt;/p&gt; 
&lt;p&gt;New features and fixes aren't generally backported to older Gnome shell versions. &lt;a href="https://github.com/paperwm/PaperWM/pulls"&gt;Pull requests&lt;/a&gt; for fixes to older PaperWM versions (that run on previous Gnome versions) will be accepted if the submitter can help test and update related documentation.&lt;/p&gt; 
&lt;p&gt;Have questions or comments? Please ask on our &lt;a href="https://github.com/paperwm/PaperWM/discussions"&gt;Github Discussions&lt;/a&gt; board.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Install via &lt;a href="https://extensions.gnome.org/extension/6099/paperwm/"&gt;extensions.gnome.org&lt;/a&gt; (recommended)&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://extensions.gnome.org/extension/6099/paperwm/"&gt;&lt;img alt="Install it on extensions.gnome.org" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/get-it-on-ego.svg?sanitize=true" width="150px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Install via Source&lt;/h3&gt; 
&lt;p&gt;Clone the repo and check out the branch for the GNOME Shell version you're running:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;45-48 (currently developed/supported): &lt;a href="https://github.com/paperwm/PaperWM/tree/release"&gt;https://github.com/paperwm/PaperWM/tree/release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;42-44 (&lt;a href="https://release.gnome.org/calendar/#releases"&gt;EOL&lt;/a&gt;): &lt;a href="https://github.com/paperwm/PaperWM/tree/gnome-44"&gt;https://github.com/paperwm/PaperWM/tree/gnome-44&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;40-41 (&lt;a href="https://release.gnome.org/calendar/#releases"&gt;EOL&lt;/a&gt;): &lt;a href="https://github.com/paperwm/PaperWM/tree/gnome-40"&gt;https://github.com/paperwm/PaperWM/tree/gnome-40&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;3.28-3.38 (&lt;a href="https://release.gnome.org/calendar/#releases"&gt;EOL&lt;/a&gt;): &lt;a href="https://github.com/paperwm/PaperWM/tree/gnome-3.38"&gt;https://github.com/paperwm/PaperWM/tree/gnome-3.38&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;then run the &lt;a href="https://github.com/paperwm/PaperWM/raw/release/install.sh"&gt;&lt;code&gt;make install&lt;/code&gt;&lt;/a&gt; from the repository. The installer will create a link to the repo in &lt;code&gt;~/.local/share/gnome-shell/extensions&lt;/code&gt;. It will then ask if you want to enable PaperWM.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make install # install, load and enable paperwm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Running the extension will automatically install a user config file as described in &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#user-configuration--development"&gt;User configuration &amp;amp; development&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;➡️ You'll need to restart GNOME Shell after installing PaperWM, e.g. logout then login, or restart in place with an &lt;code&gt;alt-F2&lt;/code&gt; and entering &lt;code&gt;r&lt;/code&gt; (X11 only).&lt;/h4&gt; 
 &lt;p&gt;After logging back in, you can then enable PaperWM via the &lt;code&gt;Extensions&lt;/code&gt; application, or by running the following command from the command-line:&lt;/p&gt; 
 &lt;p&gt;&lt;code&gt;/usr/bin/gnome-extensions enable paperwm@paperwm.github.com&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;if you have run into issues, delete any older &lt;code&gt;paperwm@...&lt;/code&gt; symlinks from &lt;code&gt;~/.local/share/gnome-shell/extensions&lt;/code&gt; and re-run the &lt;code&gt;install.sh&lt;/code&gt; script.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Uninstall PaperWM (if installed via source)&lt;/h4&gt; 
&lt;p&gt;To uninstall simply run &lt;code&gt;make uninstall&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Try without installing&lt;/h3&gt; 
&lt;p&gt;This repo provides a lightweight VM based on &lt;a href="https://nixos.org"&gt;NixOS&lt;/a&gt; to try PaperWM and aid with development. You can launch it if &lt;a href="https://nixos.org/nix"&gt;Nix&lt;/a&gt; is installed on your system using this command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nix run .\#vm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, the VM can also be launched with GPU acceleration, by installing &lt;a href="https://github.com/nix-community/nixgl"&gt;NixGL&lt;/a&gt; first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nixGLIntel nix run .\#vm -- -device virtio-gpu-gl -display gtk,gl=on
# or nixGLNvidia depending on your host GPU
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Users are encouraged to submit &lt;a href="https://github.com/paperwm/PaperWM/issues/new/choose"&gt;issues&lt;/a&gt; and &lt;a href="https://github.com/paperwm/PaperWM/pulls"&gt;Pull Requests&lt;/a&gt;!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;h4&gt;➡️ Please ensure pull requests are based off, and submitted to, &lt;a href="https://github.com/paperwm/PaperWM/tree/develop"&gt;develop&lt;/a&gt; branch.&lt;/h4&gt; 
 &lt;p&gt;Pull requests submitted to the &lt;code&gt;release&lt;/code&gt; branch will not be accepted (but don't worry, if you accidentally submit a PR to the &lt;code&gt;release&lt;/code&gt; branch, the target branch will automatically be changed to &lt;code&gt;develop&lt;/code&gt; branch).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Most functionality is available using a mouse, eg. activating a window at the edge of the monitor by clicking on it. Wayland support gestures (See the &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#touchpad-gestures"&gt;Touchpad Gestures&lt;/a&gt; section). PaperWM is designed to work work well with keyboard + mouse, trackpads etc.&lt;/p&gt; 
&lt;p&gt;Most keybindings start with the &lt;kbd&gt;Super&lt;/kbd&gt; modifier (by default), which is usually the Windows key, or on mac keyboards it's the Command key. It's possible to modify the keyboard layout so that &lt;kbd&gt;Super&lt;/kbd&gt; is switched with &lt;kbd&gt;Alt&lt;/kbd&gt; making all the keybindings easier to reach. This can be done through Gnome Tweaks under &lt;code&gt;Keyboard &amp;amp; Mouse&lt;/code&gt; ⟶ &lt;code&gt;Additional Layout Options&lt;/code&gt; ⟶ &lt;code&gt;Alt/Win key behavior&lt;/code&gt; ⟶ &lt;code&gt;Left Alt is swapped with Left Win&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Most keybindings will grab the keyboard while &lt;kbd&gt;Super&lt;/kbd&gt; is held down, only switching focus when &lt;kbd&gt;Super&lt;/kbd&gt; is released. &lt;kbd&gt;Escape&lt;/kbd&gt; will abort the navigation taking you back to the previously active window.&lt;/p&gt; 
&lt;p&gt;All PaperWM keybinds can be changed (and disabled) via PaperWM extension settings, which can be accessed through &lt;a href="https://apps.gnome.org/Extensions/"&gt;&lt;code&gt;Extensions&lt;/code&gt;&lt;/a&gt; ⟶ &lt;code&gt;PaperWM&lt;/code&gt; ⟶ &lt;code&gt;Settings&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Window management and navigation is based around the three following concepts.&lt;/p&gt; 
&lt;h3&gt;Scrollable window tiling&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github.com/paperwm/media/raw/master/tiling.png" alt="The window tiling with the minimap shown" /&gt;&lt;/p&gt; 
&lt;p&gt;New windows are automatically tiled to the right of the active window (see &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#window-insertion-position-for-new-windows-and-dropped-windows-in-take-mode"&gt;here&lt;/a&gt; for dynamically changing the insertion position of new windows), taking up as much height as possible. &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Return&lt;/kbd&gt; will open a new window of the same type as the active window.&lt;/p&gt; 
&lt;p&gt;Activating a window will ensure it's fully visible, scrolling the tiling if necessary. By default, pressing &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;.&lt;/kbd&gt; activates the window to the right. &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;,&lt;/kbd&gt; activates the window to the left. On a US keyboard these keys are intuitively marked by &lt;kbd&gt;&amp;lt;&lt;/kbd&gt; and &lt;kbd&gt;&amp;gt;&lt;/kbd&gt;, they are also ordered the same way on almost all keyboard layouts. Navigating around windows brings up the minimap as can be seen in the above screenshot. The minimap will stay visible as long as &lt;kbd&gt;Super&lt;/kbd&gt; is continually being pressed.&lt;/p&gt; 
&lt;p&gt;Pressing &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;I&lt;/kbd&gt; will move the window to the right below the active window, tiling them vertically in a column. &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;O&lt;/kbd&gt; will do the opposite, pushing the bottom window out of the current column.&lt;/p&gt; 
&lt;p&gt;Swiping the trackpad horizontally with three fingers (only available in Wayland) or swiping the panel horizontally on a touch screen will scroll the tiling.&lt;/p&gt; 
&lt;p&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt; is of course also available.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Default &lt;code&gt;window&lt;/code&gt; Keybindings&lt;/th&gt; 
   &lt;th&gt;&lt;em&gt;Can be changed in PaperWM extension settings&lt;/em&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Return&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;N&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Open a new windows (of the current application)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Backspace&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Close the active window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;.&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;,&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to the next or previous window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Left&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Right&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Activate the window to the left or right&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Up&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Down&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Activate the window above or below&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Home&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;End&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Activate the first or last window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to the [second &lt;em&gt;to&lt;/em&gt; eleventh] window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt; or &lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Cycle through previously active windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt; or &lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Cycle through previously active windows (backward order)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Cycle through previously active scratch windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Cycle through previously active scratch windows (backward order)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch between window focus modes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;W&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch between positions for creating/dropping new windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Create/drop windows to the right of current window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Create/drop windows to the left of current window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Create/drop windows in vertical stack (down)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Create/drop windows in vertical stack (up)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Create/drop windows at start position&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Create/drop windows at end position&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;,&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;.&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move the current window to the left or right&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;,&lt;/kbd&gt; or &lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;.&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move the current window to the left or right&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Left&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Right&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move the current window to the left or right&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Up&lt;/kbd&gt; or &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Down&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move the current window up or down&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;I&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Absorb window into the active column&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;O&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Expel the bottom window from vertically tiled windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;O&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Expel the active window from vertically tiled windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;C&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Center windows horizontally&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;F&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle fullscreen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;F&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Maximize the width of a window&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Increment window height (scratch or vertically tiled windows)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Decrement window height (scratch or vertically tiled windows)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;+&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Increment window width&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;-&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Decrement window width&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Resize the window (cycles through useful widths)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Resize the window (cycles backwards through useful widths)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Resize the window (cycles through useful heights)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;R&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Resize the window (cycles backwards through useful heights)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;t&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Take window(s) dropping when finished navigating&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Activate the window under mouse cursor&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;The workspace stack &amp;amp; monitors&lt;/h3&gt; 
&lt;p&gt;Pressing &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Above_Tab&lt;/kbd&gt; will slide the active workspace down revealing the stack as shown in the above screenshot. You can then flip through the most recently used workspaces with repeated &lt;kbd&gt;Above_Tab&lt;/kbd&gt; presses while holding &lt;kbd&gt;Super&lt;/kbd&gt; down. &lt;kbd&gt;Above_Tab&lt;/kbd&gt; is the key above &lt;kbd&gt;Tab&lt;/kbd&gt; (&lt;kbd&gt;`&lt;/kbd&gt; in a US qwerty layout). Like alt-tab &lt;kbd&gt;Shift&lt;/kbd&gt; is added to move in reverse order:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/paperwm/media/raw/master/stack.png" alt="The most recently used workspace stack" /&gt;&lt;/p&gt; 
&lt;p&gt;Pressing &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Page_Down&lt;/kbd&gt; and &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Page_Up&lt;/kbd&gt; will slide between workspaces sequentially:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/paperwm/media/raw/master/sequence.png" alt="Sequential workspace navigation" /&gt;&lt;/p&gt; 
&lt;p&gt;By default &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Page_Down&lt;/kbd&gt; and &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Page_Down&lt;/kbd&gt; are bound to the keybindings "Switch to workspace below/above (&lt;strong&gt;ws from current monitor&lt;/strong&gt;)". That means using the keybindings you can select all workspaces that were previously shown on the current monitor and all empty once.&lt;/p&gt; 
&lt;p&gt;Alternatively you can change these keybindings to "Switch to workspace below/above (&lt;strong&gt;ws from all monitors&lt;/strong&gt;)" in the settings. That way you can switch to &lt;strong&gt;all&lt;/strong&gt; workspaces (that are not currently shown on another monitor). Depending on your workflow this might feel more natural.&lt;/p&gt; 
&lt;p&gt;The workspace name is shown in the top left corner replacing the &lt;code&gt;Activities&lt;/code&gt; button adding a few enhancements. Scrolling on the name will let you browse the workspace stack just like &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Above_Tab&lt;/kbd&gt;. Left clicking on the name opens Gnome overview, while right clicking the name lets you access and change the workspace name.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you prefer to use Gnome workspace "pill", you can replace the workspace name element, and enable the Gnome pill from the &lt;code&gt;General&lt;/code&gt; section of PaperWM preferences:&lt;/p&gt; 
 &lt;img alt="Using the Gnome pill" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/gnome-pill-option.png" width="560px" /&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Swiping down on the trackpad vertically with three fingers will initiate the workspace stack, and then allow you navigate the workspace stack with 3-finger vertical swipes (only available in Wayland). See the &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#touchpad-gestures"&gt;Touchpad Gestures&lt;/a&gt; section for more information on gesture support in PaperWM.&lt;/p&gt; 
&lt;p&gt;There's a single scrollable tiling per workspace. Adding another monitor simply makes it possible to have another workspace visible. The workspace stack is shared among all the monitors, windows being resized vertically as necessary when workspace is displayed on another monitor.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;code&gt;workspace&lt;/code&gt; keybindings&lt;/th&gt; 
   &lt;th&gt;&lt;em&gt;Can be changed in PaperWM extension settings&lt;/em&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;`&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to previously active workspace&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;`&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to previously active workspace (backwards order)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;`&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window to previously active workspace&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;`&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window to previously active workspace (backwards order)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to workspace above&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to workspace below&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;PageUp&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window one workspace up&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;PageDown&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window one workspace down&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;B&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle show/hide (GNOME) TopBar and Window Position Bar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle show/hide (GNOME) TopBar&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;em&gt;Not set by default (set in extension settings)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle show/hide Window Position Bar&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;code&gt;monitor&lt;/code&gt; keybindings&lt;/th&gt; 
   &lt;th&gt;&lt;em&gt;Can be changed in PaperWM extension settings&lt;/em&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Right&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to the right monitor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Left&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to the left monitor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Up&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to the above monitor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Down&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Switch to the below monitor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Right&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move workspace to monitor on the right&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Left&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move workspace to monitor on the left&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Up&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move workspace to monitor above&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Down&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move workspace to monitor below&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Right&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Swap workspace with monitor to the right&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Left&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Swap workspace with monitor to the left&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Up&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Swap workspace with monitor above&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Down&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Swap workspace with monitor below&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Right&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window to the right monitor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Left&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window to the left monitor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Up&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window to the above monitor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Down&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Move active window to the below monitor&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Scratch layer&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github.com/paperwm/media/raw/master/scratch.png" alt="The floating scratch layer, with the alt tab menu open" /&gt;&lt;/p&gt; 
&lt;p&gt;The scratch layer is an escape hatch to a familiar floating layout. This layer is intended to store windows that are globally useful like chat applications and in general serve as the kitchen sink. When the scratch layer is active it will float above the tiled windows, when hidden the windows will be minimized.&lt;/p&gt; 
&lt;p&gt;Pressing &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Escape&lt;/kbd&gt; toggles between showing and hiding the windows in the scratch layer. Activating windows in the scratch layer is done using &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt;, the floating windows having priority in the list while active. When the tiling is active &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Tab&lt;/kbd&gt; selects the most recently used scratch window.&lt;/p&gt; 
&lt;p&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Escape&lt;/kbd&gt; will move a tiled window into the scratch layer or alternatively tile an already floating window. This functionality can also be accessed through the window context menu (&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;Space&lt;/kbd&gt;).&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;code&gt;scratch&lt;/code&gt; keybindings&lt;/th&gt; 
   &lt;th&gt;&lt;em&gt;Can be changed in PaperWM extension settings&lt;/em&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Shift&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Escape&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggles the floating scratch layer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Escape&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Attach/detach active window into scratch layer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;Escape&lt;/kbd&gt;&lt;/td&gt; 
   &lt;td&gt;Toggle the most recent scratch window&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Touchpad Gestures&lt;/h2&gt; 
&lt;p&gt;PaperWM implements the following touchpad gestures by default:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Gesture&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;three-finger swipe up&lt;/td&gt; 
   &lt;td&gt;Gnome Overview&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;three-finger swipe down&lt;/td&gt; 
   &lt;td&gt;PaperWM workspace stack view (see &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#the-workspace-stack--monitors"&gt;here&lt;/a&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;three-finger swipe left/right&lt;/td&gt; 
   &lt;td&gt;Moves tiling viewport (windows) left / right&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;PaperWM touchpad gesture behaviour can be modified via the &lt;code&gt;General&lt;/code&gt; tab in PaperWM settings:&lt;/p&gt; 
&lt;img alt="Touchpad gesture settings" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/gesture-settings.png" width="560px" /&gt; 
&lt;h2&gt;Window Position Bar (colored bar segment in Top Bar)&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/paperwm/PaperWM/pull/476"&gt;#476&lt;/a&gt; added a coloured window position bar to the Gnome Top Bar. This allows users to visually identify the current selected window position of the scrollable viewport in the current workspace. This is demonstrated in the following video:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/30424662/221416159-464d7512-5174-451b-9035-0ee84f9eb4ec.mp4"&gt;https://user-images.githubusercontent.com/30424662/221416159-464d7512-5174-451b-9035-0ee84f9eb4ec.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The window position bar can be &lt;em&gt;disabled&lt;/em&gt; from &lt;code&gt;PaperWM extension settings&lt;/code&gt;:&lt;/p&gt; 
&lt;img alt="Window indicator bar" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/window-indicator-bar.png" width="560px" /&gt; 
&lt;p&gt;You can style both the coloured position bar and the dimmed "position bar backdrop" by overriding the &lt;code&gt;paperwm-window-position-bar&lt;/code&gt; and &lt;code&gt;paperwm-window-position-bar-backdrop&lt;/code&gt; CSS classes respectively (see &lt;code&gt;user.css&lt;/code&gt; in &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#user-configuration--development"&gt;User configuration &amp;amp; development&lt;/a&gt; section for more information). The &lt;code&gt;paperwm-window-position-bar&lt;/code&gt; will also inherit the selection color (same as window borders) from &lt;code&gt;tile-preview&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Note: PaperWM overrides the default Gnome Top Bar style to be completely transparent so that the dimmed &lt;code&gt;window-position-bar-backdrop&lt;/code&gt; and &lt;code&gt;window-position-bar&lt;/code&gt; elements are visible.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Window Focus Modes&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/paperwm/PaperWM/pull/482"&gt;#482&lt;/a&gt; added the concept of &lt;code&gt;window focus modes&lt;/code&gt; to PaperWM. A &lt;code&gt;focus mode&lt;/code&gt; controls how windows are "focused". The following modes are currently available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the &lt;code&gt;DEFAULT&lt;/code&gt; focus mode is the traditional PaperWM behaviour (no snapping, just free scrolling)&lt;/li&gt; 
 &lt;li&gt;the &lt;code&gt;CENTER&lt;/code&gt; focus mode causes all windows to be centered horizontally on selection&lt;/li&gt; 
 &lt;li&gt;the &lt;code&gt;EDGE&lt;/code&gt; focus mode causes windows to snap to the closest edge horizontally on selection (but while there is only one window, it is centered)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Focus modes can be toggled by user-settable keybinding (default is &lt;code&gt;Super&lt;/code&gt;+&lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;), or by clicking the new focus-mode button in the Top Bar:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/focus-mode-button.png" alt="Focus mode button" /&gt;&lt;/p&gt; 
&lt;h3&gt;Setting the default focus mode&lt;/h3&gt; 
&lt;p&gt;The default focus mode is the standard PaperWM focus mode (i.e. not centered). This can be changed according to preference by changing the &lt;code&gt;Default focus mode&lt;/code&gt; setting PaperWM settings.&lt;/p&gt; 
&lt;img alt="Default focus mode" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/default-focus-mode.png" width="560px" /&gt; 
&lt;p&gt;&lt;em&gt;Note: changing this setting during a PaperWM session will set all spaces to the new default focus mode.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Hiding the focus mode icon&lt;/h3&gt; 
&lt;p&gt;Users may also prefer to hide the focus mode icon. You can do so from the &lt;code&gt;Advanced&lt;/code&gt; tab in PaperWM extension settings:&lt;/p&gt; 
&lt;img alt="Hiding the focus mode icon" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/hide-focus-mode-icon.png" width="560px" /&gt; 
&lt;h2&gt;Setting window specific properties&lt;/h2&gt; 
&lt;p&gt;It's possible to set window properties using simple rules that will be applied when placing new windows. Properties can applied to windows identified by their &lt;code&gt;wm_class&lt;/code&gt; or &lt;code&gt;title&lt;/code&gt;. The following properties are currently supported:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Property&lt;/th&gt; 
   &lt;th&gt;Input type&lt;/th&gt; 
   &lt;th&gt;Input example&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;scratch_layer&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;if &lt;code&gt;true&lt;/code&gt; window will be placed on the scratch layer.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;preferredWidth&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;String value with &lt;code&gt;%&lt;/code&gt; or &lt;code&gt;px&lt;/code&gt; unit&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;"50%"&lt;/code&gt;, &lt;code&gt;"450px"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;resizes the window width to the preferred width when it's created. &lt;br /&gt;&lt;em&gt;Note&lt;sup&gt;1&lt;/sup&gt;: property not applicable to windows on scratch layer.&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Window properties can be added using the &lt;code&gt;Winprops&lt;/code&gt; tab of the PaperWM extension settings:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/30424662/211422647-79e64d56-5dbb-4054-b9a6-32bf3194b636.mp4"&gt;https://user-images.githubusercontent.com/30424662/211422647-79e64d56-5dbb-4054-b9a6-32bf3194b636.mp4&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;wm_class&lt;/code&gt; or &lt;code&gt;title&lt;/code&gt; of a window can be found by using looking glass: &lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;F2&lt;/kbd&gt; &lt;code&gt;lg&lt;/code&gt; &lt;kbd&gt;Return&lt;/kbd&gt; Go to the "Windows" section at the top right and find the window. X11 users can also use the &lt;code&gt;xprop&lt;/code&gt; command line tool (&lt;code&gt;title&lt;/code&gt; is referred as &lt;code&gt;WM_NAME&lt;/code&gt; in &lt;code&gt;xprop&lt;/code&gt;). The match of &lt;code&gt;wm_class&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; are with an OR condition; and in addition to a plain string matching, a constructed &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/RegExp"&gt;&lt;code&gt;RegExp()&lt;/code&gt;&lt;/a&gt; can be used to utilise regex matching. For example, e.g. &lt;code&gt;/.*terminal.*/i&lt;/code&gt; would match on any value that contains the word "terminal" (case-insensitive).&lt;/p&gt; 
&lt;h3&gt;Setting a default window property rule&lt;/h3&gt; 
&lt;p&gt;You can use the functionality defined in the &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#setting-window-specific-properties"&gt;setting window specific properties&lt;/a&gt; section to define a &lt;code&gt;default&lt;/code&gt; window property rule that will be applied to all windows NOT matched by a more specific window property rule.&lt;/p&gt; 
&lt;p&gt;You do this by using the special "match all" operator &lt;code&gt;*&lt;/code&gt; as an input for &lt;code&gt;wm_class&lt;/code&gt; or &lt;code&gt;title&lt;/code&gt;. The below image shows setting a default &lt;code&gt;Preferred width&lt;/code&gt; value of &lt;code&gt;50%&lt;/code&gt;.&lt;/p&gt; 
&lt;img alt="Setting default window property rule" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/default-star-winprop.png" width="560px" /&gt; 
&lt;p&gt;This special operator is at a lower precedence, so more specific properties that match a window will always take precedence and be applied.&lt;/p&gt; 
&lt;h2&gt;Window insertion position for new windows (and dropped windows in &lt;code&gt;take&lt;/code&gt; mode)&lt;/h2&gt; 
&lt;p&gt;By default PaperWM inserts new windows (and drops windows in &lt;code&gt;take&lt;/code&gt; mode, see &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#managing-multiple-windows-at-once"&gt;Managing multiple windows at once&lt;/a&gt;) to the right of the currently active window. This behaviour can be changed via PaperWM settings, or with the &lt;code&gt;Open Window Position&lt;/code&gt; button/icon (which is to the right of the focus mode icon):&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/open-position-button.png" alt="Open positions button" /&gt;&lt;/p&gt; 
&lt;p&gt;There are several &lt;code&gt;positions&lt;/code&gt; available for selection. Namely, &lt;code&gt;right&lt;/code&gt;, &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;. The latter two will insert windows at the start or end of tiled windows container.&lt;/p&gt; 
&lt;p&gt;Options for these settings, as well as settings to enable/disable specific positions in the &lt;code&gt;Open Window Position&lt;/code&gt; buttons, are provided in PaperWM settings:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/paperwm/PaperWM/assets/30424662/4e4aa415-d047-44cb-b87a-d7e08493ecbd"&gt;https://github.com/paperwm/PaperWM/assets/30424662/4e4aa415-d047-44cb-b87a-d7e08493ecbd&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Managing multiple windows at once&lt;/h2&gt; 
&lt;p&gt;PaperWM provides functionality to move, reorder, and close multiple windows at once. These "multi-window" operations are initialised with the &lt;code&gt;Take the window, dropping it when finished navigating&lt;/code&gt; keybind (default &lt;kbd&gt;Super&lt;/kbd&gt;&lt;kbd&gt;T&lt;/kbd&gt;).&lt;/p&gt; 
&lt;p&gt;This allows you to &lt;code&gt;take&lt;/code&gt; multiple windows and temporarily store them in the bottom-right corner of the workspace. The following operations are available while there are one or more windows "taken":&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Selectively take/drop windows (pressing &lt;code&gt;spacebar&lt;/code&gt; to drop the latest taken window):&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/paperwm/PaperWM/assets/30424662/f736adea-d5ba-4c9d-aca0-2f63322c08cb"&gt;https://github.com/paperwm/PaperWM/assets/30424662/f736adea-d5ba-4c9d-aca0-2f63322c08cb&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Selecting all windows across spaces to close at once (pressing &lt;code&gt;q&lt;/code&gt;):&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/paperwm/PaperWM/assets/30424662/e6596de2-f5f7-46af-b447-044f17f326f9"&gt;https://github.com/paperwm/PaperWM/assets/30424662/e6596de2-f5f7-46af-b447-044f17f326f9&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Reordering "taken" windows and selectively dropping them:&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/paperwm/PaperWM/assets/30424662/c7c50471-f352-4693-a936-2e711189f933"&gt;https://github.com/paperwm/PaperWM/assets/30424662/c7c50471-f352-4693-a936-2e711189f933&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;User configuration &amp;amp; development&lt;/h2&gt; 
&lt;p&gt;You can supply a custom &lt;code&gt;user.css&lt;/code&gt; in &lt;code&gt;~/.config/paperwm/&lt;/code&gt;. This user stylesheet can override the default styles of paperwm (e.g. from &lt;code&gt;~/.local/share/gnome-shell/extensions/paperwm@paperwm.github.com/user.css&lt;/code&gt; or &lt;code&gt;/usr/share/gnome-shell/extensions/paperwm@paperwm.github.com/user.css&lt;/code&gt;), gnome or even other extensions. The same rules as for CSS in the browser apply (i.e. CSS rules are additive).&lt;/p&gt; 
&lt;p&gt;You can reload the &lt;code&gt;user.css&lt;/code&gt; by disabling (turning off) PaperWM and then re-enabling PaperWM (turning on), e.g via &lt;code&gt;Extensions&lt;/code&gt; app, or by running &lt;code&gt;Main.loadTheme()&lt;/code&gt; in looking glass (i.e. &lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;F2&lt;/kbd&gt; &lt;code&gt;lg&lt;/code&gt; &lt;kbd&gt;Return&lt;/kbd&gt;). Note that the latter approach will reload all other .css files (e.g. from other extensions) and &lt;code&gt;user.css&lt;/code&gt; needs to already be loaded for this to work. So after initially creating the file you'll need to disable then enable PaperWM (or restart Gnome).&lt;/p&gt; 
&lt;h3&gt;Using PaperWM extension settings (UI) to modify settings&lt;/h3&gt; 
&lt;p&gt;PaperWM provides an extension settings UI to modify many of PaperWM's more prevalent settings. This is available in the &lt;code&gt;gnome-extensions&lt;/code&gt; application.&lt;/p&gt; 
&lt;h3&gt;Using dconf-editor to modify settings&lt;/h3&gt; 
&lt;p&gt;You can also use &lt;code&gt;dconf-editor&lt;/code&gt; to view and modify all PaperWM user settings. You can view all settings by executing the following command from a terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;GSETTINGS_SCHEMA_DIR=::$HOME/.local/share/gnome-shell/extensions/paperwm@paperwm.github.com/schemas dconf-editor /org/gnome/shell/extensions/paperwm/ &amp;amp;&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;PaperWM user-configurable settings &lt;em&gt;not&lt;/em&gt; available in settings UI&lt;/h3&gt; 
&lt;p&gt;Below is a list of user-configurable settings that are not exposed in the PaperWM settings UI. These can be modified via &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#using-dconf-editor-to-modify-settings"&gt;&lt;code&gt;dconf-editor&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Input Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;default‑background&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the (default) background used for PaperWM workspaces. If set will use this background instead of colors defined in &lt;code&gt;workspace-colors&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;absolute path&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;empty&lt;/em&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;em&gt;Note: you can override this for individual workspaces in the settings UI.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;dconf write /org/gnome/shell/extensions/paperwm/default-background '"/home/user/Wallpaper/mars-sunset-2k.jpg"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Setting&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Input Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;workspace‑colors&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the workspace background color palette.&lt;/td&gt; 
   &lt;td&gt;&lt;em&gt;String array of colors&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;['#314E6C', '#565248', '#445632', '#663822', '#494066', '#826647', '#4B6983', '#807D74', '#5D7555', '#884631', '#625B81', '#B39169', '#7590AE', '#BAB5AB', '#83A67F', '#C1665A', '#887FA3', '#E0C39E']&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Gnome Top Bar opacity / styling&lt;/h2&gt; 
&lt;p&gt;PaperWM by default changes the opacity of the Gnome Top Bar. This styling is used for certain PaperWM features. However, this styling may conflict with the Top Bar styling of other extensions (that you may prefer have style the Top Bar instead).&lt;/p&gt; 
&lt;p&gt;Users can disable PaperWM's ability to change GNOME Top Bar styling from PaperWM settings:&lt;/p&gt; 
&lt;img alt="Enable Top Bar Styling" src="https://raw.githubusercontent.com/paperwm/PaperWM/release/media/topbar-styling.png" width="560px" /&gt; 
&lt;p&gt;&lt;em&gt;Note: several PaperWM specific features are dependent on changing the Gnome Top Bar to function correctly. If you choose to disable PaperWM's ability to change the Top Bar styles (with the setting above), you may also want to disable the &lt;a href="https://raw.githubusercontent.com/paperwm/PaperWM/release/#window-position-bar-colored-bar-segment-in-top-bar"&gt;Window Position Bar&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt; 
&lt;h2&gt;Managed Gnome Shell Settings&lt;/h2&gt; 
&lt;p&gt;There's a few Gnome Shell settings that are incompatible with, or work poorly with, PaperWM. Namely&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;workspaces-only-on-primary&lt;/code&gt;: Multi monitor support require workspaces spanning all monitors&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;edge-tiling&lt;/code&gt;: We don't support the native half tiled windows&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;attach-modal-dialogs&lt;/code&gt;: Attached modal dialogs can cause visual glitching&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;PaperWM manages these settings (disables them) during runtime. It will then restore these settings to their prior values when PaperWM is disabled.&lt;/p&gt; 
&lt;h2&gt;Recommended extensions&lt;/h2&gt; 
&lt;p&gt;These extensions are good complements to PaperWM:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daniellandau/switcher"&gt;Switcher&lt;/a&gt; - combined window switcher and launcher&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://micheleg.github.io/dash-to-dock/"&gt;Dash to Dock&lt;/a&gt; - a great dock&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/christopher-l/focus-follows-workspace"&gt;Focus Follows Workspace&lt;/a&gt; - This complements the experience with multiple monitors and GNOME's global hotkeys for switching workspaces or moving windows to workspaces (see #704)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Incompatible extensions&lt;/h2&gt; 
&lt;p&gt;In most cases it should be enough to disable these extensions.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gitlab.com/rastersoft/desktop-icons-ng"&gt;DING (Desktop Icons NG)&lt;/a&gt; (shipped by default with Ubuntu) or similar extensions that add desktop icons. Creates invisible windows and does not properly show icons. See #784, #266&lt;/li&gt; 
 &lt;li&gt;Fedoras builtin desktop watermark (shipped with Fedora) See #706&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yilozt/rounded-window-corners"&gt;Rounded Window Corners&lt;/a&gt; or similar extensions that change the window shape. See #763, #431&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/christopher-l/space-bar"&gt;Space Bar&lt;/a&gt; or similar extensions that modify workspace names etc. See #720&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/home-sweet-gnome/dash-to-panel"&gt;Dash to Panel&lt;/a&gt; or similar panels. Works in some configurations and in some not. Is incompatible with PaperWMs window position bar. See #170, #199, #646, #382, #166, #258&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See issues tagged with the &lt;a href="https://github.com/paperwm/PaperWM/issues?q=is%3Aissue+label%3Aextension-conflict+sort%3Aupdated-desc"&gt;extension-conflict&lt;/a&gt; label for current and closed issues related to extension conflicts.&lt;/p&gt; 
&lt;p&gt;In general extensions that do one of the following are problematic when used together with PaperWM (although they might partially work):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modify the desktop&lt;/li&gt; 
 &lt;li&gt;Modify window "shapes" (e.g. rounded corners)&lt;/li&gt; 
 &lt;li&gt;Modify workspaces&lt;/li&gt; 
 &lt;li&gt;Modify touch gestures&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;PaperWM will attempt to disable keybindings of some known extensions if they clash. E.g. the Ubuntu Tiling Assistant from Ubuntu 23.10.&lt;/p&gt; 
&lt;h2&gt;Related / similar projects&lt;/h2&gt; 
&lt;p&gt;More projects are embracing the scrollable tiling concept! The following projects may be of interest to others (especially if PaperWM doesn't quite work for you):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Niri: &lt;a href="https://github.com/YaLTeR/niri"&gt;https://github.com/YaLTeR/niri&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Karousel (for KDE): &lt;a href="https://github.com/peterfajdiga/karousel"&gt;https://github.com/peterfajdiga/karousel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;papersway (for i3/sway): &lt;a href="https://spwhitton.name/tech/code/papersway/"&gt;https://spwhitton.name/tech/code/papersway/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A similar idea was apparently tried out a while back: &lt;a href="https://web.archive.org/web/20201123162403/http://10gui.com/"&gt;10/GUI&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SillyTavern/SillyTavern</title>
      <link>https://github.com/SillyTavern/SillyTavern</link>
      <description>&lt;p&gt;LLM Frontend for Power Users.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a name="readme-top"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/01a6ae9a-16aa-45f2-8bff-32b5dc587e44" alt="" /&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-de_de.md"&gt;German&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_cn.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-zh_tw.md"&gt;繁體中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ja_jp.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ru_ru.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/release/readme-ko_kr.md"&gt;한국어&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Stars" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/forks"&gt;&lt;img src="https://img.shields.io/github/forks/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Forks" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;&lt;img src="https://img.shields.io/github/issues/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Issues" /&gt;&lt;/a&gt; &lt;a href="https://github.com/SillyTavern/SillyTavern/pulls"&gt;&lt;img src="https://img.shields.io/github/issues-pr/SillyTavern/SillyTavern.svg?sanitize=true" alt="GitHub Pull Requests" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;SillyTavern provides a single unified interface for many LLM APIs (KoboldAI/CPP, Horde, NovelAI, Ooba, Tabby, OpenAI, OpenRouter, Claude, Mistral and more), a mobile-friendly layout, Visual Novel Mode, Automatic1111 &amp;amp; ComfyUI API image generation integration, TTS, WorldInfo (lorebooks), customizable UI, auto-translate, more prompt options than you'd ever want or need, and endless growth potential via third-party extensions.&lt;/p&gt; 
&lt;p&gt;We have a &lt;a href="https://docs.sillytavern.app/"&gt;Documentation website&lt;/a&gt; to answer most of your questions and help you get started.&lt;/p&gt; 
&lt;h2&gt;What is SillyTavern?&lt;/h2&gt; 
&lt;p&gt;SillyTavern (or ST for short) is a locally installed user interface that allows you to interact with text generation LLMs, image generation engines, and TTS voice models.&lt;/p&gt; 
&lt;p&gt;Beginning in February 2023 as a fork of TavernAI 1.2.8, SillyTavern now has over 200 contributors and 2 years of independent development under its belt, and continues to serve as a leading software for savvy AI hobbyists.&lt;/p&gt; 
&lt;h2&gt;Our Vision&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;We aim to empower users with as much utility and control over their LLM prompts as possible. The steep learning curve is part of the fun!&lt;/li&gt; 
 &lt;li&gt;We do not provide any online or hosted services, nor programmatically track any user data.&lt;/li&gt; 
 &lt;li&gt;SillyTavern is a passion project brought to you by a dedicated community of LLM enthusiasts, and will always be free and open sourced.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Do I need a powerful PC to run SillyTavern?&lt;/h2&gt; 
&lt;p&gt;The hardware requirements are minimal: it will run on anything that can run NodeJS 18 or higher. If you intend to do LLM inference on your local machine, we recommend a 3000-series NVIDIA graphics card with at least 6GB of VRAM, but actual requirements may vary depending on the model and backend you choose to use.&lt;/p&gt; 
&lt;h2&gt;Questions or suggestions?&lt;/h2&gt; 
&lt;h3&gt;Discord server&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;&lt;img src="https://img.shields.io/discord/1100685673633153084?color=5865F2&amp;amp;label=discord&amp;amp;labelColor=black&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;style=for-the-badge" alt="" /&gt;&lt;/a&gt;&lt;/th&gt; 
   &lt;th align="left"&gt;&lt;a href="https://discord.gg/sillytavern"&gt;Join our Discord community!&lt;/a&gt; Get support, share favorite characters and prompts.&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;p&gt;Or get in touch with the developers directly:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Discord: cohee, rossascends, wolfsblvt&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/user/RossAscends/"&gt;/u/RossAscends&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/sillylossy/"&gt;/u/sillylossy&lt;/a&gt;, &lt;a href="https://www.reddit.com/user/Wolfsblvt/"&gt;u/Wolfsblvt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/issues"&gt;Post a GitHub issue&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;I like your project! How do I contribute?&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Send pull requests. Learn how to contribute: &lt;a href="https://raw.githubusercontent.com/SillyTavern/SillyTavern/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Send feature suggestions and issue reports using the provided templates.&lt;/li&gt; 
 &lt;li&gt;Read this entire readme file and check the documentation website first, to avoid sending duplicate issues.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/9b5f32f0-c3b3-4102-b3f5-0e9213c0f50f" /&gt; 
&lt;img width="500" alt="image" src="https://github.com/user-attachments/assets/913fdbaa-7d33-42f1-ae2c-89dca41c53d1" /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;For detailed installation instructions, please visit our documentation:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/windows/"&gt;Windows Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/linuxmacos/"&gt;MacOS/Linux Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/android-(termux)/"&gt;Android (Termux) Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://docs.sillytavern.app/installation/docker/"&gt;Docker Installation Guide&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License and credits&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more details.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TavernAI/TavernAI"&gt;TavernAI&lt;/a&gt; 1.2.8 by Humi: MIT License&lt;/li&gt; 
 &lt;li&gt;Portions of CncAnon's TavernAITurbo mod used with permission&lt;/li&gt; 
 &lt;li&gt;Visual Novel Mode inspired by the work of PepperTaco (&lt;a href="https://github.com/peppertaco/Tavern/"&gt;https://github.com/peppertaco/Tavern/&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Noto Sans font by Google (OFL license)&lt;/li&gt; 
 &lt;li&gt;Icon theme by Font Awesome &lt;a href="https://fontawesome.com"&gt;https://fontawesome.com&lt;/a&gt; (Icons: CC BY 4.0, Fonts: SIL OFL 1.1, Code: MIT License)&lt;/li&gt; 
 &lt;li&gt;Default content by @OtisAlejandro (Seraphina character and lorebook) and @kallmeflocc (10K Discord Users Celebratory Background)&lt;/li&gt; 
 &lt;li&gt;Docker guide by &lt;a href="https://github.com/mrguymiah"&gt;@mrguymiah&lt;/a&gt; and &lt;a href="https://github.com/Bronya-Rand"&gt;@Bronya-Rand&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;kokoro-js library by &lt;a href="https://github.com/hexgrad"&gt;@hexgrad&lt;/a&gt; (Apache-2.0 License)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Top Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/SillyTavern/SillyTavern/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=SillyTavern/SillyTavern" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- LINK GROUP --&gt;</description>
    </item>
    
    <item>
      <title>blackmatrix7/ios_rule_script</title>
      <link>https://github.com/blackmatrix7/ios_rule_script</link>
      <description>&lt;p&gt;分流规则、重写写规则及脚本。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Rules And Scripts&lt;/h1&gt; 
&lt;h2&gt;前言&lt;/h2&gt; 
&lt;p&gt;各平台的分流规则、复写规则及自动化脚本。&lt;/p&gt; 
&lt;h2&gt;特别声明&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;本项目内所有资源文件，禁止任何公众号、自媒体进行任何形式的转载、发布。&lt;/li&gt; 
 &lt;li&gt;编写本项目主要目的为学习和研究ES6，无法保证项目内容的合法性、准确性、完整性和有效性。&lt;/li&gt; 
 &lt;li&gt;本项目涉及的数据由使用的个人或组织自行填写，本项目不对数据内容负责，包括但不限于数据的真实性、准确性、合法性。使用本项目所造成的一切后果，与本项目的所有贡献者无关，由使用的个人或组织完全承担。&lt;/li&gt; 
 &lt;li&gt;本项目中涉及的第三方硬件、软件等，与本项目没有任何直接或间接的关系。本项目仅对部署和使用过程进行客观描述，不代表支持使用任何第三方硬件、软件。使用任何第三方硬件、软件，所造成的一切后果由使用的个人或组织承担，与本项目无关。&lt;/li&gt; 
 &lt;li&gt;本项目中所有内容只供学习和研究使用，不得将本项目中任何内容用于违反国家/地区/组织等的法律法规或相关规定的其他用途。&lt;/li&gt; 
 &lt;li&gt;所有基于本项目源代码，进行的任何修改，为其他个人或组织的自发行为，与本项目没有任何直接或间接的关系，所造成的一切后果亦与本项目无关。&lt;/li&gt; 
 &lt;li&gt;所有直接或间接使用本项目的个人和组织，应24小时内完成学习和研究，并及时删除本项目中的所有内容。如对本项目的功能有需求，应自行开发相关功能。&lt;/li&gt; 
 &lt;li&gt;本项目保留随时对免责声明进行补充或更改的权利，直接或间接使用本项目内容的个人或组织，视为接受本项目的特别声明。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;规则&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;我们并不生产规则，我们只是开源规则的搬运工。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;分流规则&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/rule"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rule&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;复写规则&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/rewrite&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;所有规则数据都来自互联网，感谢开源规则项目作者的辛勤付出。&lt;/p&gt; 
&lt;h2&gt;脚本&lt;/h2&gt; 
&lt;h3&gt;脚本说明&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;脚本&lt;/th&gt; 
   &lt;th&gt;介绍&lt;/th&gt; 
   &lt;th&gt;框架&lt;/th&gt; 
   &lt;th&gt;维护状态&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/smzdm"&gt;什么值得买&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;什么值得买任务和去广告&lt;/td&gt; 
   &lt;td&gt;MagicJS 2/3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/tieba"&gt;百度贴吧&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;带重试功能的贴吧签到，提高签到成功率&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/startup"&gt;开屏去广告&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;通过脚本去除缓存到本地的APP开屏广告&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/manmanbuy"&gt;慢慢买&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/dingdong"&gt;叮咚买菜&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/famijia"&gt;Fa米家&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/luka"&gt;Luka&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;每日自动签到&lt;/td&gt; 
   &lt;td&gt;MagicJS 2&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/zheye"&gt;哲也同学&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;之乎者也&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/synology"&gt;Synology&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;群晖Download Station资源离线下载&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;正常&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/script/applestore"&gt;AppleStore&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;AppleStore 商品库存监控&lt;/td&gt; 
   &lt;td&gt;MagicJS 3&lt;/td&gt; 
   &lt;td&gt;暂停&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Quantumult X Gallery&lt;/h4&gt; 
&lt;p&gt;部分脚本已配置为Quantumult X Gallery。&lt;/p&gt; 
&lt;p&gt;地址： &lt;a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json"&gt;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/gallery.json&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;BoxJS&lt;/h4&gt; 
&lt;p&gt;感谢 &lt;a href="https://github.com/chouchoui"&gt;@chouchoui&lt;/a&gt; 为本项目添加BoxJS的订阅。&lt;/p&gt; 
&lt;p&gt;地址：&lt;a href="https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/boxjs.json"&gt;https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/script/boxjs.json&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;外部资源&lt;/h3&gt; 
&lt;p&gt;项目中资源来自互联网上其他开源项目（具体以不同目录的说明为准），这里主要进行一些整合和备份。对于此类资源，无法对使用过程中出现的任何问题进行解答，您需要联系原作者。&lt;/p&gt; 
&lt;p&gt;地址：&lt;a href="https://github.com/blackmatrix7/ios_rule_script/tree/master/external"&gt;https://github.com/blackmatrix7/ios_rule_script/tree/master/external&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;感谢&lt;/h1&gt; 
&lt;p&gt;以下排名不分先后&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/BaileyZyp"&gt;@BaileyZyp&lt;/a&gt; &lt;a href="https://github.com/Mazeorz"&gt;@Mazeorz&lt;/a&gt; &lt;a href="https://github.com/LuzMasonj"&gt;@LuzMasonj&lt;/a&gt; &lt;a href="https://github.com/chouchoui"&gt;@chouchoui&lt;/a&gt; &lt;a href="https://github.com/ypannnn"&gt;@ypannnn&lt;/a&gt; &lt;a href="https://github.com/echizenryoma"&gt;@echizenryoma&lt;/a&gt; &lt;a href="https://github.com/zirawell"&gt;@zirawell&lt;/a&gt; &lt;a href="https://github.com/urzz"&gt;@urzz&lt;/a&gt; &lt;a href="https://github.com/ASD-max"&gt;@ASD-max&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stremio/stremio-web</title>
      <link>https://github.com/Stremio/stremio-web</link>
      <description>&lt;p&gt;Stremio - Freedom to Stream&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Stremio - Freedom to Stream&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://github.com/stremio/stremio-web/workflows/Build/badge.svg?branch=development" alt="Build" /&gt; &lt;a href="https://stremio.github.io/stremio-web/development"&gt;&lt;img src="https://img.shields.io/website?label=Page&amp;amp;logo=github&amp;amp;up_message=online&amp;amp;down_message=offline&amp;amp;url=https%3A%2F%2Fstremio.github.io%2Fstremio-web%2F" alt="Github Page" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Stremio is a modern media center that's a one-stop solution for your video entertainment. You discover, watch and organize video content from easy to install addons.&lt;/p&gt; 
&lt;h2&gt;Build&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js 12 or higher&lt;/li&gt; 
 &lt;li&gt;npm 6 or higher&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Install dependencies&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start development server&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Production build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;h3&gt;Board&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/board.png" alt="Board" /&gt;&lt;/p&gt; 
&lt;h3&gt;Discover&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/discover.png" alt="Discover" /&gt;&lt;/p&gt; 
&lt;h3&gt;Meta Details&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/Stremio/stremio-web/development/screenshots/metadetails.png" alt="Meta Details" /&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Stremio is copyright 2017-2023 Smart code and available under GPLv2 license. See the &lt;a href="https://raw.githubusercontent.com/Stremio/stremio-web/development/LICENSE.md"&gt;LICENSE&lt;/a&gt; file in the project for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>leonardomso/33-js-concepts</title>
      <link>https://github.com/leonardomso/33-js-concepts</link>
      <description>&lt;p&gt;📜 33 JavaScript concepts every developer should know.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;br /&gt; &lt;a href="https://github.com/leonardomso/33"&gt;&lt;img src="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/github-image.png" alt="33 Concepts Every JS Developer Should Know" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;strong&gt;33 Concepts Every JavaScript Developer Should Know&lt;/strong&gt; &lt;br /&gt;&lt;br /&gt; &lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#introduction"&gt;Introduction&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#community"&gt;Community&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#license"&gt;License&lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;🚀 Considered by GitHub as one of the &lt;a href="https://blog.github.com/2018-12-13-new-open-source-projects/"&gt;top open source projects of 2018!&lt;/a&gt;&lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This repository was created with the intention of helping developers master their concepts in JavaScript. It is not a requirement, but a guide for future studies. It is based on an article written by Stephen Curtis and you can read it &lt;a href="https://medium.com/@stephenthecurt/33-fundamentals-every-javascript-developer-should-know-13dd720a90d1"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Feel free to submit a PR by adding a link to your own recaps or reviews. If you want to translate the repo into your native language, please feel free to do so.&lt;/p&gt; 
&lt;p&gt;All the translations for this repo will be listed below:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amrsekilly/33-js-concepts"&gt;اَلْعَرَبِيَّةُ‎ (Arabic)&lt;/a&gt; — Amr Elsekilly&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thewebmasterp/33-js-concepts"&gt;Български (Bulgarian)&lt;/a&gt; - thewebmasterp&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stephentian/33-js-concepts"&gt;汉语 (Chinese)&lt;/a&gt; — Re Tian&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tiagoboeing/33-js-concepts"&gt;Português do Brasil (Brazilian Portuguese)&lt;/a&gt; — Tiago Boeing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjs03057/33-js-concepts.git"&gt;한국어 (Korean)&lt;/a&gt; — Suin Lee&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/adonismendozaperez/33-js-conceptos"&gt;Español (Spanish)&lt;/a&gt; — Adonis Mendoza&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ilker0/33-js-concepts"&gt;Türkçe (Turkish)&lt;/a&gt; — İlker Demir&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gumennii/33-js-concepts"&gt;русский язык (Russian)&lt;/a&gt; — Mihail Gumennii&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nguyentranchung/33-js-concepts"&gt;Tiếng Việt (Vietnamese)&lt;/a&gt; — Nguyễn Trần Chung&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lip3k/33-js-concepts"&gt;Polski (Polish)&lt;/a&gt; — Dawid Lipinski&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/majidalavizadeh/33-js-concepts"&gt;فارسی (Persian)&lt;/a&gt; — Majid Alavizadeh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rijdz/33-js-concepts"&gt;Bahasa Indonesia (Indonesian)&lt;/a&gt; — Rijdzuan Sampoerna&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/robinmetral/33-concepts-js"&gt;Français (French)&lt;/a&gt; — Robin Métral&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vikaschauhan/33-js-concepts"&gt;हिन्दी (Hindi)&lt;/a&gt; — Vikas Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/DimitrisZx/33-js-concepts"&gt;Ελληνικά (Greek)&lt;/a&gt; — Dimitris Zarachanis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oimo23/33-js-concepts"&gt;日本語 (Japanese)&lt;/a&gt; — oimo23&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/burhannn/33-js-concepts"&gt;Deutsch (German)&lt;/a&gt; — burhannn&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AndrewSavetchuk/33-js-concepts-ukrainian-translation"&gt;украї́нська мо́ва (Ukrainian)&lt;/a&gt; — Andrew Savetchuk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ududsha/33-js-concepts"&gt;සිංහල (Sinhala)&lt;/a&gt; — Udaya Shamendra&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Donearm/33-js-concepts"&gt;Italiano (Italian)&lt;/a&gt; — Gianluca Fiore&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ANormalStick/33-js-concepts"&gt;Latviešu (Latvian)&lt;/a&gt; - Jānis Īvāns&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Amandagne/33-js-concepts"&gt;Afaan Oromoo (Oromo)&lt;/a&gt; - Amanuel Dagnachew&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ninearif/33-js-concepts"&gt;ภาษาไทย (Thai)&lt;/a&gt; — Arif Waram&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marioestradaf/33-js-concepts"&gt;Català (Catalan)&lt;/a&gt; — Mario Estrada&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FenixHongell/33-js-concepts/"&gt;Svenska (Swedish)&lt;/a&gt; — Fenix Hongell&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Chhunneng/33-js-concepts"&gt;ខ្មែរ (Khmer)&lt;/a&gt; — Chrea Chanchhunneng&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hmhard/33-js-concepts"&gt;አማርኛ (Ethiopian)&lt;/a&gt; - Miniyahil Kebede(ምንያህል ከበደ)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yafimau/33-js-concepts"&gt;Беларуская мова (Belarussian)&lt;/a&gt; — Dzianis Yafimau&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/smnv-shokh/33-js-concepts"&gt;O'zbekcha (Uzbek)&lt;/a&gt; — Shokhrukh Usmonov&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sudoyasir/33-js-concepts"&gt;Urdu (اردو)&lt;/a&gt; — Yasir Nawaz&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milostivyy/33-js-concepts"&gt;हिन्दी (Hindi)&lt;/a&gt; — Mahima Chauhan&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jisan-mia/33-js-concepts"&gt;বাংলা (Bengali)&lt;/a&gt; — Jisan Mia&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VatsalBhuva11/33-js-concepts"&gt;ગુજરાતી (Gujarati)&lt;/a&gt; — Vatsal Bhuva&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Sunny-unik/33-js-concepts"&gt;سنڌي (Sindhi)&lt;/a&gt; — Sunny Gandhwani&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debnath003/33-js-concepts"&gt;भोजपुरी (Bhojpuri)&lt;/a&gt; — Pronay Debnath&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;ਪੰਜਾਬੀ (Punjabi)&lt;/a&gt; — Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Harshdev098/33-js-concepts"&gt;Latin (Latin)&lt;/a&gt; — Harsh Dev Pathak&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Stark-Akshay/33-js-concepts"&gt;മലയാളം (Malayalam)&lt;/a&gt; — Akshay Manoj&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ayobaj/33-js-concepts"&gt;Yorùbá (Yoruba)&lt;/a&gt; - Ayomide Bajulaye&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rafyzg/33-js-concepts"&gt;עברית‎ (Hebrew)&lt;/a&gt; — Refael Yzgea&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dlvisser/33-js-concepts"&gt;Nederlands (Dutch)&lt;/a&gt; — Dave Visser&lt;/li&gt; 
 &lt;li&gt;[தமிழ் (Tamil)] (&lt;a href="https://github.com/UdayaKrishnanM/33-js-concepts"&gt;https://github.com/UdayaKrishnanM/33-js-concepts&lt;/a&gt;) - Udaya Krishnan M&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://media4.giphy.com/media/3hoLIVAJYkz6T0Ichp/giphy.gif" /&gt; &lt;a id="table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#1-call-stack"&gt;&lt;strong&gt;Call Stack&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#2-primitive-types"&gt;&lt;strong&gt;Primitive Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#3-value-types-and-reference-types"&gt;&lt;strong&gt;Value Types and Reference Types&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#4-implicit-explicit-nominal-structuring-and-duck-typing"&gt;&lt;strong&gt;Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#5--vs--vs-typeof"&gt;&lt;strong&gt;== vs === vs typeof&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#6-function-scope-block-scope-and-lexical-scope"&gt;&lt;strong&gt;Function Scope, Block Scope and Lexical Scope&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#7-expression-vs-statement"&gt;&lt;strong&gt;Expression vs Statement&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#8-iife-modules-and-namespaces"&gt;&lt;strong&gt;IIFE, Modules and Namespaces&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#9-message-queue-and-event-loop"&gt;&lt;strong&gt;Message Queue and Event Loop&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#10-settimeout-setinterval-and-requestanimationframe"&gt;&lt;strong&gt;setTimeout, setInterval and requestAnimationFrame&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#11-javascript-engines"&gt;&lt;strong&gt;JavaScript Engines&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#12-bitwise-operators-type-arrays-and-array-buffers"&gt;&lt;strong&gt;Bitwise Operators, Type Arrays and Array Buffers&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#13-dom-and-layout-trees"&gt;&lt;strong&gt;DOM and Layout Trees&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#14-factories-and-classes"&gt;&lt;strong&gt;Factories and Classes&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#15-this-call-apply-and-bind"&gt;&lt;strong&gt;this, call, apply and bind&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#16-new-constructor-instanceof-and-instances"&gt;&lt;strong&gt;new, Constructor, instanceof and Instances&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#17-prototype-inheritance-and-prototype-chain"&gt;&lt;strong&gt;Prototype Inheritance and Prototype Chain&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#18-objectcreate-and-objectassign"&gt;&lt;strong&gt;Object.create and Object.assign&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#19-map-reduce-filter"&gt;&lt;strong&gt;map, reduce, filter&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#20-pure-functions-side-effects-state-mutation-and-event-propagation"&gt;&lt;strong&gt;Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#21-closures"&gt;&lt;strong&gt;Closures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#22-high-order-functions"&gt;&lt;strong&gt;High Order Functions&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#23-recursion"&gt;&lt;strong&gt;Recursion&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#24-collections-and-generators"&gt;&lt;strong&gt;Collections and Generators&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#25-promises"&gt;&lt;strong&gt;Promises&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#26-asyncawait"&gt;&lt;strong&gt;async/await&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#27-data-structures"&gt;&lt;strong&gt;Data Structures&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#28-expensive-operation-and-big-o-notation"&gt;&lt;strong&gt;Expensive Operation and Big O Notation&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#29-algorithms"&gt;&lt;strong&gt;Algorithms&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#30-inheritance-polymorphism-and-code-reuse"&gt;&lt;strong&gt;Inheritance, Polymorphism and Code Reuse&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#31-design-patterns"&gt;&lt;strong&gt;Design Patterns&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#32-partial-applications-currying-compose-and-pipe"&gt;&lt;strong&gt;Partial Applications, Currying, Compose and Pipe&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#33-clean-code"&gt;&lt;strong&gt;Clean Code&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;1. Call Stack&lt;/h2&gt; 
&lt;p&gt;The call stack is a mechanism that the JavaScript interpreter uses to keep track of function execution within a program. In JavaScript, functions are executed in the order they are called. The call stack follows the Last In, First Out (LIFO) principle, meaning that the last function pushed onto the stack is the first one to be executed.&lt;/p&gt; 
&lt;p&gt;According to the ECMAScript specification, the call stack is defined as part of the execution context. Whenever a function is called, a new execution context is created and placed at the top of the stack. Once the function completes, its execution context is removed from the stack, and control returns to the previous context. This helps manage synchronous code execution, as each function call must complete before the next one can begin.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Call_stack"&gt;Call Stack — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gaurav.pandvia/understanding-javascript-function-executions-tasks-event-loop-call-stack-more-part-1-5683dea1f5ec"&gt;Understanding Javascript Call Stack, Event Loops — Gaurav Pandvia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-javascript-call-stack-861e41ae61d4"&gt;Understanding the JavaScript Call Stack — Charles Freeborn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@valentinog/javascript-what-is-the-execution-context-what-is-the-call-stack-bd23c78f10d1"&gt;Javascript: What Is The Execution Context? What Is The Call Stack? — Valentino Gagliardi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/jesstelford/9a35d20a2aa044df8bf241e00d7bc2d0"&gt;What is the JS Event Loop and Call Stack? — Jess Telford&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-execution-context-and-execution-stack-in-javascript-1c9ea8642dd0"&gt;Understanding Execution Context and Execution Stack in Javascript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bipinrajbhar/how-javascript-works-under-the-hood-an-overview-of-javascript-engine-heap-and-call-stack-1j5o"&gt;How JavaScript Works Under The Hood: An Overview of JavaScript Engine, Heap and, Call Stack — Bipin Rajbhar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call stack Explained in 9 minutes&lt;/a&gt; - Colt Steel (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w6QGEiQceOM"&gt;Javascript: the Call Stack explained — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W8AeMrVtFLY"&gt;The JS Call Stack Explained In 9 Minutes — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w7QWQlkLY_s"&gt;What is the Call Stack? — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Q2sFmqvpBe0"&gt;The Call Stack — Kevin Drumm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Z6a1cLyq7Ac&amp;amp;list=PLWrQZnG8l0E4kd1T_nyuVoxQUaYEWFgcD"&gt;Understanding JavaScript Execution — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=iLWTnMzWtj4&amp;amp;list=PLlasXeu85E9cQ32gLCvAvr9vNaUccPVNP"&gt;How JavaScript Code is executed? ❤️&amp;amp; Call Stack — Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aCPkszeKRa4"&gt;Call Stacks - CS50&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HXqXPGS96rw"&gt;Learn the JavaScript Call Stack - codecupdev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P6H-T4cUDR4"&gt;JavaScript Functions and the Call Stack | How does the Call stack work - Chidre'sTechTutorials&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;2. Primitive Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript has six primitive data types: string, number, bigint, boolean, undefined, and symbol. These types are immutable, meaning their values cannot be altered. There is also a special primitive type called null, which represents the intentional absence of any object value.&lt;/p&gt; 
&lt;p&gt;Primitive values are directly assigned to a variable, and when you manipulate a primitive type, you're working directly on the value. Unlike objects, primitives do not have properties or methods, but JavaScript automatically wraps primitive values with object counterparts when necessary (e.g., when calling methods on strings).&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/primitive-and-non-primitive-data-types-in-javascript"&gt;Primitive and Non-primitive data-types in JavaScript - GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2012/04/number-encoding.html"&gt;How numbers are encoded in JavaScript — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.chewxy.com/2014/02/24/what-every-javascript-developer-should-know-about-floating-point-numbers/"&gt;What Every JavaScript Developer Should Know About Floating Point Numbers — Chewxy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/"&gt;The Secret Life of JavaScript Primitives — Angus Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flow.org/en/docs/types/primitives/"&gt;Primitive Types — Flow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d4nyll/not-everything-in-javascript-is-an-object"&gt;(Not) Everything in JavaScript is an Object — Daniel Li&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Primitive_values"&gt;JavaScript data types and data structures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/diving-deeper-in-javascripts-objects-318b1e13dc12"&gt;Diving Deeper in JavaScripts Objects — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bolajiayodeji/the-differences-between-object-freeze-vs-const-in-javascript-4eacea534d7c"&gt;The differences between Object.freeze() vs Const in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/object-toprimitive"&gt;Object to primitive conversion — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/primitives-methods"&gt;Methods of primitives - Javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript Reference vs Primitive Types — Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HsbWQsSCE5Y"&gt;JavaScript Primitive Types — Simon Sez IT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qw3j0A3DIzQ"&gt;JavaScript Primitive Data Types — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MqHDDtVYJRI"&gt;Everything you never wanted to know about JavaScript numbers — Bartek Szopka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=B4Bbmei_thw"&gt;What are variables in Javascript? — JS For Everyone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cC65D2q5f8I"&gt;TIPOS DE DATOS PRIMITIVOS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aFDvBjVjCh8"&gt;Data Type in JavaScript - ScholarHat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;3. Value Types and Reference Types&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, value types are stored directly in the location that the variable accesses. These include types like number, string, boolean, undefined, bigint, symbol, and null. When you assign a value type to a variable, the value itself is stored.&lt;/p&gt; 
&lt;p&gt;Reference types, on the other hand, are objects stored in the heap. Variables assigned to reference types actually store references (pointers) to the objects, not the objects themselves. When you assign a reference type to another variable, both variables reference the same object in memory.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/explaining-value-vs-reference-in-javascript-647a975e12a0"&gt;Explaining Value vs. Reference in Javascript — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/branneman/7fb06d8a74d7e6d4cbcf75c50fec599c"&gt;Primitive Types &amp;amp; Reference Types in JavaScript — Bran van der Meer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@benastontweet/lesson-1b-javascript-fundamentals-380f601ba851"&gt;Value Types, Reference Types and Scope in JavaScript — Ben Aston&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/back-to-roots-javascript-value-vs-reference-8fb69d587a18"&gt;Back to roots: JavaScript Value vs Reference — Miro Koczka&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/grasp-by-value-and-by-reference-in-javascript-7ed75efa1293"&gt;Grasp "By Value" and "By Reference" in JavaScript — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-reference-and-copy-variables-b0103074fdf0"&gt;JavaScript Reference and Copy Variables — Vítor Capretz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascripttutorial.net/javascript-primitive-vs-reference-values/"&gt;JavaScript Primitive vs Reference Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6605640/javascript-by-reference-vs-by-value"&gt;JavaScript by Reference vs. by Value — nrabinowitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mostlyfocusedmike/javascript-interview-prep-primitive-vs-reference-types-3o4f"&gt;JavaScript Interview Prep: Primitive vs. Reference Types — Mike Cronin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/javascript-map-vs-foreach-when-to-use-each-one--cms-38365"&gt;JavaScript map vs. forEach: When to Use Each One - Sajal Soni&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=E-dAnFdq8k8"&gt;Javascript Pass by Value vs Pass by Reference — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fD0t_DKREbE"&gt;JavaScript Value vs Reference Types — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AvkyOrWkuQc"&gt;VALORES vs REFERENCIAS en JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9ooYYRLdg_g"&gt;JavaScript - Reference vs Primitive Values/ Types - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-_mDyqm2oU"&gt;Value Types and Reference Types in JavaScript - Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;4. Implicit, Explicit, Nominal, Structuring and Duck Typing&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification defines JavaScript as a dynamically typed language, meaning that types are associated with values rather than variables, and type checking occurs at runtime. There are various ways JavaScript manages types:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Implicit Typing (or Type Coercion):&lt;/strong&gt; This occurs when JavaScript automatically converts one data type to another when required. For instance, JavaScript might convert a string to a number during an arithmetic operation. While this can simplify some code, it can also lead to unexpected results if not handled carefully.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Explicit Typing:&lt;/strong&gt; Unlike implicit typing, explicit typing involves manually converting a value from one type to another using functions like Number(), String(), or Boolean().&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Nominal Typing:&lt;/strong&gt; JavaScript doesn't natively support nominal typing, where types are explicitly declared and checked. However, TypeScript, a superset of JavaScript, brings this feature to help catch type errors during development.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Structural Typing:&lt;/strong&gt; In this type system, types are based on the structure or properties of the data. JavaScript is a structurally typed language where objects are compatible if they share the same structure (i.e., the same set of properties and methods).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Duck Typing:&lt;/strong&gt; This is a concept where an object's suitability is determined by the presence of certain properties and methods, rather than by the actual type of the object. JavaScript relies heavily on duck typing, where behavior is inferred from an object's properties rather than its declared type.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/what-you-need-to-know-about-javascripts-implicit-coercion-e23"&gt;What you need to know about Javascript's Implicit Coercion — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/js-type-coercion-explained-27ba3d9a2839"&gt;JavaScript Type Coercion Explained — Alexey Samoshkin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-coercion-explained-545c895213d3"&gt;Javascript Coercion Explained — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/19915688/what-exactly-is-type-coercion-in-javascript"&gt;What exactly is Type Coercion in Javascript? - Stack Overflow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="30" height="30" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qGyqzN0bjhc&amp;amp;t"&gt;== ? === ??? ...#@^% - Shirmung Bielefeld&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=b04Q_vyqEG8"&gt;Coercion in Javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=z4-8wMSPJyI"&gt;JavaScript Questions: What is Coercion? - Steven Hancock&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5fr0LZLMAs"&gt;Typing: Static vs Dynamic, Weak vs. Strong - Codexpanse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ei4nb49GKo"&gt;EL SISTEMA de TIPOS DE JAVASCRIPT - La Cocina del Código&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oEpgyoMEkrM"&gt;Duck Typing in Javascript - Techmaker Studio&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/e4X1KAuk6Bs?si=krZKbsM2i3tmIl2G"&gt;Duck Typing in Javascript - Programming with Kartik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: Types &amp;amp; Grammar — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;5. == vs === vs typeof&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, JavaScript includes both strict (===) and loose (==) equality operators, which behave differently when comparing values. Here's a breakdown:&lt;/p&gt; 
&lt;p&gt;== (Loose Equality): This operator performs type coercion before comparing two values. If the values are of different types, JavaScript will attempt to convert one or both values to a common type before comparison, which can lead to unexpected results.&lt;/p&gt; 
&lt;p&gt;=== (Strict Equality): This operator compares both the value and the type without any type coercion. If the two values are not of the same type, the comparison will return false.&lt;/p&gt; 
&lt;p&gt;typeof Operator: The typeof operator is used to check the data type of a variable. While it's generally reliable, there are certain quirks, like how typeof null returns "object" instead of "null", due to a long-standing behavior in JavaScript's implementation.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-double-equals-vs-triple-equals-61d4ce5a121a"&gt;JavaScript Double Equals vs. Triple Equals — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bytearcher.com/articles/equality-comparison-operator-javascript/"&gt;Should I use === or == equality comparison operator in JavaScript? — Panu Pitkamaki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.impressivewebs.com/why-use-triple-equals-javascipt/"&gt;Why Use the Triple-Equals Operator in JavaScript? — Louis Lazaris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.oreilly.com/learning/what-is-the-difference-between-and-in-javascript"&gt;What is the difference between == and === in JavaScript? — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/3787901/why-javascripts-typeof-always-return-object"&gt;Why javascript's typeof always return "object"? — Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://tobyho.com/2011/01/28/checking-types-in-javascript/"&gt;Checking Types in Javascript — Toby Ho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://webbjocke.com/javascript-check-data-types/"&gt;How to better check data types in JavaScript — Webbjocke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tomeraberba.ch/html/post/checking-for-the-absence-of-a-value-in-javascript.html"&gt;Checking for the Absence of a Value in JavaScript — Tomer Aberbach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/difference-between-double-equals-and-triple-equals-in-javascript/"&gt;Difference Between == and === in Javascript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/difference-between-double-equal-vs-triple-equal-javascript/"&gt;Difference between == and === in JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-triple-equals-sign-vs-double-equals-sign-comparison-operators-explained-with-examples/"&gt;=== vs == Comparision in JavaScript — FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ol_su88I3kw"&gt;JavaScript - The typeof operator — Java Brains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qPYhTPt_SbQ"&gt;Javascript typeof operator — DevDelight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=C5ZVC4HHgIg"&gt;JavaScript "==" VS "===" — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=a0S1iG3TgP0"&gt;=== vs == in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=NSS5WRcv7yM"&gt;The typeof operator in JS - CodeVault&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;6. Function Scope, Block Scope and Lexical Scope&lt;/h2&gt; 
&lt;p&gt;The ECMAScript specification outlines three key types of scope:&lt;/p&gt; 
&lt;p&gt;Function Scope: Variables declared within a function using var are only accessible within that function. This scope isolates variables from being accessed outside of the function where they are declared.&lt;/p&gt; 
&lt;p&gt;Block Scope: Introduced with ES6, variables declared with let and const are block-scoped. This means they are only accessible within the specific block {} in which they are defined, such as inside loops or conditionals.&lt;/p&gt; 
&lt;p&gt;Lexical Scope: Refers to how variable access is determined based on the physical location of the variables in the code. Functions are lexically scoped, meaning that they can access variables from their parent scope.&lt;/p&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/2nd-ed/scope-closures"&gt;You Don't Know JS Yet, 2nd Edition: Scope &amp;amp; Closures — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-functions-understanding-the-basics-207dbf42ed99"&gt;JavaScript Functions — Understanding The Basics — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/var-let-and-const-whats-the-difference/"&gt;Var, Let, and Const – What's the Difference?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.scaler.com/topics/javascript/javascript-functions/"&gt;Functions in JavaScript - Deepa Pandey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/emulating-block-scope-in-javascript.html"&gt;Emulating Block Scope in JavaScript — Josh Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@josephcardillo/the-difference-between-function-and-block-scope-in-javascript-4296b2322abe"&gt;The Difference Between Function and Block Scope in JavaScript — Joseph Cardillo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://ryanmorr.com/understanding-scope-and-context-in-javascript/"&gt;Understanding Scope and Context in JavaScript — Ryan Morr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/javascript-scope-closures/"&gt;JavaScript Scope and Closures — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/topics/web-development/understanding-scope-in-javascript/"&gt;Understanding Scope in JavaScript — Wissam Abirached&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-scope-in-javascript"&gt;Understanding Scope in JavaScript ― Hammad Ahmed&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-to-use-a-function-declarations-vs-a-function-expression-70f15152a0a0"&gt;When to use a function declaration vs. a function expression ― Amber Wilkie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/alexandrafren/a-javascript-fundamentals-cheat-sheet-scope-context-and-this-28ai"&gt;A JavaScript Fundamentals Cheat Sheet: Scope, Context, and "this" ― Alexandra Fren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions#function_scope"&gt;Functions / Function scope ― MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SBwoFkRjZvE"&gt;What Makes Javascript Weird ... and Awesome pt. 4 — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dhp57T3p760"&gt;Variable Scope in JavaScript — Kirupa Chinnathambi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aK_nuUAdr8E"&gt;JavaScript Block Scope and Function Scope — mmtuts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhNA0r10MmA"&gt;What the Heck is Lexical Scope? — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FyWdrCZZavQ"&gt;Variable Scope — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=W6NZfCO5SIk"&gt;Javascript Tutorials for Beginners — Mosh Hemadani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IaTztAtoNEY"&gt;JavaScript Block scope vs Function scope - nivek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qT5S7GgIioE"&gt;Lexical scoping in javascript - Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zMseUdOR7z8"&gt;Modern Scope Handling in JavaScript (ES6 and Beyond) -Prashant Dewangan &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;7. Expression vs Statement&lt;/h2&gt; 
&lt;p&gt;According to the ECMAScript specification, expressions produce a value, and statements are instructions to perform an action, such as variable assignment or control flow. Function declarations are hoisted and can be called before they are defined in the code, while function expressions are not hoisted and must be defined before being invoked.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/promhize/javascript-in-depth-all-you-need-to-know-about-expressions-statements-and-expression-statements-5k2"&gt;All you need to know about Javascript's Expressions, Statements and Expression Statements — Promise Tochi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/function-expressions-vs-declarations/"&gt;Function Expressions vs Function Declarations — Paul Wilkins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@raviroshan.talk/javascript-function-declaration-vs-expression-f5873b8c7b38"&gt;JavaScript Function — Declaration vs Expression — Ravi Roshan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@mandeep1012/function-declarations-vs-function-expressions-b43646042052"&gt;Function Declarations vs. Function Expressions — Mandeep Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptweblog.wordpress.com/2010/07/06/function-declarations-vs-function-expressions/"&gt;Function Declarations vs. Function Expressions — Anguls Croll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Expression_statement"&gt;Expression statement — MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=WVyCrI1cHi8"&gt;Expressions vs. Statements in JavaScript — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3jDpNGJkupA"&gt;JavaScript - Expression vs. Statement — WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qz7Nq1tV7Io"&gt;Javascript Function Expression Vs Declaration For Beginners — Dev Material&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eWTuFoBYiwg"&gt;The difference between an expression and a statement in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cVDs3TZ-kXs"&gt;Expression in javascript | Statement in javascript - Sathelli Srikanth&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;8. IIFE, Modules and Namespaces&lt;/h2&gt; 
&lt;p&gt;With the introduction of ES6 modules, the role of IIFEs in scope isolation has diminished but they still remain relevant.&lt;/p&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/IIFE"&gt;IIFE — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/modularity"&gt;Modularity — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/Namespace"&gt;Namespace — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@vvkchandra/essential-javascript-mastering-immediately-invoked-function-expressions-67791338ddc6"&gt;Mastering Immediately-Invoked Function Expressions ― Chandra Gundamaraju&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-immediately-invoked-function-expression-iife/"&gt;JavaScript Immediately Invoked Function Expression — javascripttutorial.net&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.jvandemo.com/a-10-minute-primer-to-javascript-modules-module-formats-module-loaders-and-module-bundlers/"&gt;A 10 minute primer to JavaScript modules, module formats, module loaders and module bundlers ― Jurgen Van de Moere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_modules.html"&gt;Modules ― Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/understanding-es6-modules/"&gt;Understanding ES6 Modules — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloud66.com/an-overview-of-es6-modules-in-javascript/"&gt;An overview of ES6 Modules in JavaScript — Brent Graham&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-modules-in-depth"&gt;ES6 Modules in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/es6-modules-node-js-and-the-michael-jackson-solution-828dc244b8b"&gt;ES6 modules, Node.js and the Michael Jackson Solution — Alberto Gimeno&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-modules-a-beginner-s-guide-783f7d7a5fcc"&gt;JavaScript Modules: A Beginner's Guide — Preethi Kasireddy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/primers/modules"&gt;Using JavaScript modules on the web — Addy Osmani &amp;amp; Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bhagatparwinder/iife-immediately-invoked-function-expressions-49c5"&gt;IIFE: Immediately Invoked Function Expressions — Parwinder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://sassy-butter-197.notion.site/Javascript-bundlers-016932b17b0744e983c2cc0db31e6f02"&gt;Javascript Module Bundlers — Vanshu Hassija&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3cbiZV4H22c"&gt;Immediately Invoked Function Expression - Beau teaches JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=I5EntfMeIIQ"&gt;Understanding JavaScript IIFE — Sheo Narayan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_3oSWwapPKQ"&gt;JavaScript Modules: ES6 Import and Export — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aQr2bV1BPyE"&gt;ES6 - Modules — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fIP4pjAqCtQ"&gt;ES6 Modules in the Real World — Sam Thorogood&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5P04OK6KlXA"&gt;ES6 Modules — TempleCoding&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Xd7zgPFwVX8&amp;amp;"&gt;JavaScript IIFE (Immediately Invoked Function Expressions) — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;9. Message Queue and Event Loop&lt;/h2&gt; 
&lt;p&gt;The Event Loop is a critical part of JavaScript's concurrency model, ensuring non-blocking behavior by processing tasks in an asynchronous manner. Understanding how it interacts with the Message Queue and Microtasks is key to mastering JavaScript behavior.&lt;/p&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-event-loop-explained-4cd26af121d4"&gt;JavaScript Event Loop Explained — Anoop Raveendran&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-js-the-event-loop-959beae3ac40"&gt;Understanding JS: The Event Loop — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-event-loop/"&gt;The JavaScript Event Loop — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/"&gt;Tasks, microtasks, queues and schedules — Jake Archibald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/presto412/visualising-the-javascript-event-loop-with-a-pizza-restaurant-analogy-47a8"&gt;Visualising the JavaScript Event Loop with a Pizza Restaurant analogy — Priyansh Jain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-event-loop-3dif"&gt;JavaScript Visualized: Event Loop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-zone/understanding-and-optimizing-javascripts-event-loop-717ae0095038#:~:text=The%20event%20loop%20is%20the,%2Dblocking%20I%2FO%20operations."&gt;Understanding and Optimizing JavaScript's Event Loop — Xiuer Old&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8aGhZQkoFbQ"&gt;What the heck is the event loop anyway? | JSConf EU — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XzXIMZMN9k4"&gt;JavaScript Event Loop — ComScience Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6MXRNXXgP_0"&gt;I'm stuck in an Event Loop — Philip Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cCOL7MC4Pl0"&gt;In The Loop - Jake Archibald | JSConf.Asia 2018&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Eqq2Rb7LzYE"&gt;Desmitificando el Event Loop (Spanish)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;Callbacks, Sincrono, Assíncrono e Event Loop (PT-BR)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6lbBaM18X3g"&gt;JavaScript Event Loop: How it Works and Why it Matters in 5 Minutes - James Q Quick&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;10. setTimeout, setInterval and requestAnimationFrame&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/settimeout-setinterval"&gt;setTimeout and setInterval — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/akanksha_9560/why-not-to-use-setinterval--2na9"&gt;Why not to use setInterval — Akanksha Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://develoger.com/settimeout-vs-setinterval-cff85142555b"&gt;setTimeout VS setInterval — Develoger&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/using-requestanimationframe/"&gt;Using requestAnimationFrame — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.javascriptkit.com/javatutors/requestanimationframe.shtml"&gt;Understanding JavaScript's requestAnimationFrame() — JavaScript Kit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amitmerchant.com/Handling-Time-Intervals-In-Javascript/"&gt;Handling time intervals in JavaScript - Amit Merchant&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-debounce-example/"&gt;Debounce – How to Delay a Function in JavaScript - Ondrej Polesny&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6bPKyl8WYWI"&gt;Javascript: How setTimeout and setInterval works — Coding Blocks India&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nqsPmuicJJc?si=4FXKlZfqiJUqO2Y4"&gt;TRUST ISSUES with setTimeout() — Akshay Saini &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TbCgGWe8LN8"&gt;setTimeout and setInterval in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0VVJSvlUgtg"&gt;JavaScript Timers — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mVKfrWCOB60"&gt;JavaScript setTimeOut and setInterval Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;11. JavaScript Engines&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://www.softwaremag.com/javascript-engines/"&gt;JavaScript Engines — Jen Looper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-the-core-of-nodejs-the-powerful-chrome-v8-engine-79e7eb8af964"&gt;Understanding How the Chrome V8 Engine Translates JavaScript into Machine Code — DroidHead&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/understanding-v8s-bytecode-317d46c94775"&gt;Understanding V8's Bytecode — Franziska Hinkelmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-essentials-why-you-should-know-how-the-engine-works-c2cc0d321553"&gt;JavaScript essentials: why you should know how the engine works - Rainer Hahnekamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/shapes-ics"&gt;JavaScript engine fundamentals: Shapes and Inline Caches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v8.dev/blog/elements-kinds"&gt;How V8 optimizes array operations&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/javascript-internals-javascript-engine-run-time-environment-settimeout-web-api-eeed263b1617"&gt;JavaScript Internals: JavaScript engine, Run-time environment &amp;amp; setTimeout Web API — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5nmpokoRaZI"&gt;JavaScript Engines: The Good Parts™ — Mathias Bynens &amp;amp; Benedikt Meurer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WJL19wDH68"&gt;JS Engine EXPOSED 🔥 Google's V8 Architecture 🚀 | Namaste JavaScript Ep. 16 - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/iLWTnMzWtj4"&gt;How JavaScript Code is executed? How Javascript works behind the scenes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xckH5s3UuX4"&gt;Understanding the V8 JavaScript Engine - freeCodeCamp Talks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oc6faXVc54E"&gt;JavaScript Under The Hood - JavaScript Engine Overview - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QyUFheng6J0"&gt;Arindam Paul - JavaScript VM internals, EventLoop, Async and ScopeChains&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;12. Bitwise Operators, Type Arrays and Array Buffers&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-bitwise-operations-393eb0745dc4"&gt;Programming with JS: Bitwise Operations — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/using-javascript-bitwise-operators-in-real-life-f551a731ff5"&gt;Using JavaScript's Bitwise Operators in Real Life — ian m&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3resource.com/javascript/operators/bitwise-operator.php"&gt;JavaScript Bitwise Operators — w3resource&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/bother7-blog/bitwise-operators-in-javascript-65c4c69be0d3"&gt;Bitwise Operators in Javascript — Joe Cha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/techtrument/a-comprehensive-primer-on-binary-computation-and-bitwise-operators-in-javascript-81acf8341f04"&gt;A Comprehensive Primer on Binary Computation and Bitwise Operators in javascript — Paul Brown&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.quora.com/How-can-I-understand-Bitwise-operation-in-JavaScript"&gt;How can I understand Bitwise operation in JavaScript?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mesu75PTDC8"&gt;JavaScript Bitwise Operators — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=igIjGxF2J-w"&gt;Bitwise Operators and WHY we use them — Alex Hyett&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RRyxCmLX_ag"&gt;JS Bitwise Operators and Binary Numbers — Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ScZZoHj7mqY"&gt;Deep Dive into Blobs, Files, and ArrayBuffers — Steve Griffith - Prof3ssorSt3v3&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;13. DOM and Layout Trees&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model"&gt;Document Object Model (DOM) — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/14_dom.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 14 - The Document Object Model&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/introduction-to-the-dom"&gt;How To Understand and Modify the DOM in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/whats-the-document-object-model-and-why-you-should-know-how-to-use-it-1a2d0bc5429d"&gt;What's the Document Object Model, and why you should know how to use it — Leonardo Maldonado&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.guru99.com/how-to-use-dom-and-events-in-javascript.html"&gt;JavaScript DOM Tutorial with Example — Guru99&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/dom/"&gt;What is the DOM? — Chris Coyier&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://zellwk.com/blog/dom-traversals/"&gt;Traversing the DOM with JavaScript — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/dom-nodes"&gt;DOM Tree&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/how-to-traverse-the-dom-in-javascript-d6555c335b4e"&gt;How to traverse the DOM in Javascript — Vojislav Grujić&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction"&gt;Render Tree Construction — Ilya Grigorik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitsofco.de/what-exactly-is-the-dom/"&gt;What exactly is the DOM?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.javascripttutorial.net/javascript-dom/"&gt;JavaScript DOM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Pr4LLrmDLLo"&gt;Traversing the Dom with Javascript&lt;/a&gt; - Steve Griffith (YouTube)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FIORjGvT0kk"&gt;JavaScript DOM — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0ik6X4DJKCc"&gt;JavaScript DOM Crash Course — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=y17RuWkWdn8"&gt;JavaScript DOM Manipulation Methods — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=v7rSSy8CaYE"&gt;JavaScript DOM Traversal Methods — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;14. Factories and Classes&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-classes-in-javascript"&gt;How To Use Classes in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/tech-tajawal/javascript-classes-under-the-hood-6b26d2667677"&gt;Javascript Classes — Under The Hood — Majid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/better-javascript-with-es6-pt-ii-a-deep-dive-into-classes"&gt;Better JavaScript with ES6, Pt. II: A Deep Dive into Classes ― Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/understand-the-factory-design-pattern-in-plain-javascript-20b348c832bd"&gt;Understand the Factory Design Pattern in Plain JavaScript — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://atendesigngroup.com/blog/factory-functions-javascript"&gt;Factory Functions in JavaScript — Josh Miller&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@SntsDev/the-factory-pattern-in-js-es6-78f0afad17e9"&gt;The Factory Pattern in JS ES6 — SnstsDev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/class-vs-factory-function-exploring-the-way-forward-73258b6a8d15"&gt;Class vs Factory function: exploring the way forward — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@robertgrosse/how-es6-classes-really-work-and-how-to-build-your-own-fd6085eb326a"&gt;How ES6 classes really work and how to build your own — Robert Grosse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jordankasper.com/understanding-super-in-javascript"&gt;Understanding &lt;code&gt;super&lt;/code&gt; in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/an-easy-guide-to-understanding-classes-in-javascript-3bcm"&gt;An Easy Guide To Understanding Classes In JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jpegXpQpb3o"&gt;JavaScript Factory Functions — Programming with Mosh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ImwrezYhw4w"&gt;Factory Functions in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=R7-IwpH80UE"&gt;Javascript Tutorial Function Factories — Crypto Chan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;15. this, call, apply and bind&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/call"&gt;call() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Function/bind"&gt;bind() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/apply"&gt;apply() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/grokking-call-apply-and-bind-methods-in-javascript-392351a4be8b"&gt;Grokking call(), apply() and bind() methods in JavaScript — Aniket Kudale&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/javascript-apply-call-and-bind-methods-are-essential-for-javascript-professionals/"&gt;JavaScript's Apply, Call, and Bind Methods are Essential for JavaScript Professionals — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@omergoldberg/javascript-call-apply-and-bind-e5c27301f7bb"&gt;Javascript: call(), apply() and bind() — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@ivansifrim/the-differences-between-call-apply-bind-276724bb825b"&gt;The difference between call / apply / bind — Ivan Sifrim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-call-apply-bind-in-javascript-11ce"&gt;What the hack is call, apply, bind in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/mastering-javascript-callbacks-bind-apply-call/"&gt;Mastering 'this' in JavaScript: Callbacks and bind(), apply(), call() — Michelle Gienow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kbk0125/javascripts-apply-call-and-bind-explained-by-hosting-a-cookout-32jo"&gt;JavaScript's apply, call, and bind explained by hosting a cookout — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.eigenx.com/blog/https/mediumcom/eigen-x/how-and-when-to-use-bind-call-and-apply-in-javascript-77b6f42898fb"&gt;How AND When to use bind, call, and apply in Javascript — Eigen X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ycmjason/let-me-explain-to-you-what-is-this-javascript-44ja"&gt;Let me explain to you what is &lt;code&gt;this&lt;/code&gt;. (Javascript) — Jason Yu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/quick-code/understanding-the-this-keyword-in-javascript-cb76d4c7c5e8"&gt;Understanding the "this" Keyword in JavaScript — Pavan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-understand-the-keyword-this-and-context-in-javascript-cd624c6b74b8"&gt;How to understand the keyword this and context in JavaScript — Lukas Gisder-Dubé&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/what-the-heck-is-this-in-javascript-37n1"&gt;What the heck is this in Javascript? — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/this-and-bind-in-javascript-2pam"&gt;This and Bind In Javascript — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/canderson93/3-techniques-for-maintaining-your-sanity-using-this-in-javascript-3idf"&gt;3 Techniques for Maintaining Your Sanity Using "This" in JavaScript — Carl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/aakashsr/mastering-the-javascript-this-keyword-4pfa"&gt;Mastering the JavaScript "this" Keyword — Aakash Srivastav&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sargalias/this-binding-in-javascript-4-new-binding-2p1n"&gt;This binding in JavaScript – 4. New binding — Spyros Argalias&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/thatgalnatalie/a-quick-intro-to-this-in-javascript-2mhp"&gt;A quick intro to 'this' in JavaScript — Natalie Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/developerkaren/a-conversation-with-the-this-keyword-in-javascript-3j6g"&gt;A conversation with the 'this' keyword in Javascript — Karen Efereyan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jscurious.com/what-are-call-apply-and-bind-in-javascript/"&gt;What are call(), apply() and bind() in JavaScript — Amitav Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yasemincidem.medium.com/understanding-this-binding-in-javascript-86687397c76d"&gt;Understanding 'this' binding in JavaScript — Yasemin Cidem&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dmitripavlutin.com/javascript-this-interview-questions/"&gt;Top 7 tricky questions of 'this' keyword&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=c0mLRpw-9rI"&gt;JavaScript call, apply and bind — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AYVYxezrMWA"&gt;JavaScript Practical Applications of Call, Apply and Bind functions— techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uy0NOXLBraE"&gt;JavaScript (call, bind, apply) — curious aatma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AOSYY1_np_4"&gt;Understanding Functions and 'this' In The World of ES2017 — Bryan Hughes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GhbhD1HR5vk"&gt;bind and this - Object Creation in JavaScript - FunFunFunction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uBdH0iB1VDM"&gt;JS Function Methods call(), apply(), and bind() — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;.[Javascript Interview Questions ( Call, Bind and Apply ) - Polyfills, Output Based, Explicit Binding - Roadside Coder] (&lt;a href="https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS"&gt;https://youtu.be/VkmUOktYDAU?si=SdvLZ8FBmephPxjS&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;16. new, Constructor, instanceof and Instances&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-for-beginners-the-new-operator-cee35beb669e"&gt;JavaScript For Beginners: the 'new' operator — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/demystifying-javascripts-new-keyword-874df126184c"&gt;Let's demystify JavaScript's 'new' keyword — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/constructor-new"&gt;Constructor, operator "new" — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://css-tricks.com/understanding-javascript-constructors/"&gt;Understanding JavaScript Constructors — Faraz Kelhini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://openclassrooms.com/en/courses/3523231-learn-to-code-with-javascript/4379006-use-constructor-functions"&gt;Use Constructor Functions — Openclassrooms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://2ality.com/2017/08/type-right.html"&gt;Beyond &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt;: simplifying dynamic type checks — Dr. Axel Rauschmayer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptrefined.io/function-and-object-instances-of-each-other-1e1095d5faac"&gt;Function and Object, instances of each other — Kiro Risk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flexiple.com/javascript/instanceof-javascript"&gt;JavaScript instanceof operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;17. Prototype Inheritance and Prototype Chain&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Inheritance_and_the_prototype_chain"&gt;Inheritance and the prototype chain — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@parsyval/javascript-prototype-vs-class-a7015d5473b"&gt;Javascript : Prototype vs Class — Valentin PARSY&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/prototypes"&gt;JavaScript engine fundamentals: optimizing prototypes — Mathias Bynens&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-prototype-cb29d82b8809"&gt;JavaScript Prototype — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/prototypes-in-javascript-5bba2990e04b"&gt;Prototypes in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/prototype-in-js-busted-5547ec68872"&gt;Prototype in JavaScript: it's quirky, but here's how it works — Pranav Jindal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-prototype-and-inheritance-d55a9a23bde2"&gt;Understanding JavaScript: Prototype and Inheritance — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/_hridaysharma/understanding-classes-es5-and-prototypal-inheritance-in-javascript-n8d"&gt;Understanding Classes (ES5) and Prototypal Inheritance in JavaScript — Hridayesh Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varundey/prototype-proto-and-prototypal-inheritance-in-javascript-2inl"&gt;prototype, &lt;strong&gt;proto&lt;/strong&gt; and Prototypal inheritance in JavaScript — Varun Dey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/prototype-inheritance"&gt;Prototypal Inheritance — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-prototypes-and-inheritance-in-javascript"&gt;How To Work with Prototypes and Inheritance in JavaScript — Tania Rascia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/master-javascript-prototypes-inheritance-d0a9a5a75c4e"&gt;Master JavaScript Prototypes &amp;amp; Inheritance — Arnav Aggarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/understanding-prototypal-inheritance-in-javascript-with-css-93b2fcda75e4"&gt;JavaScript's Prototypal Inheritance Explained Using CSS — Nash Vail&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/derhuerst/a585c4916b1c361cc6f0"&gt;Prototypal Inheritance in JavaScript — Jannis Redmann&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/demystifying-es6-classes-and-prototypal-inheritance"&gt;Demystifying ES6 Classes And Prototypal Inheritance ― Neo Ighodaro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/danny/intro-to-prototypal-inheritance---js-9di"&gt;Intro To Prototypal Inheritance — Dharani Jayakanthan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/varche/let-s-build-prototypal-inheritance-in-js-56mm"&gt;Let's Build Prototypal Inheritance in JS — var-che&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/attacomsian/objects-prototypes-and-classes-in-javascript-3i9b"&gt;Objects, Prototypes and Classes in JavaScript — Atta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ladybenko/the-magical-world-of-javascript-prototypes-1mhg"&gt;The magical world of JavaScript prototypes — Belén&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lawrence_eagles/understanding-prototypal-inheritance-in-javascript-4f31#chp-4"&gt;Understanding Prototypal Inheritance In JavaScript — Lawrence Eagles&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/irenejpopova/objects-and-prototypes-in-javascript-2eie"&gt;Objects and Prototypes in JavaScript — Irena Popova&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=sOrtAjyk4lQ"&gt;Javascript Prototype Inheritance — Avelx&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7oNWNlMrkpc"&gt;JavaScript Prototype Inheritance Explained pt. I — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uIlj6_z_wL8"&gt;JavaScript Prototype Inheritance Explained pt. II — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qMO-LTOrJaE"&gt;JavaScript Prototype Inheritance Explained — Kyle Robinson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G6l5CHl67HQ"&gt;Advanced Javascript - Prototypal Inheritance In 1 Minute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=phwzuiJJPpQ"&gt;An Overview Of Classical Javascript Classes and Prototypal Inheritance — Pentacode&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4jb4AYEyhRc"&gt;Object Oriented JavaScript - Prototype — The Net Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2rkEbcptR64"&gt;Prototype in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=oCwCcNvaXAQ"&gt;JavaScript Using Prototypes — O'Reilly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XskMWBXNbp0"&gt;A Beginner's Guide to Javascript's Prototype — Tyler Mcginnis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hS_WqkyUah8"&gt;Prototypes in Javascript - p5.js Tutorial — The Coding Train&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/You-Dont-Know-JS/tree/1st-ed"&gt;You Don't Know JS, 1st Edition: this &amp;amp; Object Prototypes — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.google.com.pk/books/edition/The_Principles_of_Object_Oriented_JavaSc/rorlAwAAQBAJ?hl=en&amp;amp;gbpv=1&amp;amp;pg=PP1&amp;amp;printsec=frontcover"&gt;The Principles of Object-Oriented JavaScript - Nicholas C. Zakas&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;18. Object.create and Object.assign&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create"&gt;Object.create() — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign"&gt;Object.assign() — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@happymishra66/object-create-in-javascript-fa8674df6ed2"&gt;Object.create in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.htmlgoodies.com/beyond/javascript/object.create-the-new-way-to-create-objects-in-javascript.html"&gt;Object.create(): the New Way to Create Objects in JavaScript — Rob Gravelle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://adripofjavascript.com/blog/drips/basic-inheritance-with-object-create.html"&gt;Basic Inheritance with Object.create — Joshua Clanton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.geeksforgeeks.org/object-create-javascript/"&gt;Object.create() In JavaScript — GeeksforGeeks&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jonathanvox01/understanding-the-difference-between-object-create-and-the-new-operator-b2a2f4749358"&gt;Understanding the difference between Object.create() and the new operator — Jonathan Voxland&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/javascript-object-creation-patterns-best-practises/"&gt;JavaScript Object Creation: Patterns and Best Practices — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/js-dealing-with-objects"&gt;Dealing With Objects in JavaScript With Object.assign, Object.keys and hasOwnProperty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/copying-objects-in-javascript"&gt;Copying Objects in JavaScript ― Orinami Olatunji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-object-assign-bc9696dcbb6e"&gt;JavaScript: Object.assign() — Thiago S. Adriano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/how-to-clone-javascript-object/"&gt;How to deep clone a JavaScript Object — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/vzing/object-create-when-and-why-to-use-20m9"&gt;Object.create(): When and Why to Use — VZing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aw7NfYhR5rc"&gt;Object.assign() explained — Aaron Writes Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9Ky4X6inpi4"&gt;Object.assign() Method — techsith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;19. map, reduce, filter&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/jsguru/javascript-functional-programming-map-filter-and-reduce-846ff9ba492d"&gt;JavaScript Functional Programming — map, filter and reduce — Bojan Gvozderac&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@joomiguelcunha/learn-map-filter-and-reduce-in-javascript-ea59009593c4"&gt;Learn map, filter and reduce in Javascript — João Miguel Cunha&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://danmartensen.svbtle.com/javascripts-map-reduce-and-filter"&gt;JavaScript's Map, Reduce, and Filter — Dan Martensen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.tutsplus.com/tutorials/how-to-use-map-filter-reduce-in-javascript--cms-26209"&gt;How to Use Map, Filter, &amp;amp; Reduce in JavaScript — Peleke Sengstacke&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-to-chain-map-filter-and-reduce-acd2d0562cd4"&gt;JavaScript — Learn to Chain Map, Filter, and Reduce — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/write-beautiful-javascript-with-%CE%BB-fp-es6-350cd64ab5bf"&gt;Javascript data structure with map, reduce, filter and ES6 — Deepak Gupta&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-map-filter-and-reduce-in-javascript-5df1c7eee464"&gt;Understanding map, filter and reduce in Javascript — Luuk Gruijs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-in-js-map-filter-reduce-pt-5-308a205fdd5f"&gt;Functional Programming in JS: map, filter, reduce (Pt. 5) — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/functional-javascript-map-filter-reduce/"&gt;JavaScript: Map, Filter, Reduce — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-arrow-functions-new-fat-concise-syntax-javascript/"&gt;Arrow Functions: Fat and Concise Syntax in JavaScript — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-arrow-functions-for-beginners-926947fc0cdc"&gt;JavaScript: Arrow Functions for Beginners — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/when-and-why-you-should-use-es6-arrow-functions-and-when-you-shouldnt-3d851d7f0b26"&gt;When (and why) you should use ES6 arrow functions — and when you shouldn't — Cynthia Lee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-learn-understand-arrow-functions-fe2083533946"&gt;JavaScript — Learn &amp;amp; Understand Arrow Functions — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/podiihq/javascript-arrow-functions-27d4c3334b83"&gt;(JavaScript )=&amp;gt; Arrow functions — sigu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@panderson.dev/javascript-reduce-79aab078da23"&gt;Javascript.reduce() — Paul Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gofore.com/en/why-you-should-replace-foreach/"&gt;Why you should replace forEach with map and filter in JavaScript — Roope Hakulinen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d"&gt;Simplify your JavaScript – Use .map(), .reduce(), and .filter() — Etienne Talbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/07/24/javascripts-reduce-method-explained-by-going-on-a-diet/"&gt;JavaScript's Reduce Method Explained By Going On a Diet — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@amiratak88/difference-between-map-filter-and-reduce-in-javascript-822ff79d5160"&gt;Difference between map, filter and reduce in JavaScript — Amirata Khodaparast&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/map-filter-reduce-ebbed4be4201"&gt;Map⇄Filter⇄Reduce↻ — ashay mandwarya&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/finding-your-way-with-map-aecb8ca038f6"&gt;Finding Your Way With .map() — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-your-own-map-filter-and-reduce-functions-in-javascript-ab1e35679d26"&gt;How to write your own map, filter and reduce functions in JavaScript — Hemand Nair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/manipulating-arrays-in-javascript/"&gt;How to Manipulate Arrays in JavaScript — Bolaji Ayodeji&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/15-useful-javascript-examples-of-map-reduce-and-filter-74cbbb5e0a1f"&gt;How to simplify your codebase with map(), reduce(), and filter() in JavaScript — Alex Permyakov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/pickleat/map-filter-and-reduce-2efb"&gt;.map(), .filter(), and .reduce() — Andy Pickle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/chrisachard/map-filter-reduce-crash-course-5gan"&gt;Map/Filter/Reduce Crash Course — Chris Achard&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@js_tut/map-filter-and-reduce-animated-7fe391a35a47"&gt;Map, Filter and Reduce – Animated — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/uptheirons78/map-filter-reduce-and-others-arrays-iterators-you-must-know-to-become-an-algorithms-wizard-4209"&gt;Map, Filter, Reduce and others Arrays Iterators You Must Know to Become an Algorithms Wizard — Mauro Bono&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/how-to-javascripts-map-vs-filter-vs-reduce-80d87a5a0a24"&gt;How to Use JavaScript's .map, .filter, and .reduce — Avery Duffin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/using-map-filter-and-reduce-properly-50e07f80c8b2"&gt;Using .map(), .filter() and .reduce() properly — Sasanka Kudagoda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sanderdebr/mastering-the-javascript-reduce-method-2foj"&gt;Mastering the JavaScript Reduce method ✂️ — sanderdebr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-map-how-to-use-the-js-map-function-array-method/"&gt;JavaScript Map – How to Use the JS .map() Function (Array Method) — FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UXiYii0Y7Nw"&gt;Map, Filter and Reduce — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/zdp0zrpKzIE?si=6QusFzD6tmwn-el4"&gt;Map, Filter and Reduce - Akshaay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vytzLlY_wmU"&gt;Functional JavaScript: Map, forEach, Reduce, Filter — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qTeeVd8hOFY"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part I) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=gIm9xLYudL0"&gt;JavaScript Array superpowers: Map, Filter, Reduce (part 2) — Michael Rosata&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zYBeEPxNSbw"&gt;JavaScript Higher Order Functions - Filter, Map, Sort &amp;amp; Reduce — Epicop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4qWlqD0yYTU"&gt;[Array Methods 2/3] .filter + .map + .reduce — CodeWithNick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6sQDTgOqh-I"&gt;Arrow functions in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=e-5obm1G_FY&amp;amp;t=1521s"&gt;Learning Functional Programming with JavaScript — Anjana Vakil - JSUnconf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=bCqtb-Z5YGQ&amp;amp;t=17s"&gt;Map - Parte 2 JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl98eZpkp-c"&gt;Reduce basics - Part 3 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1DMolJ2FrNY&amp;amp;t=621s"&gt;Reduce Advanced - Part 4 of FP in JavaScript - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=IXp06KekEjM"&gt;reduce Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=P4RAFdZDn3M"&gt;map Array Method | JavaScript Tutorial - Florin Pop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Ah7-PPjQ5Ls"&gt;Different array methods in 1 minute | Midudev (Spanish)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;20. Pure Functions, Side Effects, State Mutation and Event Propagation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-and-functional-programming-pt-3-pure-functions-d572bb52e21c"&gt;Javascript and Functional Programming — Pure Functions — Omer Goldberg&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-pure-function-d1c076bec976"&gt;Master the JavaScript Interview: What is a Pure Function? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@jamesjefferyuk/javascript-what-are-pure-functions-4d4d5392d49c"&gt;JavaScript: What Are Pure Functions And Why Use Them? — James Jeffery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.nicoespeon.com/en/2015/01/pure-functions-javascript/"&gt;Pure functions in JavaScript — @nicoespeon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/functional-programming-pure-functions/"&gt;Functional Programming: Pure Functions — Arne Brasseur&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://alistapart.com/article/making-your-javascript-pure"&gt;Making your JavaScript Pure — Jack Franklin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@fknussel/arrays-objects-and-mutations-6b23348b54aa"&gt;Arrays, Objects and Mutations — Federico Knüssel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/the-state-of-immutability-169d2cd11310"&gt;The State of Immutability — Maciej Sikora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/hablemos-de-inmutabilidad-3dc65d290783"&gt;Hablemos de Inmutabilidad — Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2018/how-to-deal-with-dirty-side-effects-in-your-pure-functional-javascript/"&gt;How to deal with dirty side effects in your pure functional JavaScript — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/preventing-sideeffects-javascript"&gt;Preventing Side Effects in JavaScript — David Walsh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://wsvincent.com/javascript-pure-functions/"&gt;JavaScript: Pure Functions — William S. Vincent&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/functional-programming-paradigms-in-modern-javascript-pure-functions-797d9abbee1"&gt;Functional programming paradigms in modern JavaScript: Pure functions — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-javascript-mutation-and-pure-functions-7231cc2180d3"&gt;Understanding Javascript Mutation and Pure Functions — Chidume Nnamdi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bluepnume/functional-ish-javascript-205c05d0ed08"&gt;Functional-ish JavaScript — Daniel Brain&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events"&gt;Event Propagation — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/bubbling-and-capturing"&gt;Event Propagation — Bubbling and capturing&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dZ41D6LDSBg"&gt;Pure Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Jh_Uzqzz_wM"&gt;Pure Functions - Functional Programming in JavaScript — Paul McBride&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=frT3H-eBmPc"&gt;JavaScript Pure Functions — Seth Alexander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=AHbRVJzpB54"&gt;JavaScript Pure vs Impure Functions Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Pure Functions - Programação Funcional: Parte 1 - Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JYc7gr9Ehl0"&gt;Event Propagation - JavaScript Event Bubbling and Propagation - Steve Griffith&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;21. Closures&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures"&gt;Closures — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/closure"&gt;Closure — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/i-never-understood-javascript-closures-9663703368e8"&gt;I never understood JavaScript closures — Olivier De Meulder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://javascriptissexy.com/understand-javascript-closures-with-ease/"&gt;Understand JavaScript Closures With Ease — Richard Bovell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-javascript-closures-da6aab330302"&gt;Understanding JavaScript Closures — Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understand-closures-in-javascript-d07852fa51e7"&gt;Understand Closures in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-closures-simplified-d0d23fa06ba4"&gt;A simple guide to help you understand closures in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/understanding-javascript-closures-a-practical-approach"&gt;Understanding JavaScript Closures: A Practical Approach — Paul Upendo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-javascript-closures-4188edf5ea1b"&gt;Understanding JavaScript: Closures — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/how-to-use-javascript-closures-with-confidence-85cd1f841a6b"&gt;How to use JavaScript closures with confidence — Léna Faure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://howchoo.com/g/mge2mji2mtq/javascript-closures-by-example"&gt;JavaScript closures by example — tyler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-closures-and-scope-3784c75b9290"&gt;JavaScript — Closures and Scope — Alex Aitken&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/discover-the-power-of-closures-in-javascript-5c472a7765d7"&gt;Discover the power of closures in JavaScript — Cristi Salcescu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://reallifejs.com/the-meat/getting-closure/"&gt;Getting Closure — RealLifeJS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ritik_dev_js/what-the-hack-is-closure-currying-and-iife-in-javascript-32m9"&gt;Closure, Currying and IIFE in JavaScript — Ritik&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/a-beginners-guide-to-closures-in-javascript-97d372284dda"&gt;Understanding Closures in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-basic-guide-to-closures-in-javascript-9fc8b7e3463e"&gt;A basic guide to Closures in JavaScript — Parathan Thiyagalingam&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/steelvoltage/closures-using-memoization-3597"&gt;Closures: Using Memoization — Brian Barbour&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/a-brief-introduction-to-closures-and-lexical-scoping-in-javascript-8a5866496232"&gt;A Brief Introduction to Closures and Lexical Scoping in JavaScript — Ashutosh K Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/stereobooster/demystify-closures-5g42"&gt;Demystify Closures — stereobooster&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/scopes-and-closures-javascript-concepts-4dfj"&gt;Scopes and Closures - JavaScript Concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mattpopovich/understanding-closures-in-javascript-3k0d"&gt;Understanding Closures in JavaScript — Matt Popovich&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://whatthefuck.is/closure"&gt;whatthefuck.is · A Closure - Dan Abramov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/brandonleboeuf/closure-in-javascript-49n7"&gt;Closures in JavaScript can... - Brandon LeBoeuf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/this_mkhy/do-you-know-es6-part-3-advanced-3fcl#Closures-2"&gt;Do you know Closures - Mohamed Khaled&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XTAzsODSCsM"&gt;JavaScript The Hard Parts: Closure, Scope &amp;amp; Execution Context - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/qikxEIxsXco?si=fGFgUHuaOW49Wg9p"&gt;Namaste Javascript by Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=71AtaJpJHw0"&gt;Javascript Closure — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CQqwU2Ixu-U"&gt;Closures — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-xqJo5VRP4A"&gt;Closures in JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yiEeiMN2Khs"&gt;JavaScript Closures 101: What is a closure? — JavaScript Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1JsJx1x35c0"&gt;Closures — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-rLrGAXK8WE"&gt;JavaScript Closures — CodeWorkr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qikxEIxsXco"&gt;Closures in JS - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/xa8lhVwQBw4"&gt;CLOSURES en JavaScript: Qué son y cómo funcionan - Carlos Azaustre&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3a0I8ICR1Vg"&gt;Learn Closures In 7 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;22. High Order Functions&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/05_higher_order.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 5 - Higher-order Functions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/higher-order-functions-javascript/"&gt;Higher-Order Functions in JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528"&gt;Higher Order Functions: Using Filter, Map and Reduce for More Maintainable Code — Guido Schmitz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/effective-functional-javascript-first-class-and-higher-order-functions-713fde8df50a"&gt;First-class and Higher Order Functions: Effective Functional JavaScript — Hugo Di Francesco&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.lullabot.com/articles/higher-order-functions-in-javascript"&gt;Higher Order Functions in JavaScript — John Hannah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pedroapfilho/high-order-functions"&gt;Just a reminder on how to use high order functions — Pedro Filho&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-higher-order-functions-in-javascript-75461803bad"&gt;Understanding Higher-Order Functions in JavaScript — Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nuel_ikwuoma/higher-order-functions-a-pragmatic-approach-51fb"&gt;Higher Order Functions - A pragmatic approach — emmanuel ikwuoma&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rRgD1yVwIvE"&gt;JavaScript Higher Order Functions &amp;amp; Arrays — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BMUiFMZr7vk"&gt;Higher Order Functions — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dTlpYnmBW9I"&gt;Higher Order Functions in Javascript — Raja Yogan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=GYRMNp1SKXA"&gt;Higher Order Iterators in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H4awPsyugS0"&gt;Higher Order Functions in JavaScript — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=7E8ctomPQJw"&gt;Part 1: An Introduction to Callbacks and Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=28MXziDZkE4"&gt;Part 2: Understanding Why We Need Higher Order Functions - Codesmith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HkWxvB1RJq0"&gt;Higher-Order Functions ft. Functional Programming - Akshay Saini&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;23. Recursion&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/recursion-in-javascript-1608032c7a1f"&gt;Recursion in JavaScript — Kevin Ennis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@zfrisch/understanding-recursion-in-javascript-992e96449e03"&gt;Understanding Recursion in JavaScript — Zak Frisch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/learn-and-understand-recursion-in-javascript-b588218e87ea"&gt;Learn and Understand Recursion in JavaScript — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/recursion-functional-javascript/"&gt;Recursion in Functional JavaScript — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/programming-with-js-recursion-31371e2bf808"&gt;Programming with JS: Recursion — Alexander Kondov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/simov/anonymous-recursion-in-javascript"&gt;Anonymous Recursion in JavaScript — simo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.jstips.co/en/javascript/recursion-iteration-and-tail-calls-in-js/"&gt;Recursion, iteration and tail calls in JS — loverajoel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/what-is-recursion-in-javascript/"&gt;What is Recursion? A Recursive Function Explained with JavaScript Code Examples — Nathan Sebhastian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@newmanbradm/intro-to-recursion-984a8bd50f4b"&gt;Intro to Recursion — Brad Newman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.datadriveninvestor.com/accio-recursion-your-new-favorite-javascript-spell-7e10d3125fb3"&gt;Accio Recursion!: Your New Favorite JavaScript Spell — Leanne Cabey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/christinamcmahon/recursion-explained-with-examples-4k1m"&gt;Recursion Explained (with Examples) — Christina&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VtG0WAUvq2w"&gt;Recursion In JavaScript — techsith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=k7-N8R0-KY4"&gt;Recursion — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vLhHyGTkjCs"&gt;Recursion and Recursive Functions — Hexlet&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kGXVsd8pBLw"&gt;Recursion: Recursion() — JS Monthly — Lucas da Costa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uyjsR9eNTIw"&gt;Recursive Function in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Mv9NEXX1VHc"&gt;What on Earth is Recursion? — Computerphile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9NO5dXSlbv8"&gt;Javascript Tutorial 34: Introduction To Recursion — codedamn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=FmiQr4nfoPQ"&gt;Recursion, Iteration, and JavaScript: A Love Story | JSHeroes 2018 — Anjana Vakil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lMBVwYrmFZQ&amp;amp;ab_channel=ColtSteele"&gt;Recursion crash course - Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6oDQaB2one8"&gt;What Is Recursion - In Depth - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;24. Collections and Generators&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator"&gt;Generator — MDN web docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/es6-collections-map-set-weakmap-weakset/"&gt;ES6 Collections: Using Map, Set, WeakMap, WeakSet — Kyle Pennell&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-weakmaps-sets-and-weaksets-in-depth"&gt;ES6 WeakMaps, Sets, and WeakSets in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/map-set-weakmap-weakset"&gt;Map, Set, WeakMap and WeakSet — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/mildrenben/maps-in-es6---a-quick-guide-35pk"&gt;Maps in ES6 - A Quick Guide — Ben Mildren&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-set-vs-array-what-and-when-efc055655e1a"&gt;ES6 — Set vs Array — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/es6-map-vs-object-what-and-when-b80621932373"&gt;ES6 — Map vs Object — What and when? — Maya Shavin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/array-vs-set-vs-map-vs-object-real-time-use-cases-in-javascript-es6-47ee3295329b"&gt;Array vs Set vs Map vs Object — Real-time use cases in Javascript (ES6/ES7) — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/claireparker/how-to-create-an-array-of-unique-values-in-javascript-using-sets-5dg6"&gt;How to create an array of unique values in JavaScript using Sets — Claire Parker-Jones&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/what-you-should-know-about-es6-maps-dc66af6b9a1e"&gt;What You Should Know About ES6 Maps — Just Chris&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-maps-in-depth"&gt;ES6 Maps in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/what-are-javascript-generators-and-how-to-use-them-c6f2713fd12e"&gt;What are JavaScript Generators and how to use them — Vladislav Stepanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/understanding-generators-in-es6-javascript-with-examples-6728834016d5"&gt;Understanding JavaScript Generators With Examples — Arfat Salman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/es6-generators"&gt;The Basics of ES6 Generators — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kallaugher/an-introduction-to-javascript-generators-1224"&gt;An Introduction to JavaScript Generators — Alice Kallaugher&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ycohYSx5h9w"&gt;JavaScript ES6 / ES2015 Set, Map, WeakSet and WeakMap — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dcP039DYzmE"&gt;JavaScript ES6 / ES2015 - [11] Generators - Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=m4abICrldQI"&gt;The Differences between ES6 Maps and Sets — Steve Griffith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO07THdLWQo"&gt;Javascript Generators - THEY CHANGE EVERYTHING - ES6 Generators Harmony Generators — LearnCode.academy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;25. Promises&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise"&gt;Promise — MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/javascript-promises-for-dummies"&gt;JavaScript Promises for Dummies ― Jecelyn Yeen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-promises-in-javascript-13d99df067c1"&gt;Understanding promises in JavaScript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261"&gt;Master the JavaScript Interview: What is a Promise? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/overview-javascript-promises/"&gt;An Overview of JavaScript Promises — Sandeep Panda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/promises-in-javascript-explained-277b98850de"&gt;How to use Promises in JavaScript — Prashant Ram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-implement-promises-in-javascript-1ce2680a7f51"&gt;Implementing Promises In JavaScript — Maciej Cieslar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-promises-explained-with-simple-real-life-analogies-dd6908092138"&gt;JavaScript: Promises explained with simple real life analogies — Shruti Kapoor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_promises.html"&gt;Promises for Asynchronous Programming — Exploring JS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.codeanalogies.com/2018/08/26/javascript-promises-explained-by-gambling-at-a-casino/"&gt;JavaScript Promises Explained By Gambling At A Casino — Kevin Kononenko&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/datafire-io/es6-promises-patterns-and-anti-patterns-bbb21a5d0918"&gt;ES6 Promises: Patterns and Anti-Patterns — Bobby Brennan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/a-simple-guide-to-es6-promises-d71bacd2e13a"&gt;A Simple Guide to ES6 Promises — Brandon Morelli&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/the-es6-promises-87a979ab27e4"&gt;The ES6 Promises — Manoj Singh Negi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/es6-promises-in-depth"&gt;ES6 Promises in Depth — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/playing-with-javascript-promises-a-comprehensive-approach-25ab752c78c3"&gt;Playing with Javascript Promises: A Comprehensive Approach — Rajesh Babu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/how-to-write-a-javascript-promise-4ed8d44292b8"&gt;How to Write a JavaScript Promise — Brandon Wozniewicz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@andrewly07/a-coding-writers-guide-an-introduction-to-es6-promises-9ff9f9e88f6c"&gt;A Coding Writer's Guide: An Introduction To ES6 Promises — Andrew Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/itnext/reverse-engineering-understand-promises-1jfc"&gt;Understanding Promises in JavaScript — Chris Noring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zellwk/converting-callbacks-to-promises-nhn"&gt;Converting callbacks to promises — Zell Liew&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/dailyjs/javascript-promises-zero-to-hero-plus-cheat-sheet-64d75051cffa"&gt;JavaScript Promises: Zero To Hero Plus Cheat Sheet — Joshua Saunders&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/boywithsilverwings/promises-javascript-concepts-293c"&gt;Promises - JavaScript concepts — Agney Menon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/iggredible/javascript-promise-101-3idl"&gt;Javascript &lt;code&gt;Promise&lt;/code&gt; 101 — Igor Irianto&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/sunnysingh/simplify-javascript-promises-4djb"&gt;Simplify JavaScript Promises — Sunny Singh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/peterklingelhofer/promises-in-javascript-3h5k"&gt;Promises in JavaScript — Peter Klingelhofer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/somedood/best-practices-for-es6-promises-36da"&gt;Best Practices for ES6 Promises — Basti Ortiz&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/zurvin/lo-que-debemos-saber-de-escript-2020-5fc61da5e4cd"&gt;Lo que debemos saber de EScript 2020 — Kike Sanchez&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-basics"&gt;Promise Basics - javascript.info&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-09/javascript-promises"&gt;The Complete JavaScript Promise Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/promise-chaining"&gt;Promise Chaining - javascript.info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=vQ3MoXnKfuQ"&gt;Let's Learn ES6 - Promises — Ryan Christiani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XJEHuBZQ5dU"&gt;JavaScript ES6 / ES2015 Promises — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2d7s3spWAzo"&gt;Promises — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=f8IgdnYIwOU"&gt;Error Handling Promises in JavaScript — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=QO4NXhWo_NM"&gt;Promises Part 1 - Topics of JavaScript/ES6 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RvYYCGs45L4"&gt;JavaScript Promise in 100 Seconds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/3NjdOtHpcBM"&gt;JavaScript Promise in 9 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DHvZLI7Db8E"&gt;JavaScript Promises In 10 Minutes — Web Dev Simplified &lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/ap-6PPAuK1Y?si=Ri1fopXeYjlrHzpf"&gt;Promises | Ep 02 Season 02 - Namaste JavaScript - Akshay Saini &lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;26. async/await&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/async-await"&gt;async/await — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://eloquentjavascript.net/11_async.html"&gt;Eloquent JavaScript, 3rd Edition: Ch. 11 - Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://exploringjs.com/es6/ch_async.html"&gt;Exploring JS: Asynchronous Programming&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/understanding-async-await-in-javascript-1d81bb079b2c"&gt;Understanding async/await in Javascript — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/tutorials/asynchronous-javascript-using-async-await"&gt;Asynchronous Javascript using async/await — Joy Warugu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flaviocopes.com/javascript-async-await/"&gt;Modern Asynchronous JavaScript with async/await — Flavio Copes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@_bengarrison/javascript-es8-introducing-async-await-functions-7a471ec7de8a"&gt;Javascript — ES8 Introducing async/await Functions — Ben Garrison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/avoiding-the-async-await-hell-c77a0fb71c4c"&gt;How to escape async/await hell — Aditya Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ponyfoo.com/articles/understanding-javascript-async-await"&gt;Understanding JavaScript's async await — Nicolás Bevacqua&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://techbrij.com/javascript-async-await-parallel-sequence"&gt;JavaScript Async/Await: Serial, Parallel and Complex Flow — TechBrij&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.pusher.com/promises-async-await/"&gt;From JavaScript Promises to Async/Await: why bother? — Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/flow-control-callbacks-promises-async-await/"&gt;Flow Control in Modern JS: Callbacks to Promises to Async/Await — Craig Buckler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/improve-your-asynchronous-javascript-code-with-async-and-await-c02fc3813eda"&gt;How to improve your asynchronous Javascript code with async and await — Indrek Lasn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@micksheridan.24/making-fetches-easy-with-async-await-8a1246efa1f6"&gt;Making Fetches Easy With Async Await — Mickey Sheridan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/gafi/7-reasons-to-always-use-async-await-over-plain-promises-tutorial-4ej9"&gt;7 Reasons Why JavaScript Async/Await Is Better Than Plain Promises — Mostafa Gaafar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jscrambler/asynchronous-operations-in-javascript-2p6b"&gt;Asynchronous Operations in JavaScript — Jscrambler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/should-i-use-promises-or-async-await-126ab5c98789"&gt;JavaScript: Promises or async-await — Gokul N K&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/zhiyuanamos/async-await-from-zero-to-hero-a22"&gt;Async / Await: From Zero to Hero — Zhi Yuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lydiahallie/javascript-visualized-promises-async-await-5gke"&gt;JavaScript Visualized: Promises &amp;amp; Async/Await — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Asynchronous/Async_await"&gt;Making asynchronous programming easier with async and await — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-async-await-tutorial-learn-callbacks-promises-async-await-by-making-icecream/"&gt;JavaScript Async/Await Tutorial – Learn Callbacks, Promises, and Async/Await in JS by Making Ice Cream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.webdevsimplified.com/2021-11/async-await/"&gt;Better Than Promises - JavaScript Async/Await&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=exBgWAIeIeg"&gt;Asynchronous JavaScript Crash Course&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=9YkUCxvaLEk"&gt;Async + Await — Wes Bos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SrNQS8J67zc"&gt;Asynchrony: Under the Hood — Shelley Vohr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=568g8hxJJp4&amp;amp;index=3&amp;amp;list=PL0zVEGEvSaeHJppaRLrqjeTPnCH6"&gt;async/await in JavaScript - What, Why and How — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=XO77Fib9tSI&amp;amp;index=3&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 1 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=chavThlNz3s&amp;amp;index=4&amp;amp;list=PLRqwX-V7Uu6bKLPQvPRNNE65kBL62mVfx"&gt;async/await Part 2 - Topics of JavaScript/ES8 — The Coding Train&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krAYA4rvbdA"&gt;Complete Guide to JS Async &amp;amp; Await ES2017/ES8 — Colt Steele&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_9vgd9XKlDQ"&gt;Tips for using async/await in JavaScript — James Q Quick&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=V_Kr9OSfDeU"&gt;JavaScript Async Await — Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/Gjbr21JLfgg?si=SDCVKr9ONw2GsNdT"&gt;Promise async and await in javascript — Hitesh Choudhary&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;27. Data Structures&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/data-structures-in-javascript-1b9aed0ea17c"&gt;Data Structures in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/algorithms-and-data-structures-in-javascript-a71548f902cb"&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/courses/10-need-to-know-javascript-concepts/data-structures-objects-and-arrays"&gt;Data Structures: Objects and Arrays ― Chris Nwamba&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://blog.benoitvallon.com/data-structures-in-javascript/data-structures-in-javascript/"&gt;Data structures in JavaScript — Benoit Vallon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.cloudboost.io/playing-with-data-structures-in-javascript-stack-a55ebe50f29d"&gt;Playing with Data Structures in Javascript — Anish K.&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-little-guide-of-queue-in-javascript-4f67e79260d9"&gt;The Little Guide of Queue in JavaScript — Germán Cutraro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barretlee/algorithms"&gt;All algorithms writing with JavaScript in the book 'Algorithms Fourth Edition'&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nzakas/computer-science-in-javascript"&gt;Collection of classic computer science paradigms in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jamiebuilds/itsy-bitsy-data-structures"&gt;All the things you didn't know you wanted to know about data structures&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/miku86/series/3259"&gt;JavaScript Data Structures: 40 Part Series — miku86&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/data-structures-understanding-graphs-82509d35e6b5"&gt;Data Structures: Understanding Graphs — Rachel Hawa&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-2n61"&gt;Data Structures Two Ways: Linked List (Pt 1) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/freddieduffield/data-structures-two-ways-linked-list-pt2-2i60"&gt;Data Structures Two Ways: Linked List (Pt 2) — Freddie Duffield&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/amejiarosario/graph-data-structures-for-beginners-5edn"&gt;Graph Data Structures Explained in JavaScript — Adrian Mejia&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=H_EBPZgiAas&amp;amp;list=PLDmvslp_VR0zYUSth_8O69p4_cmvZEgLa"&gt;Algorithms In Javascript | Ace Your Interview — Eduonix Learning Solutions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Gj5qBheGOEo&amp;amp;list=PLWKjhJtqVAbkso-IbgiiP48n-O-JQA9PJ"&gt;Data Structures and Algorithms in JavaScript — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Ymh_AurrMbA"&gt;Learning JavaScript Data Structures and Algorithms: Sorting — Packt Video&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA&amp;amp;ab_channel=Academind"&gt;JavaScript Data Structures: Getting Started — Academind&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;28. Expensive Operation and Big O Notation&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/cesars-tech-insights/big-o-notation-javascript-25c79f50b19b"&gt;Big O Notation in Javascript — César Antón Dorantes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/time-complexity-big-o-notation-1a4310c3ee4b"&gt;Time Complexity/Big O Notation — Tim Roberts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@gmedina229/big-o-in-javascript-36ff67766051"&gt;Big O in JavaScript — Gabriela Medina&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bradoncode.com/blog/2012/04/big-o-algorithm-examples-in-javascript.html"&gt;Big O Search Algorithms in JavaScript — Bradley Braithwaite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/time-is-complex-but-priceless-f0abd015063c"&gt;Algorithms in plain English: time complexity and Big-O Notation — Michael Olorunnisola&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/lofiandcode/an-introduction-to-big-o-notation-210o"&gt;An Introduction to Big O Notation — Joseph Trettevik&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=HgA5VOFan5E"&gt;JavaScript: Intro to Big O Notation and Function Runtime — Eric Traub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KatlvCFHPRo"&gt;Essential Big O for JavaScript Developers — Dave Smith&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=ALl86xJiTD8"&gt;Big O Notation - Time Complexity Analysis — WebTunings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=itn09C2ZB9Y"&gt;Learn Big O Notation In 12 Minutes - Web Dev Simplified&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=3yUuo7TqMW8"&gt;JavaScript Algorithms: Big-O Notation - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=JgWm6sQwS_I"&gt;JavaScript Algorithms Crash Course: Learn Algorithms &amp;amp; "Big O" from the Ground Up! - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LaexPVi1VRE"&gt;Big O Notation - Data Structures and Algorithms in Javascript - RoadSideCoder&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;29. Algorithms&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Crizstian/data-structure-and-algorithms-with-ES6"&gt;Data Structures and Algorithms using ES6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms"&gt;Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.thatjsdude.com/interview/js1.html"&gt;JS: Interview Algorithm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/siliconwat/algorithms-in-javascript-b0bed68f4038"&gt;Algorithms in JavaScript — Thon Ly&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/javascript-objects-square-brackets-and-algorithms-e9a2916dc158"&gt;JavaScript Objects, Square Brackets and Algorithms — Dmitri Grabov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/felipernb/algorithms.js"&gt;Atwood's Law applied to CS101 - Classic algorithms and data structures implemented in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yangshun/lago"&gt;Data Structures and Algorithms library in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idosela/algorithms-in-javascript"&gt;Collection of computer science algorithms and data structures written in JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/trekhleb/algorithms-and-data-structures-in-javascript-49i3"&gt;Algorithms and Data Structures in JavaScript — Oleksii Trekhleb&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLC3y8-rFHvwiRYB4-HHKHblh3_bQNJTMa"&gt;JavaScript Algorithms - Codevolution&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=oBt53YbR9Kk&amp;amp;t=1021s"&gt;Dynamic Programming - Learn to Solve Algorithmic Problems &amp;amp; Coding Challenges - FreeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLKhlp2qtUcSZtJefDThsXcsAbRBCSTgW4"&gt;Data Structures and Algorithms in Javascript | DSA with JS - RoadsideCoder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLn2ipk-jqgZiAHiA70hOxAj8RMUeqYNK3"&gt;Javascript Algorithms + Data Structures - KodingKevin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=41GSinwoMYA"&gt;JavaScript Data Structures: Getting Started - Academind&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/playlist?list=PLRqwX-V7Uu6ZiZxtDDRCi6uhfTH4FilpH"&gt;Algorithms and Data Structures - The Coding Train (Daniel Shiffman)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;30. Inheritance, Polymorphism and Code Reuse&lt;/h2&gt; 
&lt;h3&gt;Reference&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance"&gt;Inheritance in JavaScript — MDN&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascript.info/class-inheritance"&gt;Class inheritance, super — JavaScript.Info&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/inheritance-in-javascript-21d2b82ffa6f"&gt;Inheritance in JavaScript — Rupesh Mishra&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/simple-inheritance-javascript/"&gt;Simple Inheritance with JavaScript — David Catuhe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/javascript-inheritance-25fe61ab9f85"&gt;JavaScript — Inheritance, delegation patterns and Object linking — NC Patro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.knoldus.com/object-oriented-javascript-polymorphism-with-examples/"&gt;Object Oriented JavaScript: Polymorphism with examples — Knoldus Blogs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/yld-blog/program-like-proteus-a-beginners-guide-to-polymorphism-in-javascript-867bea7c8be2"&gt;Program Like Proteus — A beginner's guide to polymorphism in Javascript — Sam Galson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/object-oriented-javascript-deep-dive-es6-classes/"&gt;Object-oriented JavaScript: A Deep Dive into ES6 Classes — Jeff Mott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://prototypr.io/post/unlocking-the-power-of-polymorphism-in-javascript-a-deep-dive"&gt;Unlocking the Power of Polymorphism in JavaScript: A Deep Dive&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yXlFR81tDBM"&gt;Inheritance in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RBLIm5LMrmc"&gt;JavaScript ES6 Classes and Inheritance — Traversy Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zdovG9cuEBA"&gt;Polymorphism in JavaScript — kudvenkat&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;31. Design Patterns&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://addyosmani.com/resources/essentialjsdesignpatterns/book/"&gt;Learning JavaScript Design Patterns — Addy Osmani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pepa.holla.cz/wp-content/uploads/2016/08/Pro-JavaScript-Design-Patterns.pdf"&gt;Pro JavaScript Design Patterns — Ross Harmes and Dustin Diaz&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/javascript-design-patterns-explained/"&gt;JavaScript Design Patterns – Explained with Examples — Germán Cocca&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scotch.io/bar-talk/4-javascript-design-patterns-you-should-know"&gt;4 JavaScript Design Patterns You Should Know — Devan Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/beginners-guide-to-mobile-web-development/javascript-design-patterns-25f0faaaa15"&gt;JavaScript Design Patterns – Beginner's Guide to Mobile Web Development — Soumyajit Pathak&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/front-end-hacking/javascript-design-patterns-ed9d4c144c81"&gt;JavaScript Design Patterns — Akash Pal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.bitsrc.io/understanding-design-patterns-in-javascript-13345223f2dd"&gt;JavaScript Design Patterns: Understanding Design Patterns in JavaScript - Sukhjinder Arora&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fbeline/Design-Patterns-JS"&gt;All the 23 (GoF) design patterns implemented in Javascript — Felipe Beline&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/the-power-of-the-module-pattern-in-javascript-3c73f7cd10e8"&gt;The Power of the Module Pattern in JavaScript — jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript----part-one--b3e"&gt;Design Patterns for Developers using JavaScript pt. I — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/omensah/design-patterns-for-developers-using-javascript---part-two--3p39"&gt;Design Patterns for Developers using JavaScript pt. II — Oliver Mensah&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://levelup.gitconnected.com/design-patterns-in-modern-javascript-development-ec84d8be06ca"&gt;Design patterns in modern JavaScript development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/carlillo/understanding-design-patterns-iterator-using-dev-to-and-medium-social-networks-3bdd"&gt;Understanding Design Patterns: Iterator using Dev.to and Medium social networks! — Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/kristijanfistrek/javascript-design-patterns-factory-pattern-562p"&gt;JavaScript Design Patterns - Factory Pattern — KristijanFištrek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-in-plain-english/javascript-design-pattern-module-pattern-555737eccecd"&gt;JavaScript Design Pattern — Module Pattern - Factory Pattern — Moon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/better-programming/design-patterns-null-object-5ee839e37892"&gt;Design Patterns: Null Object - Carlos Caballero&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/strategy-pattern-5oh"&gt;Strategy Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/francescoxx/adapter-pattern-5bjk"&gt;Adapter Pattern - Francesco Ciulla&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/jsmanifest/the-power-of-composite-pattern-in-javascript-2732"&gt;The Power of Composite Pattern in JavaScript - jsmanifest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/bytebodger/in-defense-of-defensive-programming-k45"&gt;In Defense of Defensive Programming - Adam Nathaniel Davis&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://javascriptpatterns.vercel.app/patterns"&gt;JavaScript Patterns Workshop — Lydia Hallie&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.udacity.com/course/javascript-design-patterns--ud989"&gt;JavaScript Design Patterns — Udacity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hO7mzO83N1Q"&gt;JavaScript Patterns for 2017 — Scott Allen&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;32. Partial Applications, Currying, Compose and Pipe&lt;/h2&gt; 
&lt;h3&gt;Books&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/getify/Functional-Light-JS/raw/master/manuscript/ch3.md"&gt;Functional-Light JavaScript: Ch. 3 - Managing Function Inputs — Kyle Simpson&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@pragyan88/writing-middleware-composition-and-currying-elegance-in-javascript-8b15c98a541b"&gt;Composition and Currying Elegance in JavaScript — Pragyan Das&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/javascript-functional-composition-for-every-day-use-22421ef65a10"&gt;Functional JavaScript: Function Composition For Every Day Use — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@acparas/what-i-learned-today-july-2-2017-ab9a46dbf85f"&gt;Functional Composition: compose() and pipe() — Anton Paras&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://busypeoples.github.io/post/functional-composing-javascript/"&gt;Why The Hipsters Compose Everything: Functional Composing In JavaScript — A. Sharif&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jrsinclair.com/articles/2016/gentle-introduction-to-functional-javascript-functions/"&gt;A Gentle Introduction to Functional JavaScript pt III: Functions for making functions — James Sinclair&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jsleao.wordpress.com/2015/02/22/curry-and-compose-why-you-should-be-using-something-like-ramda-in-your-code/"&gt;Curry And Compose (why you should be using something like ramda in your code) — jsanchesleao&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vanslaars.io/post/create-pipe-function/"&gt;Function Composition in JavaScript with Pipe — Andy Van Slaars&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.telerik.com/featured/practical-functional-javascript-ramda/"&gt;Practical Functional JavaScript with Ramda — Andrew D'Amelio, Yuri Takhteyev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/the-beauty-in-partial-application-currying-and-function-composition-d885bdf0d574"&gt;The beauty in Partial Application, Currying, and Function Composition — Joel Thoms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/javascript-scene/curry-or-partial-application-8150044c78b8"&gt;Curry or Partial Application? — Eric Elliott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://benalman.com/news/2012/09/partial-application-in-javascript/"&gt;Partial Application in JavaScript — Ben Alman&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hackernoon.com/partial-application-of-functions-dbe7d9b80760"&gt;Partial Application of Functions — Functional Reactive Ninja&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://raganwald.com/2015/04/01/partial-application.html"&gt;Partial Application in ECMAScript 2015 — Ragan Wald&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536"&gt;So You Want to be a Functional Programmer pt. I — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-2-7005682cec4a"&gt;So You Want to be a Functional Programmer pt. II — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-3-1b0fd14eb1a7"&gt;So You Want to be a Functional Programmer pt. III — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-4-18fbe3ea9e49"&gt;So You Want to be a Functional Programmer pt. IV — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-5-c70adc9cf56a"&gt;So You Want to be a Functional Programmer pt. V — Charles Scalfani&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-the-basic-principles-of-functional-programming-a2c2a15c84"&gt;An introduction to the basic principles of Functional Programming — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/the-renaissance-developer/concepts-of-functional-programming-in-javascript-6bc84220d2aa"&gt;Concepts of Functional Programming in javascript — TK&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/an-introduction-to-functional-programming-style-in-javascript-71fcc050f064"&gt;An Introduction to Functional Programming Style in JavaScript — JavaScript Teacher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.freecodecamp.org/a-practical-guide-to-writing-more-functional-javascript-db49409f71"&gt;A practical guide to writing more functional JavaScript — Nadeesha Cabral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/benlesh/a-simple-explanation-of-functional-pipe-in-javascript-2hbj"&gt;A simple explanation of functional pipe in JavaScript — Ben Lesh&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Wl2ejJOqHUU"&gt;Compose vs Pipe: Functional Programming in JavaScript — Chyld Studios&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jigHxo9YR30"&gt;JavaScript Functional Programing: Compose — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mth5WpEc4Qs"&gt;Function Composition - Functional JavaScript — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Uam37AlzPYw"&gt;JavaScript Function Composition Explained — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VGB9HbL1GHk"&gt;Let's code with function composition — Fun Fun Function&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DzLkRsUN2vE"&gt;Partial Application vs. Currying — NWCalvank&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=jkebgHEcvac"&gt;JavaScript Partial Application — Theodore Anderson&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=75W8UPQ5l7k&amp;amp;t=261s"&gt;call, apply and bind method in JavaScript&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;33. Clean Code&lt;/h2&gt; 
&lt;h3&gt;&lt;img align="center" width="40px" height="40px" src="https://cdn-icons-png.flaticon.com/512/1945/1945940.png" /&gt; Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/clean-coding-for-beginners/"&gt;Clean Code Explained – A Practical Introduction to Clean Coding for Beginners — freeCodeCamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ryanmcdermott/clean-code-javascript"&gt;Clean Code concepts adapted for JavaScript — Ryan McDermott&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@kevin_peters/function-parameters-in-javascript-clean-code-4caac109159b"&gt;Function parameters in JavaScript Clean Code — Kevin Peters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codeburst.io/keeping-your-code-clean-d30bcffd1a10"&gt;Keeping your code clean — Samuel James&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.sitepoint.com/modern-javascript-best-practices/"&gt;Best Practices for Using Modern JavaScript Syntax — M. David Green&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cross-js/cross-js"&gt;best practices for cross node/web development - Jimmy Wärting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/ganderzz/on-writing-clean-code-57cm"&gt;Writing Clean Code - Dylan Paulus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/nityeshaga/writing-clean-code-and-the-practice-of-programming-actionable-advice-for-beginners-5f0k"&gt;Writing Clean Code and The Practice of Programming - Nityesh Agarwal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/d_ir/clean-code-dirty-code-human-code-6nm"&gt;Clean code, dirty code, human code - Daniel Irvine&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev.to/taillogs/practical-ways-to-write-better-javascript-26d4"&gt;Practical Ways to Write Better JavaScript - Ryland G&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/swlh/the-must-know-clean-code-principles-1371a14a2e75"&gt;The Must-Know Clean Code Principles - Kesk on Medium&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/"&gt;The Clean Code Book - Robert C Martin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/how-to-use-destructuring-in-javascript-to-write-cleaner-more-powerful-code-9d1b38794050/"&gt;How to use destructuring in JavaScript to write cleaner, more powerful code - freecodecamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://betterprogramming.pub/write-clean-code-using-javascript-object-destructuring-3551302130e7"&gt;Write Clean Code Using JavaScript Object Destructuring - Asel Siriwardena&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;img align="center" width="40" height="40" src="https://img.icons8.com/dusk/64/video.png" alt="video" /&gt; Videos&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=Mus_vwhTCq0"&gt;JavaScript Pro Tips - Code This, NOT That&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=b9c5GmmS7ks&amp;amp;list=PLWKjhJtqVAbkK24EaPurzMq0-kw5U9pJh&amp;amp;index=1"&gt;Clean Code playlist - Beau teaches&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://youtu.be/RMN_bkZ1KM0?si=Ssg3cNZ_DB7CIwKQ"&gt;JavaScript Best Practices and Coding Conventions - Write Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://youtu.be/vPXzVNmCPg4?si=QR1k4E6Zx5H4mfcs"&gt;JavaScript Clean Code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎥 &lt;a href="https://www.youtube.com/watch?v=0wHyoBPc6zs"&gt;Tips On Learning How To Code&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;img align="center" width="35" height="35" src="https://moein.video/wp-content/uploads/2022/05/license-GIF-Certificate-Royalty-Free-Animated-Icon-350px-after-effects-project.gif" /&gt; &lt;a id="license"&gt;License&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software is licensed under MIT License. See &lt;a href="https://github.com/leonardomso/33-js-concepts/raw/master/LICENSE"&gt;License&lt;/a&gt; for more information ©Leonardo Maldonado.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/leonardomso/33-js-concepts/master/#table-of-contents"&gt;⬆ Back to Top&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt;Happy Learning! ⭐&lt;/strong&gt; 
 &lt;p&gt;If you find this repository helpful, please consider giving it a star!&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>meshery/meshery</title>
      <link>https://github.com/meshery/meshery</link>
      <description>&lt;p&gt;Meshery, the cloud native manager&lt;/p&gt;&lt;hr&gt;&lt;p style="text-align:center;" align="center"&gt;&lt;a href="https://meshery.io"&gt;
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg?sanitize=true" alt="Meshery Logo" width="70%" /&gt;
  &lt;/picture&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://hub.docker.com/r/meshery/meshery" alt="Docker pulls"&gt; &lt;img src="https://img.shields.io/docker/pulls/meshery/meshery.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20" alt="GitHub issues by-label"&gt; &lt;img src="https://img.shields.io/github/issues/meshery/meshery/help%20wanted.svg?color=informational" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/raw/master/LICENSE" alt="LICENSE"&gt; &lt;img src="https://img.shields.io/github/license/meshery/meshery?color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/meshery/meshery" alt="Artifact Hub Meshery"&gt; &lt;img src="https://img.shields.io/endpoint?color=brightgreen&amp;amp;label=Helm%20Chart&amp;amp;style=plastic&amp;amp;url=https%3A%2F%2Fartifacthub.io%2Fbadge%2Frepository%2Fartifact-hub" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/meshery/meshery" alt="Go Report Card"&gt; &lt;img src="https://goreportcard.com/badge/github.com/meshery/meshery" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/actions" alt="Build Status"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/meshery/meshery/release-drafter.yml" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3564" alt="CLI Best Practices"&gt; &lt;img src="https://bestpractices.coreinfrastructure.org/projects/3564/badge" /&gt;&lt;/a&gt; &lt;a href="https://meshery.io/community#discussion-forums" alt="Discussion Forum"&gt; &lt;img src="https://img.shields.io/discourse/users?label=discuss&amp;amp;logo=discourse&amp;amp;server=https%3A%2F%2Fmeshery.io/community" /&gt;&lt;/a&gt; &lt;a href="https://slack.meshery.io" alt="Join Slack"&gt; &lt;img src="https://img.shields.io/badge/Slack-@meshery.svg?logo=slack" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=mesheryio" alt="Twitter Follow"&gt; &lt;img src="https://img.shields.io/twitter/follow/mesheryio.svg?label=Follow+Meshery&amp;amp;style=social" /&gt;&lt;/a&gt; &lt;a href="https://github.com/meshery/meshery/releases" alt="Meshery Downloads"&gt; &lt;img src="https://img.shields.io/github/downloads/meshery/meshery/total" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/meshery/meshery" alt="OpenSSF Scorecard"&gt; &lt;img src="https://api.scorecard.dev/projects/github.com/meshery/meshery/badge" /&gt;&lt;/a&gt; &lt;a href="https://trendshift.io/repositories/888" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/888" alt="meshery%2Fmeshery | Trendshift" style="width: 150px;" width="150px" /&gt;&lt;/a&gt; 
 &lt;!-- &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery?ref=badge_shield" alt="License Scan Report"&gt;
  &lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fmeshery%2Fmeshery.svg?type=shield"/&gt;&lt;/a&gt;  
  --&gt; &lt;/p&gt; 
&lt;h5&gt;&lt;p align="center"&gt;&lt;i&gt;If you like Meshery, please &lt;a href="https://github.com/meshery/meshery/stargazers"&gt;★&lt;/a&gt; this repository to show your support! 🤩&lt;/i&gt;&lt;/p&gt;&lt;/h5&gt; 
&lt;p align="center"&gt; MESHERY IS A CLOUD NATIVE COMPUTING FOUNDATION PROJECT &lt;/p&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-white.svg#gh-dark-mode-only" width="30%" align="center" /&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cncf-black.svg#gh-light-mode-only" width="30%" align="center" /&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;p align="center"&gt; A self-service engineering platform, &lt;a href="https://meshery.io"&gt;Meshery&lt;/a&gt;, is the open source, cloud native manager that enables the design and management of all Kubernetes-based infrastructure and applications (multi-cloud). Among other features, As an extensible platform, Meshery offers visual and collaborative GitOps, freeing you from the chains of YAML while managing Kubernetes multi-cluster deployments. &lt;/p&gt; 
&lt;br /&gt; 
&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-dashboard-hero-image.png" width="800px" /&gt; 
 &lt;br /&gt;Try Meshery in your browser using the 
 &lt;a href="https://play.meshery.io"&gt;Cloud Native Playground&lt;/a&gt; (
 &lt;a href="https://www.youtube.com/watch?v=034nVaQUyME&amp;amp;list=PL3A-A6hPO2IO_yzN83wSJJUNQActzCJvO&amp;amp;index=9"&gt;teaser video&lt;/a&gt;) 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;/p&gt;
&lt;h4 align="center"&gt;Open Meshery extension, Kanvas, in your browser: https://kanvas.new&lt;/h4&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;!--
- [Functionality](#functionality)
  - [Meshery Architecture](#meshery-architecture)
  - [Join the Meshery community!](#join-the-meshery-community)
  - [Contributing](#contributing)
    - [Stargazers](#stargazers)
    - [License](#license)
--&gt; 
&lt;!-- &lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt;
&lt;a href="https://meshery.io"&gt;&lt;picture&gt;
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-light-text-side.svg"&gt;
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg"&gt;
  &lt;img alt="Meshery - the Cloud Native Manager" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-logo-dark-text-side.svg" align="left" width="45%"&gt;
  &lt;/picture&gt;&lt;/a&gt; 
&lt;a href="https://meshery.io"&gt;
&lt;h3 style="margin:auto;"&gt;&lt;br /&gt;&lt;br /&gt;
  &lt;a href="https://docs.google.com/presentation/d/14kxjwYSJ_FyE3K_6CDEd6oq2kqwn0OSE8RDJ4H-KlKU/edit?usp=sharing"&gt;&lt;center&gt;&lt;i&gt;Project Overview Presentation&lt;/i&gt;&lt;/center&gt;&lt;/a&gt;
  &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
&lt;/h3&gt; --&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;h1&gt;Functionality&lt;/h1&gt; 
&lt;h2&gt;Infrastructure Lifecycle Management&lt;/h2&gt; 
&lt;p&gt;Meshery manages the configuration, deployment, and operation of your Cloud services and Kubernetes clusters while supporting hundreds of different types of cloud native infrastructure integrations. Meshery supports &lt;a href="https://meshery.io/integrations"&gt;300+ integrations&lt;/a&gt;.&lt;/p&gt; 
&lt;!--
&lt;a href="https://www.youtube.com/watch?v=034nVaQUyME"&gt;&lt;img alt="Meshery cloud native management" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshmap.gif"  style="margin-left:10px; margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;
&lt;br /&gt;&lt;br /&gt;--&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png"&gt;&lt;img alt="Meshery Integrations" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/cloud-native-integrations.png" style="margin-right:10px;margin-bottom:10px;" width="100%" align="center" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Find infrastructure configuration patterns in Meshery's &lt;a href="https://meshery.io/catalog"&gt;catalog of curated design templates&lt;/a&gt; filled with configuration best practices.&lt;/p&gt; 
&lt;h3&gt;Multiple Kubernetes Clusters and Multiple Clouds&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://meshery.io/assets/images/screens/multi-cluster-management.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;Meshery provides a single pane of glass to manage multiple Kubernetes clusters across any infrastructure, including various cloud providers. Meshery enables consistent configuration, operation, and observability across your entire Kubernetes landscape.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Dry-run your deployments&lt;/h4&gt;&lt;/summary&gt; Meshery leverages Kubernetes' built-in dry-run capabilities to allow you to simulate deployments without actually applying the changes to your cluster. This enables you to: 
 &lt;ul&gt; 
  &lt;li&gt;Validate configurations: Ensure your deployment specifications (e.g., YAML manifests, Helm charts, Meshery Designs) are syntactically correct and will be accepted by the Kubernetes API server. &amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Identify potential issues: Detect errors in your configurations, such as invalid resource definitions, missing fields, or API version mismatches, before they impact your live environment.&lt;/li&gt; 
  &lt;li&gt;Preview changes: Understand the objects that Kubernetes would create or modify during a real deployment.&lt;/li&gt; 
  &lt;li&gt;Integrate with CI/CD: Incorporate dry-run as a step in your continuous integration and continuous delivery pipelines to automate pre-deployment checks and prevent faulty deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;By providing this dry-run functionality, Meshery helps you increase the reliability and stability of your Kubernetes deployments by catching potential problems early in the development and deployment process.&lt;/p&gt; 
 &lt;!-- 
Assess your cloud native infrastructure configuration against deployment and operational best practices with Meshery's configuration validator. Manage your workloads with confidence. Check your Kubernetes configuration for anti-patterns and avoid common pitfalls. --&gt; 
&lt;/details&gt; 
&lt;h3&gt;Visually and collaboratively manage your infrastructure&lt;/h3&gt; 
&lt;p&gt;Using a GitOps-centric approach, visually and collaboratively design and manage your infrastructure and microservices. Meshery intelligently infers the manner in which each resource &lt;a href="https://docs.meshery.io/concepts/logical/relationships"&gt;interrelates&lt;/a&gt; with each other. Meshery supports a broad variety of built-in relationships between components, which you can use to create your own custom relationships.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/edge_mount_relationship_pod_persistent_volume.svg?sanitize=true" width="50%" alt="Multi-cluster Kubernetes Manager" align="center" /&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;img alt="OPA Logo" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/opa-logo.svg?sanitize=true" style="margin-right:10px;" width="25px" align="left" /&gt;&lt;h4&gt;Context-Aware Policies For Applications&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img alt="Meshery and Open Policy Agent Integration" src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-policies-2.png" style="margin:auto;text-align:center" width="50%" /&gt; 
 &lt;p&gt;Leverage built-in relationships to enforce configuration best practices consistently from code to Kubernetes. Customize Configure your infrastructure with confidence without needing to know or write Open Policy Agent's Rego query language.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;Workspaces: Your team's Google Drive for cloud native projects&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/workspace.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
&lt;p&gt;Workspaces let you organize your work and serve as the central point of collaboration for you and your teams and point of access control to Environments and their resources.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Manage your connections with Environments&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/environments.gif" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" /&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/concepts/logical/environments"&gt;Environments&lt;/a&gt; make it easier for you to manage, share, and work with a collection of resources as a group, instead of dealing with all your Connections and Credentials on an individual basis.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;See changes to your infra before you merge&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-snapshot.png" width="50%" alt="Multi-cluster Kubernetes Manager" loading="lazy" align="center" /&gt; 
 &lt;p&gt;Get snapshots of your infrastructure directly in your PRs. Preview your deployment, view changes pull request-to-pull request and get infrastructure snapshots within your PRs by connecting Kanvas to your GitHub repositories.&lt;/p&gt; 
&lt;/details&gt; 
&lt;!-- &lt;h3&gt;Operate with configuration best practices&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Assess your configurations against deployment and operational best practices with Meshery's configuration validator.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt;

&lt;h3&gt;Control all of your infrastructure with mesheryctl&lt;/h3&gt;
&lt;br /&gt;&lt;br /&gt;
&lt;p&gt;Whether managing multiple Meshery deployments, importing designs, discoverying Kubernetes clusters, do so with ease using Meshery CLI in your terminal.&lt;/p&gt;
&lt;br /&gt;&lt;br /&gt; --&gt; 
&lt;h2&gt;Platform Engineering with Meshery's Extension Points&lt;/h2&gt; 
&lt;p&gt;Extend Meshery as your self-service engineering platform by taking advantage of its &lt;a href="https://docs.meshery.io/extensibility"&gt;vast set of extensibility features&lt;/a&gt;, including gRPC adapters, hot-loadable Reactjs packages and Golang plugins, subscriptions on NATS topics, consumable &lt;em&gt;and&lt;/em&gt; extendable API interfaces via REST and GraphQL.The great number of extension points in Meshery make it ideal as the foundation of your internal developer platform.&lt;/p&gt; 
&lt;details&gt;
 &lt;summary&gt;&lt;h4&gt;Access the Cloud Native Patterns for Kubernetes&lt;/h4&gt;&lt;/summary&gt; 
 &lt;p&gt;Design and manage all of your cloud native infrastructure using the design configurator in Meshery or start from a template using the patterns from the &lt;a href="https://meshery.io/catalog"&gt;catalog&lt;/a&gt;. &lt;/p&gt;
&lt;/details&gt; 
&lt;p&gt;Meshery offers robust capabilities for managing multiple tenants within a shared Kubernetes infrastructure. Meshery provides the tools and integrations necessary to create a secure, isolated, and manageable multi-tenant environments, allowing multiple teams or organizations with granular control over their role-based access controls.&lt;/p&gt; 
&lt;p&gt;Meshery's "multi-player" functionality refers to its collaborative features that enable multiple users to interact with and manage cloud native infrastructure simultaneously. This is primarily facilitated through Kanvas, a Meshery extension visual designer and management interface.&lt;/p&gt; 
&lt;h2&gt;Performance Management&lt;/h2&gt; 
&lt;p&gt;Meshery offers load generation and performance characterization to help you assess and optimize the performance of your applications and infrastructure.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/performance-metrics.gif" alt="Multi-cluster Kubernetes Manager" width="50%" /&gt; 
&lt;p&gt;Create and reuse performance profiles for consistent characterization of the configuration of your infrastructure in context of how it performs.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt; Manage the performance of your infrastructure and its workloads&lt;/h4&gt;&lt;/summary&gt; 
 &lt;img src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/meshery-performance.gif" /&gt; 
 &lt;p&gt;Baseline and track your cloud native performance from release to release.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use performance profiles to track the historical performance of your workloads.&lt;/li&gt; 
  &lt;li&gt;Track your application performance from version to version.&lt;/li&gt; 
  &lt;li&gt;Understand behavioral differences between cloud native network functions.&lt;/li&gt; 
  &lt;li&gt;Compare performance across infrastructure deployments.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;h4&gt;Load Generation and Microservice Performance Characteristization&lt;/h4&gt;&lt;/summary&gt; 
 &lt;picture align="left"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg" width="18%" align="left" style="margin-left:10px;" /&gt; 
  &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/layer5io/layer5/master/src/assets/images/service-mesh-performance/stacked/smp-light-text.svg?sanitize=true" width="18%" align="left" style="margin-left:10px;" /&gt; 
 &lt;/picture&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Multiple Load Generators:&lt;/strong&gt; Meshery supports various load generators, including Fortio, Wrk2, and Nighthawk, allowing users to choose the tool that best suits your needs.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Configurable Performance Profiles:&lt;/strong&gt; Meshery provides a highly configurable set of load profiles with tunable facets, enabling users to generate TCP, gRPC, and HTTP load. You can customize parameters such as duration, concurrent threads, concurrent generators, and load generator type.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Statistical Analysis:&lt;/strong&gt; Meshery performs statistical analysis on the results of performance tests, presenting data in the form of histograms with latency buckets. Understand the distribution of response times and identify potential bottlenecks.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Comparison of Test Results:&lt;/strong&gt; Meshery enables you to compare the difference in request performance (latency and throughput) between independent performance tests. Save your load test configurations as Performance Profiles, making it easy to rerun tests with the same settings and track performance variations over time.&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Kubernetes Cluster and Workload Metrics:&lt;/strong&gt; - Meshery connects to one or more Prometheus servers to gather both cluster and application metrics. Meshery also integrates with Grafana, allowing you to import your existing dashboards and visualize performance data.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;In an effort to produce infrastructure agnostic tooling, Meshery uses the &lt;a href="https://smp-spec.io"&gt;Cloud Native Performance&lt;/a&gt; specification as a common format to capture and measure your infrastructure's performance against a universal cloud native performance index. Meshery participates in advancing cloud native infrastructure adoption through the standardization of APIs. Meshery enables you to measure the value provided by Docker, Kubernetes, or other cloud native infrastructure in the context of the overhead incurred.&lt;/p&gt; 
 &lt;!-- 

SCREENSHOT / GIF NEEDED HERE

--&gt; 
&lt;/details&gt; 
&lt;h2&gt;&lt;a name="running"&gt;&lt;/a&gt;Get Started with Meshery&lt;/h2&gt; 
&lt;p style="clear:both;"&gt;&lt;/p&gt; 
&lt;!-- &lt;img alt="Control Kubernetes and your workloads with mesheryctl" src=".github/assets/images/readme/mesheryctl.png"  style="margin-left:10px; margin-bottom:10px;" width="50%" align="right" /&gt; --&gt; 
&lt;h3&gt;Using `mesheryctl`&lt;/h3&gt; 
&lt;p&gt;Meshery runs as a set of containers inside or outside of your Kubernetes clusters.&lt;/p&gt; 
&lt;pre&gt;curl -L https://meshery.io/install | bash -&lt;/pre&gt; 
&lt;p&gt;Use the &lt;a href="https://docs.meshery.io/installation/quick-start"&gt;quick start&lt;/a&gt; guide.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;See all supported platforms&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;See the &lt;a href="https://meshery.io/#getting-started"&gt;getting started&lt;/a&gt; section to quickly deploy Meshery on any of these supported platforms:&lt;/p&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Platform&lt;/th&gt; 
    &lt;th align="center"&gt;Supported?&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker"&gt;Docker - Docker App&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/docker/docker-extensiongit"&gt;Docker - Docker Extension&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/aks.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/aks"&gt;Kubernetes - AKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/docker.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Kubernetes - Docker Desktop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/eks.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/eks"&gt;Kubernetes - EKS&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/gke.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/gke"&gt;Kubernetes - GKE&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/helm.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/helm"&gt;Kubernetes - Helm&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kind.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/kind"&gt;Kubernetes - kind&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/minikube.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes/minikube"&gt;Kubernetes - Minikube&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/openshift.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - OpenShift&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/kubernetes.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/kubernetes"&gt;Kubernetes - Rancher&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/linux.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Linux&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/apple.svg?sanitize=true" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/homebrew.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#mac-or-linux"&gt;Mac - Homebrew&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Windows&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation#windows"&gt;Scoop&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;img src="https://docs.meshery.io/assets/img/platforms/wsl2.png" width="20" height="20" vertical-align="middle" /&gt; &lt;a href="https://docs.meshery.io/installation/platforms/windows#wsl2"&gt;WSL2&lt;/a&gt;&lt;/td&gt; 
    &lt;td align="center"&gt;✔️&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://docs.meshery.io/assets/img/platforms/raspberry-pi.png" width="20" height="20" vertical-align="middle" /&gt; Raspberry Pi&lt;/td&gt; 
    &lt;td align="center"&gt;In Progress&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;p&gt;&lt;a href="https://docs.meshery.io/installation"&gt;Meshery documentation&lt;/a&gt; offers thorough installation guides for your platform of choice.&lt;/p&gt; 
&lt;/details&gt; 
&lt;p style="clear:both;"&gt;&amp;nbsp;&lt;/p&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Join the Meshery community&lt;/h2&gt; 
&lt;p&gt;&lt;a name="contributing"&gt;&lt;/a&gt;&lt;a name="community"&gt;&lt;/a&gt; Our projects are community-built and welcome collaboration. 👍 Be sure to see the &lt;a href="https://meshery.io/community"&gt;Contributor Journey Map&lt;/a&gt; and &lt;a href="https://meshery.io/community#handbook"&gt;Community Handbook&lt;/a&gt; for a tour of resources available to you and the &lt;a href="https://meshery.io/community/#handbook/repository-overview"&gt;Repository Overview&lt;/a&gt; for a cursory description of repository by technology and programming language. Jump into community &lt;a href="https://slack.meshery.io"&gt;Slack&lt;/a&gt; or &lt;a href="https://meshery.io/community#discussion-forums"&gt;discussion forum&lt;/a&gt; to participate.&lt;/p&gt; 
&lt;p style="clear:both;"&gt; &lt;/p&gt;
&lt;h3&gt;Find your MeshMate&lt;/h3&gt; 
&lt;p&gt;MeshMates are experienced Meshery community members, who will help you learn your way around, discover live projects, and expand your community network. Connect with a MeshMate today!&lt;/p&gt; 
&lt;p&gt;Learn more about the &lt;a href="https://meshery.io/community#meshmates"&gt;MeshMates&lt;/a&gt; program. &lt;br /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div style="display: flex; justify-content: center; align-items:center;"&gt; 
 &lt;div&gt; 
  &lt;a href="https://meshery.io/community"&gt;&lt;img alt="Meshery Community" src="https://docs.meshery.io/assets/img/readme/community.png" width="140px" style="margin-right:36px; margin-bottom:7px;" align="left" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;div style="width:60%; padding-left: 16px; padding-right: 16px"&gt; 
  &lt;p&gt; ✔️ &lt;em&gt;&lt;strong&gt;Join&lt;/strong&gt;&lt;/em&gt; any or all of the weekly meetings on &lt;a href="https://meshery.io/calendar"&gt;community calendar&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Watch&lt;/strong&gt;&lt;/em&gt; community &lt;a href="https://www.youtube.com/@mesheryio?sub_confirmation=1"&gt;meeting recordings&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Fill-in&lt;/strong&gt;&lt;/em&gt; a &lt;a href="https://meshery.io/newcomers"&gt;member form&lt;/a&gt; and gain access to community resources. &lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Discuss&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#discussion-forums"&gt;community forum&lt;/a&gt;.&lt;br /&gt; ✔️ &lt;em&gt;&lt;strong&gt;Explore more&lt;/strong&gt;&lt;/em&gt; in the &lt;a href="https://meshery.io/community#handbook"&gt;community handbook&lt;/a&gt;.&lt;br /&gt; &lt;/p&gt; 
 &lt;/div&gt;
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;div&gt; 
  &lt;a href="https://slack.meshery.io"&gt; 
   &lt;picture&gt; 
    &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg" width="110px" /&gt; 
    &lt;img alt="Shows an illustrated light mode meshery logo in light color mode and a dark mode meshery logo dark color mode." src="https://raw.githubusercontent.com/meshery/meshery/master/.github/assets/images/readme/slack.svg?sanitize=true" width="110px" align="left" /&gt; 
   &lt;/picture&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;p align="left"&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;i&gt;Not sure where to start?&lt;/i&gt; Grab an open issue with the &lt;a href="https://github.com/issues?q=is%3Aopen%20is%3Aissue%20archived%3Afalse%20(org%3Ameshery%20OR%20org%3Aservice-mesh-performance%20OR%20org%3Aservice-mesh-patterns%20OR%20org%3Ameshery-extensions)%20label%3A%22help%20wanted%22%20"&gt;help-wanted label&lt;/a&gt;. &lt;/p&gt; 
&lt;br /&gt;
&lt;br /&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please do! We're a warm and welcoming community of open source contributors. Please join. All types of contributions are welcome. Be sure to read the &lt;a href="https://docs.meshery.io/project/contributing"&gt;Contributor Guides&lt;/a&gt; for a tour of resources available to you and how to get started.&lt;/p&gt; 
&lt;!-- &lt;a href="https://youtu.be/MXQV-i-Hkf8"&gt;&lt;img alt="Deploying Linkerd with Meshery" src="https://docs.meshery.io/assets/img/readme/deploying-linkerd-with-meshery.png" width="100%" align="center" /&gt;&lt;/a&gt; --&gt; 
&lt;div&gt;
 &amp;nbsp;
&lt;/div&gt; 
&lt;h3&gt;Stargazers&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;i&gt;If you like Meshery, please &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt;★&lt;/a&gt; star this repository to show your support! 🤩&lt;/i&gt; &lt;br /&gt; &lt;a href="https://raw.githubusercontent.com/meshery/stargazers"&gt; &lt;img align="center" src="https://api.star-history.com/svg?repos=meshery/meshery&amp;amp;type=Date" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;License&lt;/h3&gt; 
&lt;p&gt;This repository and site are available as open-source under the terms of the &lt;a href="https://opensource.org/licenses/Apache-2.0"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Software Bill of Materials (SBOM)&lt;/h4&gt; 
&lt;p&gt;Meshery's &lt;a href="https://github.com/meshery/meshery/actions/workflows/bom.yaml"&gt;Software Bill of Materials&lt;/a&gt; (SBOM) is available as a build artifact.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trueadm/ripple</title>
      <link>https://github.com/trueadm/ripple</link>
      <description>&lt;p&gt;the elegant TypeScript UI framework&lt;/p&gt;&lt;hr&gt;&lt;a href="https://ripplejs.com"&gt; 
 &lt;picture&gt; 
  &lt;source media="(min-width: 768px)" srcset="assets/ripple-desktop.png" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/trueadm/ripple/main/assets/ripple-mobile.png" alt="Ripple - the elegant TypeScript UI framework" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="https://github.com/trueadm/ripple/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/trueadm/ripple/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/JBF2ySrh2W"&gt;&lt;img src="https://img.shields.io/badge/Discord-Join%20Server-7289da?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic"&gt;&lt;img src="https://developer.stackblitz.com/img/open_in_stackblitz_small.svg?sanitize=true" alt="Open in StackBlitz" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What is RippleJS?&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Currently, this project is still in early development, and should not be used in production.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Ripple is a TypeScript UI framework that takes the best parts of React, Solid and Svelte and combines them into one package.&lt;/p&gt; 
&lt;p&gt;I wrote Ripple as a love letter for frontend web.&lt;/p&gt; 
&lt;p&gt;Personally, I (&lt;a href="https://github.com/trueadm"&gt;@trueadm&lt;/a&gt;) have been involved in some truly amazing frontend frameworks along their journeys – from &lt;a href="https://github.com/infernojs/inferno"&gt;Inferno&lt;/a&gt;, where it all began, to &lt;a href="https://github.com/facebook/react"&gt;React&lt;/a&gt; and the journey of React Hooks, to creating &lt;a href="https://github.com/facebook/lexical"&gt;Lexical&lt;/a&gt;, to &lt;a href="https://github.com/sveltejs/svelte"&gt;Svelte 5&lt;/a&gt; and its new compiler and signal-based reactivity runtime. Along that journey, I collected ideas, and intriguing thoughts that may or may not pay off. Given my time between roles, I decided it was the best opportunity to try them out, and for open source to see what I was cooking.&lt;/p&gt; 
&lt;p&gt;Ripple was designed to be a JS/TS-first framework, rather than HTML-first. Ripple modules have their own &lt;code&gt;.ripple&lt;/code&gt; extension, and these modules fully support TypeScript. By introducing a new extension, it allows Ripple to invent its own superset language, which plays really nicely with TypeScript and JSX, but with a few interesting touches. In my experience, this has led to better DX not only for humans, but also for LLMs.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Reactive Primitives&lt;/strong&gt;: Built-in reactivity with &lt;code&gt;track&lt;/code&gt; and &lt;code&gt;@&lt;/code&gt; reactive syntax on primitives&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Reactive Objects&lt;/strong&gt;: You can create fully reactive arrays/objects using shorthand syntax &lt;code&gt;#[]&lt;/code&gt; &lt;code&gt;#{}&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Component-Based Architecture&lt;/strong&gt;: Clean, reusable components with props and children&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;JSX-like Syntax&lt;/strong&gt;: Familiar templating with Ripple-specific enhancements&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Fine-grain rendering, with industry-leading performance, bundle-size and memory usage&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript Support&lt;/strong&gt;: Full TypeScript integration with type checking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VSCode Integration&lt;/strong&gt;: Rich editor support with diagnostics, syntax highlighting, and IntelliSense&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Prettier Support&lt;/strong&gt;: Full Prettier formatting support for &lt;code&gt;.ripple&lt;/code&gt; modules&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Missing Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;SSR&lt;/strong&gt;: Ripple is currently an SPA only. It will have SSR soon! Hydration to follow after.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Try Ripple&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;We're working hard on getting an online playground available. Watch this space!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;You can try Ripple now by using our basic Vite template either via &lt;a href="https://stackblitz.com/github/trueadm/ripple/tree/main/templates/basic"&gt;StackBlitz&lt;/a&gt;, or by running these commands in your terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx degit trueadm/ripple/templates/basic my-app
cd my-app
npm i # or yarn or pnpm
npm run dev # or yarn or pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or use create-ripple interactive CLI tool for creating new Ripple applications with features like Tailwind CSS or Bootstrap setup.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx create-ripple  # or yarn create ripple or pnpm create ripple

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to install the RippleJS package directly, it is &lt;code&gt;ripple&lt;/code&gt; on npm:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i --save ripple # or yarn or pnpm
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;VSCode Extension&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin"&gt;Ripple VSCode extension&lt;/a&gt; provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Syntax Highlighting&lt;/strong&gt; for &lt;code&gt;.ripple&lt;/code&gt; files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Real-time Diagnostics&lt;/strong&gt; for compilation errors&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript Integration&lt;/strong&gt; for type checking&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;IntelliSense&lt;/strong&gt; for autocompletion&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can find the extension on the VS Code Marketplace as &lt;a href="https://marketplace.visualstudio.com/items?itemName=ripplejs.ripple-vscode-plugin"&gt;&lt;code&gt;Ripple for VS Code&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also &lt;a href="https://github.com/trueadm/ripple/raw/refs/heads/main/packages/ripple-vscode-plugin/published/ripple-vscode-plugin.vsix"&gt;manually install the extension&lt;/a&gt; &lt;code&gt;.vsix&lt;/code&gt; that have been manually packaged.&lt;/p&gt; 
&lt;h3&gt;Mounting your app&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;mount&lt;/code&gt; API from the &lt;code&gt;ripple&lt;/code&gt; package to render your Ripple component, using the &lt;code&gt;target&lt;/code&gt; option to specify what DOM element you want to render the component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;// index.ts
import { mount } from 'ripple';
import { App } from '/App.ripple';

mount(App, {
  props: {
    title: 'Hello world!',
  },
  target: document.getElementById('root'),
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Key Concepts&lt;/h2&gt; 
&lt;h3&gt;Components&lt;/h3&gt; 
&lt;p&gt;Define reusable components with the &lt;code&gt;component&lt;/code&gt; keyword. These are similar to functions in that they have &lt;code&gt;props&lt;/code&gt;, but crucially, they allow for a JSX-like syntax to be defined alongside standard TypeScript. That means you do not &lt;em&gt;return JSX&lt;/em&gt; like in other frameworks, but you instead use it like a JavaScript statement, as shown:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Button(props: { text: string, onClick: () =&amp;gt; void }) {
  &amp;lt;button onClick={props.onClick}&amp;gt;
    {props.text}
  &amp;lt;/button&amp;gt;
}

// Usage
export component App() {
  &amp;lt;Button text="Click me" onClick={() =&amp;gt; console.log("Clicked!")} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ripple's templating language also supports shorthands and object spreads too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-svelte"&gt;// you can do a normal prop
&amp;lt;div onClick={onClick}&amp;gt;{text}&amp;lt;/div&amp;gt;

// or using the shorthand prop
&amp;lt;div {onClick}&amp;gt;{text}&amp;lt;/div&amp;gt;

// and you can spread props
&amp;lt;div {...properties}&amp;gt;{text}&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reactivity&lt;/h3&gt; 
&lt;p&gt;You use &lt;code&gt;track&lt;/code&gt; to create a single tracked value. The &lt;code&gt;track&lt;/code&gt; function will created a boxed &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object that is not accessible from the outside, and instead you must use &lt;code&gt;@&lt;/code&gt; to unbox the &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object to read or write its underlying value. You can pass the &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object between components, functions and context to read and write to the value in different parts of your codebase.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { track } from 'ripple';

let name = track('World');
let count = track(0);

// Updates automatically trigger re-renders
@count++;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Objects can also contain tracked values with &lt;code&gt;@&lt;/code&gt; to access the reactive object property:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;import { track } from 'ripple';

let counter = { current: track(0) };

// Updates automatically trigger re-renders
counter.@current++;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Tracked derived values are also &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; objects, except you pass a function to &lt;code&gt;track&lt;/code&gt; rather than a value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let count = track(0);
let double = track(() =&amp;gt; @count * 2);
let quadruple = track(() =&amp;gt; @double * 2);

console.log(@quadruple);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to use a tracked value inside a reactive context, such as an effect but you don't want that value to be a tracked dependency, you can use &lt;code&gt;untrack&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-ts"&gt;let count = track(0);
let double = track(() =&amp;gt; @count * 2);
let quadruple = track(() =&amp;gt; @double * 2);

effect(() =&amp;gt; {
  // This effect will never fire again, as we've untracked the only dependency it has
  console.log(untrack(() =&amp;gt; @quadruple));
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: you cannot create &lt;code&gt;Tracked&lt;/code&gt; objects in module/global scope, they have to be created on access from an active component context.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;track with get / set&lt;/h4&gt; 
&lt;p&gt;The optional get and set parameters of the &lt;code&gt;track&lt;/code&gt; function let you customize how a tracked value is read or written, similar to property accessors but expressed as pure functions. The get function receives the current stored value and its return value is exposed when the tracked value is accessed / unboxed with &lt;code&gt;@&lt;/code&gt;. The set function should return the value that will actually be stored and receives two parameters: the first is the one being assigned and the second with the previous value. The get and set functions may be useful for tasks such as logging, validating, or transforming values before they are exposed or stored.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { track } from 'ripple';

export component App() {
  let count = track(0,
    (current) =&amp;gt; {
      console.log(current);
      return current;
    },
    (next, prev) =&amp;gt; {
      console.log(prev);
      if (typeof next === 'string') {
        next = Number(next);
      }

      return next;
    }
  );
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: If no value is returned from either &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt; is either exposed (for get) or stored (for set). Also, if only supplying the &lt;code&gt;set&lt;/code&gt;, the &lt;code&gt;get&lt;/code&gt; parameter must be set to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;trackSplit Function&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;trackSplit&lt;/code&gt; "splits" a plain object — such as component props — into specified tracked variables and an extra &lt;code&gt;rest&lt;/code&gt; property containing the remaining unspecified object properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;const [children, count, rest] = trackSplit(props, ['children', 'count']);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When working with component props, destructuring is often useful — both for direct use as variables and for collecting remaining properties into a &lt;code&gt;rest&lt;/code&gt; object (which can be named arbitrarily). If destructuring happens in the component argument, e.g. &lt;code&gt;component Child({ children, value, ...rest })&lt;/code&gt;, Ripple automatically links variable access to the original props — for example, &lt;code&gt;value&lt;/code&gt; is compiled to &lt;code&gt;props.value&lt;/code&gt;, preserving reactivity.&lt;/p&gt; 
&lt;p&gt;However, destructuring inside the component body, e.g. &lt;code&gt;const { children, value, ...rest } = props&lt;/code&gt;, for read-only reactive props, does not preserve reactivity (too complicated to implement due to many edge cases). To ensure destructured read-only reactive props remain reactive in this case, use the &lt;code&gt;trackSplit&lt;/code&gt; function.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: boxed / wrapped Tracked objects are always reactive since they cross function boundaries by reference. Props that were not declared with &lt;code&gt;track()&lt;/code&gt; are never reactive and always render the same value that was initially passed in.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;A full example utilizing various Ripple constructs demonstrates the &lt;code&gt;split&lt;/code&gt; option usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { track, trackSplit } from 'ripple';
import type { PropsWithChildren, Tracked } from 'ripple';

component Child(props: PropsWithChildren&amp;lt;{ count: Tracked&amp;lt;number&amp;gt;, className: string }&amp;gt;) {
  // children, count are always reactive
  // but className is passed in as a read-only reactive value
  const [children, count, className, rest] = trackSplit(props, ['children', 'count', 'class']);

  &amp;lt;button class={@className} {...@rest}&amp;gt;&amp;lt;@children /&amp;gt;&amp;lt;/button&amp;gt;
  &amp;lt;pre&amp;gt;{`Count is: ${@count}`}&amp;lt;/pre&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{'Increment Count'}&amp;lt;/button&amp;gt;
}

export component App() {
    let count = track(0,
    (current) =&amp;gt; {
      console.log('getter', current);
      return current;
    },
    (next) =&amp;gt; {
      console.log('setter', next);
      return next;
    }
  );
  let className = track('shadow');
  let name = track('Click Me');

  function buttonRef(el) {
    console.log('ref called with', el);
    return () =&amp;gt; {
      console.log('cleanup ref for', el);
    };
  }

  &amp;lt;Child
    class={@className}
    onClick={() =&amp;gt; { @name === 'Click Me' ? @name = 'Clicked' : @name = 'Click Me'; @className = ''}}
    {count}
    {ref buttonRef}
  &amp;gt;{@name}&amp;lt;/Child&amp;gt;;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the regular destructuring, such as the one below, the &lt;code&gt;class&lt;/code&gt; property would lose its reactivity:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;// ❌ WRONG class / className reactivity would be lost
let { children, count, class: className, ...rest } = props;
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Make sure the resulting &lt;code&gt;rest&lt;/code&gt;, if it's going to be spread onto a dom element, does not contain &lt;code&gt;Tracked&lt;/code&gt; values. Otherwise, you'd be spreading not the actual values but the boxed ones, which are objects that will appear as &lt;code&gt;[object Object]&lt;/code&gt; on the dom element.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Transporting Reactivity&lt;/h4&gt; 
&lt;p&gt;Ripple doesn't constrain reactivity to components only. &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; objects can simply be passed by reference between boundaries:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, track } from 'ripple';

function createDouble(count) {
  const double = track(() =&amp;gt; @count * 2);

  effect(() =&amp;gt; {
    console.log('Count:', @count)
  });

  return double;
}

export component App() {
  let count = track(0);

  const double = createDouble(count);

  &amp;lt;div&amp;gt;{'Double: ' + @double}&amp;lt;/div&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; { @count++; }}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dynamic Components&lt;/h4&gt; 
&lt;p&gt;Ripple has built-in support for dynamic components, a way to render different components based on reactive state. Instead of hardcoding which component to show, you can store a component in a &lt;code&gt;Tracked&lt;/code&gt; via &lt;code&gt;track()&lt;/code&gt;, and update it at runtime. When the tracked value changes, Ripple automatically unmounts the previous component and mounts the new one. Dynamic components are written with the &lt;code&gt;&amp;lt;@Component /&amp;gt;&lt;/code&gt; tag, where the @ both unwraps the tracked reference and tells the compiler that the component is dynamic. This makes it straightforward to pass components as props or swap them directly within a component, enabling flexible, state-driven UIs with minimal boilerplate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let swapMe = track(() =&amp;gt; Child1);

  &amp;lt;Child {swapMe} /&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; @swapMe = @swapMe === Child1 ? Child2 : Child1}&amp;gt;{'Swap Component'}&amp;lt;/button&amp;gt;
}

component Child({ swapMe }: {swapMe: Tracked&amp;lt;Component&amp;gt;}) {
  &amp;lt;@swapMe /&amp;gt;
}

component Child1(props) {
  &amp;lt;pre&amp;gt;{'I am child 1'}&amp;lt;/pre&amp;gt;
}

component Child2(props) {
  &amp;lt;pre&amp;gt;{'I am child 2'}&amp;lt;/pre&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Simple Reactive Arrays&lt;/h4&gt; 
&lt;p&gt;Just like objects, you can use the &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; objects in any standard JavaScript object, like arrays:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let first = track(0);
let second = track(0);
const arr = [first, second];

const total = track(() =&amp;gt; arr.reduce((a, b) =&amp;gt; a + @b, 0));

console.log(@total);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Like shown in the above example, you can compose normal arrays with reactivity and pass them through props or boundaries.&lt;/p&gt; 
&lt;p&gt;However, if you need the entire array to be fully reactive, including when new elements get added, you should use the reactive array that Ripple provides.&lt;/p&gt; 
&lt;h4&gt;Fully Reactive Array&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;TrackedArray&lt;/code&gt; class from Ripple extends the standard JS &lt;code&gt;Array&lt;/code&gt; class, and supports all of its methods and properties. Import it from the &lt;code&gt;'ripple'&lt;/code&gt; namespace or use the provided syntactic sugar for a quick creation via the bracketed notation. All elements existing or new of the &lt;code&gt;TrackedArray&lt;/code&gt; are reactive and respond to the various array operations such as push, pop, shift, unshift, etc. Even if you reference a non-existent element, once it added, the original reference will react to the change. You do NOT need to use the unboxing &lt;code&gt;@&lt;/code&gt; with the elements of the array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedArray } from 'ripple';

// using syntactic sugar `#`
const arr = #[1, 2, 3];

// using the new constructor
const arr = new TrackedArray(1, 2, 3);

// using static from method
const arr = TrackedArray.from([1, 2, 3]);

// using static of method
const arr = TrackedArray.of(1, 2, 3);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  const items = #[1, 2, 3];

  &amp;lt;div&amp;gt;
    &amp;lt;p&amp;gt;{"Length: "}{items.length}&amp;lt;/p&amp;gt;  // Reactive length
    for (const item of items) {
      &amp;lt;div&amp;gt;{item}&amp;lt;/div&amp;gt;
    }
    &amp;lt;button onClick={() =&amp;gt; items.push(items.length + 1)}&amp;gt;{"Add"}&amp;lt;/button&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Object&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;TrackedObject&lt;/code&gt; class extends the standard JS &lt;code&gt;Object&lt;/code&gt; class, and supports all of its methods and properties. Import it from the &lt;code&gt;'ripple'&lt;/code&gt; namespace or use the provided syntactic sugar for a quick creation via the curly brace notation. &lt;code&gt;TrackedObject&lt;/code&gt; fully supports shallow reactivity and any property on the root level is reactive. You can even reference non-existent properties and once added the original reference reacts to the change. You do NOT need to use the unboxing &lt;code&gt;@&lt;/code&gt; with the properties of the &lt;code&gt;TrackedObject&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedObject } from 'ripple';

// using syntactic sugar `#`
const arr = #{a: 1, b: 2, c: 3};

// using the new constructor
const arr = new TrackedObject({a: 1, b: 2, c: 3});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Usage Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  const obj = #{a: 0}

  obj.a = 0;

  &amp;lt;pre&amp;gt;{'obj.a is: '}{obj.a}&amp;lt;/pre&amp;gt;
  &amp;lt;pre&amp;gt;{'obj.b is: '}{obj.b}&amp;lt;/pre&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; { obj.a++; obj.b = obj.b ?? 5; obj.b++; }}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Set&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;TrackedSet&lt;/code&gt; extends the standard JS &lt;code&gt;Set&lt;/code&gt; class, and supports all of its methods and properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { TrackedSet } from 'ripple';

const set = new TrackedSet([1, 2, 3]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;TrackedSet's reactive methods or properties can be used directly or assigned to reactive variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedSet, track } from 'ripple';

export component App() {
  const set = new TrackedSet([1, 2, 3]);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: set contains 2: "}{set.has(2)}&amp;lt;/p&amp;gt;

  // reactive assignment
  let has = track(() =&amp;gt; set.has(2));
  &amp;lt;p&amp;gt;{"Assigned usage: set contains 2: "}{@has}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; set.delete(2)}&amp;gt;{"Delete 2"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; set.add(2)}&amp;gt;{"Add 2"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Map&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;TrackedMap&lt;/code&gt; extends the standard JS &lt;code&gt;Map&lt;/code&gt; class, and supports all of its methods and properties.&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { TrackedMap, track } from 'ripple';

const map = new TrackedMap([[1,1], [2,2], [3,3], [4,4]]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;TrackedMap's reactive methods or properties can be used directly or assigned to reactive variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedMap, track } from 'ripple';

export component App() {
  const map = new TrackedMap([[1,1], [2,2], [3,3], [4,4]]);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: map has an item with key 2: "}{map.has(2)}&amp;lt;/p&amp;gt;

  // reactive assignment
  let has = track(() =&amp;gt; map.has(2));
  &amp;lt;p&amp;gt;{"Assigned usage: map has an item with key 2: "}{@has}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; map.delete(2)}&amp;gt;{"Delete item with key 2"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; map.set(2, 2)}&amp;gt;{"Add key 2 with value 2"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Reactive Date&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;TrackedDate&lt;/code&gt; extends the standard JS &lt;code&gt;Date&lt;/code&gt; class, and supports all of its methods and properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { TrackedDate } from 'ripple';

const date = new TrackedDate(2026, 0, 1); // January 1, 2026
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;TrackedDate's reactive methods or properties can be used directly or assigned to reactive variables. All getter methods (&lt;code&gt;getFullYear()&lt;/code&gt;, &lt;code&gt;getMonth()&lt;/code&gt;, &lt;code&gt;getDate()&lt;/code&gt;, etc.) and formatting methods (&lt;code&gt;toISOString()&lt;/code&gt;, &lt;code&gt;toDateString()&lt;/code&gt;, etc.) are reactive and will update when the date is modified.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedDate, track } from 'ripple';

export component App() {
  const date = new TrackedDate(2025, 0, 1, 12, 0, 0);

  // direct usage
  &amp;lt;p&amp;gt;{"Direct usage: Current year is "}{date.getFullYear()}&amp;lt;/p&amp;gt;
  &amp;lt;p&amp;gt;{"ISO String: "}{date.toISOString()}&amp;lt;/p&amp;gt;

  // reactive assignment
  let year = track(() =&amp;gt; date.getFullYear());
  let month = track(() =&amp;gt; date.getMonth());
  &amp;lt;p&amp;gt;{"Assigned usage: Year "}{@year}{", Month "}{@month}&amp;lt;/p&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; date.setFullYear(2027)}&amp;gt;{"Change to 2026"}&amp;lt;/button&amp;gt;
  &amp;lt;button onClick={() =&amp;gt; date.setMonth(11)}&amp;gt;{"Change to December"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Effects&lt;/h3&gt; 
&lt;p&gt;When dealing with reactive state, you might want to be able to create side-effects based upon changes that happen upon updates. To do this, you can use &lt;code&gt;effect&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, track } from 'ripple';

export component App() {
  let count = track(0);

  effect(() =&amp;gt; {
    console.log(@count);
  });

  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;After Update tick()&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;tick()&lt;/code&gt; function returns a Promise that resolves after all pending reactive updates have been applied to the DOM. This is useful when you need to ensure that DOM changes are complete before executing subsequent code, similar to Vue's &lt;code&gt;nextTick()&lt;/code&gt; or Svelte's &lt;code&gt;tick()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, track, tick } from 'ripple';

export component App() {
  let count = track(0);

  effect(() =&amp;gt; {
    @count;

    if (@count === 0) {
      console.log('initial run, skipping');
      return;
    }

    tick().then(() =&amp;gt; {
      console.log('after the update');
    });
  });

  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{'Increment'}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Control flow&lt;/h3&gt; 
&lt;p&gt;The JSX-like syntax might take some time to get used to if you're coming from another framework. For one, templating in Ripple can only occur &lt;em&gt;inside&lt;/em&gt; a &lt;code&gt;component&lt;/code&gt; body – you can't create JSX inside functions, or assign it to variables as an expression.&lt;/p&gt; 
&lt;!-- prettier-ignore --&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;div&amp;gt;
  // you can create variables inside the template!
  const str = "hello world";

  console.log(str); // and function calls too!

  debugger; // you can put breakpoints anywhere to help debugging!

  {str}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Note that strings inside the template need to be inside &lt;code&gt;{"string"}&lt;/code&gt;, you can't do &lt;code&gt;&amp;lt;div&amp;gt;hello&amp;lt;/div&amp;gt;&lt;/code&gt; as Ripple has no idea if &lt;code&gt;hello&lt;/code&gt; is a string or maybe some JavaScript code that needs evaluating, so just ensure you wrap them in curly braces. This shouldn't be an issue in the real-world anyway, as you'll likely use an i18n library that means using JavaScript expressions regardless.&lt;/p&gt; 
&lt;h3&gt;If statements&lt;/h3&gt; 
&lt;p&gt;If blocks work seamlessly with Ripple's templating language, you can put them inside the JSX-like statements, making control-flow far easier to read and reason with.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component Truthy({ x }) {
  &amp;lt;div&amp;gt;
    if (x) {
      &amp;lt;span&amp;gt;{'x is truthy'}&amp;lt;/span&amp;gt;
    } else {
      &amp;lt;span&amp;gt;{'x is falsy'}&amp;lt;/span&amp;gt;
    }
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;For statements&lt;/h3&gt; 
&lt;p&gt;You can render collections using a &lt;code&gt;for...of&lt;/code&gt; loop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component ListView({ title, items }) {
  &amp;lt;h2&amp;gt;{title}&amp;lt;/h2&amp;gt;
  &amp;lt;ul&amp;gt;
    for (const item of items) {
      &amp;lt;li&amp;gt;{item.text}&amp;lt;/li&amp;gt;
    }
  &amp;lt;/ul&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;for...of&lt;/code&gt; loop has also a built-in support for accessing the loops numerical index. The &lt;code&gt;label&lt;/code&gt; index declares a variable that will used to assign the loop's index.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;  for (const item of items; index i) {
    &amp;lt;div&amp;gt;{item}{' at index '}{i}&amp;lt;/div&amp;gt;
  }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use Ripple's reactive arrays to easily compose contents of an array.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { TrackedArray } from 'ripple';

component Numbers() {
  const array = new TrackedArray(1, 2, 3);

  for (const item of array; index i) {
    &amp;lt;div&amp;gt;{item}{' at index '}{i}&amp;lt;/div&amp;gt;
  }

  &amp;lt;button onClick={() =&amp;gt; array.push(`Item ${array.length + 1}`)}&amp;gt;{"Add Item"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Clicking the &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; will create a new item.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;for...of&lt;/code&gt; loops inside components must contain either dom elements or components. Otherwise, the loop can be run inside an &lt;code&gt;effect&lt;/code&gt; or function.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Try statements&lt;/h3&gt; 
&lt;p&gt;Try blocks work to build the foundation for &lt;strong&gt;error boundaries&lt;/strong&gt;, when the runtime encounters an error in the &lt;code&gt;try&lt;/code&gt; block, you can easily render a fallback in the &lt;code&gt;catch&lt;/code&gt; block.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { reportError } from 'some-library';

component ErrorBoundary() {
  &amp;lt;div&amp;gt;
    try {
      &amp;lt;ComponentThatFails /&amp;gt;
    } catch (e) {
      reportError(e);

      &amp;lt;div&amp;gt;{'An error occurred! ' + e.message}&amp;lt;/div&amp;gt;
    }
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Children&lt;/h3&gt; 
&lt;p&gt;Use &lt;code&gt;children&lt;/code&gt; prop and then use it in the form of &lt;code&gt;&amp;lt;children /&amp;gt;&lt;/code&gt; for component composition.&lt;/p&gt; 
&lt;p&gt;When you pass in children to a component, it gets implicitly passed as the &lt;code&gt;children&lt;/code&gt; prop, in the form of a component.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import type { Component } from 'ripple';

component Card(props: { children: Component }) {
  &amp;lt;div class="card"&amp;gt;
    &amp;lt;props.children /&amp;gt;
  &amp;lt;/div&amp;gt;
}

// Usage
&amp;lt;Card&amp;gt;
  &amp;lt;p&amp;gt;{"Card content here"}&amp;lt;/p&amp;gt;
&amp;lt;/Card&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You could also explicitly write the same code as shown:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import type { Component } from 'ripple';

component Card(props: { children: Component }) {
  &amp;lt;div class="card"&amp;gt;
    &amp;lt;props.children /&amp;gt;
  &amp;lt;/div&amp;gt;
}

// Usage with explicit component
&amp;lt;Card&amp;gt;
  component children() {
    &amp;lt;p&amp;gt;{"Card content here"}&amp;lt;/p&amp;gt;
  }
&amp;lt;/Card&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Refs&lt;/h3&gt; 
&lt;p&gt;Ripple provides a consistent way to capture the underlying DOM element – refs. Specifically, using the syntax &lt;code&gt;{ref fn}&lt;/code&gt; where &lt;code&gt;fn&lt;/code&gt; is a function that captures the DOM element. If you're familiar with other frameworks, then this is identical to &lt;code&gt;{@attach fn}&lt;/code&gt; in Svelte 5 and somewhat similar to &lt;code&gt;ref&lt;/code&gt; in React. The hook function will receive the reference to the underlying DOM element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let div = track();

  const divRef = (node) =&amp;gt; {
    @div = node;
    console.log("mounted", node);

    return () =&amp;gt; {
      @div = undefined;
      console.log("unmounted", node);
    };
  };

  &amp;lt;div {ref divRef}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also create &lt;code&gt;{ref}&lt;/code&gt; functions inline.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
  let div = track();

  &amp;lt;div {ref (node) =&amp;gt; {
    @div = node;
    return () =&amp;gt; @div = undefined;
  }}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use function factories to define properties, these are functions that return functions that do the same thing. However, you can use this pattern to pass reactive properties.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { fadeIn } from 'some-library';

export component App({ ms }) {
  &amp;lt;div {ref fadeIn({ ms })}&amp;gt;{"Hello world"}&amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lastly, you can use refs on composite components.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;&amp;lt;Image {ref (node) =&amp;gt; console.log(node)} {...props} /&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When passing refs to composite components (rather than HTML elements) as shown above, they will be passed a &lt;code&gt;Symbol&lt;/code&gt; property, as they are not named. This still means that it can be spread to HTML template elements later on and still work.&lt;/p&gt; 
&lt;h4&gt;createRefKey&lt;/h4&gt; 
&lt;p&gt;Creates a unique object key that will be recognised as a ref when the object is spread onto an element. This allows programmatic assignment of refs without relying directly on the &lt;code&gt;{ref ...}&lt;/code&gt; template syntax.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { createRefKey } from 'ripple';

export component App() {
  let value = track('');

  const props = {
    id: "example",
    @value,
    [createRefKey()]: (node) =&amp;gt; {
      const removeListener = node.addEventListener('input', (e) =&amp;gt; @value = e.target.value);

      return () =&amp;gt; {
        removeListener();
      }
    }
  };

  // applied to an element
  &amp;lt;input type="text" {...props} /&amp;gt;

  // with composite component
  &amp;lt;Input {...props} /&amp;gt;
}

component Input({ id, value, ...rest }) {
  &amp;lt;input type="text" {id} {value} {...rest} /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Raw HTML&lt;/h3&gt; 
&lt;p&gt;By default, all text nodes in Ripple are escaped to prevent unintended script injections. If you'd like to render trusted HTML onto your page, you can use the HTML directive to opt-out:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;export component App() {
	let source = `
&amp;lt;h1&amp;gt;My Blog Post&amp;lt;/h1&amp;gt;
&amp;lt;p&amp;gt;Hi! I like JS and Ripple.&amp;lt;/p&amp;gt;
`

	&amp;lt;article&amp;gt;
		{html source}
	&amp;lt;/article&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Events&lt;/h3&gt; 
&lt;h4&gt;Event Props&lt;/h4&gt; 
&lt;p&gt;Like React, events are props that start with &lt;code&gt;on&lt;/code&gt; and then continue with an uppercase character, such as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;onClick&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerMove&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerDown&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onKeyDown&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For &lt;code&gt;capture&lt;/code&gt; phase events, just add &lt;code&gt;Capture&lt;/code&gt; to the end of the prop name:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;onClickCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerMoveCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onPointerDownCapture&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;onKeyDownCapture&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;However, and important distinction is that Ripple does not have a synthetic event system like React. So for example, you should opt to use &lt;code&gt;onInput&lt;/code&gt; instead of &lt;code&gt;onChange&lt;/code&gt; and things like &lt;code&gt;onFocus&lt;/code&gt; and &lt;code&gt;onBlur&lt;/code&gt; do not bubble – instead use &lt;code&gt;onFocusIn&lt;/code&gt; and &lt;code&gt;onFocusOut&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: Some events are automatically delegated where possible by Ripple to improve runtime performance.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;on&lt;/h4&gt; 
&lt;p&gt;Adds an event handler to an element and returns a function to remove it. Compared to using addEventListener directly, this method guarantees the proper execution order with respect to attribute-based handlers such as &lt;code&gt;onClick&lt;/code&gt;, and similarly optimized through event delegation for those events that support it. We strongly advise to use it instead of addEventListener.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { effect, on } from 'ripple';

export component App() {
  effect(() =&amp;gt; {
    // on component mount
    const removeListener = on(window, 'resize', () =&amp;gt; {
      console.log('Window resized!');
    });

    // return the removeListener when the component unmounts
    return removeListener;
  });
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Styling&lt;/h3&gt; 
&lt;p&gt;Ripple supports native CSS styling that is localized to the given component using the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;component MyComponent() {
  &amp;lt;div class="container"&amp;gt;&amp;lt;h1&amp;gt;{'Hello World'}&amp;lt;/h1&amp;gt;&amp;lt;/div&amp;gt;

  &amp;lt;style&amp;gt;
    .container {
      background: blue;
      padding: 1rem;
    }

    h1 {
      color: white;
      font-size: 2rem;
    }
  &amp;lt;/style&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: the &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element must be top-level within a &lt;code&gt;component&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Dynamic Classes&lt;/h4&gt; 
&lt;p&gt;In Ripple, the &lt;code&gt;class&lt;/code&gt; attribute can accept more than just a string — it also supports objects and arrays. Truthy values are included as class names, while falsy values are omitted. This behavior is powered by the &lt;code&gt;clsx&lt;/code&gt; library.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let includeBaz = track(true);
&amp;lt;div class={{ foo: true, bar: false, baz: @includeBaz }}&amp;gt;&amp;lt;/div&amp;gt;
// becomes: class="foo baz"

&amp;lt;div class={['foo', {baz: false}, 0 &amp;amp;&amp;amp; 'bar', [true &amp;amp;&amp;amp; 'bat'] ]}&amp;gt;&amp;lt;/div&amp;gt;
// becomes: class="foo bat"

let count = track(3);
&amp;lt;div class={['foo', {bar: @count &amp;gt; 2}, @count &amp;gt; 3 &amp;amp;&amp;amp; 'bat']}&amp;gt;&amp;lt;/div&amp;gt;
// becomes: class="foo bar"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Dynamic Inline Styles&lt;/h4&gt; 
&lt;p&gt;Sometimes you might need to dynamically set inline styles. For this, you can use the &lt;code&gt;style&lt;/code&gt; attribute, passing either a string or an object to it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;let color = track('red');

&amp;lt;div style={`color: ${@color}; font-weight: bold; background-color: gray`}&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div style={{ color: @color, fontWeight: 'bold', 'background-color': 'gray' }}&amp;gt;&amp;lt;/div&amp;gt;

const style = {
  @color,
  fontWeight: 'bold',
  'background-color': 'gray',
};

// using object spread
&amp;lt;div style={{...style}}&amp;gt;&amp;lt;/div&amp;gt;

// using object directly
&amp;lt;div style={style}&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Both examples above will render the same inline styles, however, it's recommended to use the object notation as it's typically more performance optimized.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: When passing an object to the &lt;code&gt;style&lt;/code&gt; attribute, you can use either camelCase or kebab-case for CSS property names.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Context&lt;/h3&gt; 
&lt;p&gt;Ripple has the concept of &lt;code&gt;context&lt;/code&gt; where a value or reactive object can be shared through the component tree – like in other frameworks. This all happens from the &lt;code&gt;Context&lt;/code&gt; class that is imported from &lt;code&gt;ripple&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Creating contexts may take place anywhere. Contexts can contain anything including tracked values or objects. However, context cannot be read via &lt;code&gt;get&lt;/code&gt; or written to via &lt;code&gt;set&lt;/code&gt; inside an event handler or at the module level as it must happen within the context of a component. A good strategy is to assign the contents of a context to a variable via the &lt;code&gt;.get()&lt;/code&gt; method during the component initialization and use this variable for reading and writing.&lt;/p&gt; 
&lt;p&gt;When Child components overwrite a context's value via &lt;code&gt;.set()&lt;/code&gt;, this new value will only be seen by its descendants. Components higher up in the tree will continue to see the original value.&lt;/p&gt; 
&lt;p&gt;Example with tracked / reactive contents:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { track, Context } from "ripple"

// create context with an empty object
const context  = new Context({});
const context2 = new Context();

export component App() {
  // get reference to the object
  const obj = context.get();
  // set your reactive value
  obj.count = track(0);

  // create another tracked variable
  const count2 = track(0);
  // context2 now contains a trackrf variable
  context2.set(count2);

  &amp;lt;button onClick={() =&amp;gt; { obj.@count++; @count2++ }}&amp;gt;
    {'Click Me'}
  &amp;lt;/button&amp;gt;

  // context's reactive property count gets updated
  &amp;lt;pre&amp;gt;{'Context: '}{context.get().@count}&amp;lt;/pre&amp;gt;
  &amp;lt;pre&amp;gt;{'Context2: '}{@count2}&amp;lt;/pre&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Note: &lt;code&gt;@(context2.get())&lt;/code&gt; usage with &lt;code&gt;@()&lt;/code&gt; wrapping syntax will be enabled in the near future&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Passing data between components:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Context } from 'ripple';

const MyContext = new Context(null);

component Child() {
  // Context is read in the Child component
  const value = MyContext.get();

  // value is "Hello from context!"
  console.log(value);
}

component Parent() {
  const value = MyContext.get();

  // Context is read in the Parent component, but hasn't yet
  // been set, so we fallback to the initial context value.
  // So the value is `null`
  console.log(value);

  // Context is set in the Parent component
  MyContext.set("Hello from context!");

  &amp;lt;Child /&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also pass a reactive &lt;code&gt;Tracked&amp;lt;V&amp;gt;&lt;/code&gt; object through context and read it at the other side.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Context, effect } from 'ripple';

const MyContext = new Context(null);

component Child() {
  const count = MyContext.get();

  effect(() =&amp;gt; {
    console.log(@count);
  });
}

component Parent() {
  const count = track(0);

  MyContext.set(count);

  &amp;lt;Child /&amp;gt;

  &amp;lt;button onClick={() =&amp;gt; @count++}&amp;gt;{"increment count"}&amp;lt;/button&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Portal&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;Portal&lt;/code&gt; component allows you to render (teleport) content anywhere in the DOM tree, breaking out of the normal component hierarchy. This is particularly useful for modals, tooltips, and notifications.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsx"&gt;import { Portal } from 'ripple';

export component App() {
  &amp;lt;div class="app"&amp;gt;
    &amp;lt;h1&amp;gt;{'My App'}&amp;lt;/h1&amp;gt;

    {/* This will render inside document.body, not inside the .app div */}
    &amp;lt;Portal target={document.body}&amp;gt;
      &amp;lt;div class="modal"&amp;gt;
        &amp;lt;h2&amp;gt;{'I am rendered in document.body!'}&amp;lt;/h2&amp;gt;
        &amp;lt;p&amp;gt;{'This content escapes the normal component tree.'}&amp;lt;/p&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/Portal&amp;gt;
  &amp;lt;/div&amp;gt;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;We recommend using Ripple with Ripple's Vite plugin. We also recommend using Vitest for testing. When using Vitest, make sure to configure your &lt;code&gt;vitest.config.js&lt;/code&gt; accordingly by using this template config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import { configDefaults, defineConfig } from 'vitest/config';
import { ripple } from 'vite-plugin-ripple';

export default defineConfig({
  plugins: [ripple()],
  resolve: process.env.VITEST ? { conditions: ['browser'] } : undefined,
  test: {
    include: ['**/*.test.ripple'],
    environment: 'jsdom',
    ...configDefaults.test,
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can create a &lt;code&gt;example.test.ripple&lt;/code&gt; module and put your Vitest test assertions in that module.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are happy for your interest in contributing. Please see our &lt;a href="https://raw.githubusercontent.com/trueadm/ripple/main/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/trueadm/ripple/main/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PrismarineJS/mineflayer</title>
      <link>https://github.com/PrismarineJS/mineflayer</link>
      <description>&lt;p&gt;Create Minecraft bots with a powerful, stable, and high level JavaScript API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Mineflayer&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/mineflayer"&gt;&lt;img src="https://img.shields.io/npm/v/mineflayer.svg?color=success&amp;amp;label=npm%20package&amp;amp;logo=npm" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PrismarineJS/mineflayer/actions?query=workflow%3A%22CI%22"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/PrismarineJS/mineflayer/ci.yml.svg?label=CI&amp;amp;logo=github&amp;amp;logoColor=lightgrey" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/PrismarineJS/mineflayer"&gt;&lt;img src="https://img.shields.io/static/v1.svg?label=try&amp;amp;message=on%20gitpod&amp;amp;color=brightgreen&amp;amp;logo=gitpod" alt="Try it on gitpod" /&gt;&lt;/a&gt; &lt;a href="https://colab.research.google.com/github/PrismarineJS/mineflayer/blob/master/docs/mineflayer.ipynb"&gt;&lt;img src="https://img.shields.io/static/v1.svg?label=open&amp;amp;message=on%20colab&amp;amp;color=blue&amp;amp;logo=google-colab" alt="Open In Colab" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/PrismarineJS"&gt;&lt;img src="https://img.shields.io/github/sponsors/PrismarineJS" alt="GitHub Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/GsEFRM8"&gt;&lt;img src="https://img.shields.io/static/v1.svg?label=OFFICIAL&amp;amp;message=DISCORD&amp;amp;color=blue&amp;amp;logo=discord&amp;amp;style=for-the-badge" alt="Official Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;sub&gt;EN&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/README.md"&gt;English&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;RU&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/ru/README_RU.md"&gt;русский&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;ES&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/es/README_ES.md"&gt;Español&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;FR&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/fr/README_FR.md"&gt;Français&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;TR&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/tr/README_TR.md"&gt;Türkçe&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;ZH&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/zh/README_ZH_CN.md"&gt;中文&lt;/a&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;sub&gt;BR&lt;/sub&gt; &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/br/README_BR.md"&gt;Português&lt;/a&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
&lt;/table&gt; 
&lt;p&gt;Create Minecraft bots with a powerful, stable, and high level JavaScript &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/api.md"&gt;API&lt;/a&gt;, also usable from Python.&lt;/p&gt; 
&lt;p&gt;First time using Node.js? You may want to start with the &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/tutorial.md"&gt;tutorial&lt;/a&gt;. Know Python? Checkout some &lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples/python"&gt;Python examples&lt;/a&gt; and try out &lt;a href="https://colab.research.google.com/github/PrismarineJS/mineflayer/blob/master/docs/mineflayer.ipynb"&gt;Mineflayer on Google Colab&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supports Minecraft 1.8 to 1.21 (1.8, 1.9, 1.10, 1.11, 1.12, 1.13, 1.14, 1.15, 1.16, 1.17, 1.18, 1.19, 1.20, 1.21) 
  &lt;!--version--&gt;&lt;/li&gt; 
 &lt;li&gt;Entity knowledge and tracking.&lt;/li&gt; 
 &lt;li&gt;Block knowledge. You can query the world around you. Milliseconds to find any block.&lt;/li&gt; 
 &lt;li&gt;Physics and movement - handle all bounding boxes&lt;/li&gt; 
 &lt;li&gt;Attacking entities and using vehicles.&lt;/li&gt; 
 &lt;li&gt;Inventory management.&lt;/li&gt; 
 &lt;li&gt;Crafting, chests, dispensers, enchantment tables.&lt;/li&gt; 
 &lt;li&gt;Digging and building.&lt;/li&gt; 
 &lt;li&gt;Miscellaneous stuff such as knowing your health and whether it is raining.&lt;/li&gt; 
 &lt;li&gt;Activating blocks and using items.&lt;/li&gt; 
 &lt;li&gt;Chat.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;Checkout &lt;a href="https://github.com/PrismarineJS/mineflayer/wiki/Big-Prismarine-projects"&gt;this page&lt;/a&gt; to see what our current projects are.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;First install Node.js &amp;gt;= 18 from &lt;a href="https://nodejs.org/"&gt;nodejs.org&lt;/a&gt; then:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install mineflayer
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update mineflayer (or any Node.js) package and its dependencies, use&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm update
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;link&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/tutorial.md"&gt;tutorial&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Begin with Node.js and mineflayer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/FAQ.md"&gt;FAQ.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Got a question ? go there first&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/api.md"&gt;api.md&lt;/a&gt;&lt;/strong&gt; &lt;br /&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/unstable_api.md"&gt;unstable_api.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The full API reference&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/history.md"&gt;history.md&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The changelog for mineflayer&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples"&gt;examples/&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Checkout all the mineflayer examples&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;Please read &lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; and &lt;a href="https://github.com/PrismarineJS/prismarine-contribute"&gt;prismarine-contribute&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Videos&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A tutorial video explaining the basic set up process for a bot can be found &lt;a href="https://www.youtube.com/watch?v=ltWosy4Z0Kw"&gt;here.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you want to learn more, more video tutorials are &lt;a href="https://www.youtube.com/playlist?list=PLh_alXmxHmzGy3FKbo95AkPp5D8849PEV"&gt;there,&lt;/a&gt; and the corresponding source codes for those bots is &lt;a href="https://github.com/TheDudeFromCI/Mineflayer-Youtube-Tutorials"&gt;there.&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ltWosy4Z0Kw"&gt;&lt;img src="https://img.youtube.com/vi/ltWosy4Z0Kw/0.jpg" alt="tutorial 1" width="200" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=UWGSf08wQSc"&gt;&lt;img src="https://img.youtube.com/vi/UWGSf08wQSc/0.jpg" alt="tutorial 2" width="200" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=ssWE0kXDGJE"&gt;&lt;img src="https://img.youtube.com/vi/ssWE0kXDGJE/0.jpg" alt="tutorial 3" width="200" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=walbRk20KYU"&gt;&lt;img src="https://img.youtube.com/vi/walbRk20KYU/0.jpg" alt="tutorial 4" width="200" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Without a version specified, the version of the server will be guessed automatically. Without auth specified, the mojang auth style will be guessed.&lt;/p&gt; 
&lt;h3&gt;Echo Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const mineflayer = require('mineflayer')

const bot = mineflayer.createBot({
  host: 'localhost', // minecraft server ip
  username: 'Bot', // username to join as if auth is `offline`, else a unique identifier for this account. Switch if you want to change accounts
  auth: 'microsoft' // for offline mode servers, you can set this to 'offline'
  // port: 25565,              // set if you need a port that isn't 25565
  // version: false,           // only set if you need a specific version or snapshot (ie: "1.8.9" or "1.16.5"), otherwise it's set automatically
  // password: '12345678'      // set if you want to use password-based auth (may be unreliable). If specified, the `username` must be an email
})

bot.on('chat', (username, message) =&amp;gt; {
  if (username === bot.username) return
  bot.chat(message)
})

// Log errors and kick reasons:
bot.on('kicked', console.log)
bot.on('error', console.log)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If &lt;code&gt;auth&lt;/code&gt; is set to &lt;code&gt;microsoft&lt;/code&gt;, you will be prompted to login to microsoft.com with a code in your browser. After signing in on your browser, the bot will automatically obtain and cache authentication tokens (under your specified username) so you don't have to sign-in again.&lt;/p&gt; 
&lt;p&gt;To switch the account, update the supplied &lt;code&gt;username&lt;/code&gt;. By default, cached tokens will be stored in your user's .minecraft folder, or if &lt;code&gt;profilesFolder&lt;/code&gt; is specified, they'll instead be stored there. For more information on bot options see node-minecraft-protocol's &lt;a href="https://github.com/PrismarineJS/node-minecraft-protocol/raw/master/docs/API.md#mccreateclientoptions"&gt;API doc&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Connecting to a Realm&lt;/h4&gt; 
&lt;p&gt;To join a Realm that your Minecraft account has been invited to, you can pass a &lt;code&gt;realms&lt;/code&gt; object with a selector function like below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const client = mineflayer.createBot({
  username: 'email@example.com', // minecraft username
  realms: {
    // This function is called with an array of Realms the account can join. It should return the one it wants to join.
    pickRealm: (realms) =&amp;gt; realms[0]
  },
  auth: 'microsoft'
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;See what your bot is doing&lt;/h3&gt; 
&lt;p&gt;Thanks to the &lt;a href="https://github.com/PrismarineJS/prismarine-viewer"&gt;prismarine-viewer&lt;/a&gt; project, it's possible to display in a browser window what your bot is doing. Just run &lt;code&gt;npm install prismarine-viewer&lt;/code&gt; and add this to your bot:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const { mineflayer: mineflayerViewer } = require('prismarine-viewer')
bot.once('spawn', () =&amp;gt; {
  mineflayerViewer(bot, { port: 3007, firstPerson: true }) // port is the minecraft server port, if first person is false, you get a bird's-eye view
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And you'll get a &lt;em&gt;live&lt;/em&gt; view looking like this:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://prismarinejs.github.io/prismarine-viewer/"&gt;&lt;img src="https://prismarinejs.github.io/prismarine-viewer/test_1.16.1.png" alt="viewer" width="500" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;More Examples&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;example&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples/viewer"&gt;viewer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Display your bot world view in the browser&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples/pathfinder"&gt;pathfinder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Make your bot go to any location automatically&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/chest.js"&gt;chest&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Use chests, furnaces, dispensers, enchantment tables&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/digger.js"&gt;digger&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn how to create a simple bot that is capable of digging blocks&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/discord.js"&gt;discord&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Connect a discord bot with a mineflayer bot&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/jumper.js"&gt;jumper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Learn how to move, jump, ride vehicles, attack nearby entities&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/ansi.js"&gt;ansi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Display your bot's chat with all of the chat colors shown in your terminal&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/guard.js"&gt;guard&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Make a bot guard a defined area from nearby mobs&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/raw/master/examples/multiple_from_file.js"&gt;multiple-from-file&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Add a text file with accounts and have them all login&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;And many more in the &lt;a href="https://github.com/PrismarineJS/mineflayer/tree/master/examples"&gt;examples&lt;/a&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Modules&lt;/h3&gt; 
&lt;p&gt;A lot of the active development is happening inside of small npm packages which are used by mineflayer.&lt;/p&gt; 
&lt;h4&gt;The Node Way™&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;"When applications are done well, they are just the really application-specific, brackish residue that can't be so easily abstracted away. All the nice, reusable components sublimate away onto github and npm where everybody can collaborate to advance the commons." — substack from &lt;a href="https://gist.github.com/substack/5075355"&gt;"how I write modules"&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Modules&lt;/h4&gt; 
&lt;p&gt;These are the main modules that make up mineflayer:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;module&lt;/th&gt; 
   &lt;th&gt;description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/node-minecraft-protocol"&gt;minecraft-protocol&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Parse and serialize minecraft packets, plus authentication and encryption.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/minecraft-data"&gt;minecraft-data&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Language independent module providing minecraft data for minecraft clients, servers and libraries.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-physics"&gt;prismarine-physics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Provide the physics engine for minecraft entities&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-chunk"&gt;prismarine-chunk&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A class to hold chunk data for Minecraft&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/node-vec3"&gt;node-vec3&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;3d vector math with robust unit tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-block"&gt;prismarine-block&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft block with its associated data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-chat"&gt;prismarine-chat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A parser for a minecraft chat message (extracted from mineflayer)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/node-yggdrasil"&gt;node-yggdrasil&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Node.js library to interact with Mojang's authentication system, known as Yggdrasil&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-world"&gt;prismarine-world&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The core implementation of worlds for prismarine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-windows"&gt;prismarine-windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent minecraft windows&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-item"&gt;prismarine-item&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft item with its associated data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-nbt"&gt;prismarine-nbt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;An NBT parser for node-minecraft-protocol&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-recipe"&gt;prismarine-recipe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent minecraft recipes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-biome"&gt;prismarine-biome&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft biome with its associated data&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-entity"&gt;prismarine-entity&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Represent a minecraft entity&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Debug&lt;/h3&gt; 
&lt;p&gt;You can enable some protocol debugging output using &lt;code&gt;DEBUG&lt;/code&gt; environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;DEBUG="minecraft-protocol" node [...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On windows :&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;set DEBUG=minecraft-protocol
node your_script.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Third Party Plugins&lt;/h2&gt; 
&lt;p&gt;Mineflayer is pluggable; anyone can create a plugin that adds an even higher level API on top of Mineflayer.&lt;/p&gt; 
&lt;p&gt;The most updated and useful are :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuniko-software/minecraft-mcp-server"&gt;minecraft-mcp-server&lt;/a&gt; A MCP server for mineflayer, allowing using mineflayer from an LLM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Karang/mineflayer-pathfinder"&gt;pathfinder&lt;/a&gt; - advanced A* pathfinding with a lot of configurable features&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/prismarine-viewer"&gt;prismarine-viewer&lt;/a&gt; - simple web chunk viewer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ImHarvol/mineflayer-web-inventory"&gt;web-inventory&lt;/a&gt; - web based inventory viewer&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-statemachine"&gt;statemachine&lt;/a&gt; - A state machine API for more complex bot behaviors&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/G07cha/MineflayerArmorManager"&gt;Armor Manager&lt;/a&gt; - automatic armor management&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wvffle/mineflayer-dashboard"&gt;Dashboard&lt;/a&gt; - Frontend dashboard for mineflayer bot&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-pvp"&gt;PVP&lt;/a&gt; - Easy API for basic PVP and PVE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/link-discord/mineflayer-auto-eat"&gt;Auto Eat&lt;/a&gt; - Automatic eating of food.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/link-discord/mineflayer-autocrystal"&gt;Auto Crystal&lt;/a&gt; - Automatic placing &amp;amp; breaking of end crystals.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheDudeFromCI/mineflayer-tool"&gt;Tool&lt;/a&gt; - A utility for automatic tool/weapon selection with a high level API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sefirosweb/minecraftHawkEye"&gt;Hawkeye&lt;/a&gt; - A utility for using auto-aim with bows.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firejoust/mineflayer-GUI"&gt;GUI&lt;/a&gt; - Interact with nested GUI windows using async/await&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firejoust/mineflayer-projectile"&gt;Projectile&lt;/a&gt; - Get the required launch angle for projectiles&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firejoust/mineflayer-movement"&gt;Movement&lt;/a&gt; - Smooth and realistic player movement, best suited for PvP&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-collectblock"&gt;Collect Block&lt;/a&gt; - Quick and simple block collection API.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;But also check out :&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewrk/mineflayer-radar/"&gt;radar&lt;/a&gt; - web based radar interface using canvas and socket.io. &lt;a href="https://www.youtube.com/watch?v=FjDmAfcVulQ"&gt;YouTube Demo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/G07cha/MineflayerAutoAuth"&gt;auto-auth&lt;/a&gt; - chat-based bot authentication&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nixes/mineflayer-bloodhound"&gt;Bloodhound&lt;/a&gt; - determine who and what is responsible for damage to another entity&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SiebeDW/mineflayer-tps"&gt;tps&lt;/a&gt; - get the current tps (processed tps)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IceTank/mineflayer-panorama"&gt;panorama&lt;/a&gt; - take Panorama Images of your world&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tuanzisama/mineflayer-death-event"&gt;player-death-event&lt;/a&gt; - emit player death event in Mineflayer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Projects Using Mineflayer&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MineDojo/Voyager"&gt;Voyager&lt;/a&gt; An Open-Ended Embodied Agent with Large Language Models&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kolbytn/mindcraft"&gt;mindcraft&lt;/a&gt; Lib for using mineflayer with LLMs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rom1504/rbot"&gt;rom1504/rbot&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UM1ZV5200S0"&gt;YouTube - building a spiral staircase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=0cQxg9uDnzA"&gt;YouTube - replicating a building&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Darthfett/Helperbot"&gt;Darthfett/Helperbot&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vogonistic/mineflayer-voxel"&gt;vogonistic/voxel&lt;/a&gt; - visualize what the bot is up to using voxel.js&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JonnyD/Skynet"&gt;JonnyD/Skynet&lt;/a&gt; - log player activity onto an online API&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rom1504/MinecraftChat"&gt;MinecraftChat&lt;/a&gt; (last open source version, built by AlexKvazos) - Minecraft web based chat client&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Minecheesecraft/Cheese-Bot"&gt;Cheese Bot&lt;/a&gt; - Plugin based bot with a clean GUI. Made with Node-Webkit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/schematical/chaoscraft"&gt;Chaoscraft&lt;/a&gt; - Minecraft bot using genetic algorithms, see &lt;a href="https://www.youtube.com/playlist?list=PLLkpLgU9B5xJ7Qy4kOyBJl5J6zsDIMceH"&gt;its youtube videos&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hexatester/minetelegram"&gt;hexatester/minetelegram&lt;/a&gt; - Minecraft - Telegram bridge, build on top of mineflayer &amp;amp; telegraf.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer-builder"&gt;PrismarineJS/mineflayer-builder&lt;/a&gt; - Prints minecraft schematics in survival, keeping orientation&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SilkePilon/OpenDeliveryBot"&gt;SilkePilon/OpenDeliveryBot&lt;/a&gt; - Minecraft bot in python to deliver items from place to place.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PrismarineJS/mineflayer/network/dependents"&gt;and hundreds more&lt;/a&gt; - All the projects that github detected are using mineflayer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;h3&gt;Testing everything&lt;/h3&gt; 
&lt;p&gt;Simply run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Testing specific version&lt;/h3&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run mocha_test -- -g &amp;lt;version&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;version&amp;gt;&lt;/code&gt; is a minecraft version like &lt;code&gt;1.12&lt;/code&gt;, &lt;code&gt;1.15.2&lt;/code&gt;...&lt;/p&gt; 
&lt;h3&gt;Testing specific test&lt;/h3&gt; 
&lt;p&gt;Run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run mocha_test -- -g &amp;lt;test_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where &lt;code&gt;&amp;lt;test_name&amp;gt;&lt;/code&gt; is a name of the test like &lt;code&gt;bed&lt;/code&gt;, &lt;code&gt;useChests&lt;/code&gt;, &lt;code&gt;rayTrace&lt;/code&gt;...&lt;/p&gt; 
&lt;h3&gt;Example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run mocha_test -- -g "1.18.1.*BlockFinder"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;to run the block finder test for 1.18.1&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/PrismarineJS/mineflayer/master/LICENSE"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>nodejs/node</title>
      <link>https://github.com/nodejs/node</link>
      <description>&lt;p&gt;Node.js JavaScript runtime ✨🐢🚀✨&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Node.js&lt;/h1&gt; 
&lt;p&gt;Node.js is an open-source, cross-platform JavaScript runtime environment.&lt;/p&gt; 
&lt;p&gt;For information on using Node.js, see the &lt;a href="https://nodejs.org/"&gt;Node.js website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Node.js project uses an &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;open governance model&lt;/a&gt;. The &lt;a href="https://openjsf.org/"&gt;OpenJS Foundation&lt;/a&gt; provides support for the project.&lt;/p&gt; 
&lt;p&gt;Contributors are expected to act in a collaborative manner to move the project forward. We encourage the constructive exchange of contrary opinions and compromise. The &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md#technical-steering-committee"&gt;TSC&lt;/a&gt; reserves the right to limit or block contributors who repeatedly act in ways that discourage, exhaust, or otherwise negatively affect other participants.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This project has a &lt;a href="https://github.com/nodejs/admin/raw/HEAD/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#support"&gt;Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-types"&gt;Release types&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#download"&gt;Download&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-and-lts-releases"&gt;Current and LTS releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#nightly-releases"&gt;Nightly releases&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#api-documentation"&gt;API documentation&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#building-nodejs"&gt;Building Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#security"&gt;Security&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#contributing-to-nodejs"&gt;Contributing to Node.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#current-project-team-members"&gt;Current project team members&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#tsc-technical-steering-committee"&gt;TSC (Technical Steering Committee)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#collaborators"&gt;Collaborators&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#triagers"&gt;Triagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Looking for help? Check out the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/.github/SUPPORT.md"&gt;instructions for getting support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Release types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Current&lt;/strong&gt;: Under active development. Code for the Current release is in the branch for its major version number (for example, &lt;a href="https://github.com/nodejs/node/tree/v22.x"&gt;v22.x&lt;/a&gt;). Node.js releases a new major version every 6 months, allowing for breaking changes. This happens in April and October every year. Releases appearing each October have a support life of 8 months. Releases appearing each April convert to LTS (see below) each October.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;LTS&lt;/strong&gt;: Releases that receive Long Term Support, with a focus on stability and security. Every even-numbered major version will become an LTS release. LTS releases receive 12 months of &lt;em&gt;Active LTS&lt;/em&gt; support and a further 18 months of &lt;em&gt;Maintenance&lt;/em&gt;. LTS release lines have alphabetically-ordered code names, beginning with v4 Argon. There are no breaking changes or feature additions, except in some special circumstances.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Nightly&lt;/strong&gt;: Code from the Current branch built every 24-hours when there are changes. Use with caution.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Current and LTS releases follow &lt;a href="https://semver.org"&gt;semantic versioning&lt;/a&gt;. A member of the Release Team &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;signs&lt;/a&gt; each Current and LTS release. For more information, see the &lt;a href="https://github.com/nodejs/Release#readme"&gt;Release README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Download&lt;/h3&gt; 
&lt;p&gt;Binaries, installers, and source tarballs are available at &lt;a href="https://nodejs.org/en/download/"&gt;https://nodejs.org/en/download/&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Current and LTS releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/release/"&gt;https://nodejs.org/download/release/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://nodejs.org/download/release/latest/"&gt;latest&lt;/a&gt; directory is an alias for the latest Current release. The latest-&lt;em&gt;codename&lt;/em&gt; directory is an alias for the latest release from an LTS line. For example, the &lt;a href="https://nodejs.org/download/release/latest-hydrogen/"&gt;latest-hydrogen&lt;/a&gt; directory contains the latest Hydrogen (Node.js 18) release.&lt;/p&gt; 
&lt;h4&gt;Nightly releases&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://nodejs.org/download/nightly/"&gt;https://nodejs.org/download/nightly/&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Each directory and filename includes the version (e.g., &lt;code&gt;v22.0.0&lt;/code&gt;), followed by the UTC date (e.g., &lt;code&gt;20240424&lt;/code&gt; for April 24, 2024), and the short commit SHA of the HEAD of the release (e.g., &lt;code&gt;ddd0a9e494&lt;/code&gt;). For instance, a full directory name might look like &lt;code&gt;v22.0.0-nightly20240424ddd0a9e494&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;API documentation&lt;/h4&gt; 
&lt;p&gt;Documentation for the latest Current release is at &lt;a href="https://nodejs.org/api/"&gt;https://nodejs.org/api/&lt;/a&gt;. Version-specific documentation is available in each release directory in the &lt;em&gt;docs&lt;/em&gt; subdirectory. Version-specific documentation is also at &lt;a href="https://nodejs.org/download/docs/"&gt;https://nodejs.org/download/docs/&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Verifying binaries&lt;/h3&gt; 
&lt;p&gt;Download directories contain a &lt;code&gt;SHASUMS256.txt.asc&lt;/code&gt; file with SHA checksums for the files and the releaser PGP signature.&lt;/p&gt; 
&lt;p&gt;You can get a trusted keyring from nodejs/release-keys, e.g. using &lt;code&gt;curl&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsLo "/path/to/nodejs-keyring.kbx" "https://github.com/nodejs/release-keys/raw/HEAD/gpg/pubring.kbx"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can import the releaser keys in your default keyring, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#release-keys"&gt;Release keys&lt;/a&gt; for commands to how to do that.&lt;/p&gt; 
&lt;p&gt;Then, you can verify the files you've downloaded locally (if you're using your default keyring, pass &lt;code&gt;--keyring="${GNUPGHOME:-~/.gnupg}/pubring.kbx"&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -fsO "https://nodejs.org/dist/${VERSION}/SHASUMS256.txt.asc" \
&amp;amp;&amp;amp; gpgv --keyring="/path/to/nodejs-keyring.kbx" --output SHASUMS256.txt &amp;lt; SHASUMS256.txt.asc \
&amp;amp;&amp;amp; shasum --check SHASUMS256.txt --ignore-missing
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building Node.js&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/BUILDING.md"&gt;BUILDING.md&lt;/a&gt; for instructions on how to build Node.js from source and a list of supported platforms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For information on reporting security vulnerabilities in Node.js, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing to Node.js&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/CONTRIBUTING.md"&gt;Contributing to the project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nodejs/TSC/raw/HEAD/WORKING_GROUPS.md"&gt;Working Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/strategic-initiatives.md"&gt;Strategic initiatives&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/technical-values.md"&gt;Technical values and prioritization&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Current project team members&lt;/h2&gt; 
&lt;p&gt;For information about the governance of the Node.js project, see &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/GOVERNANCE.md"&gt;GOVERNANCE.md&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- node-core-utils and find-inactive-tsc.mjs depend on the format of the TSC
     list. If the format changes, those utilities need to be tested and
     updated. --&gt; 
&lt;h3&gt;TSC (Technical Steering Committee)&lt;/h3&gt; 
&lt;h4&gt;TSC voting members&lt;/h4&gt; 
&lt;!--lint disable prohibited-strings--&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;TSC regular members&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;TSC emeriti members&lt;/summary&gt; 
 &lt;h4&gt;TSC emeriti members&lt;/h4&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nebrius"&gt;nebrius&lt;/a&gt; - &lt;strong&gt;Bryan Hughes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@nebri.us"&gt;bryan@nebri.us&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r@va.gg"&gt;r@va.gg&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!-- node-core-utils and find-inactive-collaborators.mjs depend on the format
     of the collaborator list. If the format changes, those utilities need to be
     tested and updated. --&gt; 
&lt;h3&gt;Collaborators&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/abmusse"&gt;abmusse&lt;/a&gt; - &lt;strong&gt;Abdirahim Musse&lt;/strong&gt; &amp;lt;&lt;a href="mailto:abdirahim.musse@ibm.com"&gt;abdirahim.musse@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/addaleax"&gt;addaleax&lt;/a&gt; - &lt;strong&gt;Anna Henningsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna@addaleax.net"&gt;anna@addaleax.net&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aditi-1400"&gt;Aditi-1400&lt;/a&gt; - &lt;strong&gt;Aditi Singh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:aditisingh1400@gmail.com"&gt;aditisingh1400@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aduh95"&gt;aduh95&lt;/a&gt; - &lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/aduh95"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anonrig"&gt;anonrig&lt;/a&gt; - &lt;strong&gt;Yagiz Nizipli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yagiz@nizipli.com"&gt;yagiz@nizipli.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/anonrig"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/benjamingr"&gt;benjamingr&lt;/a&gt; - &lt;strong&gt;Benjamin Gruenbaum&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benjamingr@gmail.com"&gt;benjamingr@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BethGriggs"&gt;BethGriggs&lt;/a&gt; - &lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnb"&gt;bnb&lt;/a&gt; - &lt;strong&gt;Tierney Cyren&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@bnb.im"&gt;hello@bnb.im&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bnoordhuis"&gt;bnoordhuis&lt;/a&gt; - &lt;strong&gt;Ben Noordhuis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:info@bnoordhuis.nl"&gt;info@bnoordhuis.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BridgeAR"&gt;BridgeAR&lt;/a&gt; - &lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cclauss"&gt;cclauss&lt;/a&gt; - &lt;strong&gt;Christian Clauss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cclauss@me.com"&gt;cclauss@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cjihrig"&gt;cjihrig&lt;/a&gt; - &lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codebytere"&gt;codebytere&lt;/a&gt; - &lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cola119"&gt;cola119&lt;/a&gt; - &lt;strong&gt;Kohei Ueno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kohei.ueno119@gmail.com"&gt;kohei.ueno119@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dario-piotrowicz"&gt;dario-piotrowicz&lt;/a&gt; - &lt;strong&gt;Dario Piotrowicz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dario.piotrowicz@gmail.com"&gt;dario.piotrowicz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/debadree25"&gt;debadree25&lt;/a&gt; - &lt;strong&gt;Debadree Chatterjee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:debadree333@gmail.com"&gt;debadree333@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/deokjinkim"&gt;deokjinkim&lt;/a&gt; - &lt;strong&gt;Deokjin Kim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deokjin81.kim@gmail.com"&gt;deokjin81.kim@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/edsadr"&gt;edsadr&lt;/a&gt; - &lt;strong&gt;Adrian Estrada&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edsadr@gmail.com"&gt;edsadr@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ErickWendel"&gt;ErickWendel&lt;/a&gt; - &lt;strong&gt;Erick Wendel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:erick.workspace@gmail.com"&gt;erick.workspace@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ethan-Arrowood"&gt;Ethan-Arrowood&lt;/a&gt; - &lt;strong&gt;Ethan Arrowood&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ethan@arrowood.dev"&gt;ethan@arrowood.dev&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fhinkel"&gt;fhinkel&lt;/a&gt; - &lt;strong&gt;Franziska Hinkelmann&lt;/strong&gt; &amp;lt;&lt;a href="mailto:franziska.hinkelmann@gmail.com"&gt;franziska.hinkelmann@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Flarna"&gt;Flarna&lt;/a&gt; - &lt;strong&gt;Gerhard Stöbich&lt;/strong&gt; &amp;lt;&lt;a href="mailto:deb2001-github@yahoo.de"&gt;deb2001-github@yahoo.de&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gabrielschulhof"&gt;gabrielschulhof&lt;/a&gt; - &lt;strong&gt;Gabriel Schulhof&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gabrielschulhof@gmail.com"&gt;gabrielschulhof@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/geeksilva97"&gt;geeksilva97&lt;/a&gt; - &lt;strong&gt;Edy Silva&lt;/strong&gt; &amp;lt;&lt;a href="mailto:edigleyssonsilva@gmail.com"&gt;edigleyssonsilva@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gengjiawen"&gt;gengjiawen&lt;/a&gt; - &lt;strong&gt;Jiawen Geng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:technicalcute@gmail.com"&gt;technicalcute@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GeoffreyBooth"&gt;GeoffreyBooth&lt;/a&gt; - &lt;strong&gt;Geoffrey Booth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:webadmin@geoffreybooth.com"&gt;webadmin@geoffreybooth.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/guybedford"&gt;guybedford&lt;/a&gt; - &lt;strong&gt;Guy Bedford&lt;/strong&gt; &amp;lt;&lt;a href="mailto:guybedford@gmail.com"&gt;guybedford@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/H4ad"&gt;H4ad&lt;/a&gt; - &lt;strong&gt;Vinícius Lourenço Claro Cardoso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:contact@viniciusl.com.br"&gt;contact@viniciusl.com.br&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HarshithaKP"&gt;HarshithaKP&lt;/a&gt; - &lt;strong&gt;Harshitha K P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:harshitha014@gmail.com"&gt;harshitha014@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/himself65"&gt;himself65&lt;/a&gt; - &lt;strong&gt;Zeyu "Alex" Yang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:himself65@outlook.com"&gt;himself65@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IlyasShabi"&gt;IlyasShabi&lt;/a&gt; - &lt;strong&gt;Ilyas Shabi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilyasshabi94@gmail.com"&gt;ilyasshabi94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/islandryu"&gt;islandryu&lt;/a&gt; - &lt;strong&gt;Ryuhei Shima&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shimaryuhei@gmail.com"&gt;shimaryuhei@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jakecastelli"&gt;jakecastelli&lt;/a&gt; - &lt;strong&gt;Jake Yuesong Li&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jake.yuesong@gmail.com"&gt;jake.yuesong@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JakobJingleheimer"&gt;JakobJingleheimer&lt;/a&gt; - &lt;strong&gt;Jacob Smith&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jacob@frende.me"&gt;jacob@frende.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jasnell"&gt;jasnell&lt;/a&gt; - &lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@gmail.com"&gt;jasnell@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jazelly"&gt;jazelly&lt;/a&gt; - &lt;strong&gt;Jason Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:xzha4350@gmail.com"&gt;xzha4350@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jkrems"&gt;jkrems&lt;/a&gt; - &lt;strong&gt;Jan Martin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jan.krems@gmail.com"&gt;jan.krems@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JonasBa"&gt;JonasBa&lt;/a&gt; - &lt;strong&gt;Jonas Badalic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jonas.badalic@gmail.com"&gt;jonas.badalic@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joyeecheung"&gt;joyeecheung&lt;/a&gt; - &lt;strong&gt;Joyee Cheung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joyeec9h3@gmail.com"&gt;joyeec9h3@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JungMinu"&gt;JungMinu&lt;/a&gt; - &lt;strong&gt;Minwoo Jung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:nodecorelab@gmail.com"&gt;nodecorelab@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KhafraDev"&gt;KhafraDev&lt;/a&gt; - &lt;strong&gt;Matthew Aitken&lt;/strong&gt; &amp;lt;&lt;a href="mailto:maitken033380023@gmail.com"&gt;maitken033380023@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/legendecas"&gt;legendecas&lt;/a&gt; - &lt;strong&gt;Chengzhong Wu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:legendecas@gmail.com"&gt;legendecas@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lemire"&gt;lemire&lt;/a&gt; - &lt;strong&gt;Daniel Lemire&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel@lemire.me"&gt;daniel@lemire.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LiviaMedeiros"&gt;LiviaMedeiros&lt;/a&gt; - &lt;strong&gt;LiviaMedeiros&lt;/strong&gt; &amp;lt;&lt;a href="mailto:livia@cirno.name"&gt;livia@cirno.name&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ljharb"&gt;ljharb&lt;/a&gt; - &lt;strong&gt;Jordan Harband&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ljharb@gmail.com"&gt;ljharb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lpinca"&gt;lpinca&lt;/a&gt; - &lt;strong&gt;Luigi Pinca&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luigipinca@gmail.com"&gt;luigipinca@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukekarrys"&gt;lukekarrys&lt;/a&gt; - &lt;strong&gt;Luke Karrys&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luke@lukekarrys.com"&gt;luke@lukekarrys.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lxxyx"&gt;Lxxyx&lt;/a&gt; - &lt;strong&gt;Zijian Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxxyxzj@gmail.com"&gt;lxxyxzj@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/marco-ippolito"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MattiasBuelens"&gt;MattiasBuelens&lt;/a&gt; - &lt;strong&gt;Mattias Buelens&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattias@buelens.com"&gt;mattias@buelens.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/mcollina"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MoLow"&gt;MoLow&lt;/a&gt; - &lt;strong&gt;Moshe Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:moshe@atlow.co.il"&gt;moshe@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MrJithil"&gt;MrJithil&lt;/a&gt; - &lt;strong&gt;Jithil P Ponnan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jithil@outlook.com"&gt;jithil@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ovflowd"&gt;ovflowd&lt;/a&gt; - &lt;strong&gt;Claudio Wunder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cwunder@gnome.org"&gt;cwunder@gnome.org&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/panva"&gt;panva&lt;/a&gt; - &lt;strong&gt;Filip Skokan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:panva.ip@gmail.com"&gt;panva.ip@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/panva"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pimterry"&gt;pimterry&lt;/a&gt; - &lt;strong&gt;Tim Perry&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pimterry@gmail.com"&gt;pimterry@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pmarchini"&gt;pmarchini&lt;/a&gt; - &lt;strong&gt;Pietro Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pietro.marchini94@gmail.com"&gt;pietro.marchini94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/puskin"&gt;puskin&lt;/a&gt; - &lt;strong&gt;Giovanni Bucci&lt;/strong&gt; &amp;lt;&lt;a href="mailto:github@puskin.it"&gt;github@puskin.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Qard"&gt;Qard&lt;/a&gt; - &lt;strong&gt;Stephen Belanger&lt;/strong&gt; &amp;lt;&lt;a href="mailto:admin@stephenbelanger.com"&gt;admin@stephenbelanger.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RafaelGSS"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him) - &lt;a href="https://github.com/sponsors/RaisinTen"&gt;Support me&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardlau"&gt;richardlau&lt;/a&gt; - &lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rluvaton"&gt;rluvaton&lt;/a&gt; - &lt;strong&gt;Raz Luvaton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rluvaton@gmail.com"&gt;rluvaton@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ronag"&gt;ronag&lt;/a&gt; - &lt;strong&gt;Robert Nagy&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ronagy@icloud.com"&gt;ronagy@icloud.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ruyadorno"&gt;ruyadorno&lt;/a&gt; - &lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruy@vlt.sh"&gt;ruy@vlt.sh&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/santigimeno"&gt;santigimeno&lt;/a&gt; - &lt;strong&gt;Santiago Gimeno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:santiago.gimeno@gmail.com"&gt;santiago.gimeno@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ShogunPanda"&gt;ShogunPanda&lt;/a&gt; - &lt;strong&gt;Paolo Insogna&lt;/strong&gt; &amp;lt;&lt;a href="mailto:paolo@cowtech.it"&gt;paolo@cowtech.it&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/srl295"&gt;srl295&lt;/a&gt; - &lt;strong&gt;Steven R Loomis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:srl295@gmail.com"&gt;srl295@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/StefanStojanovic"&gt;StefanStojanovic&lt;/a&gt; - &lt;strong&gt;Stefan Stojanovic&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan.stojanovic@janeasystems.com"&gt;stefan.stojanovic@janeasystems.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sxa"&gt;sxa&lt;/a&gt; - &lt;strong&gt;Stewart X Addison&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sxa@redhat.com"&gt;sxa@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/targos"&gt;targos&lt;/a&gt; - &lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/theanarkh"&gt;theanarkh&lt;/a&gt; - &lt;strong&gt;theanarkh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:theratliter@gmail.com"&gt;theratliter@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tniessen"&gt;tniessen&lt;/a&gt; - &lt;strong&gt;Tobias Nießen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tniessen@tnie.de"&gt;tniessen@tnie.de&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/trivikr"&gt;trivikr&lt;/a&gt; - &lt;strong&gt;Trivikram Kamat&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trivikr.dev@gmail.com"&gt;trivikr.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Trott"&gt;Trott&lt;/a&gt; - &lt;strong&gt;Rich Trott&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rtrott@gmail.com"&gt;rtrott@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UlisesGascon"&gt;UlisesGascon&lt;/a&gt; - &lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vmoroz"&gt;vmoroz&lt;/a&gt; - &lt;strong&gt;Vladimir Morozov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vmorozov@microsoft.com"&gt;vmorozov@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zcbenz"&gt;zcbenz&lt;/a&gt; - &lt;strong&gt;Cheng Zhao&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zcbenz@gmail.com"&gt;zcbenz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ZYSzys"&gt;ZYSzys&lt;/a&gt; - &lt;strong&gt;Yongsheng Zhang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:zyszys98@gmail.com"&gt;zyszys98@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;Emeriti&lt;/summary&gt; 
 &lt;!-- find-inactive-collaborators.mjs depends on the format of the emeriti list.
     If the format changes, those utilities need to be tested and updated. --&gt; 
 &lt;h3&gt;Collaborator emeriti&lt;/h3&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ak239"&gt;ak239&lt;/a&gt; - &lt;strong&gt;Aleksei Koziatinskii&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ak239spb@gmail.com"&gt;ak239spb@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andrasq"&gt;andrasq&lt;/a&gt; - &lt;strong&gt;Andras&lt;/strong&gt; &amp;lt;&lt;a href="mailto:andras@kinvey.com"&gt;andras@kinvey.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AndreasMadsen"&gt;AndreasMadsen&lt;/a&gt; - &lt;strong&gt;Andreas Madsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:amwebdk@gmail.com"&gt;amwebdk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AnnaMag"&gt;AnnaMag&lt;/a&gt; - &lt;strong&gt;Anna M. Kedzierska&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anna.m.kedzierska@gmail.com"&gt;anna.m.kedzierska@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/antsmartian"&gt;antsmartian&lt;/a&gt; - &lt;strong&gt;Anto Aravinth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:anto.aravinth.cse@gmail.com"&gt;anto.aravinth.cse@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/apapirovski"&gt;apapirovski&lt;/a&gt; - &lt;strong&gt;Anatoli Papirovski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apapirovski@mac.com"&gt;apapirovski@mac.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aqrln"&gt;aqrln&lt;/a&gt; - &lt;strong&gt;Alexey Orlenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eaglexrlnk@gmail.com"&gt;eaglexrlnk@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AshCripps"&gt;AshCripps&lt;/a&gt; - &lt;strong&gt;Ash Cripps&lt;/strong&gt; &amp;lt;&lt;a href="mailto:email@ashleycripps.co.uk"&gt;email@ashleycripps.co.uk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bcoe"&gt;bcoe&lt;/a&gt; - &lt;strong&gt;Ben Coe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bencoe@gmail.com"&gt;bencoe@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeck"&gt;bmeck&lt;/a&gt; - &lt;strong&gt;Bradley Farias&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bradley.meck@gmail.com"&gt;bradley.meck@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmeurer"&gt;bmeurer&lt;/a&gt; - &lt;strong&gt;Benedikt Meurer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:benedikt.meurer@gmail.com"&gt;benedikt.meurer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/boneskull"&gt;boneskull&lt;/a&gt; - &lt;strong&gt;Christopher Hiller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:boneskull@boneskull.com"&gt;boneskull@boneskull.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/brendanashworth"&gt;brendanashworth&lt;/a&gt; - &lt;strong&gt;Brendan Ashworth&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brendan.ashworth@me.com"&gt;brendan.ashworth@me.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bzoz"&gt;bzoz&lt;/a&gt; - &lt;strong&gt;Bartosz Sosnowski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bartosz@janeasystems.com"&gt;bartosz@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/calvinmetcalf"&gt;calvinmetcalf&lt;/a&gt; - &lt;strong&gt;Calvin Metcalf&lt;/strong&gt; &amp;lt;&lt;a href="mailto:calvin.metcalf@gmail.com"&gt;calvin.metcalf@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ChALkeR"&gt;ChALkeR&lt;/a&gt; - &lt;strong&gt;Сковорода Никита Андреевич&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chalkerx@gmail.com"&gt;chalkerx@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chrisdickinson"&gt;chrisdickinson&lt;/a&gt; - &lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/claudiorodriguez"&gt;claudiorodriguez&lt;/a&gt; - &lt;strong&gt;Claudio Rodriguez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjrodr@yahoo.com"&gt;cjrodr@yahoo.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danbev"&gt;danbev&lt;/a&gt; - &lt;strong&gt;Daniel Bevenius&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daniel.bevenius@gmail.com"&gt;daniel.bevenius@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danielleadams"&gt;danielleadams&lt;/a&gt; - &lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/DavidCai1993"&gt;DavidCai1993&lt;/a&gt; - &lt;strong&gt;David Cai&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davidcai1993@yahoo.com"&gt;davidcai1993@yahoo.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/davisjam"&gt;davisjam&lt;/a&gt; - &lt;strong&gt;Jamie Davis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:davisjam@vt.edu"&gt;davisjam@vt.edu&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devnexen"&gt;devnexen&lt;/a&gt; - &lt;strong&gt;David Carlier&lt;/strong&gt; &amp;lt;&lt;a href="mailto:devnexen@gmail.com"&gt;devnexen@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/devsnek"&gt;devsnek&lt;/a&gt; - &lt;strong&gt;Gus Caplan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@gus.host"&gt;me@gus.host&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/digitalinfinity"&gt;digitalinfinity&lt;/a&gt; - &lt;strong&gt;Hitesh Kanwathirtha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:digitalinfinity@gmail.com"&gt;digitalinfinity@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dmabupt"&gt;dmabupt&lt;/a&gt; - &lt;strong&gt;Xu Meng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dmabupt@gmail.com"&gt;dmabupt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dnlup"&gt;dnlup&lt;/a&gt; - &lt;strong&gt;dnlup&lt;/strong&gt; &amp;lt;&lt;a href="mailto:dnlup.dev@gmail.com"&gt;dnlup.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eljefedelrodeodeljefe"&gt;eljefedelrodeodeljefe&lt;/a&gt; - &lt;strong&gt;Robert Jefe Lindstaedt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:robert.lindstaedt@gmail.com"&gt;robert.lindstaedt@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/estliberitas"&gt;estliberitas&lt;/a&gt; - &lt;strong&gt;Alexander Makarenko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:estliberitas@gmail.com"&gt;estliberitas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eugeneo"&gt;eugeneo&lt;/a&gt; - &lt;strong&gt;Eugene Ostroukhov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:eostroukhov@google.com"&gt;eostroukhov@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/evanlucas"&gt;evanlucas&lt;/a&gt; - &lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/firedfox"&gt;firedfox&lt;/a&gt; - &lt;strong&gt;Daniel Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wangyang0123@gmail.com"&gt;wangyang0123@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Fishrock123"&gt;Fishrock123&lt;/a&gt; - &lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock123@rocketmail.com"&gt;fishrock123@rocketmail.com&lt;/a&gt;&amp;gt; (he/they)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gdams"&gt;gdams&lt;/a&gt; - &lt;strong&gt;George Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gadams@microsoft.com"&gt;gadams@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/geek"&gt;geek&lt;/a&gt; - &lt;strong&gt;Wyatt Preul&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wpreul@gmail.com"&gt;wpreul@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gibfahn"&gt;gibfahn&lt;/a&gt; - &lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/glentiki"&gt;glentiki&lt;/a&gt; - &lt;strong&gt;Glen Keane&lt;/strong&gt; &amp;lt;&lt;a href="mailto:glenkeane.94@gmail.com"&gt;glenkeane.94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hashseed"&gt;hashseed&lt;/a&gt; - &lt;strong&gt;Yang Guo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yangguo@chromium.org"&gt;yangguo@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hiroppy"&gt;hiroppy&lt;/a&gt; - &lt;strong&gt;Yuta Hiroto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hello@hiroppy.me"&gt;hello@hiroppy.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iansu"&gt;iansu&lt;/a&gt; - &lt;strong&gt;Ian Sutherland&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ian@iansutherland.ca"&gt;ian@iansutherland.ca&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iarna"&gt;iarna&lt;/a&gt; - &lt;strong&gt;Rebecca Turner&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@re-becca.org"&gt;me@re-becca.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imran-iq"&gt;imran-iq&lt;/a&gt; - &lt;strong&gt;Imran Iqbal&lt;/strong&gt; &amp;lt;&lt;a href="mailto:imran@imraniqbal.org"&gt;imran@imraniqbal.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imyller"&gt;imyller&lt;/a&gt; - &lt;strong&gt;Ilkka Myller&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ilkka.myller@nodefield.com"&gt;ilkka.myller@nodefield.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/indutny"&gt;indutny&lt;/a&gt; - &lt;strong&gt;Fedor Indutny&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fedor@indutny.com"&gt;fedor@indutny.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isaacs"&gt;isaacs&lt;/a&gt; - &lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/italoacasas"&gt;italoacasas&lt;/a&gt; - &lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/JacksonTian"&gt;JacksonTian&lt;/a&gt; - &lt;strong&gt;Jackson Tian&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shyvo1987@gmail.com"&gt;shyvo1987@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jasongin"&gt;jasongin&lt;/a&gt; - &lt;strong&gt;Jason Ginchereau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasongin@microsoft.com"&gt;jasongin@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jbergstroem"&gt;jbergstroem&lt;/a&gt; - &lt;strong&gt;Johan Bergström&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bugs@bergstroem.nu"&gt;bugs@bergstroem.nu&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jdalton"&gt;jdalton&lt;/a&gt; - &lt;strong&gt;John-David Dalton&lt;/strong&gt; &amp;lt;&lt;a href="mailto:john.david.dalton@gmail.com"&gt;john.david.dalton@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jhamhader"&gt;jhamhader&lt;/a&gt; - &lt;strong&gt;Yuval Brik&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yuval@brik.org.il"&gt;yuval@brik.org.il&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joaocgreis"&gt;joaocgreis&lt;/a&gt; - &lt;strong&gt;João Reis&lt;/strong&gt; &amp;lt;&lt;a href="mailto:reis@janeasystems.com"&gt;reis@janeasystems.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sepi@joesepi.com"&gt;sepi@joesepi.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joshgav"&gt;joshgav&lt;/a&gt; - &lt;strong&gt;Josh Gavant&lt;/strong&gt; &amp;lt;&lt;a href="mailto:josh.gavant@outlook.com"&gt;josh.gavant@outlook.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/julianduque"&gt;julianduque&lt;/a&gt; - &lt;strong&gt;Julian Duque&lt;/strong&gt; &amp;lt;&lt;a href="mailto:julianduquej@gmail.com"&gt;julianduquej@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kfarnung"&gt;kfarnung&lt;/a&gt; - &lt;strong&gt;Kyle Farnung&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kfarnung@microsoft.com"&gt;kfarnung@microsoft.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kunalspathak"&gt;kunalspathak&lt;/a&gt; - &lt;strong&gt;Kunal Pathak&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kunal.pathak@microsoft.com"&gt;kunal.pathak@microsoft.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kuriyosh"&gt;kuriyosh&lt;/a&gt; - &lt;strong&gt;Yoshiki Kurihara&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosyos0306@gmail.com"&gt;yosyos0306@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kvakil"&gt;kvakil&lt;/a&gt; - &lt;strong&gt;Keyhan Vakil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kvakil@sylph.kvakil.me"&gt;kvakil@sylph.kvakil.me&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lance"&gt;lance&lt;/a&gt; - &lt;strong&gt;Lance Ball&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lball@redhat.com"&gt;lball@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Leko"&gt;Leko&lt;/a&gt; - &lt;strong&gt;Shingo Inoue&lt;/strong&gt; &amp;lt;&lt;a href="mailto:leko.noor@gmail.com"&gt;leko.noor@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Linkgoron"&gt;Linkgoron&lt;/a&gt; - &lt;strong&gt;Nitzan Uziely&lt;/strong&gt; &amp;lt;&lt;a href="mailto:linkgoron@gmail.com"&gt;linkgoron@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lucamaraschi"&gt;lucamaraschi&lt;/a&gt; - &lt;strong&gt;Luca Maraschi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:luca.maraschi@gmail.com"&gt;luca.maraschi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lundibundi"&gt;lundibundi&lt;/a&gt; - &lt;strong&gt;Denys Otrishko&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shishugi@gmail.com"&gt;shishugi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lxe"&gt;lxe&lt;/a&gt; - &lt;strong&gt;Aleksey Smolenchuk&lt;/strong&gt; &amp;lt;&lt;a href="mailto:lxe@lxe.co"&gt;lxe@lxe.co&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maclover7"&gt;maclover7&lt;/a&gt; - &lt;strong&gt;Jon Moss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@jonathanmoss.me"&gt;me@jonathanmoss.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mafintosh"&gt;mafintosh&lt;/a&gt; - &lt;strong&gt;Mathias Buus&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mathiasbuus@gmail.com"&gt;mathiasbuus@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/matthewloring"&gt;matthewloring&lt;/a&gt; - &lt;strong&gt;Matthew Loring&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mattloring@google.com"&gt;mattloring@google.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Mesteery"&gt;Mesteery&lt;/a&gt; - &lt;strong&gt;Mestery&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mestery@protonmail.com"&gt;mestery@protonmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/micnic"&gt;micnic&lt;/a&gt; - &lt;strong&gt;Nicu Micleușanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:micnic90@gmail.com"&gt;micnic90@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mikeal"&gt;mikeal&lt;/a&gt; - &lt;strong&gt;Mikeal Rogers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mikeal.rogers@gmail.com"&gt;mikeal.rogers@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/miladfarca"&gt;miladfarca&lt;/a&gt; - &lt;strong&gt;Milad Fa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mfarazma@redhat.com"&gt;mfarazma@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mildsunrise"&gt;mildsunrise&lt;/a&gt; - &lt;strong&gt;Alba Mendez&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@alba.sh"&gt;me@alba.sh&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/misterdjules"&gt;misterdjules&lt;/a&gt; - &lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@netflix.com"&gt;jgilli@netflix.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mmarchini"&gt;mmarchini&lt;/a&gt; - &lt;strong&gt;Mary Marchini&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oss@mmarchini.me"&gt;oss@mmarchini.me&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/monsanto"&gt;monsanto&lt;/a&gt; - &lt;strong&gt;Christopher Monsanto&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chris@monsan.to"&gt;chris@monsan.to&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MoonBall"&gt;MoonBall&lt;/a&gt; - &lt;strong&gt;Chen Gang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gangc.cxy@foxmail.com"&gt;gangc.cxy@foxmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mscdex"&gt;mscdex&lt;/a&gt; - &lt;strong&gt;Brian White&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mscdex@mscdex.net"&gt;mscdex@mscdex.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MylesBorins"&gt;MylesBorins&lt;/a&gt; - &lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/not-an-aardvark"&gt;not-an-aardvark&lt;/a&gt; - &lt;strong&gt;Teddy Katz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:teddy.katz@gmail.com"&gt;teddy.katz@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ofrobots"&gt;ofrobots&lt;/a&gt; - &lt;strong&gt;Ali Ijaz Sheikh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ofrobots@google.com"&gt;ofrobots@google.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Olegas"&gt;Olegas&lt;/a&gt; - &lt;strong&gt;Oleg Elifantiev&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oleg@elifantiev.ru"&gt;oleg@elifantiev.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orangemocha"&gt;orangemocha&lt;/a&gt; - &lt;strong&gt;Alexis Campailla&lt;/strong&gt; &amp;lt;&lt;a href="mailto:orangemocha@nodejs.org"&gt;orangemocha@nodejs.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/othiym23"&gt;othiym23&lt;/a&gt; - &lt;strong&gt;Forrest L Norvell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ogd@aoaioxxysz.net"&gt;ogd@aoaioxxysz.net&lt;/a&gt;&amp;gt; (they/them/themself)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/oyyd"&gt;oyyd&lt;/a&gt; - &lt;strong&gt;Ouyang Yadong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:oyydoibh@gmail.com"&gt;oyydoibh@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/petkaantonov"&gt;petkaantonov&lt;/a&gt; - &lt;strong&gt;Petka Antonov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petka_antonov@hotmail.com"&gt;petka_antonov@hotmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/phillipj"&gt;phillipj&lt;/a&gt; - &lt;strong&gt;Phillip Johnsen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:johphi@gmail.com"&gt;johphi@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/piscisaureus"&gt;piscisaureus&lt;/a&gt; - &lt;strong&gt;Bert Belder&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bertbelder@gmail.com"&gt;bertbelder@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pmq20"&gt;pmq20&lt;/a&gt; - &lt;strong&gt;Minqi Pan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:pmq2001@gmail.com"&gt;pmq2001@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PoojaDurgad"&gt;PoojaDurgad&lt;/a&gt; - &lt;strong&gt;Pooja D P&lt;/strong&gt; &amp;lt;&lt;a href="mailto:Pooja.D.P@ibm.com"&gt;Pooja.D.P@ibm.com&lt;/a&gt;&amp;gt; (she/her)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/princejwesley"&gt;princejwesley&lt;/a&gt; - &lt;strong&gt;Prince John Wesley&lt;/strong&gt; &amp;lt;&lt;a href="mailto:princejohnwesley@gmail.com"&gt;princejohnwesley@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/psmarshall"&gt;psmarshall&lt;/a&gt; - &lt;strong&gt;Peter Marshall&lt;/strong&gt; &amp;lt;&lt;a href="mailto:petermarshall@chromium.org"&gt;petermarshall@chromium.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/puzpuzpuz"&gt;puzpuzpuz&lt;/a&gt; - &lt;strong&gt;Andrey Pechkurov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:apechkurov@gmail.com"&gt;apechkurov@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/refack"&gt;refack&lt;/a&gt; - &lt;strong&gt;Refael Ackermann (רפאל פלחי)&lt;/strong&gt; &amp;lt;&lt;a href="mailto:refack@gmail.com"&gt;refack@gmail.com&lt;/a&gt;&amp;gt; (he/him/הוא/אתה)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rexagod"&gt;rexagod&lt;/a&gt; - &lt;strong&gt;Pranshu Srivastava&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rexagod@gmail.com"&gt;rexagod@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rickyes"&gt;rickyes&lt;/a&gt; - &lt;strong&gt;Ricky Zhou&lt;/strong&gt; &amp;lt;&lt;a href="mailto:0x19951125@gmail.com"&gt;0x19951125@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rlidwka"&gt;rlidwka&lt;/a&gt; - &lt;strong&gt;Alex Kocharin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:alex@kocharin.ru"&gt;alex@kocharin.ru&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rmg"&gt;rmg&lt;/a&gt; - &lt;strong&gt;Ryan Graham&lt;/strong&gt; &amp;lt;&lt;a href="mailto:r.m.graham@gmail.com"&gt;r.m.graham@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/robertkowalski"&gt;robertkowalski&lt;/a&gt; - &lt;strong&gt;Robert Kowalski&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rok@kowalski.gd"&gt;rok@kowalski.gd&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/romankl"&gt;romankl&lt;/a&gt; - &lt;strong&gt;Roman Klauke&lt;/strong&gt; &amp;lt;&lt;a href="mailto:romaaan.git@gmail.com"&gt;romaaan.git@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ronkorving"&gt;ronkorving&lt;/a&gt; - &lt;strong&gt;Ron Korving&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ron@ronkorving.nl"&gt;ron@ronkorving.nl&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/RReverser"&gt;RReverser&lt;/a&gt; - &lt;strong&gt;Ingvar Stepanyan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@rreverser.com"&gt;me@rreverser.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rubys"&gt;rubys&lt;/a&gt; - &lt;strong&gt;Sam Ruby&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rubys@intertwingly.net"&gt;rubys@intertwingly.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rvagg"&gt;rvagg&lt;/a&gt; - &lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ryzokuken"&gt;ryzokuken&lt;/a&gt; - &lt;strong&gt;Ujjwal Sharma&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ryzokuken@disroot.org"&gt;ryzokuken@disroot.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/saghul"&gt;saghul&lt;/a&gt; - &lt;strong&gt;Saúl Ibarra Corretgé&lt;/strong&gt; &amp;lt;&lt;a href="mailto:s@saghul.net"&gt;s@saghul.net&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sam-github"&gt;sam-github&lt;/a&gt; - &lt;strong&gt;Sam Roberts&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vieuxtech@gmail.com"&gt;vieuxtech@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sebdeckers"&gt;sebdeckers&lt;/a&gt; - &lt;strong&gt;Sebastiaan Deckers&lt;/strong&gt; &amp;lt;&lt;a href="mailto:sebdeckers83@gmail.com"&gt;sebdeckers83@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/seishun"&gt;seishun&lt;/a&gt; - &lt;strong&gt;Nikolai Vavilov&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vvnicholas@gmail.com"&gt;vvnicholas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shigeki"&gt;shigeki&lt;/a&gt; - &lt;strong&gt;Shigeki Ohtsu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ohtsu@ohtsu.org"&gt;ohtsu@ohtsu.org&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shisama"&gt;shisama&lt;/a&gt; - &lt;strong&gt;Masashi Hirano&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shisama07@gmail.com"&gt;shisama07@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/silverwind"&gt;silverwind&lt;/a&gt; - &lt;strong&gt;Roman Reiss&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@silverwind.io"&gt;me@silverwind.io&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/starkwang"&gt;starkwang&lt;/a&gt; - &lt;strong&gt;Weijia Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:starkwang@126.com"&gt;starkwang@126.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/stefanmb"&gt;stefanmb&lt;/a&gt; - &lt;strong&gt;Stefan Budeanu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:stefan@budeanu.com"&gt;stefan@budeanu.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tellnes"&gt;tellnes&lt;/a&gt; - &lt;strong&gt;Christian Tellnes&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christian@tellnes.no"&gt;christian@tellnes.no&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thefourtheye"&gt;thefourtheye&lt;/a&gt; - &lt;strong&gt;Sakthipriyan Vairamani&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thechargingvolcano@gmail.com"&gt;thechargingvolcano@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thlorenz"&gt;thlorenz&lt;/a&gt; - &lt;strong&gt;Thorsten Lorenz&lt;/strong&gt; &amp;lt;&lt;a href="mailto:thlorenz@gmx.de"&gt;thlorenz@gmx.de&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TimothyGu"&gt;TimothyGu&lt;/a&gt; - &lt;strong&gt;Tiancheng "Timothy" Gu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:timothygu99@gmail.com"&gt;timothygu99@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/trevnorris"&gt;trevnorris&lt;/a&gt; - &lt;strong&gt;Trevor Norris&lt;/strong&gt; &amp;lt;&lt;a href="mailto:trev.norris@gmail.com"&gt;trev.norris@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tunniclm"&gt;tunniclm&lt;/a&gt; - &lt;strong&gt;Mike Tunnicliffe&lt;/strong&gt; &amp;lt;&lt;a href="mailto:m.j.tunnicliffe@gmail.com"&gt;m.j.tunnicliffe@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vdeturckheim"&gt;vdeturckheim&lt;/a&gt; - &lt;strong&gt;Vladimir de Turckheim&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vlad2t@hotmail.com"&gt;vlad2t@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vkurchatkin"&gt;vkurchatkin&lt;/a&gt; - &lt;strong&gt;Vladimir Kurchatkin&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vladimir.kurchatkin@gmail.com"&gt;vladimir.kurchatkin@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vsemozhetbyt"&gt;vsemozhetbyt&lt;/a&gt; - &lt;strong&gt;Vse Mozhet Byt&lt;/strong&gt; &amp;lt;&lt;a href="mailto:vsemozhetbyt@gmail.com"&gt;vsemozhetbyt@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watilde"&gt;watilde&lt;/a&gt; - &lt;strong&gt;Daijiro Wachi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daijiro.wachi@gmail.com"&gt;daijiro.wachi@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/watson"&gt;watson&lt;/a&gt; - &lt;strong&gt;Thomas Watson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:w@tson.dk"&gt;w@tson.dk&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/whitlockjc"&gt;whitlockjc&lt;/a&gt; - &lt;strong&gt;Jeremy Whitlock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jwhitlock@apache.org"&gt;jwhitlock@apache.org&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/XadillaX"&gt;XadillaX&lt;/a&gt; - &lt;strong&gt;Khaidi Chu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@2333.moe"&gt;i@2333.moe&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yashLadha"&gt;yashLadha&lt;/a&gt; - &lt;strong&gt;Yash Ladha&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yash@yashladha.in"&gt;yash@yashladha.in&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yhwang"&gt;yhwang&lt;/a&gt; - &lt;strong&gt;Yihong Wang&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yh.wang@ibm.com"&gt;yh.wang@ibm.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yorkie"&gt;yorkie&lt;/a&gt; - &lt;strong&gt;Yorkie Liu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yorkiefixer@gmail.com"&gt;yorkiefixer@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/yosuke-furukawa"&gt;yosuke-furukawa&lt;/a&gt; - &lt;strong&gt;Yosuke Furukawa&lt;/strong&gt; &amp;lt;&lt;a href="mailto:yosuke.furukawa@gmail.com"&gt;yosuke.furukawa@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;!--lint enable prohibited-strings--&gt; 
&lt;p&gt;Collaborators follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/collaborator-guide.md"&gt;Collaborator Guide&lt;/a&gt; in maintaining the Node.js project.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/1ilsang"&gt;1ilsang&lt;/a&gt; - &lt;strong&gt;Sangchul Lee&lt;/strong&gt; &amp;lt;&lt;a href="mailto:1ilsang.dev@gmail.com"&gt;1ilsang.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atlowChemi"&gt;atlowChemi&lt;/a&gt; - &lt;strong&gt;Chemi Atlow&lt;/strong&gt; &amp;lt;&lt;a href="mailto:chemi@atlow.co.il"&gt;chemi@atlow.co.il&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ayase-252"&gt;Ayase-252&lt;/a&gt; - &lt;strong&gt;Qingyu Deng&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@ayase-lab.com"&gt;i@ayase-lab.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bjohansebas"&gt;bjohansebas&lt;/a&gt; - &lt;strong&gt;Sebastian Beltran&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bjohansebas@gmail.com"&gt;bjohansebas@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bmuenzenmeyer"&gt;bmuenzenmeyer&lt;/a&gt; - &lt;strong&gt;Brian Muenzenmeyer&lt;/strong&gt; &amp;lt;&lt;a href="mailto:brian.muenzenmeyer@gmail.com"&gt;brian.muenzenmeyer@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CanadaHonk"&gt;CanadaHonk&lt;/a&gt; - &lt;strong&gt;Oliver Medhurst&lt;/strong&gt; &amp;lt;&lt;a href="mailto:honk@goose.icu"&gt;honk@goose.icu&lt;/a&gt;&amp;gt; (they/them)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/daeyeon"&gt;daeyeon&lt;/a&gt; - &lt;strong&gt;Daeyeon Jeong&lt;/strong&gt; &amp;lt;&lt;a href="mailto:daeyeon.dev@gmail.com"&gt;daeyeon.dev@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/F3n67u"&gt;F3n67u&lt;/a&gt; - &lt;strong&gt;Feng Yu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:F3n67u@outlook.com"&gt;F3n67u@outlook.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gireeshpunathil"&gt;gireeshpunathil&lt;/a&gt; - &lt;strong&gt;Gireesh Punathil&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gpunathi@in.ibm.com"&gt;gpunathi@in.ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gurgunday"&gt;gurgunday&lt;/a&gt; - &lt;strong&gt;Gürgün Dayıoğlu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hey@gurgun.day"&gt;hey@gurgun.day&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HBSPS"&gt;HBSPS&lt;/a&gt; - &lt;strong&gt;Wiyeong Seo&lt;/strong&gt; &amp;lt;&lt;a href="mailto:hbsps.dev@gmail.com"&gt;hbsps.dev@gmail.com&lt;/a&gt;&amp;gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iam-frankqiu"&gt;iam-frankqiu&lt;/a&gt; - &lt;strong&gt;Frank Qiu&lt;/strong&gt; &amp;lt;&lt;a href="mailto:iam.frankqiu@gmail.com"&gt;iam.frankqiu@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KevinEady"&gt;KevinEady&lt;/a&gt; - &lt;strong&gt;Kevin Eady&lt;/strong&gt; &amp;lt;&lt;a href="mailto:kevin.c.eady@gmail.com"&gt;kevin.c.eady@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marsonya"&gt;marsonya&lt;/a&gt; - &lt;strong&gt;Akhil Marsonya&lt;/strong&gt; &amp;lt;&lt;a href="mailto:akhil.marsonya27@gmail.com"&gt;akhil.marsonya27@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meixg"&gt;meixg&lt;/a&gt; - &lt;strong&gt;Xuguang Mei&lt;/strong&gt; &amp;lt;&lt;a href="mailto:meixuguang@gmail.com"&gt;meixuguang@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/milesguicent"&gt;milesguicent&lt;/a&gt; - &lt;strong&gt;Miles Guicent&lt;/strong&gt; &amp;lt;&lt;a href="mailto:guicent@pm.me"&gt;guicent@pm.me&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/preveen-stack"&gt;preveen-stack&lt;/a&gt; - &lt;strong&gt;Preveen Padmanabhan&lt;/strong&gt; &amp;lt;&lt;a href="mailto:wide4head@gmail.com"&gt;wide4head@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RaisinTen"&gt;RaisinTen&lt;/a&gt; - &lt;strong&gt;Darshan Sen&lt;/strong&gt; &amp;lt;&lt;a href="mailto:raisinten@gmail.com"&gt;raisinten@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VoltrexKeyva"&gt;VoltrexKeyva&lt;/a&gt; - &lt;strong&gt;Mohammed Keyvanzadeh&lt;/strong&gt; &amp;lt;&lt;a href="mailto:mohammadkeyvanzade94@gmail.com"&gt;mohammadkeyvanzade94@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Triagers follow the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/issues.md#triaging-a-bug-report"&gt;Triage Guide&lt;/a&gt; when responding to new issues.&lt;/p&gt; 
&lt;h3&gt;Release keys&lt;/h3&gt; 
&lt;p&gt;Primary GPG keys for Node.js Releasers (some Releasers sign with subkeys):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;5BE8A3F6C8A5C01D106C0AD820B1A390B168D356&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;CC68F5A3106FF448322E48ED27F5E38D5B0A215F&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Michaël Zasso&lt;/strong&gt; &amp;lt;&lt;a href="mailto:targos@protonmail.com"&gt;targos@protonmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Richard Lau&lt;/strong&gt; &amp;lt;&lt;a href="mailto:richard.lau@ibm.com"&gt;richard.lau@ibm.com&lt;/a&gt;&amp;gt; &lt;code&gt;C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ruy Adorno&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruyadorno@hotmail.com"&gt;ruyadorno@hotmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;108F52B48DB57BB0CC439B2997B01419BD92F80A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ulises Gascón&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ulisesgascongonzalez@gmail.com"&gt;ulisesgascongonzalez@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;A363A499291CBBC940DD62E41F10027AF002F8B0&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can use the keyring the project maintains at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg-only-active-keys/pubring.kbx&lt;/a&gt;. Alternatively, you can import them from a public key server. Have in mind that the project cannot guarantee the availability of the server nor the keys on that server.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gpg --keyserver hkps://keys.openpgp.org --recv-keys 5BE8A3F6C8A5C01D106C0AD820B1A390B168D356 # Antoine du Hamel
gpg --keyserver hkps://keys.openpgp.org --recv-keys DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 # Juan José Arboleda
gpg --keyserver hkps://keys.openpgp.org --recv-keys CC68F5A3106FF448322E48ED27F5E38D5B0A215F # Marco Ippolito
gpg --keyserver hkps://keys.openpgp.org --recv-keys 8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 # Michaël Zasso
gpg --keyserver hkps://keys.openpgp.org --recv-keys 890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 # Rafael Gonzaga
gpg --keyserver hkps://keys.openpgp.org --recv-keys C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C # Richard Lau
gpg --keyserver hkps://keys.openpgp.org --recv-keys 108F52B48DB57BB0CC439B2997B01419BD92F80A # Ruy Adorno
gpg --keyserver hkps://keys.openpgp.org --recv-keys A363A499291CBBC940DD62E41F10027AF002F8B0 # Ulises Gascón
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/#verifying-binaries"&gt;Verifying binaries&lt;/a&gt; for how to use these keys to verify a downloaded file.&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other keys used to sign some previous releases&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;strong&gt;Antoine du Hamel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:duhamelantoine1995@gmail.com"&gt;duhamelantoine1995@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C0D6248439F1D5604AAFFB4021D900FFDB233756&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Beth Griggs&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bethanyngriggs@gmail.com"&gt;bethanyngriggs@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;4ED778F539E3634C779C87C6D7062848A1AB005C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; &lt;code&gt;141F07595B7B3FFE74309A937405533BE57C7D57&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Chris Dickinson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:christopher.s.dickinson@gmail.com"&gt;christopher.s.dickinson@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;9554F04D7259F04124DE6B476D5A82AC7E37093B&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Colin Ihrig&lt;/strong&gt; &amp;lt;&lt;a href="mailto:cjihrig@gmail.com"&gt;cjihrig@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;94AE36675C464D64BAFA68DD7434390BDBE9B9C5&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Danielle Adams&lt;/strong&gt; &amp;lt;&lt;a href="mailto:adamzdanielle@gmail.com"&gt;adamzdanielle@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;1C050899334244A8AF75E53792EF661D867B9DFA&lt;/code&gt; &lt;code&gt;74F12602B6F1C4E913FAA37AD3A89613643B6201&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Evan Lucas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:evanlucas@me.com"&gt;evanlucas@me.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9AE9905FFD7803F25714661B63B535A4C206CA9&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Gibson Fahnestock&lt;/strong&gt; &amp;lt;&lt;a href="mailto:gibfahn@gmail.com"&gt;gibfahn@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;77984A986EBC2AA786BC0F66B01FBB92821C587A&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Isaac Z. Schlueter&lt;/strong&gt; &amp;lt;&lt;a href="mailto:i@izs.me"&gt;i@izs.me&lt;/a&gt;&amp;gt; &lt;code&gt;93C7E9E91B49E432C2F75674B0A78B0A6C481CF6&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Italo A. Casas&lt;/strong&gt; &amp;lt;&lt;a href="mailto:me@italoacasas.com"&gt;me@italoacasas.com&lt;/a&gt;&amp;gt; &lt;code&gt;56730D5401028683275BD23C23EFEFE93C4CFFFE&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;James M Snell&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jasnell@keybase.io"&gt;jasnell@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;71DCFD284A79C3B38668286BC97EC7A07EDE3FC1&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Jeremiah Senkpiel&lt;/strong&gt; &amp;lt;&lt;a href="mailto:fishrock@keybase.io"&gt;fishrock@keybase.io&lt;/a&gt;&amp;gt; &lt;code&gt;FD3A5288F042B6850C66B31F09FE44734EB7990E&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;61FC681DFB92A079F1685E77973F295594EC4689&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Julien Gilli&lt;/strong&gt; &amp;lt;&lt;a href="mailto:jgilli@fastmail.fm"&gt;jgilli@fastmail.fm&lt;/a&gt;&amp;gt; &lt;code&gt;114F43EE0176B71C7BC219DD50A3051F888C628D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Myles Borins&lt;/strong&gt; &amp;lt;&lt;a href="mailto:myles.borins@gmail.com"&gt;myles.borins@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Rod Vagg&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rod@vagg.org"&gt;rod@vagg.org&lt;/a&gt;&amp;gt; &lt;code&gt;DD8F2338BAE7501E3DD5AC78C273792F7D83545D&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Ruben Bridgewater&lt;/strong&gt; &amp;lt;&lt;a href="mailto:ruben@bridgewater.de"&gt;ruben@bridgewater.de&lt;/a&gt;&amp;gt; &lt;code&gt;A48C2BEE680E841632CD4E44F07496B3EB3C1762&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Shelley Vohr&lt;/strong&gt; &amp;lt;&lt;a href="mailto:shelley.vohr@gmail.com"&gt;shelley.vohr@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;B9E2F5981AA6E0CD28160D9FF13993A75599653C&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;strong&gt;Timothy J Fontaine&lt;/strong&gt; &amp;lt;&lt;a href="mailto:tjfontaine@gmail.com"&gt;tjfontaine@gmail.com&lt;/a&gt;&amp;gt; &lt;code&gt;7937DFD2AB06298B2293C3187D33FF9D0246406D&lt;/code&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;The project maintains a keyring able to verify all past releases of Node.js at &lt;a href="https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx"&gt;https://github.com/nodejs/release-keys/raw/refs/heads/main/gpg/pubring.kbx&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;h3&gt;Security release stewards&lt;/h3&gt; 
&lt;p&gt;When possible, the commitment to take slots in the security release steward rotation is made by companies in order to ensure individuals who act as security stewards have the support and recognition from their employer to be able to prioritize security releases. Security release stewards manage security releases on a rotation basis as outlined in the &lt;a href="https://raw.githubusercontent.com/nodejs/node/main/doc/contributing/security-release-process.md"&gt;security release process&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.datadoghq.com/"&gt;Datadog&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bengl"&gt;bengl&lt;/a&gt; - &lt;strong&gt;Bryan English&lt;/strong&gt; &amp;lt;&lt;a href="mailto:bryan@bryanenglish.com"&gt;bryan@bryanenglish.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.herodevs.com/"&gt;HeroDevs&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/marco-ippolito"&gt;marco-ippolito&lt;/a&gt; - &lt;strong&gt;Marco Ippolito&lt;/strong&gt; &amp;lt;&lt;a href="mailto:marcoippolito54@gmail.com"&gt;marcoippolito54@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodesource.com/"&gt;NodeSource&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/juanarbol"&gt;juanarbol&lt;/a&gt; - &lt;strong&gt;Juan José Arboleda&lt;/strong&gt; &amp;lt;&lt;a href="mailto:soyjuanarbol@gmail.com"&gt;soyjuanarbol@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/RafaelGSS"&gt;RafaelGSS&lt;/a&gt; - &lt;strong&gt;Rafael Gonzaga&lt;/strong&gt; &amp;lt;&lt;a href="mailto:rafael.nunu@hotmail.com"&gt;rafael.nunu@hotmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://platformatic.dev/"&gt;Platformatic&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mcollina"&gt;mcollina&lt;/a&gt; - &lt;strong&gt;Matteo Collina&lt;/strong&gt; &amp;lt;&lt;a href="mailto:matteo.collina@gmail.com"&gt;matteo.collina@gmail.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://redhat.com"&gt;Red Hat&lt;/a&gt; / &lt;a href="https://ibm.com"&gt;IBM&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/joesepi"&gt;joesepi&lt;/a&gt; - &lt;strong&gt;Joe Sepi&lt;/strong&gt; &amp;lt;&lt;a href="mailto:joesepi@ibm.com"&gt;joesepi@ibm.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mhdawson"&gt;mhdawson&lt;/a&gt; - &lt;strong&gt;Michael Dawson&lt;/strong&gt; &amp;lt;&lt;a href="mailto:midawson@redhat.com"&gt;midawson@redhat.com&lt;/a&gt;&amp;gt; (he/him)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Node.js is available under the &lt;a href="https://opensource.org/licenses/MIT"&gt;MIT License&lt;/a&gt;. Node.js also includes external libraries that are available under a variety of licenses. See &lt;a href="https://github.com/nodejs/node/raw/HEAD/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ruvnet/claude-flow</title>
      <link>https://github.com/ruvnet/claude-flow</link>
      <description>&lt;p&gt;🌊 The leading agent orchestration platform for Claude. Deploy intelligent multi-agent swarms, coordinate autonomous workflows, and build conversational AI systems. Features enterprise-grade architecture, distributed swarm intelligence, RAG integration, and native Claude Code support via MCP protocol. Ranked #1 in agent-based frameworks.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;🌊 Claude-Flow v2.5.0 Alpha 130: AI Orchestration Platform&lt;/h1&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/github/stars/ruvnet/claude-flow?style=for-the-badge&amp;amp;logo=github&amp;amp;color=gold" alt="🌟 Star on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/dt/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=blue&amp;amp;label=Downloads" alt="📈 Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/claude-flow"&gt;&lt;img src="https://img.shields.io/npm/v/claude-flow?style=for-the-badge&amp;amp;logo=npm&amp;amp;color=green&amp;amp;label=v2.5.0-alpha.130" alt="📦 Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Claude%20Code-SDK%20Integrated-green?style=for-the-badge&amp;amp;logo=anthropic" alt="⚡ Claude Code" /&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;&lt;img src="https://img.shields.io/badge/Agentics-Foundation-crimson?style=for-the-badge&amp;amp;logo=openai" alt="🏛️ Agentics Foundation" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Hive--Mind-AI%20Coordination-purple?style=for-the-badge&amp;amp;logo=swarm" alt="🐝 Hive-Mind" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ruvnet/claude-flow"&gt;&lt;img src="https://img.shields.io/badge/Neural-87%20MCP%20Tools-blue?style=for-the-badge&amp;amp;logo=pytorch" alt="🧠 Neural" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/License-MIT-yellow?style=for-the-badge&amp;amp;logo=opensourceinitiative" alt="🛡️ MIT License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🌟 &lt;strong&gt;Overview&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Claude-Flow v2 Alpha&lt;/strong&gt; is an enterprise-grade AI orchestration platform that reimagines how developers build with AI. By combining &lt;strong&gt;hive-mind swarm intelligence&lt;/strong&gt;, &lt;strong&gt;neural pattern recognition&lt;/strong&gt;, and &lt;strong&gt;87 advanced MCP tools&lt;/strong&gt;, Claude-Flow enables unprecedented AI-powered development workflows.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Key Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;🐝 Hive-Mind Intelligence&lt;/strong&gt;: Queen-led AI coordination with specialized worker agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🧠 Neural Networks&lt;/strong&gt;: 27+ cognitive models with WASM SIMD acceleration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔧 87 MCP Tools&lt;/strong&gt;: Comprehensive toolkit for swarm orchestration, memory, and automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🔄 Dynamic Agent Architecture (DAA)&lt;/strong&gt;: Self-organizing agents with fault tolerance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;💾 SQLite Memory System&lt;/strong&gt;: Persistent &lt;code&gt;.swarm/memory.db&lt;/code&gt; with 12 specialized tables&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🪝 Advanced Hooks System&lt;/strong&gt;: Automated workflows with pre/post operation hooks&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;📊 GitHub Integration&lt;/strong&gt;: 6 specialized modes for repository management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🌐 Flow Nexus Cloud Platform&lt;/strong&gt;: E2B sandboxes, AI swarms, challenges, and marketplace integration&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🔥 &lt;strong&gt;Revolutionary AI Coordination&lt;/strong&gt;: Build faster, smarter, and more efficiently with AI-powered development orchestration&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🌐 &lt;strong&gt;Flow Nexus Cloud Platform&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;NEW&lt;/strong&gt;: Claude-Flow v2.0.0 now includes &lt;strong&gt;Flow Nexus integration&lt;/strong&gt; - a cloud-powered AI development platform featuring:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;E2B Sandboxes&lt;/strong&gt;: Secure isolated environments for Node.js, Python, React, Next.js&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;AI Swarms&lt;/strong&gt;: Deploy multi-agent systems in cloud infrastructure&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Neural Training&lt;/strong&gt;: Distributed machine learning with custom model deployment&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Challenges &amp;amp; Marketplace&lt;/strong&gt;: Coding challenges with rUv credit rewards and template marketplace&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Workflow Automation&lt;/strong&gt;: Event-driven automation with message queue processing&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;📚 &lt;strong&gt;Complete documentation&lt;/strong&gt;: Visit &lt;a href="https://flow-nexus.ruv.io"&gt;flow-nexus.ruv.io&lt;/a&gt; for comprehensive guides, tutorials, and API reference. Also see issue # &lt;a href="https://github.com/ruvnet/claude-flow/issues/732"&gt;https://github.com/ruvnet/claude-flow/issues/732&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;⚡ &lt;strong&gt;Try v2.0.0 Alpha in 4 Commands&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;📋 &lt;strong&gt;Prerequisites&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js 18+&lt;/strong&gt; (LTS recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm 9+&lt;/strong&gt; or equivalent package manager&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows users&lt;/strong&gt;: See &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows Installation Guide&lt;/a&gt; for special instructions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;⚠️ &lt;strong&gt;IMPORTANT&lt;/strong&gt;: Claude Code must be installed first:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install Claude Code globally
npm install -g @anthropic-ai/claude-code

# 2. (Optional) Skip permissions check for faster setup
# Only use if you understand the security implications
claude --dangerously-skip-permissions
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;💡 &lt;strong&gt;Windows Note&lt;/strong&gt;: If you encounter SQLite errors, Claude Flow will automatically use in-memory storage. For persistent storage options, see our &lt;a href="https://github.com/ruvnet/claude-code-flow/raw/main/docs/windows-installation.md"&gt;Windows guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Instant Alpha Testing&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Claude Flow with enhanced MCP setup (auto-configures permissions!)
npx claude-flow@alpha init --force

# 2. Explore all revolutionary capabilities  
npx claude-flow@alpha --help

# 3a. Quick AI coordination (recommended for most tasks)
npx claude-flow@alpha swarm "build me a REST API" --claude

# 3b. OR launch the full hive-mind system (for complex projects)
npx claude-flow@alpha hive-mind wizard
npx claude-flow@alpha hive-mind spawn "build enterprise system" --claude
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Quick Start with Flow Nexus&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Initialize Flow Nexus only (minimal setup)
npx claude-flow init --flow-nexus

# 2. Register and login (use MCP tools in Claude Code)
mcp__flow-nexus__user_register({ email: "your@email.com", password: "secure" })
mcp__flow-nexus__user_login({ email: "your@email.com", password: "secure" })

# 3. Deploy your first cloud swarm
mcp__flow-nexus__swarm_init({ topology: "mesh", maxAgents: 5 })
mcp__flow-nexus__sandbox_create({ template: "node", name: "api-dev" })
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;🤔 &lt;strong&gt;Swarm vs Hive-Mind: Which to Use?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;swarm&lt;/code&gt; Command&lt;/th&gt; 
   &lt;th&gt;&lt;code&gt;hive-mind&lt;/code&gt; Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Best For&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quick tasks, single objectives&lt;/td&gt; 
   &lt;td&gt;Complex projects, persistent sessions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Setup&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Instant - no configuration needed&lt;/td&gt; 
   &lt;td&gt;Interactive wizard setup&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Session&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary coordination&lt;/td&gt; 
   &lt;td&gt;Persistent with resume capability&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Memory&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Task-scoped&lt;/td&gt; 
   &lt;td&gt;Project-wide with SQLite storage&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Agents&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Auto-spawned for task&lt;/td&gt; 
   &lt;td&gt;Manual control with specializations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Use When&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;"Build X", "Fix Y", "Analyze Z"&lt;/td&gt; 
   &lt;td&gt;Multi-feature projects, team coordination&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Quick Rule:&lt;/strong&gt; Start with &lt;code&gt;swarm&lt;/code&gt; for most tasks. Use &lt;code&gt;hive-mind&lt;/code&gt; when you need persistent sessions or complex multi-agent coordination.&lt;/p&gt; 
&lt;h2&gt;🎯 &lt;strong&gt;Typical Workflows - Your "Happy Path" Guide&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;New to Claude-Flow? Start Here!&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Confused about &lt;code&gt;.hive-mind&lt;/code&gt; and &lt;code&gt;.swarm&lt;/code&gt; directories? Not sure when to create new hives? Here are the most common workflow patterns:&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;🚀 Pattern 1: Single Feature Development&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Initialize once per feature/task
npx claude-flow@alpha init --force
npx claude-flow@alpha hive-mind spawn "Implement user authentication" --claude

# Continue working on SAME feature (reuse existing hive)
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query "authentication" --recent
npx claude-flow@alpha swarm "Add password reset functionality" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🏗️ Pattern 2: Multi-Feature Project&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Project-level initialization (once per project)
npx claude-flow@alpha init --force --project-name "my-app"

# Feature 1: Authentication (new hive)
npx claude-flow@alpha hive-mind spawn "auth-system" --namespace auth --claude

# Feature 2: User management (separate hive)  
npx claude-flow@alpha hive-mind spawn "user-management" --namespace users --claude

# Resume Feature 1 later (use session ID from spawn output)
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;strong&gt;🔍 Pattern 3: Research &amp;amp; Analysis&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Start research session
npx claude-flow@alpha hive-mind spawn "Research microservices patterns" --agents researcher,analyst --claude

# Continue research in SAME session
npx claude-flow@alpha memory stats  # See what's been learned
npx claude-flow@alpha swarm "Deep dive into API gateway patterns" --continue-session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🤔 When Should I Create a New Hive?&lt;/strong&gt;&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Situation&lt;/th&gt; 
   &lt;th&gt;Action&lt;/th&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Same objective/feature&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Continue existing hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind resume &amp;lt;session-id&amp;gt;&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;New feature in same project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Create new hive with namespace&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "new-feature" --namespace feature-name&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Completely different project&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;New directory + init&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;mkdir new-project &amp;amp;&amp;amp; cd new-project &amp;amp;&amp;amp; npx claude-flow@alpha init&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Experimenting/testing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Temporary hive&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;npx claude-flow@alpha hive-mind spawn "experiment" --temp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;strong&gt;📁 Understanding "Empty" Directories&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Don't panic if directories seem empty!&lt;/strong&gt; Claude-Flow uses SQLite databases that may not show files in directory listings:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Check what's actually stored (even if directories look empty)
npx claude-flow@alpha memory stats        # See memory data
npx claude-flow@alpha memory list         # List all namespaces  
npx claude-flow@alpha hive-mind status    # See active hives

# Your project structure after initialization:
# .hive-mind/     &amp;lt;- Contains config.json + SQLite session data
# .swarm/         &amp;lt;- Contains memory.db (SQLite database)
# memory/         &amp;lt;- Agent-specific memories (created when agents spawn)
# coordination/   &amp;lt;- Active workflow files (created during tasks)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;🔄 Continuing Previous Work&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# See what you were working on
npx claude-flow@alpha hive-mind status
npx claude-flow@alpha memory query --recent --limit 5

# List all sessions to find the one you want
npx claude-flow@alpha hive-mind sessions

# Resume specific session by ID
npx claude-flow@alpha hive-mind resume session-xxxxx-xxxxx
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🪝 &lt;strong&gt;Advanced Hooks System&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;strong&gt;Automated Workflow Enhancement&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Claude-Flow v2.0.0 introduces a powerful hooks system that automates coordination and enhances every operation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Hooks automatically trigger on operations
npx claude-flow@alpha init --force  # Auto-configures MCP servers &amp;amp; hooks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;&lt;strong&gt;Available Hooks&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;strong&gt;Pre-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-task&lt;/code&gt;&lt;/strong&gt;: Auto-assigns agents based on task complexity&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-search&lt;/code&gt;&lt;/strong&gt;: Caches searches for improved performance&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-edit&lt;/code&gt;&lt;/strong&gt;: Validates files and prepares resources&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;pre-command&lt;/code&gt;&lt;/strong&gt;: Security validation before execution&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Post-Operation Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-edit&lt;/code&gt;&lt;/strong&gt;: Auto-formats code using language-specific tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-task&lt;/code&gt;&lt;/strong&gt;: Trains neural patterns from successful operations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;post-command&lt;/code&gt;&lt;/strong&gt;: Updates memory with operation context&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;notification&lt;/code&gt;&lt;/strong&gt;: Real-time progress updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Session Hooks&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-start&lt;/code&gt;&lt;/strong&gt;: Restores previous context automatically&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-end&lt;/code&gt;&lt;/strong&gt;: Generates summaries and persists state&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;session-restore&lt;/code&gt;&lt;/strong&gt;: Loads memory from previous sessions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;strong&gt;Hook Configuration&lt;/strong&gt;&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;// .claude/settings.json (auto-configured)
{
  "hooks": {
    "preEditHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "pre-edit", "--file", "${file}", "--auto-assign-agents", "true"],
      "alwaysRun": false
    },
    "postEditHook": {
      "command": "npx", 
      "args": ["claude-flow", "hooks", "post-edit", "--file", "${file}", "--format", "true"],
      "alwaysRun": true
    },
    "sessionEndHook": {
      "command": "npx",
      "args": ["claude-flow", "hooks", "session-end", "--generate-summary", "true"],
      "alwaysRun": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📚 &lt;strong&gt;Complete Documentation&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;For detailed information about all features, advanced usage, and comprehensive guides, visit our &lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki"&gt;GitHub Wiki&lt;/a&gt;&lt;/strong&gt;:&lt;/p&gt; 
&lt;h3&gt;🤖 &lt;strong&gt;Core Features&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Neural-Module"&gt;Neural Module&lt;/a&gt;&lt;/strong&gt; - SAFLA self-learning systems with 4-tier memory architecture&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Goal-Module"&gt;Goal Module&lt;/a&gt;&lt;/strong&gt; - GOAP intelligent planning with A* pathfinding&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Agent-System-Overview"&gt;Agent System Overview&lt;/a&gt;&lt;/strong&gt; - Complete catalog of all 64 agents&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Hive-Mind-Intelligence"&gt;Hive-Mind Intelligence&lt;/a&gt;&lt;/strong&gt; - Queen-led AI coordination patterns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;⚡ &lt;strong&gt;Advanced Topics&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Memory-System"&gt;Memory System&lt;/a&gt;&lt;/strong&gt; - SQLite-based persistent memory&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/MCP-Tools"&gt;MCP Tools Reference&lt;/a&gt;&lt;/strong&gt; - Complete guide to all 87 tools&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/GitHub-Integration"&gt;GitHub Integration&lt;/a&gt;&lt;/strong&gt; - Repository management automation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Performance-Benchmarking"&gt;Performance Benchmarking&lt;/a&gt;&lt;/strong&gt; - Optimization strategies&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;📋 &lt;strong&gt;Configuration &amp;amp; Templates&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/CLAUDE-MD-Templates"&gt;CLAUDE.md Templates&lt;/a&gt;&lt;/strong&gt; - Project-specific configurations&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/SPARC-Methodology"&gt;SPARC Methodology&lt;/a&gt;&lt;/strong&gt; - Test-driven development patterns&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Development-Patterns"&gt;Development Patterns&lt;/a&gt;&lt;/strong&gt; - Best practices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🛠️ &lt;strong&gt;Setup &amp;amp; Troubleshooting&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Installation-Guide"&gt;Installation Guide&lt;/a&gt;&lt;/strong&gt; - Detailed setup instructions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Windows-Installation"&gt;Windows Installation&lt;/a&gt;&lt;/strong&gt; - Windows-specific setup&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Troubleshooting"&gt;Troubleshooting&lt;/a&gt;&lt;/strong&gt; - Common issues and solutions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ruvnet/claude-flow/wiki/Non-Interactive-Mode"&gt;Non-Interactive Mode&lt;/a&gt;&lt;/strong&gt; - CI/CD automation&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🤝 &lt;strong&gt;Community &amp;amp; Support&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;GitHub Issues&lt;/strong&gt;: &lt;a href="https://github.com/ruvnet/claude-flow/issues"&gt;Report bugs or request features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Discord&lt;/strong&gt;: &lt;a href="https://discord.com/invite/dfxmpwkG2D"&gt;Join the Agentics Foundation community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Wiki&lt;/strong&gt;: &lt;a href="https://github.com/ruvnet/claude-flow/wiki"&gt;Comprehensive documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Examples&lt;/strong&gt;: &lt;a href="https://github.com/ruvnet/claude-flow/tree/main/examples"&gt;Real-world usage patterns&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📊 &lt;strong&gt;Performance &amp;amp; Stats&lt;/strong&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;84.8% SWE-Bench solve rate&lt;/strong&gt; - Industry-leading problem-solving capability&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;32.3% token reduction&lt;/strong&gt; - Efficient context management&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;2.8-4.4x speed improvement&lt;/strong&gt; - Parallel coordination strategies&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;64 specialized agents&lt;/strong&gt; - Complete development ecosystem&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;87 MCP tools&lt;/strong&gt; - Comprehensive automation toolkit&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://www.star-history.com/#ruvnet/claude-flow&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=ruvnet/claude-flow&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Built with ❤️ by &lt;a href="https://github.com/ruvnet"&gt;rUv&lt;/a&gt; | Powered by Revolutionary AI&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;v2.0.0 Alpha - The Future of AI Orchestration&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>bgstaal/multipleWindow3dScene</title>
      <link>https://github.com/bgstaal/multipleWindow3dScene</link>
      <description>&lt;p&gt;A quick example of how one can "synchronize" a 3d scene across multiple windows using three.js and localStorage&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Multiple Window 3D Scene using Three.js&lt;/h1&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;This project demonstrates a unique approach to creating and managing a 3D scene across multiple browser windows using Three.js and localStorage. It's designed for developers interested in advanced web graphics and window management techniques.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;3D scene creation and rendering with Three.js.&lt;/li&gt; 
 &lt;li&gt;Synchronization of 3D scenes across multiple browser windows.&lt;/li&gt; 
 &lt;li&gt;Dynamic window management and state synchronization using localStorage.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Clone the repository and open &lt;code&gt;index.html&lt;/code&gt; in your browser to start exploring the 3D scene.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/bgstaal/multipleWindow3dScene
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The main application logic is contained within &lt;code&gt;main.js&lt;/code&gt; and &lt;code&gt;WindowManager.js&lt;/code&gt;. The 3D scene is rendered in &lt;code&gt;index.html&lt;/code&gt;, which serves as the entry point of the application.&lt;/p&gt; 
&lt;h2&gt;Structure and Components&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;index.html&lt;/code&gt;: Entry point that sets up the HTML structure and includes the Three.js library and the main script.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WindowManager.js&lt;/code&gt;: Core class managing window creation, synchronization, and state management across multiple windows.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;main.js&lt;/code&gt;: Contains the logic for initializing the 3D scene, handling window events, and rendering the scene.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;three.r124.min.js&lt;/code&gt;: Minified version of the Three.js library used for 3D graphics rendering.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Detailed Functionality&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;WindowManager.js&lt;/code&gt; handles the lifecycle of multiple browser windows, including creation, synchronization, and removal. It uses localStorage to maintain state across windows.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;main.js&lt;/code&gt; initializes the 3D scene using Three.js, manages the window's resize events, and updates the scene based on window interactions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to enhance or expand the project are welcome. Feel free to fork the repository, make changes, and submit pull requests.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is open-sourced under the MIT License.&lt;/p&gt; 
&lt;h2&gt;Acknowledgments&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The Three.js team for their comprehensive 3D library.&lt;/li&gt; 
 &lt;li&gt;x.com/didntdrinkwater for this readme.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;For more information and updates, follow &lt;a href="https://twitter.com/_nonfigurativ_"&gt;@&lt;em&gt;nonfigurativ&lt;/em&gt;&lt;/a&gt; on Twitter.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mrdoob/three.js</title>
      <link>https://github.com/mrdoob/three.js</link>
      <description>&lt;p&gt;JavaScript 3D Library.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;three.js&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/three"&gt;&lt;img src="https://img.shields.io/npm/v/three" alt="NPM Package" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=three"&gt;&lt;img src="https://badgen.net/bundlephobia/minzip/three" alt="Build Size" /&gt;&lt;/a&gt; &lt;a href="https://www.npmtrends.com/three"&gt;&lt;img src="https://img.shields.io/npm/dw/three" alt="NPM Downloads" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/56GBJwAnUS"&gt;&lt;img src="https://img.shields.io/discord/685241246557667386" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/mrdoob/three.js"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;JavaScript 3D library&lt;/h4&gt; 
&lt;p&gt;The aim of the project is to create an easy-to-use, lightweight, cross-browser, general-purpose 3D library. The current builds only include WebGL and WebGPU renderers but SVG and CSS3D renderers are also available as addons.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://threejs.org/examples/"&gt;Examples&lt;/a&gt; — &lt;a href="https://threejs.org/docs/"&gt;Docs&lt;/a&gt; — &lt;a href="https://threejs.org/manual/"&gt;Manual&lt;/a&gt; — &lt;a href="https://github.com/mrdoob/three.js/wiki"&gt;Wiki&lt;/a&gt; — &lt;a href="https://github.com/mrdoob/three.js/wiki/Migration-Guide"&gt;Migrating&lt;/a&gt; — &lt;a href="https://stackoverflow.com/questions/tagged/three.js"&gt;Questions&lt;/a&gt; — &lt;a href="https://discourse.threejs.org/"&gt;Forum&lt;/a&gt; — &lt;a href="https://discord.gg/56GBJwAnUS"&gt;Discord&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;This code creates a scene, a camera, and a geometric cube, and it adds the cube to the scene. It then creates a &lt;code&gt;WebGL&lt;/code&gt; renderer for the scene and camera, and it adds that viewport to the &lt;code&gt;document.body&lt;/code&gt; element. Finally, it animates the cube within the scene for the camera.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;import * as THREE from 'three';

const width = window.innerWidth, height = window.innerHeight;

// init

const camera = new THREE.PerspectiveCamera( 70, width / height, 0.01, 10 );
camera.position.z = 1;

const scene = new THREE.Scene();

const geometry = new THREE.BoxGeometry( 0.2, 0.2, 0.2 );
const material = new THREE.MeshNormalMaterial();

const mesh = new THREE.Mesh( geometry, material );
scene.add( mesh );

const renderer = new THREE.WebGLRenderer( { antialias: true } );
renderer.setSize( width, height );
renderer.setAnimationLoop( animate );
document.body.appendChild( renderer.domElement );

// animation

function animate( time ) {

	mesh.rotation.x = time / 2000;
	mesh.rotation.y = time / 1000;

	renderer.render( scene, camera );

}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If everything goes well, you should see &lt;a href="https://jsfiddle.net/w43x5Lgh/"&gt;this&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Cloning this repository&lt;/h3&gt; 
&lt;p&gt;Cloning the repo with all its history results in a ~2 GB download. If you don't need the whole history you can use the &lt;code&gt;depth&lt;/code&gt; parameter to significantly reduce download size.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone --depth=1 https://github.com/mrdoob/three.js.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change log&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/mrdoob/three.js/releases"&gt;Releases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="100px" src="https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true" align="center" alt="GitHub Readme Stats" /&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;GitHub Readme Stats&lt;/h2&gt; 
&lt;p align="center"&gt;Get dynamically generated GitHub stats on your READMEs!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/actions"&gt; &lt;img alt="Tests Passing" src="https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/graphs/contributors"&gt; &lt;img alt="GitHub Contributors" src="https://img.shields.io/github/contributors/anuraghazra/github-readme-stats" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/anuraghazra/github-readme-stats"&gt; &lt;img alt="Tests Coverage" src="https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues"&gt; &lt;img alt="Issues" src="https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/pulls"&gt; &lt;img alt="GitHub pull requests" src="https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/anuraghazra/github-readme-stats"&gt; &lt;img alt="OpenSSF Scorecard" src="https://api.securityscorecards.dev/projects/github.com/anuraghazra/github-readme-stats/badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://vercel.com?utm\_source=github\_readme\_stats\_team\&amp;amp;utm\_campaign=oss"&gt; &lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;View Demo&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.yml"&gt;Report Bug&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.yml"&gt;Request Feature&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/1770"&gt;FAQ&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/new?category=q-a"&gt;Ask Question&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt;Love the project? Please consider &lt;a href="https://www.paypal.me/anuraghazra"&gt;donating&lt;/a&gt; to help it improve!&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;Table of contents (Click to show)&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card"&gt;GitHub Stats Card&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;Hiding individual stats&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;Showing additional individual stats&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-icons"&gt;Showing icons&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-commits-count-for-specified-year"&gt;Showing commits count for specified year&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;Customization&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins"&gt;GitHub Extra Pins&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#options"&gt;Options&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-gist-pins"&gt;GitHub Gist Pins&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-1"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#options-1"&gt;Options&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-1"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card"&gt;Top Languages Card&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-2"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#options-2"&gt;Options&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#exclude-individual-repositories"&gt;Exclude individual repositories&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;Hide individual languages&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#show-more-languages"&gt;Show more languages&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#compact-language-card-layout"&gt;Compact Language Card Layout&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-chart-language-card-layout"&gt;Donut Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-vertical-chart-language-card-layout"&gt;Donut Vertical Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#pie-chart-language-card-layout"&gt;Pie Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-progress-bars"&gt;Hide Progress Bars&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#change-format-of-languages-stats"&gt;Change format of language's stats&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-2"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-stats-card"&gt;WakaTime Stats Card&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#options-3"&gt;Options&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-3"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;All Demos&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#quick-tip-align-the-cards"&gt;Quick Tip (Align The Cards)&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#stats-and-top-languages-cards"&gt;Stats and top languages cards&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#pinning-repositories"&gt;Pinning repositories&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;Deploy on your own&lt;/a&gt; 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#first-step-get-your-personal-access-token-pat"&gt;First step: get your Personal Access Token (PAT)&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#classic-token"&gt;Classic token&lt;/a&gt;&lt;/li&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#fine-grained-token"&gt;Fine-grained token&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-vercel"&gt;On Vercel&lt;/a&gt; 
     &lt;ul&gt; 
      &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#film_projector-check-out-step-by-step-video-tutorial-by-codestackr"&gt;&lt;span&gt;📽&lt;/span&gt; Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/li&gt; 
     &lt;/ul&gt; &lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-other-platforms"&gt;On other platforms&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-environment-variables"&gt;Available environment variables&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#keep-your-fork-up-to-date"&gt;Keep your fork up to date&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#sparkling_heart-support-the-project"&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h1&gt;Important Notices 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Please note that we are NOT participating in Hacktoberfest this year. As a small team, we cannot handle the increased volume of PRs and issues that the event brings. We appreciate your understanding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Since the GitHub API only &lt;a href="https://docs.github.com/en/graphql/overview/resource-limitations"&gt;allows 5k requests per hour per user account&lt;/a&gt;, the public Vercel instance hosted on &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). We use caching to prevent this from happening (see &lt;a href="https://github.com/anuraghazra/github-readme-stats#common-options"&gt;https://github.com/anuraghazra/github-readme-stats#common-options&lt;/a&gt;). You can turn off these rate limit protections by &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploying your own Vercel instance&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img alt="Uptime Badge" src="https://img.shields.io/endpoint?url=https%3A%2F%2Fgithub-readme-stats-git-monitoring-github-readme-stats-team.vercel.app%2Fapi%2Fstatus%2Fup%3Ftype%3Dshields" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; We're a small team, and to prioritize, we rely on upvotes &lt;span&gt;👍&lt;/span&gt;. We use the Top Issues dashboard for tracking community demand (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1935"&gt;#1935&lt;/a&gt;). Do not hesitate to upvote the issues and pull requests you are interested in. We will work on the most upvoted first.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy and paste this into your markdown, and that's it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the stats card only shows statistics like stars, commits, and pull requests from public repositories. To show private statistics on the stats card, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Available ranks are S (top 1%), A+ (12.5%), A (25%), A- (37.5%), B+ (50%), B (62.5%), B- (75%), C+ (87.5%) and C (everyone). This ranking scheme is based on the &lt;a href="https://wikipedia.org/wiki/Academic_grading_in_Japan"&gt;Japanese academic grading&lt;/a&gt; system. The global percentile is calculated as a weighted sum of percentiles for each statistic (number of commits, pull requests, reviews, issues, stars, and followers), based on the cumulative distribution function of the &lt;a href="https://wikipedia.org/wiki/exponential_distribution"&gt;exponential&lt;/a&gt; and the &lt;a href="https://wikipedia.org/wiki/Log-normal_distribution"&gt;log-normal&lt;/a&gt; distributions. The implementation can be investigated at &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/src/calculateRank.js"&gt;src/calculateRank.js&lt;/a&gt;. The circle around the rank shows 100 minus the global percentile.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;hide=&lt;/code&gt; to hide any specific stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing additional individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;show=&lt;/code&gt; to show any specific additional stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;&amp;amp;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing commits count for specified year&lt;/h3&gt; 
&lt;p&gt;You can specify a year and fetch only the commits that were made in that year by passing &lt;code&gt;&amp;amp;commits_year=YYYY&lt;/code&gt; to the parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;commits_year=2020)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;&amp;amp;theme=THEME_NAME&lt;/code&gt; parameter like so :&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes&lt;/h4&gt; 
&lt;p&gt;GitHub Readme Stats comes with several built-in themes (e.g. &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;radical&lt;/code&gt;, &lt;code&gt;merko&lt;/code&gt;, &lt;code&gt;gruvbox&lt;/code&gt;, &lt;code&gt;tokyonight&lt;/code&gt;, &lt;code&gt;onedark&lt;/code&gt;, &lt;code&gt;cobalt&lt;/code&gt;, &lt;code&gt;synthwave&lt;/code&gt;, &lt;code&gt;highcontrast&lt;/code&gt;, &lt;code&gt;dracula&lt;/code&gt;).&lt;/p&gt; 
&lt;img src="https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png" alt="GitHub Readme Stats Themes" width="600px" /&gt; 
&lt;p&gt;You can look at a preview for &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt; or checkout the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js"&gt;theme config file&lt;/a&gt;. Please note that we paused the addition of new themes to decrease maintenance efforts; all pull requests related to new themes will be closed.&lt;/p&gt; 
&lt;h4&gt;Responsive Card Theme&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Since GitHub will re-upload the cards and serve them from their &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-anonymized-urls"&gt;CDN&lt;/a&gt;, we can not infer the browser/GitHub theme on the server side. There are, however, four methods you can use to create dynamics themes on the client side.&lt;/p&gt; 
&lt;h5&gt;Use the transparent theme&lt;/h5&gt; 
&lt;p&gt;We have included a &lt;code&gt;transparent&lt;/code&gt; theme that has a transparent background. This theme is optimized to look good on GitHub's dark and light default themes. You can enable this theme using the &lt;code&gt;&amp;amp;theme=transparent&lt;/code&gt; parameter like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Add transparent alpha channel to a themes bg_color&lt;/h5&gt; 
&lt;p&gt;You can use the &lt;code&gt;bg_color&lt;/code&gt; parameter to make any of &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;the available themes&lt;/a&gt; transparent. This is done by setting the &lt;code&gt;bg_color&lt;/code&gt; to a color with a transparent alpha channel (i.e. &lt;code&gt;bg_color=00000000&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's theme context tag&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/"&gt;GitHub's theme context&lt;/a&gt; tags to switch the theme based on the user GitHub theme automatically. This is done by appending &lt;code&gt;#gh-dark-mode-only&lt;/code&gt; or &lt;code&gt;#gh-light-mode-only&lt;/code&gt; to the end of an image URL. This tag will define whether the image specified in the markdown is only shown to viewers using a light or a dark GitHub theme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's new media feature&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2022-05-19-specify-theme-context-for-images-in-markdown-beta/"&gt;GitHub's new media feature&lt;/a&gt; in HTML to specify whether to display images for light or dark themes. This is done using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element in combination with the &lt;code&gt;prefers-color-scheme&lt;/code&gt; media feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;picture&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark"
    media="(prefers-color-scheme: dark)"
  /&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true"
    media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)"
  /&amp;gt;
  &amp;lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&amp;gt;
&amp;lt;/picture&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark" media="(prefers-color-scheme: dark)" /&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)" /&gt; 
  &lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of all your cards however you wish with URL parameters.&lt;/p&gt; 
&lt;h4&gt;Common Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;title_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's title color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Body text color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;434d58&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;icon_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Icons color if available.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4c71f2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's border color. Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;e4e2e2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bg_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's background color.&lt;/td&gt; 
   &lt;td&gt;string (hex color or a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;fffefe&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_border&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the card's border.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Name of the theme, choose from &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cache_seconds&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the cache header manually (min: 21600, max: 86400).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;21600&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the language in the card, you can check full list of available locales &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-locales"&gt;here&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_radius&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Corner rounding on the card.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4.5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; We use caching to decrease the load on our servers (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425"&gt;https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425&lt;/a&gt;). Our cards have the following default cache hours: stats card - 24 hours, top languages card - 144 hours (6 days), pin card - 240 hours (10 days), gist card - 48 hours (2 days). If you want the data on your statistics card to be updated more often you can &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; and set &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-environment-variables"&gt;environment variable&lt;/a&gt; &lt;code&gt;CACHE_SECONDS&lt;/code&gt; to a value of your choosing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in the bg_color option to render a gradient with the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Available locales&lt;/h5&gt; 
&lt;p&gt;Here is a list of all available locales:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ar&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Arabic&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;az&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Azerbaijani&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;bn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Bengali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;bg&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Bulgarian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;my&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Burmese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ca&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Catalan&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;zh-tw&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese (Taiwan)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cs&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Czech&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;nl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Dutch&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;English&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fil&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Filipino&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fi&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Finnish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;French&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;de&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;German&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;el&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Greek&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;he&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Hebrew&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;hi&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Hindi&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;hu&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Hungarian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Indonesian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;it&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Italian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Japanese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;kr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Korean&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ml&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Malayalam&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;np&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Nepali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;no&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Norwegian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fa&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Persian (Farsi)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Polish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-br&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Brazil)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-pt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Portugal)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ro&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Romanian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ru&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Russian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sa&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Sanskrit&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Serbian (Cyrillic)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sr-latn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Serbian (Latin)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sk&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Slovak&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;es&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Spanish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sw&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Swahili&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;se&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Swedish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ta&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Tamil&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;th&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Thai&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Turkish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uk-ua&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Ukrainian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ur&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Urdu&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uz&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Uzbek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Vietnamese&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;If we don't support your language, please consider contributing! You can find more information about how to do it in our &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/CONTRIBUTING.md#translations-contribution"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Stats Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;specified items&lt;/a&gt; from stats.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your stats card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;500px (approx.)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_rank&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the rank and automatically resizes the card width.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rank_icon&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows alternative rank icon (i.e. &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;percentile&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_icons&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows icons near all stats.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;include_all_commits&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Count total commits instead of just the current year commits.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;username&amp;gt; GitHub Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_bold&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses bold text.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ring_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of the rank circle.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;number_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available formats for displaying the card values &lt;code&gt;short&lt;/code&gt; (i.e. &lt;code&gt;6.6k&lt;/code&gt;) and &lt;code&gt;long&lt;/code&gt; (i.e. &lt;code&gt;6626&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;additional items&lt;/a&gt; on stats card (i.e. &lt;code&gt;reviews&lt;/code&gt;, &lt;code&gt;discussions_started&lt;/code&gt;, &lt;code&gt;discussions_answered&lt;/code&gt;, &lt;code&gt;prs_merged&lt;/code&gt; or &lt;code&gt;prs_merged_percentage&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;commits_year&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Filters and counts only commits made in the specified year.&lt;/td&gt; 
   &lt;td&gt;integer &lt;em&gt;(YYYY)&lt;/em&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;current year&amp;gt; (one year to date)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; When hide_rank=&lt;code&gt;true&lt;/code&gt;, the minimum card width is 270 px + the title length and padding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance and behavior of the pinned repository card using the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#common-options"&gt;common options&lt;/a&gt; and exclusive options listed in the table below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the repo's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;description_lines_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Manually set the number of lines for the description. Specified value will be clamped between 1 and 3. If this parameter is not specified, the number of lines will be automatically adjusted according to the actual length of the description.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;show_owner&lt;/code&gt; query option to include the repo's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;GitHub Gist Pins&lt;/h1&gt; 
&lt;p&gt;GitHub gist pins allow you to pin gists in your GitHub profile using a GitHub readme profile.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/gist?id=bbfce31e0217a3689c8d961a356cb10d&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Gist Card](https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d)](https://gist.github.com/Yizack/bbfce31e0217a3689c8d961a356cb10d/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance and behavior of the gist card using the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#common-options"&gt;common options&lt;/a&gt; and exclusive options listed in the table below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the gist's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;show_owner&lt;/code&gt; query option to include the gist's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;show_owner=true" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card shows a GitHub user's most frequently used languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the language card shows language results only from public repositories. To include languages used in private repositories, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Top Languages does not indicate the user's skill level or anything like that; it's a GitHub metric to determine which languages have the most code on GitHub. It is a new feature of github-readme-stats.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This card shows language usage only inside your own non-forked repositories, not depending on who the author of the commits is. It does not include your contributions into another users/organizations repositories. Currently there are no way to get this data from GitHub API. If you want this behavior to be improved you can support &lt;a href="https://github.com/orgs/community/discussions/18230"&gt;this feature request&lt;/a&gt; created by &lt;a href="https://github.com/rickstaa"&gt;@rickstaa&lt;/a&gt; inside GitHub Community.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Currently this card shows data only about first 100 repositories. This is because GitHub API limitations which cause downtimes of public instances (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). In future this behavior will be improved by releasing GitHub action or providing environment variables for user's own instances.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance and behavior of the top languages card using the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#common-options"&gt;common options&lt;/a&gt; and exclusive options listed in the table below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;specified languages&lt;/a&gt; from card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between five available layouts &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; &amp;amp; &lt;code&gt;donut-vertical&lt;/code&gt; &amp;amp; &lt;code&gt;pie&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows more languages on the card, between 1-20.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;donut&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt; for other layouts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Most Used Languages&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses the compact layout option, hides percentages, and removes the bars.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;size_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;count_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;stats_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available formats for language's stats &lt;code&gt;percentages&lt;/code&gt; and &lt;code&gt;bytes&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;percentages&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Language names should be URI-escaped, as specified in &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding"&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href="https://www.urlencoder.org/"&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Language stats algorithm&lt;/h3&gt; 
&lt;p&gt;We use the following algorithm to calculate the languages percentages on the language card:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;ranking_index = (byte_count ^ size_weight) * (repo_count ^ count_weight)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, only the byte count is used for determining the languages percentages shown on the language card (i.e. &lt;code&gt;size_weight=1&lt;/code&gt; and &lt;code&gt;count_weight=0&lt;/code&gt;). You can, however, use the &lt;code&gt;&amp;amp;size_weight=&lt;/code&gt; and &lt;code&gt;&amp;amp;count_weight=&lt;/code&gt; options to weight the language usage calculation. The values must be positive real numbers. &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1600#issuecomment-1046056305"&gt;More details about the algorithm can be found here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=1&amp;amp;count_weight=0&lt;/code&gt; - &lt;em&gt;(default)&lt;/em&gt; Orders by byte count.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5&lt;/code&gt; - &lt;em&gt;(recommended)&lt;/em&gt; Uses both byte and repo count for ranking&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0&amp;amp;count_weight=1&lt;/code&gt; - Orders by repo count&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;&amp;amp;hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 20 (inclusive). By default it was set to &lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; for other layouts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Vertical Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut-vertical&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pie Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=pie&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide Progress Bars&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;hide_progress=true&lt;/code&gt; option to hide the percentages and the progress bars (layout will be automatically set to &lt;code&gt;compact&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Change format of language's stats&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;stats_format=bytes&lt;/code&gt; option to display the stats in bytes instead of percentage.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;stats_format=bytes)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Vertical Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pie Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hidden progress bars&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Display bytes instead of percentage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;stats_format=bytes" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;h1&gt;WakaTime Stats Card&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Please be aware that we currently only show data from WakaTime profiles that are public. You therefore have to make sure that &lt;strong&gt;BOTH&lt;/strong&gt; &lt;code&gt;Display code time publicly&lt;/code&gt; and &lt;code&gt;Display languages, editors, os, categories publicly&lt;/code&gt; are enabled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; In case you just created a new WakaTime account, then it might take up to 24 hours until your stats will become visible on the WakaTime stats card.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href="https://wakatime.com"&gt;WakaTime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Harlok's WakaTime stats](https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Options&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance and behavior of the WakaTime stats card using the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#common-options"&gt;common options&lt;/a&gt; and exclusive options listed in the table below.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the languages specified from the card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;495&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the progress bar and percentage.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WakaTime Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Limits the number of languages on the card, defaults to all reported languages.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;api_domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom API domain for the card, e.g. to use services like &lt;a href="https://github.com/mujx/hakatime"&gt;Hakatime&lt;/a&gt; or &lt;a href="https://github.com/muety/wakapi"&gt;Wakapi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;wakatime.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;display_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the WakaTime stats display format. Choose &lt;code&gt;time&lt;/code&gt; to display time-based stats or &lt;code&gt;percent&lt;/code&gt; to show percentages.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;hide_progress=true" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;layout=compact" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;All Demos&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing additional stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows GitHub logo instead rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=github" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows user rank percentile instead of rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=percentile" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customize Border Color&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Customized Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;theme=calm" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WakaTime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Tip (Align The Cards)&lt;/h2&gt; 
&lt;p&gt;By default, GitHub does not lay out the cards side by side. To do that, you can use such approaches:&lt;/p&gt; 
&lt;h3&gt;Stats and top languages cards&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;h3&gt;Pinning repositories&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;h1&gt;Deploy on your own&lt;/h1&gt; 
&lt;h2&gt;First step: get your Personal Access Token (PAT)&lt;/h2&gt; 
&lt;p&gt;For deploying your own instance of GitHub Readme Stats, you will need to create a GitHub Personal Access Token (PAT). Below are the steps to create one and the scopes you need to select for both classic and fine-grained tokens.&lt;/p&gt; 
&lt;p&gt;Selecting the right scopes for your token is important in case you want to display private contributions on your cards.&lt;/p&gt; 
&lt;h3&gt;Classic token&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go to &lt;a href="https://github.com/settings/tokens"&gt;Account -&amp;gt; Settings -&amp;gt; Developer Settings -&amp;gt; Personal access tokens -&amp;gt; Tokens (classic)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Click on &lt;code&gt;Generate new token -&amp;gt; Generate new token (classic)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Scopes to select: 
  &lt;ul&gt; 
   &lt;li&gt;repo&lt;/li&gt; 
   &lt;li&gt;read:user&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Click on &lt;code&gt;Generate token&lt;/code&gt; and copy it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Fine-grained token&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This limits the number of issues to the number of issues on your repositories only and only takes public commits into account.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go to &lt;a href="https://github.com/settings/tokens"&gt;Account -&amp;gt; Settings -&amp;gt; Developer Settings -&amp;gt; Personal access tokens -&amp;gt; Fine-grained tokens&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Click on &lt;code&gt;Generate new token -&amp;gt; Generate new token&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Select an expiration date&lt;/li&gt; 
 &lt;li&gt;Select &lt;code&gt;All repositories&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Scopes to select in &lt;code&gt;Repository permission&lt;/code&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;Commit statuses: read-only&lt;/li&gt; 
   &lt;li&gt;Contents: read-only&lt;/li&gt; 
   &lt;li&gt;Issues: read-only&lt;/li&gt; 
   &lt;li&gt;Metadata: read-only&lt;/li&gt; 
   &lt;li&gt;Pull requests: read-only&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Click on &lt;code&gt;Generate token&lt;/code&gt; and copy it.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;On Vercel&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;📽&lt;/span&gt; &lt;a href="https://youtu.be/n6d4KHSKqGk?t=107"&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you do not have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Since &lt;a href="https://github.com/anuraghazra/github-readme-stats/pull/58"&gt;#58&lt;/a&gt;, we should be able to handle more than 5k requests and have fewer issues with downtime &lt;span&gt;😁&lt;/span&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; If you are on the &lt;a href="https://vercel.com/pricing"&gt;Pro (i.e. paid)&lt;/a&gt; Vercel plan, the &lt;a href="https://vercel.com/docs/concepts/projects/project-configuration#value-definition"&gt;maxDuration&lt;/a&gt; value found in the &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/vercel.json"&gt;vercel.json&lt;/a&gt; can be increased when your Vercel instance frequently times out during the card request. You are advised to keep this value lower than &lt;code&gt;30&lt;/code&gt; seconds to prevent high memory usage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://vercel.com/button" alt="Deploy to Vercel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide on setting up your own Vercel instance&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href="https://vercel.com/"&gt;vercel.com&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt;. &lt;img src="https://files.catbox.moe/pcxk33.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt;. &lt;img src="https://files.catbox.moe/b9oxey.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in to GitHub and allow access to all repositories if prompted.&lt;/li&gt; 
  &lt;li&gt;Fork this repo.&lt;/li&gt; 
  &lt;li&gt;Go back to your &lt;a href="https://vercel.com/dashboard"&gt;Vercel dashboard&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;To import a project, click the &lt;code&gt;Add New...&lt;/code&gt; button and select the &lt;code&gt;Project&lt;/code&gt; option. &lt;img src="https://files.catbox.moe/3n76fh.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click the &lt;code&gt;Continue with GitHub&lt;/code&gt; button, search for the required Git Repository and import it by clicking the &lt;code&gt;Import&lt;/code&gt; button. Alternatively, you can import a Third-Party Git Repository using the &lt;code&gt;Import Third-Party Git Repository -&amp;gt;&lt;/code&gt; link at the bottom of the page. &lt;img src="https://files.catbox.moe/mg5p04.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Create a Personal Access Token (PAT) as described in the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#first-step-get-your-personal-access-token-pat"&gt;previous section&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Add the PAT as an environment variable named &lt;code&gt;PAT_1&lt;/code&gt; (as shown). &lt;img src="https://files.catbox.moe/0yclio.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click deploy, and you're good to go. See your domains to use the API!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;On other platforms&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This way of using GRS is not officially supported and was added to cater to some particular use cases where Vercel could not be used (e.g. &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/2341"&gt;#2341&lt;/a&gt;). The support for this method, therefore, is limited.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide for deploying on other platforms&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork or clone this repo as per your needs&lt;/li&gt; 
  &lt;li&gt;Move &lt;code&gt;express&lt;/code&gt; from the devDependencies to the dependencies section of &lt;code&gt;package.json&lt;/code&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;npm i&lt;/code&gt; if needed (initial setup)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;node express.js&lt;/code&gt; to start the server, or set the entry point to &lt;code&gt;express.js&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; if you're deploying on a managed service &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;You're done 🎉 &lt;/li&gt;
 &lt;/ol&gt;
&lt;/details&gt;   
&lt;h2&gt;Available environment variables&lt;/h2&gt; 
&lt;p&gt;GitHub Readme Stats provides several environment variables that can be used to customize the behavior of your self-hosted instance. These include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CACHE_SECONDS&lt;/code&gt;: This takes precedence over our cache minimum and maximum values and can circumvent these values for self-hosted instances.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;WHITELIST&lt;/code&gt;: A comma-separated list of GitHub usernames that are allowed to access your instance. If this variable is not set, all usernames are allowed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GIST_WHITELIST&lt;/code&gt;: A comma-separated list of GitHub gist IDs that are allowed to be accessed on your instance. If this variable is not set, all gist IDs are allowed.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;EXCLUDE_REPO&lt;/code&gt;: A comma-separated list of repositories that will be excluded from stats and top languages cards on your instance. This allows repository exclusion without exposing repository names in public URLs. This enhances privacy for self-hosted instances that include private repositories in stats cards.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://vercel.com/docs/concepts/projects/environment-variables"&gt;the Vercel documentation&lt;/a&gt; on adding these environment variables to your Vercel instance.&lt;/p&gt; 
&lt;h2&gt;Keep your fork up to date&lt;/h2&gt; 
&lt;p&gt;You can keep your fork, and thus your private Vercel instance up to date with the upstream using GitHub's &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"&gt;Sync Fork button&lt;/a&gt;. You can also use the &lt;a href="https://github.com/wei/pull"&gt;pull&lt;/a&gt; package created by &lt;a href="https://github.com/wei"&gt;@wei&lt;/a&gt; to automate this process.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/h1&gt; 
&lt;p&gt;I open-source almost everything I can and try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are a few ways you can do it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it. :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project. &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paypal.me/anuraghazra"&gt;&lt;img src="https://ionicabizau.github.io/badges/paypal.svg?sanitize=true" alt="paypal.me/anuraghazra" /&gt;&lt;/a&gt; - You can make a one-time donation via PayPal. I'll probably buy a &lt;del&gt;coffee&lt;/del&gt; tea. &lt;span&gt;🍵&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss"&gt;&lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" alt="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with &lt;span&gt;❤️&lt;/span&gt; and JavaScript.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>