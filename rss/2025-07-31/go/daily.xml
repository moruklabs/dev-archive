<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Wed, 30 Jul 2025 01:32:16 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>spf13/viper</title>
      <link>https://github.com/spf13/viper</link>
      <description>&lt;p&gt;Go configuration with fangs&lt;/p&gt;&lt;hr&gt;&lt;blockquote&gt; 
 &lt;h2&gt;Viper v2 feedback&lt;/h2&gt; 
 &lt;p&gt;Viper is heading towards v2 and we would love to hear what &lt;em&gt;&lt;strong&gt;you&lt;/strong&gt;&lt;/em&gt; would like to see in it. Share your thoughts here: &lt;a href="https://forms.gle/R6faU74qPRPAzchZ9"&gt;https://forms.gle/R6faU74qPRPAzchZ9&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;Thank you!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://github.com/user-attachments/assets/acae9193-2974-41f3-808d-2d433f5ada5e" alt="viper logo"&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/avelino/awesome-go#configuration"&gt;&lt;img src="https://awesome.re/mentioned-badge-flat.svg?sanitize=true" alt="Mentioned in Awesome Go"&gt;&lt;/a&gt; &lt;a href="https://repl.it/@sagikazarmark/Viper-example#main.go"&gt;&lt;img src="https://repl.it/badge/github/sagikazarmark/Viper-example" alt="run on repl.it"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/spf13/viper/actions?query=workflow%3ACI"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/spf13/viper/ci.yaml?branch=master&amp;amp;style=flat-square" alt="GitHub Workflow Status"&gt;&lt;/a&gt; &lt;a href="https://gitter.im/spf13/viper?utm_source=badge&amp;amp;utm_medium=badge&amp;amp;utm_campaign=pr-badge&amp;amp;utm_content=badge"&gt;&lt;img src="https://badges.gitter.im/Join%20Chat.svg?sanitize=true" alt="Join the chat at https://gitter.im/spf13/viper"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/spf13/viper"&gt;&lt;img src="https://goreportcard.com/badge/github.com/spf13/viper?style=flat-square" alt="Go Report Card"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/go%20version-%3E=1.23-61CFDD.svg?style=flat-square" alt="Go Version"&gt; &lt;a href="https://pkg.go.dev/mod/github.com/spf13/viper"&gt;&lt;img src="https://pkg.go.dev/badge/mod/github.com/spf13/viper" alt="PkgGoDev"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Go configuration with fangs!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Many Go projects are built using Viper including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://gohugo.io"&gt;Hugo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://rexray.readthedocs.org/en/stable/"&gt;EMC RexRay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Imgur/incus"&gt;Imgur’s Incus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nanobox-io/nanobox"&gt;Nanobox&lt;/a&gt;/&lt;a href="https://github.com/nanopack"&gt;Nanopack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/docker/Notary"&gt;Docker Notary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.bloomapi.com/"&gt;BloomApi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/digitalocean/doctl"&gt;doctl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jgsqware/clairctl"&gt;Clairctl&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mercure.rocks"&gt;Mercure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/meshery/meshery"&gt;Meshery&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bearer/bearer"&gt;Bearer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coder/coder"&gt;Coder&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitess.io/"&gt;Vitess&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;go get github.com/spf13/viper
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Viper uses &lt;a href="https://go.dev/wiki/Modules"&gt;Go Modules&lt;/a&gt; to manage dependencies.&lt;/p&gt; 
&lt;h2&gt;What is Viper?&lt;/h2&gt; 
&lt;p&gt;Viper is a complete configuration solution for Go applications including &lt;a href="https://12factor.net/#the_twelve_factors"&gt;12-Factor apps&lt;/a&gt;. It is designed to work within an application, and can handle all types of configuration needs and formats. It supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;setting defaults&lt;/li&gt; 
 &lt;li&gt;reading from JSON, TOML, YAML, HCL, envfile and Java properties config files&lt;/li&gt; 
 &lt;li&gt;live watching and re-reading of config files (optional)&lt;/li&gt; 
 &lt;li&gt;reading from environment variables&lt;/li&gt; 
 &lt;li&gt;reading from remote config systems (etcd or Consul), and watching changes&lt;/li&gt; 
 &lt;li&gt;reading from command line flags&lt;/li&gt; 
 &lt;li&gt;reading from buffer&lt;/li&gt; 
 &lt;li&gt;setting explicit values&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Viper can be thought of as a registry for all of your applications configuration needs.&lt;/p&gt; 
&lt;h2&gt;Why Viper?&lt;/h2&gt; 
&lt;p&gt;When building a modern application, you don’t want to worry about configuration file formats; you want to focus on building awesome software. Viper is here to help with that.&lt;/p&gt; 
&lt;p&gt;Viper does the following for you:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Find, load, and unmarshal a configuration file in JSON, TOML, YAML, HCL, INI, envfile or Java properties formats.&lt;/li&gt; 
 &lt;li&gt;Provide a mechanism to set default values for your different configuration options.&lt;/li&gt; 
 &lt;li&gt;Provide a mechanism to set override values for options specified through command line flags.&lt;/li&gt; 
 &lt;li&gt;Provide an alias system to easily rename parameters without breaking existing code.&lt;/li&gt; 
 &lt;li&gt;Make it easy to tell the difference between when a user has provided a command line or config file which is the same as the default.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Viper uses the following precedence order. Each item takes precedence over the item below it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;explicit call to &lt;code&gt;Set&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;flag&lt;/li&gt; 
 &lt;li&gt;env&lt;/li&gt; 
 &lt;li&gt;config&lt;/li&gt; 
 &lt;li&gt;key/value store&lt;/li&gt; 
 &lt;li&gt;default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Viper configuration keys are case insensitive. There are ongoing discussions about making that optional.&lt;/p&gt; 
&lt;h2&gt;Putting Values into Viper&lt;/h2&gt; 
&lt;h3&gt;Establishing Defaults&lt;/h3&gt; 
&lt;p&gt;A good configuration system will support default values. A default value is not required for a key, but it’s useful in the event that a key hasn't been set via config file, environment variable, remote configuration or flag.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.SetDefault("ContentDir", "content")
viper.SetDefault("LayoutDir", "layouts")
viper.SetDefault("Taxonomies", map[string]string{"tag": "tags", "category": "categories"})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reading Config Files&lt;/h3&gt; 
&lt;p&gt;Viper requires minimal configuration so it knows where to look for config files. Viper supports JSON, TOML, YAML, HCL, INI, envfile and Java Properties files. Viper can search multiple paths, but currently a single Viper instance only supports a single configuration file. Viper does not default to any configuration search paths leaving defaults decision to an application.&lt;/p&gt; 
&lt;p&gt;Here is an example of how to use Viper to search for and read a configuration file. None of the specific paths are required, but at least one path should be provided where a configuration file is expected.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.SetConfigName("config") // name of config file (without extension)
viper.SetConfigType("yaml") // REQUIRED if the config file does not have the extension in the name
viper.AddConfigPath("/etc/appname/")   // path to look for the config file in
viper.AddConfigPath("$HOME/.appname")  // call multiple times to add many search paths
viper.AddConfigPath(".")               // optionally look for config in the working directory
err := viper.ReadInConfig() // Find and read the config file
if err != nil { // Handle errors reading the config file
	panic(fmt.Errorf("fatal error config file: %w", err))
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can handle the specific case where no config file is found like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;if err := viper.ReadInConfig(); err != nil {
	if _, ok := err.(viper.ConfigFileNotFoundError); ok {
		// Config file not found; ignore error if desired
	} else {
		// Config file was found but another error was produced
	}
}

// Config file found and successfully parsed
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;em&gt;NOTE [since 1.6]:&lt;/em&gt; You can also have a file without an extension and specify the format programmatically. For those configuration files that lie in the home of the user without any extension like &lt;code&gt;.bashrc&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Writing Config Files&lt;/h3&gt; 
&lt;p&gt;Reading from config files is useful, but at times you want to store all modifications made at run time. For that, a bunch of commands are available, each with its own purpose:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WriteConfig - writes the current viper configuration to the predefined path, if exists. Errors if no predefined path. Will overwrite the current config file, if it exists.&lt;/li&gt; 
 &lt;li&gt;SafeWriteConfig - writes the current viper configuration to the predefined path. Errors if no predefined path. Will not overwrite the current config file, if it exists.&lt;/li&gt; 
 &lt;li&gt;WriteConfigAs - writes the current viper configuration to the given filepath. Will overwrite the given file, if it exists.&lt;/li&gt; 
 &lt;li&gt;SafeWriteConfigAs - writes the current viper configuration to the given filepath. Will not overwrite the given file, if it exists.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;As a rule of the thumb, everything marked with safe won't overwrite any file, but just create if not existent, whilst the default behavior is to create or truncate.&lt;/p&gt; 
&lt;p&gt;A small examples section:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.WriteConfig() // writes current config to predefined path set by 'viper.AddConfigPath()' and 'viper.SetConfigName'
viper.SafeWriteConfig()
viper.WriteConfigAs("/path/to/my/.config")
viper.SafeWriteConfigAs("/path/to/my/.config") // will error since it has already been written
viper.SafeWriteConfigAs("/path/to/my/.other_config")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Watching and re-reading config files&lt;/h3&gt; 
&lt;p&gt;Viper supports the ability to have your application live read a config file while running.&lt;/p&gt; 
&lt;p&gt;Gone are the days of needing to restart a server to have a config take effect, viper powered applications can read an update to a config file while running and not miss a beat.&lt;/p&gt; 
&lt;p&gt;Simply tell the viper instance to watchConfig. Optionally you can provide a function for Viper to run each time a change occurs.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Make sure you add all of the configPaths prior to calling &lt;code&gt;WatchConfig()&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.OnConfigChange(func(e fsnotify.Event) {
	fmt.Println("Config file changed:", e.Name)
})
viper.WatchConfig()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reading Config from io.Reader&lt;/h3&gt; 
&lt;p&gt;Viper predefines many configuration sources such as files, environment variables, flags, and remote K/V store, but you are not bound to them. You can also implement your own required configuration source and feed it to viper.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.SetConfigType("yaml") // or viper.SetConfigType("YAML")

// any approach to require this configuration into your program.
var yamlExample = []byte(`
Hacker: true
name: steve
hobbies:
- skateboarding
- snowboarding
- go
clothing:
  jacket: leather
  trousers: denim
age: 35
eyes : brown
beard: true
`)

viper.ReadConfig(bytes.NewBuffer(yamlExample))

viper.Get("name") // this would be "steve"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Setting Overrides&lt;/h3&gt; 
&lt;p&gt;These could be from a command line flag, or from your own application logic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.Set("Verbose", true)
viper.Set("LogFile", LogFile)
viper.Set("host.port", 5899)   // set subset
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Registering and Using Aliases&lt;/h3&gt; 
&lt;p&gt;Aliases permit a single value to be referenced by multiple keys&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.RegisterAlias("loud", "Verbose")

viper.Set("verbose", true) // same result as next line
viper.Set("loud", true)   // same result as prior line

viper.GetBool("loud") // true
viper.GetBool("verbose") // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Working with Environment Variables&lt;/h3&gt; 
&lt;p&gt;Viper has full support for environment variables. This enables 12 factor applications out of the box. There are five methods that exist to aid working with ENV:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;AutomaticEnv()&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;BindEnv(string...) : error&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetEnvPrefix(string)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;SetEnvKeyReplacer(string...) *strings.Replacer&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AllowEmptyEnv(bool)&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;When working with ENV variables, it’s important to recognize that Viper treats ENV variables as case sensitive.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Viper provides a mechanism to try to ensure that ENV variables are unique. By using &lt;code&gt;SetEnvPrefix&lt;/code&gt;, you can tell Viper to use a prefix while reading from the environment variables. Both &lt;code&gt;BindEnv&lt;/code&gt; and &lt;code&gt;AutomaticEnv&lt;/code&gt; will use this prefix.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;BindEnv&lt;/code&gt; takes one or more parameters. The first parameter is the key name, the rest are the name of the environment variables to bind to this key. If more than one are provided, they will take precedence in the specified order. The name of the environment variable is case sensitive. If the ENV variable name is not provided, then Viper will automatically assume that the ENV variable matches the following format: prefix + "_" + the key name in ALL CAPS. When you explicitly provide the ENV variable name (the second parameter), it &lt;strong&gt;does not&lt;/strong&gt; automatically add the prefix. For example if the second parameter is "id", Viper will look for the ENV variable "ID".&lt;/p&gt; 
&lt;p&gt;One important thing to recognize when working with ENV variables is that the value will be read each time it is accessed. Viper does not fix the value when the &lt;code&gt;BindEnv&lt;/code&gt; is called.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;AutomaticEnv&lt;/code&gt; is a powerful helper especially when combined with &lt;code&gt;SetEnvPrefix&lt;/code&gt;. When called, Viper will check for an environment variable any time a &lt;code&gt;viper.Get&lt;/code&gt; request is made. It will apply the following rules. It will check for an environment variable with a name matching the key uppercased and prefixed with the &lt;code&gt;EnvPrefix&lt;/code&gt; if set.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;SetEnvKeyReplacer&lt;/code&gt; allows you to use a &lt;code&gt;strings.Replacer&lt;/code&gt; object to rewrite Env keys to an extent. This is useful if you want to use &lt;code&gt;-&lt;/code&gt; or something in your &lt;code&gt;Get()&lt;/code&gt; calls, but want your environmental variables to use &lt;code&gt;_&lt;/code&gt; delimiters. An example of using it can be found in &lt;code&gt;viper_test.go&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Alternatively, you can use &lt;code&gt;EnvKeyReplacer&lt;/code&gt; with &lt;code&gt;NewWithOptions&lt;/code&gt; factory function. Unlike &lt;code&gt;SetEnvKeyReplacer&lt;/code&gt;, it accepts a &lt;code&gt;StringReplacer&lt;/code&gt; interface allowing you to write custom string replacing logic.&lt;/p&gt; 
&lt;p&gt;By default empty environment variables are considered unset and will fall back to the next configuration source. To treat empty environment variables as set, use the &lt;code&gt;AllowEmptyEnv&lt;/code&gt; method.&lt;/p&gt; 
&lt;h4&gt;Env example&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;SetEnvPrefix("spf") // will be uppercased automatically
BindEnv("id")

os.Setenv("SPF_ID", "13") // typically done outside of the app

id := Get("id") // 13
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Working with Flags&lt;/h3&gt; 
&lt;p&gt;Viper has the ability to bind to flags. Specifically, Viper supports &lt;code&gt;Pflags&lt;/code&gt; as used in the &lt;a href="https://github.com/spf13/cobra"&gt;Cobra&lt;/a&gt; library.&lt;/p&gt; 
&lt;p&gt;Like &lt;code&gt;BindEnv&lt;/code&gt;, the value is not set when the binding method is called, but when it is accessed. This means you can bind as early as you want, even in an &lt;code&gt;init()&lt;/code&gt; function.&lt;/p&gt; 
&lt;p&gt;For individual flags, the &lt;code&gt;BindPFlag()&lt;/code&gt; method provides this functionality.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;serverCmd.Flags().Int("port", 1138, "Port to run Application server on")
viper.BindPFlag("port", serverCmd.Flags().Lookup("port"))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also bind an existing set of pflags (pflag.FlagSet):&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;pflag.Int("flagname", 1234, "help message for flagname")

pflag.Parse()
viper.BindPFlags(pflag.CommandLine)

i := viper.GetInt("flagname") // retrieve values from viper instead of pflag
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The use of &lt;a href="https://github.com/spf13/pflag/"&gt;pflag&lt;/a&gt; in Viper does not preclude the use of other packages that use the &lt;a href="https://golang.org/pkg/flag/"&gt;flag&lt;/a&gt; package from the standard library. The pflag package can handle the flags defined for the flag package by importing these flags. This is accomplished by a calling a convenience function provided by the pflag package called AddGoFlagSet().&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"flag"
	"github.com/spf13/pflag"
)

func main() {

	// using standard library "flag" package
	flag.Int("flagname", 1234, "help message for flagname")

	pflag.CommandLine.AddGoFlagSet(flag.CommandLine)
	pflag.Parse()
	viper.BindPFlags(pflag.CommandLine)

	i := viper.GetInt("flagname") // retrieve value from viper

	// ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Flag interfaces&lt;/h4&gt; 
&lt;p&gt;Viper provides two Go interfaces to bind other flag systems if you don’t use &lt;code&gt;Pflags&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;FlagValue&lt;/code&gt; represents a single flag. This is a very simple example on how to implement this interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type myFlag struct {}
func (f myFlag) HasChanged() bool { return false }
func (f myFlag) Name() string { return "my-flag-name" }
func (f myFlag) ValueString() string { return "my-flag-value" }
func (f myFlag) ValueType() string { return "string" }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once your flag implements this interface, you can simply tell Viper to bind it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.BindFlagValue("my-flag-name", myFlag{})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;FlagValueSet&lt;/code&gt; represents a group of flags. This is a very simple example on how to implement this interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type myFlagSet struct {
	flags []myFlag
}

func (f myFlagSet) VisitAll(fn func(FlagValue)) {
	for _, flag := range flags {
		fn(flag)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once your flag set implements this interface, you can simply tell Viper to bind it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;fSet := myFlagSet{
	flags: []myFlag{myFlag{}, myFlag{}},
}
viper.BindFlagValues("my-flags", fSet)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Remote Key/Value Store Support&lt;/h3&gt; 
&lt;p&gt;To enable remote support in Viper, do a blank import of the &lt;code&gt;viper/remote&lt;/code&gt; package:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;import _ "github.com/spf13/viper/remote"&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Viper will read a config string (as JSON, TOML, YAML, HCL or envfile) retrieved from a path in a Key/Value store such as etcd or Consul. These values take precedence over default values, but are overridden by configuration values retrieved from disk, flags, or environment variables.&lt;/p&gt; 
&lt;p&gt;Viper supports multiple hosts. To use, pass a list of endpoints separated by &lt;code&gt;;&lt;/code&gt;. For example &lt;code&gt;http://127.0.0.1:4001;http://127.0.0.1:4002&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Viper uses &lt;a href="https://github.com/sagikazarmark/crypt"&gt;crypt&lt;/a&gt; to retrieve configuration from the K/V store, which means that you can store your configuration values encrypted and have them automatically decrypted if you have the correct gpg keyring. Encryption is optional.&lt;/p&gt; 
&lt;p&gt;You can use remote configuration in conjunction with local configuration, or independently of it.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;crypt&lt;/code&gt; has a command-line helper that you can use to put configurations in your K/V store. &lt;code&gt;crypt&lt;/code&gt; defaults to etcd on &lt;a href="http://127.0.0.1:4001"&gt;http://127.0.0.1:4001&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ go get github.com/sagikazarmark/crypt/bin/crypt
$ crypt set -plaintext /config/hugo.json /Users/hugo/settings/config.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Confirm that your value was set:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ crypt get -plaintext /config/hugo.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;code&gt;crypt&lt;/code&gt; documentation for examples of how to set encrypted values, or how to use Consul.&lt;/p&gt; 
&lt;h3&gt;Remote Key/Value Store Example - Unencrypted&lt;/h3&gt; 
&lt;h4&gt;etcd&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.AddRemoteProvider("etcd", "http://127.0.0.1:4001","/config/hugo.json")
viper.SetConfigType("json") // because there is no file extension in a stream of bytes, supported extensions are "json", "toml", "yaml", "yml", "properties", "props", "prop", "env", "dotenv"
err := viper.ReadRemoteConfig()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;etcd3&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.AddRemoteProvider("etcd3", "http://127.0.0.1:4001","/config/hugo.json")
viper.SetConfigType("json") // because there is no file extension in a stream of bytes, supported extensions are "json", "toml", "yaml", "yml", "properties", "props", "prop", "env", "dotenv"
err := viper.ReadRemoteConfig()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Consul&lt;/h4&gt; 
&lt;p&gt;You need to set a key to Consul key/value storage with JSON value containing your desired config. For example, create a Consul key/value store key &lt;code&gt;MY_CONSUL_KEY&lt;/code&gt; with value:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
    "port": 8080,
    "hostname": "myhostname.com"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.AddRemoteProvider("consul", "localhost:8500", "MY_CONSUL_KEY")
viper.SetConfigType("json") // Need to explicitly set this to json
err := viper.ReadRemoteConfig()

fmt.Println(viper.Get("port")) // 8080
fmt.Println(viper.Get("hostname")) // myhostname.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Firestore&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.AddRemoteProvider("firestore", "google-cloud-project-id", "collection/document")
viper.SetConfigType("json") // Config's format: "json", "toml", "yaml", "yml"
err := viper.ReadRemoteConfig()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, you're allowed to use &lt;code&gt;SecureRemoteProvider&lt;/code&gt; also&lt;/p&gt; 
&lt;h4&gt;NATS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.AddRemoteProvider("nats", "nats://127.0.0.1:4222", "myapp.config")
viper.SetConfigType("json")
err := viper.ReadRemoteConfig()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Remote Key/Value Store Example - Encrypted&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.AddSecureRemoteProvider("etcd","http://127.0.0.1:4001","/config/hugo.json","/etc/secrets/mykeyring.gpg")
viper.SetConfigType("json") // because there is no file extension in a stream of bytes,  supported extensions are "json", "toml", "yaml", "yml", "properties", "props", "prop", "env", "dotenv"
err := viper.ReadRemoteConfig()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Watching Changes in etcd - Unencrypted&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// alternatively, you can create a new viper instance.
var runtime_viper = viper.New()

runtime_viper.AddRemoteProvider("etcd", "http://127.0.0.1:4001", "/config/hugo.yml")
runtime_viper.SetConfigType("yaml") // because there is no file extension in a stream of bytes, supported extensions are "json", "toml", "yaml", "yml", "properties", "props", "prop", "env", "dotenv"

// read from remote config the first time.
err := runtime_viper.ReadRemoteConfig()

// unmarshal config
runtime_viper.Unmarshal(&amp;amp;runtime_conf)

// open a goroutine to watch remote changes forever
go func(){
	for {
		time.Sleep(time.Second * 5) // delay after each request

		// currently, only tested with etcd support
		err := runtime_viper.WatchRemoteConfig()
		if err != nil {
			log.Errorf("unable to read remote config: %v", err)
			continue
		}

		// unmarshal new config into our runtime config struct. you can also use channel
		// to implement a signal to notify the system of the changes
		runtime_viper.Unmarshal(&amp;amp;runtime_conf)
	}
}()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting Values From Viper&lt;/h2&gt; 
&lt;p&gt;In Viper, there are a few ways to get a value depending on the value’s type. The following functions and methods exist:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Get(key string) : any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetBool(key string) : bool&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetFloat64(key string) : float64&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetInt(key string) : int&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetIntSlice(key string) : []int&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetString(key string) : string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetStringMap(key string) : map[string]any&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetStringMapString(key string) : map[string]string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetStringSlice(key string) : []string&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetTime(key string) : time.Time&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;GetDuration(key string) : time.Duration&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;IsSet(key string) : bool&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;AllSettings() : map[string]any&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;One important thing to recognize is that each Get function will return a zero value if it’s not found. To check if a given key exists, the &lt;code&gt;IsSet()&lt;/code&gt; method has been provided.&lt;/p&gt; 
&lt;p&gt;The zero value will also be returned if the value is set, but fails to parse as the requested type.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;viper.GetString("logfile") // case-insensitive Setting &amp;amp; Getting
if viper.GetBool("verbose") {
	fmt.Println("verbose enabled")
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Accessing nested keys&lt;/h3&gt; 
&lt;p&gt;The accessor methods also accept formatted paths to deeply nested keys. For example, if the following JSON file is loaded:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
    "host": {
        "address": "localhost",
        "port": 5799
    },
    "datastore": {
        "metric": {
            "host": "127.0.0.1",
            "port": 3099
        },
        "warehouse": {
            "host": "198.0.0.1",
            "port": 2112
        }
    }
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Viper can access a nested field by passing a &lt;code&gt;.&lt;/code&gt; delimited path of keys:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;GetString("datastore.metric.host") // (returns "127.0.0.1")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This obeys the precedence rules established above; the search for the path will cascade through the remaining configuration registries until found.&lt;/p&gt; 
&lt;p&gt;For example, given this configuration file, both &lt;code&gt;datastore.metric.host&lt;/code&gt; and &lt;code&gt;datastore.metric.port&lt;/code&gt; are already defined (and may be overridden). If in addition &lt;code&gt;datastore.metric.protocol&lt;/code&gt; was defined in the defaults, Viper would also find it.&lt;/p&gt; 
&lt;p&gt;However, if &lt;code&gt;datastore.metric&lt;/code&gt; was overridden (by a flag, an environment variable, the &lt;code&gt;Set()&lt;/code&gt; method, …) with an immediate value, then all sub-keys of &lt;code&gt;datastore.metric&lt;/code&gt; become undefined, they are “shadowed” by the higher-priority configuration level.&lt;/p&gt; 
&lt;p&gt;Viper can access array indices by using numbers in the path. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsonc"&gt;{
    "host": {
        "address": "localhost",
        "ports": [
            5799,
            6029
        ]
    },
    "datastore": {
        "metric": {
            "host": "127.0.0.1",
            "port": 3099
        },
        "warehouse": {
            "host": "198.0.0.1",
            "port": 2112
        }
    }
}

GetInt("host.ports.1") // returns 6029

&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Lastly, if there exists a key that matches the delimited key path, its value will be returned instead. E.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-jsonc"&gt;{
    "datastore.metric.host": "0.0.0.0",
    "host": {
        "address": "localhost",
        "port": 5799
    },
    "datastore": {
        "metric": {
            "host": "127.0.0.1",
            "port": 3099
        },
        "warehouse": {
            "host": "198.0.0.1",
            "port": 2112
        }
    }
}

GetString("datastore.metric.host") // returns "0.0.0.0"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Extracting a sub-tree&lt;/h3&gt; 
&lt;p&gt;When developing reusable modules, it's often useful to extract a subset of the configuration and pass it to a module. This way the module can be instantiated more than once, with different configurations.&lt;/p&gt; 
&lt;p&gt;For example, an application might use multiple different cache stores for different purposes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;cache:
  cache1:
    max-items: 100
    item-size: 64
  cache2:
    max-items: 200
    item-size: 80
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We could pass the cache name to a module (eg. &lt;code&gt;NewCache("cache1")&lt;/code&gt;), but it would require weird concatenation for accessing config keys and would be less separated from the global config.&lt;/p&gt; 
&lt;p&gt;So instead of doing that let's pass a Viper instance to the constructor that represents a subset of the configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;cache1Config := viper.Sub("cache.cache1")
if cache1Config == nil { // Sub returns nil if the key cannot be found
	panic("cache configuration not found")
}

cache1 := NewCache(cache1Config)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Always check the return value of &lt;code&gt;Sub&lt;/code&gt;. It returns &lt;code&gt;nil&lt;/code&gt; if a key cannot be found.&lt;/p&gt; 
&lt;p&gt;Internally, the &lt;code&gt;NewCache&lt;/code&gt; function can address &lt;code&gt;max-items&lt;/code&gt; and &lt;code&gt;item-size&lt;/code&gt; keys directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func NewCache(v *Viper) *Cache {
	return &amp;amp;Cache{
		MaxItems: v.GetInt("max-items"),
		ItemSize: v.GetInt("item-size"),
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The resulting code is easy to test, since it's decoupled from the main config structure, and easier to reuse (for the same reason).&lt;/p&gt; 
&lt;h3&gt;Unmarshaling&lt;/h3&gt; 
&lt;p&gt;You also have the option of Unmarshaling all or a specific value to a struct, map, etc.&lt;/p&gt; 
&lt;p&gt;There are two methods to do this:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;Unmarshal(rawVal any) : error&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;UnmarshalKey(key string, rawVal any) : error&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type config struct {
	Port int
	Name string
	PathMap string `mapstructure:"path_map"`
}

var C config

err := viper.Unmarshal(&amp;amp;C)
if err != nil {
	t.Fatalf("unable to decode into struct, %v", err)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to unmarshal configuration where the keys themselves contain dot (the default key delimiter), you have to change the delimiter:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;v := viper.NewWithOptions(viper.KeyDelimiter("::"))

v.SetDefault("chart::values", map[string]any{
	"ingress": map[string]any{
		"annotations": map[string]any{
			"traefik.frontend.rule.type":                 "PathPrefix",
			"traefik.ingress.kubernetes.io/ssl-redirect": "true",
		},
	},
})

type config struct {
	Chart struct{
		Values map[string]any
	}
}

var C config

v.Unmarshal(&amp;amp;C)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Viper also supports unmarshaling into embedded structs:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;/*
Example config:

module:
    enabled: true
    token: 89h3f98hbwf987h3f98wenf89ehf
*/
type config struct {
	Module struct {
		Enabled bool

		moduleConfig `mapstructure:",squash"`
	}
}

// moduleConfig could be in a module specific package
type moduleConfig struct {
	Token string
}

var C config

err := viper.Unmarshal(&amp;amp;C)
if err != nil {
	t.Fatalf("unable to decode into struct, %v", err)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Viper uses &lt;a href="https://github.com/go-viper/mapstructure"&gt;github.com/go-viper/mapstructure&lt;/a&gt; under the hood for unmarshaling values which uses &lt;code&gt;mapstructure&lt;/code&gt; tags by default.&lt;/p&gt; 
&lt;h3&gt;Decoding custom formats&lt;/h3&gt; 
&lt;p&gt;A frequently requested feature for Viper is adding more value formats and decoders. For example, parsing character (dot, comma, semicolon, etc) separated strings into slices.&lt;/p&gt; 
&lt;p&gt;This is already available in Viper using mapstructure decode hooks.&lt;/p&gt; 
&lt;p&gt;Read more about the details in &lt;a href="https://sagikazarmark.hu/blog/decoding-custom-formats-with-viper/"&gt;this blog post&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Marshalling to string&lt;/h3&gt; 
&lt;p&gt;You may need to marshal all the settings held in viper into a string rather than write them to a file. You can use your favorite format's marshaller with the config returned by &lt;code&gt;AllSettings()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
	yaml "go.yaml.in/yaml/v3"
	// ...
)

func yamlStringSettings() string {
	c := viper.AllSettings()
	bs, err := yaml.Marshal(c)
	if err != nil {
		log.Fatalf("unable to marshal config to YAML: %v", err)
	}
	return string(bs)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Viper or Vipers?&lt;/h2&gt; 
&lt;p&gt;Viper comes with a global instance (singleton) out of the box.&lt;/p&gt; 
&lt;p&gt;Although it makes setting up configuration easy, using it is generally discouraged as it makes testing harder and can lead to unexpected behavior.&lt;/p&gt; 
&lt;p&gt;The best practice is to initialize a Viper instance and pass that around when necessary.&lt;/p&gt; 
&lt;p&gt;The global instance &lt;em&gt;MAY&lt;/em&gt; be deprecated in the future. See &lt;a href="https://github.com/spf13/viper/issues/1855"&gt;#1855&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Working with multiple vipers&lt;/h3&gt; 
&lt;p&gt;You can also create many different vipers for use in your application. Each will have its own unique set of configurations and values. Each can read from a different config file, key value store, etc. All of the functions that viper package supports are mirrored as methods on a viper.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;x := viper.New()
y := viper.New()

x.SetDefault("ContentDir", "content")
y.SetDefault("ContentDir", "foobar")

//...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When working with multiple vipers, it is up to the user to keep track of the different vipers.&lt;/p&gt; 
&lt;h2&gt;Q &amp;amp; A&lt;/h2&gt; 
&lt;h3&gt;Why is it called “Viper”?&lt;/h3&gt; 
&lt;p&gt;A: Viper is designed to be a &lt;a href="http://en.wikipedia.org/wiki/Viper_(G.I._Joe)"&gt;companion&lt;/a&gt; to &lt;a href="https://github.com/spf13/cobra"&gt;Cobra&lt;/a&gt;. While both can operate completely independently, together they make a powerful pair to handle much of your application foundation needs.&lt;/p&gt; 
&lt;h3&gt;Why is it called “Cobra”?&lt;/h3&gt; 
&lt;p&gt;Is there a better name for a &lt;a href="http://en.wikipedia.org/wiki/Cobra_Commander"&gt;commander&lt;/a&gt;?&lt;/p&gt; 
&lt;h3&gt;Does Viper support case sensitive keys?&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; No.&lt;/p&gt; 
&lt;p&gt;Viper merges configuration from various sources, many of which are either case insensitive or uses different casing than the rest of the sources (eg. env vars). In order to provide the best experience when using multiple sources, the decision has been made to make all keys case insensitive.&lt;/p&gt; 
&lt;p&gt;There has been several attempts to implement case sensitivity, but unfortunately it's not that trivial. We might take a stab at implementing it in &lt;a href="https://github.com/spf13/viper/issues/772"&gt;Viper v2&lt;/a&gt;, but despite the initial noise, it does not seem to be requested that much.&lt;/p&gt; 
&lt;p&gt;You can vote for case sensitivity by filling out this feedback form: &lt;a href="https://forms.gle/R6faU74qPRPAzchZ9"&gt;https://forms.gle/R6faU74qPRPAzchZ9&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Is it safe to concurrently read and write to a viper?&lt;/h3&gt; 
&lt;p&gt;No, you will need to synchronize access to the viper yourself (for example by using the &lt;code&gt;sync&lt;/code&gt; package). Concurrent reads and writes can cause a panic.&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/spf13/viper/master/TROUBLESHOOTING.md"&gt;TROUBLESHOOTING.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;For an optimal developer experience, it is recommended to install &lt;a href="https://nixos.org/download.html"&gt;Nix&lt;/a&gt; and &lt;a href="https://direnv.net/docs/installation.html"&gt;direnv&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Alternatively, install &lt;a href="https://go.dev/dl/"&gt;Go&lt;/a&gt; on your computer then run &lt;code&gt;make deps&lt;/code&gt; to install the rest of the dependencies.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Run the test suite:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run linters:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make lint # pass -j option to run them in parallel
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Some linter violations can automatically be fixed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make fmt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The project is licensed under the &lt;a href="https://raw.githubusercontent.com/spf13/viper/master/LICENSE"&gt;MIT License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>livekit/livekit</title>
      <link>https://github.com/livekit/livekit</link>
      <description>&lt;p&gt;End-to-end stack for WebRTC. SFU media server and SDKs.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source media="(prefers-color-scheme: dark)" srcset="/.github/banner_dark.png"&gt; 
 &lt;source media="(prefers-color-scheme: light)" srcset="/.github/banner_light.png"&gt; 
 &lt;img style="width:100%;" alt="The LiveKit icon, the name of the repository and some sample code in the background." src="https://raw.githubusercontent.com/livekit/livekit/main/.github/banner_light.png"&gt; 
&lt;/picture&gt; 
&lt;!--END_BANNER_IMAGE--&gt; 
&lt;h1&gt;LiveKit: Real-time video, audio and data for developers&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://livekit.io"&gt;LiveKit&lt;/a&gt; is an open source project that provides scalable, multi-user conferencing based on WebRTC. It's designed to provide everything you need to build real-time video audio data capabilities in your applications.&lt;/p&gt; 
&lt;p&gt;LiveKit's server is written in Go, using the awesome &lt;a href="https://github.com/pion/webrtc"&gt;Pion WebRTC&lt;/a&gt; implementation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/livekit/livekit/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/livekit/livekit?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000" alt="GitHub stars"&gt;&lt;/a&gt; &lt;a href="https://livekit.io/join-slack"&gt;&lt;img src="https://img.shields.io/endpoint?url=https%3A%2F%2Flivekit.io%2Fbadges%2Fslack" alt="Slack community"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/livekit"&gt;&lt;img src="https://img.shields.io/twitter/follow/livekit" alt="Twitter Follow"&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/livekit/livekit"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki"&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/livekit/livekit" alt="GitHub release (latest SemVer)"&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/actions/workflows/buildtest.yaml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/livekit/livekit/buildtest.yaml?branch=master" alt="GitHub Workflow Status"&gt;&lt;/a&gt; &lt;a href="https://github.com/livekit/livekit/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/livekit/livekit" alt="License"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Scalable, distributed WebRTC SFU (Selective Forwarding Unit)&lt;/li&gt; 
 &lt;li&gt;Modern, full-featured client SDKs&lt;/li&gt; 
 &lt;li&gt;Built for production, supports JWT authentication&lt;/li&gt; 
 &lt;li&gt;Robust networking and connectivity, UDP/TCP/TURN&lt;/li&gt; 
 &lt;li&gt;Easy to deploy: single binary, Docker or Kubernetes&lt;/li&gt; 
 &lt;li&gt;Advanced features including: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#speaker-detection"&gt;speaker detection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/publish/#video-simulcast"&gt;simulcast&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://blog.livekit.io/livekit-one-dot-zero/"&gt;end-to-end optimizations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/client/tracks/subscribe/#selective-subscription"&gt;selective subscription&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/managing-participants/"&gt;moderation APIs&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;end-to-end encryption&lt;/li&gt; 
   &lt;li&gt;SVC codecs (VP9, AV1)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://docs.livekit.io/home/self-hosting/distributed/"&gt;distributed and multi-region&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation &amp;amp; Guides&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://docs.livekit.io"&gt;https://docs.livekit.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Live Demos&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://meet.livekit.io"&gt;LiveKit Meet&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/meet"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://spatial-audio-demo.livekit.io/"&gt;Spatial Audio&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/spatial-audio"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Livestreaming from OBS Studio (&lt;a href="https://github.com/livekit-examples/livestream"&gt;source&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://livekit.io/kitt"&gt;AI voice assistant using ChatGPT&lt;/a&gt; (&lt;a href="https://github.com/livekit-examples/kitt"&gt;source&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/agents"&gt;Agents&lt;/a&gt;: build real-time multimodal AI applications with programmable backend participants&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt;: record or multi-stream rooms and export individual tracks&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt;: ingest streams from external sources like RTMP, WHIP, HLS, or OBS Studio&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SDKs &amp;amp; Tools&lt;/h2&gt; 
&lt;h3&gt;Client SDKs&lt;/h3&gt; 
&lt;p&gt;Client SDKs enable your frontend to include interactive, multi-user experiences.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;th&gt;Language&lt;/th&gt; 
   &lt;th&gt;Repo&lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://docs.livekit.io/home/client/events/#declarative-ui" target="_blank" rel="noopener noreferrer"&gt;Declarative UI&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt;Links&lt;/th&gt; 
  &lt;/tr&gt; 
  &lt;!-- BEGIN Template
  &lt;tr&gt;
    &lt;td&gt;Language&lt;/td&gt;
    &lt;td&gt;
      &lt;a href="" target="_blank" rel="noopener noreferrer"&gt;&lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
    &lt;td&gt;&lt;/td&gt;
  &lt;/tr&gt;
  END --&gt; 
  &lt;!-- JavaScript --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-js" target="_blank" rel="noopener noreferrer"&gt;client-sdk-js&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/livekit-react" target="_blank" rel="noopener noreferrer"&gt;React&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-js/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;JS example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-js/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;React example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Swift --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swift (iOS / MacOS)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-swift" target="_blank" rel="noopener noreferrer"&gt;client-sdk-swift&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Swift UI&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-swift/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-example-swift" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Kotlin --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kotlin (Android)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-android" target="_blank" rel="noopener noreferrer"&gt;client-sdk-android&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;Compose&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-android/index.html" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app/src/main/java/io/livekit/android/sample" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-android/tree/main/sample-app-compose/src/main/java/io/livekit/android/composesample" target="_blank" rel="noopener noreferrer"&gt;Compose example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Flutter --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Flutter (all platforms)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-flutter" target="_blank" rel="noopener noreferrer"&gt;client-sdk-flutter&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://docs.livekit.io/client-sdk-flutter/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; | &lt;a href="https://github.com/livekit/client-sdk-flutter/tree/main/example" target="_blank" rel="noopener noreferrer"&gt;example&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Unity --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Unity WebGL&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-unity-web" target="_blank" rel="noopener noreferrer"&gt;client-sdk-unity-web&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://livekit.github.io/client-sdk-unity-web/" target="_blank" rel="noopener noreferrer"&gt;docs&lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- React Native --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;React Native (beta)&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-react-native" target="_blank" rel="noopener noreferrer"&gt;client-sdk-react-native&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;native&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;!-- Rust --&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rust&lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://github.com/livekit/client-sdk-rust" target="_blank" rel="noopener noreferrer"&gt;client-sdk-rust&lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;Server SDKs&lt;/h3&gt; 
&lt;p&gt;Server SDKs enable your backend to generate &lt;a href="https://docs.livekit.io/home/get-started/authentication/"&gt;access tokens&lt;/a&gt;, call &lt;a href="https://docs.livekit.io/reference/server/server-apis/"&gt;server APIs&lt;/a&gt;, and receive &lt;a href="https://docs.livekit.io/home/server/webhooks/"&gt;webhooks&lt;/a&gt;. In addition, the Go SDK includes client capabilities, enabling you to build automations that behave like end-users.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Language&lt;/th&gt; 
   &lt;th align="left"&gt;Repo&lt;/th&gt; 
   &lt;th align="left"&gt;Docs&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Go&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-go"&gt;server-sdk-go&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://pkg.go.dev/github.com/livekit/server-sdk-go"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;JavaScript (TypeScript)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-js"&gt;server-sdk-js&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://docs.livekit.io/server-sdk-js/"&gt;docs&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Ruby&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;server-sdk-ruby&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Java (Kotlin)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;server-sdk-kotlin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;Python (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/livekit/python-sdks"&gt;python-sdks&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;PHP (community)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;agence104/livekit-server-sdk-php&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt; - command line interface &amp;amp; load tester&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hub.docker.com/r/livekit/livekit-server"&gt;Docker image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/livekit/livekit-helm"&gt;Helm charts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] We recommend installing &lt;a href="https://github.com/livekit/livekit-cli"&gt;LiveKit CLI&lt;/a&gt; along with the server. It lets you access server APIs, create tokens, and generate test traffic.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The following will install LiveKit's media server:&lt;/p&gt; 
&lt;h3&gt;MacOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;brew install livekit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sSL https://get.livekit.io | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Windows&lt;/h3&gt; 
&lt;p&gt;Download the &lt;a href="https://github.com/livekit/livekit/releases/latest"&gt;latest release here&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Starting LiveKit&lt;/h3&gt; 
&lt;p&gt;Start LiveKit in development mode by running &lt;code&gt;livekit-server --dev&lt;/code&gt;. It'll use a placeholder API key/secret pair.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;API Key: devkey
API Secret: secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To customize your setup for production, refer to our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Creating access token&lt;/h3&gt; 
&lt;p&gt;A user connecting to a LiveKit room requires an &lt;a href="https://docs.livekit.io/home/get-started/authentication/#creating-a-token"&gt;access token&lt;/a&gt;. Access tokens (JWT) encode the user's identity and the room permissions they've been granted. You can generate a token with our CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk token create \
    --api-key devkey --api-secret secret \
    --join --room my-first-room --identity user1 \
    --valid-for 24h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Test with example app&lt;/h3&gt; 
&lt;p&gt;Head over to our &lt;a href="https://example.livekit.io"&gt;example app&lt;/a&gt; and enter a generated token to connect to your LiveKit server. This app is built with our &lt;a href="https://github.com/livekit/livekit-react"&gt;React SDK&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Once connected, your video and audio are now being published to your new LiveKit instance!&lt;/p&gt; 
&lt;h3&gt;Simulating a test publisher&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;lk room join \
    --url ws://localhost:7880 \
    --api-key devkey --api-secret secret \
    --identity bot-user1 \
    --publish-demo \
    my-first-room
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This command publishes a looped demo video to a room. Due to how the video clip was encoded (keyframes every 3s), there's a slight delay before the browser has sufficient data to begin rendering frames. This is an artifact of the simulation.&lt;/p&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;h3&gt;Use LiveKit Cloud&lt;/h3&gt; 
&lt;p&gt;LiveKit Cloud is the fastest and most reliable way to run LiveKit. Every project gets free monthly bandwidth and transcoding credits.&lt;/p&gt; 
&lt;p&gt;Sign up for &lt;a href="https://cloud.livekit.io/"&gt;LiveKit Cloud&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Self-host&lt;/h3&gt; 
&lt;p&gt;Read our &lt;a href="https://docs.livekit.io/deploy/"&gt;deployment docs&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Building from source&lt;/h2&gt; 
&lt;p&gt;Pre-requisites:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.23+ is installed&lt;/li&gt; 
 &lt;li&gt;GOPATH/bin is in your PATH&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Then run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/livekit/livekit
cd livekit
./bootstrap.sh
mage
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome your contributions toward improving LiveKit! Please join us &lt;a href="http://livekit.io/join-slack"&gt;on Slack&lt;/a&gt; to discuss your ideas and/or PRs.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;LiveKit server is licensed under Apache License v2.0.&lt;/p&gt; 
&lt;!--BEGIN_REPO_NAV--&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;table&gt; 
 &lt;thead&gt;
  &lt;tr&gt;
   &lt;th colspan="2"&gt;LiveKit Ecosystem&lt;/th&gt;
  &lt;/tr&gt;
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt;
   &lt;td&gt;LiveKit SDKs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/client-sdk-js"&gt;Browser&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-swift"&gt;iOS/macOS/visionOS&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-android"&gt;Android&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-flutter"&gt;Flutter&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-react-native"&gt;React Native&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity"&gt;Unity&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-unity-web"&gt;Unity (WebGL)&lt;/a&gt; · &lt;a href="https://github.com/livekit/client-sdk-esp32"&gt;ESP32&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Server APIs&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/node-sdks"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-go"&gt;Golang&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-ruby"&gt;Ruby&lt;/a&gt; · &lt;a href="https://github.com/livekit/server-sdk-kotlin"&gt;Java/Kotlin&lt;/a&gt; · &lt;a href="https://github.com/livekit/python-sdks"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/rust-sdks"&gt;Rust&lt;/a&gt; · &lt;a href="https://github.com/agence104/livekit-server-sdk-php"&gt;PHP (community)&lt;/a&gt; · &lt;a href="https://github.com/pabloFuente/livekit-server-sdk-dotnet"&gt;.NET (community)&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;UI Components&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/components-js"&gt;React&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-android"&gt;Android Compose&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-swift"&gt;SwiftUI&lt;/a&gt; · &lt;a href="https://github.com/livekit/components-flutter"&gt;Flutter&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Agents Frameworks&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://github.com/livekit/agents"&gt;Python&lt;/a&gt; · &lt;a href="https://github.com/livekit/agents-js"&gt;Node.js&lt;/a&gt; · &lt;a href="https://github.com/livekit/agent-playground"&gt;Playground&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Services&lt;/td&gt;
   &lt;td&gt;&lt;b&gt;LiveKit server&lt;/b&gt; · &lt;a href="https://github.com/livekit/egress"&gt;Egress&lt;/a&gt; · &lt;a href="https://github.com/livekit/ingress"&gt;Ingress&lt;/a&gt; · &lt;a href="https://github.com/livekit/sip"&gt;SIP&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;&lt;/tr&gt; 
  &lt;tr&gt;
   &lt;td&gt;Resources&lt;/td&gt;
   &lt;td&gt;&lt;a href="https://docs.livekit.io"&gt;Docs&lt;/a&gt; · &lt;a href="https://github.com/livekit-examples"&gt;Example apps&lt;/a&gt; · &lt;a href="https://livekit.io/cloud"&gt;Cloud&lt;/a&gt; · &lt;a href="https://docs.livekit.io/home/self-hosting/deployment"&gt;Self-hosting&lt;/a&gt; · &lt;a href="https://github.com/livekit/livekit-cli"&gt;CLI&lt;/a&gt;&lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;!--END_REPO_NAV--&gt;</description>
    </item>
    
    <item>
      <title>alireza0/s-ui</title>
      <link>https://github.com/alireza0/s-ui</link>
      <description>&lt;p&gt;An advanced Web Panel • Built for SagerNet/Sing-Box&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;S-UI&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;An Advanced Web Panel • Built on SagerNet/Sing-Box&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/alireza0/s-ui.svg?sanitize=true" alt=""&gt; &lt;img src="https://img.shields.io/docker/pulls/alireza7/s-ui.svg?sanitize=true" alt="S-UI Docker pull"&gt; &lt;a href="https://goreportcard.com/report/github.com/alireza0/s-ui"&gt;&lt;img src="https://goreportcard.com/badge/github.com/alireza0/s-ui" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://img.shields.io/github/downloads/alireza0/s-ui/total.svg"&gt;&lt;img src="https://img.shields.io/github/downloads/alireza0/s-ui/total.svg?sanitize=true" alt="Downloads"&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;&lt;img src="https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true" alt="License"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Disclaimer:&lt;/strong&gt; This project is only for personal learning and communication, please do not use it for illegal purposes, please do not use it in a production environment&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;If you think this project is helpful to you, you may wish to give a&lt;/strong&gt;&lt;span&gt;🌟&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.buymeacoffee.com/alireza7"&gt;&lt;img src="https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png" alt="&amp;quot;Buy Me A Coffee&amp;quot;"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;USDT (TRC20): &lt;code&gt;TYTq73Gj6dJ67qe58JVPD9zpjW2cc9XgVz&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Overview&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Features&lt;/th&gt; 
   &lt;th align="center"&gt;Enable?&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Protocol&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Language&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multi-Client/Inbound&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Advanced Traffic Routing Interface&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Client &amp;amp; Traffic &amp;amp; System Status&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Subscription Service (link/json + info)&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dark/Light Theme&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API Interface&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;API Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/alireza0/s-ui/wiki/API-Documentation"&gt;API-Documentation Wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Default Installation Information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Panel Port: 2095&lt;/li&gt; 
 &lt;li&gt;Panel Path: /app/&lt;/li&gt; 
 &lt;li&gt;Subscription Port: 2096&lt;/li&gt; 
 &lt;li&gt;Subscription Path: /sub/&lt;/li&gt; 
 &lt;li&gt;User/Password: admin&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Upgrade to Latest Version&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/alireza0/s-ui/master/install.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install legacy Version&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; To install your desired legacy version, add the version to the end of the installation command. e.g., ver &lt;code&gt;1.0.0&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;VERSION=1.0.0 &amp;amp;&amp;amp; bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/alireza0/s-ui/$VERSION/install.sh) $VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Manual installation&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Get the latest version of S-UI based on your OS/Architecture from GitHub: &lt;a href="https://github.com/alireza0/s-ui/releases/latest"&gt;https://github.com/alireza0/s-ui/releases/latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt; Get the latest version of &lt;code&gt;s-ui.sh&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/alireza0/s-ui/master/s-ui.sh"&gt;https://raw.githubusercontent.com/alireza0/s-ui/master/s-ui.sh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;OPTIONAL&lt;/strong&gt; Copy &lt;code&gt;s-ui.sh&lt;/code&gt; to /usr/bin/ and run &lt;code&gt;chmod +x /usr/bin/s-ui&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Extract s-ui tar.gz file to a directory of your choice and navigate to the directory where you extracted the tar.gz file.&lt;/li&gt; 
 &lt;li&gt;Copy *.service files to /etc/systemd/system/ and run &lt;code&gt;systemctl daemon-reload&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Enable autostart and start S-UI service using &lt;code&gt;systemctl enable s-ui --now&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Start sing-box service using &lt;code&gt;systemctl enable sing-box --now&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Uninstall S-UI&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo -i

systemctl disable s-ui  --now

rm -f /etc/systemd/system/sing-box.service
systemctl daemon-reload

rm -fr /usr/local/s-ui
rm /usr/bin/s-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Install using Docker&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Usage&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;Step 1:&lt;/strong&gt; Install Docker&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;curl -fsSL https://get.docker.com | sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;&lt;strong&gt;Step 2:&lt;/strong&gt; Install S-UI&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Docker compose method&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;mkdir s-ui &amp;amp;&amp;amp; cd s-ui
wget -q https://raw.githubusercontent.com/alireza0/s-ui/master/docker-compose.yml
docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Use docker&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;mkdir s-ui &amp;amp;&amp;amp; cd s-ui
docker run -itd \
    -p 2095:2095 -p 2096:2096 -p 443:443 -p 80:80 \
    -v $PWD/db/:/usr/local/s-ui/db/ \
    -v $PWD/cert/:/root/cert/ \
    --name s-ui --restart=unless-stopped \
    alireza7/s-ui:latest
&lt;/code&gt;&lt;/pre&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Build your own image&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/alireza0/s-ui
git submodule update --init --recursive
docker build -t s-ui .
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Manual run ( contribution )&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Build and run whole project&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;./runSUI.sh
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;Clone the repository&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# clone repository
git clone https://github.com/alireza0/s-ui
# clone submodules
git submodule update --init --recursive
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h3&gt;- Frontend&lt;/h3&gt; 
 &lt;p&gt;Visit &lt;a href="https://github.com/alireza0/s-ui-frontend"&gt;s-ui-frontend&lt;/a&gt; for frontend code&lt;/p&gt; 
 &lt;h3&gt;- Backend&lt;/h3&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Please build frontend once before!&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;p&gt;To build backend:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# remove old frontend compiled files
rm -fr web/html/*
# apply new frontend compiled files
cp -R frontend/dist/ web/html/
# build
go build -o sui main.go
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;To run backend (from root folder of repository):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;./sui
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Languages&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;English&lt;/li&gt; 
 &lt;li&gt;Farsi&lt;/li&gt; 
 &lt;li&gt;Vietnamese&lt;/li&gt; 
 &lt;li&gt;Chinese (Simplified)&lt;/li&gt; 
 &lt;li&gt;Chinese (Traditional)&lt;/li&gt; 
 &lt;li&gt;Russian&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Supported protocols: 
  &lt;ul&gt; 
   &lt;li&gt;General: Mixed, SOCKS, HTTP, HTTPS, Direct, Redirect, TProxy&lt;/li&gt; 
   &lt;li&gt;V2Ray based: VLESS, VMess, Trojan, Shadowsocks&lt;/li&gt; 
   &lt;li&gt;Other protocols: ShadowTLS, Hysteria, Hysteria2, Naive, TUIC&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Supports XTLS protocols&lt;/li&gt; 
 &lt;li&gt;An advanced interface for routing traffic, incorporating PROXY Protocol, External, and Transparent Proxy, SSL Certificate, and Port&lt;/li&gt; 
 &lt;li&gt;An advanced interface for inbound and outbound configuration&lt;/li&gt; 
 &lt;li&gt;Clients’ traffic cap and expiration date&lt;/li&gt; 
 &lt;li&gt;Displays online clients, inbounds and outbounds with traffic statistics, and system status monitoring&lt;/li&gt; 
 &lt;li&gt;Subscription service with ability to add external links and subscription&lt;/li&gt; 
 &lt;li&gt;HTTPS for secure access to the web panel and subscription service (self-provided domain + SSL certificate)&lt;/li&gt; 
 &lt;li&gt;Dark/Light theme&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Recommended OS&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ubuntu 20.04+&lt;/li&gt; 
 &lt;li&gt;Debian 11+&lt;/li&gt; 
 &lt;li&gt;CentOS 8+&lt;/li&gt; 
 &lt;li&gt;Fedora 36+&lt;/li&gt; 
 &lt;li&gt;Arch Linux&lt;/li&gt; 
 &lt;li&gt;Parch Linux&lt;/li&gt; 
 &lt;li&gt;Manjaro&lt;/li&gt; 
 &lt;li&gt;Armbian&lt;/li&gt; 
 &lt;li&gt;AlmaLinux 9+&lt;/li&gt; 
 &lt;li&gt;Rocky Linux 9+&lt;/li&gt; 
 &lt;li&gt;Oracle Linux 8+&lt;/li&gt; 
 &lt;li&gt;OpenSUSE Tubleweed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Environment Variables&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Usage&lt;/h3&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;Variable&lt;/th&gt; 
    &lt;th align="center"&gt;Type&lt;/th&gt; 
    &lt;th align="left"&gt;Default&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_LOG_LEVEL&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;"debug"&lt;/code&gt; | &lt;code&gt;"info"&lt;/code&gt; | &lt;code&gt;"warn"&lt;/code&gt; | &lt;code&gt;"error"&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"info"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_DEBUG&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;boolean&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_BIN_FOLDER&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"bin"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SUI_DB_FOLDER&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;&lt;code&gt;"db"&lt;/code&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;SINGBOX_API&lt;/td&gt; 
    &lt;td align="center"&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt; 
    &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/details&gt; 
&lt;h2&gt;SSL Certificate&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;Click for details&lt;/summary&gt; 
 &lt;h3&gt;Certbot&lt;/h3&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;snap install core; snap refresh core
snap install --classic certbot
ln -s /snap/bin/certbot /usr/bin/certbot

certbot certonly --standalone --register-unsafely-without-email --non-interactive --agree-tos -d &amp;lt;Your Domain Name&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;Stargazers over Time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/alireza0/s-ui"&gt;&lt;img src="https://starchart.cc/alireza0/s-ui.svg?sanitize=true" alt="Stargazers over time"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ariga/atlas</title>
      <link>https://github.com/ariga/atlas</link>
      <description>&lt;p&gt;Manage your database schema as code&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Atlas: manage your database schema as code&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/atlasgo_io"&gt;&lt;img src="https://img.shields.io/twitter/url.svg?label=Follow%20%40ariga%2Fatlas&amp;amp;style=social&amp;amp;url=https%3A%2F%2Ftwitter.com%2Fatlasgo_io" alt="Twitter"&gt;&lt;/a&gt; &lt;a href="https://discord.com/invite/zZ6sWVg6NT"&gt;&lt;img src="https://img.shields.io/discord/930720389120794674?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt; &lt;a href="https://atlasgo.io" target="_blank"&gt; &lt;img alt="image" src="https://github.com/ariga/atlas/assets/7413593/2e27cb81-bad6-491a-8d9c-20920995a186"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;Atlas is a language-agnostic tool for managing and migrating database schemas using modern DevOps principles. It offers two workflows:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Declarative&lt;/strong&gt;: Similar to Terraform, Atlas compares the current state of the database to the desired state, as defined in an &lt;a href="https://atlasgo.io/atlas-schema/hcl"&gt;HCL&lt;/a&gt;, &lt;a href="https://atlasgo.io/atlas-schema/sql"&gt;SQL&lt;/a&gt;, or &lt;a href="https://atlasgo.io/orms"&gt;ORM&lt;/a&gt; schema. Based on this comparison, it generates and executes a migration plan to transition the database to its desired state.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Versioned&lt;/strong&gt;: Unlike other tools, Atlas automatically plans schema migrations for you. Users can describe their desired database schema in &lt;a href="https://atlasgo.io/atlas-schema/hcl"&gt;HCL&lt;/a&gt;, &lt;a href="https://atlasgo.io/atlas-schema/sql"&gt;SQL&lt;/a&gt;, or their chosen &lt;a href="https://atlasgo.io/orms"&gt;ORM&lt;/a&gt;, and by utilizing Atlas, they can plan, lint, and apply the necessary migrations to the database.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick installation&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;macOS + Linux:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSf https://atlasgo.sh | sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Homebrew:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install ariga/tap/atlas
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Docker:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker pull arigaio/atlas
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;NPM:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @ariga/atlas
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Click &lt;a href="https://atlasgo.io/getting-started#installation"&gt;here&lt;/a&gt; to read instructions for other platforms.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Get started with Atlas by following the &lt;a href="https://atlasgo.io/getting-started/"&gt;Getting Started&lt;/a&gt; docs. This tutorial teaches you how to inspect a database, generate a migration plan and apply the migration to your database.&lt;/p&gt; 
&lt;h2&gt;Key features:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Schema management&lt;/strong&gt;: The &lt;code&gt;atlas schema&lt;/code&gt; command offers various options for inspecting, diffing, comparing, and modifying database schemas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Versioned migration&lt;/strong&gt;: The &lt;code&gt;atlas migrate&lt;/code&gt; command provides a state-of-the-art experience for planning, linting, and applying migrations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terraform support&lt;/strong&gt;: Managing database changes as part of a Terraform deployment workflow.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://atlasgo.io/atlas-schema/sql"&gt;SQL&lt;/a&gt;, &lt;a href="https://atlasgo.io/atlas-schema/hcl"&gt;HCL&lt;/a&gt; and &lt;a href="https://atlasgo.io/orms"&gt;ORM&lt;/a&gt; support&lt;/strong&gt;: Atlas enables users to define their desired database schema using &lt;a href="https://atlasgo.io/atlas-schema/hcl"&gt;HCL&lt;/a&gt;, &lt;a href="https://atlasgo.io/atlas-schema/sql"&gt;SQL&lt;/a&gt;, or their chosen &lt;a href="https://atlasgo.io/orms"&gt;ORM&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-tenancy&lt;/strong&gt;: Atlas includes built-in support for multi-tenant database schemas.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cloud integration&lt;/strong&gt;: Atlas integrates with standard cloud services and provides an easy way to read secrets from cloud providers such as AWS Secrets Manager and GCP Secret Manager.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;schema inspect&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Easily inspect your database schema by providing a database URL and convert it to HCL, JSON, SQL, ERD, or other formats.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Inspect a specific MySQL schema and get its representation in Atlas DDL syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema inspect -u "mysql://root:pass@localhost:3306/example" &amp;gt; schema.hcl
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt;
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-hcl"&gt;table "users" {
  schema = schema.example
  column "id" {
    null = false
    type = int
  }
  ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Inspect the entire MySQL database and get its JSON representation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema inspect \
  --url "mysql://root:pass@localhost:3306/" \
  --format '{{ json . }}' | jq
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt;
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "schemas": [
    {
      "name": "example",
      "tables": [
        {
          "name": "users",
          "columns": [
            ...
          ]
        }
      ]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Inspect a specific PostgreSQL schema and get its representation in SQL DDL syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema inspect \
  --url "postgres://root:pass@:5432/test?search_path=public&amp;amp;sslmode=disable" \
  --format '{{ sql . }}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt;
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-sql"&gt;-- create "users" table
CREATE TABLE "users" ("id" integer NULL, ...);
-- create "posts" table
CREATE TABLE "posts" ("id" integer NULL, ...);
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Inspect a specific PostgreSQL schema and get its ERD representation in the browser:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema inspect \
  --url "postgres://root:pass@:5432/test?search_path=public&amp;amp;sslmode=disable" \
  -w
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://gh.atlasgo.cloud/explore/40d83919"&gt;&lt;img src="https://atlasgo.io/uploads/erd-example.png" alt="ERD"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Inspect a specific PostgreSQL schema and get its ERD representation Mermaid syntax:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema inspect \
  --url "postgres://root:pass@:5432/test?search_path=public&amp;amp;sslmode=disable" \
  --format '{{ mermaid . }}'
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;erDiagram
    users {
      int id PK
      varchar name 
    }
    blog_posts {
      int id PK
      varchar title 
      text body 
      int author_id FK
    }
    blog_posts }o--o| users : author_fk
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;code&gt;schema diff&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Compare two schema states and get a migration plan to transform one into the other. A state can be specified using a database URL, HCL or SQL schema, or a migration directory.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Compare two MySQL schemas:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema diff \
  --from mysql://root:pass@:3306/db1 \
  --to mysql://root:pass@:3306/db2
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt;
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-sql"&gt;-- Drop "users" table
DROP TABLE `users`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Compare a MySQL schema with a migration directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema diff \
  --from mysql://root:pass@:3306/db1 \
  --to file://migrations \
  --dev-url docker://mysql/8/db1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare a PostgreSQL schema with an Atlas schema in HCL format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema diff \
  --from "postgres://postgres:pass@:5432/test?search_path=public&amp;amp;sslmode=disable" \
  --to file://schema.hcl \
  --dev-url "docker://postgres/15/test"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Compare an HCL schema with an SQL schema:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema diff \
  --from file://schema.sql \
  --to file://schema.hcl \ 
  --dev-url docker://postgres/15/test  
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;code&gt;schema apply&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Generate a migration plan and apply it to the database to bring it to the desired state. The desired state can be specified using a database URL, HCL or SQL schema, or a migration directory.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Update the database to the state defined in the HCL schema:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema apply \
  --url mysql://root:pass@:3306/db1 \
  --to file://schema.hcl \
  --dev-url docker://mysql/8/db1
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt;
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;-- Planned Changes:
-- Modify "users" table
ALTER TABLE `db1`.`users` DROP COLUMN `d`, ADD COLUMN `c` int NOT NULL;
Use the arrow keys to navigate: ↓ ↑ → ← 
? Are you sure?: 
  ▸ Apply
    Abort
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Update the database to the state defined in a specific version of the migration directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas schema apply \
  --url mysql://root:pass@:3306/db1 \
  --to "file://migrations?version=20221118091226" \
  --dev-url docker://mysql/8/db1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Additional &lt;code&gt;schema&lt;/code&gt; commands&lt;/h3&gt; 
&lt;p&gt;Atlas offers additional commands to assist users managing their database schemas. These include &lt;code&gt;schema clean&lt;/code&gt; and &lt;code&gt;schema fmt&lt;/code&gt;. For more information, see the versioned migration documentation at &lt;a href="https://atlasgo.io/declarative/inspect"&gt;https://atlasgo.io/declarative/inspect&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;migrate diff&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Write a new migration file to the migration directory that bring it to the desired state. The desired state can be specified using a database URL, HCL or SQL schema, or a migration directory.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Create a migration file named &lt;code&gt;add_blog_posts&lt;/code&gt; in the migration directory to bring the database to the state defined in an HCL schema:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas migrate diff add_blog_posts \           
  --dir file://migrations \
  --to file://schema.hcl \
  --dev-url docker://mysql/8/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a migration file named &lt;code&gt;add_blog_posts&lt;/code&gt; in the migration directory to bring the database to the state defined in an SQL schema:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas migrate diff add_blog_posts \           
  --dir file://migrations \
  --to file://schema.sql \
  --dev-url docker://mysql/8/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Create a migration file named &lt;code&gt;add_blog_posts&lt;/code&gt; in the migration directory to bring the database to the state defined by another database:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas migrate diff add_blog_posts \           
  --dir file://migrations \
  --to mysql://root:pass@host:3306/db \
  --dev-url docker://mysql/8/test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;code&gt;migrate apply&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Apply all or part of pending migration files in the migration directory on the database.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Apply all pending migration files in the migration directory on a MySQL database:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas migrate apply \
  --url mysql://root:pass@:3306/db1 \
  --dir file://migrations
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Apply in &lt;strong&gt;dry run&lt;/strong&gt; mode the first the pending migration file in the migration directory on a PostgreSQL schema:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;atlas migrate apply \
  --url "postgres://root:pass@:5432/test?search_path=public&amp;amp;sslmode=disable" \
  --dir file://migrations \
  --dry-run
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Additional &lt;code&gt;migrate&lt;/code&gt; commands&lt;/h3&gt; 
&lt;p&gt;Atlas offers additional commands to assist users managing their database migrations. These include &lt;code&gt;migrate lint&lt;/code&gt;, &lt;code&gt;migrate status&lt;/code&gt;, and more. For more information, see the versioned migration documentation at &lt;a href="https://atlasgo.io/versioned/diff"&gt;https://atlasgo.io/versioned/diff&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Supported databases&lt;/h3&gt; 
&lt;p&gt;MySQL, MariaDB, PostgresSQL, SQLite, TiDB, CockroachDB, SQL Server, ClickHouse, Redshift.&lt;/p&gt; 
&lt;h2&gt;Supported Version Policy&lt;/h2&gt; 
&lt;p&gt;To ensure the best performance, security and compatibility with the Atlas Cloud service, the Atlas team will only support the two most recent minor versions of the CLI. For example, if the latest version is &lt;code&gt;v0.25&lt;/code&gt;, the supported versions will be &lt;code&gt;v0.24&lt;/code&gt; and &lt;code&gt;v0.25&lt;/code&gt; (in addition to any patch releases and the "canary" release which is built twice a day).&lt;/p&gt; 
&lt;h3&gt;Old Binaries&lt;/h3&gt; 
&lt;p&gt;As part of the &lt;em&gt;Supported Version Policy&lt;/em&gt; mentioned above, binaries for versions that were published more than 6 months ago will be removed from the CDN and Docker Hub.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>googleapis/genai-toolbox</title>
      <link>https://github.com/googleapis/genai-toolbox</link>
      <description>&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/logo.png" alt="logo"&gt;&lt;/p&gt; 
&lt;h1&gt;MCP Toolbox for Databases&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;&lt;img src="https://img.shields.io/badge/docs-MCP_Toolbox-blue" alt="Docs"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/Dmm69peqjh"&gt;&lt;img src="https://img.shields.io/badge/Discord-%235865F2.svg?style=flat&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://medium.com/@mcp_toolbox"&gt;&lt;img src="https://img.shields.io/badge/Medium-12100E?style=flat&amp;amp;logo=medium&amp;amp;logoColor=white" alt="Medium"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/googleapis/genai-toolbox"&gt;&lt;img src="https://goreportcard.com/badge/github.com/googleapis/genai-toolbox" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] MCP Toolbox for Databases is currently in beta, and may see breaking changes until the first stable release (v1.0).&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;MCP Toolbox for Databases is an open source MCP server for databases. It enables you to develop tools easier, faster, and more securely by handling the complexities such as connection pooling, authentication, and more.&lt;/p&gt; 
&lt;p&gt;This README provides a brief overview. For comprehensive details, see the &lt;a href="https://googleapis.github.io/genai-toolbox/"&gt;full documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] This solution was originally named “Gen AI Toolbox for Databases” as its initial development predated MCP, but was renamed to align with recently added MCP compatibility.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!-- TOC ignore:true --&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;!-- TOC --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#why-toolbox"&gt;Why Toolbox?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#general-architecture"&gt;General Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#installing-the-server"&gt;Installing the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#running-the-server"&gt;Running the server&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#integrating-your-application"&gt;Integrating your application&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#sources"&gt;Sources&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#tools"&gt;Tools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#toolsets"&gt;Toolsets&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#versioning"&gt;Versioning&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- /TOC --&gt; 
&lt;h2&gt;Why Toolbox?&lt;/h2&gt; 
&lt;p&gt;Toolbox helps you build Gen AI tools that let your agents access data in your database. Toolbox provides:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Simplified development&lt;/strong&gt;: Integrate tools to your agent in less than 10 lines of code, reuse tools between multiple agents or frameworks, and deploy new versions of tools more easily.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better performance&lt;/strong&gt;: Best practices such as connection pooling, authentication, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced security&lt;/strong&gt;: Integrated auth for more secure access to your data&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;End-to-end observability&lt;/strong&gt;: Out of the box metrics and tracing with built-in support for OpenTelemetry.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;⚡ Supercharge Your Workflow with an AI Database Assistant ⚡&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Stop context-switching and let your AI assistant become a true co-developer. By &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;connecting your IDE to your databases with MCP Toolbox&lt;/a&gt;, you can delegate complex and time-consuming database tasks, allowing you to build faster and focus on what matters. This isn't just about code completion; it's about giving your AI the context it needs to handle the entire development lifecycle.&lt;/p&gt; 
&lt;p&gt;Here’s how it will save you time:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Query in Plain English&lt;/strong&gt;: Interact with your data using natural language right from your IDE. Ask complex questions like, &lt;em&gt;"How many orders were delivered in 2024, and what items were in them?"&lt;/em&gt; without writing any SQL.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Automate Database Management&lt;/strong&gt;: Simply describe your data needs, and let the AI assistant manage your database for you. It can handle generating queries, creating tables, adding indexes, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Generate Context-Aware Code&lt;/strong&gt;: Empower your AI assistant to generate application code and tests with a deep understanding of your real-time database schema. This accelerates the development cycle by ensuring the generated code is directly usable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Slash Development Overhead&lt;/strong&gt;: Radically reduce the time spent on manual setup and boilerplate. MCP Toolbox helps streamline lengthy database configurations, repetitive code, and error-prone schema migrations.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Learn &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/connect-ide/"&gt;how to connect your AI tools (IDEs) to Toolbox using MCP&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;General Architecture&lt;/h2&gt; 
&lt;p&gt;Toolbox sits between your application's orchestration framework and your database, providing a control plane that is used to modify, distribute, or invoke tools. It simplifies the management of your tools by providing you with a centralized location to store and update tools, allowing you to share tools between agents and applications and update those tools without necessarily redeploying your application.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/docs/en/getting-started/introduction/architecture.png" alt="architecture"&gt;&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Installing the server&lt;/h3&gt; 
&lt;p&gt;For the latest version, check the &lt;a href="https://github.com/googleapis/genai-toolbox/releases"&gt;releases page&lt;/a&gt; and use the following instructions for your OS and CPU architecture.&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Binary&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox as a binary:&lt;/p&gt; 
 &lt;!-- {x-release-please-start-version} --&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.10.0
curl -O https://storage.googleapis.com/genai-toolbox/v$VERSION/linux/amd64/toolbox
chmod +x toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Container image&lt;/summary&gt; You can also install Toolbox as a container: 
 &lt;pre&gt;&lt;code class="language-sh"&gt;# see releases page for other versions
export VERSION=0.10.0
docker pull us-central1-docker.pkg.dev/database-toolbox/toolbox/toolbox:$VERSION
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Homebrew&lt;/summary&gt; 
 &lt;p&gt;To install Toolbox using Homebrew on macOS or Linux:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;brew install mcp-toolbox
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;Compile from source&lt;/summary&gt; 
 &lt;p&gt;To install from source, ensure you have the latest version of &lt;a href="https://go.dev/doc/install"&gt;Go installed&lt;/a&gt;, and then run the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/googleapis/genai-toolbox@v0.10.0
&lt;/code&gt;&lt;/pre&gt; 
 &lt;!-- {x-release-please-end} --&gt; 
&lt;/details&gt; 
&lt;h3&gt;Running the server&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/#configuration"&gt;Configure&lt;/a&gt; a &lt;code&gt;tools.yaml&lt;/code&gt; to define your tools, and then execute &lt;code&gt;toolbox&lt;/code&gt; to start the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Toolbox enables dynamic reloading by default. To disable, use the &lt;code&gt;--disable-reload&lt;/code&gt; flag.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Homebrew Users&lt;/h4&gt; 
&lt;p&gt;If you installed Toolbox using Homebrew, the &lt;code&gt;toolbox&lt;/code&gt; binary is available in your system path. You can start the server with the same command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;toolbox --tools-file "tools.yaml"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can use &lt;code&gt;toolbox help&lt;/code&gt; for a full list of flags! To stop the server, send a terminate signal (&lt;code&gt;ctrl+c&lt;/code&gt; on most platforms).&lt;/p&gt; 
&lt;p&gt;For more detailed documentation on deploying to different environments, check out the resources in the &lt;a href="https://googleapis.github.io/genai-toolbox/how-to/"&gt;How-to section&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Integrating your application&lt;/h3&gt; 
&lt;p&gt;Once your server is up and running, you can load the tools into your application. See below the list of Client SDKs for using various frameworks:&lt;/p&gt; 
&lt;details open&gt; 
 &lt;summary&gt;Python (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-core/"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_core import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = await client.load_toolset("toolset_name")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
   &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/tree/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-langchain/"&gt;Toolbox LangChain SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-langchain
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_langchain import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox LangChain SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-python/raw/main/packages/toolbox-langchain/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LlamaIndex&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pypi.org/project/toolbox-llamaindex/"&gt;Toolbox Llamaindex SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install toolbox-llamaindex
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;from toolbox_llamaindex import ToolboxClient

# update the url to point to your server
async with ToolboxClient("http://127.0.0.1:5000") as client:

    # these tools can be passed to your application!
    tools = client.load_toolset()
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Llamaindex SDK, see the &lt;a href="https://github.com/googleapis/genai-toolbox-llamaindex-python/raw/main/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Javascript/Typescript (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const tools = await client.loadToolset('toolsetName');
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Core SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-js/raw/main/packages/toolbox-core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain / LangGraph&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; tool(currTool, {
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
});

// Use these tools in your Langchain/Langraph applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://www.npmjs.com/package/@toolbox-sdk/core"&gt;Toolbox Core SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;npm install @toolbox-sdk/core
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import { ToolboxClient } from '@toolbox-sdk/core';
import { genkit } from 'genkit';

// Initialise genkit
const ai = genkit({
    plugins: [
        googleAI({
            apiKey: process.env.GEMINI_API_KEY || process.env.GOOGLE_API_KEY
        })
    ],
    model: googleAI.model('gemini-2.0-flash'),
});

// update the url to point to your server
const URL = 'http://127.0.0.1:5000';
let client = new ToolboxClient(URL);

// these tools can be passed to your application!
const toolboxTools = await client.loadToolset('toolsetName');

// Define the basics of the tool: name, description, schema and core logic
const getTool = (toolboxTool) =&amp;gt; ai.defineTool({
    name: toolboxTool.getName(),
    description: toolboxTool.getDescription(),
    schema: toolboxTool.getParamSchema()
}, toolboxTool)

// Use these tools in your Genkit applications
const tools = toolboxTools.map(getTool);
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;  
&lt;details&gt; 
 &lt;summary&gt;Go (&lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go"&gt;Github&lt;/a&gt;)&lt;/summary&gt; 
 &lt;br&gt; 
 &lt;blockquote&gt; 
  &lt;details open&gt; 
   &lt;summary&gt;Core&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "context"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000";
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tools
  tools, err := client.LoadToolset("toolsetName", ctx)
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;For more detailed instructions on using the Toolbox Go SDK, see the &lt;a href="https://github.com/googleapis/mcp-toolbox-sdk-go/raw/main/core/README.md"&gt;project's README&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;LangChain Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/tmc/langchaingo/llms"
)

func main() {
  // Make sure to add the error checks
  // update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema map[string]any
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with LangChainGo
  langChainTool := llms.Tool{
    Type: "function",
    Function: &amp;amp;llms.FunctionDefinition{
      Name:        tool.Name(),
      Description: tool.Description(),
      Parameters:  paramsSchema,
    },
  }
}

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Genkit&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main
import (
  "context"
  "encoding/json"

  "github.com/firebase/genkit/go/ai"
  "github.com/firebase/genkit/go/genkit"
  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "github.com/googleapis/mcp-toolbox-sdk-go/tbgenkit"
  "github.com/invopop/jsonschema"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()
  g, err := genkit.Init(ctx)

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Convert the tool using the tbgenkit package
  // Use this tool with Genkit Go
  genkitTool, err := tbgenkit.ToGenkitTool(tool, g)
  if err != nil {
    log.Fatalf("Failed to convert tool: %v\n", err)
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;Go GenAI&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  "google.golang.org/genai"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var schema *genai.Schema
  _ = json.Unmarshal(inputschema, &amp;amp;schema)

  funcDeclaration := &amp;amp;genai.FunctionDeclaration{
    Name:        tool.Name(),
    Description: tool.Description(),
    Parameters:  schema,
  }

  // Use this tool with Go GenAI
  genAITool := &amp;amp;genai.Tool{
    FunctionDeclarations: []*genai.FunctionDeclaration{funcDeclaration},
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
  &lt;details&gt; 
   &lt;summary&gt;OpenAI Go&lt;/summary&gt; 
   &lt;ol&gt; 
    &lt;li&gt; &lt;p&gt;Install &lt;a href="https://pkg.go.dev/github.com/googleapis/mcp-toolbox-sdk-go/core"&gt;Toolbox Go SDK&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/googleapis/mcp-toolbox-sdk-go
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Load tools:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "context"
  "encoding/json"

  "github.com/googleapis/mcp-toolbox-sdk-go/core"
  openai "github.com/openai/openai-go"
)

func main() {
  // Make sure to add the error checks
  // Update the url to point to your server
  URL := "http://127.0.0.1:5000"
  ctx := context.Background()

  client, err := core.NewToolboxClient(URL)

  // Framework agnostic tool
  tool, err := client.LoadTool("toolName", ctx)

  // Fetch the tool's input schema
  inputschema, err := tool.InputSchema()

  var paramsSchema openai.FunctionParameters
  _ = json.Unmarshal(inputschema, &amp;amp;paramsSchema)

  // Use this tool with OpenAI Go
  openAITool := openai.ChatCompletionToolParam{
    Function: openai.FunctionDefinitionParam{
      Name:        tool.Name(),
      Description: openai.String(tool.Description()),
      Parameters:  paramsSchema,
    },
  }

}
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ol&gt; 
  &lt;/details&gt; 
 &lt;/blockquote&gt;
&lt;/details&gt;   
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;The primary way to configure Toolbox is through the &lt;code&gt;tools.yaml&lt;/code&gt; file. If you have multiple files, you can tell toolbox which to load with the &lt;code&gt;--tools-file tools.yaml&lt;/code&gt; flag.&lt;/p&gt; 
&lt;p&gt;You can find more detailed reference documentation to all resource types in the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/"&gt;Resources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Sources&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;sources&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; defines what data sources your Toolbox should have access to. Most tools will have at least one source to execute against.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;sources:
  my-pg-source:
    kind: postgres
    host: 127.0.0.1
    port: 5432
    database: toolbox_db
    user: toolbox_user
    password: my-password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of sources, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/sources"&gt;Sources&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Tools&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;tools&lt;/code&gt; section of a &lt;code&gt;tools.yaml&lt;/code&gt; define the actions an agent can take: what kind of tool it is, which source(s) it affects, what parameters it uses, etc.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;tools:
  search-hotels-by-name:
    kind: postgres-sql
    source: my-pg-source
    description: Search for hotels based on name.
    parameters:
      - name: name
        type: string
        description: The name of the hotel.
    statement: SELECT * FROM hotels WHERE name ILIKE '%' || $1 || '%';
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more details on configuring different types of tools, see the &lt;a href="https://googleapis.github.io/genai-toolbox/resources/tools"&gt;Tools&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Toolsets&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;toolsets&lt;/code&gt; section of your &lt;code&gt;tools.yaml&lt;/code&gt; allows you to define groups of tools that you want to be able to load together. This can be useful for defining different groups based on agent or application.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;toolsets:
    my_first_toolset:
        - my_first_tool
        - my_second_tool
    my_second_toolset:
        - my_second_tool
        - my_third_tool
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can load toolsets by name:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;# This will load all tools
all_tools = client.load_toolset()

# This will only load the tools listed in 'my_second_toolset'
my_second_toolset = client.load_toolset("my_second_toolset")
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;This project uses &lt;a href="https://semver.org/"&gt;semantic versioning&lt;/a&gt;, including a &lt;code&gt;MAJOR.MINOR.PATCH&lt;/code&gt; version number that increments with:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;MAJOR version when we make incompatible API changes&lt;/li&gt; 
 &lt;li&gt;MINOR version when we add functionality in a backward compatible manner&lt;/li&gt; 
 &lt;li&gt;PATCH version when we make backward compatible bug fixes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The public API that this applies to is the CLI associated with Toolbox, the interactions with official SDKs, and the definitions in the &lt;code&gt;tools.yaml&lt;/code&gt; file.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions are welcome. Please, see the &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CONTRIBUTING.md"&gt;CONTRIBUTING&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;p&gt;Please note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms. See &lt;a href="https://raw.githubusercontent.com/googleapis/genai-toolbox/main/CODE_OF_CONDUCT.md"&gt;Contributor Code of Conduct&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/GQrFB3Ec3W"&gt;discord community&lt;/a&gt; to connect with our developers!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>milvus-io/milvus</title>
      <link>https://github.com/milvus-io/milvus</link>
      <description>&lt;p&gt;Milvus is a high-performance, cloud-native vector database built for scalable vector ANN search&lt;/p&gt;&lt;hr&gt;&lt;img src="https://github.com/user-attachments/assets/51e33300-7f85-43ff-a05a-3a0317a961f3" alt="milvus banner"&gt; 
&lt;div class="column" align="middle"&gt; 
 &lt;a href="https://github.com/milvus-io/milvus/raw/master/LICENSE"&gt;&lt;img height="20" src="https://img.shields.io/github/license/milvus-io/milvus" alt="license"&gt;&lt;/a&gt; 
 &lt;a href="https://milvus.io/docs/install_standalone-docker.md"&gt;&lt;img src="https://img.shields.io/docker/pulls/milvusdb/milvus" alt="docker-pull-count"&gt;&lt;/a&gt; 
 &lt;a href="https://milvus.io/docs/roadmap.md"&gt;&lt;img src="https://img.shields.io/badge/2025-roadmap-orange" alt="fully-managed-milvus"&gt;&lt;/a&gt; 
 &lt;a href="https://cloud.zilliz.com/signup?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;&lt;img src="https://img.shields.io/badge/fully_managed-milvus-blue" alt="fully-managed-milvus"&gt;&lt;/a&gt; 
 &lt;a href="https://milvus.io/docs/tutorials-overview.md"&gt;&lt;img src="https://img.shields.io/badge/tutorials-green" alt="tutorials"&gt;&lt;/a&gt; 
 &lt;a href="https://discord.gg/mKc3R95yE5"&gt;&lt;img height="20" src="https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="discord"&gt;&lt;/a&gt; 
 &lt;a href="https://x.com/milvusio"&gt;&lt;img src="https://img.shields.io/twitter/follow/milvusio" alt="twitter"&gt;&lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;What is Milvus?&lt;/h2&gt; 
&lt;p&gt;🐦 &lt;a href="https://milvus.io/"&gt;Milvus&lt;/a&gt; is a high-performance vector database built for scale. It powers AI applications by efficiently organizing and searching vast amounts of unstructured data, such as text, images, and multi-modal information.&lt;/p&gt; 
&lt;p&gt;🧑‍💻 Written in Go and C++, Milvus implements hardware accelaration for CPU/GPU to achieve best-in-class vector search performance. Thanks to its &lt;a href="https://milvus.io/docs/overview.md#What-Makes-Milvus-so-Scalable"&gt;fully-distributed and K8s-native architecture&lt;/a&gt;, Milvus can scale horizontally, handle tens of thousands of search queries on billions of vectors, and keep data fresh with real-time streaming updates. Milvus also supports &lt;a href="https://milvus.io/docs/install_standalone-docker.md"&gt;Standalone mode&lt;/a&gt; for single machine deployment. &lt;a href="https://milvus.io/docs/milvus_lite.md"&gt;Milvus Lite&lt;/a&gt; is a lightweight version good for quickstart in python with &lt;code&gt;pip install&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Want to use Milvus with zero setup? Try out &lt;a href="https://cloud.zilliz.com/signup?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;Zilliz Cloud ☁️&lt;/a&gt; for free. Milvus is available as a fully managed service on Zilliz Cloud, with &lt;a href="https://zilliz.com/serverless?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;Serverless&lt;/a&gt;, &lt;a href="https://zilliz.com/cloud?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;Dedicated&lt;/a&gt; and &lt;a href="https://zilliz.com/bring-your-own-cloud?utm_source=partner&amp;amp;utm_medium=referral&amp;amp;utm_campaign=2024-11-04_web_github-readme_global"&gt;BYOC&lt;/a&gt; options available.&lt;/p&gt; 
&lt;p&gt;For questions about how to use Milvus, join the community on &lt;a href="https://discord.gg/33mfvwep3J"&gt;Discord&lt;/a&gt; to get help. For reporting problems, file bugs and feature requests in GitHub &lt;a href="https://github.com/milvus-io/milvus/issues"&gt;Issues&lt;/a&gt; or ask in &lt;a href="https://github.com/milvus-io/milvus/discussions"&gt;Discussions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Milvus open-source project is under &lt;a href="https://lfaidata.foundation/projects/milvus/"&gt;LF AI &amp;amp; Data Foundation&lt;/a&gt;, distributed with &lt;a href="https://github.com/milvus-io/milvus/raw/master/LICENSE"&gt;Apache 2.0&lt;/a&gt; License, with Zilliz as its major contributor.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;$ pip install -U pymilvus
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This installs &lt;code&gt;pymilvus&lt;/code&gt;, the Python SDK for Milvus. Use &lt;code&gt;MilvusClient&lt;/code&gt; to create a client:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from pymilvus import MilvusClient
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;pymilvus&lt;/code&gt; also includes Milvus Lite for quickstart. To create a local vector database, simply instantiate a client with a local file name for persisting data:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;client = MilvusClient("milvus_demo.db")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can also specify the credentials to connect to your deployed &lt;a href="https://milvus.io/docs/authenticate.md?tab=docker"&gt;Milvus server&lt;/a&gt; or &lt;a href="https://docs.zilliz.com/docs/quick-start"&gt;Zilliz Cloud&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-python"&gt;client = MilvusClient(
  uri="&amp;lt;endpoint_of_self_hosted_milvus_or_zilliz_cloud&amp;gt;",
  token="&amp;lt;username_and_password_or_zilliz_cloud_api_key&amp;gt;")
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the client, you can create collection:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;client.create_collection(
    collection_name="demo_collection",
    dimension=768,  # The vectors we will use in this demo have 768 dimensions
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Ingest data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;res = client.insert(collection_name="demo_collection", data=data)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Perform vector search:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;query_vectors = embedding_fn.encode_queries(["Who is Alan Turing?", "What is AI?"])
res = client.search(
    collection_name="demo_collection",  # target collection
    data=query_vectors,  # a list of one or more query vectors, supports batch
    limit=2,  # how many results to return (topK)
    output_fields=["vector", "text", "subject"],  # what fields to return
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Why Milvus&lt;/h2&gt; 
&lt;p&gt;Milvus is designed to handle vector search at scale. It stores vectors, which are learned representations of unstructured data, together with other scalar data types such as integers, strings, and JSON objects. Users can conduct efficient vector search with metadata filtering or hybrid search. Here are why developers choose Milvus as the vector database for AI applications:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;High Performance at Scale and High Availability&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus features a &lt;a href="https://milvus.io/docs/architecture_overview.md"&gt;distributed architecture&lt;/a&gt; that separates &lt;a href="https://milvus.io/docs/data_processing.md#Data-query"&gt;compute&lt;/a&gt; and &lt;a href="https://milvus.io/docs/data_processing.md#Data-insertion"&gt;storage&lt;/a&gt;. Milvus can horizontally scale and adapt to diverse traffic patterns, achieving optimal performance by independently increasing query nodes for read-heavy workload and data node for write-heavy workload. The stateless microservices on K8s allow &lt;a href="https://milvus.io/docs/coordinator_ha.md#Coordinator-HA"&gt;quick recovery&lt;/a&gt; from failure, ensuring high availability. The support for &lt;a href="https://milvus.io/docs/replica.md"&gt;replicas&lt;/a&gt; further enhances fault tolerance and throughput by loading data segments on multiple query nodes. See &lt;a href="https://zilliz.com/vector-database-benchmark-tool"&gt;benchmark&lt;/a&gt; for performance comparison.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Support for Various Vector Index Types and Hardware Acceleration&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus separates the system and core vector search engine, allowing it to support all major vector index types that are optimized for different scenarios, including HNSW, IVF, FLAT (brute-force), SCANN, and DiskANN, with &lt;a href="https://milvus.io/docs/index.md?tab=floating#IVFPQ"&gt;quantization-based&lt;/a&gt; variations and &lt;a href="https://milvus.io/docs/mmap.md"&gt;mmap&lt;/a&gt;. Milvus optimizes vector search for advanced features such as &lt;a href="https://milvus.io/docs/scalar_index.md#Scalar-Index"&gt;metadata filtering&lt;/a&gt; and &lt;a href="https://milvus.io/docs/single-vector-search.md#Range-search"&gt;range search&lt;/a&gt;. Additionally, Milvus implements hardware acceleration to enhance vector search performance and supports GPU indexing, such as NVIDIA's &lt;a href="https://github.com/rapidsai/cuvs"&gt;CAGRA&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Flexible Multi-tenancy and Hot/Cold Storage&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus supports &lt;a href="https://milvus.io/docs/multi_tenancy.md#Multi-tenancy-strategies"&gt;multi-tenancy&lt;/a&gt; through isolation at database, collection, partition, or partition key level. The flexible strategies allow a single cluster to handle hundreds to millions of tenants, also ensures optimized search performance and flexible access control. Milvus enhances cost-effectiveness with hot/cold storage. Frequently accessed hot data can be stored in memory or on SSDs for better performance, while less-accessed cold data is kept on slower, cost-effective storage. This mechanism can significantly reduce costs while maintaining high performance for critical tasks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Sparse Vector for Full Text Search and Hybrid Search&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In addition to semantic search through dense vector, Milvus also natively supports &lt;a href="https://milvus.io/docs/full-text-search.md"&gt;full text search&lt;/a&gt; with BM25 as well as learned sparse embedding such as SPLADE and BGE-M3. Users can store sparse vector and dense vector in the same collection, and define functions to rerank results from multiple search requests. See examples of &lt;a href="https://milvus.io/docs/full_text_search_with_milvus.md"&gt;Hybrid Search with semantic search + full text search&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Data Security and Fine-grain Access Control&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Milvus ensures data security by implementing mandatory user authentication, TLS encryption, and Role-Based Access Control (RBAC). User authentication ensures that only authorized users with valid credentials can access the database, while TLS encryption secures all communications within the network. Additionally, RBAC allows for fine-grained access control by assigning specific permissions to users based on their roles. These features make Milvus a robust and secure choice for enterprise applications, protecting sensitive data from unauthorized access and potential breaches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Milvus is trusted by AI developers to build applications such as text and image search, Retrieval-Augmented Generation (RAG), and recommendation systems. Milvus powers &lt;a href="(https://milvus.io/use-cases)"&gt;many mission-critical business&lt;/a&gt; for startups and enterprises.&lt;/p&gt; 
&lt;h2&gt;Demos and Tutorials&lt;/h2&gt; 
&lt;p&gt;Here is a selection of demos and tutorials to show how to build various types of AI applications made with Milvus:&lt;/p&gt; 
&lt;p&gt;You can explore a comprehensive &lt;a href="https://milvus.io/docs/tutorials-overview.md"&gt;Tutorials Overview&lt;/a&gt; covering topics such as Retrieval-Augmented Generation (RAG), Semantic Search, Hybrid Search, Question Answering, Recommendation Systems, and various quick-start guides. These resources are designed to help you get started quickly and efficiently.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tutorial&lt;/th&gt; 
   &lt;th&gt;Use Case&lt;/th&gt; 
   &lt;th&gt;Related Milvus Features&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/build-rag-with-milvus.md"&gt;Build RAG with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RAG&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/how_to_enhance_your_rag.md"&gt;Advanced RAG Optimizations&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RAG&lt;/td&gt; 
   &lt;td&gt;vector search, full text search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/full_text_search_with_milvus.md"&gt;Full Text Search with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Text Search&lt;/td&gt; 
   &lt;td&gt;full text search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/hybrid_search_with_milvus.md"&gt;Hybrid Search with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Hybrid Search&lt;/td&gt; 
   &lt;td&gt;hybrid search, multi vector, dense embedding, sparse embedding&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/image_similarity_search.md"&gt;Image Search with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Semantic Search&lt;/td&gt; 
   &lt;td&gt;vector search, dynamic field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/multimodal_rag_with_milvus.md"&gt;Multimodal Search using Multi Vectors&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Semantic Search&lt;/td&gt; 
   &lt;td&gt;multi vector, hybrid search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/movie_recommendation_with_milvus.md"&gt;Movie Recommendation with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Recommendation System&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/graph_rag_with_milvus.md"&gt;Graph RAG with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;RAG&lt;/td&gt; 
   &lt;td&gt;graph search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/contextual_retrieval_with_milvus.md"&gt;Contextual Retrieval with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/vector_visualization.md"&gt;Vector Visualization&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/hdbscan_clustering_with_milvus.md"&gt;HDBSCAN Clustering with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://milvus.io/docs/use_ColPali_with_milvus.md"&gt;Use ColPali for Multi-Modal Retrieval with Milvus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Quickstart&lt;/td&gt; 
   &lt;td&gt;vector search&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="30%"&gt; &lt;a href="https://milvus.io/milvus-demos"&gt; &lt;img src="https://assets.zilliz.com/image_search_59a64e4f22.gif"&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="30%"&gt; &lt;a href="https://milvus.io/milvus-demos"&gt; &lt;img src="https://assets.zilliz.com/qa_df5ee7bd83.gif"&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td width="30%"&gt; &lt;a href="https://milvus.io/milvus-demos"&gt; &lt;img src="https://assets.zilliz.com/mole_search_76f8340572.gif"&gt; &lt;/a&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;th&gt; &lt;a href="https://milvus.io/milvus-demos"&gt;Image Search&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://milvus.io/milvus-demos"&gt;RAG&lt;/a&gt; &lt;/th&gt; 
   &lt;th&gt; &lt;a href="https://milvus.io/milvus-demos"&gt;Drug Discovery&lt;/a&gt; &lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Ecosystem and Integration&lt;/h2&gt; 
&lt;p&gt;Milvus integrates with a comprehensive suite of &lt;a href="https://milvus.io/docs/integrations_overview.md"&gt;AI development tools&lt;/a&gt;, such as LangChain, LlamaIndex, OpenAI and HuggingFace, making it an ideal vector store for GenAI applications such as Retrieval-Augmented Generation (RAG). Milvus works with both open-source embedding models and embedding service, in text, image and video modalities. Milvus also provides a convenient util &lt;a href="https://milvus.io/docs/embeddings.md"&gt;&lt;code&gt;pymilvus[model]&lt;/code&gt;&lt;/a&gt;, users can use the simple wrapper code to transform unstructured data into vector embeddings and leverage reranking models for optimized search results. The Milvus ecosystem also includes &lt;a href="https://github.com/zilliztech/attu?tab=readme-ov-file#attu"&gt;Attu&lt;/a&gt; for GUI-based administration, &lt;a href="https://milvus.io/docs/birdwatcher_overview.md"&gt;Birdwatcher&lt;/a&gt; for system debugging, &lt;a href="https://milvus.io/docs/monitor_overview.md"&gt;Prometheus/Grafana&lt;/a&gt; for monitoring, &lt;a href="https://milvus.io/docs/milvus-cdc-overview.md"&gt;Milvus CDC&lt;/a&gt; for data synchronization, &lt;a href="https://github.com/zilliztech/vts?tab=readme-ov-file#vts"&gt;VTS&lt;/a&gt; for data migration and data connectors for &lt;a href="https://milvus.io/docs/integrate_with_spark.md#Spark-Milvus-Connector-User-Guide"&gt;Spark&lt;/a&gt;, &lt;a href="https://github.com/zilliztech/kafka-connect-milvus?tab=readme-ov-file#kafka-connect-milvus-connector"&gt;Kafka&lt;/a&gt;, &lt;a href="https://fivetran.com/docs/destinations/milvus"&gt;Fivetran&lt;/a&gt;, and &lt;a href="https://milvus.io/docs/integrate_with_airbyte.md"&gt;Airbyte&lt;/a&gt; to build search pipelines.&lt;/p&gt; 
&lt;p&gt;Check out &lt;a href="https://milvus.io/docs/integrations_overview.md"&gt;https://milvus.io/docs/integrations_overview.md&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For guidance on installation, usage, deployment, and administration, check out &lt;a href="https://milvus.io/docs"&gt;Milvus Docs&lt;/a&gt;. For technical milestones and enhancement proposals, check out &lt;a href="https://github.com/milvus-io/milvus/issues"&gt;issues on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;The Milvus open-source project accepts contribution from everyone. See &lt;a href="https://github.com/milvus-io/milvus/raw/master/CONTRIBUTING.md"&gt;Guidelines for Contributing&lt;/a&gt; for details on submitting patches and the development workflow. See our &lt;a href="https://github.com/milvus-io/community"&gt;community repository&lt;/a&gt; to learn about project governance and access more community resources.&lt;/p&gt; 
&lt;h3&gt;Build Milvus from Source Code&lt;/h3&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Linux systems (Ubuntu 20.04 or later recommended):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go: &amp;gt;= 1.21
cmake: &amp;gt;= 3.26.4
gcc: 9.5
python: &amp;gt; 3.8 and  &amp;lt;= 3.11
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MacOS systems with x86_64 (Big Sur 11.5 or later recommended):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go: &amp;gt;= 1.21
cmake: &amp;gt;= 3.26.4
llvm: &amp;gt;= 15
python: &amp;gt; 3.8 and  &amp;lt;= 3.11
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;MacOS systems with Apple Silicon (Monterey 12.0.1 or later recommended):&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;go: &amp;gt;= 1.21 (Arch=ARM64)
cmake: &amp;gt;= 3.26.4
llvm: &amp;gt;= 15
python: &amp;gt; 3.8 and  &amp;lt;= 3.11
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Clone Milvus repo and build.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Clone github repository.
$ git clone https://github.com/milvus-io/milvus.git

# Install third-party dependencies.
$ cd milvus/
$ ./scripts/install_deps.sh

# Compile Milvus.
$ make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For full instructions, see &lt;a href="https://github.com/milvus-io/milvus/raw/master/DEVELOPMENT.md"&gt;developer's documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Join the Milvus community on &lt;a href="https://discord.gg/8uyFbECzPX"&gt;Discord&lt;/a&gt; to share your suggestions, advice, and questions with our engineering team.&lt;/p&gt; 
&lt;p&gt;To learn latest news about Milvus, follow us on social media:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/milvusio"&gt;X&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.linkedin.com/company/the-milvus-project"&gt;LinkedIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCMCo_F7pKjMHBlfyxwOPw-g"&gt;Youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@milvusio"&gt;Medium&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also check out our &lt;a href="https://milvus.io/docs/performance_faq.md"&gt;FAQ page&lt;/a&gt; to discover solutions or answers to your issues or questions, and subscribe to Milvus mailing lists:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://lists.lfai.foundation/g/milvus-tsc"&gt;Technical Steering Committee&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lists.lfai.foundation/g/milvus-technical-discuss"&gt;Technical Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://lists.lfai.foundation/g/milvus-announce"&gt;Announcement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Reference&lt;/h2&gt; 
&lt;p&gt;Reference to cite when you use Milvus in a research paper:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;@inproceedings{2021milvus,
  title={Milvus: A Purpose-Built Vector Data Management System},
  author={Wang, Jianguo and Yi, Xiaomeng and Guo, Rentong and Jin, Hai and Xu, Peng and Li, Shengjun and Wang, Xiangyu and Guo, Xiangzhou and Li, Chengming and Xu, Xiaohai and others},
  booktitle={Proceedings of the 2021 International Conference on Management of Data},
  pages={2614--2627},
  year={2021}
}

@article{2022manu,
  title={Manu: a cloud native vector database management system},
  author={Guo, Rentong and Luan, Xiaofan and Xiang, Long and Yan, Xiao and Yi, Xiaomeng and Luo, Jigao and Cheng, Qianya and Xu, Weizhi and Luo, Jiarui and Liu, Frank and others},
  journal={Proceedings of the VLDB Endowment},
  volume={15},
  number={12},
  pages={3548--3561},
  year={2022},
  publisher={VLDB Endowment}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- Do not remove start of hero-bot --&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/all--contributors-414-orange"&gt;&lt;br&gt; &lt;a href="https://github.com/0xflotus"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26602940?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/9Eurydice9"&gt;&lt;img src="https://avatars.githubusercontent.com/u/220225099?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ABNER-1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24547351?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Abhijnan-Bajpai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57059194?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Accagain2014"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9635216?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Ahmetyasin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34247619?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Ald392"&gt;&lt;img src="https://avatars.githubusercontent.com/u/166891594?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/AliDotS"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33119433?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/AllenYu1987"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12489985?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Anosh21"&gt;&lt;img src="https://avatars.githubusercontent.com/u/90505226?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/AnthonyTsu1984"&gt;&lt;img src="https://avatars.githubusercontent.com/u/115786031?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Aredcap"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40494761?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ArenaSu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21214629?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Armaggheddon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47779194?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/BUPTAnderson"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13449703?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Ben-Aaron-Bio-Rad"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54123439?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Bennu-Li"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53458891?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Biki-das"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72331432?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/BossZou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40255591?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/CNLHC"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21005146?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/CaoHaiNam"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47685795?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Chisdo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36720318?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ChunelFeng"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37905059?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/CocytusElias"&gt;&lt;img src="https://avatars.githubusercontent.com/u/79587688?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/CodeInDreams"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17664279?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/CsterKuroi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12230174?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Cupchen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34762375?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/DLT1412"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8294986?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/DanielHuang1983"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4417873?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Deep1Shikha"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47516502?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/DingQK"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58072531?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/DiptoChakrabarty"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45638240?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/EricStarer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34002927?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Erzangel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57399897?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Fierralin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8857059?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/FluorineDog"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15663612?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Gofastasf"&gt;&lt;img src="https://avatars.githubusercontent.com/u/159963288?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Gracieeea"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50101579?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/GuanyunFeng"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40229765?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/GuoRentong"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57477222?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/GuyKh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3136012?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Hard-Coder05"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54059881?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Heisenberg-Y"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35055583?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/HesterG"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17645053?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Hoyaspark"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88016041?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/HuaSheng2000"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34791273?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/HuangHua"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2274405?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/HurSungYun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8033896?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Ice-YcY"&gt;&lt;img src="https://avatars.githubusercontent.com/u/85332705?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/JackLCL"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53512883?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/JadeFlute0127"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35321989?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Janglearnstocode"&gt;&lt;img src="https://avatars.githubusercontent.com/u/204587742?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Javajava1"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29594737?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Jeri-jose"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72429659?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/JinHai-CN"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33142505?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/JsDove"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35839735?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Juneezee"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20135478?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/KubrickLiu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24795136?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/KumaJie"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61139665?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/LeoReeYang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58654486?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Leslie-Wong-H"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27696701?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Light-City"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25699850?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Lin-gh-Saint"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64019322?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Linkwei"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30227152?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/LionelDong"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7533395?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/LocoRichard"&gt;&lt;img src="https://avatars.githubusercontent.com/u/81553353?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/LoveEachDay"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1573213?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/MrPresent-Han"&gt;&lt;img src="https://avatars.githubusercontent.com/u/116052805?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/NavanshGoel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74401713?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/NicoYuan1986"&gt;&lt;img src="https://avatars.githubusercontent.com/u/109071306?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/NotRyan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5742796?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/OxalisCu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64067746?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/PahudPlus"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64403786?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/PiercarloSlavazza"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3389306?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/PowderLi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/135960789?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/PwzXxm"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6563846?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/QipengZhou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5410298?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/RangerCD"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6872198?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Raysilience"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45241093?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Reidddddd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5352837?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ReigenAraka"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57280231?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Rijin-N"&gt;&lt;img src="https://avatars.githubusercontent.com/u/181319057?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/RosieZhang12"&gt;&lt;img src="https://avatars.githubusercontent.com/u/106942883?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/RyanWei"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9876551?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/SCKCZJ2018"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29282370?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/SarthakJain26"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45846277?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Shawnzheng011019"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88486803?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/SimFG"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21985684?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/SkyYang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4702509?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/SnowyOwl-KHY"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10348819?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/SpadeA-Tang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/71589810?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Sunt-ing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/43040147?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/SwaggySong"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36157116?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/TheShubhendra"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37535104?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Thor-ChenBiao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/104345188?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ThreadDao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27288593?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ThyeeZz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/41352919?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Tlincy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11934432?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Tumao727"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20420181?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/UnyieldingOrca"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11794047?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Writer-X"&gt;&lt;img src="https://avatars.githubusercontent.com/u/80471801?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Writtic"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11371498?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Wuzhengda55"&gt;&lt;img src="https://avatars.githubusercontent.com/u/47274057?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Xieql"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45359033?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/XuPeng-SH"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39627130?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/XuanYang-cn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51370125?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/YannFollet"&gt;&lt;img src="https://avatars.githubusercontent.com/u/131855179?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/YidaHu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13404367?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/YiyunNi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/74396087?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Yougigun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9638997?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Yukikaze-CZR"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48198922?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/Zach41"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3941604?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ZhaoBQ"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35092554?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/aaronjin2010"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48044391?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/abd-770"&gt;&lt;img src="https://avatars.githubusercontent.com/u/92085834?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/akihoni"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36330442?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/alexanderguzhva"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10901481?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/alwayslove2013"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22510720?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/anchun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2356895?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/any35"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2082210?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/aoiasd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45024769?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/arijit-chowdhury-genea"&gt;&lt;img src="https://avatars.githubusercontent.com/u/104769013?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ashkrisk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/137368647?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ashyshyshyman"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50362613?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/avats-dev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35889327?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/avsolatorio"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3009596?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/balloon1995"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10573916?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/become-nice"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56624819?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/bigsheeper"&gt;&lt;img src="https://avatars.githubusercontent.com/u/42060877?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/binbin12580"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30914966?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/binbinlv"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83755740?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/bjzhjing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46661806?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/bo-huang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24309515?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/brandonbiggs"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34954680?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/brcarry"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58139344?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/brunocfnba"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7377163?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/bryanwux"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17968665?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/caesarjuly"&gt;&lt;img src="https://avatars.githubusercontent.com/u/927521?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/caosiyang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2155120?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/carawaylj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/69145751?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/charleskakumanu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62761315?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/charlspjohn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14850736?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/chasingegg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18375889?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/chengpu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2233492?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/chenxingqiang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12387235?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/chinamcafee"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3439961?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/chuangfengwang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24692397?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/chyezh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20332315?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/cjrh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/480395?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/claireyuw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83751381?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/codacy-badger"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23704769?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/codenoid"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14269809?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/codingjaguar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7064054?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/congqixia"&gt;&lt;img src="https://avatars.githubusercontent.com/u/84113973?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/corest"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1071648?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/counter2015"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13608862?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/cqy123456"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39671710?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/cuishuang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15921519?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/cxie"&gt;&lt;img src="https://avatars.githubusercontent.com/u/653101?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/cxytz01"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18002438?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/cydrain"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3992404?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/czpmango"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26356194?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/czs007"&gt;&lt;img src="https://avatars.githubusercontent.com/u/59249785?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/dandv"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33569?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/dariocurr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48800335?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/datenhahn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13999666?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/dd-He"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24242249?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/dddddai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/41563853?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/del-zhenwu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56623710?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/dengxiaohai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/137682492?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/disflyer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22723892?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/divyaruhil"&gt;&lt;img src="https://avatars.githubusercontent.com/u/117009486?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/donno2048"&gt;&lt;img src="https://avatars.githubusercontent.com/u/61805754?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/drow931"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11514434?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/dvzubarev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14878830?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/dyhyfu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64584368?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/eddumelendez"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1810547?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ehooi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1306183?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/elfisworking"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37609214?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/eli-b"&gt;&lt;img src="https://avatars.githubusercontent.com/u/834999?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/elstic"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48523564?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/emmanuel-ferdman"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35470921?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/eolivelli"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9469110?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/erdustiggen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/25433850?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/feisiyicl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64510805?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/fengjun2016"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23044049?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/filip-halt"&gt;&lt;img src="https://avatars.githubusercontent.com/u/81822489?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/filipecaixeta"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1094052?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/fishpenguin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49153041?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/forsaken628"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18322364?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/foxspy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11503321?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/franciscojavierarceo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4163062?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/freestsoul"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3909908?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/gcmutator"&gt;&lt;img src="https://avatars.githubusercontent.com/u/134900551?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ggaaooppeenngg"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4769989?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/gifi-siby"&gt;&lt;img src="https://avatars.githubusercontent.com/u/176461003?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/git-hulk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4987594?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/godchen0212"&gt;&lt;img src="https://avatars.githubusercontent.com/u/67679556?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/gracezzzzz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56617657?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/grtoverflow"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8500564?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/gruebel"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33207684?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/guimou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3944034?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/gujun720"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53246671?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/guoxiangzhou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/52496626?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/hadim"&gt;&lt;img src="https://avatars.githubusercontent.com/u/528003?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/haorenfsa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15938850?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/hckex"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33862757?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/hedane"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12457872?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/henryoswald"&gt;&lt;img src="https://avatars.githubusercontent.com/u/343366?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/hishope"&gt;&lt;img src="https://avatars.githubusercontent.com/u/153272819?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/huanghaoyuanhhy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/103482615?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/huangjincheng2022"&gt;&lt;img src="https://avatars.githubusercontent.com/u/98305308?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ibrahimhaddad"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1656002?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/im-ajaymeena"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19550841?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ireneontheway5"&gt;&lt;img src="https://avatars.githubusercontent.com/u/75291211?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/iynewz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/81401074?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/izapolsk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21039333?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jackyu2020"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64533877?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jaelgu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/86251631?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jaime0815"&gt;&lt;img src="https://avatars.githubusercontent.com/u/4024711?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jeffoverflow"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24581746?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jenkoon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27683687?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jennyli-z"&gt;&lt;img src="https://avatars.githubusercontent.com/u/93511422?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jhonroxton"&gt;&lt;img src="https://avatars.githubusercontent.com/u/105436184?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jiangke-sr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/68629395?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jiangyinzuo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40995042?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jiaoew1991"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2297455?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jielinxu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/52057195?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jingkl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34296482?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jjyaoao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/88936287?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jkx8fc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31717785?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/joeyjooste"&gt;&lt;img src="https://avatars.githubusercontent.com/u/72280325?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/john-h-luo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/67673717?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jperez999"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37191411?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/juliens"&gt;&lt;img src="https://avatars.githubusercontent.com/u/195661?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/junjiejiangjjj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14136703?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/jyc4617"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3044583?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/kartikcho"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48270786?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/kateshaowanjou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58837504?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/klboke"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18591662?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/laipz8200"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16485841?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/laurazhao0611"&gt;&lt;img src="https://avatars.githubusercontent.com/u/192320184?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/lee-eve"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9720105?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/lentitude2tk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/108672767?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/leonardokidd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14940941?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/letian-jiang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16740944?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/letme5"&gt;&lt;img src="https://avatars.githubusercontent.com/u/76860836?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/leykun10"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45382760?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/lhotari"&gt;&lt;img src="https://avatars.githubusercontent.com/u/66864?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/liliu-z"&gt;&lt;img src="https://avatars.githubusercontent.com/u/105927039?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/linhgao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/102851605?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/liyun95"&gt;&lt;img src="https://avatars.githubusercontent.com/u/105278390?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/locustbaby"&gt;&lt;img src="https://avatars.githubusercontent.com/u/21237232?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/loguo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/15364733?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/longjiquan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31589260?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/lowener"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9810050?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/lsgrep"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3893940?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/lwglgy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26682620?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/madogar"&gt;&lt;img src="https://avatars.githubusercontent.com/u/36537062?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/maksspace"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9841409?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/matchyc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57976772?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/matrixji"&gt;&lt;img src="https://avatars.githubusercontent.com/u/183388?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/mausch"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95194?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/mcamou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/87200?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/michaelkl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1443825?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/mihailyanchev"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34907806?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/mileyzjq"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37039827?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/milvus-ci-robot"&gt;&lt;img src="https://avatars.githubusercontent.com/u/87847967?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/mimoning"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19261942?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/moe-of-faith"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5696721?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/mohitreddy1996"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11742913?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/nameczz"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20559208?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/natoka"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1751024?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ncover21"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30241297?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/nexttonever"&gt;&lt;img src="https://avatars.githubusercontent.com/u/31059690?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/neza2017"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34152706?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/nianliuu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/136299351?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/nish112022"&gt;&lt;img src="https://avatars.githubusercontent.com/u/148342058?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/nustiueudinastea"&gt;&lt;img src="https://avatars.githubusercontent.com/u/588327?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/op-hunter"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5617677?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ownbylichaobao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37684963?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/panjf2000"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7496278?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/pengjeck"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14035577?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/phantom8548"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11576622?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/pingliu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6415493?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/pj1987111"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6268414?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ponponon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38725104?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/preetham"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9149028?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/presburger"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49336176?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/proost"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34047134?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/psc0606"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7888889?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/punkerpunker"&gt;&lt;img src="https://avatars.githubusercontent.com/u/54440025?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/qbzenker"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51972064?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/qixuan0212"&gt;&lt;img src="https://avatars.githubusercontent.com/u/135136620?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/rahulmistri1997"&gt;&lt;img src="https://avatars.githubusercontent.com/u/58909377?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/rashgaroth"&gt;&lt;img src="https://avatars.githubusercontent.com/u/50513263?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/richzw"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1590890?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ronnie-llamado"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35092029?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sachitolani"&gt;&lt;img src="https://avatars.githubusercontent.com/u/146494073?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sageanya"&gt;&lt;img src="https://avatars.githubusercontent.com/u/37909674?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/saisona"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10884762?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/saivarunk"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2976867?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sarah-inkeep"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129242944?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/scipe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3996622?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/scsven"&gt;&lt;img src="https://avatars.githubusercontent.com/u/100122127?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/seo-jinBro"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17746814?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/septemberfd"&gt;&lt;img src="https://avatars.githubusercontent.com/u/40378371?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shana0325"&gt;&lt;img src="https://avatars.githubusercontent.com/u/33335490?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shanghaikid"&gt;&lt;img src="https://avatars.githubusercontent.com/u/185051?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shaoting-huang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/167743503?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shengjh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46514371?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shengjun1985"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49774184?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shiyu09"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39143280?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shiyu22"&gt;&lt;img src="https://avatars.githubusercontent.com/u/53459423?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/shunjiezhao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/90906581?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/siddarth99"&gt;&lt;img src="https://avatars.githubusercontent.com/u/38921750?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sileht"&gt;&lt;img src="https://avatars.githubusercontent.com/u/200878?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/simonwei97"&gt;&lt;img src="https://avatars.githubusercontent.com/u/119845914?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/siriusctrl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26541600?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/slobentanzer"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13223629?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/smackfu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1723952?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/smellthemoon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/64083300?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/snyk-bot"&gt;&lt;img src="https://avatars.githubusercontent.com/u/19733683?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/songxianj"&gt;&lt;img src="https://avatars.githubusercontent.com/u/107831450?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/soothing-rain"&gt;&lt;img src="https://avatars.githubusercontent.com/u/69466447?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/soulteary"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1500781?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sparknack"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22293270?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sre-ci-robot"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56469371?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sre-ro"&gt;&lt;img src="https://avatars.githubusercontent.com/u/93502486?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sreyan-ghosh"&gt;&lt;img src="https://avatars.githubusercontent.com/u/60854658?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ss892714028"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34635663?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/stacyli-0601"&gt;&lt;img src="https://avatars.githubusercontent.com/u/218570478?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/stephen37"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6506810?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/stevetracvc"&gt;&lt;img src="https://avatars.githubusercontent.com/u/70416691?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/stuartjing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/3454260?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sunby"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9817127?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sutcalag"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83750738?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/sworddish"&gt;&lt;img src="https://avatars.githubusercontent.com/u/219938?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/talentAN"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17634030?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/tasty-gumi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95212988?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/taydy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/24822588?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/tbickford"&gt;&lt;img src="https://avatars.githubusercontent.com/u/814232?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/tedxu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/152654?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/tedyu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/235188?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/testwill"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8717479?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/thywdy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/56624359?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/timothycarambat"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16845892?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/tinkerlin"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13817362?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/tinswzy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30112657?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/topikachu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/1520380?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/trovwu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/89676996?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/tuwchia"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13282807?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/ulovecode"&gt;&lt;img src="https://avatars.githubusercontent.com/u/30142181?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/unfode"&gt;&lt;img src="https://avatars.githubusercontent.com/u/95689995?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/virgo-o"&gt;&lt;img src="https://avatars.githubusercontent.com/u/138708600?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/vladwa"&gt;&lt;img src="https://avatars.githubusercontent.com/u/22994848?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/vsanna"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7834445?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/vtereshyn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/32247411?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wangting0128"&gt;&lt;img src="https://avatars.githubusercontent.com/u/26307815?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/water32"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13234561?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wayblink"&gt;&lt;img src="https://avatars.githubusercontent.com/u/18096561?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/weiliu1031"&gt;&lt;img src="https://avatars.githubusercontent.com/u/108661493?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/weishuo2"&gt;&lt;img src="https://avatars.githubusercontent.com/u/27938020?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wg1026688210"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14267759?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wh201906"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62299611?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wscxyey"&gt;&lt;img src="https://avatars.githubusercontent.com/u/48882296?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wwx441476"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28601121?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wxyucs"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12595343?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wxywb"&gt;&lt;img src="https://avatars.githubusercontent.com/u/5432721?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/wzymumon"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46886508?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xaxys"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28949072?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiangzhouguo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/93316470?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaocai2333"&gt;&lt;img src="https://avatars.githubusercontent.com/u/46207236?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaofan-luan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/83447078?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaohu4313888"&gt;&lt;img src="https://avatars.githubusercontent.com/u/39088547?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiaowshi"&gt;&lt;img src="https://avatars.githubusercontent.com/u/45102896?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiedeyantu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/49781471?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xige-16"&gt;&lt;img src="https://avatars.githubusercontent.com/u/20124155?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xiyichan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34647972?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xlyslr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/14070517?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xudalin0609"&gt;&lt;img src="https://avatars.githubusercontent.com/u/35444753?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xuqiwe"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57252655?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/xzshinan"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7299894?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yah01"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12216890?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yahorbarkouski"&gt;&lt;img src="https://avatars.githubusercontent.com/u/94449298?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yamasite"&gt;&lt;img src="https://avatars.githubusercontent.com/u/10089260?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yanliang567"&gt;&lt;img src="https://avatars.githubusercontent.com/u/82361606?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yellow-shine"&gt;&lt;img src="https://avatars.githubusercontent.com/u/149367927?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yelusion2"&gt;&lt;img src="https://avatars.githubusercontent.com/u/97278661?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yhmo"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2282099?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yiuluchen"&gt;&lt;img src="https://avatars.githubusercontent.com/u/23047684?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yiwangdr"&gt;&lt;img src="https://avatars.githubusercontent.com/u/80064917?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yiwen92"&gt;&lt;img src="https://avatars.githubusercontent.com/u/34636520?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yongpengli-z"&gt;&lt;img src="https://avatars.githubusercontent.com/u/103410837?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/youny626"&gt;&lt;img src="https://avatars.githubusercontent.com/u/9016120?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yuyicai"&gt;&lt;img src="https://avatars.githubusercontent.com/u/13033733?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/yxm1536"&gt;&lt;img src="https://avatars.githubusercontent.com/u/62009483?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zander-bobronnikov"&gt;&lt;img src="https://avatars.githubusercontent.com/u/183726703?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zc2638"&gt;&lt;img src="https://avatars.githubusercontent.com/u/28284116?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zc277584121"&gt;&lt;img src="https://avatars.githubusercontent.com/u/17022025?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zengxy"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11961641?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zerowe-seven"&gt;&lt;img src="https://avatars.githubusercontent.com/u/57790060?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhagnlu"&gt;&lt;img src="https://avatars.githubusercontent.com/u/11935707?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhang787jun"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51014996?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhanshuyou"&gt;&lt;img src="https://avatars.githubusercontent.com/u/7420640?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhanxu33"&gt;&lt;img src="https://avatars.githubusercontent.com/u/16716445?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhengbuqian"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12147173?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhenwu-cn"&gt;&lt;img src="https://avatars.githubusercontent.com/u/2993941?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhikunyao"&gt;&lt;img src="https://avatars.githubusercontent.com/u/129478994?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhoubo0317"&gt;&lt;img src="https://avatars.githubusercontent.com/u/51948620?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhuwenxing"&gt;&lt;img src="https://avatars.githubusercontent.com/u/12268675?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zhuyaguang"&gt;&lt;img src="https://avatars.githubusercontent.com/u/8857976?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zjjzyl"&gt;&lt;img src="https://avatars.githubusercontent.com/u/6939141?v=4" width="30px"&gt;&lt;/a&gt; &lt;a href="https://github.com/zxf2017"&gt;&lt;img src="https://avatars.githubusercontent.com/u/29620478?v=4" width="30px"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- Do not remove end of hero-bot --&gt;</description>
    </item>
    
    <item>
      <title>go-playground/validator</title>
      <link>https://github.com/go-playground/validator</link>
      <description>&lt;p&gt;💯Go Struct and Field validation, including Cross Field, Cross Struct, Map, Slice and Array diving&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Package validator&lt;/h1&gt; 
&lt;p&gt;&lt;img align="right" src="https://raw.githubusercontent.com/go-playground/validator/master/logo.png"&gt;&lt;a href="https://github.com/go-playground/validator/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/go-playground/validator" alt="GitHub release (latest SemVer)"&gt;&lt;/a&gt; &lt;a href="https://github.com/go-playground/validator/actions"&gt;&lt;img src="https://github.com/go-playground/validator/actions/workflows/workflow.yml/badge.svg?sanitize=true" alt="Build Status"&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/go-playground/validator?branch=master"&gt;&lt;img src="https://coveralls.io/repos/go-playground/validator/badge.svg?branch=master&amp;amp;service=github" alt="Coverage Status"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/go-playground/validator"&gt;&lt;img src="https://goreportcard.com/badge/github.com/go-playground/validator" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/go-playground/validator/v10"&gt;&lt;img src="https://godoc.org/github.com/go-playground/validator?status.svg?sanitize=true" alt="GoDoc"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/dub/l/vibe-d.svg?sanitize=true" alt="License"&gt;&lt;/p&gt; 
&lt;p&gt;Package validator implements value validations for structs and individual fields based on tags.&lt;/p&gt; 
&lt;p&gt;It has the following &lt;strong&gt;unique&lt;/strong&gt; features:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Cross Field and Cross Struct validations by using validation tags or custom validators.&lt;/li&gt; 
 &lt;li&gt;Slice, Array and Map diving, which allows any or all levels of a multidimensional field to be validated.&lt;/li&gt; 
 &lt;li&gt;Ability to dive into both map keys and values for validation&lt;/li&gt; 
 &lt;li&gt;Handles type interface by determining it's underlying type prior to validation.&lt;/li&gt; 
 &lt;li&gt;Handles custom field types such as sql driver Valuer see &lt;a href="https://golang.org/src/database/sql/driver/types.go?s=1210:1293#L29"&gt;Valuer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Alias validation tags, which allows for mapping of several validations to a single tag for easier defining of validations on structs&lt;/li&gt; 
 &lt;li&gt;Extraction of custom defined Field Name e.g. can specify to extract the JSON name while validating and have it available in the resulting FieldError&lt;/li&gt; 
 &lt;li&gt;Customizable i18n aware error messages.&lt;/li&gt; 
 &lt;li&gt;Default validator for the &lt;a href="https://github.com/gin-gonic/gin"&gt;gin&lt;/a&gt; web framework; upgrading from v8 to v9 in gin see &lt;a href="https://github.com/go-playground/validator/tree/master/_examples/gin-upgrading-overriding"&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A Call for Maintainers&lt;/h2&gt; 
&lt;p&gt;Please read the discussiong started &lt;a href="https://github.com/go-playground/validator/discussions/1330"&gt;here&lt;/a&gt; if you are interested in contributing/helping maintain this package.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Use go get.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go get github.com/go-playground/validator/v10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then import the validator package into your own code.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;import "github.com/go-playground/validator/v10"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Error Return Value&lt;/h2&gt; 
&lt;p&gt;Validation functions return type error&lt;/p&gt; 
&lt;p&gt;They return type error to avoid the issue discussed in the following, where err is always != nil:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://stackoverflow.com/a/29138676/3158232"&gt;http://stackoverflow.com/a/29138676/3158232&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator/issues/134"&gt;https://github.com/go-playground/validator/issues/134&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Validator returns only InvalidValidationError for bad validation input, nil or ValidationErrors as type error; so, in your code all you need to do is check if the error returned is not nil, and if it's not check if error is InvalidValidationError ( if necessary, most of the time it isn't ) type cast it to type ValidationErrors like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;err := validate.Struct(mystruct)
validationErrors := err.(validator.ValidationErrors)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage and documentation&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://pkg.go.dev/github.com/go-playground/validator/v10"&gt;https://pkg.go.dev/github.com/go-playground/validator/v10&lt;/a&gt; for detailed usage docs.&lt;/p&gt; 
&lt;h5&gt;Examples:&lt;/h5&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator/raw/master/_examples/simple/main.go"&gt;Simple&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator/raw/master/_examples/custom/main.go"&gt;Custom Field Types&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator/raw/master/_examples/struct-level/main.go"&gt;Struct Level&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator/raw/master/_examples/translations/main.go"&gt;Translations &amp;amp; Custom Errors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/validator/tree/v9/_examples/gin-upgrading-overriding"&gt;Gin upgrade and/or override validator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bluesuncorp/wash"&gt;wash - an example application putting it all together&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Baked-in Validations&lt;/h2&gt; 
&lt;h3&gt;Special Notes:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If new to using validator it is highly recommended to initialize it using the &lt;code&gt;WithRequiredStructEnabled&lt;/code&gt; option which is opt-in to new behaviour that will become the default behaviour in v11+. See documentation for more details.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;validate := validator.New(validator.WithRequiredStructEnabled())
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Fields:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;eqcsfield&lt;/td&gt; 
   &lt;td&gt;Field Equals Another Field (relative)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;eqfield&lt;/td&gt; 
   &lt;td&gt;Field Equals Another Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fieldcontains&lt;/td&gt; 
   &lt;td&gt;Check the indicated characters are present in the Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fieldexcludes&lt;/td&gt; 
   &lt;td&gt;Check the indicated characters are not present in the field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gtcsfield&lt;/td&gt; 
   &lt;td&gt;Field Greater Than Another Relative Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gtecsfield&lt;/td&gt; 
   &lt;td&gt;Field Greater Than or Equal To Another Relative Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gtefield&lt;/td&gt; 
   &lt;td&gt;Field Greater Than or Equal To Another Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gtfield&lt;/td&gt; 
   &lt;td&gt;Field Greater Than Another Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ltcsfield&lt;/td&gt; 
   &lt;td&gt;Less Than Another Relative Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ltecsfield&lt;/td&gt; 
   &lt;td&gt;Less Than or Equal To Another Relative Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ltefield&lt;/td&gt; 
   &lt;td&gt;Less Than or Equal To Another Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ltfield&lt;/td&gt; 
   &lt;td&gt;Less Than Another Field&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;necsfield&lt;/td&gt; 
   &lt;td&gt;Field Does Not Equal Another Field (relative)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nefield&lt;/td&gt; 
   &lt;td&gt;Field Does Not Equal Another Field&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Network:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cidr&lt;/td&gt; 
   &lt;td&gt;Classless Inter-Domain Routing CIDR&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cidrv4&lt;/td&gt; 
   &lt;td&gt;Classless Inter-Domain Routing CIDRv4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cidrv6&lt;/td&gt; 
   &lt;td&gt;Classless Inter-Domain Routing CIDRv6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;datauri&lt;/td&gt; 
   &lt;td&gt;Data URL&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;fqdn&lt;/td&gt; 
   &lt;td&gt;Full Qualified Domain Name (FQDN)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hostname&lt;/td&gt; 
   &lt;td&gt;Hostname RFC 952&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hostname_port&lt;/td&gt; 
   &lt;td&gt;HostPort&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hostname_rfc1123&lt;/td&gt; 
   &lt;td&gt;Hostname RFC 1123&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ip&lt;/td&gt; 
   &lt;td&gt;Internet Protocol Address IP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ip4_addr&lt;/td&gt; 
   &lt;td&gt;Internet Protocol Address IPv4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ip6_addr&lt;/td&gt; 
   &lt;td&gt;Internet Protocol Address IPv6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ip_addr&lt;/td&gt; 
   &lt;td&gt;Internet Protocol Address IP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ipv4&lt;/td&gt; 
   &lt;td&gt;Internet Protocol Address IPv4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ipv6&lt;/td&gt; 
   &lt;td&gt;Internet Protocol Address IPv6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mac&lt;/td&gt; 
   &lt;td&gt;Media Access Control Address MAC&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tcp4_addr&lt;/td&gt; 
   &lt;td&gt;Transmission Control Protocol Address TCPv4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tcp6_addr&lt;/td&gt; 
   &lt;td&gt;Transmission Control Protocol Address TCPv6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tcp_addr&lt;/td&gt; 
   &lt;td&gt;Transmission Control Protocol Address TCP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;udp4_addr&lt;/td&gt; 
   &lt;td&gt;User Datagram Protocol Address UDPv4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;udp6_addr&lt;/td&gt; 
   &lt;td&gt;User Datagram Protocol Address UDPv6&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;udp_addr&lt;/td&gt; 
   &lt;td&gt;User Datagram Protocol Address UDP&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;unix_addr&lt;/td&gt; 
   &lt;td&gt;Unix domain socket end point Address&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uri&lt;/td&gt; 
   &lt;td&gt;URI String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;url&lt;/td&gt; 
   &lt;td&gt;URL String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;http_url&lt;/td&gt; 
   &lt;td&gt;HTTP URL String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;url_encoded&lt;/td&gt; 
   &lt;td&gt;URL Encoded&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;urn_rfc2141&lt;/td&gt; 
   &lt;td&gt;Urn RFC 2141 String&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Strings:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;alpha&lt;/td&gt; 
   &lt;td&gt;Alpha Only&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;alphanum&lt;/td&gt; 
   &lt;td&gt;Alphanumeric&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;alphanumunicode&lt;/td&gt; 
   &lt;td&gt;Alphanumeric Unicode&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;alphaunicode&lt;/td&gt; 
   &lt;td&gt;Alpha Unicode&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ascii&lt;/td&gt; 
   &lt;td&gt;ASCII&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;Boolean&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;contains&lt;/td&gt; 
   &lt;td&gt;Contains&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;containsany&lt;/td&gt; 
   &lt;td&gt;Contains Any&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;containsrune&lt;/td&gt; 
   &lt;td&gt;Contains Rune&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;endsnotwith&lt;/td&gt; 
   &lt;td&gt;Ends Not With&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;endswith&lt;/td&gt; 
   &lt;td&gt;Ends With&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excludes&lt;/td&gt; 
   &lt;td&gt;Excludes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excludesall&lt;/td&gt; 
   &lt;td&gt;Excludes All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excludesrune&lt;/td&gt; 
   &lt;td&gt;Excludes Rune&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;lowercase&lt;/td&gt; 
   &lt;td&gt;Lowercase&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;multibyte&lt;/td&gt; 
   &lt;td&gt;Multi-Byte Characters&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;Number&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;numeric&lt;/td&gt; 
   &lt;td&gt;Numeric&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;printascii&lt;/td&gt; 
   &lt;td&gt;Printable ASCII&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;startsnotwith&lt;/td&gt; 
   &lt;td&gt;Starts Not With&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;startswith&lt;/td&gt; 
   &lt;td&gt;Starts With&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uppercase&lt;/td&gt; 
   &lt;td&gt;Uppercase&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Format:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;base64&lt;/td&gt; 
   &lt;td&gt;Base64 String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;base64url&lt;/td&gt; 
   &lt;td&gt;Base64URL String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;base64rawurl&lt;/td&gt; 
   &lt;td&gt;Base64RawURL String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bic&lt;/td&gt; 
   &lt;td&gt;Business Identifier Code (ISO 9362)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;bcp47_language_tag&lt;/td&gt; 
   &lt;td&gt;Language tag (BCP 47)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;btc_addr&lt;/td&gt; 
   &lt;td&gt;Bitcoin Address&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;btc_addr_bech32&lt;/td&gt; 
   &lt;td&gt;Bitcoin Bech32 Address (segwit)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;credit_card&lt;/td&gt; 
   &lt;td&gt;Credit Card Number&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mongodb&lt;/td&gt; 
   &lt;td&gt;MongoDB ObjectID&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;mongodb_connection_string&lt;/td&gt; 
   &lt;td&gt;MongoDB Connection String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cron&lt;/td&gt; 
   &lt;td&gt;Cron&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;spicedb&lt;/td&gt; 
   &lt;td&gt;SpiceDb ObjectID/Permission/Type&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;datetime&lt;/td&gt; 
   &lt;td&gt;Datetime&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;e164&lt;/td&gt; 
   &lt;td&gt;e164 formatted phone number&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ein&lt;/td&gt; 
   &lt;td&gt;U.S. Employeer Identification Number&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;email&lt;/td&gt; 
   &lt;td&gt;E-mail String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;eth_addr&lt;/td&gt; 
   &lt;td&gt;Ethereum Address&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hexadecimal&lt;/td&gt; 
   &lt;td&gt;Hexadecimal String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hexcolor&lt;/td&gt; 
   &lt;td&gt;Hexcolor String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hsl&lt;/td&gt; 
   &lt;td&gt;HSL String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hsla&lt;/td&gt; 
   &lt;td&gt;HSLA String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;html&lt;/td&gt; 
   &lt;td&gt;HTML Tags&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;html_encoded&lt;/td&gt; 
   &lt;td&gt;HTML Encoded&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;isbn&lt;/td&gt; 
   &lt;td&gt;International Standard Book Number&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;isbn10&lt;/td&gt; 
   &lt;td&gt;International Standard Book Number 10&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;isbn13&lt;/td&gt; 
   &lt;td&gt;International Standard Book Number 13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;issn&lt;/td&gt; 
   &lt;td&gt;International Standard Serial Number&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iso3166_1_alpha2&lt;/td&gt; 
   &lt;td&gt;Two-letter country code (ISO 3166-1 alpha-2)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iso3166_1_alpha3&lt;/td&gt; 
   &lt;td&gt;Three-letter country code (ISO 3166-1 alpha-3)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iso3166_1_alpha_numeric&lt;/td&gt; 
   &lt;td&gt;Numeric country code (ISO 3166-1 numeric)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iso3166_2&lt;/td&gt; 
   &lt;td&gt;Country subdivision code (ISO 3166-2)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iso4217&lt;/td&gt; 
   &lt;td&gt;Currency code (ISO 4217)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;json&lt;/td&gt; 
   &lt;td&gt;JSON&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;jwt&lt;/td&gt; 
   &lt;td&gt;JSON Web Token (JWT)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;latitude&lt;/td&gt; 
   &lt;td&gt;Latitude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;longitude&lt;/td&gt; 
   &lt;td&gt;Longitude&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;luhn_checksum&lt;/td&gt; 
   &lt;td&gt;Luhn Algorithm Checksum (for strings and (u)int)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;postcode_iso3166_alpha2&lt;/td&gt; 
   &lt;td&gt;Postcode&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;postcode_iso3166_alpha2_field&lt;/td&gt; 
   &lt;td&gt;Postcode&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rgb&lt;/td&gt; 
   &lt;td&gt;RGB String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rgba&lt;/td&gt; 
   &lt;td&gt;RGBA String&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ssn&lt;/td&gt; 
   &lt;td&gt;Social Security Number SSN&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;timezone&lt;/td&gt; 
   &lt;td&gt;Timezone&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid3&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID v3&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid3_rfc4122&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID v3 RFC4122&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid4&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID v4&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid4_rfc4122&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID v4 RFC4122&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid5&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID v5&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid5_rfc4122&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID v5 RFC4122&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uuid_rfc4122&lt;/td&gt; 
   &lt;td&gt;Universally Unique Identifier UUID RFC4122&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;md4&lt;/td&gt; 
   &lt;td&gt;MD4 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;md5&lt;/td&gt; 
   &lt;td&gt;MD5 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sha256&lt;/td&gt; 
   &lt;td&gt;SHA256 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sha384&lt;/td&gt; 
   &lt;td&gt;SHA384 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sha512&lt;/td&gt; 
   &lt;td&gt;SHA512 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripemd128&lt;/td&gt; 
   &lt;td&gt;RIPEMD-128 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ripemd128&lt;/td&gt; 
   &lt;td&gt;RIPEMD-160 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tiger128&lt;/td&gt; 
   &lt;td&gt;TIGER128 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tiger160&lt;/td&gt; 
   &lt;td&gt;TIGER160 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tiger192&lt;/td&gt; 
   &lt;td&gt;TIGER192 hash&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;semver&lt;/td&gt; 
   &lt;td&gt;Semantic Versioning 2.0.0&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ulid&lt;/td&gt; 
   &lt;td&gt;Universally Unique Lexicographically Sortable Identifier ULID&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cve&lt;/td&gt; 
   &lt;td&gt;Common Vulnerabilities and Exposures Identifier (CVE id)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Comparisons:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;eq&lt;/td&gt; 
   &lt;td&gt;Equals&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;eq_ignore_case&lt;/td&gt; 
   &lt;td&gt;Equals ignoring case&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gt&lt;/td&gt; 
   &lt;td&gt;Greater than&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gte&lt;/td&gt; 
   &lt;td&gt;Greater than or equal&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;lt&lt;/td&gt; 
   &lt;td&gt;Less Than&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;lte&lt;/td&gt; 
   &lt;td&gt;Less Than or Equal&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ne&lt;/td&gt; 
   &lt;td&gt;Not Equal&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ne_ignore_case&lt;/td&gt; 
   &lt;td&gt;Not Equal ignoring case&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Other:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dir&lt;/td&gt; 
   &lt;td&gt;Existing Directory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;dirpath&lt;/td&gt; 
   &lt;td&gt;Directory Path&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;file&lt;/td&gt; 
   &lt;td&gt;Existing File&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;filepath&lt;/td&gt; 
   &lt;td&gt;File Path&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;image&lt;/td&gt; 
   &lt;td&gt;Image&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;isdefault&lt;/td&gt; 
   &lt;td&gt;Is Default&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;len&lt;/td&gt; 
   &lt;td&gt;Length&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;max&lt;/td&gt; 
   &lt;td&gt;Maximum&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;min&lt;/td&gt; 
   &lt;td&gt;Minimum&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;oneof&lt;/td&gt; 
   &lt;td&gt;One Of&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;required&lt;/td&gt; 
   &lt;td&gt;Required&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;required_if&lt;/td&gt; 
   &lt;td&gt;Required If&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;required_unless&lt;/td&gt; 
   &lt;td&gt;Required Unless&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;required_with&lt;/td&gt; 
   &lt;td&gt;Required With&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;required_with_all&lt;/td&gt; 
   &lt;td&gt;Required With All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;required_without&lt;/td&gt; 
   &lt;td&gt;Required Without&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;required_without_all&lt;/td&gt; 
   &lt;td&gt;Required Without All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excluded_if&lt;/td&gt; 
   &lt;td&gt;Excluded If&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excluded_unless&lt;/td&gt; 
   &lt;td&gt;Excluded Unless&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excluded_with&lt;/td&gt; 
   &lt;td&gt;Excluded With&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excluded_with_all&lt;/td&gt; 
   &lt;td&gt;Excluded With All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excluded_without&lt;/td&gt; 
   &lt;td&gt;Excluded Without&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;excluded_without_all&lt;/td&gt; 
   &lt;td&gt;Excluded Without All&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;unique&lt;/td&gt; 
   &lt;td&gt;Unique&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;validateFn&lt;/td&gt; 
   &lt;td&gt;Verify if the method &lt;code&gt;Validate() error&lt;/code&gt; does not return an error (or any specified method)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Aliases:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Tag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;iscolor&lt;/td&gt; 
   &lt;td&gt;hexcolor|rgb|rgba|hsl|hsla&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;country_code&lt;/td&gt; 
   &lt;td&gt;iso3166_1_alpha2|iso3166_1_alpha3|iso3166_1_alpha_numeric&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;h6&gt;Run on MacBook Pro Max M3&lt;/h6&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;go version go1.23.3 darwin/arm64
goos: darwin
goarch: arm64
cpu: Apple M3 Max
pkg: github.com/go-playground/validator/v10
BenchmarkFieldSuccess-16                                                42461943                27.88 ns/op            0 B/op          0 allocs/op
BenchmarkFieldSuccessParallel-16                                        486632887                2.289 ns/op           0 B/op          0 allocs/op
BenchmarkFieldFailure-16                                                 9566167               121.3 ns/op           200 B/op          4 allocs/op
BenchmarkFieldFailureParallel-16                                        17551471                83.68 ns/op          200 B/op          4 allocs/op
BenchmarkFieldArrayDiveSuccess-16                                        7602306               155.6 ns/op            97 B/op          5 allocs/op
BenchmarkFieldArrayDiveSuccessParallel-16                               20664610                59.80 ns/op           97 B/op          5 allocs/op
BenchmarkFieldArrayDiveFailure-16                                        4659756               252.9 ns/op           301 B/op         10 allocs/op
BenchmarkFieldArrayDiveFailureParallel-16                                8010116               152.9 ns/op           301 B/op         10 allocs/op
BenchmarkFieldMapDiveSuccess-16                                          2834575               421.2 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveSuccessParallel-16                                  7179700               171.8 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveFailure-16                                          3081728               384.4 ns/op           376 B/op         13 allocs/op
BenchmarkFieldMapDiveFailureParallel-16                                  6058137               204.0 ns/op           377 B/op         13 allocs/op
BenchmarkFieldMapDiveWithKeysSuccess-16                                  2544975               464.8 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveWithKeysSuccessParallel-16                          6661954               181.4 ns/op           288 B/op         14 allocs/op
BenchmarkFieldMapDiveWithKeysFailure-16                                  2435484               490.7 ns/op           553 B/op         16 allocs/op
BenchmarkFieldMapDiveWithKeysFailureParallel-16                          4249617               282.0 ns/op           554 B/op         16 allocs/op
BenchmarkFieldCustomTypeSuccess-16                                      14943525                77.35 ns/op           32 B/op          2 allocs/op
BenchmarkFieldCustomTypeSuccessParallel-16                              64051954                20.61 ns/op           32 B/op          2 allocs/op
BenchmarkFieldCustomTypeFailure-16                                      10721384               107.1 ns/op           184 B/op          3 allocs/op
BenchmarkFieldCustomTypeFailureParallel-16                              18714495                69.77 ns/op          184 B/op          3 allocs/op
BenchmarkFieldOrTagSuccess-16                                            4063124               294.3 ns/op            16 B/op          1 allocs/op
BenchmarkFieldOrTagSuccessParallel-16                                   31903756                41.22 ns/op           18 B/op          1 allocs/op
BenchmarkFieldOrTagFailure-16                                            7748558               146.8 ns/op           216 B/op          5 allocs/op
BenchmarkFieldOrTagFailureParallel-16                                   13139854                92.05 ns/op          216 B/op          5 allocs/op
BenchmarkStructLevelValidationSuccess-16                                16808389                70.25 ns/op           16 B/op          1 allocs/op
BenchmarkStructLevelValidationSuccessParallel-16                        90686955                14.47 ns/op           16 B/op          1 allocs/op
BenchmarkStructLevelValidationFailure-16                                 5818791               200.2 ns/op           264 B/op          7 allocs/op
BenchmarkStructLevelValidationFailureParallel-16                        11115874               107.5 ns/op           264 B/op          7 allocs/op
BenchmarkStructSimpleCustomTypeSuccess-16                                7764956               151.9 ns/op            32 B/op          2 allocs/op
BenchmarkStructSimpleCustomTypeSuccessParallel-16                       52316265                30.37 ns/op           32 B/op          2 allocs/op
BenchmarkStructSimpleCustomTypeFailure-16                                4195429               277.2 ns/op           416 B/op          9 allocs/op
BenchmarkStructSimpleCustomTypeFailureParallel-16                        7305661               164.6 ns/op           432 B/op         10 allocs/op
BenchmarkStructFilteredSuccess-16                                        6312625               186.1 ns/op           216 B/op          5 allocs/op
BenchmarkStructFilteredSuccessParallel-16                               13684459                93.42 ns/op          216 B/op          5 allocs/op
BenchmarkStructFilteredFailure-16                                        6751482               171.2 ns/op           216 B/op          5 allocs/op
BenchmarkStructFilteredFailureParallel-16                               14146070                86.93 ns/op          216 B/op          5 allocs/op
BenchmarkStructPartialSuccess-16                                         6544448               177.3 ns/op           224 B/op          4 allocs/op
BenchmarkStructPartialSuccessParallel-16                                13951946                88.73 ns/op          224 B/op          4 allocs/op
BenchmarkStructPartialFailure-16                                         4075833               287.5 ns/op           440 B/op          9 allocs/op
BenchmarkStructPartialFailureParallel-16                                 7490805               161.3 ns/op           440 B/op          9 allocs/op
BenchmarkStructExceptSuccess-16                                          4107187               281.4 ns/op           424 B/op          8 allocs/op
BenchmarkStructExceptSuccessParallel-16                                 15979173                80.86 ns/op          208 B/op          3 allocs/op
BenchmarkStructExceptFailure-16                                          4434372               264.3 ns/op           424 B/op          8 allocs/op
BenchmarkStructExceptFailureParallel-16                                  8081367               154.1 ns/op           424 B/op          8 allocs/op
BenchmarkStructSimpleCrossFieldSuccess-16                                6459542               183.4 ns/op            56 B/op          3 allocs/op
BenchmarkStructSimpleCrossFieldSuccessParallel-16                       41013781                37.95 ns/op           56 B/op          3 allocs/op
BenchmarkStructSimpleCrossFieldFailure-16                                4034998               292.1 ns/op           272 B/op          8 allocs/op
BenchmarkStructSimpleCrossFieldFailureParallel-16                       11348446               115.3 ns/op           272 B/op          8 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldSuccess-16                     4448528               267.7 ns/op            64 B/op          4 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldSuccessParallel-16            26813619                48.33 ns/op           64 B/op          4 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldFailure-16                     3090646               384.5 ns/op           288 B/op          9 allocs/op
BenchmarkStructSimpleCrossStructCrossFieldFailureParallel-16             9870906               129.5 ns/op           288 B/op          9 allocs/op
BenchmarkStructSimpleSuccess-16                                         10675562               109.5 ns/op             0 B/op          0 allocs/op
BenchmarkStructSimpleSuccessParallel-16                                 131159784                8.932 ns/op           0 B/op          0 allocs/op
BenchmarkStructSimpleFailure-16                                          4094979               286.6 ns/op           416 B/op          9 allocs/op
BenchmarkStructSimpleFailureParallel-16                                  7606663               157.9 ns/op           416 B/op          9 allocs/op
BenchmarkStructComplexSuccess-16                                         2073470               576.0 ns/op           224 B/op          5 allocs/op
BenchmarkStructComplexSuccessParallel-16                                 7821831               161.3 ns/op           224 B/op          5 allocs/op
BenchmarkStructComplexFailure-16                                          576358              2001 ns/op            3042 B/op         48 allocs/op
BenchmarkStructComplexFailureParallel-16                                 1000000              1171 ns/op            3041 B/op         48 allocs/op
BenchmarkOneof-16                                                       22503973                52.82 ns/op            0 B/op          0 allocs/op
BenchmarkOneofParallel-16                                                8538474               140.4 ns/op             0 B/op          0 allocs/op
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Complementary Software&lt;/h2&gt; 
&lt;p&gt;Here is a list of software that complements using this library either pre or post validation.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/form"&gt;form&lt;/a&gt; - Decodes url.Values into Go value(s) and Encodes Go value(s) into url.Values. Dual Array and Full map support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/go-playground/mold"&gt;mold&lt;/a&gt; - A general library to help modify or set data within data structures and other objects&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;p&gt;Make a pull request...&lt;/p&gt; 
&lt;h2&gt;Maintenance and support for SDK major versions&lt;/h2&gt; 
&lt;p&gt;See prior discussion &lt;a href="https://github.com/go-playground/validator/discussions/1342"&gt;here&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;This package is aligned with the &lt;a href="https://go.dev/doc/devel/release"&gt;Go release policy&lt;/a&gt; in that support is guaranteed for the two most recent major versions.&lt;/p&gt; 
&lt;p&gt;This does not mean the package will not work with older versions of Go, only that we reserve the right to increase the MSGV(Minimum Supported Go Version) when the need arises to address Security issues/patches, OS issues &amp;amp; support or newly introduced functionality that would greatly benefit the maintenance and/or usage of this package.&lt;/p&gt; 
&lt;p&gt;If and when the MSGV is increased it will be done so in a minimum of a &lt;code&gt;Minor&lt;/code&gt; release bump.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Distributed under MIT License, please see license file within the code for more details.&lt;/p&gt; 
&lt;h2&gt;Maintainers&lt;/h2&gt; 
&lt;p&gt;This project has grown large enough that more than one person is required to properly support the community. If you are interested in becoming a maintainer please reach out to me &lt;a href="https://github.com/deankarn"&gt;https://github.com/deankarn&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jackc/pgx</title>
      <link>https://github.com/jackc/pgx</link>
      <description>&lt;p&gt;PostgreSQL driver and toolkit for Go&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/jackc/pgx/v5"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/jackc/pgx/v5.svg?sanitize=true" alt="Go Reference"&gt;&lt;/a&gt; &lt;a href="https://github.com/jackc/pgx/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/jackc/pgx/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="Build Status"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;pgx - PostgreSQL Driver and Toolkit&lt;/h1&gt; 
&lt;p&gt;pgx is a pure Go driver and toolkit for PostgreSQL.&lt;/p&gt; 
&lt;p&gt;The pgx driver is a low-level, high performance interface that exposes PostgreSQL-specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt;. It also includes an adapter for the standard &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;The toolkit component is a related set of packages that implement PostgreSQL functionality such as parsing the wire protocol and type mapping between PostgreSQL and Go. These underlying packages can be used to implement alternative drivers, proxies, load balancers, logical replication clients, etc.&lt;/p&gt; 
&lt;h2&gt;Example Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"fmt"
	"os"

	"github.com/jackc/pgx/v5"
)

func main() {
	// urlExample := "postgres://username:password@localhost:5432/database_name"
	conn, err := pgx.Connect(context.Background(), os.Getenv("DATABASE_URL"))
	if err != nil {
		fmt.Fprintf(os.Stderr, "Unable to connect to database: %v\n", err)
		os.Exit(1)
	}
	defer conn.Close(context.Background())

	var name string
	var weight int64
	err = conn.QueryRow(context.Background(), "select name, weight from widgets where id=$1", 42).Scan(&amp;amp;name, &amp;amp;weight)
	if err != nil {
		fmt.Fprintf(os.Stderr, "QueryRow failed: %v\n", err)
		os.Exit(1)
	}

	fmt.Println(name, weight)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/jackc/pgx/wiki/Getting-started-with-pgx"&gt;getting started guide&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for approximately 70 different PostgreSQL types&lt;/li&gt; 
 &lt;li&gt;Automatic statement preparation and caching&lt;/li&gt; 
 &lt;li&gt;Batch queries&lt;/li&gt; 
 &lt;li&gt;Single-round trip query mode&lt;/li&gt; 
 &lt;li&gt;Full TLS connection control&lt;/li&gt; 
 &lt;li&gt;Binary format support for custom types (allows for much quicker encoding/decoding)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;COPY&lt;/code&gt; protocol support for faster bulk data loads&lt;/li&gt; 
 &lt;li&gt;Tracing and logging support&lt;/li&gt; 
 &lt;li&gt;Connection pool with after-connect hook for arbitrary connection setup&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Conversion of PostgreSQL arrays to Go slice mappings for integers, floats, and strings&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hstore&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;json&lt;/code&gt; and &lt;code&gt;jsonb&lt;/code&gt; support&lt;/li&gt; 
 &lt;li&gt;Maps &lt;code&gt;inet&lt;/code&gt; and &lt;code&gt;cidr&lt;/code&gt; PostgreSQL types to &lt;code&gt;netip.Addr&lt;/code&gt; and &lt;code&gt;netip.Prefix&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Large object support&lt;/li&gt; 
 &lt;li&gt;NULL mapping to pointer to pointer&lt;/li&gt; 
 &lt;li&gt;Supports &lt;code&gt;database/sql.Scanner&lt;/code&gt; and &lt;code&gt;database/sql/driver.Valuer&lt;/code&gt; interfaces for custom types&lt;/li&gt; 
 &lt;li&gt;Notice response handling&lt;/li&gt; 
 &lt;li&gt;Simulated nested transactions with savepoints&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Choosing Between the pgx and database/sql Interfaces&lt;/h2&gt; 
&lt;p&gt;The pgx interface is faster. Many PostgreSQL specific features such as &lt;code&gt;LISTEN&lt;/code&gt; / &lt;code&gt;NOTIFY&lt;/code&gt; and &lt;code&gt;COPY&lt;/code&gt; are not available through the &lt;code&gt;database/sql&lt;/code&gt; interface.&lt;/p&gt; 
&lt;p&gt;The pgx interface is recommended when:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The application only targets PostgreSQL.&lt;/li&gt; 
 &lt;li&gt;No other libraries that require &lt;code&gt;database/sql&lt;/code&gt; are in use.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;It is also possible to use the &lt;code&gt;database/sql&lt;/code&gt; interface and convert a connection to the lower-level pgx interface as needed.&lt;/p&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/jackc/pgx/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for setup instructions.&lt;/p&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;See the presentation at Golang Estonia, &lt;a href="https://www.youtube.com/watch?v=sXMSWhcHCf8"&gt;PGX Top to Bottom&lt;/a&gt; for a description of pgx architecture.&lt;/p&gt; 
&lt;h2&gt;Supported Go and PostgreSQL Versions&lt;/h2&gt; 
&lt;p&gt;pgx supports the same versions of Go and PostgreSQL that are supported by their respective teams. For &lt;a href="https://golang.org/doc/devel/release.html#policy"&gt;Go&lt;/a&gt; that is the two most recent major releases and for &lt;a href="https://www.postgresql.org/support/versioning/"&gt;PostgreSQL&lt;/a&gt; the major releases in the last 5 years. This means pgx supports Go 1.23 and higher and PostgreSQL 13 and higher. pgx also is tested against the latest version of &lt;a href="https://www.cockroachlabs.com/product/"&gt;CockroachDB&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Version Policy&lt;/h2&gt; 
&lt;p&gt;pgx follows semantic versioning for the documented public API on stable releases. &lt;code&gt;v5&lt;/code&gt; is the latest stable major version.&lt;/p&gt; 
&lt;h2&gt;PGX Family Libraries&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pglogrepl"&gt;github.com/jackc/pglogrepl&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pglogrepl provides functionality to act as a client for PostgreSQL logical replication.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pgmock"&gt;github.com/jackc/pgmock&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgmock offers the ability to create a server that mocks the PostgreSQL wire protocol. This is used internally to test pgx by purposely inducing unusual errors. pgproto3 and pgmock together provide most of the foundational tooling required to implement a PostgreSQL proxy or MitM (such as for a custom connection pooler).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/tern"&gt;github.com/jackc/tern&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;tern is a stand-alone SQL migration system.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/jackc/pgerrcode"&gt;github.com/jackc/pgerrcode&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgerrcode contains constants for the PostgreSQL error codes.&lt;/p&gt; 
&lt;h2&gt;Adapters for 3rd Party Types&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-gofrs-uuid"&gt;github.com/jackc/pgx-gofrs-uuid&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-shopspring-decimal"&gt;github.com/jackc/pgx-shopspring-decimal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/twpayne/pgx-geos"&gt;github.com/twpayne/pgx-geos&lt;/a&gt; (&lt;a href="https://postgis.net/"&gt;PostGIS&lt;/a&gt; and &lt;a href="https://libgeos.org/"&gt;GEOS&lt;/a&gt; via &lt;a href="https://github.com/twpayne/go-geos"&gt;go-geos&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vgarvardt/pgx-google-uuid"&gt;github.com/vgarvardt/pgx-google-uuid&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adapters for 3rd Party Tracers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackhopner/pgx-xray-tracer"&gt;github.com/jackhopner/pgx-xray-tracer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/exaring/otelpgx"&gt;github.com/exaring/otelpgx&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adapters for 3rd Party Loggers&lt;/h2&gt; 
&lt;p&gt;These adapters can be used with the tracelog package.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-go-kit-log"&gt;github.com/jackc/pgx-go-kit-log&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-log15"&gt;github.com/jackc/pgx-log15&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-logrus"&gt;github.com/jackc/pgx-logrus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-zap"&gt;github.com/jackc/pgx-zap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jackc/pgx-zerolog"&gt;github.com/jackc/pgx-zerolog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mcosta74/pgx-slog"&gt;github.com/mcosta74/pgx-slog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kataras/pgx-golog"&gt;github.com/kataras/pgx-golog&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;3rd Party Libraries with PGX Support&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://github.com/pashagolub/pgxmock"&gt;github.com/pashagolub/pgxmock&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;pgxmock is a mock library implementing pgx interfaces. pgxmock has one and only purpose - to simulate pgx behavior in tests, without needing a real database connection.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/georgysavva/scany"&gt;github.com/georgysavva/scany&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Library for scanning data from a database into Go structs and more.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/vingarcia/ksql"&gt;github.com/vingarcia/ksql&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;A carefully designed SQL client for making using SQL easier, more productive, and less error-prone on Golang.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/otan/gopgkrb5"&gt;github.com/otan/gopgkrb5&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Adds GSSAPI / Kerberos authentication support.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/wcamarao/pmx"&gt;github.com/wcamarao/pmx&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Explicit data mapping and scanning library for Go structs and slices.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/stephenafamo/scan"&gt;github.com/stephenafamo/scan&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Type safe and flexible package for scanning database data into Go types. Supports, structs, maps, slices and custom mapping functions.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/z0ne-dev/mgx"&gt;github.com/z0ne-dev/mgx&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Code first migration library for native pgx (no database/sql abstraction).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/amirsalarsafaei/sqlc-pgx-monitoring"&gt;github.com/amirsalarsafaei/sqlc-pgx-monitoring&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;A database monitoring/metrics library for pgx and sqlc. Trace, log and monitor your sqlc query performance using OpenTelemetry.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/nikolayk812/pgx-outbox"&gt;https://github.com/nikolayk812/pgx-outbox&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Simple Golang implementation for transactional outbox pattern for PostgreSQL using jackc/pgx driver.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://github.com/Arlandaren/pgxWrappy"&gt;https://github.com/Arlandaren/pgxWrappy&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Simplifies working with the pgx library, providing convenient scanning of nested structures.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>syncthing/syncthing</title>
      <link>https://github.com/syncthing/syncthing</link>
      <description>&lt;p&gt;Open Source Continuous File Synchronization&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://syncthing.net/"&gt;&lt;img src="https://raw.githubusercontent.com/syncthing/syncthing/main/assets/logo-text-128.png" alt="Syncthing"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;a href="https://www.mozilla.org/MPL/2.0/"&gt;&lt;img src="https://img.shields.io/badge/license-MPLv2-blue.svg?style=flat-square" alt="MPLv2 License"&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/88"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/88/badge" alt="CII Best Practices"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/syncthing/syncthing"&gt;&lt;img src="https://goreportcard.com/badge/github.com/syncthing/syncthing" alt="Go Report Card"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Goals&lt;/h2&gt; 
&lt;p&gt;Syncthing is a &lt;strong&gt;continuous file synchronization program&lt;/strong&gt;. It synchronizes files between two or more computers. We strive to fulfill the goals below. The goals are listed in order of importance, the most important ones first. This is the summary version of the goal list - for more commentary, see the full &lt;a href="https://github.com/syncthing/syncthing/raw/main/GOALS.md"&gt;Goals document&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Syncthing should be:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Safe From Data Loss&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Protecting the user's data is paramount. We take every reasonable precaution to avoid corrupting the user's files.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Against Attackers&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Again, protecting the user's data is paramount. Regardless of our other goals, we must never allow the user's data to be susceptible to eavesdropping or modification by unauthorized parties.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Easy to Use&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should be approachable, understandable, and inclusive.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automatic&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;User interaction should be required only when absolutely necessary.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Universally Available&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing should run on every common computer. We are mindful that the latest technology is not always available to every individual.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For Individuals&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Syncthing is primarily about empowering the individual user with safe, secure, and easy to use file synchronization.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Everything Else&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;There are many things we care about that don't make it on to the list. It is fine to optimize for these values, as long as they are not in conflict with the stated goals above.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Take a look at the &lt;a href="https://docs.syncthing.net/intro/getting-started.html"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;There are a few examples for keeping Syncthing running in the background on your system in &lt;a href="https://github.com/syncthing/syncthing/raw/main/etc"&gt;the etc directory&lt;/a&gt;. There are also several &lt;a href="https://docs.syncthing.net/users/contrib.html#gui-wrappers"&gt;GUI implementations&lt;/a&gt; for Windows, Mac, and Linux.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;p&gt;To run Syncthing in Docker, see &lt;a href="https://github.com/syncthing/syncthing/raw/main/README-Docker.md"&gt;the Docker README&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting in Touch&lt;/h2&gt; 
&lt;p&gt;The first and best point of contact is the &lt;a href="https://forum.syncthing.net/"&gt;Forum&lt;/a&gt;. If you've found something that is clearly a bug, feel free to report it in the &lt;a href="https://github.com/syncthing/syncthing/issues"&gt;GitHub issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you believe that you’ve found a Syncthing-related security vulnerability, please report it by emailing &lt;a href="mailto:security@syncthing.net"&gt;security@syncthing.net&lt;/a&gt;. Do not report it in the Forum or issue tracker.&lt;/p&gt; 
&lt;h2&gt;Building&lt;/h2&gt; 
&lt;p&gt;Building Syncthing from source is easy. After extracting the source bundle from a release or checking out git, you just need to run &lt;code&gt;go run build.go&lt;/code&gt; and the binaries are created in &lt;code&gt;./bin&lt;/code&gt;. There's &lt;a href="https://docs.syncthing.net/dev/building.html"&gt;a guide&lt;/a&gt; with more details on the build process.&lt;/p&gt; 
&lt;h2&gt;Signed Releases&lt;/h2&gt; 
&lt;p&gt;Release binaries are GPG signed with the key available from &lt;a href="https://syncthing.net/security/"&gt;https://syncthing.net/security/&lt;/a&gt;. There is also a built-in automatic upgrade mechanism (disabled in some distribution channels) which uses a compiled in ECDSA signature. macOS and Windows binaries are also code-signed.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Please see the Syncthing &lt;a href="https://docs.syncthing.net/"&gt;documentation site&lt;/a&gt; &lt;a href="https://github.com/syncthing/docs"&gt;[source]&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All code is licensed under the &lt;a href="https://github.com/syncthing/syncthing/raw/main/LICENSE"&gt;MPLv2 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>modelcontextprotocol/go-sdk</title>
      <link>https://github.com/modelcontextprotocol/go-sdk</link>
      <description>&lt;p&gt;The official Go SDK for Model Context Protocol servers and clients. Maintained in collaboration with Google.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MCP Go SDK v0.2.0&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;BREAKING CHANGES&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;This version contains breaking changes. See the &lt;a href="https://github.com/modelcontextprotocol/go-sdk/releases/tag/v0.2.0"&gt;release notes&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/modelcontextprotocol/go-sdk" alt="PkgGoDev"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains an unreleased implementation of the official Go software development kit (SDK) for the Model Context Protocol (MCP).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The SDK should be considered unreleased, and is currently unstable and subject to breaking changes. Please test it out and file bug reports or API proposals, but don't use it in real projects. See the issue tracker for known issues and missing features. We aim to release a stable version of the SDK in August, 2025.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Design&lt;/h2&gt; 
&lt;p&gt;The design doc for this SDK is at &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/design/design.md"&gt;design.md&lt;/a&gt;, which was initially reviewed at &lt;a href="https://github.com/orgs/modelcontextprotocol/discussions/364"&gt;modelcontextprotocol/discussions/364&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Further design discussion should occur in &lt;a href="https://github.com/modelcontextprotocol/go-sdk/issues"&gt;issues&lt;/a&gt; (for concrete proposals) or &lt;a href="https://github.com/modelcontextprotocol/go-sdk/discussions"&gt;discussions&lt;/a&gt; for open-ended discussion. See &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h2&gt;Package documentation&lt;/h2&gt; 
&lt;p&gt;The SDK consists of three importable packages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/mcp"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/mcp&lt;/code&gt;&lt;/a&gt; package defines the primary APIs for constructing and using MCP clients and servers.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/jsonschema"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/jsonschema&lt;/code&gt;&lt;/a&gt; package provides an implementation of &lt;a href="https://json-schema.org/"&gt;JSON Schema&lt;/a&gt;, used for MCP tool input and output schema.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://pkg.go.dev/github.com/modelcontextprotocol/go-sdk/jsonrpc"&gt;&lt;code&gt;github.com/modelcontextprotocol/go-sdk/jsonrpc&lt;/code&gt;&lt;/a&gt; package is for users implementing their own transports.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example&lt;/h2&gt; 
&lt;p&gt;In this example, an MCP client communicates with an MCP server running in a sidecar process:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"
	"os/exec"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

func main() {
	ctx := context.Background()

	// Create a new client, with no features.
	client := mcp.NewClient(&amp;amp;mcp.Implementation{Name: "mcp-client", Version: "v1.0.0"}, nil)

	// Connect to a server over stdin/stdout
	transport := mcp.NewCommandTransport(exec.Command("myserver"))
	session, err := client.Connect(ctx, transport)
	if err != nil {
		log.Fatal(err)
	}
	defer session.Close()

	// Call a tool on the server.
	params := &amp;amp;mcp.CallToolParams{
		Name:      "greet",
		Arguments: map[string]any{"name": "you"},
	}
	res, err := session.CallTool(ctx, params)
	if err != nil {
		log.Fatalf("CallTool failed: %v", err)
	}
	if res.IsError {
		log.Fatal("tool failed")
	}
	for _, c := range res.Content {
		log.Print(c.(*mcp.TextContent).Text)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here's an example of the corresponding server component, which communicates with its client over stdin/stdout:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
	"context"
	"log"

	"github.com/modelcontextprotocol/go-sdk/mcp"
)

type HiParams struct {
	Name string `json:"name" jsonschema:"the name of the person to greet"`
}

func SayHi(ctx context.Context, cc *mcp.ServerSession, params *mcp.CallToolParamsFor[HiParams]) (*mcp.CallToolResultFor[any], error) {
	return &amp;amp;mcp.CallToolResultFor[any]{
		Content: []mcp.Content{&amp;amp;mcp.TextContent{Text: "Hi " + params.Arguments.Name}},
	}, nil
}

func main() {
	// Create a server with a single tool.
	server := mcp.NewServer(&amp;amp;mcp.Implementation{Name: "greeter", Version: "v1.0.0"}, nil)

	mcp.AddTool(server, &amp;amp;mcp.Tool{Name: "greet", Description: "say hi"}, SayHi)
	// Run the server over stdin/stdout, until the client disconnects
	if err := server.Run(context.Background(), mcp.NewStdioTransport()); err != nil {
		log.Fatal(err)
	}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/examples/"&gt;&lt;code&gt;examples/&lt;/code&gt;&lt;/a&gt; directory contains more example clients and servers.&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Several existing Go MCP SDKs inspired the development and design of this official SDK, notably &lt;a href="https://github.com/mark3labs/mcp-go"&gt;mcp-go&lt;/a&gt;, authored by Ed Zynda. We are grateful to Ed as well as the other contributors to mcp-go, and to authors and contributors of other SDKs such as &lt;a href="https://github.com/metoro-io/mcp-golang"&gt;mcp-golang&lt;/a&gt; and &lt;a href="https://github.com/ThinkInAIXYZ/go-mcp"&gt;go-mcp&lt;/a&gt;. Thanks to their work, there is a thriving ecosystem of Go MCP clients and servers.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the MIT License - see the &lt;a href="https://raw.githubusercontent.com/modelcontextprotocol/go-sdk/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for details.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>projectdiscovery/httpx</title>
      <link>https://github.com/projectdiscovery/httpx</link>
      <description>&lt;p&gt;httpx is a fast and multi-purpose HTTP toolkit that allows running multiple probes using the retryablehttp library.&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://raw.githubusercontent.com/projectdiscovery/httpx/dev/static/httpx-logo.png" alt="httpx" width="200px"&gt; &lt;br&gt; &lt;/h1&gt; 
&lt;p align="center"&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-_red.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/badge/github.com/projectdiscovery/httpx"&gt;&lt;img src="https://goreportcard.com/badge/github.com/projectdiscovery/httpx"&gt;&lt;/a&gt; &lt;a href="https://github.com/projectdiscovery/httpx/releases"&gt;&lt;img src="https://img.shields.io/github/release/projectdiscovery/httpx"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/projectdiscovery/httpx"&gt;&lt;img src="https://img.shields.io/docker/pulls/projectdiscovery/httpx.svg?sanitize=true"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/pdiscoveryio"&gt;&lt;img src="https://img.shields.io/twitter/follow/pdiscoveryio.svg?logo=twitter"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/projectdiscovery"&gt;&lt;img src="https://img.shields.io/discord/695645237418131507.svg?logo=discord"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/projectdiscovery/httpx/dev/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/projectdiscovery/httpx/dev/#installation-instructions"&gt;Installation&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/projectdiscovery/httpx/dev/#usage"&gt;Usage&lt;/a&gt; • &lt;a href="https://docs.projectdiscovery.io/tools/httpx/"&gt;Documentation&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/projectdiscovery/httpx/dev/#notes"&gt;Notes&lt;/a&gt; • &lt;a href="https://discord.gg/projectdiscovery"&gt;Join Discord&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;code&gt;httpx&lt;/code&gt; is a fast and multi-purpose HTTP toolkit that allows running multiple probes using the &lt;a href="https://github.com/projectdiscovery/retryablehttp-go"&gt;retryablehttp&lt;/a&gt; library. It is designed to maintain result reliability with an increased number of threads.&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;h1 align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/8293321/135731750-4c1d38b1-bd2a-40f9-88e9-3c4b9f6da378.png" alt="httpx" width="700px"&gt; &lt;br&gt; &lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple and modular code base making it easy to contribute.&lt;/li&gt; 
 &lt;li&gt;Fast And fully configurable flags to probe multiple elements.&lt;/li&gt; 
 &lt;li&gt;Supports multiple HTTP based probings.&lt;/li&gt; 
 &lt;li&gt;Smart auto fallback from https to http as default.&lt;/li&gt; 
 &lt;li&gt;Supports hosts, URLs and CIDR as input.&lt;/li&gt; 
 &lt;li&gt;Handles edge cases doing retries, backoffs etc for handling WAFs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported probes&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Probes&lt;/th&gt; 
   &lt;th&gt;Default check&lt;/th&gt; 
   &lt;th&gt;Probes&lt;/th&gt; 
   &lt;th&gt;Default check&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;URL&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;IP&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Title&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;CNAME&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Status Code&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Raw HTTP&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Content Length&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;HTTP2&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TLS Certificate&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;HTTP Pipeline&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CSP Header&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Virtual host&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Line Count&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Word Count&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Location Header&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;CDN&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Web Server&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Paths&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Web Socket&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Ports&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Response Time&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Request Method&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Favicon Hash&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;Probe Status&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Body Hash&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
   &lt;td&gt;Header Hash&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Redirect chain&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;URL Scheme&lt;/td&gt; 
   &lt;td&gt;true&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;JARM Hash&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
   &lt;td&gt;ASN&lt;/td&gt; 
   &lt;td&gt;false&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Installation Instructions&lt;/h1&gt; 
&lt;p&gt;&lt;code&gt;httpx&lt;/code&gt; requires &lt;strong&gt;go1.21&lt;/strong&gt; to install successfully. Run the following command to get the repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To learn more about installing httpx, see &lt;a href="https://docs.projectdiscovery.io/tools/httpx/install"&gt;https://docs.projectdiscovery.io/tools/httpx/install&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;span&gt;❗&lt;/span&gt; &lt;strong&gt;Disclaimer&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;This project is in active development&lt;/strong&gt;. Expect breaking changes with releases. Review the changelog before updating.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;This project was primarily built to be used as a standalone CLI tool. &lt;strong&gt;Running it as a service may pose security risks.&lt;/strong&gt; It's recommended to use with caution and additional security measures.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h1&gt;Usage&lt;/h1&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;httpx -h
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will display help for the tool. Here are all the switches it supports.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;Usage:
  ./httpx [flags]

Flags:
httpx is a fast and multi-purpose HTTP toolkit that allows running multiple probes using the retryablehttp library.

Usage:
  ./httpx [flags]

Flags:
INPUT:
   -l, -list string      input file containing list of hosts to process
   -rr, -request string  file containing raw request
   -u, -target string[]  input target host(s) to probe

PROBES:
   -sc, -status-code      display response status-code
   -cl, -content-length   display response content-length
   -ct, -content-type     display response content-type
   -location              display response redirect location
   -favicon               display mmh3 hash for '/favicon.ico' file
   -hash string           display response body hash (supported: md5,mmh3,simhash,sha1,sha256,sha512)
   -jarm                  display jarm fingerprint hash
   -rt, -response-time    display response time
   -lc, -line-count       display response body line count
   -wc, -word-count       display response body word count
   -title                 display page title
   -bp, -body-preview     display first N characters of response body (default 100)
   -server, -web-server   display server name
   -td, -tech-detect      display technology in use based on wappalyzer dataset
   -method                display http request method
   -websocket             display server using websocket
   -ip                    display host ip
   -cname                 display host cname
   -extract-fqdn, -efqdn  get domain and subdomains from response body and header in jsonl/csv output
   -asn                   display host asn information
   -cdn                   display cdn/waf in use (default true)
   -probe                 display probe status

HEADLESS:
   -ss, -screenshot                 enable saving screenshot of the page using headless browser
   -system-chrome                   enable using local installed chrome for screenshot
   -ho, -headless-options string[]  start headless chrome with additional options
   -esb, -exclude-screenshot-bytes  enable excluding screenshot bytes from json output
   -no-screenshot-full-page         disable saving full page screenshot
   -ehb, -exclude-headless-body     enable excluding headless header from json output
   -st, -screenshot-timeout value   set timeout for screenshot in seconds (default 10s)
   -sid, -screenshot-idle value     set idle time before taking screenshot in seconds (default 1s)

MATCHERS:
   -mc, -match-code string            match response with specified status code (-mc 200,302)
   -ml, -match-length string          match response with specified content length (-ml 100,102)
   -mlc, -match-line-count string     match response body with specified line count (-mlc 423,532)
   -mwc, -match-word-count string     match response body with specified word count (-mwc 43,55)
   -mfc, -match-favicon string[]      match response with specified favicon hash (-mfc 1494302000)
   -ms, -match-string string[]        match response with specified string (-ms admin)
   -mr, -match-regex string[]         match response with specified regex (-mr admin)
   -mcdn, -match-cdn string[]         match host with specified cdn provider (cloudfront, fastly, google)
   -mrt, -match-response-time string  match response with specified response time in seconds (-mrt '&amp;lt; 1')
   -mdc, -match-condition string      match response with dsl expression condition

EXTRACTOR:
   -er, -extract-regex string[]   display response content with matched regex
   -ep, -extract-preset string[]  display response content matched by a pre-defined regex (url,ipv4,mail)

FILTERS:
   -fc, -filter-code string            filter response with specified status code (-fc 403,401)
   -fep, -filter-error-page            filter response with ML based error page detection
   -fd, -filter-duplicates             filter out near-duplicate responses (only first response is retained)
   -fl, -filter-length string          filter response with specified content length (-fl 23,33)
   -flc, -filter-line-count string     filter response body with specified line count (-flc 423,532)
   -fwc, -filter-word-count string     filter response body with specified word count (-fwc 423,532)
   -ffc, -filter-favicon string[]      filter response with specified favicon hash (-ffc 1494302000)
   -fs, -filter-string string[]        filter response with specified string (-fs admin)
   -fe, -filter-regex string[]         filter response with specified regex (-fe admin)
   -fcdn, -filter-cdn string[]         filter host with specified cdn provider (cloudfront, fastly, google)
   -frt, -filter-response-time string  filter response with specified response time in seconds (-frt '&amp;gt; 1')
   -fdc, -filter-condition string      filter response with dsl expression condition
   -strip                              strips all tags in response. supported formats: html,xml (default html)

RATE-LIMIT:
   -t, -threads int              number of threads to use (default 50)
   -rl, -rate-limit int          maximum requests to send per second (default 150)
   -rlm, -rate-limit-minute int  maximum number of requests to send per minute

MISCELLANEOUS:
   -pa, -probe-all-ips        probe all the ips associated with same host
   -p, -ports string[]        ports to probe (nmap syntax: eg http:1,2-10,11,https:80)
   -path string               path or list of paths to probe (comma-separated, file)
   -tls-probe                 send http probes on the extracted TLS domains (dns_name)
   -csp-probe                 send http probes on the extracted CSP domains
   -tls-grab                  perform TLS(SSL) data grabbing
   -pipeline                  probe and display server supporting HTTP1.1 pipeline
   -http2                     probe and display server supporting HTTP2
   -vhost                     probe and display server supporting VHOST
   -ldv, -list-dsl-variables  list json output field keys name that support dsl matcher/filter

UPDATE:
   -up, -update                 update httpx to latest version
   -duc, -disable-update-check  disable automatic httpx update check

OUTPUT:
   -o, -output string                     file to write output results
   -oa, -output-all                       filename to write output results in all formats
   -sr, -store-response                   store http response to output directory
   -srd, -store-response-dir string       store http response to custom directory
   -ob, -omit-body                        omit response body in output
   -csv                                   store output in csv format
   -csvo, -csv-output-encoding string     define output encoding
   -j, -json                              store output in JSONL(ines) format
   -irh, -include-response-header         include http response (headers) in JSON output (-json only)
   -irr, -include-response                include http request/response (headers + body) in JSON output (-json only)
   -irrb, -include-response-base64        include base64 encoded http request/response in JSON output (-json only)
   -include-chain                         include redirect http chain in JSON output (-json only)
   -store-chain                           include http redirect chain in responses (-sr only)
   -svrc, -store-vision-recon-cluster     include visual recon clusters (-ss and -sr only)
   -pr, -protocol string                  protocol to use (unknown, http11)
   -fepp, -filter-error-page-path string  path to store filtered error pages (default "filtered_error_page.json")

CONFIGURATIONS:
   -config string                   path to the httpx configuration file (default $HOME/.config/httpx/config.yaml)
   -r, -resolvers string[]          list of custom resolver (file or comma separated)
   -allow string[]                  allowed list of IP/CIDR's to process (file or comma separated)
   -deny string[]                   denied list of IP/CIDR's to process (file or comma separated)
   -sni, -sni-name string           custom TLS SNI name
   -random-agent                    enable Random User-Agent to use (default true)
   -H, -header string[]             custom http headers to send with request
   -http-proxy, -proxy string       http proxy to use (eg http://127.0.0.1:8080)
   -unsafe                          send raw requests skipping golang normalization
   -resume                          resume scan using resume.cfg
   -fr, -follow-redirects           follow http redirects
   -maxr, -max-redirects int        max number of redirects to follow per host (default 10)
   -fhr, -follow-host-redirects     follow redirects on the same host
   -rhsts, -respect-hsts            respect HSTS response headers for redirect requests
   -vhost-input                     get a list of vhosts as input
   -x string                        request methods to probe, use 'all' to probe all HTTP methods
   -body string                     post body to include in http request
   -s, -stream                      stream mode - start elaborating input targets without sorting
   -sd, -skip-dedupe                disable dedupe input items (only used with stream mode)
   -ldp, -leave-default-ports       leave default http/https ports in host header (eg. http://host:80 - https://host:443
   -ztls                            use ztls library with autofallback to standard one for tls13
   -no-decode                       avoid decoding body
   -tlsi, -tls-impersonate          enable experimental client hello (ja3) tls randomization
   -no-stdin                        Disable Stdin processing
   -hae, -http-api-endpoint string  experimental http api endpoint

DEBUG:
   -health-check, -hc        run diagnostic check up
   -debug                    display request/response content in cli
   -debug-req                display request content in cli
   -debug-resp               display response content in cli
   -version                  display httpx version
   -stats                    display scan statistic
   -profile-mem string       optional httpx memory profile dump file
   -silent                   silent mode
   -v, -verbose              verbose mode
   -si, -stats-interval int  number of seconds to wait between showing a statistics update (default: 5)
   -nc, -no-color            disable colors in cli output
   -tr, -trace               trace

OPTIMIZATIONS:
   -nf, -no-fallback                  display both probed protocol (HTTPS and HTTP)
   -nfs, -no-fallback-scheme          probe with protocol scheme specified in input 
   -maxhr, -max-host-error int        max error count per host before skipping remaining path/s (default 30)
   -e, -exclude string[]              exclude host matching specified filter ('cdn', 'private-ips', cidr, ip, regex)
   -retries int                       number of retries
   -timeout int                       timeout in seconds (default 10)
   -delay value                       duration between each http request (eg: 200ms, 1s) (default -1ns)
   -rsts, -response-size-to-save int  max response size to save in bytes (default 2147483647)
   -rstr, -response-size-to-read int  max response size to read in bytes (default 2147483647)

CLOUD:
   -auth                           configure projectdiscovery cloud (pdcp) api key (default true)
   -ac, -auth-config string        configure projectdiscovery cloud (pdcp) api key credential file
   -pd, -dashboard                 upload / view output in projectdiscovery cloud (pdcp) UI dashboard
   -tid, -team-id string           upload asset results to given team id (optional)
   -aid, -asset-id string          upload new assets to existing asset id (optional)
   -aname, -asset-name string      assets group name to set (optional)
   -pdu, -dashboard-upload string  upload httpx output file (jsonl) in projectdiscovery cloud (pdcp) UI dashboard
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Running httpx&lt;/h1&gt; 
&lt;p&gt;For details about running httpx, see &lt;a href="https://docs.projectdiscovery.io/tools/httpx/running"&gt;https://docs.projectdiscovery.io/tools/httpx/running&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using &lt;code&gt;httpx&lt;/code&gt; as a library&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;httpx&lt;/code&gt; can be used as a library by creating an instance of the &lt;code&gt;Option&lt;/code&gt; struct and populating it with the same options that would be specified via CLI. Once validated, the struct should be passed to a runner instance (to be closed at the end of the program) and the &lt;code&gt;RunEnumeration&lt;/code&gt; method should be called. A minimal example of how to do it is in the &lt;a href="https://raw.githubusercontent.com/projectdiscovery/httpx/dev/examples/"&gt;examples&lt;/a&gt; folder&lt;/p&gt; 
&lt;h1&gt;Notes&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;As default, &lt;code&gt;httpx&lt;/code&gt; probe with &lt;strong&gt;HTTPS&lt;/strong&gt; scheme and fall-back to &lt;strong&gt;HTTP&lt;/strong&gt; only if &lt;strong&gt;HTTPS&lt;/strong&gt; is not reachable.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;-no-fallback&lt;/code&gt; flag can be used to probe and display both &lt;strong&gt;HTTP&lt;/strong&gt; and &lt;strong&gt;HTTPS&lt;/strong&gt; result.&lt;/li&gt; 
 &lt;li&gt;Custom scheme for ports can be defined, for example &lt;code&gt;-ports http:443,http:80,https:8443&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Custom resolver supports multiple protocol (&lt;strong&gt;doh|tcp|udp&lt;/strong&gt;) in form of &lt;code&gt;protocol:resolver:port&lt;/code&gt; (e.g. &lt;code&gt;udp:127.0.0.1:53&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;The following flags should be used for specific use cases instead of running them as default with other probes: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;-ports&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-path&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-vhost&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-screenshot&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-csp-probe&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-tls-probe&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-favicon&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-http2&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-pipeline&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;-tls-impersonate&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Acknowledgement&lt;/h1&gt; 
&lt;p&gt;Probing feature is inspired by &lt;a href="https://github.com/tomnomnom/httprobe"&gt;@tomnomnom/httprobe&lt;/a&gt; work ❤️&lt;/p&gt; 
&lt;hr&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;code&gt;httpx&lt;/code&gt; is made with 💙 by the &lt;a href="https://projectdiscovery.io"&gt;projectdiscovery&lt;/a&gt; team and distributed under &lt;a href="https://raw.githubusercontent.com/projectdiscovery/httpx/dev/LICENSE.md"&gt;MIT License&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://discord.gg/projectdiscovery"&gt;&lt;img src="https://raw.githubusercontent.com/projectdiscovery/nuclei-burp-plugin/main/static/join-discord.png" width="300" alt="Join Discord"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>donknap/dpanel</title>
      <link>https://github.com/donknap/dpanel</link>
      <description>&lt;p&gt;轻量化 docker 可视化管理面板。lightweight panel for docker&lt;/p&gt;&lt;hr&gt;&lt;h1 align="center"&gt; &lt;img src="https://cdn.w7.cc/dpanel/dpanel-logo.png" alt="DPanel" width="500"&gt; &lt;/h1&gt; 
&lt;h4 align="center"&gt; Docker 可视化面板系统，提供完善的 docker 管理功能。 &lt;/h4&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/donknap/dpanel"&gt;&lt;img src="https://img.shields.io/github/stars/donknap/dpanel.svg?sanitize=true" alt="GitHub stars"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/donknap/dpanel/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/donknap/dpanel" alt="GitHub latest release"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/donknap/dpanel/commits/master/"&gt;&lt;img src="https://img.shields.io/github/last-commit/donknap/dpanel.svg?sanitize=true" alt="GitHub latest commit"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://github.com/donknap/dpanel/actions"&gt;&lt;img src="https://github.com/donknap/dpanel/actions/workflows/release.yml/badge.svg?sanitize=true" alt="Build Status"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://hub.docker.com/r/dpanel/dpanel/tags"&gt;&lt;img src="https://img.shields.io/docker/pulls/dpanel/dpanel" alt="Docker Pulls"&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://hellogithub.com/repository/c69089b776704985b989f98626de977a" target="_blank"&gt;&lt;img src="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=c69089b776704985b989f98626de977a&amp;amp;claim_uid=ekhLfDOxR5U0mVw&amp;amp;theme=small" alt="Featured｜HelloGitHub"&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/donknap/dpanel/master/README.md"&gt;&lt;img alt="中文(简体)" src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87(%E7%AE%80%E4%BD%93)-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/donknap/dpanel/master/docs/README_EN.md"&gt;&lt;img alt="English" src="https://img.shields.io/badge/English-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/donknap/dpanel/master/docs/README_JA.md"&gt;&lt;img alt="日本語" src="https://img.shields.io/badge/%E6%97%A5%E6%9C%AC%E8%AA%9E-d9d9d9"&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;hr&gt; 
 &lt;p&gt;&lt;a href="https://dpanel.cc/"&gt;&lt;strong&gt;官网&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://dpanel.park1991.com"&gt;&lt;strong&gt;演示&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://dpanel.cc/#/zh-cn/install/docker"&gt;&lt;strong&gt;文档&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://dpanel.cc/#/zh-cn/manual/pro"&gt;&lt;strong&gt;Pro版&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://qm.qq.com/q/2v4x9x8q4k"&gt;&lt;strong&gt;交流群&lt;/strong&gt;&lt;/a&gt; &amp;nbsp; | &amp;nbsp; &lt;a href="https://afdian.com/a/dpanel"&gt;&lt;strong&gt;赞助&lt;/strong&gt;&lt;/a&gt; &amp;nbsp;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h3&gt;Pro 版&lt;/h3&gt; 
&lt;p&gt;Pro 版仅是社区版的一个增强和补充，对于通用的、广泛的功能需求不会收录到 Pro 版中。 针对社区版中的部分功能进行强化、升级或是一些极其个性化的需求功能。&lt;/p&gt; 
&lt;p&gt;感谢大家的支持与厚爱，希望 DPanel 可以小小的为 Docker 中文圈带来一些惊喜。&lt;/p&gt; 
&lt;p&gt;🚀🚀🚀 &lt;a href="http://dpanel.cc/#/zh-cn/manual/pro?id=%e4%bb%b7%e6%a0%bc%e5%8f%8a%e5%8a%9f%e8%83%bd"&gt;功能介绍及对比&lt;/a&gt; 🚀🚀🚀&lt;/p&gt; 
&lt;h3&gt;开始使用&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br&gt; macos 下需要先将 docker.sock 文件 link 到 /var/run/docker.sock 目录中 &lt;br&gt; sudo ln -s -f /Users/用户/.docker/run/docker.sock /var/run/docker.sock&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;国内镜像 &lt;br&gt; registry.cn-hangzhou.aliyuncs.com/dpanel/dpanel:latest &lt;br&gt; registry.cn-hangzhou.aliyuncs.com/dpanel/dpanel:lite&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;标准版&lt;/h4&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d --name dpanel --restart=always \
 -p 80:80 -p 443:443 -p 8807:8080 -e APP_NAME=dpanel \
 -v /var/run/docker.sock:/var/run/docker.sock -v dpanel:/dpanel \
 dpanel/dpanel:latest 
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;lite 版&lt;/h4&gt; 
&lt;p&gt;lite 版去掉了域名转发相关，需要自行转发域名绑定容器，不需要绑定 80 及 443 端口&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;docker run -d --name dpanel --restart=always \
 -p 8807:8080 -e APP_NAME=dpanel \
 -v /var/run/docker.sock:/var/run/docker.sock -v dpanel:/dpanel \
 dpanel/dpanel:lite
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;集成脚本&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;支持 Debian Ubuntu Alpine，其它发行版未进行测试，请提交 Issue&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code&gt;curl -sSL https://dpanel.cc/quick.sh -o quick.sh &amp;amp;&amp;amp; sudo bash quick.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;为爱发电&lt;/h4&gt; 
&lt;p&gt;如果此项目对你所有帮助，并希望我继续下去，请考虑赞助我为爱发电！感谢所有的爱和支持。&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://afdian.com/a/dpanel"&gt;https://afdian.com/a/dpanel&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;交流群&lt;/h4&gt; 
&lt;p&gt;QQ: 837583876&lt;/p&gt; 
&lt;img src="https://github.com/donknap/dpanel-docs/raw/master/storage/image/qq.png?raw=true" width="300"&gt; 
&lt;h4&gt;赞助&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;h5&gt;本项目 CDN 加速及安全防护由 Tencent EdgeOne 赞助&lt;/h5&gt; &lt;img width="200" src="https://edgeone.ai/media/34fe3a45-492d-4ea4-ae5d-ea1087ca7b4b.png"&gt; &lt;p&gt;&lt;a href="https://edgeone.ai/zh?from=github"&gt;亚洲最佳CDN、边缘和安全解决方案 - Tencent EdgeOne&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;感谢贡献人员&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/donknap/dpanel/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=donknap/dpanel" alt="Contributors"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;界面预览&lt;/h4&gt; 
&lt;h6&gt;pro 自定义皮肤&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://cdn.w7.cc/dpanel/pro-1.png" alt="pro-1"&gt;&lt;/p&gt; 
&lt;h6&gt;概览&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/home.png" alt="home.png"&gt;&lt;/p&gt; 
&lt;h6&gt;容器管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/app-list.png" alt="app-list.png"&gt;&lt;/p&gt; 
&lt;h6&gt;文件管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/app-file.png" alt="app-file.png"&gt;&lt;/p&gt; 
&lt;h6&gt;镜像管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/image-list.png" alt="image-list.png"&gt;&lt;/p&gt; 
&lt;h6&gt;创建镜像&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/image-create.png" alt="image-create.png"&gt;&lt;/p&gt; 
&lt;h6&gt;创建Compose&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/compose-create.png" alt="compose-create.png"&gt;&lt;/p&gt; 
&lt;h6&gt;部署Compose&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/compose-deploy.png" alt="compose-deploy.png"&gt;&lt;/p&gt; 
&lt;h6&gt;系统管理&lt;/h6&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/donknap/dpanel-docs/master/storage/image/system-basic.png" alt="system-basic.png"&gt;&lt;/p&gt; 
&lt;h4&gt;相关仓库&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;镜像构建基础模板 &lt;a href="https://github.com/donknap/dpanel-base-image"&gt;https://github.com/donknap/dpanel-base-image&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;文档 &lt;a href="https://github.com/donknap/dpanel-docs"&gt;https://github.com/donknap/dpanel-docs&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;相关组件&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Rangine 开发框架 &lt;a href="https://github.com/we7coreteam/w7-rangine-go-skeleton"&gt;https://github.com/we7coreteam/w7-rangine-go-skeleton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Docker Sdk &lt;a href="https://github.com/docker/docker"&gt;https://github.com/docker/docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;React &amp;amp; UmiJs&lt;/li&gt; 
 &lt;li&gt;Ant Design &amp;amp; Ant Design Pro &amp;amp; Ant Design Charts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Star History&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#donknap/dpanel&amp;amp;Timeline"&gt;&lt;img src="https://api.star-history.com/svg?repos=donknap/dpanel&amp;amp;type=Timeline" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>evcc-io/evcc</title>
      <link>https://github.com/evcc-io/evcc</link>
      <description>&lt;p&gt;solar charging ☀️🚘&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;evcc 🚘☀️&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml"&gt;&lt;img src="https://github.com/evcc-io/evcc/actions/workflows/nightly.yml/badge.svg?sanitize=true" alt="Build"&gt;&lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/svg-badge.svg?sanitize=true" alt="Translation"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/evcc/evcc" alt="Docker Pulls"&gt; &lt;a href="https://cloudsmith.io/~evcc/packages/"&gt;&lt;img src="https://img.shields.io/badge/OSS%20hosting%20by-cloudsmith-blue?logo=cloudsmith" alt="OSS hosting by cloudsmith"&gt;&lt;/a&gt; &lt;a href="https://github.com/evcc-io/evcc/releases"&gt;&lt;img src="https://img.shields.io/github/release/evcc-io/evcc.svg?sanitize=true" alt="Latest Version"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://depot.dev/?utm_source=evcc"&gt;&lt;img src="https://depot.dev/badges/built-with-depot.svg?sanitize=true" alt="Built with Depot"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;evcc is an extensible EV Charge Controller and home energy management system.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/screenshot.webp" alt="Screenshot"&gt;&lt;/p&gt; 
&lt;p&gt;Our goal is to provide local energy management, without relying on cloud services. Featured in &lt;a href="https://www.pv-magazine.de/2022/01/14/mit-open-source-lademanager-schnittstellen-zu-wallbox-und-photovoltaik-anlage-meistern/"&gt;PV Magazine&lt;/a&gt; and &lt;a href="https://www.youtube.com/watch?v=MoBpEXHMNjI"&gt;c’t Magazin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;simple and clean user interface&lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;EV chargers&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;ABB, ABL, Alfen, Alphatec, Amperfied, Ampure, Audi, AUTEL, Autoaid, Bender, BMW, cFos, Charge Amps, Compleo, CUBOS, Cupra, Dadapower, DaheimLaden, Delta, E.ON Drive, E3/DC, Easee, Ebee, echarge, EcoHarmony, Edgetech, Elecq, eledio, Elli, EM2GO, EN+, enercab, Ensto, EntraTek, ESL, eSystems, Etrel, EVBox, Free2Move, Free2move eSolutions, Fronius, Garo, go-e, Hardy Barth, Heidelberg, Hesotec, Homecharge, Huawei, Innogy, INRO, Juice, Kathrein, KEBA, Kontron Solar, Kostal, KSE, LadeFoxx, LRT, Mennekes, NRGkick, OBO Bettermann, OpenEVSE, openWB, Optec, Orbis, PC Electric, Peblar, Phoenix Contact, Plugchoice, Porsche, Pracht, Pulsares, Pulsatrix, Qcells, Schneider, Schrack, SENEC, Siemens, Skoda, SMA, Smartfox, SolarEdge, Solax, Sonnen, Spelsberg, Stark in Strom, Sungrow, TechniSat, Tesla, Tigo, TinkerForge, Ubitricity, V2C Trydan, Vestel, Victron, Viridian EV, Volkswagen, Volt Time, Wallbe, wallbox, Walther Werke, Webasto, Weidmüller, Zaptec, ZJ Beny. &lt;a href="https://docs.evcc.io/en/docs/devices/chargers"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;EEBus&lt;/strong&gt; support (Elli, PMCC)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;OCPP&lt;/strong&gt; support&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;build-your-own:&lt;/strong&gt; Phoenix Contact (includes ESL Walli), EVSE DIN&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;smart switches:&lt;/strong&gt; AVM, Home Assistant, Homematic IP, HomeWizard, myStrom, Shelly, Tasmota, TP-Link. &lt;a href="https://docs.evcc.io/en/docs/devices/smartswitches"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;heat pumps and electric heaters:&lt;/strong&gt; alpha innotec, Bosch, Buderus, Bösch, CTA All-In-One, Daikin, Elco, IDM, Junkers, Kermi, Lambda, my-PV, Nibe, Novelan, Roth, Stiebel Eltron, Tecalor, Vaillant, Viessmann, Wolf, Zewotherm. &lt;a href="https://docs.evcc.io/en/docs/devices/heating"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;support for many &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;energy meters&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;solar inverters and battery systems:&lt;/strong&gt; A-Tronix, Acrel, Ads-tec, Alpha ESS, Ampere, Anker, APsystems, AVM, Axitec, BGEtech, Bosch, Bosswerk, Carlo Gavazzi, Deye, E3/DC, Eastron, Enphase, FENECON, FoxESS, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Hoymiles, Huawei, IAMMETER, IGEN Tech, Kostal, LG, Loxone, M-TEC, Marstek, myStrom, OpenEMS, Powerfox, Qcells, RCT, SAJ, SAX, SENEC, Senergy, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Steca, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, TP-Link, VARTA, Victron, Wattsonic, Youless, ZCS Azzurro, Zendure. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;general energy meters:&lt;/strong&gt; A-Tronix, ABB, Acrel, Alpha ESS, Ampere, AVM, Axitec, Bernecker Engineering, BGEtech, Bosch, Carlo Gavazzi, cFos, Deye, DSMR, DZG, E3/DC, Eastron, Enphase, ESPHome, FENECON, FoxESS, Fronius, Ginlong, go-e, GoodWe, Growatt, Homematic IP, HomeWizard, Huawei, IAMMETER, inepro, IOmeter, Janitza, KEBA, Kostal, LG, Loxone, M-TEC, mhendriks, my-PV, myStrom, OpenEMS, ORNO, P1Monitor, Powerfox, Qcells, RCT, Saia-Burgess Controls (SBC), SAJ, SAX, Schneider Electric, SENEC, Shelly, Siemens, Sigenergy, SMA, Smartfox, SofarSolar, Solaranzeige, SolarEdge, SolarMax, Solarwatt, Solax, Solinteng, Sonnen, St-ems, Sungrow, Sunsynk, Sunway, Tasmota, Tesla, Tibber, TQ, VARTA, Victron, Volkszähler, Wago, Wattsonic, Weidmüller, Youless, ZCS Azzurro, Zuidwijk. &lt;a href="https://docs.evcc.io/en/docs/devices/meters"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;integrated systems&lt;/strong&gt;: SMA Sunny Home Manager and Energy Meter, KOSTAL Smart Energy Meter (KSEM, EMxx)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;sunspec&lt;/strong&gt;-compatible inverter or home battery devices&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;mbmd&lt;/strong&gt;-compatible devices, see &lt;a href="https://github.com/volkszaehler/mbmd#supported-devices"&gt;volkszaehler/mbmd&lt;/a&gt; for a complete list&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;vehicle&lt;/a&gt; integrations (state of charge, remote charge, battery and preconditioning status): 
  &lt;ul&gt; 
   &lt;li&gt;Aiways, Audi, BMW, Citroën, Dacia, DS, Fiat, Ford, Hyundai, Jeep, Kia, Mercedes-Benz, MG, Mini, Nissan, NIU, Opel, Peugeot, Polestar, Renault, Seat, Skoda, Smart, Tesla, Toyota, Volkswagen, Volvo, Zero Motorcycles. &lt;a href="https://docs.evcc.io/en/docs/devices/vehicles"&gt;Read more.&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;services:&lt;/strong&gt; OVMS, Tronity, evNotify, ioBroker.bmw, mg2mqtt, mz2mqtt, TeslaLogger, TeslaMate, Tessi, volvo2mqtt&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/devices/plugins"&gt;plugins&lt;/a&gt; for integrating with any charger, smartswitch, heatpump, electric heater, meter, solar- / battery-inverter or vehicle: 
  &lt;ul&gt; 
   &lt;li&gt;Modbus, HTTP, MQTT, JavaScript, WebSocket, Go and shell scripts&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;status &lt;a href="https://docs.evcc.io/en/docs/reference/configuration/messaging"&gt;notifications&lt;/a&gt; using &lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt;, &lt;a href="https://pushover.net"&gt;PushOver&lt;/a&gt; and &lt;a href="https://containrrr.dev/shoutrrr/"&gt;many more&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;logging using &lt;a href="https://www.influxdata.com"&gt;InfluxDB&lt;/a&gt; and &lt;a href="https://grafana.com/grafana/"&gt;Grafana&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.evcc.io/en/docs/integrations/rest-api"&gt;REST&lt;/a&gt; and &lt;a href="https://docs.evcc.io/en/docs/integrations/mqtt-api"&gt;MQTT&lt;/a&gt; APIs for integration with home automation systems&lt;/li&gt; 
 &lt;li&gt;Add-ons for &lt;a href="https://docs.evcc.io/en/docs/integrations/home-assistant"&gt;Home Assistant&lt;/a&gt; and &lt;a href="https://www.openhab.org/addons/bindings/evcc"&gt;OpenHAB&lt;/a&gt; (not maintained by the evcc core team)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You'll find everything you need in our &lt;a href="https://docs.evcc.io/en/"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Technical details on how to contribute, how to add translations and how to build evcc from source can be found &lt;a href="https://raw.githubusercontent.com/evcc-io/evcc/master/CONTRIBUTING.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/evcc/"&gt;&lt;img src="https://hosted.weblate.org/widgets/evcc/-/evcc/287x66-grey.png" alt="Weblate Hosted"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsorship&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/evcc-io/evcc/master/assets/github/evcc-gopher.png" align="right" width="150"&gt; 
&lt;p&gt;evcc believes in open source software. We're committed to provide best in class EV charging experience. Maintaining evcc consumes time and effort. With the vast amount of different devices to support, we depend on community and vendor support to keep evcc alive.&lt;/p&gt; 
&lt;p&gt;While evcc is open source, we would also like to encourage vendors to provide open source hardware devices, public documentation and support open source projects like ours that provide additional value to otherwise closed hardware. Where this is not the case, evcc requires "sponsor token" to finance ongoing development and support of evcc.&lt;/p&gt; 
&lt;p&gt;Learn more about our &lt;a href="https://docs.evcc.io/en/docs/sponsorship"&gt;sponsorship model&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>AdguardTeam/AdGuardHome</title>
      <link>https://github.com/AdguardTeam/AdGuardHome</link>
      <description>&lt;p&gt;Network-wide ads &amp; trackers blocking DNS server&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="doc/adguard_home_darkmode.svg"&gt; 
  &lt;img alt="AdGuard Home" src="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/doc/adguard_home_lightmode.svg?sanitize=true" width="300px"&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;Privacy protection center for you and your devices&lt;/h3&gt; 
&lt;p align="center"&gt; Free and open source, powerful network-wide ads &amp;amp; trackers blocking DNS server. &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://adguard.com/"&gt;AdGuard.com&lt;/a&gt; | &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt; | &lt;a href="https://reddit.com/r/Adguard"&gt;Reddit&lt;/a&gt; | &lt;a href="https://twitter.com/AdGuard"&gt;Twitter&lt;/a&gt; | &lt;a href="https://t.me/adguard_en"&gt;Telegram&lt;/a&gt; &lt;br&gt;&lt;br&gt; &lt;a href="https://codecov.io/github/AdguardTeam/AdGuardHome?branch=master"&gt; &lt;img src="https://img.shields.io/codecov/c/github/AdguardTeam/AdGuardHome/master.svg?sanitize=true" alt="Code Coverage"&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/AdguardTeam/AdGuardHome"&gt; &lt;img src="https://goreportcard.com/badge/github.com/AdguardTeam/AdGuardHome" alt="Go Report Card"&gt; &lt;/a&gt; &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt; &lt;img alt="Docker Pulls" src="https://img.shields.io/docker/pulls/adguard/adguardhome.svg?maxAge=604800"&gt; &lt;/a&gt; &lt;br&gt; &lt;a href="https://github.com/AdguardTeam/AdGuardHome/releases"&gt; &lt;img src="https://img.shields.io/github/release/AdguardTeam/AdGuardHome/all.svg?sanitize=true" alt="Latest release"&gt; &lt;/a&gt; &lt;a href="https://snapcraft.io/adguard-home"&gt; &lt;img alt="adguard-home" src="https://snapcraft.io/adguard-home/badge.svg?sanitize=true"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;img src="https://cdn.adtidy.org/public/Adguard/Common/adguard_home.gif" width="800"&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;AdGuard Home is a network-wide software for blocking ads and tracking. After you set it up, it'll cover ALL your home devices, and you don't need any client-side software for that.&lt;/p&gt; 
&lt;p&gt;It operates as a DNS server that re-routes tracking domains to a “black hole”, thus preventing your devices from connecting to those servers. It's based on software we use for our public &lt;a href="https://adguard-dns.io/"&gt;AdGuard DNS&lt;/a&gt; servers, and both share a lot of code.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started"&gt;Getting Started&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides"&gt;Guides&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api"&gt;API&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build"&gt;How to build from source&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building"&gt;Building&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues"&gt;Reporting issues&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate"&gt;Help with translations&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other"&gt;Other&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy"&gt;Privacy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#getting-started" id="getting-started" name="getting-started"&gt;Getting Started&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#automated-install-linux-and-mac" id="automated-install-linux-and-mac" name="automated-install-linux-and-mac"&gt;Automated install (Linux/Unix/MacOS/FreeBSD/OpenBSD)&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;To install with &lt;code&gt;curl&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;wget&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;wget --no-verbose -O - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install with &lt;code&gt;fetch&lt;/code&gt; run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;fetch -o - https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script also accepts some options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-c &amp;lt;channel&amp;gt;&lt;/code&gt; to use specified channel;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-r&lt;/code&gt; to reinstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-u&lt;/code&gt; to uninstall AdGuard Home;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v&lt;/code&gt; for verbose output.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note that options &lt;code&gt;-r&lt;/code&gt; and &lt;code&gt;-u&lt;/code&gt; are mutually exclusive.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#alternative-methods" id="alternative-methods" name="alternative-methods"&gt;Alternative methods&lt;/a&gt;&lt;/h3&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#manual-installation" id="manual-installation" name="manual-installation"&gt;Manual installation&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Please read the &lt;strong&gt;&lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/"&gt;Getting Started&lt;/a&gt;&lt;/strong&gt; article on our Wiki to learn how to install AdGuard Home manually, and how to configure your devices to use it.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker" id="docker" name="docker"&gt;Docker&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can use our official Docker image on &lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#snap-store" id="snap-store" name="snap-store"&gt;Snap Store&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;If you're running &lt;strong&gt;Linux,&lt;/strong&gt; there's a secure and easy way to install AdGuard Home: get it from the &lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#guides" id="guides" name="guides"&gt;Guides&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;See our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki"&gt;Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#api" id="api" name="api"&gt;API&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to integrate with AdGuard Home, you can use our &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/openapi"&gt;REST API&lt;/a&gt;. Alternatively, you can use this &lt;a href="https://pypi.org/project/adguardhome/"&gt;python client&lt;/a&gt;, which is used to build the &lt;a href="https://www.home-assistant.io/integrations/adguard/"&gt;AdGuard Home Hass.io Add-on&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison" id="comparison" name="comparison"&gt;Comparing AdGuard Home to other solutions&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adguard-dns" id="comparison-adguard-dns" name="comparison-adguard-dns"&gt;How is this different from public AdGuard DNS servers?&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Running your own AdGuard Home server allows you to do much more than using a public DNS server. It's a completely different level. See for yourself:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Choose what exactly the server blocks and permits.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Monitor your network activity.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Add your own custom filtering rules.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Most importantly, it's your own server, and you are the only one who's in control.&lt;/strong&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-pi-hole" id="comparison-pi-hole" name="comparison-pi-hole"&gt;How does AdGuard Home compare to Pi-Hole&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;At this point, AdGuard Home has a lot in common with Pi-Hole. Both block ads and trackers using the so-called “DNS sinkholing” method and both allow customizing what's blocked.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We're not going to stop here. DNS sinkholing is not a bad starting point, but this is just the beginning.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;AdGuard Home provides a lot of features out-of-the-box with no need to install and configure additional software. We want it to be simple to the point when even casual users can set it up with minimal effort.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Some of the listed features can be added to Pi-Hole by installing additional software or by manually using SSH terminal and reconfiguring one of the utilities Pi-Hole consists of. However, in our opinion, this cannot be legitimately counted as a Pi-Hole's feature.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Feature&lt;/th&gt; 
   &lt;th&gt;AdGuard&amp;nbsp;Home&lt;/th&gt; 
   &lt;th&gt;Pi-Hole&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking ads and trackers&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Customizing blocklists&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Built-in DHCP server&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;HTTPS for the Admin interface&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;Kind of, but you'll need to manually configure lighttpd&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Encrypted DNS upstream servers (DNS-over-HTTPS, DNS-over-TLS, DNSCrypt)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cross-platform&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (not natively, only via Docker)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running as a DNS-over-HTTPS or DNS-over-TLS server&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires additional software)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Blocking phishing and malware domains&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Parental control (blocking adult domains)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌ (requires non-default blocklists)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Force Safe search on search engines&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Per-client (device) configuration&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Access settings (choose who can use AGH DNS)&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Running &lt;a href="https://adguard-dns.io/kb/adguard-home/getting-started/#running-without-superuser"&gt;without root privileges&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-adblock" id="comparison-adblock" name="comparison-adblock"&gt;How does AdGuard Home compare to traditional ad blockers&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;It depends.&lt;/p&gt; 
&lt;p&gt;DNS sinkholing is capable of blocking a big percentage of ads, but it lacks the flexibility and the power of traditional ad blockers. You can get a good impression about the difference between these methods by reading &lt;a href="https://adguard.com/blog/adguard-vs-adaway-dns66.html"&gt;this article&lt;/a&gt;, which compares AdGuard for Android (a traditional ad blocker) to hosts-level ad blockers (which are almost identical to DNS-based blockers in their capabilities). This level of protection is enough for some users.&lt;/p&gt; 
&lt;p&gt;Additionally, using a DNS-based blocker can help to block ads, tracking and analytics requests on other types of devices, such as SmartTVs, smart speakers or other kinds of IoT devices (on which you can't install traditional ad blockers).&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#comparison-limitations" id="comparison-limitations" name="comparison-limitations"&gt;Known limitations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Here are some examples of what cannot be blocked by a DNS-level blocker:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;YouTube, Twitch ads;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Facebook, Twitter, Instagram sponsored posts.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Essentially, any advertising that shares a domain with content cannot be blocked by a DNS-level blocker.&lt;/p&gt; 
&lt;p&gt;Is there a chance to handle this in the future? DNS will never be enough to do this. Our only option is to use a content blocking proxy like what we do in the standalone AdGuard applications. We're &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues/1228"&gt;going to bring&lt;/a&gt; this feature support to AdGuard Home in the future. Unfortunately, even in this case, there still will be cases when this won't be enough or would require quite a complicated configuration.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#how-to-build" id="how-to-build" name="how-to-build"&gt;How to build from source&lt;/a&gt;&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#prerequisites" id="prerequisites" name="prerequisites"&gt;Prerequisites&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;make init&lt;/code&gt; to prepare the development environment.&lt;/p&gt; 
&lt;p&gt;You will need this to build AdGuard Home:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; v1.24 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; v20.19 or later;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.npmjs.com/"&gt;npm&lt;/a&gt; v10.8 or later;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building" id="building" name="building"&gt;Building&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Open your terminal and execute these commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/AdguardTeam/AdGuardHome
cd AdGuardHome
make
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The non-standard &lt;code&gt;-j&lt;/code&gt; flag is currently not supported, so building with &lt;code&gt;make -j 4&lt;/code&gt; or setting your &lt;code&gt;MAKEFLAGS&lt;/code&gt; to include, for example, &lt;code&gt;-j 4&lt;/code&gt; is likely to break the build. If you do have your &lt;code&gt;MAKEFLAGS&lt;/code&gt; set to that, and you don't want to change it, you can override it by running &lt;code&gt;make -j 1&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Check the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/Makefile"&gt;&lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt; to learn about other commands.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#building-cross" id="building-cross" name="building-cross"&gt;Building for a different platform&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You can build AdGuard Home for any OS/ARCH that Go supports. In order to do this, specify &lt;code&gt;GOOS&lt;/code&gt; and &lt;code&gt;GOARCH&lt;/code&gt; environment variables as macros when running &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;env GOOS='linux' GOARCH='arm64' make
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make GOOS='linux' GOARCH='arm64'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#preparing-releases" id="preparing-releases" name="preparing-releases"&gt;Preparing releases&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;You'll need &lt;a href="https://snapcraft.io/"&gt;&lt;code&gt;snapcraft&lt;/code&gt;&lt;/a&gt; to prepare a release build. Once installed, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;make build-release CHANNEL='...' VERSION='...'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-releasesh-build-a-release-for-all-platforms"&gt;&lt;code&gt;build-release&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#docker-image" id="docker-image" name="docker-image"&gt;Docker image&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Run &lt;code&gt;make build-docker&lt;/code&gt; to build the Docker image locally (the one that we publish to DockerHub). Please note, that we're using &lt;a href="https://docs.docker.com/buildx/working-with-buildx/"&gt;Docker Buildx&lt;/a&gt; to build our official image.&lt;/p&gt; 
&lt;p&gt;You may need to prepare before using these builds:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;(Linux-only) Install Qemu:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm --privileged multiarch/qemu-user-static --reset -p yes --credential yes
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Prepare the builder:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker buildx create --name buildx-builder --driver docker-container --use
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/AdguardTeam/AdGuardHome/tree/master/scripts#build-dockersh-build-a-multi-architecture-docker-image"&gt;&lt;code&gt;build-docker&lt;/code&gt; target documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#debugging-the-frontend" id="debugging-the-frontend" name="debugging-the-frontend"&gt;Debugging the frontend&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;When you need to debug the frontend without recompiling the production version every time, for example to check how your labels would look on a form, you can run the frontend build a development environment.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;In a separate terminal, run:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;( cd ./client/ &amp;amp;&amp;amp; env NODE_ENV='development' npm run watch )
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run your &lt;code&gt;AdGuardHome&lt;/code&gt; binary with the &lt;code&gt;--local-frontend&lt;/code&gt; flag, which instructs AdGuard Home to ignore the built-in frontend files and use those from the &lt;code&gt;./build/&lt;/code&gt; directory.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Now any changes you make in the &lt;code&gt;./client/&lt;/code&gt; directory should be recompiled and become available on the web UI. Make sure that you disable the browser cache to make sure that you actually get the recompiled version.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#e2e-frontend-tests" id="e2e-frontend-tests" name="e2e-frontend-tests"&gt;End-to-End (E2E) Frontend Tests&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;AdGuard Home uses &lt;a href="https://playwright.dev"&gt;Playwright&lt;/a&gt; for E2E testing. Tests are located in &lt;code&gt;tests/e2e&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Running Tests:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e&lt;/code&gt; – run all tests (headless).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:interactive&lt;/code&gt; – run tests interactively.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:debug&lt;/code&gt; – run tests in debug mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;npm run test:e2e:codegen&lt;/code&gt; – generate new test code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Setup:&lt;/strong&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;npm install&lt;/code&gt; to install dependencies.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;npx playwright install&lt;/code&gt; to set up required browsers.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; Playwright will download and install its own browser binaries for testing, which may differ from the browsers installed on your system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#contributing" id="contributing" name="contributing"&gt;Contributing&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;You are welcome to fork this repository, make your changes and &lt;a href="https://github.com/AdguardTeam/AdGuardHome/pulls"&gt;submit a pull request&lt;/a&gt;. Please make sure you follow our &lt;a href="https://github.com/AdguardTeam/CodeGuidelines/"&gt;code guidelines&lt;/a&gt; though.&lt;/p&gt; 
&lt;p&gt;Please note that we don't expect people to contribute to both UI and backend parts of the program simultaneously. Ideally, the backend part is implemented first, i.e. configuration, API, and the functionality itself. The UI part can be implemented later in a different pull request by a different person.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#test-unstable-versions" id="test-unstable-versions" name="test-unstable-versions"&gt;Test unstable versions&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;There are two update channels that you can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;beta&lt;/code&gt;: beta versions of AdGuard Home. More or less stable versions, usually released every two weeks or more often.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;edge&lt;/code&gt;: the newest version of AdGuard Home from the development branch. New updates are pushed to this channel daily.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;There are three options how you can install an unstable version:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://snapcraft.io/adguard-home"&gt;Snap Store&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; channels.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://hub.docker.com/r/adguard/adguardhome"&gt;Docker Hub&lt;/a&gt;: look for the &lt;code&gt;beta&lt;/code&gt; and &lt;code&gt;edge&lt;/code&gt; tags.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Standalone builds. Use the automated installation script or look for the available builds &lt;a href="https://github.com/AdguardTeam/AdGuardHome/wiki/Platforms"&gt;on the Wiki&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Script to install a beta version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c beta
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Script to install an edge version:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -c edge
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#reporting-issues" id="reporting-issues" name="reporting-issues"&gt;Report issues&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you run into any problem or have a suggestion, head to &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues"&gt;this page&lt;/a&gt; and click on the “New issue” button. Please follow the instructions in the issue form carefully and don't forget to start by searching for duplicates.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#translate" id="translate" name="translate"&gt;Help with translations&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;If you want to help with AdGuard Home translations, please learn more about translating AdGuard products &lt;a href="https://kb.adguard.com/en/general/adguard-translations"&gt;in our Knowledge Base&lt;/a&gt;. You can contribute to the &lt;a href="https://crowdin.com/project/adguard-applications/en#/adguard-home"&gt;AdGuardHome project on CrowdIn&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#help-other" id="help-other" name="help-other"&gt;Other&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Another way you can contribute is by &lt;a href="https://github.com/AdguardTeam/AdGuardHome/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;looking for issues&lt;/a&gt; marked as &lt;code&gt;help wanted&lt;/code&gt;, asking if the issue is up for grabs, and sending a PR fixing the bug or implementing the feature.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#uses" id="uses" name="uses"&gt;Projects that use AdGuard Home&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Please note that these projects are not affiliated with AdGuard, but are made by third-party developers and fans.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://apps.apple.com/app/apple-store/id1543143740"&gt;AdGuard Home Remote&lt;/a&gt;: iOS app by &lt;a href="https://rocketscience-it.nl/"&gt;Joost&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/frenck/python-adguardhome"&gt;Python library&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/hassio-addons/addon-adguard-home"&gt;Home Assistant add-on&lt;/a&gt; by &lt;a href="https://github.com/frenck"&gt;@frenck&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/kongfl888/luci-app-adguardhome"&gt;OpenWrt LUCI app&lt;/a&gt; by &lt;a href="https://github.com/kongfl888"&gt;@kongfl888&lt;/a&gt; (originally by &lt;a href="https://github.com/rufengsuixing"&gt;@rufengsuixing&lt;/a&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/bakito/adguardhome-sync"&gt;AdGuardHome sync&lt;/a&gt; by &lt;a href="https://github.com/bakito"&gt;@bakito&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Lissy93/AdGuardian-Term"&gt;Terminal-based, real-time traffic monitoring and statistics for your AdGuard Home instance&lt;/a&gt; by &lt;a href="https://github.com/Lissy93"&gt;@Lissy93&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://forum.gl-inet.com/t/adguardhome-on-gl-routers/10664"&gt;AdGuard Home on GLInet routers&lt;/a&gt; by &lt;a href="https://gl-inet.com/"&gt;Gl-Inet&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://git.cloudron.io/cloudron/adguard-home-app"&gt;Cloudron app&lt;/a&gt; by &lt;a href="https://github.com/gramakri"&gt;@gramakri&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/jumpsmm7/Asuswrt-Merlin-AdGuardHome-Installer"&gt;Asuswrt-Merlin-AdGuardHome-Installer&lt;/a&gt; by &lt;a href="https://github.com/jumpsmm7"&gt;@jumpsmm7&lt;/a&gt; aka &lt;a href="https://www.snbforums.com/members/somewhereovertherainbow.64179/"&gt;@SomeWhereOverTheRainBow&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/Andrea055/AdguardHomeAPI"&gt;Node.js library&lt;/a&gt; by &lt;a href="https://github.com/Andrea055/"&gt;@Andrea055&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/satheshshiva/Adguard-Home-Browser-Ext"&gt;Browser Extension&lt;/a&gt; by &lt;a href="https://github.com/satheshshiva/"&gt;@satheshshiva&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/diasdmhub/AdGuard_Home_Zabbix_Template"&gt;Zabbix Template for AdGuard Home&lt;/a&gt; by &lt;a href="https://github.com/diasdmhub"&gt;@diasdmhub&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://community.chocolatey.org/packages/adguardhome/"&gt;Chocolatey package&lt;/a&gt; by &lt;a href="https://community.chocolatey.org/profiles/niks255"&gt;niks255&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#acknowledgments" id="acknowledgments" name="acknowledgments"&gt;Acknowledgments&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;This software wouldn't have been possible without:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;Go&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/bluele/gcache"&gt;gcache&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/miekg/dns"&gt;miekg's dns&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/go-yaml/yaml"&gt;go-yaml&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://godoc.org/github.com/kardianos/service"&gt;service&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/dnsproxy"&gt;dnsproxy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AdguardTeam/urlfilter"&gt;urlfilter&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/"&gt;Node.js&lt;/a&gt; and its libraries: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://reactjs.org"&gt;React.js&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tabler/tabler"&gt;Tabler&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;And many more Node.js packages.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cliqz-oss/whotracks.me"&gt;whotracks.me data&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You might have seen that &lt;a href="https://coredns.io"&gt;CoreDNS&lt;/a&gt; was mentioned here before, but we've stopped using it in AdGuard Home.&lt;/p&gt; 
&lt;p&gt;For the full list of all Node.js packages in use, please take a look at &lt;a href="https://github.com/AdguardTeam/AdGuardHome/raw/master/client/package.json"&gt;&lt;code&gt;client/package.json&lt;/code&gt;&lt;/a&gt; file.&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/#privacy" id="privacy" name="privacy"&gt;Privacy&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;Our main idea is that you are the one, who should be in control of your data. So it is only natural, that AdGuard Home does not collect any usage statistics, and does not use any web services unless you configure it to do so. See also the &lt;a href="https://adguard.com/en/privacy/home.html"&gt;full privacy policy&lt;/a&gt; with every bit that &lt;em&gt;could in theory be sent&lt;/em&gt; by AdGuard Home is available.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>1Panel-dev/1Panel</title>
      <link>https://github.com/1Panel-dev/1Panel</link>
      <description>&lt;p&gt;🔥 1Panel provides an intuitive web interface and MCP Server to manage websites, files, containers, databases, and LLMs on a Linux server.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;a href="https://1panel.pro"&gt;&lt;img src="https://resource.1panel.pro/img/1panel-logo.png" alt="1Panel" width="300"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;b&gt;Top-Rated Web-based Linux Server Management Tool&lt;/b&gt;&lt;br&gt;Best VPS control panel&lt;br&gt;新一代的 Linux 服务器运维管理面板&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://trendshift.io/repositories/2462" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/2462" alt="1Panel-dev%2F1Panel | Trendshift" style="width: 240px; height: auto;"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0.html"&gt;&lt;img src="https://shields.io/github/license/1Panel-dev/1Panel?color=%231890FF" alt="License: GPL v3"&gt;&lt;/a&gt; &lt;a href="https://app.codacy.com/gh/1Panel-dev/1Panel?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=1Panel-dev/1Panel&amp;amp;utm_campaign=Badge_Grade_Dashboard"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/da67574fd82b473992781d1386b937ef" alt="Codacy"&gt;&lt;/a&gt; &lt;a href="https://discord.gg/bUpUqWqdRr" target="_blank"&gt; &lt;img src="https://img.shields.io/discord/1318846410149335080?logo=discord&amp;amp;labelColor=%20%235462eb&amp;amp;logoColor=%20%23f5f5f5&amp;amp;color=%20%235462eb" alt="chat on Discord"&gt;&lt;/a&gt; &lt;a href="https://github.com/1Panel-dev/1Panel/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/1Panel-dev/1Panel" alt="GitHub release"&gt;&lt;/a&gt; &lt;a href="https://github.com/1Panel-dev/1Panel"&gt;&lt;img src="https://img.shields.io/github/stars/1Panel-dev/1Panel?color=%231890FF&amp;amp;style=flat-square" alt="Stars"&gt;&lt;/a&gt;&lt;br&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/README.md"&gt;&lt;img alt="English" src="https://img.shields.io/badge/English-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.zh-Hans.md"&gt;&lt;img alt="中文(简体)" src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87(%E7%AE%80%E4%BD%93)-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ja.md"&gt;&lt;img alt="日本語" src="https://img.shields.io/badge/%E6%97%A5%E6%9C%AC%E8%AA%9E-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.pt-br.md"&gt;&lt;img alt="Português (Brasil)" src="https://img.shields.io/badge/Portugu%C3%AAs%20(Brasil)-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ar.md"&gt;&lt;img alt="العربية" src="https://img.shields.io/badge/%D8%A7%D9%84%D8%B9%D8%B1%D8%A8%D9%8A%D8%A9-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.de.md"&gt;&lt;img alt="Deutsch" src="https://img.shields.io/badge/Deutsch-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.es.md"&gt;&lt;img alt="Español" src="https://img.shields.io/badge/Espa%C3%B1ol-d9d9d9"&gt;&lt;/a&gt;&lt;br&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.fr.md"&gt;&lt;img alt="français" src="https://img.shields.io/badge/fran%C3%A7ais-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ko.md"&gt;&lt;img alt="한국어" src="https://img.shields.io/badge/%ED%95%9C%EA%B5%AD%EC%96%B4-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.id.md"&gt;&lt;img alt="Bahasa Indonesia" src="https://img.shields.io/badge/Bahasa%20Indonesia-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.zh-Hant.md"&gt;&lt;img alt="中文(繁體)" src="https://img.shields.io/badge/%E4%B8%AD%E6%96%87(%E7%B9%81%E9%AB%94)-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.tr.md"&gt;&lt;img alt="Türkçe" src="https://img.shields.io/badge/T%C3%BCrk%C3%A7e-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ru.md"&gt;&lt;img alt="Русский" src="https://img.shields.io/badge/%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-d9d9d9"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/docs/README.ms.md"&gt;&lt;img alt="Bahasa Melayu" src="https://img.shields.io/badge/Bahasa%20Melayu-d9d9d9"&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;p&gt;1Panel is an open-source, modern web-based control panel for Linux server management.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Efficient Management&lt;/strong&gt;: Through a user-friendly web graphical interface, 1Panel enables users to effortlessly manage their Linux servers. Key features include host monitoring, file management, database administration, container management, LLMs management.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Rapid Website Deployment&lt;/strong&gt;: With deep integration of the popular open-source website building software WordPress, 1Panel streamlines the process of domain binding and SSL certificate configuration, all achievable with just one click.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Application Store&lt;/strong&gt;: 1Panel curates a wide range of high-quality open-source tools and applications, facilitating easy installation and updates for its users.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Security and Reliability&lt;/strong&gt;: By leveraging containerization and secure application deployment practices, 1Panel minimizes vulnerability exposure. It further enhances security through integrated firewall management and log auditing capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;One-Click Backup &amp;amp; Restore&lt;/strong&gt;: Data protection is made simple with 1Panel's one-click backup and restore functionality, supporting various cloud storage solutions to ensure data integrity and availability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Execute the script below and follow the prompts to install 1Panel:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSL https://resource.1panel.pro/quick_start.sh -o quick_start.sh &amp;amp;&amp;amp; bash quick_start.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please refer to our &lt;a href="https://docs.1panel.pro/quick_start/"&gt;documentation&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;中国用户请使用这个 &lt;a href="https://1panel.cn/docs/installation/online_installation/"&gt;安装脚本&lt;/a&gt;，其应用数量比国际版本更丰富。&lt;/p&gt; 
&lt;h2&gt;Screenshot&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://resource.1panel.pro/img/1panel.png" alt="UI Display"&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#1Panel-dev/1Panel&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=1Panel-dev/1Panel&amp;amp;type=Date" alt="Star History Chart"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Pro Edition&lt;/h2&gt; 
&lt;p&gt;Compared to the OSS Edition, 1Panel Pro Edition provides users with a wealth of enhanced features and technical support services. Enhanced features include WAF enhancement, website tamper protection, website monitoring, GPU monitoring, custom logo and theme color, etc. &lt;a href="https://1panel.pro/pricing"&gt;Click to view the detailed introduction of the Pro Edition&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Information&lt;/h2&gt; 
&lt;p&gt;If you discover any security issues, please refer to &lt;a href="https://raw.githubusercontent.com/1Panel-dev/1Panel/dev-v2/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under The GNU General Public License version 3 (GPLv3) (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/gpl-3.0.html"&gt;https://www.gnu.org/licenses/gpl-3.0.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cloudwego/eino</title>
      <link>https://github.com/cloudwego/eino</link>
      <description>&lt;p&gt;The ultimate LLM/AI application development framework in Golang.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Eino&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/badges/.badges/main/coverage.svg?sanitize=true" alt="coverage"&gt; &lt;a href="https://github.com/cloudwego/eino/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/cloudwego/eino" alt="Release"&gt;&lt;/a&gt; &lt;a href="https://www.cloudwego.io/"&gt;&lt;img src="https://img.shields.io/website?up_message=cloudwego&amp;amp;url=https%3A%2F%2Fwww.cloudwego.io%2F" alt="WebSite"&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudwego/eino/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/cloudwego/eino" alt="License"&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/cloudwego/eino"&gt;&lt;img src="https://goreportcard.com/badge/github.com/cloudwego/eino" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudwego/kitex/eino"&gt;&lt;img src="https://img.shields.io/github/issues/cloudwego/eino" alt="OpenIssue"&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudwego/eino/issues?q=is%3Aissue+is%3Aclosed"&gt;&lt;img src="https://img.shields.io/github/issues-closed/cloudwego/eino" alt="ClosedIssue"&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/stars/cloudwego/eino" alt="Stars"&gt; &lt;img src="https://img.shields.io/github/forks/cloudwego/eino" alt="Forks"&gt;&lt;/p&gt; 
&lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/cloudwego/eino/main/README.zh_CN.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Overview&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Eino['aino]&lt;/strong&gt; (pronounced similarly to "I know") aims to be the ultimate LLM application development framework in Golang. Drawing inspirations from many excellent LLM application development frameworks in the open-source community such as LangChain &amp;amp; LlamaIndex, etc., as well as learning from cutting-edge research and real world applications, Eino offers an LLM application development framework that emphasizes on simplicity, scalability, reliability and effectiveness that better aligns with Golang programming conventions.&lt;/p&gt; 
&lt;p&gt;What Eino provides are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;a carefully curated list of &lt;strong&gt;component&lt;/strong&gt; abstractions and implementations that can be easily reused and combined to build LLM applications&lt;/li&gt; 
 &lt;li&gt;a powerful &lt;strong&gt;composition&lt;/strong&gt; framework that does the heavy lifting of strong type checking, stream processing, concurrency management, aspect injection, option assignment, etc. for the user.&lt;/li&gt; 
 &lt;li&gt;a set of meticulously designed &lt;strong&gt;API&lt;/strong&gt; that obsesses on simplicity and clarity.&lt;/li&gt; 
 &lt;li&gt;an ever-growing collection of best practices in the form of bundled &lt;strong&gt;flows&lt;/strong&gt; and &lt;strong&gt;examples&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;a useful set of tools that covers the entire development cycle, from visualized development and debugging to online tracing and evaluation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;With the above arsenal, Eino can standardize, simplify, and improve efficiency at different stages of the AI application development cycle: &lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/eino_concept.jpeg" alt=""&gt;&lt;/p&gt; 
&lt;h1&gt;A quick walkthrough&lt;/h1&gt; 
&lt;p&gt;Use a component directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;model, _ := openai.NewChatModel(ctx, config) // create an invokable LLM instance
message, _ := model.Generate(ctx, []*Message{
    SystemMessage("you are a helpful assistant."),
    UserMessage("what does the future AI App look like?")})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Of course, you can do that, Eino provides lots of useful components to use out of the box. But you can do more by using orchestration, for three reasons:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;orchestration encapsulates common patterns of LLM application.&lt;/li&gt; 
 &lt;li&gt;orchestration solves the difficult problem of processing stream response by the LLM.&lt;/li&gt; 
 &lt;li&gt;orchestration handles type safety, concurrency management, aspect injection and option assignment for you.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Eino provides two set of APIs for orchestration&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;API&lt;/th&gt; 
   &lt;th&gt;Characteristics and usage&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chain&lt;/td&gt; 
   &lt;td&gt;Simple chained directed graph that can only go forward.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Graph&lt;/td&gt; 
   &lt;td&gt;Cyclic or Acyclic directed graph. Powerful and flexible.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Let's create a simple chain: a ChatTemplate followed by a ChatModel.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/simple_chain.png" alt=""&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;chain, _ := NewChain[map[string]any, *Message]().
           AppendChatTemplate(prompt).
           AppendChatModel(model).
           Compile(ctx)

chain.Invoke(ctx, map[string]any{"query": "what's your name?"})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now let's create a graph that uses a ChatModel to generate answer or tool calls, then uses a ToolsNode to execute those tools if needed.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/tool_call_graph.png" alt=""&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;graph := NewGraph[map[string]any, *schema.Message]()

_ = graph.AddChatTemplateNode("node_template", chatTpl)
_ = graph.AddChatModelNode("node_model", chatModel)
_ = graph.AddToolsNode("node_tools", toolsNode)
_ = graph.AddLambdaNode("node_converter", takeOne)

_ = graph.AddEdge(START, "node_template")
_ = graph.AddEdge("node_template", "node_model")
_ = graph.AddBranch("node_model", branch)
_ = graph.AddEdge("node_tools", "node_converter")
_ = graph.AddEdge("node_converter", END)

compiledGraph, err := graph.Compile(ctx)
if err != nil {
return err
}
out, err := r.Invoke(ctx, map[string]any{"query":"Beijing's weather this weekend"})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now let's create a 'ReAct' agent: A ChatModel binds to Tools. It receives input Messages and decides independently whether to call the Tool or output the final result. The execution result of the Tool will again become the input Message for the ChatModel and serve as the context for the next round of independent judgment.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/react.png" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;We provide a complete implementation for ReAct Agent out of the box in the &lt;code&gt;flow&lt;/code&gt; package. Check out the code here: &lt;a href="https://github.com/cloudwego/eino/raw/main/flow/agent/react/react.go"&gt;flow/agent/react&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Our implementation of ReAct Agent uses Eino's &lt;strong&gt;graph orchestration&lt;/strong&gt; exclusively, which provides the following benefits out of the box:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Type checking: it makes sure the two nodes' input and output types match at compile time.&lt;/li&gt; 
 &lt;li&gt;Stream processing: concatenates message stream before passing to chatModel and toolsNode if needed, and copies the stream into callback handlers.&lt;/li&gt; 
 &lt;li&gt;Concurrency management: the shared state can be safely read and written because the StatePreHandler is concurrency safe.&lt;/li&gt; 
 &lt;li&gt;Aspect injection: injects callback aspects before and after the execution of ChatModel if the specified ChatModel implementation hasn't injected itself.&lt;/li&gt; 
 &lt;li&gt;Option assignment: call options are assigned either globally, to specific component type or to specific node.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, you could easily extend the compiled graph with callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;handler := NewHandlerBuilder().
  OnStartFn(
    func(ctx context.Context, info *RunInfo, input CallbackInput) context.Context) {
        log.Infof("onStart, runInfo: %v, input: %v", info, input)
    }).
  OnEndFn(
    func(ctx context.Context, info *RunInfo, output CallbackOutput) context.Context) {
        log.Infof("onEnd, runInfo: %v, out: %v", info, output)
    }).
  Build()
  
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or you could easily assign options to different nodes:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-Go"&gt;// assign to All nodes
compiledGraph.Invoke(ctx, input, WithCallbacks(handler))

// assign only to ChatModel nodes
compiledGraph.Invoke(ctx, input, WithChatModelOption(WithTemperature(0.5))

// assign only to node_1
compiledGraph.Invoke(ctx, input, WithCallbacks(handler).DesignateNode("node_1"))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;Key Features&lt;/h1&gt; 
&lt;h2&gt;Rich Components&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Encapsulates common building blocks into &lt;strong&gt;component abstractions&lt;/strong&gt;, each have multiple &lt;strong&gt;component implementations&lt;/strong&gt; that are ready to be used out of the box.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;component abstractions such as ChatModel, Tool, ChatTemplate, Retriever, Document Loader, Lambda, etc.&lt;/li&gt; 
   &lt;li&gt;each component type has an interface of its own: defined Input &amp;amp; Output Type, defined Option type, and streaming paradigms that make sense.&lt;/li&gt; 
   &lt;li&gt;implementations are transparent. Abstractions are all you care about when orchestrating components together.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Implementations can be nested and captures complex business logic.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ReAct Agent, MultiQueryRetriever, Host MultiAgent, etc. They consist of multiple components and non-trivial business logic.&lt;/li&gt; 
   &lt;li&gt;They are still transparent from the outside. A MultiQueryRetriever can be used anywhere that accepts a Retriever.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Powerful Orchestration&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Data flows from Retriever / Document Loaders / ChatTemplate to ChatModel, then flows to Tools and parsed as Final Answer. This directed, controlled flow of data through multiple components can be implemented through &lt;strong&gt;graph orchestration&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Component instances are graph nodes, and edges are data flow channels.&lt;/li&gt; 
 &lt;li&gt;Graph orchestration is powerful and flexible enough to implement complex business logic: 
  &lt;ul&gt; 
   &lt;li&gt;type checking, stream processing, concurrency management, aspect injection and option assignment are handled by the framework.&lt;/li&gt; 
   &lt;li&gt;branch out execution at runtime, read and write global state, or do field level data mapping using workflow(currently in alpha stage).&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Complete Stream Processing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stream processing is important because ChatModel outputs chunks of messages in real time as it generates them. It's especially important with orchestration because more components need to handle streaming data.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;concatenates&lt;/strong&gt; stream chunks for downstream nodes that only accepts non-stream input, such as ToolsNode.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;boxes&lt;/strong&gt; non stream into stream when stream is needed during graph execution.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;merges&lt;/strong&gt; multiple streams as they converge into a single downward node.&lt;/li&gt; 
 &lt;li&gt;Eino automatically &lt;strong&gt;copies&lt;/strong&gt; stream as they fan out to different downward node, or is passed to callback handlers.&lt;/li&gt; 
 &lt;li&gt;Orchestration elements such as &lt;strong&gt;branch&lt;/strong&gt; and &lt;strong&gt;state handlers&lt;/strong&gt; are also stream aware.&lt;/li&gt; 
 &lt;li&gt;With these streaming processing abilities, the streaming paradigms of components themselves become transparent to the user.&lt;/li&gt; 
 &lt;li&gt;A compiled Graph can run with 4 different streaming paradigms:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Streaming Paradigm&lt;/th&gt; 
   &lt;th&gt;Explanation&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Invoke&lt;/td&gt; 
   &lt;td&gt;Accepts non-stream type I and returns non-stream type O&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Stream&lt;/td&gt; 
   &lt;td&gt;Accepts non-stream type I and returns stream type StreamReader[O]&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Collect&lt;/td&gt; 
   &lt;td&gt;Accepts stream type StreamReader[I] and returns non-stream type O&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Transform&lt;/td&gt; 
   &lt;td&gt;Accepts stream type StreamReader[I] and returns stream type StreamReader[O]&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Highly Extensible Aspects (Callbacks)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Aspects handle cross-cutting concerns such as logging, tracing, metrics, etc., as well as exposing internal details of component implementations.&lt;/li&gt; 
 &lt;li&gt;Five aspects are supported: &lt;strong&gt;OnStart, OnEnd, OnError, OnStartWithStreamInput, OnEndWithStreamOutput&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;Developers can easily create custom callback handlers, add them during graph run via options, and they will be invoked during graph run.&lt;/li&gt; 
 &lt;li&gt;Graph can also inject aspects to those component implementations that do not support callbacks on their own.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Eino Framework Structure&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/eino_framework.jpeg" alt=""&gt;&lt;/p&gt; 
&lt;p&gt;The Eino framework consists of several parts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Eino(this repo): Contains Eino's type definitions, streaming mechanism, component abstractions, orchestration capabilities, aspect mechanisms, etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/cloudwego/eino-ext"&gt;EinoExt&lt;/a&gt;: Component implementations, callback handlers implementations, component usage examples, and various tools such as evaluators, prompt optimizers.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/cloudwego/eino-ext/tree/main/devops"&gt;Eino Devops&lt;/a&gt;: visualized developing, visualized debugging etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/cloudwego/eino-examples"&gt;EinoExamples&lt;/a&gt; is the repo containing example applications and best practices for Eino.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Detailed Documentation&lt;/h2&gt; 
&lt;p&gt;For learning and using Eino, we provide a comprehensive Eino User Manual to help you quickly understand the concepts in Eino and master the skills of developing AI applications based on Eino. Start exploring through the &lt;a href="https://www.cloudwego.io/zh/docs/eino/"&gt;Eino User Manual&lt;/a&gt; now!&lt;/p&gt; 
&lt;p&gt;For a quick introduction to building AI applications with Eino, we recommend starting with &lt;a href="https://www.cloudwego.io/zh/docs/eino/quick_start/"&gt;Eino: Quick Start&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Dependencies&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go 1.18 and above.&lt;/li&gt; 
 &lt;li&gt;Eino relies on &lt;a href="https://github.com/getkin/kin-openapi"&gt;kin-openapi&lt;/a&gt; 's OpenAPI JSONSchema implementation. In order to remain compatible with Go 1.18, we have fixed kin-openapi's version to be v0.118.0.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you discover a potential security issue in this project, or think you may have discovered a security issue, we ask that you notify Bytedance Security via our &lt;a href="https://security.bytedance.com/src"&gt;security center&lt;/a&gt; or &lt;a href="https://raw.githubusercontent.com/cloudwego/eino/main/sec@bytedance.com"&gt;vulnerability reporting email&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Please do &lt;strong&gt;not&lt;/strong&gt; create a public GitHub issue.&lt;/p&gt; 
&lt;h2&gt;Contact US&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;How to become a member: &lt;a href="https://github.com/cloudwego/community/raw/main/COMMUNITY_MEMBERSHIP.md"&gt;COMMUNITY MEMBERSHIP&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Issues: &lt;a href="https://github.com/cloudwego/eino/issues"&gt;Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Lark: Scan the QR code below with &lt;a href="https://www.feishu.cn/en/"&gt;Register Feishu&lt;/a&gt; to join our CloudWeGo/eino user group.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;    &lt;img src="https://raw.githubusercontent.com/cloudwego/eino/main/.github/static/img/eino/lark_group_zh.png" alt="LarkGroup" width="200"&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/cloudwego/eino/main/LICENSE-APACHE"&gt;Apache-2.0 License&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>stakater/Reloader</title>
      <link>https://github.com/stakater/Reloader</link>
      <description>&lt;p&gt;A Kubernetes controller to watch changes in ConfigMap and Secrets and do rolling upgrades on Pods with their associated Deployment, StatefulSet, DaemonSet and DeploymentConfig – [✩Star] if you're using it!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/stakater/Reloader/master/assets/web/reloader.jpg" alt="Reloader" width="40%"&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/stakater/reloader"&gt;&lt;img src="https://goreportcard.com/badge/github.com/stakater/reloader?style=flat-square" alt="Go Report Card"&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/stakater/reloader"&gt;&lt;img src="https://img.shields.io/badge/godoc-reference-blue.svg?style=flat-square" alt="Go Doc"&gt;&lt;/a&gt; &lt;a href="https://github.com/stakater/reloader/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/stakater/reloader.svg?style=flat-square" alt="Release"&gt;&lt;/a&gt; &lt;a href="https://github.com/stakater/reloader/releases/latest"&gt;&lt;img src="https://img.shields.io/github/tag/stakater/reloader.svg?style=flat-square" alt="GitHub tag"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/stakater/reloader/"&gt;&lt;img src="https://img.shields.io/docker/pulls/stakater/reloader.svg?style=flat-square" alt="Docker Pulls"&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/stakater/reloader/"&gt;&lt;img src="https://img.shields.io/docker/stars/stakater/reloader.svg?style=flat-square" alt="Docker Stars"&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/stakater/Reloader/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/stakater/reloader.svg?style=flat-square" alt="license"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🔁 What is Reloader?&lt;/h2&gt; 
&lt;p&gt;Reloader is a Kubernetes controller that automatically triggers rollouts of workloads (like Deployments, StatefulSets, and more) whenever referenced &lt;code&gt;Secrets&lt;/code&gt; or &lt;code&gt;ConfigMaps&lt;/code&gt; are updated.&lt;/p&gt; 
&lt;p&gt;In a traditional Kubernetes setup, updating a &lt;code&gt;Secret&lt;/code&gt; or &lt;code&gt;ConfigMap&lt;/code&gt; does not automatically restart or redeploy your workloads. This can lead to stale configurations running in production, especially when dealing with dynamic values like credentials, feature flags, or environment configs.&lt;/p&gt; 
&lt;p&gt;Reloader bridges that gap by ensuring your workloads stay in sync with configuration changes — automatically and safely.&lt;/p&gt; 
&lt;h2&gt;🚀 Why Reloader?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ &lt;strong&gt;Zero manual restarts&lt;/strong&gt;: No need to manually rollout workloads after config/secret changes.&lt;/li&gt; 
 &lt;li&gt;🔒 &lt;strong&gt;Secure by design&lt;/strong&gt;: Ensure your apps always use the most up-to-date credentials or tokens.&lt;/li&gt; 
 &lt;li&gt;🛠️ &lt;strong&gt;Flexible&lt;/strong&gt;: Works with all major workload types — Deployment, StatefulSet, Daemonset, ArgoRollout, and more.&lt;/li&gt; 
 &lt;li&gt;⚡ &lt;strong&gt;Fast feedback loop&lt;/strong&gt;: Ideal for CI/CD pipelines where secrets/configs change frequently.&lt;/li&gt; 
 &lt;li&gt;🔄 &lt;strong&gt;Out-of-the-box integration&lt;/strong&gt;: Just label your workloads and let Reloader do the rest.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 How It Works?&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart LR
  ExternalSecret --&amp;gt;|Creates| Secret
  SealedSecret --&amp;gt;|Creates| Secret
  Certificate --&amp;gt;|Creates| Secret
  Secret --&amp;gt;|Watched by| Reloader
  ConfigMap --&amp;gt;|Watched by| Reloader

  Reloader --&amp;gt;|Triggers Rollout| Deployment
  Reloader --&amp;gt;|Triggers Rollout| DeploymentConfig
  Reloader --&amp;gt;|Triggers Rollout| Daemonset
  Reloader --&amp;gt;|Triggers Rollout| Statefulset
  Reloader --&amp;gt;|Triggers Rollout| ArgoRollout
  Reloader --&amp;gt;|Triggers Job| CronJob
  Reloader --&amp;gt;|Sends Notification| Slack,Teams,Webhook
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sources like &lt;code&gt;ExternalSecret&lt;/code&gt;, &lt;code&gt;SealedSecret&lt;/code&gt;, or &lt;code&gt;Certificate&lt;/code&gt; from &lt;code&gt;cert-manager&lt;/code&gt; can create or manage Kubernetes &lt;code&gt;Secrets&lt;/code&gt; — but they can also be created manually or delivered through GitOps workflows.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;Secrets&lt;/code&gt; and &lt;code&gt;ConfigMaps&lt;/code&gt; are watched by Reloader.&lt;/li&gt; 
 &lt;li&gt;When changes are detected, Reloader automatically triggers a rollout of the associated workloads, ensuring your app always runs with the latest configuration.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⚡ Quick Start&lt;/h2&gt; 
&lt;h3&gt;1. Install Reloader&lt;/h3&gt; 
&lt;p&gt;Follow any of this &lt;a href="https://raw.githubusercontent.com/stakater/Reloader/master/#-installation"&gt;installation options&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;2. Annotate Your Workload&lt;/h3&gt; 
&lt;p&gt;To enable automatic reload for a Deployment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-app
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
        - name: app
          image: your-image
          envFrom:
            - configMapRef:
                name: my-config
            - secretRef:
                name: my-secret
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This tells Reloader to watch the &lt;code&gt;ConfigMap&lt;/code&gt; and &lt;code&gt;Secret&lt;/code&gt; referenced in this deployment. When either is updated, it will trigger a rollout.&lt;/p&gt; 
&lt;h2&gt;🏢 Enterprise Version&lt;/h2&gt; 
&lt;p&gt;Stakater offers an enterprise-grade version of Reloader with:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;SLA-backed support&lt;/li&gt; 
 &lt;li&gt;Certified images&lt;/li&gt; 
 &lt;li&gt;Private Slack support&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Contact &lt;a href="mailto:sales@stakater.com"&gt;&lt;code&gt;sales@stakater.com&lt;/code&gt;&lt;/a&gt; for info about Reloader Enterprise.&lt;/p&gt; 
&lt;h2&gt;🧩 Usage&lt;/h2&gt; 
&lt;p&gt;Reloader supports multiple annotation-based controls to let you &lt;strong&gt;customize when and how your Kubernetes workloads are reloaded&lt;/strong&gt; upon changes in &lt;code&gt;Secrets&lt;/code&gt; or &lt;code&gt;ConfigMaps&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Kubernetes does not trigger pod restarts when a referenced &lt;code&gt;Secret&lt;/code&gt; or &lt;code&gt;ConfigMap&lt;/code&gt; is updated. Reloader bridges this gap by watching for changes and automatically performing rollouts — but it gives you full control via annotations, so you can:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Reload &lt;strong&gt;all&lt;/strong&gt; resources by default&lt;/li&gt; 
 &lt;li&gt;Restrict reloads to only &lt;strong&gt;Secrets&lt;/strong&gt; or only &lt;strong&gt;ConfigMaps&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Watch only &lt;strong&gt;specific resources&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Use &lt;strong&gt;opt-in via tagging&lt;/strong&gt; (&lt;code&gt;search&lt;/code&gt; + &lt;code&gt;match&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Exclude workloads you don’t want to reload&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;1. 🔁 Automatic Reload (Default)&lt;/h3&gt; 
&lt;p&gt;Use these annotations to automatically restart the workload when referenced &lt;code&gt;Secrets&lt;/code&gt; or &lt;code&gt;ConfigMaps&lt;/code&gt; change.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Annotation&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reloader.stakater.com/auto: "true"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reloads workload when any referenced ConfigMap or Secret changes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;secret.reloader.stakater.com/auto: "true"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reloads only when referenced Secret(s) change&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;configmap.reloader.stakater.com/auto: "true"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reloads only when referenced ConfigMap(s) change&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;2. 📛 Named Resource Reload (Specific Resource Annotations)&lt;/h3&gt; 
&lt;p&gt;These annotations allow you to manually define which ConfigMaps or Secrets should trigger a reload, regardless of whether they're used in the pod spec.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Annotation&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;secret.reloader.stakater.com/reload: "my-secret"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reloads when specific Secret(s) change, regardless of how they're used&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;configmap.reloader.stakater.com/reload: "my-config"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reloads when specific ConfigMap(s) change, regardless of how they're used&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Use when&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;✅ This is useful in tightly scoped scenarios where config is shared but reloads are only relevant in certain cases.&lt;/li&gt; 
 &lt;li&gt;✅ Use this when you know exactly which resource(s) matter and want to avoid auto-discovery or searching altogether.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;3. 🎯 Targeted Reload (Match + Search Annotations)&lt;/h3&gt; 
&lt;p&gt;This pattern allows fine-grained reload control — workloads only restart if the Secret/ConfigMap is both:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Referenced by the workload&lt;/li&gt; 
 &lt;li&gt;Explicitly annotated with &lt;code&gt;match: true&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Annotation&lt;/th&gt; 
   &lt;th&gt;Applies To&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reloader.stakater.com/search: "true"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Workload&lt;/td&gt; 
   &lt;td&gt;Enables search mode (only reloads if matching secrets/configMaps are found)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;reloader.stakater.com/match: "true"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;ConfigMap/Secret&lt;/td&gt; 
   &lt;td&gt;Marks the config/secret as eligible for reload in search mode&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;How it works&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;The workload must have: &lt;code&gt;reloader.stakater.com/search: "true"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The ConfigMap or Secret must have: &lt;code&gt;reloader.stakater.com/match: "true"&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The resource (ConfigMap or Secret) must also be referenced in the workload (via env, &lt;code&gt;volumeMount&lt;/code&gt;, etc.)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Use when&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;✅ You want to reload a workload only if it references a ConfigMap or Secret that has been explicitly tagged with &lt;code&gt;reloader.stakater.com/match: "true"&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;✅ Use this when you want full control over which shared or system-wide resources trigger reloads. Great in multi-tenant clusters or shared configs.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;⛔ Resource-Level Ignore Annotation&lt;/h3&gt; 
&lt;p&gt;When you need to prevent specific ConfigMaps or Secrets from triggering any reloads, use the ignore annotation on the resource itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;apiVersion: v1
kind: ConfigMap  # or Secret
metadata:
  name: my-config
  annotations:
    reloader.stakater.com/ignore: "true"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This instructs Reloader to skip all reload logic for that resource across all workloads.&lt;/p&gt; 
&lt;h3&gt;4. ⚙️ Workload-Specific Rollout Strategy&lt;/h3&gt; 
&lt;p&gt;By default, Reloader uses the &lt;strong&gt;rollout&lt;/strong&gt; strategy — it updates the pod template to trigger a new rollout. This works well in most cases, but it can cause problems if you're using GitOps tools like ArgoCD, which detect this as configuration drift.&lt;/p&gt; 
&lt;p&gt;To avoid that, you can switch to the &lt;strong&gt;restart&lt;/strong&gt; strategy, which simply restarts the pod without changing the pod template.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;metadata:
  annotations:
    reloader.stakater.com/rollout-strategy: "restart"
&lt;/code&gt;&lt;/pre&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Value&lt;/th&gt; 
   &lt;th&gt;Behavior&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rollout&lt;/code&gt; (default)&lt;/td&gt; 
   &lt;td&gt;Updates pod template metadata to trigger a rollout&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;restart&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Deletes the pod to restart it without patching the template&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;✅ Use &lt;code&gt;restart&lt;/code&gt; if:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;You're using GitOps and want to avoid drift&lt;/li&gt; 
 &lt;li&gt;You want a quick restart without changing the workload spec&lt;/li&gt; 
 &lt;li&gt;Your platform restricts metadata changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;5. ❗ Annotation Behavior Rules &amp;amp; Compatibility&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;reloader.stakater.com/auto&lt;/code&gt; and &lt;code&gt;reloader.stakater.com/search&lt;/code&gt; &lt;strong&gt;cannot be used together&lt;/strong&gt; — the &lt;code&gt;auto&lt;/code&gt; annotation takes precedence.&lt;/li&gt; 
 &lt;li&gt;If both &lt;code&gt;auto&lt;/code&gt; and its typed versions (&lt;code&gt;secret.reloader.stakater.com/auto&lt;/code&gt;, &lt;code&gt;configmap.reloader.stakater.com/auto&lt;/code&gt;) are used, &lt;strong&gt;only one needs to be true&lt;/strong&gt; to trigger a reload.&lt;/li&gt; 
 &lt;li&gt;Setting &lt;code&gt;reloader.stakater.com/auto: "false"&lt;/code&gt; explicitly disables reload for that workload.&lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;--auto-reload-all&lt;/code&gt; is enabled on the controller: 
  &lt;ul&gt; 
   &lt;li&gt;All workloads are treated as if they have &lt;code&gt;auto: "true"&lt;/code&gt; unless they explicitly set it to &lt;code&gt;"false"&lt;/code&gt;.&lt;/li&gt; 
   &lt;li&gt;Missing or unrecognized annotation values are treated as &lt;code&gt;"false"&lt;/code&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;6. 🔔 Alerting on Reload&lt;/h3&gt; 
&lt;p&gt;Reloader can optionally &lt;strong&gt;send alerts&lt;/strong&gt; whenever it triggers a rolling upgrade for a workload (e.g., &lt;code&gt;Deployment&lt;/code&gt;, &lt;code&gt;StatefulSet&lt;/code&gt;, etc.).&lt;/p&gt; 
&lt;p&gt;These alerts are sent to a configured &lt;strong&gt;webhook endpoint&lt;/strong&gt;, which can be a generic receiver or services like Slack, Microsoft Teams or Google Chat.&lt;/p&gt; 
&lt;p&gt;To enable this feature, update the &lt;code&gt;reloader.env.secret&lt;/code&gt; section in your &lt;code&gt;values.yaml&lt;/code&gt; (when installing via Helm):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;reloader:
  env:
    secret:
      ALERT_ON_RELOAD: "true"                    # Enable alerting (default: false)
      ALERT_SINK: "slack"                        # Options: slack, teams, gchat or webhook (default: webhook)
      ALERT_WEBHOOK_URL: "&amp;lt;your-webhook-url&amp;gt;"    # Required if ALERT_ON_RELOAD is true
      ALERT_ADDITIONAL_INFO: "Triggered by Reloader in staging environment"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;7. ⏸️ Pause Deployments&lt;/h3&gt; 
&lt;p&gt;This feature allows you to pause rollouts for a deployment for a specified duration, helping to prevent multiple restarts when several ConfigMaps or Secrets are updated in quick succession.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Annotation&lt;/th&gt; 
   &lt;th&gt;Applies To&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;deployment.reloader.stakater.com/pause-period: "5m"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Deployment&lt;/td&gt; 
   &lt;td&gt;Pauses reloads for the specified period (e.g., &lt;code&gt;5m&lt;/code&gt;, &lt;code&gt;1h&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;How it works&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;Add the &lt;code&gt;deployment.reloader.stakater.com/pause-period&lt;/code&gt; annotation to your Deployment, specifying the pause duration (e.g., &lt;code&gt;"5m"&lt;/code&gt; for five minutes).&lt;/li&gt; 
 &lt;li&gt;When a watched ConfigMap or Secret changes, Reloader will still trigger a reload event, but if the deployment is paused, the rollout will have no effect until the pause period has elapsed.&lt;/li&gt; 
 &lt;li&gt;This avoids repeated restarts if multiple resources are updated close together.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Use when&lt;/h4&gt; 
&lt;ol&gt; 
 &lt;li&gt;✅ Your deployment references multiple ConfigMaps or Secrets that may be updated at the same time.&lt;/li&gt; 
 &lt;li&gt;✅ You want to minimize unnecessary rollouts and reduce downtime caused by back-to-back configuration changes.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;🚀 Installation&lt;/h2&gt; 
&lt;h3&gt;1. 📦 Helm&lt;/h3&gt; 
&lt;p&gt;Reloader can be installed in multiple ways depending on your Kubernetes setup and preference. Below are the supported methods:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;helm repo add stakater https://stakater.github.io/stakater-charts
helm repo update
helm install reloader stakater/reloader
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;➡️ See full Helm configuration in the &lt;a href="https://raw.githubusercontent.com/stakater/Reloader/master/deployments/kubernetes/chart/reloader/README.md"&gt;chart README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;2. 📄 Vanilla Manifests&lt;/h3&gt; 
&lt;p&gt;Apply raw Kubernetes manifests directly:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl apply -f https://raw.githubusercontent.com/stakater/Reloader/master/deployments/kubernetes/reloader.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;3. 🧱 Vanilla Kustomize&lt;/h3&gt; 
&lt;p&gt;Use the built-in Kustomize support:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl apply -k https://github.com/stakater/Reloader/deployments/kubernetes
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;4. 🛠️ Custom Kustomize Setup&lt;/h3&gt; 
&lt;p&gt;You can create your own &lt;code&gt;kustomization.yaml&lt;/code&gt; and use Reloader’s as a base:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

resources:
  - https://github.com/stakater/Reloader/deployments/kubernetes

namespace: reloader
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;5. ⚖️ Default Resource Requests and Limits&lt;/h3&gt; 
&lt;p&gt;By default, Reloader is deployed with the following resource requests and limits:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;resources:
  limits:
    cpu: 150m
    memory: 512Mi
  requests:
    cpu: 10m
    memory: 128Mi
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;6. ⚙️ Optional runtime configurations&lt;/h3&gt; 
&lt;p&gt;These flags let you customize Reloader's behavior globally, at the Reloader controller level.&lt;/p&gt; 
&lt;h4&gt;1. 🔁 Reload Behavior&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--reload-on-create=true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reload workloads when a watched ConfigMap or Secret is created&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--reload-on-delete=true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Reload workloads when a watched ConfigMap or Secret is deleted&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--auto-reload-all=true&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Automatically reload all workloads unless opted out (&lt;code&gt;auto: "false"&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--reload-strategy=env-vars&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Strategy to use for triggering reload (&lt;code&gt;env-vars&lt;/code&gt; or &lt;code&gt;annotations&lt;/code&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--log-format=json&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enable JSON-formatted logs for better machine readability&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h5&gt;Reload Strategies&lt;/h5&gt; 
&lt;p&gt;Reloader supports multiple strategies for triggering rolling updates when a watched &lt;code&gt;ConfigMap&lt;/code&gt; or &lt;code&gt;Secret&lt;/code&gt; changes. You can configure the strategy using the &lt;code&gt;--reload-strategy&lt;/code&gt; flag.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Strategy&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;env-vars&lt;/code&gt; (default)&lt;/td&gt; 
   &lt;td&gt;Adds a dummy environment variable to any container referencing the changed resource (e.g., &lt;code&gt;Deployment&lt;/code&gt;, &lt;code&gt;StatefulSet&lt;/code&gt;, etc.). This forces Kubernetes to perform a rolling update.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;annotations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Adds a &lt;code&gt;reloader.stakater.com/last-reloaded-from&lt;/code&gt; annotation to the pod template metadata. Ideal for GitOps tools like ArgoCD, as it avoids triggering unwanted sync diffs.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;The &lt;code&gt;env-vars&lt;/code&gt; strategy is the default and works in most setups.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;annotations&lt;/code&gt; strategy is preferred in &lt;strong&gt;GitOps environments&lt;/strong&gt; to prevent config drift in tools like ArgoCD or Flux.&lt;/li&gt; 
 &lt;li&gt;In &lt;code&gt;annotations&lt;/code&gt; mode, a &lt;code&gt;ConfigMap&lt;/code&gt; or &lt;code&gt;Secret&lt;/code&gt; that is deleted and re-created will still trigger a reload (since previous state is not tracked).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;2. 🚫 Resource Filtering&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--resources-to-ignore=configmaps&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Ignore ConfigMaps (only one type can be ignored at a time)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--resources-to-ignore=secrets&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Ignore Secrets (cannot combine with configMaps)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--resource-label-selector=key=value&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Only watch ConfigMaps/Secrets with matching labels&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Note:&lt;/strong&gt;&lt;br&gt; Only &lt;strong&gt;one&lt;/strong&gt; resource type can be ignored at a time.&lt;br&gt; Trying to ignore &lt;strong&gt;both &lt;code&gt;configmaps&lt;/code&gt; and &lt;code&gt;secrets&lt;/code&gt;&lt;/strong&gt; will cause an error in Reloader.&lt;br&gt; ✅ &lt;strong&gt;Workaround:&lt;/strong&gt; Scale the Reloader deployment to &lt;code&gt;0&lt;/code&gt; replicas if you want to disable it completely.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;3. 🧩 Namespace Filtering&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--namespace-selector='key=value'&lt;/code&gt; &lt;br&gt; &lt;br&gt;&lt;code&gt;--namespace-selector='key1=value1,key2=value2'&lt;/code&gt; &lt;br&gt; &lt;br&gt;&lt;code&gt;--namespace-selector='key in (value1,value2)'&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Watch only namespaces with matching labels. See &lt;a href="https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#list-and-watch-filtering"&gt;LIST and WATCH filtering&lt;/a&gt; for more details on label selectors&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--namespaces-to-ignore=ns1,ns2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Skip specific namespaces from being watched&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;4. 📝 Annotation Key Overrides&lt;/h4&gt; 
&lt;p&gt;These flags allow you to redefine annotation keys used in your workloads or resources:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Overrides&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--auto-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;reloader.stakater.com/auto&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--secret-auto-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;secret.reloader.stakater.com/auto&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--configmap-auto-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;configmap.reloader.stakater.com/auto&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--auto-search-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;reloader.stakater.com/search&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--search-match-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;reloader.stakater.com/match&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--secret-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;secret.reloader.stakater.com/reload&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--configmap-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;configmap.reloader.stakater.com/reload&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--pause-deployment-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;deployment.reloader.stakater.com/pause-period&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--pause-deployment-time-annotation&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Overrides &lt;code&gt;deployment.reloader.stakater.com/paused-at&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;5. 🕷️ Debugging&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Flag&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--enable-pprof&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Enables &lt;code&gt;pprof&lt;/code&gt; for profiling&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;--pprof-addr&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Address to start &lt;code&gt;pprof&lt;/code&gt; server on. Default is &lt;code&gt;:6060&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;Reloader is compatible with Kubernetes &amp;gt;= 1.19&lt;/p&gt; 
&lt;h2&gt;Help&lt;/h2&gt; 
&lt;h3&gt;Documentation&lt;/h3&gt; 
&lt;p&gt;The Reloader documentation can be viewed from &lt;a href="https://docs.stakater.com/reloader/"&gt;the doc site&lt;/a&gt;. The doc source is in the &lt;a href="https://raw.githubusercontent.com/stakater/Reloader/master/docs/"&gt;docs&lt;/a&gt; folder.&lt;/p&gt; 
&lt;h3&gt;Have a question?&lt;/h3&gt; 
&lt;p&gt;File a GitHub &lt;a href="https://github.com/stakater/Reloader/issues"&gt;issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Talk to us on Slack&lt;/h3&gt; 
&lt;p&gt;Join and talk to us on Slack for discussing Reloader:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://slack.stakater.com/"&gt;&lt;img src="https://stakater.github.io/README/stakater-join-slack-btn.png" alt="Join Slack"&gt;&lt;/a&gt; &lt;a href="https://stakater-community.slack.com/messages/CC5S05S12"&gt;&lt;img src="https://stakater.github.io/README/stakater-chat-btn.png" alt="Chat"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;h3&gt;Bug Reports &amp;amp; Feature Requests&lt;/h3&gt; 
&lt;p&gt;Please use the &lt;a href="https://github.com/stakater/Reloader/issues"&gt;issue tracker&lt;/a&gt; to report any bugs or file feature requests.&lt;/p&gt; 
&lt;h3&gt;Developing&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Deploy Reloader&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;okteto up&lt;/code&gt; to activate your development container&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;make build&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;./Reloader&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;PRs are welcome. In general, we follow the "fork-and-pull" Git workflow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork&lt;/strong&gt; the repo on GitHub&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone&lt;/strong&gt; the project to your own machine&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Commit&lt;/strong&gt; changes to your own branch&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Push&lt;/strong&gt; your work back up to your fork&lt;/li&gt; 
 &lt;li&gt;Submit a &lt;strong&gt;Pull request&lt;/strong&gt; so that we can review your changes&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; Be sure to merge the latest from "upstream" before making a pull request!&lt;/p&gt; 
&lt;h2&gt;Release Processes&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Repository GitHub releases&lt;/em&gt;: As requested by the community in &lt;a href="https://github.com/stakater/Reloader/issues/685"&gt;issue 685&lt;/a&gt;, Reloader is now based on a manual release process. Releases are no longer done on every merged PR to the main branch, but manually on request.&lt;/p&gt; 
&lt;p&gt;To make a GitHub release:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Code owners create a release branch &lt;code&gt;release-vX.Y.Z&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Code owners run a dispatch mode workflow to automatically generate version and manifests on the release branch&lt;/li&gt; 
 &lt;li&gt;A PR is created to bump the image version on the release branch, example: &lt;a href="https://github.com/stakater/Reloader/pull/798"&gt;PR-798&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Code owners create a GitHub release with tag &lt;code&gt;vX.Y.Z&lt;/code&gt; and target branch &lt;code&gt;release-vX.Y.Z&lt;/code&gt;, which triggers creation of images&lt;/li&gt; 
 &lt;li&gt;Code owners create a PR to update the Helm chart version, example: &lt;a href="https://github.com/stakater/Reloader/pull/846"&gt;PR-846&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;em&gt;Repository git tagging&lt;/em&gt;: Push to the main branch will create a merge-image and merge-tag named &lt;code&gt;merge-${{ github.event.number }}&lt;/code&gt;, for example &lt;code&gt;merge-800&lt;/code&gt; when pull request number 800 is merged.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;View the &lt;a href="https://github.com/stakater/Reloader/releases"&gt;releases page&lt;/a&gt; to see what has changed in each release.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache2 © &lt;a href="https://stakater.com"&gt;Stakater&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;About Stakater&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://stakater.com/?utm_source=Reloader&amp;amp;utm_medium=github"&gt;&lt;img src="https://stakater.github.io/README/stakater-github-banner.png" alt="Get started with Stakater"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Reloader&lt;/code&gt; is maintained by &lt;a href="https://stakater.com"&gt;Stakater&lt;/a&gt;. Like it? Please let us know at &lt;a href="https://raw.githubusercontent.com/stakater/Reloader/master/hello@stakater.com"&gt;hello@stakater.com&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://github.com/stakater"&gt;our other projects&lt;/a&gt; or contact us in case of professional services and queries on &lt;a href="https://raw.githubusercontent.com/stakater/Reloader/master/hello@stakater.com"&gt;hello@stakater.com&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>loft-sh/vcluster</title>
      <link>https://github.com/loft-sh/vcluster</link>
      <description>&lt;p&gt;vCluster - Create fully functional virtual Kubernetes clusters - Each vcluster runs inside a namespace of the underlying k8s cluster. It's cheaper than creating separate full-blown clusters and it offers better multi-tenancy and isolation than regular namespaces.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://www.vcluster.com" target="_blank"&gt; 
  &lt;picture&gt; 
   &lt;!-- For Dark Mode --&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="docs/static/media/vcluster_horizontal_orange_white.svg"&gt; 
   &lt;!-- For Light Mode --&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="docs/static/media/vcluster_horizontal_orange_black.svg"&gt; 
   &lt;!-- Fallback --&gt; 
   &lt;img alt="vCluster Logo" src="https://raw.githubusercontent.com/loft-sh/vcluster/main/docs/static/media/vcluster_horizontal_orange_white.svg?sanitize=true" width="600"&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;&lt;strong&gt;&lt;a href="https://www.vcluster.com"&gt;Website&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://www.vcluster.com/docs/get-started/"&gt;Quickstart&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://www.vcluster.com/docs/what-are-virtual-clusters"&gt;Documentation&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://loft.sh/blog"&gt;Blog&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://x.com/vcluster"&gt;Twitter&lt;/a&gt;&lt;/strong&gt; • &lt;strong&gt;&lt;a href="https://slack.loft.sh/"&gt;Slack&lt;/a&gt;&lt;/strong&gt;&lt;/h3&gt; 
&lt;/div&gt; 
&lt;hr&gt; 
&lt;h3&gt;🚀 Get Started Quickly!&lt;/h3&gt; 
&lt;p&gt;Deploy your first virtual cluster with minimal effort:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install loft-sh/tap/vcluster
vcluster create my-vcluster --namespace team-x
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/loft-sh/vcluster/main/docs/static/media/vcluster-github-gif-1280.gif" alt="vCluster gif"&gt;&lt;/p&gt; 
&lt;p&gt;For detailed steps, visit our &lt;a href="https://www.vcluster.com/docs/get-started"&gt;Quickstart Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;🌟Why vCluster?&lt;/h3&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Robust Security and Isolation&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Granular Permissions&lt;/strong&gt;:&lt;br&gt; vCluster users operate with minimized permissions in the host cluster, significantly reducing the risk of privileged access misuse. Within their vCluster, users have admin-level control, enabling them to manage CRDs, RBAC, and other security policies independently.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Isolated Control Plane&lt;/strong&gt;:&lt;br&gt; Each vCluster comes with its own dedicated API server and control plane, creating a strong isolation boundary.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Customizable Security Policies&lt;/strong&gt;:&lt;br&gt; Tenants can implement additional vCluster-specific governance, including OPA policies, network policies, resource quotas, limit ranges, and admission control, in addition to the existing policies and security measures in the underlying physical host cluster.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Enhanced Data Protection&lt;/strong&gt;:&lt;br&gt; With options for separate backing stores, including embedded SQLite, etcd, or external databases, virtual clusters allow for isolated data management, reducing the risk of data leakage between tenants.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Access for Tenants&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Full Admin Access per Tenant&lt;/strong&gt;:&lt;br&gt; Tenants can freely deploy CRDs, create namespaces, taint, and label nodes, and manage cluster-scoped resources typically restricted in standard Kubernetes namespaces.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Isolated yet Integrated Networking&lt;/strong&gt;:&lt;br&gt; While ensuring automatic isolation (for example, pods in different virtual clusters cannot communicate by default), vCluster allows for configurable network policies and service sharing, supporting both separation and sharing as needed.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Node Management&lt;/strong&gt;:&lt;br&gt; Assign static nodes to specific virtual clusters or share node pools among multiple virtual clusters, providing flexibility in resource allocation.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Cost-Effectiveness and Reduced Overhead&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Lightweight Infrastructure&lt;/strong&gt;:&lt;br&gt; Virtual clusters are significantly more lightweight than physical clusters, able to spin up in seconds, which contrasts sharply with the lengthy provisioning times often seen in environments like EKS (~45 minutes).&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Resource Efficiency&lt;/strong&gt;:&lt;br&gt; By sharing the underlying host cluster's resources, virtual clusters minimize the need for additional physical infrastructure, reducing costs and environmental impact.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Simplified Management&lt;/strong&gt;:&lt;br&gt; The vCluster control plane, running inside a single pod, along with optional integrated CoreDNS, minimizes the operational overhead, making virtual clusters especially suitable for large-scale deployments and multi-tenancy scenarios.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Enhanced Flexibility and Compatibility&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Diverse Kubernetes Environments&lt;/strong&gt;:&lt;br&gt; vCluster supports different Kubernetes versions and distributions (including K8s and K3s), allowing version skews. This makes it possible to tailor each virtual cluster to specific requirements without impacting others.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Adaptable Backing Stores&lt;/strong&gt;:&lt;br&gt; Choose from a range of data stores, from lightweight (SQLite) to enterprise-grade options (embedded etcd, external data stores like Global RDS), catering to various scalability and durability needs.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Runs Anywhere&lt;/strong&gt;:&lt;br&gt; Virtual clusters can run on EKS, GKE, AKS, OpenShift, RKE, K3s, cloud, edge, and on-prem. As long as it's a K8s cluster, you can run a virtual cluster on top of it.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Improved Scalability&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Reduced API Server Load&lt;/strong&gt;:&lt;br&gt; Virtual clusters, each with their own dedicated API server, significantly reduce the operational load on the host cluster's Kubernetes API server by isolating and handling requests internally.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Conflict-Free CRD Management&lt;/strong&gt;:&lt;br&gt; Independent management of CRDs within each virtual cluster eliminates the potential for CRD conflicts and version discrepancies, ensuring smoother operations and easier scaling as the user base expands.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;hr&gt; 
&lt;h3&gt;📚 Expand Your Knowledge&lt;/h3&gt; 
&lt;h4&gt;Conference Talks&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Event&lt;/th&gt; 
   &lt;th&gt;Speaker&lt;/th&gt; 
   &lt;th&gt;Title&lt;/th&gt; 
   &lt;th&gt;YouTube Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CNCF Book Club 2024&lt;/td&gt; 
   &lt;td&gt;Marc Boorshtein&lt;/td&gt; 
   &lt;td&gt;Kubernetes - An Enterprise Guide (vCluster)&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=8vwnDlkkuJM"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KCD NYC 2024&lt;/td&gt; 
   &lt;td&gt;Lukas Gentele&lt;/td&gt; 
   &lt;td&gt;Tenant Autonomy &amp;amp; Isolation In Multi-Tenant Kubernetes Clusters&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=AKJVLbXsUmE&amp;amp;t=758s"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeCon Eu 2023&lt;/td&gt; 
   &lt;td&gt;Ilia Medvedev &amp;amp; Kostis Kapelonis&lt;/td&gt; 
   &lt;td&gt;How We Securely Scaled Multi-Tenancy with VCluster, Crossplane, and Argo CD&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=hFiHU6W4_z0"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Solo Webinar 2022&lt;/td&gt; 
   &lt;td&gt;Rich and Fabian&lt;/td&gt; 
   &lt;td&gt;Speed your Istio development environment with vCluster&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=b7OkYjvLf4Y"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mirantis Tech Talks 2022&lt;/td&gt; 
   &lt;td&gt;Mirantis&lt;/td&gt; 
   &lt;td&gt;Multi-tenancy &amp;amp; Isolation using Virtual Clusters (vCluster) in K8s&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=CoqRXdJbCwY"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TGI 2022&lt;/td&gt; 
   &lt;td&gt;TGI&lt;/td&gt; 
   &lt;td&gt;TGI Kubernetes 188: vCluster&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=EaoxUDGpARE"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeCon NA 2022&lt;/td&gt; 
   &lt;td&gt;Whitney Lee &amp;amp; Mauricio Salatino&lt;/td&gt; 
   &lt;td&gt;What a RUSH! Let's Deploy Straight to Production!&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=eJG7uIU9NpM"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeCon NA 2022&lt;/td&gt; 
   &lt;td&gt;Joseph Sandoval &amp;amp; Dan Garfield&lt;/td&gt; 
   &lt;td&gt;How Adobe Planned For Scale With Argo CD, Cluster API, And VCluster&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=p8BluR5WT5w"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;KubeCon NA 2021&lt;/td&gt; 
   &lt;td&gt;Lukas Gentele&lt;/td&gt; 
   &lt;td&gt;Beyond Namespaces: Virtual Clusters are the Future of Multi-Tenancy&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=QddWNqchD9I"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Community Voice&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Youtube Channel&lt;/th&gt; 
   &lt;th&gt;Speaker&lt;/th&gt; 
   &lt;th&gt;Title&lt;/th&gt; 
   &lt;th&gt;YouTube Link&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TeKanAid 2024&lt;/td&gt; 
   &lt;td&gt;TeKanAid&lt;/td&gt; 
   &lt;td&gt;Getting Started with vCluster: Build Your IDP with Backstage, Crossplane, and ArgoCD&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=nIxl2PcEs-0"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;DevOps Toolkit 2021&lt;/td&gt; 
   &lt;td&gt;Viktor Farcic&lt;/td&gt; 
   &lt;td&gt;How To Create Virtual Kubernetes Clusters&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=JqBjpvp268Y&amp;amp;t=82s"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;TechWorld with Nana 2021&lt;/td&gt; 
   &lt;td&gt;Nana&lt;/td&gt; 
   &lt;td&gt;Build your Self-Service Kubernetes Platform with Virtual Clusters&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=tt7hope6zU0"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Kubesimplify 2021&lt;/td&gt; 
   &lt;td&gt;Saiyam Pathak and Lukas Gentele&lt;/td&gt; 
   &lt;td&gt;Let's Learn vCluster&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=I4mztvnRCjs&amp;amp;t=1s"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Rawkode 2021&lt;/td&gt; 
   &lt;td&gt;David and Lukas&lt;/td&gt; 
   &lt;td&gt;Hands on Introduction to vCluster&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://www.youtube.com/watch?v=IMdMvn2_LeI"&gt;Watch Here&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Explore more vCluster tips on our &lt;a href="https://www.youtube.com/@vcluster"&gt;Youtube Channel&lt;/a&gt; and &lt;a href="https://loft.sh/blog"&gt;Blogs&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;💻 Contribute to vCluster&lt;/h3&gt; 
&lt;p&gt;We love contributions! Check out our &lt;a href="https://github.com/loft-sh/vcluster/raw/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For quick local development, use &lt;a href="https://devpod.sh/open#https://github.com/loft-sh/vcluster"&gt;&lt;img src="https://devpod.sh/assets/open-in-devpod.svg?sanitize=true" alt="Open in DevPod!"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;🔗 Useful Links&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.vcluster.com/docs/what-are-virtual-clusters"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://slack.loft.sh/"&gt;Slack Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.vcluster.com"&gt;vCluster Website&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr&gt; 
&lt;h3&gt;Adopters&lt;/h3&gt; 
&lt;p&gt;We're glad to see vCluster being adopted by organizations around the world! Below are just a few examples of how vCluster is being used in production environments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.vcluster.com/case-studies/atlan"&gt;Atlan&lt;/a&gt;&lt;/strong&gt;: Atlan Reduced Their Infrastructure From 100 Kubernetes Clusters To 1 Using vCluster.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=p8BluR5WT5w"&gt;Adobe&lt;/a&gt;&lt;/strong&gt;: Enhancing development environments with virtual clusters.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.vcluster.com/case-studies/aussie-broadband"&gt;Aussie Broadband&lt;/a&gt;&lt;/strong&gt;: Aussie Broadband Achieved 99% Faster Cluster Provisioning with vCluster.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.loft.sh/blog/how-codefresh-uses-vcluster-to-provide-hosted-argo-cd"&gt;Codefresh&lt;/a&gt;&lt;/strong&gt;: Codefresh uses vCluster to provide hosted ArgoCD.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.coreweave.com/blog/coreweave-and-loft-labs-leverage-vcluster-in-kubernetes-at-scale"&gt;Coreweave&lt;/a&gt;&lt;/strong&gt;: CoreWeave and Loft Labs Leverage vCluster to Run Virtual Clusters in Kubernetes at Scale.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.vcluster.com/case-studies/scanmetrix"&gt;Scanmetrics&lt;/a&gt;&lt;/strong&gt;: Scanmetrix Achieved 99% Faster Customer Deployments with vCluster&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.vcluster.com/case-studies/trade-connectors"&gt;Trade Connectors&lt;/a&gt;&lt;/strong&gt;: Trade Connectors Optimized Kubernetes Cost with Multi-Tenancy from vCluster.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;ABBYY&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Aera&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Lintasarta&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Precisely&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Shipwire&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Are you using vCluster? We'd love to hear your story! Please &lt;a href="https://github.com/loft-sh/vcluster/pulls"&gt;open a pull request&lt;/a&gt; to add your name here, or &lt;a href="mailto:contact@loft.sh"&gt;contact us&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;h3&gt;📜 License&lt;/h3&gt; 
&lt;p&gt;vCluster is licensed under the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0"&gt;Apache 2.0 License&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Copyright&lt;/h3&gt; 
&lt;p&gt;© 2025 &lt;a href="https://loft.sh"&gt;Loft Labs&lt;/a&gt;. All rights reserved. This project and its maintainers are committed to fostering a welcoming, inclusive, and respectful community.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>inngest/inngest</title>
      <link>https://github.com/inngest/inngest</link>
      <description>&lt;p&gt;The leading workflow orchestration platform. Run stateful step functions and AI workflows on serverless, servers, or the edge.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://www.inngest.com"&gt;&lt;img src="https://github.com/inngest/.github/raw/main/profile/github-readme-banner-2025-06-20.png" alt="Inngest"&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/inngest/inngest/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/inngest/inngest?include_prereleases&amp;amp;sort=semver" alt="Latest release"&gt;&lt;/a&gt; &lt;a href="https://github.com/inngest/inngest/actions?query=branch%3Amain"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/inngest/inngest/go.yaml?branch=main&amp;amp;label=tests" alt="Test Status"&gt;&lt;/a&gt; &lt;a href="https://www.inngest.com/discord"&gt;&lt;img src="https://img.shields.io/discord/842170679536517141?label=discord" alt="Discord"&gt;&lt;/a&gt; &lt;a href="https://twitter.com/inngest"&gt;&lt;img src="https://img.shields.io/twitter/follow/inngest?style=social" alt="Twitter Follow"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.inngest.com/?ref=github-inngest-readme"&gt;Inngest&lt;/a&gt;'s durable functions replace queues, state management, and scheduling to enable any developer to write reliable step functions faster without touching infrastructure.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Write durable functions using any of &lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#sdks"&gt;&lt;strong&gt;our language SDKs&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Run the &lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#getting-started"&gt;&lt;strong&gt;Inngest Dev Server&lt;/strong&gt;&lt;/a&gt; for a complete local development experience, with production parity.&lt;/li&gt; 
 &lt;li&gt;Deploy your functions to your own infrastructure&lt;/li&gt; 
 &lt;li&gt;Sync your application's functions with the &lt;a href="https://www.inngest.com/?ref=github-inngest-readme"&gt;&lt;strong&gt;Inngest Platform&lt;/strong&gt;&lt;/a&gt; or a &lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#self-hosting"&gt;self-hosted Inngest server&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Inngest invokes your functions securely via HTTPS whenever triggering events are received.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;An example durable function&lt;/h3&gt; 
&lt;p&gt;Inngest Functions enable developers to run reliable background logic, from background jobs to complex workflows. An Inngest Function is composed of three key parts that provide robust support for retrying, scheduling, and coordinating complex sequences of operations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.inngest.com/docs/features/events-triggers?ref=github-inngest-readme"&gt;&lt;strong&gt;Triggers&lt;/strong&gt;&lt;/a&gt; - Events, Cron schedules or webhook events that trigger the function.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inngest.com/docs/guides/flow-control?ref=github-inngest-readme"&gt;&lt;strong&gt;Flow Control&lt;/strong&gt;&lt;/a&gt; - Configure how the function runs are enqueued and executed including concurrency, throttling, debouncing, rate limiting, and prioritization.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/docs/features/inngest-functions/steps-workflows?ref=github-inngest-readme"&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/a&gt; - Steps are fundamental building blocks of Inngest, turning your Inngest Functions into reliable workflows that can runs for months and recover from failures.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here is an example function that limits concurrency for each unique user id and performs two steps that will be retried on error:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-typescript"&gt;export default inngest.createFunction(
  {
    id: "import-product-images",
    concurrency: {
      key: "event.data.userId",
      limit: 10
    }
  },
  { event: "shop/product.imported" },
  async ({ event, step }) =&amp;gt; {
    // Here goes the business logic
    // By wrapping code in steps, each will be retried automatically on failure
    const s3Urls = await step.run("copy-images-to-s3", async () =&amp;gt; {
      return copyAllImagesToS3(event.data.imageURLs);
    });
    // You can include numerous steps in your function
    await step.run("resize-images", async () =&amp;gt; {
      await resizer.bulk({ urls: s3Urls, quality: 0.9, maxWidth: 1024 });
    })
  };
);

// Elsewhere in your code (e.g. in your API endpoint):
await inngest.send({
  name: "shop/product.imported",
  data: {
    userId: "01J8G44701QYGE0DH65PZM8DPM",
    imageURLs: [
      "https://useruploads.acme.com/q2345678/1094.jpg",
      "https://useruploads.acme.com/q2345678/1095.jpg"
    ],
  },
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Learn more&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#getting-started"&gt;Getting started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#sdks"&gt;SDKs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#project-architecture"&gt;Project Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#self-hosting"&gt;Self-hosting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#community"&gt;Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Run the Inngest Dev Server using our CLI:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx inngest-cli@latest dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open the Inngest Dev Server dashboard at &lt;a href="http://localhost:8288"&gt;http://localhost:8288&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/inngest/inngest/main/.github/assets/dashboard-screenshot-2024-09-23.png" alt="Screenshot of the Inngest dashboard served by the Inngest Dev Server"&gt;&lt;/p&gt; 
&lt;p&gt;Follow our &lt;a href="https://www.inngest.com/docs/getting-started/nextjs-quick-start?ref=github-inngest-readme"&gt;Next.js&lt;/a&gt;, &lt;a href="https://www.inngest.com/docs/getting-started/nodejs-quick-start?ref=github-inngest-readme"&gt;Node.js&lt;/a&gt; or &lt;a href="https://www.inngest.com/docs/getting-started/python-quick-start?ref=github-inngest-readme"&gt;Python&lt;/a&gt; quick start guides.&lt;/p&gt; 
&lt;h2&gt;SDKs&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;TypeScript / JavaScript&lt;/strong&gt; (&lt;a href="https://github.com/inngest/inngest-js"&gt;inngest-js&lt;/a&gt;) - &lt;a href="https://www.inngest.com/docs/reference/typescript?ref=github-inngest-readme"&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Python&lt;/strong&gt; (&lt;a href="https://github.com/inngest/inngest-py"&gt;inngest-py&lt;/a&gt;) - &lt;a href="https://www.inngest.com/docs/reference/python?ref=github-inngest-readme"&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Go&lt;/strong&gt; (&lt;a href="https://github.com/inngest/inngestgo"&gt;inngestgo&lt;/a&gt;) - &lt;a href="https://pkg.go.dev/github.com/inngest/inngestgo"&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Kotlin / Java&lt;/strong&gt; (&lt;a href="https://github.com/inngest/inngest-kt"&gt;inngest-kt&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Architecture&lt;/h2&gt; 
&lt;p&gt;To understand how self-hosting works, it's valuable to understand the architecture and system components at a high level. We'll take a look at a simplified architecture diagram and walk through the system.&lt;/p&gt; 
&lt;br&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/inngest/inngest/main/.github/assets/architecture-2024-09-23.png" alt="System Architecture" width="660"&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Event API&lt;/strong&gt; - Receives events from SDKs via HTTP requests. Authenticates client requests via &lt;a href="https://www.inngest.com/docs/events/creating-an-event-key?ref=github-inngest-readme"&gt;Event Keys&lt;/a&gt;. The Event API publishes event payloads to an internal event stream.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Event stream&lt;/strong&gt; - Acts as buffer between the &lt;em&gt;Event API&lt;/em&gt; and the &lt;em&gt;Runner&lt;/em&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Runner&lt;/strong&gt; - Consumes incoming events and performs several actions: 
  &lt;ul&gt; 
   &lt;li&gt;Scheduling of new “function runs” (aka jobs) given the event type, creating initial run state in the &lt;em&gt;State store&lt;/em&gt; database. Runs are added to queues given the function's flow control configuration.&lt;/li&gt; 
   &lt;li&gt;Resume functions paused via &lt;a href="https://www.inngest.com/docs/features/inngest-functions/steps-workflows/wait-for-event?ref=github-inngest-readme"&gt;&lt;code&gt;waitForEvent&lt;/code&gt;&lt;/a&gt; with matching expressions.&lt;/li&gt; 
   &lt;li&gt;Cancels running functions with matching &lt;a href="https://www.inngest.com/docs/features/inngest-functions/cancellation/cancel-on-events?ref=github-inngest-readme"&gt;&lt;code&gt;cancelOn&lt;/code&gt;&lt;/a&gt; expressions&lt;/li&gt; 
   &lt;li&gt;Writes ingested events to a database for historical record and future replay.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Queue&lt;/strong&gt; - A multi-tenant aware, multi-tier queue designed for fairness and various &lt;a href="https://www.inngest.com/docs/guides/flow-control?ref=github-inngest-readme"&gt;flow control&lt;/a&gt; methods (concurrency, throttling, prioritization, debouncing, rate limiting) and &lt;a href="https://www.inngest.com/docs/guides/batching?ref=github-inngest-readme"&gt;batching&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Executor&lt;/strong&gt; - Responsible for executing functions, from initial execution, step execution, writing incremental function run state to the &lt;em&gt;State store&lt;/em&gt;, and retries after failures.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;State store (database)&lt;/strong&gt; - Persists data for pending and ongoing function runs. Data includes initial triggering event(s), step output and step errors.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Database&lt;/strong&gt; - Persists system data and history including Apps, Functions, Events, Function run results.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;API&lt;/strong&gt; - GraphQL and REST APIs for programmatic access and management of system resources.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dashboard UI&lt;/strong&gt; - The UI to manage apps, functions and view function run history.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.inngest.com/discord"&gt;&lt;strong&gt;Join our Discord community for support, to give us feedback, or chat with us&lt;/strong&gt;&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/inngest/discussions"&gt;Post a question or idea to our GitHub discussion board&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inngest.com/docs?ref=github-inngest-readme"&gt;Read the documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://roadmap.inngest.com/"&gt;Explore our public roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/inngest"&gt;Follow us on Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inngest.com/mailing-list"&gt;Join our mailing list&lt;/a&gt; for release notes and project updates&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We embrace contributions in many forms, including documentation, typos, bug reports or fixes. Check out our &lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/docs/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; to get started. Each of our open source &lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#sdks"&gt;SDKs&lt;/a&gt; are open to contributions as well.&lt;/p&gt; 
&lt;p&gt;Additionally, Inngest's website documentation is available for contribution in &lt;a href="https://github.com/inngest/website"&gt;the &lt;code&gt;inngest/website&lt;/code&gt; repo&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Self-hosting&lt;/h2&gt; 
&lt;p&gt;Self-hosting the Inngest server is possible and easy to get started with. Learn more about self-hosting Inngest in &lt;a href="https://www.inngest.com/docs/self-hosting?ref=github-inngest-readme"&gt;our docs guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Inngest server and CLI are available under the Server Side Public License and delayed open source publication (DOSP) under Apache 2.0. &lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/LICENSE.md"&gt;View the license here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;All Inngest &lt;a href="https://raw.githubusercontent.com/inngest/inngest/main/#sdks"&gt;SDKs&lt;/a&gt; are all available under the Apache 2.0 license.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/vault</title>
      <link>https://github.com/hashicorp/vault</link>
      <description>&lt;p&gt;A tool for secrets management, encryption as a service, and privileged access management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Vault &lt;a href="https://github.com/hashicorp/vault/actions/workflows/build.yml"&gt;&lt;img src="https://github.com/hashicorp/vault/actions/workflows/build.yml/badge.svg?sanitize=true" alt="build"&gt;&lt;/a&gt; &lt;a href="https://github.com/hashicorp/vault/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/hashicorp/vault/actions/workflows/ci.yml/badge.svg?sanitize=true" alt="ci"&gt;&lt;/a&gt; &lt;a href="https://www.hashicorp.com/products/vault/?utm_source=github&amp;amp;utm_medium=banner&amp;amp;utm_campaign=github-vault-enterprise"&gt;&lt;img src="https://img.shields.io/badge/vault-enterprise-yellow.svg?colorB=7c8797&amp;amp;colorA=000000" alt="vault enterprise"&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;hr&gt; 
&lt;p&gt;&lt;strong&gt;Please note&lt;/strong&gt;: We take Vault's security and our users' trust very seriously. If you believe you have found a security issue in Vault, &lt;em&gt;please responsibly disclose&lt;/em&gt; by contacting us at &lt;a href="mailto:security@hashicorp.com"&gt;security@hashicorp.com&lt;/a&gt;.&lt;/p&gt; 
&lt;hr&gt; 
&lt;ul&gt; 
 &lt;li&gt;Website: &lt;a href="https://developer.hashicorp.com/vault"&gt;developer.hashicorp.com/vault&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Announcement list: &lt;a href="https://groups.google.com/group/hashicorp-announce"&gt;Google Groups&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discussion forum: &lt;a href="https://discuss.hashicorp.com/c/vault"&gt;Discuss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation: &lt;a href="https://developer.hashicorp.com/vault/docs"&gt;https://developer.hashicorp.com/vault/docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tutorials: &lt;a href="https://developer.hashicorp.com/vault/tutorials"&gt;https://developer.hashicorp.com/vault/tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Certification exam: &lt;a href="https://developer.hashicorp.com/certifications/security-automation"&gt;https://developer.hashicorp.com/certifications/security-automation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;img width="300" alt="Vault Logo" src="https://github.com/hashicorp/vault/raw/f22d202cde2018f9455dec755118a9b84586e082/Vault_PrimaryLogo_Black.png"&gt; 
&lt;p&gt;Vault is a tool for securely accessing secrets. A secret is anything that you want to tightly control access to, such as API keys, passwords, certificates, and more. Vault provides a unified interface to any secret, while providing tight access control and recording a detailed audit log.&lt;/p&gt; 
&lt;p&gt;A modern system requires access to a multitude of secrets: database credentials, API keys for external services, credentials for service-oriented architecture communication, etc. Understanding who is accessing what secrets is already very difficult and platform-specific. Adding on key rolling, secure storage, and detailed audit logs is almost impossible without a custom solution. This is where Vault steps in.&lt;/p&gt; 
&lt;p&gt;The key features of Vault are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Secure Secret Storage&lt;/strong&gt;: Vault can store arbitrary key/value pairs. Vault encrypts data before writing it to persistent storage, so gaining access to the raw storage isn't enough to access your secrets. Vault can write to disk, &lt;a href="https://www.consul.io"&gt;Consul&lt;/a&gt;, and more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Dynamic Secrets&lt;/strong&gt;: Vault can generate secrets on-demand for some systems, such as AWS or SQL databases. For example, when an application needs to access an S3 bucket, it asks Vault for credentials, and Vault will generate an AWS keypair with valid permissions on demand. After creating these dynamic secrets, Vault will also automatically revoke them after the lease is up.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Data Encryption&lt;/strong&gt;: Vault can encrypt and decrypt data without storing it. This allows security teams to define encryption parameters and developers to store encrypted data in a location such as a SQL database without having to design their own encryption methods.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Leasing and Renewal&lt;/strong&gt;: Vault associates a &lt;strong&gt;lease&lt;/strong&gt; with each secret. At the end of the lease, Vault automatically revokes the secret. Clients are able to renew leases via built-in renew APIs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Revocation&lt;/strong&gt;: Vault has built-in support for secret revocation. Vault can revoke not only single secrets, but a tree of secrets, for example, all secrets read by a specific user, or all secrets of a particular type. Revocation assists in key rolling as well as locking down systems in the case of an intrusion.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation, Getting Started, and Certification Exams&lt;/h2&gt; 
&lt;p&gt;Documentation is available on the &lt;a href="https://developer.hashicorp.com/vault/docs"&gt;Vault website&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you're new to Vault and want to get started with security automation, please check out our &lt;a href="https://learn.hashicorp.com/collections/vault/getting-started"&gt;Getting Started guides&lt;/a&gt; on HashiCorp's learning platform. There are also &lt;a href="https://learn.hashicorp.com/vault"&gt;additional guides&lt;/a&gt; to continue your learning.&lt;/p&gt; 
&lt;p&gt;For examples of how to interact with Vault from inside your application in different programming languages, see the &lt;a href="https://github.com/hashicorp/vault-examples"&gt;vault-examples&lt;/a&gt; repo. An out-of-the-box &lt;a href="https://github.com/hashicorp/hello-vault-go"&gt;sample application&lt;/a&gt; is also available.&lt;/p&gt; 
&lt;p&gt;Show off your Vault knowledge by passing a certification exam. Visit the &lt;a href="https://www.hashicorp.com/certification/#hashicorp-certified-vault-associate"&gt;certification page&lt;/a&gt; for information about exams and find &lt;a href="https://learn.hashicorp.com/collections/vault/certification"&gt;study materials&lt;/a&gt; on HashiCorp's learning platform.&lt;/p&gt; 
&lt;h2&gt;Developing Vault&lt;/h2&gt; 
&lt;p&gt;If you wish to work on Vault itself or any of its built-in systems, you'll first need &lt;a href="https://www.golang.org"&gt;Go&lt;/a&gt; installed on your machine.&lt;/p&gt; 
&lt;p&gt;For local dev first make sure Go is properly installed, including setting up a &lt;a href="https://golang.org/doc/code.html#GOPATH"&gt;GOPATH&lt;/a&gt;, then setting the &lt;a href="https://pkg.go.dev/cmd/go#hdr-Environment_variables"&gt;GOBIN&lt;/a&gt; variable to &lt;code&gt;$GOPATH/bin&lt;/code&gt;. Ensure that &lt;code&gt;$GOPATH/bin&lt;/code&gt; is in your path as some distributions bundle the old version of build tools.&lt;/p&gt; 
&lt;p&gt;Next, clone this repository. Vault uses &lt;a href="https://github.com/golang/go/wiki/Modules"&gt;Go Modules&lt;/a&gt;, so it is recommended that you clone the repository &lt;em&gt;&lt;strong&gt;outside&lt;/strong&gt;&lt;/em&gt; of the GOPATH. You can then download any required build tools by bootstrapping your environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make bootstrap
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To compile a development version of Vault, run &lt;code&gt;make&lt;/code&gt; or &lt;code&gt;make dev&lt;/code&gt;. This will put the Vault binary in the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;$GOPATH/bin&lt;/code&gt; folders:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make dev
...
$ bin/vault
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To compile a development version of Vault with the UI, run &lt;code&gt;make static-dist dev-ui&lt;/code&gt;. This will put the Vault binary in the &lt;code&gt;bin&lt;/code&gt; and &lt;code&gt;$GOPATH/bin&lt;/code&gt; folders:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make static-dist dev-ui
...
$ bin/vault
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run tests, type &lt;code&gt;make test&lt;/code&gt;. Note: this requires Docker to be installed. If this exits with exit status 0, then everything is working!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make test
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you're developing a specific package, you can run tests for just that package by specifying the &lt;code&gt;TEST&lt;/code&gt; variable. For example below, only &lt;code&gt;vault&lt;/code&gt; package tests will be run.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make test TEST=./vault
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;If you encounter an error like &lt;code&gt;could not read Username for 'https://github.com'&lt;/code&gt; you may need to adjust your git config like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ git config --global --add url."git@github.com:".insteadOf "https://github.com/"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Importing Vault&lt;/h3&gt; 
&lt;p&gt;This repository publishes two libraries that may be imported by other projects: &lt;code&gt;github.com/hashicorp/vault/api&lt;/code&gt; and &lt;code&gt;github.com/hashicorp/vault/sdk&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Note that this repository also contains Vault (the product), and as with most Go projects, Vault uses Go modules to manage its dependencies. The mechanism to do that is the &lt;a href="https://raw.githubusercontent.com/hashicorp/vault/main/go.mod"&gt;go.mod&lt;/a&gt; file. As it happens, the presence of that file also makes it theoretically possible to import Vault as a dependency into other projects. Some other projects have made a practice of doing so in order to take advantage of testing tooling that was developed for testing Vault itself. This is not, and has never been, a supported way to use the Vault project. We aren't likely to fix bugs relating to failure to import &lt;code&gt;github.com/hashicorp/vault&lt;/code&gt; into your project.&lt;/p&gt; 
&lt;p&gt;See also the section "Docker-based tests" below.&lt;/p&gt; 
&lt;h3&gt;Acceptance Tests&lt;/h3&gt; 
&lt;p&gt;Vault has comprehensive &lt;a href="https://en.wikipedia.org/wiki/Acceptance_testing"&gt;acceptance tests&lt;/a&gt; covering most of the features of the secret and auth methods.&lt;/p&gt; 
&lt;p&gt;If you're working on a feature of a secret or auth method and want to verify it is functioning (and also hasn't broken anything else), we recommend running the acceptance tests.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; The acceptance tests create/destroy/modify &lt;em&gt;real resources&lt;/em&gt;, which may incur real costs in some cases. In the presence of a bug, it is technically possible that broken backends could leave dangling data behind. Therefore, please run the acceptance tests at your own risk. At the very least, we recommend running them in their own private account for whatever backend you're testing.&lt;/p&gt; 
&lt;p&gt;To run the acceptance tests, invoke &lt;code&gt;make testacc&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ make testacc TEST=./builtin/logical/consul
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;TEST&lt;/code&gt; variable is required, and you should specify the folder where the backend is. The &lt;code&gt;TESTARGS&lt;/code&gt; variable is recommended to filter down to a specific resource to test, since testing all of them at once can sometimes take a very long time.&lt;/p&gt; 
&lt;p&gt;Acceptance tests typically require other environment variables to be set for things such as access keys. The test itself should error early and tell you what to set, so it is not documented here.&lt;/p&gt; 
&lt;p&gt;For more information on Vault Enterprise features, visit the &lt;a href="https://www.hashicorp.com/products/vault/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=github-vault-enterprise"&gt;Vault Enterprise site&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Docker-based Tests&lt;/h3&gt; 
&lt;p&gt;We have created an experimental new testing mechanism inspired by NewTestCluster. An example of how to use it:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
  "testing"
  "github.com/hashicorp/vault/sdk/helper/testcluster/docker"
)

func Test_Something_With_Docker(t *testing.T) {
  opts := &amp;amp;docker.DockerClusterOptions{
    ImageRepo: "hashicorp/vault", // or "hashicorp/vault-enterprise"
    ImageTag:    "latest",
  }
  cluster := docker.NewTestDockerCluster(t, opts)
  defer cluster.Cleanup()
  
  client := cluster.Nodes()[0].APIClient()
  _, err := client.Logical().Read("sys/storage/raft/configuration")
  if err != nil {
    t.Fatal(err)
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or for Enterprise:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
  "testing"
  "github.com/hashicorp/vault/sdk/helper/testcluster/docker"
)

func Test_Something_With_Docker(t *testing.T) {
  opts := &amp;amp;docker.DockerClusterOptions{
    ImageRepo: "hashicorp/vault-enterprise",
    ImageTag:  "latest",
	VaultLicense: licenseString, // not a path, the actual license bytes
  }
  cluster := docker.NewTestDockerCluster(t, opts)
  defer cluster.Cleanup()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is a more realistic example of how we use it in practice. DefaultOptions uses &lt;code&gt;hashicorp/vault&lt;/code&gt;:&lt;code&gt;latest&lt;/code&gt; as the repo and tag, but it also looks at the environment variable VAULT_BINARY. If populated, it will copy the local file referenced by VAULT_BINARY into the container. This is useful when testing local changes.&lt;/p&gt; 
&lt;p&gt;Instead of setting the VaultLicense option, you can set the VAULT_LICENSE_CI environment variable, which is better than committing a license to version control.&lt;/p&gt; 
&lt;p&gt;Optionally you can set COMMIT_SHA, which will be appended to the image name we build as a debugging convenience.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func Test_Custom_Build_With_Docker(t *testing.T) {
  opts := docker.DefaultOptions(t)
  cluster := docker.NewTestDockerCluster(t, opts)
  defer cluster.Cleanup()
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are a variety of helpers in the &lt;code&gt;github.com/hashicorp/vault/sdk/helper/testcluster&lt;/code&gt; package, e.g. these tests below will create a pair of 3-node clusters and link them using PR or DR replication respectively, and fail if the replication state doesn't become healthy before the passed context expires.&lt;/p&gt; 
&lt;p&gt;Again, as written, these depend on having a Vault Enterprise binary locally and the env var VAULT_BINARY set to point to it, as well as having VAULT_LICENSE_CI set.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func TestStandardPerfReplication_Docker(t *testing.T) {
  opts := docker.DefaultOptions(t)
  r, err := docker.NewReplicationSetDocker(t, opts)
  if err != nil {
      t.Fatal(err)
  }
  defer r.Cleanup()

  ctx, cancel := context.WithTimeout(context.Background(), time.Minute)
  defer cancel()
  err = r.StandardPerfReplication(ctx)
  if err != nil {
    t.Fatal(err)
  }
}

func TestStandardDRReplication_Docker(t *testing.T) {
  opts := docker.DefaultOptions(t)
  r, err := docker.NewReplicationSetDocker(t, opts)
  if err != nil {
    t.Fatal(err)
  }
  defer r.Cleanup()

  ctx, cancel := context.WithTimeout(context.Background(), time.Minute)
  defer cancel()
  err = r.StandardDRReplication(ctx)
  if err != nil {
    t.Fatal(err)
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, here's an example of running an existing OSS docker test with a custom binary:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ GOOS=linux make dev
$ VAULT_BINARY=$(pwd)/bin/vault go test -run 'TestRaft_Configuration_Docker' ./vault/external_tests/raft/raft_binary
ok      github.com/hashicorp/vault/vault/external_tests/raft/raft_binary        20.960s
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>open-telemetry/opentelemetry-collector</title>
      <link>https://github.com/open-telemetry/opentelemetry-collector</link>
      <description>&lt;p&gt;OpenTelemetry Collector&lt;/p&gt;&lt;hr&gt;&lt;hr&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://opentelemetry.io/docs/collector/getting-started/"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Getting Involved&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;Getting In Touch&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/actions/workflows/build-and-test.yml?query=branch%3Amain"&gt; &lt;img alt="Build Status" src="https://img.shields.io/github/actions/workflow/status/open-telemetry/opentelemetry-collector/build-and-test.yml?branch=main&amp;amp;style=for-the-badge"&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/open-telemetry/opentelemetry-collector"&gt; &lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/open-telemetry/opentelemetry-collector?style=for-the-badge"&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/open-telemetry/opentelemetry-collector/branch/main/"&gt; &lt;img alt="Codecov Status" src="https://img.shields.io/codecov/c/github/open-telemetry/opentelemetry-collector?style=for-the-badge"&gt; &lt;/a&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/releases"&gt; &lt;img alt="GitHub release (latest by date including pre-releases)" src="https://img.shields.io/github/v/release/open-telemetry/opentelemetry-collector?include_prereleases&amp;amp;style=for-the-badge"&gt; &lt;/a&gt; &lt;br&gt; &lt;a href="https://www.bestpractices.dev/projects/8404"&gt;&lt;img src="https://www.bestpractices.dev/projects/8404/badge"&gt; &lt;/a&gt; &lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:opentelemetry"&gt; &lt;img alt="Fuzzing Status" src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/opentelemetry.svg?sanitize=true"&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/vision.md"&gt;Vision&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/configuration/"&gt;Configuration&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/internal-telemetry/#use-internal-telemetry-to-monitor-the-collector"&gt;Monitoring&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/security-best-practices.md"&gt;Security&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://pkg.go.dev/go.opentelemetry.io/collector"&gt;Package&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;hr&gt; 
&lt;h1&gt;&lt;img src="https://opentelemetry.io/img/logos/opentelemetry-logo-nav.png" alt="OpenTelemetry Icon" width="45" height=""&gt; OpenTelemetry Collector&lt;/h1&gt; 
&lt;p&gt;The OpenTelemetry Collector offers a vendor-agnostic implementation on how to receive, process and export telemetry data. In addition, it removes the need to run, operate and maintain multiple agents/collectors in order to support open-source telemetry data formats (e.g. Jaeger, Prometheus, etc.) to multiple open-source or commercial back-ends.&lt;/p&gt; 
&lt;p&gt;Objectives:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usable: Reasonable default configuration, supports popular protocols, runs and collects out of the box.&lt;/li&gt; 
 &lt;li&gt;Performant: Highly stable and performant under varying loads and configurations.&lt;/li&gt; 
 &lt;li&gt;Observable: An exemplar of an observable service.&lt;/li&gt; 
 &lt;li&gt;Extensible: Customizable without touching the core code.&lt;/li&gt; 
 &lt;li&gt;Unified: Single codebase, deployable as an agent or collector with support for traces, metrics and logs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The OpenTelemetry Collector SIG is present at the &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;#otel-collector&lt;/a&gt; channel on the CNCF Slack and &lt;a href="https://github.com/open-telemetry/community#implementation-sigs"&gt;meets once a week&lt;/a&gt; via video calls. Everyone is invited to join those calls, which typically serves the following purposes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;meet the humans behind the project&lt;/li&gt; 
 &lt;li&gt;get an opinion about specific proposals&lt;/li&gt; 
 &lt;li&gt;look for a sponsor for a proposed component after trying already via GitHub and Slack&lt;/li&gt; 
 &lt;li&gt;get attention to a specific pull-request that got stuck and is difficult to discuss asynchronously&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We rotate our video calls between three time slots, in order to allow everyone to join at least once every three meetings. The rotation order is as follows:&lt;/p&gt; 
&lt;p&gt;Tuesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=1700"&gt;17:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Wednesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0900"&gt;09:00 PT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0500"&gt;05:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Contributors to the project are also welcome to have ad-hoc meetings for synchronous discussions about specific points. Post a note in #otel-collector-dev on Slack inviting others, specifying the topic to be discussed. Unless there are strong reasons to keep the meeting private, please make it an open invitation for other contributors to join. Try also to identify who would be the other contributors interested on that topic and in which timezones they are.&lt;/p&gt; 
&lt;p&gt;Remember that our source of truth is GitHub: every decision made via Slack or video calls has to be recorded in the relevant GitHub issue. Ideally, the agenda items from the meeting notes would include a link to the issue or pull request where a discussion is happening already. We acknowledge that not everyone can join Slack or the synchronous calls and don't want them to feel excluded.&lt;/p&gt; 
&lt;h2&gt;Supported OTLP version&lt;/h2&gt; 
&lt;p&gt;This code base is currently built against using OTLP protocol v1.5.0, considered Stable. &lt;a href="https://github.com/open-telemetry/opentelemetry-proto?tab=readme-ov-file#stability-definition"&gt;See the OpenTelemetry Protocol Stability definition here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stability levels&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/component-stability.md"&gt;Stability Levels and versioning&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;When used as a library, the OpenTelemetry Collector attempts to track the currently supported versions of Go, as &lt;a href="https://go.dev/doc/devel/release#policy"&gt;defined by the Go team&lt;/a&gt;. Removing support for an unsupported Go version is not considered a breaking change.&lt;/p&gt; 
&lt;p&gt;Support for Go versions on the OpenTelemetry Collector is updated as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will add build and tests steps for the new Go minor version.&lt;/li&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will remove support for Go version &lt;code&gt;N-2&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Official OpenTelemetry Collector distro binaries will be built with a release in the latest Go minor version series.&lt;/p&gt; 
&lt;h2&gt;Verifying the images signatures&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] To verify a signed artifact or blob, first &lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;install Cosign&lt;/a&gt;, then follow the instructions below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We are signing the images &lt;code&gt;otel/opentelemetry-collector&lt;/code&gt; and &lt;code&gt;otel/opentelemetry-collector-contrib&lt;/code&gt; using &lt;a href="https://github.com/sigstore/cosign"&gt;sigstore cosign&lt;/a&gt; tool and to verify the signatures you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify \
  --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/&amp;lt;RELEASE_TAG&amp;gt; \
  --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
  &amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;RELEASE_TAG&amp;gt;&lt;/code&gt;: is the release that you want to validate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;&lt;/code&gt;: is the image that you want to check&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0 --certificate-oidc-issuer=https://token.actions.githubusercontent.com ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0

Verification for ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0 --
The following checks were performed on each of these signatures:
  - The cosign claims were validated
  - Existence of the claims in the transparency log was verified offline
  - The code-signing certificate was verified using trusted certificate authority certificates

[{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQDdlmNeKXQrHnonwWiHLhLLwFDVDNoOBCn2sv85J9P8mgIgDQFssWJImo1hn38VlojvSCL7Qq5FMmtnGu0oLsNdOm8=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FVUNJUURFbDV6N0diMWRVYkM5KzR4c1VvbDhMcWZNV2hiTzhkdEpwdExyMXhUNWZnSWdTdEwwN1I0ZDA5R2x0ZkV0azJVbmlJSlJhQVdrVDJNWDVtRXJNSlplc2pRPSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaG9ha05EUW5jeVowRjNTVUpCWjBsVlNETkNjRFZTYlVSU1VpOXphMWg0YVdWUFlrcFhSbmRrUjNNNGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJOTlZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkUwMVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVZyWlRsSE1ubHNjMjkzYVZZMmRFOVZSazlRVVhNd2NXY3hTSEV5WmpsVUx6UTJZbEFLU1ZSNE0ybFRkVXBhV0hGc1dEUldWV2Q1VlZndmNVazJhblZ2WlZSVEswaG5XVUoyYjBseVNERTFUeTltZEd0VmVtRlBRMEpwZDNkbloxbHZUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZHTkRrMUNrdDFNRWhqTm5rek1rNUNTVTFFU21ReVpuWkxNMHBCZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwWjFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpoQ1NHOUJaVUZDTWtGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUlVOUlFVRkJVVVJCUldOM1VsRkpaMWg2Y2xaME0xQjRkU3ROWVZKRkswUkdORzlGUldNMGVucHphSGR1VDJ4bGMwZGlla2xwYnpNS0wxWmpRMGxSUkZNelJ6QmlNemRhYUhRNGFITjJUSEozYkc1UFFXYzJWRXh1U1ZSS09HTjNkMVEzTW5sMVRVdFlUbFJCUzBKblozRm9hMnBQVUZGUlJBcEJkMDV1UVVSQ2EwRnFRWGxFUkZSYVFqQlRPVXBGYkZsSGJuTnZWVmhLYm04MU5Fc3ZUVUZUTlN0RFFVMU9lbWRqUWpWQ2JrRk5OMWhNUjBoV01HRnhDbVpaY21weFkyOXFia3RaUTAxSFRWRnFjalpUVGt0Q2NVaEtZVGwxTDBSTlQySlpNa0pKTVV0ME4yTnhOemhFT0VOcVMzQmFVblJoYnpadFVVMUVZMk1LUms5M2VYWnhWalJPVld0dlpsRTlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809120,"logIndex":84797936,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}},{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQD1ehDnPO6fzoPIpeQ3KFuYHHBiX7RcEbpo9B2r7JAlzwIgZ1bsuQz7gAXbNU1IEdsTQgfAnRk3xVXO16GnKXM2sAQ=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FUUNJRU92QXl0aE5RVGNvNHFMdG9GZUVOV0toNCtEK2I5SUxyYWhoa09WMmVBM0FpQjNEL2FpUGd1T05zUlB5alhaWk1hdnlCam0vMkVxNFNUMkZJWHozTnpyYWc9PSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaHBSRU5EUW5jMlowRjNTVUpCWjBsVlZuRlRLMnd4WXpoMWVFUktOWEppZDAxMlVuaDBSR3hXVW1nMGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJSZVZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkZGNVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVYyWlRCdGJrRkdRVzl1TVZoUGRIVlRMMXBNT0djeE5YUlJkVmxPTmtRemVUUlBWM0FLT1ZSTFMwUlVkRkJHU2xST1ZrWlJkVTlKUWs1bVJqWk1ORTlGYkd4dlZuUndaSE5uYjB0NVZGTnlPR3hTV1c1S1JIRlBRMEpwTUhkbloxbHdUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZDSzFkSENuVmtlRE5IZUcxS1RWUkpUVVJyYW13clJtdzFXRzkzZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwZDFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpsQ1NITkJaVkZDTTBGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUjJKSlFVRkJVVVJCUldkM1VtZEphRUZQZUZNM2RteDRjVzVGYTBKVVRtSlZVRUpsUkZSbk0waGtlRlkyY0cxWk9FdGliREV6TjNBS1lWUnViMEZwUlVFelMyMUxVbU5uYWxBeVQzSmxORVpyVm5vNU4xaENNWGRsUzBOeWFXazFTMWx2UTB0bVkxRktSREJSZDBObldVbExiMXBKZW1vd1JRcEJkMDFFWVVGQmQxcFJTWGhCUzNwcVpHMUZTV2gzV21Kb1lVSlNlalk1Y1N0MWVrNVZSMmxhYlRWVk4xcE5aWFJMUTFSM1VFTkljRkZQVldvdlVERkJDa2R0YWt3elJucFFObTVpYkRGblNYZFNUbXN6UkhkNWMwOUJUMHhoUVVoR09IaHhZV0ZzT0U5WGNGRmFhRGh4TTJVMVNVSmFXR0ZWVkhocFlWbGFTM29LUXpWS1RGVlNWbnBMTURsd04wVjBUd290TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809122,"logIndex":84797940,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We started signing the images with release &lt;code&gt;v0.95.0&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;Here is a list of community roles with current and previous members:&lt;/p&gt; 
&lt;h3&gt;Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codeboten"&gt;Alex Boten&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BogdanDrutu"&gt;Bogdan Drutu&lt;/a&gt;, Snowflake&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmitryax"&gt;Dmitrii Anoshin&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mx-psi"&gt;Pablo Baeyens&lt;/a&gt;, DataDog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the maintainer role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#maintainer"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atoulme"&gt;Antoine Toulme&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmathieu"&gt;Damien Mathieu&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/evan-bradley"&gt;Evan Bradley&lt;/a&gt;, Dynatrace&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jade-guiton-dd"&gt;Jade Guiton&lt;/a&gt;, Datadog&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmacd"&gt;Joshua MacDonald&lt;/a&gt;, Microsoft&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TylerHelmuth"&gt;Tyler Helmuth&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songy23"&gt;Yang Song&lt;/a&gt;, Datadog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the approver role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#approver"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In addition to what is described at the organization-level, the SIG Collector requires all core approvers to take part in rotating the role of the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/release.md#release-manager"&gt;release manager&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrzej-stencel"&gt;Andrzej Stencel&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sincejune"&gt;Chao Weng&lt;/a&gt;, AppDynamics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VihasMakwana"&gt;Vihas Makwana&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;Actively seeking contributors to triage issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the triager role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#triager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pjanotti"&gt;Paulo Janotti&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tigrannajaryan"&gt;Tigran Najaryan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aneurysm9"&gt;Anthony Mirabella&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djaglowski"&gt;Daniel Jaglowski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bebbington"&gt;James Bebbington&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jrcamp"&gt;Jay Camp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jpkrohling"&gt;Juraci Paixão Kröhling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nilebox"&gt;Nail Islamov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owais"&gt;Owais Lone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rghetia"&gt;Rahul Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sjkaris"&gt;Steven Karis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alolita"&gt;Alolita Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewhsu"&gt;Andrew Hsu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/punya"&gt;Punya Biswal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flands"&gt;Steve Flanders&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Thanks to all of our contributors!&lt;/h3&gt; 
&lt;a href="https://github.com/open-telemetry/opentelemetry-collector/graphs/contributors"&gt; &lt;img alt="Repo contributors" src="https://contrib.rocks/image?repo=open-telemetry/opentelemetry-collector"&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>anchore/grype</title>
      <link>https://github.com/anchore/grype</link>
      <description>&lt;p&gt;A vulnerability scanner for container images and filesystems&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="Grype logo" src="https://user-images.githubusercontent.com/5199289/136855393-d0a9eef9-ccf1-4e2b-9d7c-7aad16a567e5.png" width="234"&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &amp;nbsp;&lt;a href="https://github.com/anchore/grype/actions?query=workflow%3A%22Static+Analysis+%2B+Unit+%2B+Integration%22"&gt;&lt;img src="https://github.com/anchore/grype/workflows/Static%20Analysis%20+%20Unit%20+%20Integration/badge.svg?sanitize=true" alt="Static Analysis + Unit + Integration"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://github.com/anchore/grype/actions/workflows/validations.yaml"&gt;&lt;img src="https://github.com/anchore/grype/workflows/Validations/badge.svg?sanitize=true" alt="Validations"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://goreportcard.com/report/github.com/anchore/grype"&gt;&lt;img src="https://goreportcard.com/badge/github.com/anchore/grype" alt="Go Report Card"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://github.com/anchore/grype/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/anchore/grype.svg?sanitize=true" alt="GitHub release"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://github.com/anchore/grype"&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/anchore/grype.svg?sanitize=true" alt="GitHub go.mod Go version"&gt;&lt;/a&gt;&amp;nbsp; &lt;br&gt; &amp;nbsp;&lt;a href="https://github.com/anchore/grype/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://anchore.com/discourse"&gt;&lt;img src="https://img.shields.io/badge/Discourse-Join-blue?logo=discourse" alt="Join our Discourse"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a rel="me" href="https://fosstodon.org/@grype"&gt;&lt;img src="https://img.shields.io/badge/Mastodon-Follow-blue?logoColor=white&amp;amp;logo=mastodon" alt="Follow on Mastodon"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://scorecard.dev/viewer/?uri=github.com/anchore/grype"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/anchore/grype/badge" alt="OpenSSF Scorecard"&gt;&lt;/a&gt;&amp;nbsp; &amp;nbsp;&lt;a href="https://www.bestpractices.dev/projects/6708"&gt;&lt;img src="https://www.bestpractices.dev/projects/6708/badge" alt="OpenSSF Best Practices"&gt;&lt;/a&gt;&amp;nbsp; &lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;A vulnerability scanner for container images and filesystems. Easily &lt;a href="https://raw.githubusercontent.com/anchore/grype/main/#installation"&gt;install the binary&lt;/a&gt; to try it out. Works with &lt;a href="https://github.com/anchore/syft"&gt;Syft&lt;/a&gt;, the powerful SBOM (software bill of materials) tool for container images and filesystems.&lt;/p&gt; 
&lt;h3&gt;Join our community meetings!&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Calendar: &lt;a href="https://calendar.google.com/calendar/u/0/r?cid=Y182OTM4dGt0MjRtajI0NnNzOThiaGtnM29qNEBncm91cC5jYWxlbmRhci5nb29nbGUuY29t"&gt;https://calendar.google.com/calendar/u/0/r?cid=Y182OTM4dGt0MjRtajI0NnNzOThiaGtnM29qNEBncm91cC5jYWxlbmRhci5nb29nbGUuY29t&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Agenda: &lt;a href="https://docs.google.com/document/d/1ZtSAa6fj2a6KRWviTn3WoJm09edvrNUp4Iz_dOjjyY8/edit?usp=sharing"&gt;https://docs.google.com/document/d/1ZtSAa6fj2a6KRWviTn3WoJm09edvrNUp4Iz_dOjjyY8/edit?usp=sharing&lt;/a&gt; (join &lt;a href="https://groups.google.com/g/anchore-oss-community"&gt;this group&lt;/a&gt; for write access)&lt;/li&gt; 
 &lt;li&gt;All are welcome!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For commercial support options with Syft or Grype, please &lt;a href="https://get.anchore.com/contact/"&gt;contact Anchore&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/590471/90276236-9868f300-de31-11ea-8068-4268b6b68529.gif" alt="grype-demo"&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Scan the contents of a container image or filesystem to find known vulnerabilities.&lt;/li&gt; 
 &lt;li&gt;Find vulnerabilities for major operating system packages: 
  &lt;ul&gt; 
   &lt;li&gt;Alpine&lt;/li&gt; 
   &lt;li&gt;Amazon Linux&lt;/li&gt; 
   &lt;li&gt;Azure Linux (previously CBL-Mariner)&lt;/li&gt; 
   &lt;li&gt;BusyBox&lt;/li&gt; 
   &lt;li&gt;CentOS&lt;/li&gt; 
   &lt;li&gt;Debian&lt;/li&gt; 
   &lt;li&gt;Echo&lt;/li&gt; 
   &lt;li&gt;Distroless&lt;/li&gt; 
   &lt;li&gt;MinimOS&lt;/li&gt; 
   &lt;li&gt;Oracle Linux&lt;/li&gt; 
   &lt;li&gt;Red Hat (RHEL)&lt;/li&gt; 
   &lt;li&gt;Ubuntu&lt;/li&gt; 
   &lt;li&gt;Wolfi&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Find vulnerabilities for language-specific packages: 
  &lt;ul&gt; 
   &lt;li&gt;Ruby (Gems)&lt;/li&gt; 
   &lt;li&gt;Java (JAR, WAR, EAR, JPI, HPI)&lt;/li&gt; 
   &lt;li&gt;JavaScript (NPM, Yarn)&lt;/li&gt; 
   &lt;li&gt;Python (Egg, Wheel, Poetry, requirements.txt/setup.py files)&lt;/li&gt; 
   &lt;li&gt;Dotnet (deps.json)&lt;/li&gt; 
   &lt;li&gt;Golang (go.mod)&lt;/li&gt; 
   &lt;li&gt;PHP (Composer)&lt;/li&gt; 
   &lt;li&gt;Rust (Cargo)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Supports Docker, OCI and &lt;a href="https://github.com/sylabs/singularity"&gt;Singularity&lt;/a&gt; image formats.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/openvex"&gt;OpenVEX&lt;/a&gt; support for filtering and augmenting scanning results.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you encounter an issue, please &lt;a href="https://github.com/anchore/grype/issues"&gt;let us know using the issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Recommended&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Install script options:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: Specify a custom installation directory (defaults to &lt;code&gt;./bin&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: More verbose logging levels (&lt;code&gt;-d&lt;/code&gt; for debug, &lt;code&gt;-dd&lt;/code&gt; for trace)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: Verify the signature of the downloaded artifact before installation (requires &lt;a href="https://github.com/sigstore/cosign"&gt;&lt;code&gt;cosign&lt;/code&gt;&lt;/a&gt; to be installed)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Chocolatey&lt;/h3&gt; 
&lt;p&gt;The chocolatey distribution of grype is community-maintained and not distributed by the anchore team.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;choco install grype -y
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew tap anchore/grype
brew install grype
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MacPorts&lt;/h3&gt; 
&lt;p&gt;On macOS, Grype can additionally be installed from the &lt;a href="https://ports.macports.org/port/grype/"&gt;community-maintained port&lt;/a&gt; via MacPorts:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo port install grype
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Currently, Grype is built only for macOS and Linux.&lt;/p&gt; 
&lt;h3&gt;From source&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/anchore/grype/main/DEVELOPING.md#native-development"&gt;DEVELOPING.md&lt;/a&gt; for instructions to build and run from source.&lt;/p&gt; 
&lt;h3&gt;GitHub Actions&lt;/h3&gt; 
&lt;p&gt;If you're using GitHub Actions, you can use our &lt;a href="https://github.com/marketplace/actions/anchore-container-scan"&gt;Grype-based action&lt;/a&gt; to run vulnerability scans on your code or container images during your CI workflows.&lt;/p&gt; 
&lt;h2&gt;Verifying the artifacts&lt;/h2&gt; 
&lt;p&gt;Checksums are applied to all artifacts, and the resulting checksum file is signed using cosign.&lt;/p&gt; 
&lt;p&gt;You need the following tool to verify signature:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;Cosign&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Verification steps are as follow:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the files you want, and the checksums.txt, checksums.txt.pem and checksums.txt.sig files from the &lt;a href="https://github.com/anchore/grype/releases"&gt;releases&lt;/a&gt; page:&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Verify the signature:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cosign verify-blob &amp;lt;path to checksum.txt&amp;gt; \
--certificate &amp;lt;path to checksums.txt.pem&amp;gt; \
--signature &amp;lt;path to checksums.txt.sig&amp;gt; \
--certificate-identity-regexp 'https://github\.com/anchore/grype/\.github/workflows/.+' \
--certificate-oidc-issuer "https://token.actions.githubusercontent.com"
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;Once the signature is confirmed as valid, you can proceed to validate that the SHA256 sums align with the downloaded artifact:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sha256sum --ignore-missing -c checksums.txt
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/anchore/grype/main/#installation"&gt;Install the binary&lt;/a&gt;, and make sure that &lt;code&gt;grype&lt;/code&gt; is available in your path. To scan for vulnerabilities in an image:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;grype &amp;lt;image&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The above command scans for vulnerabilities visible in the container (i.e., the squashed representation of the image). To include software from all image layers in the vulnerability scan, regardless of its presence in the final image, provide &lt;code&gt;--scope all-layers&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;grype &amp;lt;image&amp;gt; --scope all-layers
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run grype from a Docker container so it can scan a running container, use the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yml"&gt;docker run --rm \
--volume /var/run/docker.sock:/var/run/docker.sock \
--name Grype anchore/grype:latest \
$(ImageName):$(ImageTag)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Supported sources&lt;/h2&gt; 
&lt;p&gt;Grype can scan a variety of sources beyond those found in Docker.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# scan a container image archive (from the result of `docker image save ...`, `podman save ...`, or `skopeo copy` commands)
grype path/to/image.tar

# scan a Singularity Image Format (SIF) container
grype path/to/image.sif

# scan a directory
grype dir:path/to/dir
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Sources can be explicitly provided with a scheme:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;podman:yourrepo/yourimage:tag          use images from the Podman daemon
docker:yourrepo/yourimage:tag          use images from the Docker daemon
docker-archive:path/to/yourimage.tar   use a tarball from disk for archives created from "docker save"
oci-archive:path/to/yourimage.tar      use a tarball from disk for OCI archives (from Skopeo or otherwise)
oci-dir:path/to/yourimage              read directly from a path on disk for OCI layout directories (from Skopeo or otherwise)
singularity:path/to/yourimage.sif      read directly from a Singularity Image Format (SIF) container on disk
dir:path/to/yourproject                read directly from a path on disk (any directory)
file:path/to/yourfile                  read directly from a file on disk
sbom:path/to/syft.json                 read Syft JSON from path on disk
registry:yourrepo/yourimage:tag        pull image directly from a registry (no container runtime required)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If an image source is not provided and cannot be detected from the given reference it is assumed the image should be pulled from the Docker daemon. If docker is not present, then the Podman daemon is attempted next, followed by reaching out directly to the image registry last.&lt;/p&gt; 
&lt;p&gt;This default behavior can be overridden with the &lt;code&gt;default-image-pull-source&lt;/code&gt; configuration option (See &lt;a href="https://github.com/anchore/grype#configuration"&gt;Configuration&lt;/a&gt; for more details).&lt;/p&gt; 
&lt;p&gt;Use SBOMs for even faster vulnerability scanning in Grype:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Then scan for new vulnerabilities as frequently as needed
grype sbom:./sbom.json

# (You can also pipe the SBOM into Grype)
cat ./sbom.json | grype
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Grype supports input of &lt;a href="https://github.com/anchore/syft"&gt;Syft&lt;/a&gt;, &lt;a href="https://spdx.dev/"&gt;SPDX&lt;/a&gt;, and &lt;a href="https://cyclonedx.org/"&gt;CycloneDX&lt;/a&gt; SBOM formats. If Syft has generated any of these file types, they should have the appropriate information to work properly with Grype. It is also possible to use SBOMs generated by other tools with varying degrees of success. Two things that make Grype matching more successful are the inclusion of CPE and Linux distribution information. If an SBOM does not include any CPE information, it is possible to generate these based on package information using the &lt;code&gt;--add-cpes-if-none&lt;/code&gt; flag. To specify a distribution, use the &lt;code&gt;--distro &amp;lt;distro&amp;gt;:&amp;lt;version&amp;gt;&lt;/code&gt; flag. A full example is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;grype --add-cpes-if-none --distro alpine:3.10 sbom:some-alpine-3.10.spdx.json
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Threat &amp;amp; Risk Prioritization&lt;/h2&gt; 
&lt;p&gt;This section explains the columns and UI cues that help prioritize remediation efforts:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Severity&lt;/strong&gt;: String severity based on CVSS scores and indicate the significance of a vulnerability in levels. This balances concerns such as ease of exploitability, and the potential to affect confidentiality, integrity, and availability of software and services.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;EPSS&lt;/strong&gt;: &lt;a href="https://www.first.org/epss/model"&gt;Exploit Prediction Scoring System&lt;/a&gt; is a metric expressing the likelihood that a vulnerability will be exploited in the wild over the next 30 days (on a 0–1 scale); higher values signal a greater likelihood of exploitation. The table output shows the EPSS percentile, a one-way transform of the EPSS score showing the proportion of all scored vulnerabilities with an equal or lower probability. Percentiles linearize a heavily skewed distribution, making threshold choice (e.g. “only CVEs above the 90th percentile”) straightforward.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;KEV Indicator&lt;/strong&gt;: Flags entries from CISA’s &lt;a href="https://www.cisa.gov/known-exploited-vulnerabilities-catalog"&gt;Known Exploited Vulnerabilities Catalog&lt;/a&gt; --an authoritative list of flaws observed being exploited in the wild.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Risk Score&lt;/strong&gt;: A composite 0–100 metric calculated as:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-markdown"&gt;risk = min(1, threat * average(severity)) * 100
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Where:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;severity&lt;/code&gt; is the average of all CVSS scores and string severity for a vulnerability (scaled between 0–1).&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;threat&lt;/code&gt; is the EPSS score (between 0–1). If the vulnerability is on the KEV list then &lt;code&gt;threat&lt;/code&gt; is &lt;code&gt;1.05&lt;/code&gt;, or &lt;code&gt;1.1&lt;/code&gt; if the vulnerability is associated with a ransomware campaign. This metric is one way to combine EPSS and CVSS suggested in the &lt;a href="https://www.first.org/epss/user-guide"&gt;EPSS user guide&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Suggested Fixes&lt;/strong&gt;: All possible fixes for a package are listed, however, when multiple fixes are available, we de-emphasize all upgrade paths except for the minimal upgrade path (which highlights the smallest, safest version bump).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Results default to sorting by Risk Score and can be overridden with &lt;code&gt;--sort-by &amp;lt;value&amp;gt;&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;severity&lt;/code&gt;: sort by severity&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;epss&lt;/code&gt;: sort by EPSS percentile (aka, "threat")&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;risk&lt;/code&gt;: sort by risk score&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;kev&lt;/code&gt;: just like risk, except that KEV entries are always above non-KEV entries&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;package&lt;/code&gt;: sort by package name, version, type&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vulnerability&lt;/code&gt;: sort by vulnerability ID&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Supported versions&lt;/h3&gt; 
&lt;p&gt;Software updates are always applied to the latest version of Grype; fixes are not backported to any previous versions of Grype.&lt;/p&gt; 
&lt;p&gt;In terms of database updates, any version of Grype before v0.51.0 (Oct 2022, before schema v5) will not receive vulnerability database updates. You can still build vulnerability databases for unsupported Grype releases by using previous releases of &lt;a href="https://github.com/anchore/vunnel"&gt;vunnel&lt;/a&gt; to gather the upstream data and &lt;a href="https://github.com/anchore/grype-db"&gt;grype-db&lt;/a&gt; to build databases for unsupported schemas.&lt;/p&gt; 
&lt;p&gt;Only the latest database schema is considered to be supported. When a new database schema is introduced then the one it replaces is marked as deprecated. Deprecated schemas will continue to receive updates for at least one year after they are marked as deprecated at which point they will no longer be supported.&lt;/p&gt; 
&lt;h3&gt;Working with attestations&lt;/h3&gt; 
&lt;p&gt;Grype supports scanning SBOMs as input via stdin. Users can use &lt;a href="https://github.com/sigstore/cosign"&gt;cosign&lt;/a&gt; to verify attestations with an SBOM as its content to scan an image for vulnerabilities:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;COSIGN_EXPERIMENTAL=1 cosign verify-attestation caphill4/java-spdx-tools:latest \
| jq -r .payload \
| base64 --decode \
| jq -r .predicate.Data \
| grype
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Vulnerability Summary&lt;/h3&gt; 
&lt;h4&gt;Basic Grype Vulnerability Data Shape&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt; {
  "vulnerability": {
    ...
  },
  "relatedVulnerabilities": [
    ...
  ],
  "matchDetails": [
    ...
  ],
  "artifact": {
    ...
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Vulnerability&lt;/strong&gt;: All information on the specific vulnerability that was directly matched on (e.g. ID, severity, CVSS score, fix information, links for more information)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RelatedVulnerabilities&lt;/strong&gt;: Information pertaining to vulnerabilities found to be related to the main reported vulnerability. Maybe the vulnerability we matched on was a GitHub Security Advisory, which has an upstream CVE (in the authoritative national vulnerability database). In these cases we list the upstream vulnerabilities here.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MatchDetails&lt;/strong&gt;: This section tries to explain what we searched for while looking for a match and exactly what details on the package and vulnerability that lead to a match.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Artifact&lt;/strong&gt;: This is a subset of the information that we know about the package (when compared to the &lt;a href="https://github.com/anchore/syft"&gt;Syft&lt;/a&gt; json output, we summarize the metadata section). This has information about where within the container image or directory we found the package, what kind of package it is, licensing info, pURLs, CPEs, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Excluding file paths&lt;/h3&gt; 
&lt;p&gt;Grype can exclude files and paths from being scanned within a source by using glob expressions with one or more &lt;code&gt;--exclude&lt;/code&gt; parameters:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;grype &amp;lt;source&amp;gt; --exclude './out/**/*.json' --exclude /etc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; in the case of &lt;em&gt;image scanning&lt;/em&gt;, since the entire filesystem is scanned it is possible to use absolute paths like &lt;code&gt;/etc&lt;/code&gt; or &lt;code&gt;/usr/**/*.txt&lt;/code&gt; whereas &lt;em&gt;directory scans&lt;/em&gt; exclude files &lt;em&gt;relative to the specified directory&lt;/em&gt;. For example: scanning &lt;code&gt;/usr/foo&lt;/code&gt; with &lt;code&gt;--exclude ./package.json&lt;/code&gt; would exclude &lt;code&gt;/usr/foo/package.json&lt;/code&gt; and &lt;code&gt;--exclude '**/package.json'&lt;/code&gt; would exclude all &lt;code&gt;package.json&lt;/code&gt; files under &lt;code&gt;/usr/foo&lt;/code&gt;. For &lt;em&gt;directory scans&lt;/em&gt;, it is required to begin path expressions with &lt;code&gt;./&lt;/code&gt;, &lt;code&gt;*/&lt;/code&gt;, or &lt;code&gt;**/&lt;/code&gt;, all of which will be resolved &lt;em&gt;relative to the specified scan directory&lt;/em&gt;. Keep in mind, your shell may attempt to expand wildcards, so put those parameters in single quotes, like: &lt;code&gt;'**/*.json'&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;External Sources&lt;/h3&gt; 
&lt;p&gt;Grype can be configured to incorporate external data sources for added fidelity in vulnerability matching. This feature is currently disabled by default. To enable this feature add the following to the grype config:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;external-sources:
  enable: true
  maven:
    search-upstream-by-sha1: true
    base-url: https://search.maven.org/solrsearch/select
    rate-limit: 300ms # Time between Maven API requests
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also configure the base-url if you're using another registry as your maven endpoint.&lt;/p&gt; 
&lt;p&gt;The rate at which Maven API requests are made can be configured to match your environment's requirements. The default is 300ms between requests.&lt;/p&gt; 
&lt;h3&gt;Output formats&lt;/h3&gt; 
&lt;p&gt;The output format for Grype is configurable as well:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;grype &amp;lt;image&amp;gt; -o &amp;lt;format&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Where the formats available are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;table&lt;/code&gt;: A columnar summary (default).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cyclonedx&lt;/code&gt;: An XML report conforming to the &lt;a href="https://cyclonedx.org/specification/overview/"&gt;CycloneDX 1.6 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cyclonedx-json&lt;/code&gt;: A JSON report conforming to the &lt;a href="https://cyclonedx.org/specification/overview/"&gt;CycloneDX 1.6 specification&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;json&lt;/code&gt;: Use this to get as much information out of Grype as possible!&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;sarif&lt;/code&gt;: Use this option to get a &lt;a href="https://docs.oasis-open.org/sarif/sarif/v2.1.0/sarif-v2.1.0.html"&gt;SARIF&lt;/a&gt; report (Static Analysis Results Interchange Format)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;template&lt;/code&gt;: Lets the user specify the output format. See &lt;a href="https://raw.githubusercontent.com/anchore/grype/main/#using-templates"&gt;"Using templates"&lt;/a&gt; below.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Using templates&lt;/h3&gt; 
&lt;p&gt;Grype lets you define custom output formats, using &lt;a href="https://golang.org/pkg/text/template/"&gt;Go templates&lt;/a&gt;. Here's how it works:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Define your format as a Go template, and save this template as a file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Set the output format to "template" (&lt;code&gt;-o template&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Specify the path to the template file (&lt;code&gt;-t ./path/to/custom.template&lt;/code&gt;).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Grype's template processing uses the same data models as the &lt;code&gt;json&lt;/code&gt; output format — so if you're wondering what data is available as you author a template, you can use the output from &lt;code&gt;grype &amp;lt;image&amp;gt; -o json&lt;/code&gt; as a reference.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Please note:&lt;/strong&gt; Templates can access information about the system they are running on, such as environment variables. You should never run untrusted templates.&lt;/p&gt; 
&lt;p&gt;There are several example templates in the &lt;a href="https://github.com/anchore/grype/tree/main/templates"&gt;templates&lt;/a&gt; directory in the Grype source which can serve as a starting point for a custom output format. For example, &lt;a href="https://github.com/anchore/grype/raw/main/templates/csv.tmpl"&gt;csv.tmpl&lt;/a&gt; produces a vulnerability report in CSV (comma separated value) format:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;"Package","Version Installed","Vulnerability ID","Severity"
"coreutils","8.30-3ubuntu2","CVE-2016-2781","Low"
"libc-bin","2.31-0ubuntu9","CVE-2016-10228","Negligible"
"libc-bin","2.31-0ubuntu9","CVE-2020-6096","Low"
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also find the template for the default "table" output format in the same place.&lt;/p&gt; 
&lt;p&gt;Grype also includes a vast array of utility templating functions from &lt;a href="http://masterminds.github.io/sprig/"&gt;sprig&lt;/a&gt; apart from the default golang &lt;a href="https://pkg.go.dev/text/template#hdr-Functions"&gt;text/template&lt;/a&gt; to allow users to customize the output from Grype.&lt;/p&gt; 
&lt;h3&gt;Gating on severity of vulnerabilities&lt;/h3&gt; 
&lt;p&gt;You can have Grype exit with an error if any vulnerabilities are reported at or above the specified severity level. This comes in handy when using Grype within a script or CI pipeline. To do this, use the &lt;code&gt;--fail-on &amp;lt;severity&amp;gt;&lt;/code&gt; CLI flag.&lt;/p&gt; 
&lt;p&gt;For example, here's how you could trigger a CI pipeline failure if any vulnerabilities are found in the &lt;code&gt;ubuntu:latest&lt;/code&gt; image with a severity of "medium" or higher:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;grype ubuntu:latest --fail-on medium
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Grype returns exit code &lt;code&gt;2&lt;/code&gt; on vulnerability errors.&lt;/p&gt; 
&lt;h3&gt;Specifying matches to ignore&lt;/h3&gt; 
&lt;p&gt;If you're seeing Grype report &lt;strong&gt;false positives&lt;/strong&gt; or any other vulnerability matches that you just don't want to see, you can tell Grype to &lt;strong&gt;ignore&lt;/strong&gt; matches by specifying one or more &lt;em&gt;"ignore rules"&lt;/em&gt; in your Grype configuration file (e.g. &lt;code&gt;~/.grype.yaml&lt;/code&gt;). This causes Grype not to report any vulnerability matches that meet the criteria specified by any of your ignore rules.&lt;/p&gt; 
&lt;p&gt;Each rule can specify any combination of the following criteria:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;vulnerability ID (e.g. &lt;code&gt;"CVE-2008-4318"&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;namespace (e.g. &lt;code&gt;"nvd"&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;fix state (allowed values: &lt;code&gt;"fixed"&lt;/code&gt;, &lt;code&gt;"not-fixed"&lt;/code&gt;, &lt;code&gt;"wont-fix"&lt;/code&gt;, or &lt;code&gt;"unknown"&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;package name (e.g. &lt;code&gt;"libcurl"&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;package version (e.g. &lt;code&gt;"1.5.1"&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;package language (e.g. &lt;code&gt;"python"&lt;/code&gt;; these values are defined &lt;a href="https://github.com/anchore/syft/raw/main/syft/pkg/language.go#L14-L23"&gt;here&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;package type (e.g. &lt;code&gt;"npm"&lt;/code&gt;; these values are defined &lt;a href="https://github.com/anchore/syft/raw/main/syft/pkg/type.go#L10-L24"&gt;here&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;package location (e.g. &lt;code&gt;"/usr/local/lib/node_modules/**"&lt;/code&gt;; supports glob patterns)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here's an example &lt;code&gt;~/.grype.yaml&lt;/code&gt; that demonstrates the expected format for ignore rules:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;ignore:
  # This is the full set of supported rule fields:
  - vulnerability: CVE-2008-4318
    fix-state: unknown
    # VEX fields apply when Grype reads vex data:
    vex-status: not_affected
    vex-justification: vulnerable_code_not_present
    package:
      name: libcurl
      version: 1.5.1
      type: npm
      location: "/usr/local/lib/node_modules/**"

  # We can make rules to match just by vulnerability ID:
  - vulnerability: CVE-2014-54321

  # ...or just by a single package field:
  - package:
      type: gem
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Vulnerability matches will be ignored if &lt;strong&gt;any&lt;/strong&gt; rules apply to the match. A rule is considered to apply to a given vulnerability match only if &lt;strong&gt;all&lt;/strong&gt; fields specified in the rule apply to the vulnerability match.&lt;/p&gt; 
&lt;p&gt;When you run Grype while specifying ignore rules, the following happens to the vulnerability matches that are "ignored":&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ignored matches are &lt;strong&gt;completely hidden&lt;/strong&gt; from Grype's output, except for when using the &lt;code&gt;json&lt;/code&gt; or &lt;code&gt;template&lt;/code&gt; output formats; however, in these two formats, the ignored matches are &lt;strong&gt;removed&lt;/strong&gt; from the existing &lt;code&gt;matches&lt;/code&gt; array field, and they are placed in a new &lt;code&gt;ignoredMatches&lt;/code&gt; array field. Each listed ignored match also has an additional field, &lt;code&gt;appliedIgnoreRules&lt;/code&gt;, which is an array of any rules that caused Grype to ignore this vulnerability match.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Ignored matches &lt;strong&gt;do not&lt;/strong&gt; factor into Grype's exit status decision when using &lt;code&gt;--fail-on &amp;lt;severity&amp;gt;&lt;/code&gt;. For instance, if a user specifies &lt;code&gt;--fail-on critical&lt;/code&gt;, and all of the vulnerability matches found with a "critical" severity have been &lt;em&gt;ignored&lt;/em&gt;, Grype will exit zero.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please continue to &lt;strong&gt;&lt;a href="https://github.com/anchore/grype/issues/new/choose"&gt;report&lt;/a&gt;&lt;/strong&gt; any false positives you see! Even if you can reliably filter out false positives using ignore rules, it's very helpful to the Grype community if we have as much knowledge about Grype's false positives as possible. This helps us continuously improve Grype!&lt;/p&gt; 
&lt;h3&gt;Showing only "fixed" vulnerabilities&lt;/h3&gt; 
&lt;p&gt;If you only want Grype to report vulnerabilities &lt;strong&gt;that have a confirmed fix&lt;/strong&gt;, you can use the &lt;code&gt;--only-fixed&lt;/code&gt; flag. (This automatically adds &lt;a href="https://raw.githubusercontent.com/anchore/grype/main/#specifying-matches-to-ignore"&gt;ignore rules&lt;/a&gt; into Grype's configuration, such that vulnerabilities that aren't fixed will be ignored.)&lt;/p&gt; 
&lt;p&gt;For example, here's a scan of Alpine 3.10:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NAME          INSTALLED  FIXED-IN   VULNERABILITY   SEVERITY
apk-tools     2.10.6-r0  2.10.7-r0  CVE-2021-36159  Critical
libcrypto1.1  1.1.1k-r0             CVE-2021-3711   Critical
libcrypto1.1  1.1.1k-r0             CVE-2021-3712   High
libssl1.1     1.1.1k-r0             CVE-2021-3712   High
libssl1.1     1.1.1k-r0             CVE-2021-3711   Critical
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;...and here's the same scan, but adding the flag &lt;code&gt;--only-fixed&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;NAME       INSTALLED  FIXED-IN   VULNERABILITY   SEVERITY
apk-tools  2.10.6-r0  2.10.7-r0  CVE-2021-36159  Critical
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want Grype to only report vulnerabilities &lt;strong&gt;that do not have a confirmed fix&lt;/strong&gt;, you can use the &lt;code&gt;--only-notfixed&lt;/code&gt; flag. Alternatively, you can use the &lt;code&gt;--ignore-states&lt;/code&gt; flag to filter results for vulnerabilities with specific states such as &lt;code&gt;wont-fix&lt;/code&gt; (see &lt;code&gt;--help&lt;/code&gt; for a list of valid fix states). These flags automatically add &lt;a href="https://raw.githubusercontent.com/anchore/grype/main/#specifying-matches-to-ignore"&gt;ignore rules&lt;/a&gt; into Grype's configuration, such that vulnerabilities which are fixed, or will not be fixed, will be ignored.&lt;/p&gt; 
&lt;h2&gt;VEX Support&lt;/h2&gt; 
&lt;p&gt;Grype can use VEX (Vulnerability Exploitability Exchange) data to filter false positives or provide additional context, augmenting matches. When scanning a container image, you can use the &lt;code&gt;--vex&lt;/code&gt; flag to point to one or more &lt;a href="https://github.com/openvex"&gt;OpenVEX&lt;/a&gt; documents.&lt;/p&gt; 
&lt;p&gt;VEX statements relate a product (a container image), a vulnerability, and a VEX status to express an assertion of the vulnerability's impact. There are four &lt;a href="https://github.com/openvex/spec/raw/main/OPENVEX-SPEC.md#status-labels"&gt;VEX statuses&lt;/a&gt;: &lt;code&gt;not_affected&lt;/code&gt;, &lt;code&gt;affected&lt;/code&gt;, &lt;code&gt;fixed&lt;/code&gt; and &lt;code&gt;under_investigation&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Here is an example of a simple OpenVEX document. (tip: use &lt;a href="https://github.com/openvex/vexctl"&gt;&lt;code&gt;vexctl&lt;/code&gt;&lt;/a&gt; to generate your own documents).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "@context": "https://openvex.dev/ns/v0.2.0",
  "@id": "https://openvex.dev/docs/public/vex-d4e9020b6d0d26f131d535e055902dd6ccf3e2088bce3079a8cd3588a4b14c78",
  "author": "A Grype User &amp;lt;jdoe@example.com&amp;gt;",
  "timestamp": "2023-07-17T18:28:47.696004345-06:00",
  "version": 1,
  "statements": [
    {
      "vulnerability": {
        "name": "CVE-2023-1255"
      },
      "products": [
        {
          "@id": "pkg:oci/alpine@sha256%3A124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126",
          "subcomponents": [
            { "@id": "pkg:apk/alpine/libssl3@3.0.8-r3" },
            { "@id": "pkg:apk/alpine/libcrypto3@3.0.8-r3" }
          ]
        }
      ],
      "status": "fixed"
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, Grype will use any statements in specified VEX documents with a status of &lt;code&gt;not_affected&lt;/code&gt; or &lt;code&gt;fixed&lt;/code&gt; to move matches to the ignore set.&lt;/p&gt; 
&lt;p&gt;Any matches ignored as a result of VEX statements are flagged when using &lt;code&gt;--show-suppressed&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;libcrypto3  3.0.8-r3   3.0.8-r4   apk   CVE-2023-1255  Medium (suppressed by VEX)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Statements with an &lt;code&gt;affected&lt;/code&gt; or &lt;code&gt;under_investigation&lt;/code&gt; status will only be considered to augment the result set when specifically requested using the &lt;code&gt;GRYPE_VEX_ADD&lt;/code&gt; environment variable or in a configuration file.&lt;/p&gt; 
&lt;h3&gt;VEX Ignore Rules&lt;/h3&gt; 
&lt;p&gt;Ignore rules can be written to control how Grype honors VEX statements. For example, to configure Grype to only act on VEX statements when the justification is &lt;code&gt;vulnerable_code_not_present&lt;/code&gt;, you can write a rule like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;---
ignore:
  - vex-status: not_affected
    vex-justification: vulnerable_code_not_present
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/openvex/spec/raw/main/OPENVEX-SPEC.md#status-justifications"&gt;list of justifications&lt;/a&gt; for details. You can mix &lt;code&gt;vex-status&lt;/code&gt; and &lt;code&gt;vex-justification&lt;/code&gt; with other ignore rule parameters.&lt;/p&gt; 
&lt;h2&gt;Grype's database&lt;/h2&gt; 
&lt;p&gt;When Grype performs a scan for vulnerabilities, it does so using a vulnerability database that's stored on your local filesystem, which is constructed by pulling data from a variety of publicly available vulnerability data sources. These sources include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alpine Linux SecDB: &lt;a href="https://secdb.alpinelinux.org/"&gt;https://secdb.alpinelinux.org/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon Linux ALAS: &lt;a href="https://alas.aws.amazon.com/AL2/alas.rss"&gt;https://alas.aws.amazon.com/AL2/alas.rss&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chainguard SecDB: &lt;a href="https://packages.cgr.dev/chainguard/security.json"&gt;https://packages.cgr.dev/chainguard/security.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Debian Linux CVE Tracker: &lt;a href="https://security-tracker.debian.org/tracker/data/json"&gt;https://security-tracker.debian.org/tracker/data/json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Echo Security Advisories: &lt;a href="https://advisory.echohq.com/data.json"&gt;https://advisory.echohq.com/data.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GitHub Security Advisories (GHSAs): &lt;a href="https://github.com/advisories"&gt;https://github.com/advisories&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MinimOS SecDB: &lt;a href="https://packages.mini.dev/advisories/secdb/security.json"&gt;https://packages.mini.dev/advisories/secdb/security.json&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;National Vulnerability Database (NVD): &lt;a href="https://nvd.nist.gov/vuln/data-feeds"&gt;https://nvd.nist.gov/vuln/data-feeds&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Oracle Linux OVAL: &lt;a href="https://linux.oracle.com/security/oval/"&gt;https://linux.oracle.com/security/oval/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;RedHat Linux Security Data: &lt;a href="https://access.redhat.com/hydra/rest/securitydata/"&gt;https://access.redhat.com/hydra/rest/securitydata/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;RedHat RHSAs: &lt;a href="https://www.redhat.com/security/data/oval/"&gt;https://www.redhat.com/security/data/oval/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SUSE Linux OVAL: &lt;a href="https://ftp.suse.com/pub/projects/security/oval/"&gt;https://ftp.suse.com/pub/projects/security/oval/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ubuntu Linux Security: &lt;a href="https://people.canonical.com/~ubuntu-security/"&gt;https://people.canonical.com/~ubuntu-security/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wolfi SecDB: &lt;a href="https://packages.wolfi.dev/os/security.json"&gt;https://packages.wolfi.dev/os/security.json&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By default, Grype automatically manages this database for you. Grype checks for new updates to the vulnerability database to make sure that every scan uses up-to-date vulnerability information. This behavior is configurable. For more information, see the &lt;a href="https://raw.githubusercontent.com/anchore/grype/main/#managing-grypes-database"&gt;Managing Grype's database&lt;/a&gt; section.&lt;/p&gt; 
&lt;h3&gt;How database updates work&lt;/h3&gt; 
&lt;p&gt;Grype's vulnerability database is a SQLite file, named &lt;code&gt;vulnerability.db&lt;/code&gt;. Updates to the database are atomic: the entire database is replaced and then treated as "readonly" by Grype.&lt;/p&gt; 
&lt;p&gt;Grype's first step in a database update is discovering databases that are available for retrieval. Grype does this by requesting a "latest database file" from a public endpoint:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://grype.anchore.io/databases/v6/latest.json"&gt;https://grype.anchore.io/databases/v6/latest.json&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The latest database file contains an entry for the most recent database available for download.&lt;/p&gt; 
&lt;p&gt;Here's an example of an entry in the latest database file:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "status": "active",
  "schemaVersion": "6.0.0",
  "built": "2025-02-11T04:06:41Z",
  "path": "vulnerability-db_v6.0.0_2025-02-11T01:30:51Z_1739246801.tar.zst",
  "checksum": "sha256:79bfa04265c5a32d21773ad0da1bda13c31e932fa1e1422db635c8d714038868"
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With this information, Grype can find the most recently built database with the current schema version, download the database, and verify the database's integrity using the &lt;code&gt;checksum&lt;/code&gt; value.&lt;/p&gt; 
&lt;h3&gt;Managing Grype's database&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; During normal usage, &lt;em&gt;there is no need for users to manage Grype's database!&lt;/em&gt; Grype manages its database behind the scenes. However, for users that need more control, Grype provides options to manage the database more explicitly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Local database cache directory&lt;/h4&gt; 
&lt;p&gt;By default, the database is cached on the local filesystem in the directory &lt;code&gt;$XDG_CACHE_HOME/grype/db/&amp;lt;SCHEMA-VERSION&amp;gt;/&lt;/code&gt;. For example, on macOS, the database would be stored in &lt;code&gt;~/Library/Caches/grype/db/6/&lt;/code&gt;. (For more information on XDG paths, refer to the &lt;a href="https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html"&gt;XDG Base Directory Specification&lt;/a&gt;.)&lt;/p&gt; 
&lt;p&gt;You can set the cache directory path using the environment variable &lt;code&gt;GRYPE_DB_CACHE_DIR&lt;/code&gt;. If setting that variable alone does not work, then the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable might also need to be set.&lt;/p&gt; 
&lt;h4&gt;Data staleness&lt;/h4&gt; 
&lt;p&gt;Grype needs up-to-date vulnerability information to provide accurate matches. By default, it will fail execution if the local database was not built in the last 5 days. The data staleness check is configurable via the environment variable &lt;code&gt;GRYPE_DB_MAX_ALLOWED_BUILT_AGE&lt;/code&gt; and &lt;code&gt;GRYPE_DB_VALIDATE_AGE&lt;/code&gt; or the field &lt;code&gt;max-allowed-built-age&lt;/code&gt; and &lt;code&gt;validate-age&lt;/code&gt;, under &lt;code&gt;db&lt;/code&gt;. It uses &lt;a href="https://pkg.go.dev/time#ParseDuration"&gt;golang's time duration syntax&lt;/a&gt;. Set &lt;code&gt;GRYPE_DB_VALIDATE_AGE&lt;/code&gt; or &lt;code&gt;validate-age&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; to disable staleness check.&lt;/p&gt; 
&lt;h4&gt;Offline and air-gapped environments&lt;/h4&gt; 
&lt;p&gt;By default, Grype checks for a new database on every run, by making a network request over the internet. You can tell Grype not to perform this check by setting the environment variable &lt;code&gt;GRYPE_DB_AUTO_UPDATE&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;As long as you place Grype's &lt;code&gt;vulnerability.db&lt;/code&gt; and &lt;code&gt;import.json&lt;/code&gt; files in the cache directory for the expected schema version, Grype has no need to access the network. Additionally, you can get a reference to the latest database archive for download from the &lt;code&gt;grype db list&lt;/code&gt; command in an online environment, download the database archive, transfer it to your offline environment, and use &lt;code&gt;grype db import &amp;lt;db-archive-path&amp;gt;&lt;/code&gt; to use the given database in an offline capacity.&lt;/p&gt; 
&lt;p&gt;If you would like to distribute your own Grype databases internally without needing to use &lt;code&gt;db import&lt;/code&gt; manually you can leverage Grype's DB update mechanism. To do this you can craft your own &lt;code&gt;latest.json&lt;/code&gt; file similar to the public "latest database file" and change the download URL to point to an internal endpoint (e.g. a private S3 bucket, an internal file server, etc.). Any internal installation of Grype can receive database updates automatically by configuring the &lt;code&gt;db.update-url&lt;/code&gt; (same as the &lt;code&gt;GRYPE_DB_UPDATE_URL&lt;/code&gt; environment variable) to point to the hosted &lt;code&gt;latest.json&lt;/code&gt; file you've crafted.&lt;/p&gt; 
&lt;h4&gt;CLI commands for database management&lt;/h4&gt; 
&lt;p&gt;Grype provides database-specific CLI commands for users that want to control the database from the command line. Here are some of the useful commands provided:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grype db status&lt;/code&gt; — report the current status of Grype's database (such as its location, build date, and checksum)&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grype db check&lt;/code&gt; — see if updates are available for the database&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grype db update&lt;/code&gt; — ensure the latest database has been downloaded to the cache directory (Grype performs this operation at the beginning of every scan by default)&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grype db list&lt;/code&gt; — download the latest database file configured at &lt;code&gt;db.update-url&lt;/code&gt; and show the database available for download&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grype db import&lt;/code&gt; — provide grype with a database archive to explicitly use (useful for offline DB updates)&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grype db providers&lt;/code&gt; - provides a detailed list of database providers&lt;/p&gt; 
&lt;p&gt;Find complete information on Grype's database commands by running &lt;code&gt;grype db --help&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Shell completion&lt;/h2&gt; 
&lt;p&gt;Grype supplies shell completion through its CLI implementation (&lt;a href="https://github.com/spf13/cobra/raw/master/shell_completions.md"&gt;cobra&lt;/a&gt;). Generate the completion code for your shell by running one of the following commands:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;grype completion &amp;lt;bash|zsh|fish&amp;gt;&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;go run ./cmd/grype completion &amp;lt;bash|zsh|fish&amp;gt;&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This will output a shell script to STDOUT, which can then be used as a completion script for Grype. Running one of the above commands with the &lt;code&gt;-h&lt;/code&gt; or &lt;code&gt;--help&lt;/code&gt; flags will provide instructions on how to do that for your chosen shell.&lt;/p&gt; 
&lt;h2&gt;Private Registry Authentication&lt;/h2&gt; 
&lt;h3&gt;Local Docker Credentials&lt;/h3&gt; 
&lt;p&gt;When a container runtime is not present, grype can still utilize credentials configured in common credential sources (such as &lt;code&gt;~/.docker/config.json&lt;/code&gt;). It will pull images from private registries using these credentials. The config file is where your credentials are stored when authenticating with private registries via some command like &lt;code&gt;docker login&lt;/code&gt;. For more information see the &lt;code&gt;go-containerregistry&lt;/code&gt; &lt;a href="https://github.com/google/go-containerregistry/tree/main/pkg/authn"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;An example &lt;code&gt;config.json&lt;/code&gt; looks something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;// config.json
{
  "auths": {
    "registry.example.com": {
      "username": "AzureDiamond",
      "password": "hunter2"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run the following command as an example. It details the mount/environment configuration a container needs to access a private registry:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;docker run -v ./config.json:/config/config.json -e "DOCKER_CONFIG=/config" anchore/grype:latest &amp;lt;private_image&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Docker Credentials in Kubernetes&lt;/h3&gt; 
&lt;p&gt;The below section shows a simple workflow on how to mount this config file as a secret into a container on kubernetes.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a secret. The value of &lt;code&gt;config.json&lt;/code&gt; is important. It refers to the specification detailed &lt;a href="https://github.com/google/go-containerregistry/tree/main/pkg/authn#the-config-file"&gt;here&lt;/a&gt;. Below this section is the &lt;code&gt;secret.yaml&lt;/code&gt; file that the pod configuration will consume as a volume. The key &lt;code&gt;config.json&lt;/code&gt; is important. It will end up being the name of the file when mounted into the pod. &lt;pre&gt;&lt;code class="language-#"&gt;
    apiVersion: v1
    kind: Secret
    metadata:
      name: registry-config
      namespace: grype
    data:
      config.json: &amp;lt;base64 encoded config.json&amp;gt;
    ```

    `kubectl apply -f secret.yaml`

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Create your pod running grype. The env &lt;code&gt;DOCKER_CONFIG&lt;/code&gt; is important because it advertises where to look for the credential file. In the below example, setting &lt;code&gt;DOCKER_CONFIG=/config&lt;/code&gt; informs grype that credentials can be found at &lt;code&gt;/config/config.json&lt;/code&gt;. This is why we used &lt;code&gt;config.json&lt;/code&gt; as the key for our secret. When mounted into containers the secrets' key is used as the filename. The &lt;code&gt;volumeMounts&lt;/code&gt; section mounts our secret to &lt;code&gt;/config&lt;/code&gt;. The &lt;code&gt;volumes&lt;/code&gt; section names our volume and leverages the secret we created in step one. &lt;pre&gt;&lt;code class="language-#"&gt;
    apiVersion: v1
    kind: Pod
    spec:
      containers:
        - image: anchore/grype:latest
          name: grype-private-registry-demo
          env:
            - name: DOCKER_CONFIG
              value: /config
          volumeMounts:
          - mountPath: /config
            name: registry-config
            readOnly: true
          args:
            - &amp;lt;private_image&amp;gt;
      volumes:
      - name: registry-config
        secret:
          secretName: registry-config
    ```

    `kubectl apply -f pod.yaml`

&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;The user can now run &lt;code&gt;kubectl logs grype-private-registry-demo&lt;/code&gt;. The logs should show the grype analysis for the &lt;code&gt;&amp;lt;private_image&amp;gt;&lt;/code&gt; provided in the pod configuration.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Using the above information, users should be able to configure private registry access without having to do so in the &lt;code&gt;grype&lt;/code&gt; or &lt;code&gt;syft&lt;/code&gt; configuration files. They will also not be dependent on a docker daemon, (or some other runtime software) for registry configuration and access.&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Default configuration search paths (see all with &lt;code&gt;grype config locations&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;.grype.yaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;.grype/config.yaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;~/.grype.yaml&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;XDG_CONFIG_HOME&amp;gt;/grype/config.yaml&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Use &lt;code&gt;grype config&lt;/code&gt; to print a sample config file to stdout. Use &lt;code&gt;grype config --load&lt;/code&gt; to print the current config after loading all values to stdout.&lt;/p&gt; 
&lt;p&gt;You can specify files directly using the &lt;code&gt;--config&lt;/code&gt; / &lt;code&gt;-c&lt;/code&gt; flags (or environment variable &lt;code&gt;GRYPE_CONFIG&lt;/code&gt;) to provide your own configuration files/paths:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;# Using the flag
grype &amp;lt;image&amp;gt; -c /path/to/config.yaml
# Or using the environment variable
GRYPE_CONFIG=/path/to/config.yaml grype &amp;lt;image&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Configuration options (example values are the default):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# the output format of the vulnerability report (options: table, template, json, cyclonedx)
# when using template as the output type, you must also provide a value for 'output-template-file' (env: GRYPE_OUTPUT)
output: 'table'

# if using template output, you must provide a path to a Go template file
# see https://github.com/anchore/grype#using-templates for more information on template output
# the default path to the template file is the current working directory
# output-template-file: .grype/html.tmpl
#
# write output report to a file (default is to write to stdout) (env: GRYPE_FILE)
file: ''

# pretty-print JSON output (env: GRYPE_PRETTY)
pretty: false

# distro to match against in the format: &amp;lt;distro&amp;gt;:&amp;lt;version&amp;gt; (env: GRYPE_DISTRO)
distro: ''

# generate CPEs for packages with no CPE data (env: GRYPE_ADD_CPES_IF_NONE)
add-cpes-if-none: false

# specify the path to a Go template file (requires 'template' output to be selected) (env: GRYPE_OUTPUT_TEMPLATE_FILE)
output-template-file: ''

# enable/disable checking for application updates on startup (env: GRYPE_CHECK_FOR_APP_UPDATE)
check-for-app-update: true

# ignore matches for vulnerabilities that are not fixed (env: GRYPE_ONLY_FIXED)
only-fixed: false

# ignore matches for vulnerabilities that are fixed (env: GRYPE_ONLY_NOTFIXED)
only-notfixed: false

# ignore matches for vulnerabilities with specified comma separated fix states, options=[fixed not-fixed unknown wont-fix] (env: GRYPE_IGNORE_WONTFIX)
ignore-wontfix: ''

# an optional platform specifier for container image sources (e.g. 'linux/arm64', 'linux/arm64/v8', 'arm64', 'linux') (env: GRYPE_PLATFORM)
platform: ''

# upon scanning, if a severity is found at or above the given severity then the return code will be 1
# default is unset which will skip this validation (options: negligible, low, medium, high, critical) (env: GRYPE_FAIL_ON_SEVERITY)
fail-on-severity: ''

# show suppressed/ignored vulnerabilities in the output (only supported with table output format) (env: GRYPE_SHOW_SUPPRESSED)
show-suppressed: false

# orient results by CVE instead of the original vulnerability ID when possible (env: GRYPE_BY_CVE)
by-cve: false

# sort the match results with the given strategy, options=[package severity epss risk kev vulnerability] (env: GRYPE_SORT_BY)
sort-by: 'risk'

# same as --name; set the name of the target being analyzed (env: GRYPE_NAME)
name: ''

# allows users to specify which image source should be used to generate the sbom
# valid values are: registry, docker, podman (env: GRYPE_DEFAULT_IMAGE_PULL_SOURCE)
default-image-pull-source: ''

search:
  # selection of layers to analyze, options=[squashed all-layers] (env: GRYPE_SEARCH_SCOPE)
  scope: 'squashed'

  # search within archives that do not contain a file index to search against (tar, tar.gz, tar.bz2, etc)
  # note: enabling this may result in a performance impact since all discovered compressed tars will be decompressed
  # note: for now this only applies to the java package cataloger (env: GRYPE_SEARCH_UNINDEXED_ARCHIVES)
  unindexed-archives: false

  # search within archives that do contain a file index to search against (zip)
  # note: for now this only applies to the java package cataloger (env: GRYPE_SEARCH_INDEXED_ARCHIVES)
  indexed-archives: true

# A list of vulnerability ignore rules, one or more property may be specified and all matching vulnerabilities will be ignored.
# This is the full set of supported rule fields:
#   - vulnerability: CVE-2008-4318
#     fix-state: unknown
#     package:
#       name: libcurl
#       version: 1.5.1
#       type: npm
#       location: "/usr/local/lib/node_modules/**"
#
# VEX fields apply when Grype reads vex data:
#   - vex-status: not_affected
#     vex-justification: vulnerable_code_not_present
ignore: []

# a list of globs to exclude from scanning, for example:
#   - '/etc/**'
#   - './out/**/*.json'
# same as --exclude (env: GRYPE_EXCLUDE)
exclude: []

external-sources:
  # enable Grype searching network source for additional information (env: GRYPE_EXTERNAL_SOURCES_ENABLE)
  enable: false

  maven:
    # search for Maven artifacts by SHA1 (env: GRYPE_EXTERNAL_SOURCES_MAVEN_SEARCH_MAVEN_UPSTREAM)
    search-maven-upstream: true

    # base URL of the Maven repository to search (env: GRYPE_EXTERNAL_SOURCES_MAVEN_BASE_URL)
    base-url: 'https://search.maven.org/solrsearch/select'

    # (env: GRYPE_EXTERNAL_SOURCES_MAVEN_RATE_LIMIT)
    rate-limit: 300ms

match:
  java:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_JAVA_USING_CPES)
    using-cpes: false

  jvm:
    # (env: GRYPE_MATCH_JVM_USING_CPES)
    using-cpes: true

  dotnet:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_DOTNET_USING_CPES)
    using-cpes: false

  golang:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_GOLANG_USING_CPES)
    using-cpes: false

    # use CPE matching to find vulnerabilities for the Go standard library (env: GRYPE_MATCH_GOLANG_ALWAYS_USE_CPE_FOR_STDLIB)
    always-use-cpe-for-stdlib: true

    # allow comparison between main module pseudo-versions (e.g. v0.0.0-20240413-2b432cf643...) (env: GRYPE_MATCH_GOLANG_ALLOW_MAIN_MODULE_PSEUDO_VERSION_COMPARISON)
    allow-main-module-pseudo-version-comparison: false

  javascript:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_JAVASCRIPT_USING_CPES)
    using-cpes: false

  python:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_PYTHON_USING_CPES)
    using-cpes: false

  ruby:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_RUBY_USING_CPES)
    using-cpes: false

  rust:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_RUST_USING_CPES)
    using-cpes: false

  stock:
    # use CPE matching to find vulnerabilities (env: GRYPE_MATCH_STOCK_USING_CPES)
    using-cpes: true


registry:
  # skip TLS verification when communicating with the registry (env: GRYPE_REGISTRY_INSECURE_SKIP_TLS_VERIFY)
  insecure-skip-tls-verify: false

  # use http instead of https when connecting to the registry (env: GRYPE_REGISTRY_INSECURE_USE_HTTP)
  insecure-use-http: false

  # Authentication credentials for specific registries. Each entry describes authentication for a specific authority:
  # -   authority: the registry authority URL the URL to the registry (e.g. "docker.io", "localhost:5000", etc.) (env: SYFT_REGISTRY_AUTH_AUTHORITY)
  #     username: a username if using basic credentials (env: SYFT_REGISTRY_AUTH_USERNAME)
  #     password: a corresponding password (env: SYFT_REGISTRY_AUTH_PASSWORD)
  #     token: a token if using token-based authentication, mutually exclusive with username/password (env: SYFT_REGISTRY_AUTH_TOKEN)
  #     tls-cert: filepath to the client certificate used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_CERT)
  #     tls-key: filepath to the client key used for TLS authentication to the registry (env: SYFT_REGISTRY_AUTH_TLS_KEY)
  auth: []

  # filepath to a CA certificate (or directory containing *.crt, *.cert, *.pem) used to generate the client certificate (env: GRYPE_REGISTRY_CA_CERT)
  ca-cert: ''

# a list of VEX documents to consider when producing scanning results (env: GRYPE_VEX_DOCUMENTS)
vex-documents: []

# VEX statuses to consider as ignored rules (env: GRYPE_VEX_ADD)
vex-add: []

# match kernel-header packages with upstream kernel as kernel vulnerabilities (env: GRYPE_MATCH_UPSTREAM_KERNEL_HEADERS)
match-upstream-kernel-headers: false

db:
  # location to write the vulnerability database cache (env: GRYPE_DB_CACHE_DIR)
  cache-dir: '~/Library/Caches/grype/db'

  # URL of the vulnerability database (env: GRYPE_DB_UPDATE_URL)
  update-url: 'https://grype.anchore.io/databases'

  # certificate to trust download the database and listing file (env: GRYPE_DB_CA_CERT)
  ca-cert: ''

  # check for database updates on execution (env: GRYPE_DB_AUTO_UPDATE)
  auto-update: true

  # validate the database matches the known hash each execution (env: GRYPE_DB_VALIDATE_BY_HASH_ON_START)
  validate-by-hash-on-start: true

  # ensure db build is no older than the max-allowed-built-age (env: GRYPE_DB_VALIDATE_AGE)
  validate-age: true

  # Max allowed age for vulnerability database,
  # age being the time since it was built
  # Default max age is 120h (or five days) (env: GRYPE_DB_MAX_ALLOWED_BUILT_AGE)
  max-allowed-built-age: 120h0m0s

  # fail the scan if unable to check for database updates (env: GRYPE_DB_REQUIRE_UPDATE_CHECK)
  require-update-check: false

  # Timeout for downloading GRYPE_DB_UPDATE_URL to see if the database needs to be downloaded
  # This file is ~156KiB as of 2024-04-17 so the download should be quick; adjust as needed (env: GRYPE_DB_UPDATE_AVAILABLE_TIMEOUT)
  update-available-timeout: 30s

  # Timeout for downloading actual vulnerability DB
  # The DB is ~156MB as of 2024-04-17 so slower connections may exceed the default timeout; adjust as needed (env: GRYPE_DB_UPDATE_DOWNLOAD_TIMEOUT)
  update-download-timeout: 5m0s

  # Maximum frequency to check for vulnerability database updates (env: GRYPE_DB_MAX_UPDATE_CHECK_FREQUENCY)
  max-update-check-frequency: 2h0m0s

log:
  # suppress all logging output (env: GRYPE_LOG_QUIET)
  quiet: false

  # explicitly set the logging level (available: [error warn info debug trace]) (env: GRYPE_LOG_LEVEL)
  level: 'warn'

  # file path to write logs to (env: GRYPE_LOG_FILE)
  file: ''

dev:
  # capture resource profiling data (available: [cpu, mem]) (env: GRYPE_DEV_PROFILE)
  profile: ''

  db:
    # show sql queries in trace logging (requires -vv) (env: GRYPE_DEV_DB_DEBUG)
    debug: false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Future plans&lt;/h2&gt; 
&lt;p&gt;The following areas of potential development are currently being investigated:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Support for allowlist, package mapping&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Grype Logo&lt;/h2&gt; 
&lt;p xmlns:cc="http://creativecommons.org/ns#" xmlns:dct="http://purl.org/dc/terms/"&gt;&lt;a property="dct:title" rel="cc:attributionURL" href="https://anchore.com/wp-content/uploads/2024/11/grype-logo.svg"&gt;Grype Logo&lt;/a&gt; by &lt;a rel="cc:attributionURL dct:creator" property="cc:attributionName" href="https://anchore.com/"&gt;Anchore&lt;/a&gt; is licensed under &lt;a href="https://creativecommons.org/licenses/by/4.0/" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"&gt;CC BY 4.0&lt;img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?sanitize=true" alt=""&gt;&lt;img style="height:22px!important;margin-left:3px;vertical-align:text-bottom;" src="https://mirrors.creativecommons.org/presskit/icons/by.svg?sanitize=true" alt=""&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>