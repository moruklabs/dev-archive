<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Sun, 10 Aug 2025 06:06:03 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>modood/Administrative-divisions-of-China</title>
      <link>https://github.com/modood/Administrative-divisions-of-China</link>
      <description>&lt;p&gt;中华人民共和国行政区划：省级（省份）、 地级（城市）、 县级（区县）、 乡级（乡镇街道）、 村级（村委会居委会） ，中国省市区镇村二级三级四级五级联动地址数据。&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Administrative-divisions-of-China&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://standardjs.com/"&gt;&lt;img src="https://img.shields.io/badge/code%20style-standard-brightgreen.svg?sanitize=true" alt="code style" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/china-division"&gt;&lt;img src="https://img.shields.io/npm/v/china-division.svg?sanitize=true" alt="npm" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/china-division"&gt;&lt;img src="https://img.shields.io/npm/dt/china-division.svg?sanitize=true" alt="downloads" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/modood/Administrative-divisions-of-China/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-WTFPL%20--%20Do%20What%20the%20Fuck%20You%20Want%20to%20Public%20License-green.svg?sanitize=true" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;中华人民共和国行政区划（五级）：省级、地级、县级、乡级和村级。&lt;/p&gt; 
&lt;h2&gt;数据来源&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;国家统计局： 
  &lt;ul&gt; 
   &lt;li&gt;中华人民共和国国家统计局-统计用区划和城乡划分代码&lt;/li&gt; 
   &lt;li&gt;&lt;a href="http://www.stats.gov.cn/sj/tjbz/gjtjbz/202302/t20230213_1902741.html"&gt;中华人民共和国国家统计局-统计用区划代码和城乡划分代码编制规则&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;本项目已更新至： 
  &lt;ul&gt; 
   &lt;li&gt;2023年统计用区划代码和城乡划分代码（截止时间：2023-06-30，发布时间：2023-09-11）&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;数据下载&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;文件列表&lt;/th&gt; 
   &lt;th align="left"&gt;JSON&lt;/th&gt; 
   &lt;th align="left"&gt;CSV&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;省级（省份、直辖市、自治区）&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/provinces.json"&gt;provinces.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/provinces.csv"&gt;provinces.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;地级（城市）&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/cities.json"&gt;cities.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/cities.csv"&gt;cities.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;县级（区县）&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/areas.json"&gt;areas.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/areas.csv"&gt;areas.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;乡级（乡镇、街道）&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/streets.json"&gt;streets.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/streets.csv"&gt;streets.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;村级（村委会、居委会）&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/villages.json"&gt;villages.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/villages.csv"&gt;villages.csv&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;文件列表&lt;/th&gt; 
   &lt;th align="left"&gt;普通&lt;/th&gt; 
   &lt;th align="left"&gt;带编码&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;“省份、城市” 二级联动数据&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pc.json"&gt;pc.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pc-code.json"&gt;pc-code.json&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;“省份、城市、区县” 三级联动数据&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pca.json"&gt;pca.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pca-code.json"&gt;pca-code.json&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;“省份、城市、区县、乡镇” 四级联动数据&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pcas.json"&gt;pcas.json&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/pcas-code.json"&gt;pcas-code.json&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;“省份、城市、区县、乡镇、村庄” 五级联动数据&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;-&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;提示：需要打包下载全部文件，请看 &lt;a href="https://github.com/modood/Administrative-divisions-of-China/releases"&gt;Releases&lt;/a&gt;。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;数据库支持&lt;/h2&gt; 
&lt;p&gt;目前本项目数据保存在 sqlite3，数据文件下载：&lt;a href="https://github.com/modood/Administrative-divisions-of-China/raw/master/dist/data.sqlite"&gt;data.sqlite&lt;/a&gt;。&lt;/p&gt; 
&lt;p&gt;可以自己将数据迁移到其他数据库管理系统中（MySQL, Oracle, MSSQL 等）。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;省级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
   &lt;td align="left"&gt;河北省&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
   &lt;td align="left"&gt;山西省&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
   &lt;td align="left"&gt;内蒙古自治区&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
   &lt;td align="left"&gt;广西壮族自治区&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;地级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;石家庄市&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;太原市&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;锡林郭勒盟&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;桂林市&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;县级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;cityCode&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;130111&lt;/td&gt; 
   &lt;td align="left"&gt;栾城区&lt;/td&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;140121&lt;/td&gt; 
   &lt;td align="left"&gt;清徐县&lt;/td&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;152527&lt;/td&gt; 
   &lt;td align="left"&gt;太仆寺旗&lt;/td&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;450305&lt;/td&gt; 
   &lt;td align="left"&gt;七星区&lt;/td&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;乡级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;areaCode&lt;/th&gt; 
   &lt;th align="left"&gt;cityCode&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;130111200&lt;/td&gt; 
   &lt;td align="left"&gt;南高乡&lt;/td&gt; 
   &lt;td align="left"&gt;130111&lt;/td&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;140121102&lt;/td&gt; 
   &lt;td align="left"&gt;东于镇&lt;/td&gt; 
   &lt;td align="left"&gt;140121&lt;/td&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;152527201&lt;/td&gt; 
   &lt;td align="left"&gt;贡宝拉格苏木&lt;/td&gt; 
   &lt;td align="left"&gt;152527&lt;/td&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;450305004&lt;/td&gt; 
   &lt;td align="left"&gt;漓东街道办事处&lt;/td&gt; 
   &lt;td align="left"&gt;450305&lt;/td&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;村级数据预览&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;code&lt;/th&gt; 
   &lt;th align="left"&gt;name&lt;/th&gt; 
   &lt;th align="left"&gt;streetCode&lt;/th&gt; 
   &lt;th align="left"&gt;areaCode&lt;/th&gt; 
   &lt;th align="left"&gt;cityCode&lt;/th&gt; 
   &lt;th align="left"&gt;provinceCode&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;130111200201&lt;/td&gt; 
   &lt;td align="left"&gt;南高村委会&lt;/td&gt; 
   &lt;td align="left"&gt;130111200&lt;/td&gt; 
   &lt;td align="left"&gt;130111&lt;/td&gt; 
   &lt;td align="left"&gt;1301&lt;/td&gt; 
   &lt;td align="left"&gt;13&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;140121102001&lt;/td&gt; 
   &lt;td align="left"&gt;东于社区居委会&lt;/td&gt; 
   &lt;td align="left"&gt;140121102&lt;/td&gt; 
   &lt;td align="left"&gt;140121&lt;/td&gt; 
   &lt;td align="left"&gt;1401&lt;/td&gt; 
   &lt;td align="left"&gt;14&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;152527201206&lt;/td&gt; 
   &lt;td align="left"&gt;敦达乌苏嘎查&lt;/td&gt; 
   &lt;td align="left"&gt;152527201&lt;/td&gt; 
   &lt;td align="left"&gt;152527&lt;/td&gt; 
   &lt;td align="left"&gt;1525&lt;/td&gt; 
   &lt;td align="left"&gt;15&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;450305004006&lt;/td&gt; 
   &lt;td align="left"&gt;横塘社区&lt;/td&gt; 
   &lt;td align="left"&gt;450305004&lt;/td&gt; 
   &lt;td align="left"&gt;450305&lt;/td&gt; 
   &lt;td align="left"&gt;4503&lt;/td&gt; 
   &lt;td align="left"&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>playcanvas/engine</title>
      <link>https://github.com/playcanvas/engine</link>
      <description>&lt;p&gt;Powerful web graphics runtime built on WebGL, WebGPU, WebXR and glTF&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img width="200" src="https://s3-eu-west-1.amazonaws.com/static.playcanvas.com/platform/images/logo/playcanvas-logo-medium.png" /&gt; 
 &lt;h1&gt;PlayCanvas WebGL Game Engine&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://api.playcanvas.com/engine/"&gt;API Reference&lt;/a&gt; | &lt;a href="https://developer.playcanvas.com"&gt;User Manual&lt;/a&gt; | &lt;a href="https://playcanvas.github.io"&gt;Examples&lt;/a&gt; | &lt;a href="https://forum.playcanvas.com"&gt;Forum&lt;/a&gt; | &lt;a href="https://blog.playcanvas.com"&gt;Blog&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;PlayCanvas is an open-source game engine. It uses HTML5 and WebGL to run games and other interactive 3D content in any mobile or desktop browser.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://www.npmjs.com/package/playcanvas"&gt;&lt;img src="https://img.shields.io/npm/v/playcanvas" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://bundlephobia.com/result?p=playcanvas"&gt;&lt;img src="https://img.shields.io/bundlephobia/minzip/playcanvas" alt="Minzipped size" /&gt;&lt;/a&gt; &lt;a href="https://isitmaintained.com/project/playcanvas/engine"&gt;&lt;img src="https://isitmaintained.com/badge/resolution/playcanvas/engine.svg?sanitize=true" alt="Average time to resolve an issue" /&gt;&lt;/a&gt; &lt;a href="https://isitmaintained.com/project/playcanvas/engine"&gt;&lt;img src="https://isitmaintained.com/badge/open/playcanvas/engine.svg?sanitize=true" alt="Percentage of issues still open" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=playcanvas"&gt;&lt;img src="https://img.shields.io/twitter/follow/playcanvas.svg?style=social&amp;amp;label=Follow" alt="Twitter" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/playcanvas/engine/raw/dev/README.md"&gt;English&lt;/a&gt; &lt;a href="https://github.com/playcanvas/engine/raw/dev/README-zh.md"&gt;中文&lt;/a&gt; &lt;a href="https://github.com/playcanvas/engine/raw/dev/README-ja.md"&gt;日本語&lt;/a&gt; &lt;a href="https://github.com/playcanvas/engine/raw/dev/README-kr.md"&gt;한글&lt;/a&gt;&lt;/p&gt; 
 &lt;h2&gt;Project Showcase&lt;/h2&gt; 
 &lt;p&gt;&lt;a href="https://github.com/playcanvas/awesome-playcanvas"&gt;Many games and apps&lt;/a&gt; have been published using the PlayCanvas engine. Here is a small selection:&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://playcanv.as/p/MflWvdTW/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14705/319531/O4J4VU-image-25.jpg" alt="Seemore" /&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/44MRmJRU/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14928/440410/98554E-image-25.jpg" alt="After The Flood" /&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/LpmXGUe6/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/14928/349824/U88HJQ-image-25.jpg" alt="Casino" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://playcanv.as/p/JtL2iqIH/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/4763/TKYXB8-image-25.jpg" alt="Swooop" /&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/JERg21J8/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/415995/10A5A9-image-25.jpg" alt="dev Archer" /&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/2OlkUaxF/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/8/375389/23PRTL-image-25.jpg" alt="Flappy Bird" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="https://playcanv.as/p/RqJJ9oU9/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/347824/7ULQ3Y-image-25.jpg" alt="Car" /&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/SA7hVBLt/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/12/333626/BGQN9H-image-25.jpg" alt="Star-Lord" /&gt;&lt;/a&gt; &lt;a href="https://playcanv.as/p/ZV4PW6wr/"&gt;&lt;img src="https://s3-eu-west-1.amazonaws.com/images.playcanvas.com/projects/4373/625081/6AB32D-image-25.jpg" alt="Global Illumination" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;You can see more games on the &lt;a href="https://playcanvas.com/explore"&gt;PlayCanvas website&lt;/a&gt;.&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Users&lt;/h2&gt; 
&lt;p&gt;PlayCanvas is used by leading companies in video games, advertising and visualization such as:&lt;br /&gt; &lt;strong&gt;Animech, Arm, BMW, Disney, Facebook, Famobi, Funday Factory, IGT, King, Miniclip, Leapfrog, Mojiworks, Mozilla, Nickelodeon, Nordeus, NOWWA, PikPok, PlaySide Studios, Polaris, Product Madness, Samsung, Snap, Spry Fox, Zeptolab, Zynga&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;PlayCanvas is a fully-featured game engine.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;🧊 &lt;strong&gt;Graphics&lt;/strong&gt; - Advanced 2D + 3D graphics engine built on WebGL2 &amp;amp; WebGPU.&lt;/li&gt; 
 &lt;li&gt;🏃 &lt;strong&gt;Animation&lt;/strong&gt; - Powerful state-based animations for characters and arbitrary scene properties&lt;/li&gt; 
 &lt;li&gt;⚛️ &lt;strong&gt;Physics&lt;/strong&gt; - Full integration with 3D rigid-body physics engine &lt;a href="https://github.com/kripken/ammo.js"&gt;ammo.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎮 &lt;strong&gt;Input&lt;/strong&gt; - Mouse, keyboard, touch, gamepad and VR controller APIs&lt;/li&gt; 
 &lt;li&gt;🔊 &lt;strong&gt;Sound&lt;/strong&gt; - 3D positional sounds built on the Web Audio API&lt;/li&gt; 
 &lt;li&gt;📦 &lt;strong&gt;Assets&lt;/strong&gt; - Asynchronous streaming system built on &lt;a href="https://www.khronos.org/gltf/"&gt;glTF 2.0&lt;/a&gt;, &lt;a href="https://google.github.io/draco/"&gt;Draco&lt;/a&gt; and &lt;a href="https://github.com/BinomialLLC/basis_universal"&gt;Basis&lt;/a&gt; compression&lt;/li&gt; 
 &lt;li&gt;📜 &lt;strong&gt;Scripts&lt;/strong&gt; - Write game behaviors in Typescript or JavaScript&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Here's a super-simple Hello World example - a spinning cube!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import * as pc from 'playcanvas';

const canvas = document.createElement('canvas');
document.body.appendChild(canvas);

const app = new pc.Application(canvas);

// fill the available space at full resolution
app.setCanvasFillMode(pc.FILLMODE_FILL_WINDOW);
app.setCanvasResolution(pc.RESOLUTION_AUTO);

// ensure canvas is resized when window changes size
window.addEventListener('resize', () =&amp;gt; app.resizeCanvas());

// create box entity
const box = new pc.Entity('cube');
box.addComponent('model', {
  type: 'box'
});
app.root.addChild(box);

// create camera entity
const camera = new pc.Entity('camera');
camera.addComponent('camera', {
  clearColor: new pc.Color(0.1, 0.2, 0.3)
});
app.root.addChild(camera);
camera.setPosition(0, 0, 3);

// create directional light entity
const light = new pc.Entity('light');
light.addComponent('light');
app.root.addChild(light);
light.setEulerAngles(45, 0, 0);

// rotate the box according to the delta time since the last frame
app.on('update', dt =&amp;gt; box.rotate(10 * dt, 20 * dt, 30 * dt));

app.start();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want to play with the code yourself? Edit it on &lt;a href="https://codepen.io/playcanvas/pen/NPbxMj"&gt;CodePen&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;A full guide to setting up a local development environment based on the PlayCanvas Engine can be found &lt;a href="https://developer.playcanvas.com/user-manual/engine/standalone/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to build&lt;/h2&gt; 
&lt;p&gt;Ensure you have &lt;a href="https://nodejs.org"&gt;Node.js 18+&lt;/a&gt; installed. Then, install all of the required Node.js dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now you can run various build options:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Outputs To&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;npm run build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build all engine flavors and type declarations&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;build&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;npm run docs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build engine &lt;a href="https://api.playcanvas.com/modules/Engine.html"&gt;API reference docs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;docs&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;PlayCanvas Editor&lt;/h2&gt; 
&lt;p&gt;The PlayCanvas Engine is an open-source engine that you can use to create HTML5 apps/games. In addition to the engine, we also make the &lt;a href="https://playcanvas.com/"&gt;PlayCanvas Editor&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/playcanvas/editor"&gt;&lt;img src="https://github.com/playcanvas/editor/raw/main/images/editor.png?raw=true" alt="Editor" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For Editor-related bugs and issues, please refer to the &lt;a href="https://github.com/playcanvas/editor"&gt;Editor's repo&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>MHSanaei/3x-ui</title>
      <link>https://github.com/MHSanaei/3x-ui</link>
      <description>&lt;p&gt;Xray panel supporting multi-protocol multi-user expire day &amp; traffic &amp; IP limit (Vmess &amp; Vless &amp; Trojan &amp; ShadowSocks &amp; Wireguard)&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/README.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/README.fa_IR.md"&gt;فارسی&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/README.ar_EG.md"&gt;العربية&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/README.zh_CN.md"&gt;中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/README.es_ES.md"&gt;Español&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/README.ru_RU.md"&gt;Русский&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="./media/3x-ui-dark.png" /&gt; 
  &lt;img alt="3x-ui" src="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/media/3x-ui-light.png" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/MHSanaei/3x-ui/releases"&gt;&lt;img src="https://img.shields.io/github/v/release/mhsanaei/3x-ui.svg?style=for-the-badge" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/MHSanaei/3x-ui/actions"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/mhsanaei/3x-ui/release.yml.svg?style=for-the-badge" alt="" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/#"&gt;&lt;img src="https://img.shields.io/github/go-mod/go-version/mhsanaei/3x-ui.svg?style=for-the-badge" alt="GO Version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/MHSanaei/3x-ui/releases/latest"&gt;&lt;img src="https://img.shields.io/github/downloads/mhsanaei/3x-ui/total.svg?style=for-the-badge" alt="Downloads" /&gt;&lt;/a&gt; &lt;a href="https://www.gnu.org/licenses/gpl-3.0.en.html"&gt;&lt;img src="https://img.shields.io/badge/license-GPL%20V3-blue.svg?longCache=true&amp;amp;style=for-the-badge" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;3X-UI&lt;/strong&gt; — advanced, open-source web-based control panel designed for managing Xray-core server. It offers a user-friendly interface for configuring and monitoring various VPN and proxy protocols.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] This project is only for personal using, please do not use it for illegal purposes, please do not use it in a production environment.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;As an enhanced fork of the original X-UI project, 3X-UI provides improved stability, broader protocol support, and additional features.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash &amp;lt;(curl -Ls https://raw.githubusercontent.com/mhsanaei/3x-ui/master/install.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For full documentation, please visit the &lt;a href="https://github.com/MHSanaei/3x-ui/wiki"&gt;project Wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;A Special Thanks to&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alireza0/"&gt;alireza0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Acknowledgment&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chocolate4u/Iran-v2ray-rules"&gt;Iran v2ray rules&lt;/a&gt; (License: &lt;strong&gt;GPL-3.0&lt;/strong&gt;): &lt;em&gt;Enhanced v2ray/xray and v2ray/xray-clients routing rules with built-in Iranian domains and a focus on security and adblocking.&lt;/em&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/runetfreedom/russia-v2ray-rules-dat"&gt;Russia v2ray rules&lt;/a&gt; (License: &lt;strong&gt;GPL-3.0&lt;/strong&gt;): &lt;em&gt;This repository contains automatically updated V2Ray routing rules based on data on blocked domains and addresses in Russia.&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support project&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;If this project is helpful to you, you may wish to give it a&lt;/strong&gt;&lt;span&gt;🌟&lt;/span&gt;&lt;/p&gt; 
&lt;p align="left"&gt; &lt;a href="https://buymeacoffee.com/mhsanaei" target="_blank"&gt; &lt;img src="https://raw.githubusercontent.com/MHSanaei/3x-ui/main/media/buymeacoffe.png" alt="Image" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;USDT (TRC20): &lt;code&gt;TXncxkvhkDWGts487Pjqq1qT9JmwRUz8CC&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;POL (polygon): &lt;code&gt;0x41C9548675D044c6Bfb425786C765bc37427256A&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;LTC (Litecoin): &lt;code&gt;ltc1q2ach7x6d2zq0n4l0t4zl7d7xe2s6fs7a3vspwv&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stargazers over Time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/MHSanaei/3x-ui"&gt;&lt;img src="https://starchart.cc/MHSanaei/3x-ui.svg?variant=adaptive" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-webui/open-webui</title>
      <link>https://github.com/open-webui/open-webui</link>
      <description>&lt;p&gt;User-friendly AI Interface (Supports Ollama, OpenAI API, ...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open WebUI 👋&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/stars/open-webui/open-webui?style=social" alt="GitHub stars" /&gt; &lt;img src="https://img.shields.io/github/forks/open-webui/open-webui?style=social" alt="GitHub forks" /&gt; &lt;img src="https://img.shields.io/github/watchers/open-webui/open-webui?style=social" alt="GitHub watchers" /&gt; &lt;img src="https://img.shields.io/github/repo-size/open-webui/open-webui" alt="GitHub repo size" /&gt; &lt;img src="https://img.shields.io/github/languages/count/open-webui/open-webui" alt="GitHub language count" /&gt; &lt;img src="https://img.shields.io/github/languages/top/open-webui/open-webui" alt="GitHub top language" /&gt; &lt;img src="https://img.shields.io/github/last-commit/open-webui/open-webui?color=red" alt="GitHub last commit" /&gt; &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;&lt;img src="https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/tjbck"&gt;&lt;img src="https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;color=%23fe8e86" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Open WebUI is an &lt;a href="https://docs.openwebui.com/features/plugin/"&gt;extensible&lt;/a&gt;, feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.&lt;/strong&gt; It supports various LLM runners like &lt;strong&gt;Ollama&lt;/strong&gt; and &lt;strong&gt;OpenAI-compatible APIs&lt;/strong&gt;, with &lt;strong&gt;built-in inference engine&lt;/strong&gt; for RAG, making it a &lt;strong&gt;powerful AI deployment solution&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Passionate about open-source AI? &lt;a href="https://careers.openwebui.com/"&gt;Join our team →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/open-webui/open-webui/main/demo.gif" alt="Open WebUI Demo" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; &lt;strong&gt;Looking for an &lt;a href="https://docs.openwebui.com/enterprise"&gt;Enterprise Plan&lt;/a&gt;?&lt;/strong&gt; – &lt;strong&gt;&lt;a href="mailto:sales@openwebui.com"&gt;Speak with Our Sales Team Today!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Get &lt;strong&gt;enhanced capabilities&lt;/strong&gt;, including &lt;strong&gt;custom theming and branding&lt;/strong&gt;, &lt;strong&gt;Service Level Agreement (SLA) support&lt;/strong&gt;, &lt;strong&gt;Long-Term Support (LTS) versions&lt;/strong&gt;, and &lt;strong&gt;more!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For more information, be sure to check out our &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Key Features of Open WebUI ⭐&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;Effortless Setup&lt;/strong&gt;: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both &lt;code&gt;:ollama&lt;/code&gt; and &lt;code&gt;:cuda&lt;/code&gt; tagged images.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🤝 &lt;strong&gt;Ollama/OpenAI API Integration&lt;/strong&gt;: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with &lt;strong&gt;LMStudio, GroqCloud, Mistral, OpenRouter, and more&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛡️ &lt;strong&gt;Granular Permissions and User Groups&lt;/strong&gt;: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;SCIM 2.0 Support&lt;/strong&gt;: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Responsive Design&lt;/strong&gt;: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Progressive Web App (PWA) for Mobile&lt;/strong&gt;: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;✒️🔢 &lt;strong&gt;Full Markdown and LaTeX Support&lt;/strong&gt;: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎤📹 &lt;strong&gt;Hands-Free Voice/Video Call&lt;/strong&gt;: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛠️ &lt;strong&gt;Model Builder&lt;/strong&gt;: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through &lt;a href="https://openwebui.com/"&gt;Open WebUI Community&lt;/a&gt; integration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🐍 &lt;strong&gt;Native Python Function Calling Tool&lt;/strong&gt;: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📚 &lt;strong&gt;Local RAG Integration&lt;/strong&gt;: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the &lt;code&gt;#&lt;/code&gt; command before a query.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Web Search for RAG&lt;/strong&gt;: Perform web searches using providers like &lt;code&gt;SearXNG&lt;/code&gt;, &lt;code&gt;Google PSE&lt;/code&gt;, &lt;code&gt;Brave Search&lt;/code&gt;, &lt;code&gt;serpstack&lt;/code&gt;, &lt;code&gt;serper&lt;/code&gt;, &lt;code&gt;Serply&lt;/code&gt;, &lt;code&gt;DuckDuckGo&lt;/code&gt;, &lt;code&gt;TavilySearch&lt;/code&gt;, &lt;code&gt;SearchApi&lt;/code&gt; and &lt;code&gt;Bing&lt;/code&gt; and inject the results directly into your chat experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐 &lt;strong&gt;Web Browsing Capability&lt;/strong&gt;: Seamlessly integrate websites into your chat experience using the &lt;code&gt;#&lt;/code&gt; command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎨 &lt;strong&gt;Image Generation Integration&lt;/strong&gt;: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI's DALL-E (external), enriching your chat experience with dynamic visual content.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⚙️ &lt;strong&gt;Many Models Conversations&lt;/strong&gt;: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔐 &lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐🌍 &lt;strong&gt;Multilingual Support&lt;/strong&gt;: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We're actively seeking contributors!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧩 &lt;strong&gt;Pipelines, Open WebUI Plugin Support&lt;/strong&gt;: Seamlessly integrate custom logic and Python libraries into Open WebUI using &lt;a href="https://github.com/open-webui/pipelines"&gt;Pipelines Plugin Framework&lt;/a&gt;. Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. &lt;a href="https://github.com/open-webui/pipelines/tree/main/examples"&gt;Examples&lt;/a&gt; include &lt;strong&gt;Function Calling&lt;/strong&gt;, User &lt;strong&gt;Rate Limiting&lt;/strong&gt; to control access, &lt;strong&gt;Usage Monitoring&lt;/strong&gt; with tools like Langfuse, &lt;strong&gt;Live Translation with LibreTranslate&lt;/strong&gt; for multilingual support, &lt;strong&gt;Toxic Message Filtering&lt;/strong&gt; and much more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌟 &lt;strong&gt;Continuous Updates&lt;/strong&gt;: We are committed to improving Open WebUI with regular updates, fixes, and new features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to learn more about Open WebUI's features? Check out our &lt;a href="https://docs.openwebui.com/features"&gt;Open WebUI documentation&lt;/a&gt; for a comprehensive overview!&lt;/p&gt; 
&lt;h2&gt;Sponsors 🙌&lt;/h2&gt; 
&lt;h4&gt;Emerald&lt;/h4&gt; 
&lt;table&gt; 
 &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/" target="_blank"&gt;
        &lt;img src="https://docs.openwebui.com/sponsors/logos/n8n.png" alt="n8n" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt; • Does your interface have a backend yet?&lt;br&gt;Try &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/tailscale.png" alt="Tailscale" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs"&gt;Tailscale&lt;/a&gt; • Connect self-hosted AI to any device with Tailscale &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/warp.png" alt="Warp" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui"&gt;Warp&lt;/a&gt; • The intelligent terminal for developers &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!&lt;/p&gt; 
&lt;h2&gt;How to Install 🚀&lt;/h2&gt; 
&lt;h3&gt;Installation via Python pip 🐍&lt;/h3&gt; 
&lt;p&gt;Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you're using &lt;strong&gt;Python 3.11&lt;/strong&gt; to avoid compatibility issues.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Open WebUI&lt;/strong&gt;: Open your terminal and run the following command to install Open WebUI:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install open-webui
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Running Open WebUI&lt;/strong&gt;: After installation, you can start Open WebUI by executing:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;open-webui serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will start the Open WebUI server, which you can access at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Start with Docker 🐳&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt; is ready to assist you.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] When using Docker to install Open WebUI, make sure to include the &lt;code&gt;-v open-webui:/app/backend/data&lt;/code&gt; in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either &lt;code&gt;:cuda&lt;/code&gt; or &lt;code&gt;:ollama&lt;/code&gt;. To enable CUDA, you must install the &lt;a href="https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/"&gt;Nvidia CUDA container toolkit&lt;/a&gt; on your Linux/WSL system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Installation with Default Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on your computer&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on a Different Server&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;p&gt;To connect to Ollama on another server, change the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; to the server's URL:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;To run Open WebUI with Nvidia GPU support&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation for OpenAI API Usage Only&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you're only using OpenAI API&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installing Open WebUI with Bundled Ollama Support&lt;/h3&gt; 
&lt;p&gt;This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;With GPU Support&lt;/strong&gt;: Utilize GPU resources by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For CPU Only&lt;/strong&gt;: If you're not using a GPU, use this command instead:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.&lt;/p&gt; 
&lt;p&gt;After installation, you can access Open WebUI at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. Enjoy! 😄&lt;/p&gt; 
&lt;h3&gt;Other Installation Methods&lt;/h3&gt; 
&lt;p&gt;We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our &lt;a href="https://docs.openwebui.com/getting-started/"&gt;Open WebUI Documentation&lt;/a&gt; or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Discord community&lt;/a&gt; for comprehensive guidance.&lt;/p&gt; 
&lt;p&gt;Look at the &lt;a href="https://docs.openwebui.com/getting-started/advanced-topics/development"&gt;Local Development Guide&lt;/a&gt; for instructions on setting up a local development environment.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Encountering connection issues? Our &lt;a href="https://docs.openwebui.com/troubleshooting/"&gt;Open WebUI Documentation&lt;/a&gt; has got you covered. For further assistance and to join our vibrant community, visit the &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Open WebUI: Server Connection Error&lt;/h4&gt; 
&lt;p&gt;If you're experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the &lt;code&gt;--network=host&lt;/code&gt; flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Docker Command&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keeping Your Docker Installation Up-to-Date&lt;/h3&gt; 
&lt;p&gt;In case you want to update your local Docker installation to the latest version, you can do it with &lt;a href="https://containrrr.dev/watchtower/"&gt;Watchtower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the last part of the command, replace &lt;code&gt;open-webui&lt;/code&gt; with your container name if it is different.&lt;/p&gt; 
&lt;p&gt;Check our Updating Guide available in our &lt;a href="https://docs.openwebui.com/getting-started/updating"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using the Dev Branch 🌙&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The &lt;code&gt;:dev&lt;/code&gt; branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the &lt;code&gt;:dev&lt;/code&gt; tag like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Offline Mode&lt;/h3&gt; 
&lt;p&gt;If you are running Open WebUI in an offline environment, you can set the &lt;code&gt;HF_HUB_OFFLINE&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt; to prevent attempts to download models from the internet.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_HUB_OFFLINE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What's Next? 🌟&lt;/h2&gt; 
&lt;p&gt;Discover upcoming features on our roadmap in the &lt;a href="https://docs.openwebui.com/roadmap/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License 📜&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;Open WebUI License&lt;/a&gt;, a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the "Open WebUI" branding, as detailed in the LICENSE file. For full terms, see the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;LICENSE&lt;/a&gt; document. 📄&lt;/p&gt; 
&lt;h2&gt;Support 💬&lt;/h2&gt; 
&lt;p&gt;If you have any questions, suggestions, or need assistance, please open an issue or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord community&lt;/a&gt; to connect with us! 🤝&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#open-webui/open-webui&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;Created by &lt;a href="https://github.com/tjbck"&gt;Timothy Jaeryang Baek&lt;/a&gt; - Let's make Open WebUI even more amazing together! 💪&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>denysdovhan/wtfjs</title>
      <link>https://github.com/denysdovhan/wtfjs</link>
      <description>&lt;p&gt;🤪 A list of funny and tricky JavaScript examples&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://stand-with-ukraine.pp.ua/"&gt;&lt;img src="https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct-single.svg?sanitize=true" alt="SWUbanner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What the f*ck JavaScript?&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://www.wtfpl.net"&gt;&lt;img src="https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square" alt="WTFPL 2.0" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/wtfjs"&gt;&lt;img src="https://img.shields.io/npm/v/wtfjs.svg?style=flat-square" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://img.shields.io/badge/support-patreon-F96854.svg?style=flat-square" alt="Patreon" /&gt;&lt;/a&gt; &lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://img.shields.io/badge/support-buymeacoffee-222222.svg?style=flat-square" alt="Buy Me A Coffee" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A list of funny and tricky JavaScript examples&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;JavaScript is a great language. It has a simple syntax, large ecosystem and, what is most important, a great community.&lt;/p&gt; 
&lt;p&gt;At the same time, we all know that JavaScript is quite a funny language with tricky parts. Some of them can quickly turn our everyday job into hell, and some of them can make us laugh out loud.&lt;/p&gt; 
&lt;p&gt;The original idea for WTFJS belongs to &lt;a href="https://twitter.com/brianleroux"&gt;Brian Leroux&lt;/a&gt;. This list is highly inspired by his talk &lt;a href="https://www.youtube.com/watch?v=et8xNAc2ic8"&gt;&lt;strong&gt;“WTFJS”&lt;/strong&gt; at dotJS 2012&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=et8xNAc2ic8"&gt;&lt;img src="https://img.youtube.com/vi/et8xNAc2ic8/0.jpg" alt="dotJS 2012 - Brian Leroux - WTFJS" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Node Packaged Manuscript&lt;/h1&gt; 
&lt;p&gt;You can install this handbook using &lt;code&gt;npm&lt;/code&gt;. Just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g wtfjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should be able to run &lt;code&gt;wtfjs&lt;/code&gt; at the command line now. This will open the manual in your selected &lt;code&gt;$PAGER&lt;/code&gt;. Otherwise, you may continue reading on here.&lt;/p&gt; 
&lt;p&gt;The source is available here: &lt;a href="https://github.com/denysdovhan/wtfjs"&gt;https://github.com/denysdovhan/wtfjs&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Translations&lt;/h1&gt; 
&lt;p&gt;Currently, there are these translations of &lt;strong&gt;wtfjs&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-zh-cn.md"&gt;中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-hi.md"&gt;हिंदी&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-fr-fr.md"&gt;Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pt-br.md"&gt;Português do Brasil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pl-pl.md"&gt;Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-it-it.md"&gt;Italiano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-kr.md"&gt;한국어&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/raw/master/CONTRIBUTING.md#translations"&gt;&lt;strong&gt;Help translating to your language&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Translations are maintained by their translators. They may not contain every example, and existing examples may be outdated.&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-motivation"&gt;💪🏻 Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-notation"&gt;✍🏻 Notation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-examples"&gt;👀 Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-equal-"&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-not-equal--but-not-equal--too"&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-false"&gt;true is false&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#banana"&gt;baNaNa&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-nan"&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#objectis-and--weird-cases"&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#its-a-fail"&gt;It's a fail&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true"&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#null-is-falsy-but-not-false"&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#documentall-is-an-object-but-it-is-undefined"&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#minimal-value-is-greater-than-zero"&gt;Minimal value is greater than zero&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#function-is-not-a-function"&gt;function is not a function&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#adding-arrays"&gt;Adding arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#trailing-commas-in-array"&gt;Trailing commas in array&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#array-equality-is-a-monster"&gt;Array equality is a monster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#undefined-and-number"&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#parseint-is-a-bad-guy"&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#math-with-true-and-false"&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#html-comments-are-valid-in-javascript"&gt;HTML comments are valid in JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-number"&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-and-null-are-objects"&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#magically-increasing-numbers"&gt;Magically increasing numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#precision-of-01--02"&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#patching-numbers"&gt;Patching numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparison-of-three-numbers"&gt;Comparison of three numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#funny-math"&gt;Funny math&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#addition-of-regexps"&gt;Addition of RegExps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#strings-arent-instances-of-string"&gt;Strings aren't instances of &lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#calling-functions-with-backticks"&gt;Calling functions with backticks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#call-call-call"&gt;Call call call&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-constructor-property"&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#object-as-a-key-of-objects-property"&gt;Object as a key of object's property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-prototypes-with-__proto__"&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-object-"&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#destructuring-with-default-values"&gt;Destructuring with default values&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#dots-and-spreading"&gt;Dots and spreading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#labels"&gt;Labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nested-labels"&gt;Nested labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#insidious-trycatch"&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#is-this-multiple-inheritance"&gt;Is this multiple inheritance?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-generator-which-yields-itself"&gt;A generator which yields itself&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-class-of-class"&gt;A class of class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-coercible-objects"&gt;Non-coercible objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-arrow-functions"&gt;Tricky arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arrow-functions-can-not-be-a-constructor"&gt;Arrow functions can not be a constructor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-and-arrow-functions"&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-return"&gt;Tricky return&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#chaining-assignments-on-object"&gt;Chaining assignments on object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-object-properties-with-arrays"&gt;Accessing object properties with arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#numbertofixed-display-different-numbers"&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#mathmax-less-than-mathmin"&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparing-null-to-0"&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#same-variable-redeclaration"&gt;Same variable redeclaration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#default-behavior-arrayprototypesort"&gt;Default behavior Array.prototype.sort()&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#resolve-wont-return-promise-instance"&gt;resolve() won't return Promise instance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-undefined"&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-binding"&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-alert-from-hell"&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-infinite-timeout"&gt;An infinite timeout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-settimeout-object"&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#double-dot"&gt;Double dot&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#extra-newness"&gt;Extra Newness&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#why-you-should-use-semicolons"&gt;Why you should use semicolons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#split-a-string-by-a-space"&gt;Split a string by a space&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-stringified-string"&gt;A stringified string&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-strict-comparison-of-a-number-to-true"&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-other-resources"&gt;📚 Other resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting"&gt;🤝 Supporting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-license"&gt;🎓 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h1&gt;💪🏻 Motivation&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Just for fun&lt;/p&gt; 
 &lt;p&gt;— &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/Just_for_Fun"&gt;&lt;strong&gt;“Just for Fun: The Story of an Accidental Revolutionary”&lt;/strong&gt;&lt;/a&gt;, Linus Torvalds&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The primary goal of this list is to collect some crazy examples and explain how they work, if possible. Just because it's fun to learn something that we didn't know before.&lt;/p&gt; 
&lt;p&gt;If you are a beginner, you can use these notes to get a deeper dive into JavaScript. I hope these notes will motivate you to spend more time reading the specification.&lt;/p&gt; 
&lt;p&gt;If you are a professional developer, you can consider these examples as a great reference for all of the quirks and unexpected edges of our beloved JavaScript.&lt;/p&gt; 
&lt;p&gt;In any case, just read this. You're probably going to find something new.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Note:&lt;/strong&gt; If you enjoy reading this document, please, &lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting"&gt;consider supporting the author of this collection&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;✍🏻 Notation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// -&amp;gt;&lt;/code&gt;&lt;/strong&gt; is used to show the result of an expression. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 + 1; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// &amp;gt;&lt;/code&gt;&lt;/strong&gt; means the result of &lt;code&gt;console.log&lt;/code&gt; or another output. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log("hello, world!"); // &amp;gt; hello, world!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;//&lt;/code&gt;&lt;/strong&gt; is just a comment used for explanations. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Assigning a function to foo constant
const foo = function() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;👀 Examples&lt;/h1&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Array is equal not array:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[] == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The abstract equality operator converts both sides to numbers to compare them, and both sides become the number &lt;code&gt;0&lt;/code&gt; for different reasons. Arrays are truthy, so on the right, the opposite of a truthy value is &lt;code&gt;false&lt;/code&gt;, which is then coerced to &lt;code&gt;0&lt;/code&gt;. On the left, however, an empty array is coerced to a number without becoming a boolean first, and empty arrays are coerced to &lt;code&gt;0&lt;/code&gt;, despite being truthy.&lt;/p&gt; 
&lt;p&gt;Here is how this expression simplifies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+[] == +![];
0 == +false;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true"&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-logical-not-operator"&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/h2&gt; 
&lt;p&gt;Array is not equal &lt;code&gt;true&lt;/code&gt;, but not Array is not equal &lt;code&gt;true&lt;/code&gt; too; Array is equal &lt;code&gt;false&lt;/code&gt;, not Array is equal &lt;code&gt;false&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

// According to the specification

true == []; // -&amp;gt; false

toNumber(true); // -&amp;gt; 1
toNumber([]); // -&amp;gt; 0

1 == 0; // -&amp;gt; false

true == ![]; // -&amp;gt; false

![]; // -&amp;gt; false

true == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true

// According to the specification

false == []; // -&amp;gt; true

toNumber(false); // -&amp;gt; 0
toNumber([]); // -&amp;gt; 0

0 == 0; // -&amp;gt; true

false == ![]; // -&amp;gt; true

![]; // -&amp;gt; false

false == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;true is false&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!!"false" == !!"true"; // -&amp;gt; true
!!"false" === !!"true"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Consider this step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// true is 'truthy' and represented by value 1 (number), 'true' in string form is NaN.
true == "true"; // -&amp;gt; false
false == "false"; // -&amp;gt; false

// 'false' is not the empty string, so it's a truthy value
!!"false"; // -&amp;gt; true
!!"true"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;baNaNa&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"b" + "a" + +"a" + "a"; // -&amp;gt; 'baNaNa'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an old-school joke in JavaScript, but remastered. Here's the original one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"foo" + +"bar"; // -&amp;gt; 'fooNaN'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The expression is evaluated as &lt;code&gt;'foo' + (+'bar')&lt;/code&gt;, which converts &lt;code&gt;'bar'&lt;/code&gt; to not a number.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator"&gt;12.5.6 Unary + Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;NaN === NaN; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The specification strictly defines the logic behind this behavior:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is different from &lt;code&gt;Type(y)&lt;/code&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number, then 
   &lt;ol&gt; 
    &lt;li&gt;If &lt;code&gt;x&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;If &lt;code&gt;y&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;… … …&lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;— &lt;a href="https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison"&gt;&lt;strong&gt;7.2.14&lt;/strong&gt; Strict Equality Comparison&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Following the definition of &lt;code&gt;NaN&lt;/code&gt; from the IEEE:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Four mutually exclusive relations are possible: less than, equal, greater than, and unordered. The last case arises when at least one operand is NaN. Every NaN shall compare unordered with everything, including itself.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://stackoverflow.com/questions/1565164/1573715#1573715"&gt;“What is the rationale for all comparisons returning false for IEEE754 NaN values?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Object.is()&lt;/code&gt; determines if two values have the same value or not. It works similar to the &lt;code&gt;===&lt;/code&gt; operator but there are a few weird cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;Object.is(NaN, NaN); // -&amp;gt; true
NaN === NaN; // -&amp;gt; false

Object.is(-0, 0); // -&amp;gt; false
-0 === 0; // -&amp;gt; true

Object.is(NaN, 0 / 0); // -&amp;gt; true
NaN === 0 / 0; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;In JavaScript lingo, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; are the same value but they're not strictly equal. &lt;code&gt;NaN === NaN&lt;/code&gt; being false is apparently due to historical reasons so it would probably be better to accept it as it is.&lt;/p&gt; 
&lt;p&gt;Similarly, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are strictly equal, but they're not the same value.&lt;/p&gt; 
&lt;p&gt;For more details about &lt;code&gt;NaN === NaN&lt;/code&gt;, see the above case.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.es/ecma262/#sec-object.is"&gt;Here are the TC39 specs about Object.is&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness"&gt;Equality comparisons and sameness&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;It's a fail&lt;/h2&gt; 
&lt;p&gt;You would not believe, but …&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(![] + [])[+[]] +
  (![] + [])[+!+[]] +
  ([![]] + [][[]])[+!+[] + [+[]]] +
  (![] + [])[!+[] + !+[]];
// -&amp;gt; 'fail'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;By breaking that mass of symbols into pieces, we notice that the following pattern occurs often:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;![] + []; // -&amp;gt; 'false'
![]; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So we try adding &lt;code&gt;[]&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. But due to a number of internal function calls (&lt;code&gt;binary + Operator&lt;/code&gt; -&amp;gt; &lt;code&gt;ToPrimitive&lt;/code&gt; -&amp;gt; &lt;code&gt;[[DefaultValue]]&lt;/code&gt;) we end up converting the right operand to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;![] + [].toString(); // 'false'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thinking of a string as an array we can access its first character via &lt;code&gt;[0]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"false"[0]; // -&amp;gt; 'f'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The rest is obvious, but the &lt;code&gt;i&lt;/code&gt; is tricky. The &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;fail&lt;/code&gt; is grabbed by generating the string &lt;code&gt;'falseundefined'&lt;/code&gt; and grabbing the element on index &lt;code&gt;['10']&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;More examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+![]          // -&amp;gt; 0
+!![]         // -&amp;gt; 1
!![]          // -&amp;gt; true
![]           // -&amp;gt; false
[][[]]        // -&amp;gt; undefined
+!![] / +![]  // -&amp;gt; Infinity
[] + {}       // -&amp;gt; "[object Object]"
+{}           // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://patriciopalladino.com/blog/2012/08/09/non-alphanumeric-javascript.html"&gt;Brainfuck beware: JavaScript is after you!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bluewings.github.io/en/writing-a-sentence-without-using-the-alphabet/#weird-javascript-generator"&gt;Writing a sentence without using the Alphabet&lt;/a&gt; — generate any phrase using JavaScript&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;An array is a truthy value, however, it's not equal to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!![]       // -&amp;gt; true
[] == true // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Here are links to the corresponding sections in the ECMA-262 specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-logical-not-operator"&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;null&lt;/code&gt; is a falsy value, it's not equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!!null; // -&amp;gt; false
null == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, other falsy values, like &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt; are equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;0 == false; // -&amp;gt; true
"" == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The explanation is the same as for previous example. Here's the corresponding link:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ This is part of the Browser API and won't work in a Node.js environment ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;document.all&lt;/code&gt; is an array-like object and it gives access to the DOM nodes in the page, it responds to the &lt;code&gt;typeof&lt;/code&gt; function as &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all instanceof Object; // -&amp;gt; true
typeof document.all; // -&amp;gt; 'undefined'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, &lt;code&gt;document.all&lt;/code&gt; is not equal to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all === undefined; // -&amp;gt; false
document.all === null; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all == null; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;document.all&lt;/code&gt; used to be a way to access DOM elements, in particular with old versions of IE. While it has never been a standard it was broadly used in the old age JS code. When the standard progressed with new APIs (such as &lt;code&gt;document.getElementById&lt;/code&gt;) this API call became obsolete and the standard committee had to decide what to do with it. Because of its broad use they decided to keep the API but introduce a willful violation of the JavaScript specification. The reason why it responds to &lt;code&gt;false&lt;/code&gt; when using the &lt;a href="https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison"&gt;Strict Equality Comparison&lt;/a&gt; with &lt;code&gt;undefined&lt;/code&gt; while &lt;code&gt;true&lt;/code&gt; when using the &lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;Abstract Equality Comparison&lt;/a&gt; is due to the willful violation of the specification that explicitly allows that.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://html.spec.whatwg.org/multipage/obsolete.html#dom-document-all"&gt;“Obsolete features - document.all”&lt;/a&gt; at WhatWG - HTML spec — &lt;a href="https://github.com/getify/You-Dont-Know-JS/raw/0d79079b61dad953bbfde817a5893a49f7e889fb/types%20%26%20grammar/ch4.md#falsy-objects"&gt;“Chapter 4 - ToBoolean - Falsy values”&lt;/a&gt; at YDKJS - Types &amp;amp; Grammar&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Minimal value is greater than zero&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is the smallest number, which is greater than zero:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number.MIN_VALUE &amp;gt; 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is &lt;code&gt;5e-324&lt;/code&gt;, i.e. the smallest positive number that can be represented within float precision, i.e. that's as close as you can get to zero. It defines the best resolution that floats can give you.&lt;/p&gt; 
 &lt;p&gt;Now the overall smallest value is &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; although it's not really numeric in a strict sense.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://stackoverflow.com/questions/26614728/why-is-0-less-than-number-min-value-in-javascript"&gt;“Why is &lt;code&gt;0&lt;/code&gt; less than &lt;code&gt;Number.MIN_VALUE&lt;/code&gt; in JavaScript?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number.min_value"&gt;&lt;strong&gt;20.1.2.9&lt;/strong&gt; Number.MIN_VALUE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;function is not a function&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ A bug present in V8 v5.5 or lower (Node.js &amp;lt;=7) ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All of you know about the annoying &lt;em&gt;undefined is not a function&lt;/em&gt;, but what about this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declare a class which extends null
class Foo extends null {}
// -&amp;gt; [Function: Foo]

new Foo() instanceof null;
// &amp;gt; TypeError: function is not a function
// &amp;gt;     at … … …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a part of the specification. It's just a bug that has now been fixed, so there shouldn't be a problem with it in the future.&lt;/p&gt; 
&lt;h3&gt;Super constructor null of Foo is not a constructor&lt;/h3&gt; 
&lt;p&gt;It's continuation of story with previous bug in modern environment (tested with Chrome 71 and Node.js v11.8.0).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {}
new Foo() instanceof null;
// &amp;gt; TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a bug because:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Object.getPrototypeOf(Foo.prototype); // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the class has no constructor the call from prototype chain. But in the parent has no constructor. Just in case, I’ll clarify that &lt;code&gt;null&lt;/code&gt; is an object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof null === "object";
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Therefore, you can inherit from it (although in the world of the OOP for such terms would have beaten me). So you can't call the null constructor. If you change this code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {
  constructor() {
    console.log("something");
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You see the error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if you add &lt;code&gt;super&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {
  constructor() {
    console.log(111);
    super();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JS throws an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/pull/102#discussion_r259143582"&gt;An explanation of this issue&lt;/a&gt; by &lt;a href="https://github.com/geekjob"&gt;@geekjob&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adding arrays&lt;/h2&gt; 
&lt;p&gt;What if you try to add two arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[1, 2, 3] + [4, 5, 6]; // -&amp;gt; '1,2,34,5,6'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The concatenation happens. Step-by-step, it looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[1, 2, 3] +
  [4, 5, 6][
    // call toString()
    (1, 2, 3)
  ].toString() +
  [4, 5, 6].toString();
// concatenation
"1,2,3" + "4,5,6";
// -&amp;gt;
("1,2,34,5,6");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trailing commas in array&lt;/h2&gt; 
&lt;p&gt;You've created an array with 4 empty elements. Despite all, you'll get an array with three elements, because of trailing commas:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let a = [, , ,];
a.length; // -&amp;gt; 3
a.toString(); // -&amp;gt; ',,'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Trailing commas&lt;/strong&gt; (sometimes called "final commas") can be useful when adding new elements, parameters, or properties to JavaScript code. If you want to add a new property, you can simply add a new line without modifying the previously last line if that line already uses a trailing comma. This makes version-control diffs cleaner and editing code might be less troublesome.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas"&gt;Trailing commas&lt;/a&gt; at MDN&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Array equality is a monster&lt;/h2&gt; 
&lt;p&gt;Array equality is a monster in JS, as you can see below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[] == ''   // -&amp;gt; true
[] == 0    // -&amp;gt; true
[''] == '' // -&amp;gt; true
[0] == 0   // -&amp;gt; true
[0] == ''  // -&amp;gt; false
[''] == 0  // -&amp;gt; true

[null] == ''      // true
[null] == 0       // true
[undefined] == '' // true
[undefined] == 0  // true

[[]] == 0  // true
[[]] == '' // true

[[[[[[]]]]]] == '' // true
[[[[[[]]]]]] == 0  // true

[[[[[[ null ]]]]]] == 0  // true
[[[[[[ null ]]]]]] == '' // true

[[[[[[ undefined ]]]]]] == 0  // true
[[[[[[ undefined ]]]]]] == '' // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You should watch very carefully for the above examples! The behaviour is described in section &lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt; of the specification.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;If we don't pass any arguments into the &lt;code&gt;Number&lt;/code&gt; constructor, we'll get &lt;code&gt;0&lt;/code&gt;. The value &lt;code&gt;undefined&lt;/code&gt; is assigned to formal arguments when there are no actual arguments, so you might expect that &lt;code&gt;Number&lt;/code&gt; without arguments takes &lt;code&gt;undefined&lt;/code&gt; as a value of its parameter. However, when we pass &lt;code&gt;undefined&lt;/code&gt;, we will get &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number(); // -&amp;gt; 0
Number(undefined); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If no arguments were passed to this function's invocation, let &lt;code&gt;n&lt;/code&gt; be &lt;code&gt;+0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Else, let &lt;code&gt;n&lt;/code&gt; be ? &lt;code&gt;ToNumber(value)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In case of &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;ToNumber(undefined)&lt;/code&gt; should return &lt;code&gt;NaN&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Here's the corresponding section:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number-constructor"&gt;&lt;strong&gt;20.1.1&lt;/strong&gt; The Number Constructor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tonumber"&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; is famous by its quirks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt("f*ck"); // -&amp;gt; NaN
parseInt("f*ck", 16); // -&amp;gt; 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; This happens because &lt;code&gt;parseInt&lt;/code&gt; will continue parsing character-by-character until it hits a character it doesn't know. The &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;'f*ck'&lt;/code&gt; is the hexadecimal digit &lt;code&gt;15&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Parsing &lt;code&gt;Infinity&lt;/code&gt; to integer is something…&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;//
parseInt("Infinity", 10); // -&amp;gt; NaN
// ...
parseInt("Infinity", 18); // -&amp;gt; NaN...
parseInt("Infinity", 19); // -&amp;gt; 18
// ...
parseInt("Infinity", 23); // -&amp;gt; 18...
parseInt("Infinity", 24); // -&amp;gt; 151176378
// ...
parseInt("Infinity", 29); // -&amp;gt; 385849803
parseInt("Infinity", 30); // -&amp;gt; 13693557269
// ...
parseInt("Infinity", 34); // -&amp;gt; 28872273981
parseInt("Infinity", 35); // -&amp;gt; 1201203301724
parseInt("Infinity", 36); // -&amp;gt; 1461559270678...
parseInt("Infinity", 37); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful with parsing &lt;code&gt;null&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt(null, 24); // -&amp;gt; 23
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It's converting &lt;code&gt;null&lt;/code&gt; to the string &lt;code&gt;"null"&lt;/code&gt; and trying to convert it. For radixes 0 through 23, there are no numerals it can convert, so it returns NaN. At 24, &lt;code&gt;"n"&lt;/code&gt;, the 14th letter, is added to the numeral system. At 31, &lt;code&gt;"u"&lt;/code&gt;, the 21st letter, is added and the entire string can be decoded. At 37 on there is no longer any valid numeral set that can be generated and &lt;code&gt;NaN&lt;/code&gt; is returned.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://stackoverflow.com/questions/6459758/parseintnull-24-23-wait-what"&gt;“parseInt(null, 24) === 23… wait, what?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Don't forget about octals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt("06"); // 6
parseInt("08"); // 8 if support ECMAScript 5
parseInt("08"); // 0 if not support ECMAScript 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; If the input string begins with "0", radix is eight (octal) or 10 (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet. For this reason always specify a radix when using &lt;code&gt;parseInt&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; always convert input to string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 2
Number({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful while parsing floating point values&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt(0.000001); // -&amp;gt; 0
parseInt(0.0000001); // -&amp;gt; 1
parseInt(1 / 1999999); // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; &lt;code&gt;ParseInt&lt;/code&gt; takes a string argument and returns an integer of the specified radix. &lt;code&gt;ParseInt&lt;/code&gt; also strips anything after and including the first non-digit in the string parameter. &lt;code&gt;0.000001&lt;/code&gt; is converted to a string &lt;code&gt;"0.000001"&lt;/code&gt; and the &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;. When &lt;code&gt;0.0000001&lt;/code&gt; is converted to a string it is treated as &lt;code&gt;"1e-7"&lt;/code&gt; and hence &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. &lt;code&gt;1/1999999&lt;/code&gt; is interpreted as &lt;code&gt;5.00000250000125e-7&lt;/code&gt; and &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;5&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Let's do some math:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true + true; // -&amp;gt; 2
(true + true) * (true + true) - true; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hmmm… 🤔&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We can coerce values to numbers with the &lt;code&gt;Number&lt;/code&gt; constructor. It's quite obvious that &lt;code&gt;true&lt;/code&gt; will be coerced to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number(true); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The unary plus operator attempts to convert its value into a number. It can convert string representations of integers and floats, as well as the non-string values &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt;. If it cannot parse a particular value, it will evaluate to &lt;code&gt;NaN&lt;/code&gt;. That means we can coerce &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+true; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you're performing addition or multiplication, the &lt;code&gt;ToNumber&lt;/code&gt; method is invoked. According to the specification, this method returns:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;true&lt;/strong&gt;, return &lt;strong&gt;1&lt;/strong&gt;. If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;false&lt;/strong&gt;, return &lt;strong&gt;+0&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;That's why we can add boolean values as regular numbers and get correct results.&lt;/p&gt; 
&lt;p&gt;Corresponding sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator"&gt;&lt;strong&gt;12.5.6&lt;/strong&gt; Unary &lt;code&gt;+&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tonumber"&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HTML comments are valid in JavaScript&lt;/h2&gt; 
&lt;p&gt;You will be impressed, but &lt;code&gt;&amp;lt;!--&lt;/code&gt; (which is known as HTML comment) is a valid comment in JavaScript.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// valid comment
&amp;lt;!-- valid comment too
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Impressed? HTML-like comments were intended to allow browsers that didn't understand the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to degrade gracefully. These browsers, e.g. Netscape 1.x are no longer popular. So there is really no point in putting HTML comments in your script tags anymore.&lt;/p&gt; 
&lt;p&gt;Since Node.js is based on the V8 engine, HTML-like comments are supported by the Node.js runtime too. Moreover, they're a part of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-html-like-comments"&gt;&lt;strong&gt;B.1.3&lt;/strong&gt; HTML-like Comments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/h2&gt; 
&lt;p&gt;Type of &lt;code&gt;NaN&lt;/code&gt; is a &lt;code&gt;'number'&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof NaN; // -&amp;gt; 'number'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Explanations of how &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt; operators work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-typeof-operator"&gt;&lt;strong&gt;12.5.5&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-instanceofoperator"&gt;&lt;strong&gt;12.10.4&lt;/strong&gt; Runtime Semantics: InstanceofOperator(&lt;code&gt;O&lt;/code&gt;,&lt;code&gt;C&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof []; // -&amp;gt; 'object'
typeof null; // -&amp;gt; 'object'

// however
null instanceof Object; // false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The behavior of &lt;code&gt;typeof&lt;/code&gt; operator is defined in this section of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/12.0/#sec-typeof-operator"&gt;&lt;strong&gt;13.5.3&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;According to the specification, the &lt;code&gt;typeof&lt;/code&gt; operator returns a string according to &lt;a href="https://262.ecma-international.org/12.0/#table-typeof-operator-results"&gt;Table 37: &lt;code&gt;typeof&lt;/code&gt; Operator Results&lt;/a&gt;. For &lt;code&gt;null&lt;/code&gt;, ordinary, standard exotic and non-standard exotic objects, which do not implement &lt;code&gt;[[Call]]&lt;/code&gt;, it returns the string &lt;code&gt;"object"&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;However, you can check the type of an object by using the &lt;code&gt;toString&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Object.prototype.toString.call([]);
// -&amp;gt; '[object Array]'

Object.prototype.toString.call(new Date());
// -&amp;gt; '[object Date]'

Object.prototype.toString.call(null);
// -&amp;gt; '[object Null]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Magically increasing numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;999999999999999; // -&amp;gt; 999999999999999
9999999999999999; // -&amp;gt; 10000000000000000

10000000000000000; // -&amp;gt; 10000000000000000
10000000000000000 + 1; // -&amp;gt; 10000000000000000
10000000000000000 + 1.1; // -&amp;gt; 10000000000000002
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is caused by IEEE 754-2008 standard for Binary Floating-Point Arithmetic. At this scale, it rounds to the nearest even number. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types-number-type"&gt;&lt;strong&gt;6.1.6&lt;/strong&gt; The Number Type&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/IEEE_754"&gt;IEEE 754&lt;/a&gt; on Wikipedia&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;A well-known joke. An addition of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; is deadly precise:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;0.1 + 0.2; // -&amp;gt; 0.30000000000000004
0.1 + 0.2 === 0.3; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The answer for the &lt;a href="https://stackoverflow.com/questions/588004/is-floating-point-math-broken"&gt;”Is floating point math broken?”&lt;/a&gt; question on StackOverflow:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The constants &lt;code&gt;0.2&lt;/code&gt; and &lt;code&gt;0.3&lt;/code&gt; in your program will also be approximations to their true values. It happens that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.2&lt;/code&gt; is larger than the rational number &lt;code&gt;0.2&lt;/code&gt; but that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.3&lt;/code&gt; is smaller than the rational number &lt;code&gt;0.3&lt;/code&gt;. The sum of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; winds up being larger than the rational number &lt;code&gt;0.3&lt;/code&gt; and hence disagreeing with the constant in your code.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This problem is so known that there is even a website called &lt;a href="http://0.30000000000000004.com/"&gt;0.30000000000000004.com&lt;/a&gt;. It occurs in every language that uses floating-point math, not just JavaScript.&lt;/p&gt; 
&lt;h2&gt;Patching numbers&lt;/h2&gt; 
&lt;p&gt;You can add your own methods to wrapper objects like &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number.prototype.isOne = function() {
  return Number(this) === 1;
};

(1.0).isOne(); // -&amp;gt; true
(1).isOne(); // -&amp;gt; true
(2.0).isOne(); // -&amp;gt; false
(7).isOne(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Obviously, you can extend the &lt;code&gt;Number&lt;/code&gt; object like any other object in JavaScript. However, it's not recommended if the behavior of the defined method is not a part of the specification. Here is the list of &lt;code&gt;Number&lt;/code&gt;'s properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number-objects"&gt;&lt;strong&gt;20.1&lt;/strong&gt; Number Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparison of three numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 &amp;lt; 2 &amp;lt; 3; // -&amp;gt; true
3 &amp;gt; 2 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work that way? Well, the problem is in the first part of an expression. Here's how it works:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 &amp;lt; 2 &amp;lt; 3; // 1 &amp;lt; 2 -&amp;gt; true
true &amp;lt; 3; // true -&amp;gt; 1
1 &amp;lt; 3; // -&amp;gt; true

3 &amp;gt; 2 &amp;gt; 1; // 3 &amp;gt; 2 -&amp;gt; true
true &amp;gt; 1; // true -&amp;gt; 1
1 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can fix this with &lt;em&gt;Greater than or equal operator (&lt;code&gt;&amp;gt;=&lt;/code&gt;)&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;3 &amp;gt; 2 &amp;gt;= 1; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about Relational operators in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-relational-operators"&gt;&lt;strong&gt;12.10&lt;/strong&gt; Relational Operators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Funny math&lt;/h2&gt; 
&lt;p&gt;Often the results of arithmetic operations in JavaScript might be quite unexpected. Consider these examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt; 3  - 1  // -&amp;gt; 2
 3  + 1  // -&amp;gt; 4
'3' - 1  // -&amp;gt; 2
'3' + 1  // -&amp;gt; '31'

'' + '' // -&amp;gt; ''
[] + [] // -&amp;gt; ''
{} + [] // -&amp;gt; 0
[] + {} // -&amp;gt; '[object Object]'
{} + {} // -&amp;gt; '[object Object][object Object]'

'222' - -'111' // -&amp;gt; 333

[4] * [4]       // -&amp;gt; 16
[] * []         // -&amp;gt; 0
[4, 4] * [4, 4] // NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;What's happening in the first four examples? Here's a small table to understand addition in JavaScript:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Number  + Number  -&amp;gt; addition
Boolean + Number  -&amp;gt; addition
Boolean + Boolean -&amp;gt; addition
Number  + String  -&amp;gt; concatenation
String  + Boolean -&amp;gt; concatenation
String  + String  -&amp;gt; concatenation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about other examples? A &lt;code&gt;ToPrimitive&lt;/code&gt; and &lt;code&gt;ToString&lt;/code&gt; methods are being implicitly called for &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; before addition. Read more about evaluation process in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-toprimitive"&gt;&lt;strong&gt;7.1.1&lt;/strong&gt; ToPrimitive(&lt;code&gt;input&lt;/code&gt; [,&lt;code&gt;PreferredType&lt;/code&gt;])&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tostring"&gt;&lt;strong&gt;7.1.12&lt;/strong&gt; ToString(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Notably, &lt;code&gt;{} + []&lt;/code&gt; here is the exception. The reason why it differs from &lt;code&gt;[] + {}&lt;/code&gt; is that, without parenthesis, it is interpreted as a code block and then a unary +, converting &lt;code&gt;[]&lt;/code&gt; into a number. It sees the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  // a code block here
}
+[]; // -&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get the same output as &lt;code&gt;[] + {}&lt;/code&gt; we can wrap it in parenthesis.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;({} + []); // -&amp;gt; [object Object]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Addition of RegExps&lt;/h2&gt; 
&lt;p&gt;Did you know you can add numbers like this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Patch a toString method
RegExp.prototype.toString =
  function() {
    return this.source;
  } /
  7 /
  -/5/; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-get-regexp.prototype.source"&gt;&lt;strong&gt;21.2.5.10&lt;/strong&gt; get RegExp.prototype.source&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Strings aren't instances of &lt;code&gt;String&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"str"; // -&amp;gt; 'str'
typeof "str"; // -&amp;gt; 'string'
"str" instanceof String; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; constructor returns a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof String("str"); // -&amp;gt; 'string'
String("str"); // -&amp;gt; 'str'
String("str") == "str"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let's try with a &lt;code&gt;new&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new String("str") == "str"; // -&amp;gt; true
typeof new String("str"); // -&amp;gt; 'object'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Object? What's that?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new String("str"); // -&amp;gt; [String: 'str']
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More information about the String constructor in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-string-constructor"&gt;&lt;strong&gt;21.1.1&lt;/strong&gt; The String Constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Calling functions with backticks&lt;/h2&gt; 
&lt;p&gt;Let's declare a function which logs all params into the console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function f(...args) {
  return args;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No doubt, you know you can call this function like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;f(1, 2, 3); // -&amp;gt; [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But did you know you can call any function with backticks?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;f`true is ${true}, false is ${false}, array is ${[1, 2, 3]}`;
// -&amp;gt; [ [ 'true is ', ', false is ', ', array is ', '' ],
// -&amp;gt;   true,
// -&amp;gt;   false,
// -&amp;gt;   [ 1, 2, 3 ] ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Well, this is not magic at all if you're familiar with &lt;em&gt;Tagged template literals&lt;/em&gt;. In the example above, &lt;code&gt;f&lt;/code&gt; function is a tag for template literal. Tags before template literal allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function template(strings, ...keys) {
  // do something with strings and keys…
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href="http://mxstbr.blog/2016/11/styled-components-magic-explained/"&gt;magic behind&lt;/a&gt; famous library called &lt;a href="https://www.styled-components.com/"&gt;💅 styled-components&lt;/a&gt;, which is popular in the React community.&lt;/p&gt; 
&lt;p&gt;Link to the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tagged-templates"&gt;&lt;strong&gt;12.3.7&lt;/strong&gt; Tagged Templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Call call call&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Found by &lt;a href="http://twitter.com/cramforce"&gt;@cramforce&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log.call.call.call.call.call.apply(a =&amp;gt; a, [1, 2]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Attention, it could break your mind! Try to reproduce this code in your head: we're applying the &lt;code&gt;call&lt;/code&gt; method using the &lt;code&gt;apply&lt;/code&gt; method. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-function.prototype.call"&gt;&lt;strong&gt;19.2.3.3&lt;/strong&gt; Function.prototype.call(&lt;code&gt;thisArg&lt;/code&gt;, ...&lt;code&gt;args&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-function.prototype.apply"&gt;**19.2.3.1 ** Function.prototype.apply(&lt;code&gt;thisArg&lt;/code&gt;, &lt;code&gt;argArray&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const c = "constructor";
c[c][c]('console.log("WTF?")')(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Let's consider this example step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declare a new constant which is a string 'constructor'
const c = "constructor";

// c is a string
c; // -&amp;gt; 'constructor'

// Getting a constructor of string
c[c]; // -&amp;gt; [Function: String]

// Getting a constructor of constructor
c[c][c]; // -&amp;gt; [Function: Function]

// Call the Function constructor and pass
// the body of new function as an argument
c[c][c]('console.log("WTF?")'); // -&amp;gt; [Function: anonymous]

// And then call this anonymous function
// The result is console-logging a string 'WTF?'
c[c][c]('console.log("WTF?")')(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An &lt;code&gt;Object.prototype.constructor&lt;/code&gt; returns a reference to the &lt;code&gt;Object&lt;/code&gt; constructor function that created the instance object. In case with strings it is &lt;code&gt;String&lt;/code&gt;, in case with numbers it is &lt;code&gt;Number&lt;/code&gt; and so on.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor"&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-object.prototype.constructor"&gt;&lt;strong&gt;19.1.3.1&lt;/strong&gt; Object.prototype.constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Object as a key of object's property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{ [{}]: {} } // -&amp;gt; { '[object Object]': {} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work so? Here we're using a &lt;em&gt;Computed property name&lt;/em&gt;. When you pass an object between those brackets, it coerces object to a string, so we get the property key &lt;code&gt;'[object Object]'&lt;/code&gt; and the value &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We can make "brackets hell" like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;({ [{}]: { [{}]: {} } }[{}][{}]); // -&amp;gt; {}

// structure:
// {
//   '[object Object]': {
//     '[object Object]': {}
//   }
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about object literals here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer"&gt;&lt;strong&gt;12.2.6&lt;/strong&gt; Object Initializer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As we know, primitives don't have prototypes. However, if we try to get a value of &lt;code&gt;__proto__&lt;/code&gt; for primitives, we would get this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This happens because when something doesn't have a prototype, it will be wrapped into a wrapper object using the &lt;code&gt;ToObject&lt;/code&gt; method. So, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(1).__proto__; // -&amp;gt; [Number: 0]
(1).__proto__.__proto__; // -&amp;gt; {}
(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is more information about &lt;code&gt;__proto__&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-object.prototype.__proto__"&gt;&lt;strong&gt;B.2.2.1&lt;/strong&gt; Object.prototype.&lt;strong&gt;proto&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-toobject"&gt;&lt;strong&gt;7.1.13&lt;/strong&gt; ToObject(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What is the result of the expression below?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;`${{ Object }}`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// -&amp;gt; '[object Object]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We defined an object with a property &lt;code&gt;Object&lt;/code&gt; using &lt;em&gt;Shorthand property notation&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  Object: Object;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then we've passed this object to the template literal, so the &lt;code&gt;toString&lt;/code&gt; method calls for that object. That's why we get the string &lt;code&gt;'[object Object]'&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-template-literals"&gt;&lt;strong&gt;12.2.9&lt;/strong&gt; Template Literals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Destructuring with default values&lt;/h2&gt; 
&lt;p&gt;Consider this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let x,
  { x: y = 1 } = { x };
y;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example above is a great task for an interview. What the value of &lt;code&gt;y&lt;/code&gt;? The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let x,
  { x: y = 1 } = { x };
y;
//  ↑       ↑           ↑    ↑
//  1       3           2    4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the example above:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We declare &lt;code&gt;x&lt;/code&gt; with no value, so it's &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we pack the value of &lt;code&gt;x&lt;/code&gt; into the object property &lt;code&gt;x&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we extract the value of &lt;code&gt;x&lt;/code&gt; using destructuring and want to assign it to &lt;code&gt;y&lt;/code&gt;. If the value is not defined, then we're going to use &lt;code&gt;1&lt;/code&gt; as the default value.&lt;/li&gt; 
 &lt;li&gt;Return the value of &lt;code&gt;y&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dots and spreading&lt;/h2&gt; 
&lt;p&gt;Interesting examples could be composed with spreading of arrays. Consider this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...[..."..."]].length; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why &lt;code&gt;3&lt;/code&gt;? When we use the &lt;a href="http://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer"&gt;spread operator&lt;/a&gt;, the &lt;code&gt;@@iterator&lt;/code&gt; method is called, and the returned iterator is used to obtain the values to be iterated. The default iterator for string spreads a string into characters. After spreading, we pack these characters into an array. Then we spread this array again and pack it back to an array.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;'...'&lt;/code&gt; string consists with three &lt;code&gt;.&lt;/code&gt; characters, so the length of resulting array is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Now, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...'...']             // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']]        // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']].length // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Obviously, we can spread and wrap the elements of an array as many times as we want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...'...']                 // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']]            // -&amp;gt; [ '.', '.', '.' ]
[...[...[...'...']]]       // -&amp;gt; [ '.', '.', '.' ]
[...[...[...[...'...']]]]  // -&amp;gt; [ '.', '.', '.' ]
// and so on …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Labels&lt;/h2&gt; 
&lt;p&gt;Not many programmers know about labels in JavaScript. They are kind of interesting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;foo: {
  console.log("first");
  break foo;
  console.log("second");
}

// &amp;gt; first
// -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The labeled statement is used with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements. You can use a label to identify a loop, and then use the &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements to indicate whether a program should interrupt the loop or continue its execution.&lt;/p&gt; 
&lt;p&gt;In the example above, we identify a label &lt;code&gt;foo&lt;/code&gt;. After that &lt;code&gt;console.log('first');&lt;/code&gt; executes and then we interrupt the execution.&lt;/p&gt; 
&lt;p&gt;Read more about labels in JavaScript:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.github.io/ecma262/#sec-labelled-statements"&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label"&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Nested labels&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;a: b: c: d: e: f: g: 1, 2, 3, 4, 5; // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Similar to previous examples, follow these links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-comma-operator"&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tc39.github.io/ecma262/#sec-labelled-statements"&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label"&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What will this expression return? &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(() =&amp;gt; {
  try {
    return 2;
  } finally {
    return 3;
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is &lt;code&gt;3&lt;/code&gt;. Surprised?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-try-statement"&gt;&lt;strong&gt;13.15&lt;/strong&gt; The &lt;code&gt;try&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Is this multiple inheritance?&lt;/h2&gt; 
&lt;p&gt;Take a look at the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new class F extends (String, Array) {}(); // -&amp;gt; F []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Is this a multiple inheritance? Nope.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The interesting part is the value of the &lt;code&gt;extends&lt;/code&gt; clause (&lt;code&gt;(String, Array)&lt;/code&gt;). The grouping operator always returns its last argument, so &lt;code&gt;(String, Array)&lt;/code&gt; is actually just &lt;code&gt;Array&lt;/code&gt;. That means we've just created a class which extends &lt;code&gt;Array&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-class-definitions"&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-comma-operator"&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A generator which yields itself&lt;/h2&gt; 
&lt;p&gt;Consider this example of a generator which yields itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function* f() {
  yield f;
})().next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see, the returned value is an object with its &lt;code&gt;value&lt;/code&gt; equal to &lt;code&gt;f&lt;/code&gt;. In that case, we can do something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function* f() {
  yield f;
})()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()
  .value()
  .next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }

// and so on
// …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;To understand why this works that way, read these sections of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-control-abstraction-objects"&gt;&lt;strong&gt;25&lt;/strong&gt; Control Abstraction Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-generator-objects"&gt;&lt;strong&gt;25.3&lt;/strong&gt; Generator Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A class of class&lt;/h2&gt; 
&lt;p&gt;Consider this obfuscated syntax playing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof new class {
  class() {}
}(); // -&amp;gt; 'object'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It seems like we're declaring a class inside of class. Should be an error, however, we get the string &lt;code&gt;'object'&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Since ECMAScript 5 era, &lt;em&gt;keywords&lt;/em&gt; are allowed as &lt;em&gt;property names&lt;/em&gt;. So think about it as this simple object example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const foo = {
  class: function() {}
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And ES6 standardized shorthand method definitions. Also, classes can be anonymous. So if we drop &lt;code&gt;: function&lt;/code&gt; part, we're going to get:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class {
  class() {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of a default class is always a simple object. And its typeof should return &lt;code&gt;'object'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Read more here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-method-definitions"&gt;&lt;strong&gt;14.3&lt;/strong&gt; Method Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-class-definitions"&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-coercible objects&lt;/h2&gt; 
&lt;p&gt;With well-known symbols, there's a way to get rid of type coercion. Take a look:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function nonCoercible(val) {
  if (val == null) {
    throw TypeError("nonCoercible should not be called with null or undefined");
  }

  const res = Object(val);

  res[Symbol.toPrimitive] = () =&amp;gt; {
    throw TypeError("Trying to coerce non-coercible object");
  };

  return res;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now we can use this like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// objects
const foo = nonCoercible({ foo: "foo" });

foo * 10; // -&amp;gt; TypeError: Trying to coerce non-coercible object
foo + "evil"; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// strings
const bar = nonCoercible("bar");

bar + "1"; // -&amp;gt; TypeError: Trying to coerce non-coercible object
bar.toString() + 1; // -&amp;gt; bar1
bar === "bar"; // -&amp;gt; false
bar.toString() === "bar"; // -&amp;gt; true
bar == "bar"; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// numbers
const baz = nonCoercible(1);

baz == 1; // -&amp;gt; TypeError: Trying to coerce non-coercible object
baz === 1; // -&amp;gt; false
baz.valueOf() === 1; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/chicoxyzzy/5dd24608e886adf5444499896dff1197"&gt;A gist by Sergey Rubanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-well-known-symbols"&gt;&lt;strong&gt;6.1.5.1&lt;/strong&gt; Well-Known Symbols&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; 10;
f(); // -&amp;gt; 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Okay, fine, but what about this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; {};
f(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You might expect &lt;code&gt;{}&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;. This is because the curly braces are part of the syntax of the arrow functions, so &lt;code&gt;f&lt;/code&gt; will return undefined. It is however possible to return the &lt;code&gt;{}&lt;/code&gt; object directly from an arrow function, by enclosing the return value with brackets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; ({});
f(); // -&amp;gt; {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Arrow functions can not be a constructor&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = function() {
  this.a = 1;
};
new f(); // -&amp;gt; f { 'a': 1 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; {
  this.a = 1;
};
new f(); // -&amp;gt; TypeError: f is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions cannot be used as constructors and will throw an error when used with &lt;code&gt;new&lt;/code&gt;. Because they have a lexical &lt;code&gt;this&lt;/code&gt;, and do not have a &lt;code&gt;prototype&lt;/code&gt; property, so it would not make much sense.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = function() {
  return arguments;
};
f("a"); // -&amp;gt; { '0': 'a' }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; arguments;
f("a"); // -&amp;gt; Uncaught ReferenceError: arguments is not defined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions are a lightweight version of regular functions with a focus on being short and lexical &lt;code&gt;this&lt;/code&gt;. At the same time arrow functions do not provide a binding for the &lt;code&gt;arguments&lt;/code&gt; object. As a valid alternative use the &lt;code&gt;rest parameters&lt;/code&gt; to achieve the same result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = (...args) =&amp;gt; args;
f("a");
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;Arrow functions&lt;/a&gt; at MDN.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky return&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; statement is also tricky. Consider this:&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function() {
  return
  {
    b: 10;
  }
})(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; and the returned expression must be in the same line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function() {
  return {
    b: 10
  };
})(); // -&amp;gt; { b: 10 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because of a concept called Automatic Semicolon Insertion, which automagically inserts semicolons after most newlines. In the first example, there is a semicolon inserted between the &lt;code&gt;return&lt;/code&gt; statement and the object literal, so the function returns &lt;code&gt;undefined&lt;/code&gt; and the object literal is never evaluated.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-rules-of-automatic-semicolon-insertion"&gt;&lt;strong&gt;11.9.1&lt;/strong&gt; Rules of Automatic Semicolon Insertion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-return-statement"&gt;&lt;strong&gt;13.10&lt;/strong&gt; The &lt;code&gt;return&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chaining assignments on object&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var foo = { n: 1 };
var bar = foo;

foo.x = foo = { n: 2 };

foo.x; // -&amp;gt; undefined
foo; // -&amp;gt; {n: 2}
bar; // -&amp;gt; {n: 1, x: {n: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From right to left, &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo, and the result of this assignment &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo.x, that's why bar is &lt;code&gt;{n: 1, x: {n: 2}}&lt;/code&gt; as bar is a reference to foo. But why foo.x is undefined while bar.x is not ?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Foo and bar references the same object &lt;code&gt;{n: 1}&lt;/code&gt;, and lvalues are resolved before assignations. &lt;code&gt;foo = {n: 2}&lt;/code&gt; is creating a new object, and so foo is updated to reference that new object. The trick here is foo in &lt;code&gt;foo.x = ...&lt;/code&gt; as a lvalue was resolved beforehand and still reference the old &lt;code&gt;foo = {n: 1}&lt;/code&gt; object and update it by adding the x value. After that chain assignments, bar still reference the old foo object, but foo reference the new &lt;code&gt;{n: 2}&lt;/code&gt; object, where x is not existing.&lt;/p&gt; 
&lt;p&gt;It's equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var foo = { n: 1 };
var bar = foo;

foo = { n: 2 }; // -&amp;gt; {n: 2}
bar.x = foo; // -&amp;gt; {n: 1, x: {n: 2}}
// bar.x point to the address of the new foo object
// it's not equivalent to: bar.x = {n: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Accessing object properties with arrays&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var obj = { property: 1 };
var array = ["property"];

obj[array]; // -&amp;gt; 1

// this also works with nested arrays
var nestedArray = [[[[[[[[[["property"]]]]]]]]]];
obj[nestedArray]; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about pseudo-multidimensional arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var map = {};
var x = 1;
var y = 2;
var z = 3;

map[[x, y, z]] = true;
map[[x + 10, y, z]] = true;

map["1,2,3"]; // -&amp;gt; true
map["11,2,3"]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The brackets &lt;code&gt;[]&lt;/code&gt; operator converts the passed expression using &lt;code&gt;toString&lt;/code&gt;. Converting a one-element array to a string is akin to converting the contained element to the string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;["property"].toString(); // -&amp;gt; 'property'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; can behave a bit strange in different browsers. Check out this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(0.7875).toFixed(3);
// Firefox: -&amp;gt; 0.787
// Chrome: -&amp;gt; 0.787
// IE11: -&amp;gt; 0.788
(0.7876).toFixed(3);
// Firefox: -&amp;gt; 0.788
// Chrome: -&amp;gt; 0.788
// IE11: -&amp;gt; 0.788
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;While your first instinct may be that IE11 is correct and Firefox/Chrome are wrong, the reality is that Firefox/Chrome are more directly obeying standards for numbers (IEEE-754 Floating Point), while IE11 is minutely disobeying them in (what is probably) an effort to give clearer results.&lt;/p&gt; 
&lt;p&gt;You can see why this occurs with a few quick tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Confirm the odd result of rounding a 5 down
(0.7875).toFixed(3); // -&amp;gt; 0.787
// It looks like it's just a 5 when you expand to the
// limits of 64-bit (double-precision) float accuracy
(0.7875).toFixed(14); // -&amp;gt; 0.78750000000000
// But what if you go beyond the limit?
(0.7875).toFixed(20); // -&amp;gt; 0.78749999999999997780
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Floating point numbers are not stored as a list of decimal digits internally, but through a more complicated methodology that produces tiny inaccuracies that are usually rounded away by toString and similar calls, but are actually present internally.&lt;/p&gt; 
&lt;p&gt;In this case, that "5" on the end was actually an extremely tiny fraction below a true 5. Rounding it at any reasonable length will render it as a 5... but it is actually not a 5 internally.&lt;/p&gt; 
&lt;p&gt;IE11, however, will report the value input with only zeros appended to the end even in the toFixed(20) case, as it seems to be forcibly rounding the value to reduce the troubles from hardware limits.&lt;/p&gt; 
&lt;p&gt;See for reference &lt;code&gt;NOTE 2&lt;/code&gt; on the ECMA-262 definition for &lt;code&gt;toFixed&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262//#sec-number.prototype.tofixed"&gt;&lt;strong&gt;20.1.3.3&lt;/strong&gt; Number.prototype.toFixed (&lt;code&gt;fractionDigits&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;I find this example hilarious:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Math.min() &amp;gt; Math.max(); // -&amp;gt; true
Math.min() &amp;lt; Math.max(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is a simple one. Let's consider each part of this expression separately:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Math.min(); // -&amp;gt; Infinity
Math.max(); // -&amp;gt; -Infinity
Infinity &amp;gt; -Infinity; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Why so? Well, &lt;code&gt;Math.max()&lt;/code&gt; is not the same thing as &lt;code&gt;Number.MAX_VALUE&lt;/code&gt;. It does not return the largest possible number.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Math.max&lt;/code&gt; takes arguments, tries to convert the to numbers, compares each one and then returns the largest remaining. If no arguments are given, the result is −∞. If any value is &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The opposite is happening for &lt;code&gt;Math.min&lt;/code&gt;. &lt;code&gt;Math.min&lt;/code&gt; returns ∞, if no arguments are given.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/5.1/#sec-15.8.2.11"&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.max&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/5.1/#sec-15.8.2.12"&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.min&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charlieharvey.org.uk/page/why_math_max_is_less_than_math_min"&gt;Why is &lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;?&lt;/a&gt; by Charlie Harvey&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;The following expressions seem to introduce a contradiction:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null == 0; // -&amp;gt; false
null &amp;gt; 0; // -&amp;gt; false
null &amp;gt;= 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;How can &lt;code&gt;null&lt;/code&gt; be neither equal to nor greater than &lt;code&gt;0&lt;/code&gt;, if &lt;code&gt;null &amp;gt;= 0&lt;/code&gt; is actually &lt;code&gt;true&lt;/code&gt;? (This also works with less than in the same way.)&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The way these three expressions are evaluated are all different and are responsible for producing this unexpected behavior.&lt;/p&gt; 
&lt;p&gt;First, the abstract equality comparison &lt;code&gt;null == 0&lt;/code&gt;. Normally, if this operator can't compare the values on either side properly, it converts both to numbers and compares the numbers. Then, you might expect the following behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// This is not what happens
(null == 0 + null) == +0;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, according to a close reading of the spec, the number conversion doesn't actually happen on a side that is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Therefore, if you have &lt;code&gt;null&lt;/code&gt; on one side of the equal sign, the other side must be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; for the expression to return &lt;code&gt;true&lt;/code&gt;. Since this is not the case, &lt;code&gt;false&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;p&gt;Next, the relational comparison &lt;code&gt;null &amp;gt; 0&lt;/code&gt;. The algorithm here, unlike that of the abstract equality operator, &lt;em&gt;will&lt;/em&gt; convert &lt;code&gt;null&lt;/code&gt; to a number. Therefore, we get this behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null &amp;gt; 0
+null = +0
0 &amp;gt; 0
false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, the relational comparison &lt;code&gt;null &amp;gt;= 0&lt;/code&gt;. You could argue that this expression should be the result of &lt;code&gt;null &amp;gt; 0 || null == 0&lt;/code&gt;; if this were the case, then the above results would mean that this would also be &lt;code&gt;false&lt;/code&gt;. However, the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator in fact works in a very different way, which is basically to take the opposite of the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. Because our example with the greater than operator above also holds for the less than operator, that means this expression is actually evaluated like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null &amp;gt;= 0;
!(null &amp;lt; 0);
!(+null &amp;lt; +0);
!(0 &amp;lt; 0);
!false;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison"&gt;&lt;strong&gt;7.2.12&lt;/strong&gt; Abstract Relational Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.campvanilla.com/javascript-the-curious-case-of-null-0-7b131644e274"&gt;An in-depth explanation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Same variable redeclaration&lt;/h2&gt; 
&lt;p&gt;JS allows to redeclare variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;a;
a;
// This is also valid
a, a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Works also in strict mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var a, a, a;
var a;
var a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;All definitions are merged into one definition.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-variable-statement"&gt;&lt;strong&gt;13.3.2&lt;/strong&gt; Variable Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Default behavior Array.prototype.sort()&lt;/h2&gt; 
&lt;p&gt;Imagine that you need to sort an array of numbers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[10, 1, 3].sort(); // -&amp;gt; [ 1, 10, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The default sort order is built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-array.prototype.sort"&gt;&lt;strong&gt;22.1.3.25&lt;/strong&gt; Array.prototype.sort ( comparefn )&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hint&lt;/h3&gt; 
&lt;p&gt;Pass &lt;code&gt;compareFn&lt;/code&gt; if you try to sort anything but string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[10, 1, 3].sort((a, b) =&amp;gt; a - b); // -&amp;gt; [ 1, 3, 10 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;resolve() won't return Promise instance&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const theObject = {
  a: 7
};
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; true
  console.log(value); // &amp;gt; { a: 7 }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; which is resolved from &lt;code&gt;thePromise&lt;/code&gt; is exactly &lt;code&gt;theObject&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How about input another &lt;code&gt;Promise&lt;/code&gt; into the &lt;code&gt;resolve&lt;/code&gt; function?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const theObject = new Promise((resolve, reject) =&amp;gt; {
  resolve(7);
}); // Promise instance object
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; false
  console.log(value); // &amp;gt; 7
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve"&gt;Promise.resolve() on MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The specification is &lt;a href="https://tc39.es/ecma262/#sec-promise-resolve-functions"&gt;ECMAScript 25.6.1.3.2 Promise Resolve Functions&lt;/a&gt;. But it is not quite human-friendly.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/h2&gt; 
&lt;p&gt;Write them in the console. They will return the value defined in the last object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{}{}; // -&amp;gt; undefined
{}{}{}; // -&amp;gt; undefined
{}{}{}{}; // -&amp;gt; undefined
{foo: 'bar'}{}; // -&amp;gt; 'bar'
{}{foo: 'bar'}; // -&amp;gt; 'bar'
{}{foo: 'bar'}{}; // -&amp;gt; 'bar'
{a: 'b'}{c:' d'}{}; // -&amp;gt; 'd'
{a: 'b', c: 'd'}{}; // &amp;gt; SyntaxError: Unexpected token ':'
({}{}); // &amp;gt; SyntaxError: Unexpected token '{'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;When inspecting each &lt;code&gt;{}&lt;/code&gt;, they returns undefined. If you inspect &lt;code&gt;{foo: 'bar'}{}&lt;/code&gt;, you will find &lt;code&gt;{foo: 'bar'}&lt;/code&gt; is &lt;code&gt;'bar'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There are two meanings for &lt;code&gt;{}&lt;/code&gt;: an object or a block. For example, the &lt;code&gt;{}&lt;/code&gt; in &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; means block. So we need to use &lt;code&gt;() =&amp;gt; ({})&lt;/code&gt; to return an object.&lt;/p&gt; 
&lt;p&gt;Let's use &lt;code&gt;{foo: 'bar'}&lt;/code&gt; as a block. Write this snippet in your console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;if (true) {
  foo: "bar";
} // -&amp;gt; 'bar'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Surprisingly, it behaviors the same! You can guess here that &lt;code&gt;{foo: 'bar'}{}&lt;/code&gt; is a block.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/h2&gt; 
&lt;p&gt;Consider this function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function a(x) {
  arguments[0] = "hello";
  console.log(x);
}

a(); // &amp;gt; undefined
a(1); // &amp;gt; "hello"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;arguments&lt;/code&gt; is an Array-like object that contains the values of the arguments passed to that function. When no arguments are passed, then there's no &lt;code&gt;x&lt;/code&gt; to override.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments"&gt;The arguments object&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/h2&gt; 
&lt;p&gt;This on is literally from hell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[666]["\155\141\160"]["\143\157\156\163\164\162\165\143\164\157\162"](
  "\141\154\145\162\164(666)"
)(666); // alert(666)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This one is based on octal escape sequences and multiple strings.&lt;/p&gt; 
&lt;p&gt;Any character with a character code lower than 256 (i.e. any character in the extended ASCII range) can be escaped using its octal-encoded character code, prefixed with &lt;code&gt;\&lt;/code&gt;. An example above is basically and &lt;code&gt;alert&lt;/code&gt; ecoded by octal escape sequances.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/aemkei/status/897172907222237185"&gt;Martin Kleppe tweet about it&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/javascript-escapes#octal"&gt;JavaScript character escape sequences&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/multiline-javascript-strings"&gt;Multi-Line JavaScript Strings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An infinite timeout&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an infinite timeout?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(() =&amp;gt; console.log("called"), Infinity); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will executed immediately instead of infinity delay.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Usually, runtime stores the delay as a 32-bit signed integer internally. This causes an integer overflow, resulting in the timeout being executed immediately.&lt;/p&gt; 
&lt;p&gt;For example, in Node.js we will get this warning:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;(node:1731) TimeoutOverflowWarning: Infinity does not fit into a 32-bit signed integer.
Timeout duration was set to 1.
(Use `node --trace-warnings ...` to show where the warning was created)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/api/timers.html#timers_settimeout_callback_delay_args"&gt;Node.js Documentation on Timers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3.org/TR/2011/WD-html5-20110525/timers.html"&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an callback that's not a function to &lt;code&gt;setTimeout&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout('{a: 1}', 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is also fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout({a: 1}, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'Uncaught SyntaxError: Unexpected identifier               setTimeout (async) (anonymous) @ VM__:1'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This throws an &lt;strong&gt;SyntaxError&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Note that this can easily happen if your function returns an object and you call it here instead of passing it! What if the content - policy is set to &lt;code&gt;self&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; console.error("[Report Only] Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: "script-src 'report-sample' 'self' ")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The console refuses to run it at all!&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; can be called with &lt;code&gt;code&lt;/code&gt; as first argument, which will be passed on to &lt;code&gt;eval&lt;/code&gt;, which is bad. Eval will coerce her input to String, and evaluate what is produced, so Objects becomes &lt;code&gt;'[object Object]'&lt;/code&gt; which has hmmm ... an &lt;code&gt;'Unexpected identifier'&lt;/code&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval"&gt;eval()&lt;/a&gt; on MDN (don't use this)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"&gt;Content Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3.org/TR/2011/WD-html5-20110525/timers.html"&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Double dot&lt;/h2&gt; 
&lt;p&gt;Let's try to coerce a number to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;27.toString() // &amp;gt; Uncaught SyntaxError: Invalid or unexpected token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Maybe we should try with two dots?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;27..toString(); // -&amp;gt; '27'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But why doesn't first example work?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;It's just a language grammar limitation.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;.&lt;/code&gt; character presents an ambiguity. It can be understood to be the member operator, or a decimal, depending on its placement.&lt;/p&gt; 
&lt;p&gt;The specification's interpretation of the &lt;code&gt;.&lt;/code&gt; character in that particular position is that it will be a decimal. This is defined by the numeric literal syntax of ECMAScript.&lt;/p&gt; 
&lt;p&gt;You must always use parenthesis or an addition dot to make such expression valid.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(27).toString(); // -&amp;gt; '27'
// or
27..toString(); // -&amp;gt; '27'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6853865/usage-of-tostring-in-javascript/6853910#6853910"&gt;Usage of toString in JavaScript&lt;/a&gt; on StackOverflow&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/13149282/why-does-10-tostring-work-but-10-tostring-does-not/13149301#13149301"&gt;Why does 10..toString() work, but 10.toString() does not?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extra Newness&lt;/h2&gt; 
&lt;p&gt;I present this as an oddity for your amusement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends Function {
  constructor(val) {
    super();
    this.prototype.val = val;
  }
}

new new Foo(":D")().val; // -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Constructors in JavaScript are just functions with some special treatment. By extending Function using the class syntax you create a class that, when instantiated, is now a function, which you can then additionally instantiate.&lt;/p&gt; 
&lt;p&gt;While not exhaustively tested, I believe the last statement can be analyzed thus:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new new Foo(":D")().val(new newFooInstance()).val;
veryNewFooInstance.val;
// -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a tiny addendum, doing &lt;code&gt;new Function('return "bar";')&lt;/code&gt; of course creates a function with the body &lt;code&gt;return "bar";&lt;/code&gt;. Since &lt;code&gt;super()&lt;/code&gt; in the constructor of our &lt;code&gt;Foo&lt;/code&gt; class is calling &lt;code&gt;Function&lt;/code&gt;'s constructor, it should come as no surprise now to see that we can additionally manipulate things in there.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends Function {
  constructor(val) {
    super(`
      this.val = arguments[0];
    `);
    this.prototype.val = val;
  }
}

var foo = new new Foo(":D")("D:");
foo.val; // -&amp;gt; 'D:'
delete foo.val; // remove the instance prop 'val', deferring back to the prototype's 'val'.
foo.val; // -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/issues/78"&gt;Class Extends Function: Extra Newness&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why you should use semicolons&lt;/h2&gt; 
&lt;p&gt;Writing some standard JavaScript… and then BOOM!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class SomeClass {
  ["array"] = []
  ["string"] = "str"
}

new SomeClass().array; // -&amp;gt; 'str'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What the …?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Once again, this is all thanks to the Automatic Semicolon Insertion.&lt;/p&gt; 
&lt;p&gt;An example above is basically the same as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class SomeClass {
  ["array"] = ([]["string"] = "str");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You basically assign a string &lt;code&gt;str&lt;/code&gt; into an &lt;code&gt;array&lt;/code&gt; property.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/SeaRyanC/status/1148726605222535168"&gt;An original tweet with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tc39/notes/raw/master/meetings/2017-09/sept-26.md"&gt;TC39 meeting when they debated about it&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Split a string by a space&lt;/h2&gt; 
&lt;p&gt;Have you ever tried to split a string by a space?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"".split(""); // -&amp;gt; []
// but…
"".split(" "); // -&amp;gt; [""]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is expected behaviour. Its responsibility is to divide the input string every time a separator occurs in that input string. When you pass in an empty string it'll never find a separator and thus return that string.&lt;/p&gt; 
&lt;p&gt;Let's quote the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The substrings are determined by searching from left to right for occurrences of &lt;code&gt;separator&lt;/code&gt;; these occurrences are not part of any String in the returned array, but serve to divide up the String value.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.es/ecma262/#sec-string.prototype.split"&gt;&lt;strong&gt;22.1.3.21&lt;/strong&gt; String.prototype.split&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/SeaRyanC/status/1331656278104440833"&gt;An original tween with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/kl13nt/status/1331742810932916227?s=20"&gt;A tween with an explanation&lt;/a&gt; by Nabil Tharwat&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A stringified string&lt;/h2&gt; 
&lt;p&gt;This caused a bug that I've been solving for a few days:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;JSON.stringify("production") === "production"; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Let's see what &lt;code&gt;JSON.stringify&lt;/code&gt; is returning:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;JSON.stringify("production"); // -&amp;gt; '"production"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is actually a stringified string, so it's true:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;'"production"' === "production"; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.json.org/json-en.html"&gt;ECMA-404 The JSON Data Interchange Standard.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 == true; // -&amp;gt; true
// but…
Boolean(1.1); // -&amp;gt; true
1.1 == true; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The comparison x == y, where x and y are values, produces true or false. Such a comparison is performed as follows:&lt;/p&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number and &lt;code&gt;Type(y)&lt;/code&gt; is String, return the result of the comparison &lt;code&gt;x == ! ToNumber(y)&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;So this comparison is performed like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 == true;
1 == Number(true);
1 == 1; // -&amp;gt; true
// but…
1.1 == true;
1.1 == Number(true);
1.1 == 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📚 Other resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://wtfjs.com/"&gt;wtfjs.com&lt;/a&gt; — a collection of those very special irregularities, inconsistencies and just plain painfully unintuitive moments for the language of the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;Wat&lt;/a&gt; — A lightning talk by Gary Bernhardt from CodeMash 2012&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2pL28CcEijU"&gt;What the... JavaScript?&lt;/a&gt; — Kyle Simpsons talk for Forward 2 attempts to “pull out the crazy” from JavaScript. He wants to help you produce cleaner, more elegant, more readable code, then inspire people to contribute to the open source community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://zero.milosz.ca/"&gt;Zeros in JavaScript&lt;/a&gt; — a comparison table of &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in JavaScript.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🤝 Supporting&lt;/h1&gt; 
&lt;p&gt;Hi! I work on this project in my spare time, in addition to my primary job. I hope you enjoy reading it. If you do, please, consider supporting me 🙏.&lt;/p&gt; 
&lt;p&gt;Every single donation is important. Your donation is gonna make a clear statement: My work is valued.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🙏 Thank you for your support! 🙏&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th align="center"&gt;Link&lt;/th&gt; 
   &lt;th align="center"&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Patreon&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;Become a patron&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://c5.patreon.com/external/logo/become_a_patron_button@2x.png" width="120px" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;BuyMeACoffee&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;Buy me a cup of ☕️ or 🥤&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://buymeacoffee.com/denysdovhan"&gt;&lt;img src="https://cdn.buymeacoffee.com/buttons/default-black.png" width="120px" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;code&gt;1EJsKs6rPsqa7QLoVLpe3wgcdL9Q8WmDxE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/3459374/107130426-0ae4f800-68d6-11eb-9b86-15bf33467615.png" width="120px" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ethereum&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;code&gt;0x6aF39C917359897ae6969Ad682C14110afe1a0a1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/3459374/107130370-55b24000-68d5-11eb-93f5-075355c7fcd4.png" width="120px" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Note:&lt;/strong&gt; I live in Ukraine and services like PayPal and Stripe don't work with Ukrainian bank accounts. This means there's no way for me to set up GitHub Sponsors, OpenCollective, or services relied on them. Sorry, those are the only ways you can support me for now.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;🎓 License&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://www.wtfpl.net"&gt;&lt;img src="https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square" alt="CC 4.0" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;© &lt;a href="http://denysdovhan.com"&gt;Denys Dovhan&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>google/earthengine-api</title>
      <link>https://github.com/google/earthengine-api</link>
      <description>&lt;p&gt;Python and JavaScript bindings for calling the Earth Engine API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Google Earth Engine API&lt;/h1&gt; 
&lt;p&gt;Python and JavaScript client libraries for calling the Google Earth Engine API.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Important Note: Access to Google Earth Engine is currently only available to registered users. The API is in active development, and users should expect the API to change. When (not if) API changes occur, applications that use the API will likely need to be updated.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://earthengine.google.com/"&gt;Earth Engine Homepage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://code.earthengine.google.com/"&gt;Web Code Editor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developers.google.com/earth-engine/python_install"&gt;Python Installation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Here's an example screenshot and the corresponding Code Editor JavaScript code:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.github.com/google/earthengine-api/master/trendy-lights.png" alt="Trendy Lights Image" /&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Compute the trend of night-time lights.

// Adds a band containing image date as years since 1991.
function createTimeBand(img) {
  var year = ee.Date(img.get('system:time_start')).get('year').subtract(1991);
  return ee.Image(year).byte().addBands(img);
}

// Map the time band creation helper over the night-time lights collection.
// https://developers.google.com/earth-engine/datasets/catalog/NOAA_DMSP-OLS_NIGHTTIME_LIGHTS
var collection = ee.ImageCollection('NOAA/DMSP-OLS/NIGHTTIME_LIGHTS')
    .select('stable_lights')
    .map(createTimeBand);

// Compute a linear fit over the series of values at each pixel, visualizing
// the y-intercept in green, and positive/negative slopes as red/blue.
Map.addLayer(
    collection.reduce(ee.Reducer.linearFit()),
    {min: 0, max: [0.18, 20, -0.18], bands: ['scale', 'offset', 'scale']},
    'stable lights trend');
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;NOTICE&lt;/h2&gt; 
&lt;p&gt;In order to be more responsive to bug reports and feature requests, we are currently using the Google Issue Tracker rather than the GitHub Issue tracker. Please see the &lt;a href="https://developers.google.com/earth-engine/help"&gt;Get Help&lt;/a&gt; page of the Earth Engine documentation for details on how to browse and submit issues to Issue Tracker.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>koodo-reader/koodo-reader</title>
      <link>https://github.com/koodo-reader/koodo-reader</link>
      <description>&lt;p&gt;A modern ebook manager and reader with sync and backup capacities for Windows, macOS, Linux, Android, iOS and Web&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_cn.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_hi.md"&gt;हिंदी&lt;/a&gt; |&lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_pt.md"&gt;Português&lt;/a&gt; | &lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_id.md"&gt;Indonesian&lt;/a&gt; | English&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://dl.koodoreader.com/screenshots/logo.png" width="96px" height="96px" /&gt; 
&lt;/div&gt; 
&lt;h1 align="center"&gt; Koodo Reader &lt;/h1&gt; 
&lt;h3 align="center"&gt; A cross-platform ebook reader &lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://koodoreader.com/en"&gt;Download&lt;/a&gt; | &lt;a href="https://web.koodoreader.com"&gt;Preview&lt;/a&gt; | &lt;a href="https://koodoreader.com/en/roadmap"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://koodoreader.com/en/document"&gt;Document&lt;/a&gt; | &lt;a href="https://koodoreader.com/en/plugin"&gt;Plugins&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;img src="https://dl.koodoreader.com/screenshots/7.png" width="800px" /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;img src="https://dl.koodoreader.com/screenshots/8.png" width="800px" /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Feature&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Format support: 
  &lt;ul&gt; 
   &lt;li&gt;EPUB (&lt;strong&gt;.epub&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;PDF (&lt;strong&gt;.pdf&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;DRM-free Mobipocket (&lt;strong&gt;.mobi&lt;/strong&gt;) and Kindle (&lt;strong&gt;.azw3&lt;/strong&gt;, &lt;strong&gt;.azw&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Plain text (&lt;strong&gt;.txt&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;FictionBook (&lt;strong&gt;.fb2&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Comic book archive (&lt;strong&gt;.cbr&lt;/strong&gt;, &lt;strong&gt;.cbz&lt;/strong&gt;, &lt;strong&gt;.cbt&lt;/strong&gt;, &lt;strong&gt;.cb7&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Rich text (&lt;strong&gt;.md&lt;/strong&gt;, &lt;strong&gt;.docx&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Hyper Text (&lt;strong&gt;.html&lt;/strong&gt;, &lt;strong&gt;.xml&lt;/strong&gt;, &lt;strong&gt;.xhtml&lt;/strong&gt;, &lt;strong&gt;.mhtml&lt;/strong&gt;, &lt;strong&gt;.htm&lt;/strong&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Platform support: &lt;strong&gt;Windows&lt;/strong&gt;, &lt;strong&gt;macOS&lt;/strong&gt;, &lt;strong&gt;Linux&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt;, &lt;strong&gt;iOS&lt;/strong&gt; and &lt;strong&gt;Web&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Utilize &lt;strong&gt;OneDrive&lt;/strong&gt;, &lt;strong&gt;Google Drive&lt;/strong&gt;, &lt;strong&gt;Dropbox&lt;/strong&gt;, &lt;strong&gt;MEGA&lt;/strong&gt;, &lt;strong&gt;pCloud&lt;/strong&gt;, &lt;strong&gt;Aliyun Drive&lt;/strong&gt;, &lt;strong&gt;Box&lt;/strong&gt;, &lt;strong&gt;FTP&lt;/strong&gt;, &lt;strong&gt;SFTP&lt;/strong&gt;, &lt;strong&gt;WebDAV&lt;/strong&gt;, &lt;strong&gt;Object Storage&lt;/strong&gt; to sync and backup your data.&lt;/li&gt; 
 &lt;li&gt;Easily import books from &lt;strong&gt;OneDrive&lt;/strong&gt;, &lt;strong&gt;Google Drive&lt;/strong&gt;, &lt;strong&gt;MEGA&lt;/strong&gt;, &lt;strong&gt;Aliyun Drive&lt;/strong&gt;, &lt;strong&gt;Box&lt;/strong&gt;, &lt;strong&gt;FTP&lt;/strong&gt;, &lt;strong&gt;SFTP&lt;/strong&gt;, &lt;strong&gt;WebDAV&lt;/strong&gt;, &lt;strong&gt;Object Storage&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;AI Translation, AI Dictionary, AI Summarization&lt;/li&gt; 
 &lt;li&gt;Single-column, two-column, or continuous scrolling layouts&lt;/li&gt; 
 &lt;li&gt;Text-to-speech, translation, dictionary, touch screen support, batch import&lt;/li&gt; 
 &lt;li&gt;Add bookmarks, notes, highlights to your books&lt;/li&gt; 
 &lt;li&gt;Adjust font size, font family, line-spacing, paragraph spacing, background color, text color, margins, and brightness&lt;/li&gt; 
 &lt;li&gt;Night mode and theme color&lt;/li&gt; 
 &lt;li&gt;Text highlight, underline, boldness, italics and shadow&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Desktop Version:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stable Version (Recommended): &lt;a href="https://koodoreader.com/en"&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Developer version: &lt;a href="https://github.com/koodo-reader/koodo-reader/releases/latest"&gt;Download&lt;/a&gt; ( With new feature and bug fix, but may induce some unknown bugs)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web Version：&lt;a href="https://web.koodoreader.com"&gt;Visit&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Android Version (works with developer version)：&lt;a href="https://koodoreader.com/en/download"&gt;Download&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;iOS Version (works with developer version)：&lt;a href="https://koodoreader.com/en/download"&gt;Download&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Install with Scoop:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;scoop bucket add extras
scoop install extras/koodo-reader
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install with Homebrew:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;brew install --cask koodo-reader
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install with Docker:&lt;/h3&gt; 
&lt;p&gt;If you only need to deploy the web version, simply use the command below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  --name koodo-reader \
  -p 80:80 \
  -p 8080:8080 \
  -e ENABLE_HTTP_SERVER=false \
  -e SERVER_USERNAME=admin \
  -e SERVER_PASSWORD=securePass123 \
  -v /path/to/host/uploads:/app/uploads \
  ghcr.io/koodo-reader/koodo-reader:master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you also want to enable the &lt;strong&gt;data source feature&lt;/strong&gt;, please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Set &lt;strong&gt;&lt;code&gt;ENABLE_HTTP_SERVER&lt;/code&gt;&lt;/strong&gt; to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Change &lt;strong&gt;&lt;code&gt;SERVER_USERNAME&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SERVER_PASSWORD&lt;/code&gt;&lt;/strong&gt; to a secure username and password&lt;/li&gt; 
 &lt;li&gt;Replace &lt;strong&gt;&lt;code&gt;/path/to/host/uploads&lt;/code&gt;&lt;/strong&gt; with the folder where you want to store reading data&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Then, select &lt;strong&gt;Docker&lt;/strong&gt; as the data source in Koodo Reader.&lt;/p&gt; 
&lt;p&gt;Data source functionality use port 8080, and web version use port 80 by default. If you want to switch to port 8090, just change &lt;strong&gt;&lt;code&gt;-p 8080:8080&lt;/code&gt;&lt;/strong&gt; to &lt;strong&gt;&lt;code&gt;-p 8090:8080&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to use Docker Secrets to set &lt;strong&gt;&lt;code&gt;SERVER_PASSWORD&lt;/code&gt;&lt;/strong&gt;, please refer to &lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/docker-compose-secret.yml"&gt;docker-compose-secret.yml&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshot&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;b&gt;Book list&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/1.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Book display&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/5.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;List mode&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/2.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Cover mode&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/3.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Reader menu&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/6.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Dark mode&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/4.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
&lt;/div&gt;  
&lt;h2&gt;Develop&lt;/h2&gt; 
&lt;p&gt;Make sure that you have installed yarn and git&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the repo&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/koodo-reader/koodo-reader.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter desktop mode&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yarn
yarn dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter web mode&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yarn
yarn start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;h3&gt;Edit current language&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Select your target language from the following list.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the view button to examine the source file. The untranslated terms are listed at the bottom of each file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Translate the terms to your target language based on the given English reference&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Sumbit the translation file or just translation snippets based on the amount of your translation to &lt;a href="https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;amp;labels=submit+translation&amp;amp;projects=&amp;amp;template=3_submit_translation.yml"&gt;this link&lt;/a&gt;. Pull request is also welcomed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language(A-Z)&lt;/th&gt; 
   &lt;th&gt;Code&lt;/th&gt; 
   &lt;th&gt;View&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Amharic&lt;/td&gt; 
   &lt;td&gt;am&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/am/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Arabic&lt;/td&gt; 
   &lt;td&gt;ar&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ar/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Armenian&lt;/td&gt; 
   &lt;td&gt;hy&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/hy/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Bengali&lt;/td&gt; 
   &lt;td&gt;bn&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/bn/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Bulgarian&lt;/td&gt; 
   &lt;td&gt;bg&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/bg/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chinese (CN)&lt;/td&gt; 
   &lt;td&gt;zh-CN&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/zh-CN/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chinese (MO)&lt;/td&gt; 
   &lt;td&gt;zh-MO&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/zh-MO/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chinese (TW)&lt;/td&gt; 
   &lt;td&gt;zh-TW&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/zh-TW/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Czech&lt;/td&gt; 
   &lt;td&gt;cs&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/cs/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Danish&lt;/td&gt; 
   &lt;td&gt;da&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/da/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dutch&lt;/td&gt; 
   &lt;td&gt;nl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/nl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;English&lt;/td&gt; 
   &lt;td&gt;en&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/en/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Esperanto&lt;/td&gt; 
   &lt;td&gt;eo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/eo/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Finnish&lt;/td&gt; 
   &lt;td&gt;fi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/fi/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;French&lt;/td&gt; 
   &lt;td&gt;fr&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/fr/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;German&lt;/td&gt; 
   &lt;td&gt;de&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/de/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Greek&lt;/td&gt; 
   &lt;td&gt;el&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/el/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hindi&lt;/td&gt; 
   &lt;td&gt;hi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/hi/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hungarian&lt;/td&gt; 
   &lt;td&gt;hu&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/hu/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Indonesian&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/id/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Interlingue&lt;/td&gt; 
   &lt;td&gt;ie&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ie/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Irish&lt;/td&gt; 
   &lt;td&gt;ga&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ga/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Italian&lt;/td&gt; 
   &lt;td&gt;it&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/it/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Japanese&lt;/td&gt; 
   &lt;td&gt;ja&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ja/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Korean&lt;/td&gt; 
   &lt;td&gt;ko&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ko/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Persian&lt;/td&gt; 
   &lt;td&gt;fa&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/fa/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Polish&lt;/td&gt; 
   &lt;td&gt;pl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/pl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Portuguese&lt;/td&gt; 
   &lt;td&gt;pt&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/pt/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Portuguese (BR)&lt;/td&gt; 
   &lt;td&gt;pt-BR&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/pt-BR/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Romanian&lt;/td&gt; 
   &lt;td&gt;ro&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ro/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Russian&lt;/td&gt; 
   &lt;td&gt;ru&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ru/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Slovenian&lt;/td&gt; 
   &lt;td&gt;sl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/sl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Spanish&lt;/td&gt; 
   &lt;td&gt;es&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/es/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swedish&lt;/td&gt; 
   &lt;td&gt;sv&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/sv/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tamil&lt;/td&gt; 
   &lt;td&gt;ta&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ta/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Thai&lt;/td&gt; 
   &lt;td&gt;th&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/th/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tagalog&lt;/td&gt; 
   &lt;td&gt;tl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/tl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tibetan&lt;/td&gt; 
   &lt;td&gt;bo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/bo/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Turkish&lt;/td&gt; 
   &lt;td&gt;tr&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/tr/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ukrainian&lt;/td&gt; 
   &lt;td&gt;uk&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/uk/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vietnamese&lt;/td&gt; 
   &lt;td&gt;vi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/vi/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Add new language&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;If you can't find your target language from the above list, Download the Engish source file from &lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/en/translation.json"&gt;this link&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;When you finish translation, submit the source file to &lt;a href="https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;amp;labels=submit+translation&amp;amp;projects=&amp;amp;template=3_submit_translation.yml"&gt;this link&lt;/a&gt;. Pull request is also welcomed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>juliangarnier/anime</title>
      <link>https://github.com/juliangarnier/anime</link>
      <description>&lt;p&gt;JavaScript animation engine&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Anime.js&lt;/h1&gt; 
&lt;p align="center"&gt; 
 &lt;picture align="center"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/images/animejs-v4-logo-animation-dark.gif" /&gt; 
  &lt;img align="center" alt="Anime.js V4 logo animation" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/images/animejs-v4-logo-animation.gif" width="560" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;em&gt;Anime.js&lt;/em&gt; is a fast, multipurpose and lightweight JavaScript animation library with a simple, yet powerful API.&lt;br /&gt; It works with CSS properties, SVG, DOM attributes and JavaScript Objects. &lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;img alt="NPM Downloads" src="https://img.shields.io/npm/dm/animejs?style=flat-square&amp;amp;logo=npm" /&gt; &lt;img alt="jsDelivr hits (npm)" src="https://img.shields.io/jsdelivr/npm/hm/animejs?style=flat-square&amp;amp;logo=jsdeliver" /&gt; &lt;img alt="GitHub Sponsors" src="https://img.shields.io/github/sponsors/juliangarnier?style=flat-square&amp;amp;logo=github" /&gt; &lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;Anime.js is 100% free and is only made possible with the help of our sponsors. Help the project become sustainable by sponsoring us on &lt;a target="_blank" href="https://github.com/sponsors/juliangarnier"&gt;GitHub Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Platinum sponsors&lt;/h3&gt; 
&lt;p&gt; &lt;a target="_blank" href="https://ice.io/?ref=animejs"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/ice-open-network-logomark.png" /&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/ice-open-network-logomark-dark.png" width="250" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3&gt;Silver sponsors&lt;/h3&gt; 
&lt;p&gt; &lt;a target="_blank" href="https://www.lambdatest.com?utm_source=animeJS&amp;amp;utm_medium=organic&amp;amp;utm_campaign=july_08&amp;amp;utm_term=sk&amp;amp;utm_content=opensource"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/lambdatest-logomark.png" /&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/lambdatest-logomark-dark.png" width="150" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;a target="_blank" href="https://inspatialapp.com/?ref=animejs"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/sponsors/inspatial-logomark.png" /&gt; 
   &lt;img align="center" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/sponsors/inspatial-logomark-dark.png" width="150" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Anime.js V4 works by importing ES modules like so:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;pre&gt;&lt;code class="language-javascript"&gt;import {
  animate,
  stagger,
} from 'animejs';

animate('.square', {
  x: 320,
  rotate: { from: -180 },
  duration: 1250,
  delay: stagger(65, { from: 'center' }),
  ease: 'inOutQuint',
  loop: true,
  alternate: true
});
&lt;/code&gt;&lt;/pre&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;img align="center" alt="Anime.js code example" src="https://raw.githubusercontent.com/juliangarnier/anime/master/assets/images/usage-example-result.gif" /&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;V4 Documentation&lt;/h2&gt; 
&lt;p&gt;The full documentation is available &lt;a href="https://animejs.com/documentation"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;V3 Migration guide&lt;/h2&gt; 
&lt;p&gt;You can find the v3 to v4 migration guide &lt;a href="https://github.com/juliangarnier/anime/wiki/Migrating-from-v3-to-v4"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;NPM development scripts&lt;/h2&gt; 
&lt;p&gt;First, run &lt;code&gt;npm i&lt;/code&gt; to install all the necessary packages. Then, execute the following scripts with &lt;code&gt;npm run &amp;lt;script&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;script&lt;/th&gt; 
   &lt;th&gt;action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dev&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Watch any changes in &lt;code&gt;src/&lt;/code&gt; and compiles the esm version to &lt;code&gt;lib/anime.esm.js&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;dev-types&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Same as &lt;code&gt;dev&lt;/code&gt;, but also run TypeScript and generate the &lt;code&gt;types/index.d.ts&lt;/code&gt; file&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Generate types definition and compiles ESM / UMD / IIFE versions to &lt;code&gt;lib/&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;test-browser&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start a local server and start all browser related tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;test-node&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start all Node related tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;open-examples&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start a local server to browse the examples locally&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;© &lt;a href="http://juliangarnier.com"&gt;Julian Garnier&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/juliangarnier/anime/master/LICENSE.md"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>drawdb-io/drawdb</title>
      <link>https://github.com/drawdb-io/drawdb</link>
      <description>&lt;p&gt;Free, simple, and intuitive online database diagram editor and SQL generator.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/drawdb/" target="_blank"&gt; &lt;img alt="Warp sponsorship" width="280" src="https://github.com/user-attachments/assets/c7f141e7-9751-407d-bb0e-d6f2c487b34f" /&gt; &lt;br /&gt; &lt;b&gt;Next-gen AI-powered intelligent terminal for all platforms&lt;/b&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;div align="center"&gt; 
 &lt;img width="64" alt="drawdb logo" src="https://raw.githubusercontent.com/drawdb-io/drawdb/main/src/assets/icon-dark.png" /&gt; 
 &lt;h1&gt;drawDB&lt;/h1&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt;Free, simple, and intuitive database schema editor and SQL generator.&lt;/h3&gt; 
&lt;div align="center" style="margin-bottom:12px;"&gt; 
 &lt;a href="https://drawdb.app/" style="display: flex; align-items: center;"&gt; &lt;img src="https://img.shields.io/badge/Start%20building-grey" alt="drawDB" /&gt; &lt;/a&gt; 
 &lt;a href="https://discord.gg/BrjZgNrmR6" style="display: flex; align-items: center;"&gt; &lt;img src="https://img.shields.io/discord/1196658537208758412.svg?label=Join%20the%20Discord&amp;amp;logo=discord" alt="Discord" /&gt; &lt;/a&gt; 
 &lt;a href="https://x.com/drawDB_" style="display: flex; align-items: center;"&gt; &lt;img src="https://img.shields.io/badge/Follow%20us%20on%20X-blue?logo=X" alt="Follow us on X" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h3 align="center"&gt;&lt;img width="700" style="border-radius:5px;" alt="demo" src="https://raw.githubusercontent.com/drawdb-io/drawdb/main/drawdb.png" /&gt;&lt;/h3&gt; 
&lt;p&gt;DrawDB is a robust and user-friendly database entity relationship (DBER) editor right in your browser. Build diagrams with a few clicks, export sql scripts, customize your editor, and more without creating an account. See the full set of features &lt;a href="https://drawdb.app/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;Local Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/drawdb-io/drawdb
cd drawdb
npm install
npm run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker Build&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t drawdb .
docker run -p 3000:80 drawdb
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you wish to work with sharing, set up &lt;a href="https://github.com/drawdb-io/drawdb-server"&gt;server&lt;/a&gt; and environment variables according to &lt;code&gt;.env.sample&lt;/code&gt;. This is not required unless you want to share files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fchollet/ARC-AGI</title>
      <link>https://github.com/fchollet/ARC-AGI</link>
      <description>&lt;p&gt;The Abstraction and Reasoning Corpus&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Abstraction and Reasoning Corpus for Artificial General Intelligence v1 (ARC-AGI-1)&lt;/h1&gt; 
&lt;p&gt;This repository contains the ARC-AGI-1 task data, as well as a browser-based interface for humans to try their hand at solving the tasks manually.&lt;/p&gt; 
&lt;p&gt;See also the &lt;a href="https://github.com/arcprize/ARC-AGI-2"&gt;ARC-AGI-2 repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;"ARC can be seen as a general artificial intelligence benchmark, as a program synthesis benchmark, or as a psychometric intelligence test. It is targeted at both humans and artificially intelligent systems that aim at emulating a human-like form of general fluid intelligence."&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;A complete description of the dataset, its goals, and its underlying logic, can be found in: &lt;a href="https://arxiv.org/abs/1911.01547"&gt;On the Measure of Intelligence&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;As a reminder, a test-taker is said to solve a task when, upon seeing the task for the first time, they are able to produce the correct output grid for &lt;em&gt;all&lt;/em&gt; test inputs in the task (this includes picking the dimensions of the output grid). For each test input, the test-taker is allowed 3 trials (this holds for all test-takers, either humans or AI).&lt;/p&gt; 
&lt;h2&gt;Task file format&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; directory contains two subdirectories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;data/training&lt;/code&gt;: contains the task files for training (400 tasks). Use these to prototype your algorithm or to train your algorithm to acquire ARC-relevant cognitive priors.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;data/evaluation&lt;/code&gt;: contains the task files for evaluation (400 tasks). Use these to evaluate your final algorithm. To ensure fair evaluation results, do not leak information from the evaluation set into your algorithm (e.g. by looking at the evaluation tasks yourself during development, or by repeatedly modifying an algorithm while using its evaluation score as feedback).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The tasks are stored in JSON format. Each task JSON file contains a dictionary with two fields:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;"train"&lt;/code&gt;: demonstration input/output pairs. It is a list of "pairs" (typically 3 pairs).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;"test"&lt;/code&gt;: test input/output pairs. It is a list of "pairs" (typically 1 pair).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A "pair" is a dictionary with two fields:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;"input"&lt;/code&gt;: the input "grid" for the pair.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;"output"&lt;/code&gt;: the output "grid" for the pair.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A "grid" is a rectangular matrix (list of lists) of integers between 0 and 9 (inclusive). The smallest possible grid size is 1x1 and the largest is 30x30.&lt;/p&gt; 
&lt;p&gt;When looking at a task, a test-taker has access to inputs &amp;amp; outputs of the demonstration pairs, plus the input(s) of the test pair(s). The goal is to construct the output grid(s) corresponding to the test input grid(s), using 3 trials for each test input. "Constructing the output grid" involves picking the height and width of the output grid, then filling each cell in the grid with a symbol (integer between 0 and 9, which are visualized as colors). Only &lt;em&gt;exact&lt;/em&gt; solutions (all cells match the expected answer) can be said to be correct.&lt;/p&gt; 
&lt;h2&gt;Usage of the testing interface&lt;/h2&gt; 
&lt;p&gt;The testing interface is located at &lt;code&gt;apps/testing_interface.html&lt;/code&gt;. Open it in a web browser (Chrome recommended). It will prompt you to select a task JSON file.&lt;/p&gt; 
&lt;p&gt;After loading a task, you will enter the test space, which looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://arc-benchmark.s3.amazonaws.com/figs/arc_test_space.png" alt="test space" /&gt;&lt;/p&gt; 
&lt;p&gt;On the left, you will see the input/output pairs demonstrating the nature of the task. In the middle, you will see the current test input grid. On the right, you will see the controls you can use to construct the corresponding output grid.&lt;/p&gt; 
&lt;p&gt;You have access to the following tools:&lt;/p&gt; 
&lt;h3&gt;Grid controls&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Resize: input a grid size (e.g. "10x20" or "4x4") and click "Resize". This preserves existing grid content (in the top left corner).&lt;/li&gt; 
 &lt;li&gt;Copy from input: copy the input grid to the output grid. This is useful for tasks where the output consists of some modification of the input.&lt;/li&gt; 
 &lt;li&gt;Reset grid: fill the grid with 0s.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Symbol controls&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Edit: select a color (symbol) from the color picking bar, then click on a cell to set its color.&lt;/li&gt; 
 &lt;li&gt;Select: click and drag on either the output grid or the input grid to select cells. 
  &lt;ul&gt; 
   &lt;li&gt;After selecting cells on the output grid, you can select a color from the color picking to set the color of the selected cells. This is useful to draw solid rectangles or lines.&lt;/li&gt; 
   &lt;li&gt;After selecting cells on either the input grid or the output grid, you can press C to copy their content. After copying, you can select a cell on the output grid and press "V" to paste the copied content. You should select the cell in the top left corner of the zone you want to paste into.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Floodfill: click on a cell from the output grid to color all connected cells to the selected color. "Connected cells" are contiguous cells with the same color.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Answer validation&lt;/h3&gt; 
&lt;p&gt;When your output grid is ready, click the green "Submit!" button to check your answer. We do not enforce the 3-trials rule.&lt;/p&gt; 
&lt;p&gt;After you've obtained the correct answer for the current test input grid, you can switch to the next test input grid for the task using the "Next test input" button (if there is any available; most tasks only have one test input).&lt;/p&gt; 
&lt;p&gt;When you're done with a task, use the "load task" button to open a new task.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>trekhleb/javascript-algorithms</title>
      <link>https://github.com/trekhleb/javascript-algorithms</link>
      <description>&lt;p&gt;📝 Algorithms and data structures implemented in JavaScript with explanations and links to further readings&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;JavaScript Algorithms and Data Structures&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🇺🇦 UKRAINE &lt;a href="https://war.ukraine.ua/"&gt;IS BEING ATTACKED&lt;/a&gt; BY RUSSIAN ARMY. CIVILIANS ARE GETTING KILLED. RESIDENTIAL AREAS ARE GETTING BOMBED.&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Help Ukraine via: 
   &lt;ul&gt; 
    &lt;li&gt;&lt;a href="https://prytulafoundation.org/en/"&gt;Serhiy Prytula Charity Foundation&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://savelife.in.ua/en/donate-en/"&gt;Come Back Alive Charity Foundation&lt;/a&gt;&lt;/li&gt; 
    &lt;li&gt;&lt;a href="https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi"&gt;National Bank of Ukraine&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;More info on &lt;a href="https://war.ukraine.ua/"&gt;war.ukraine.ua&lt;/a&gt; and &lt;a href="https://twitter.com/MFA_Ukraine"&gt;MFA of Ukraine&lt;/a&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms/actions?query=workflow%3ACI+branch%3Amaster"&gt;&lt;img src="https://github.com/trekhleb/javascript-algorithms/workflows/CI/badge.svg?sanitize=true" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/trekhleb/javascript-algorithms"&gt;&lt;img src="https://codecov.io/gh/trekhleb/javascript-algorithms/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/repo-size/trekhleb/javascript-algorithms.svg?sanitize=true" alt="repo size" /&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains JavaScript based examples of many popular algorithms and data structures.&lt;/p&gt; 
&lt;p&gt;Each algorithm and data structure has its own separate README with related explanations and links for further reading (including ones to YouTube videos).&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Read this in other languages:&lt;/em&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-CN.md"&gt;&lt;em&gt;简体中文&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.zh-TW.md"&gt;&lt;em&gt;繁體中文&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ko-KR.md"&gt;&lt;em&gt;한국어&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ja-JP.md"&gt;&lt;em&gt;日本語&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pl-PL.md"&gt;&lt;em&gt;Polski&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.fr-FR.md"&gt;&lt;em&gt;Français&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.es-ES.md"&gt;&lt;em&gt;Español&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.pt-BR.md"&gt;&lt;em&gt;Português&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ru-RU.md"&gt;&lt;em&gt;Русский&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.tr-TR.md"&gt;&lt;em&gt;Türkçe&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.it-IT.md"&gt;&lt;em&gt;Italiano&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.id-ID.md"&gt;&lt;em&gt;Bahasa Indonesia&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uk-UA.md"&gt;&lt;em&gt;Українська&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.ar-AR.md"&gt;&lt;em&gt;Arabic&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.vi-VN.md"&gt;&lt;em&gt;Tiếng Việt&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.de-DE.md"&gt;&lt;em&gt;Deutsch&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.uz-UZ.md"&gt;&lt;em&gt;Uzbek&lt;/em&gt;&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/README.he-IL.md"&gt;&lt;em&gt;עברית&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;☝ Note that this project is meant to be used for learning and researching purposes only, and it is &lt;strong&gt;not&lt;/strong&gt; meant to be used for production.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Data Structures&lt;/h2&gt; 
&lt;p&gt;A data structure is a particular way of organizing and storing data in a computer so that it can be accessed and modified efficiently. More precisely, a data structure is a collection of data values, the relationships among them, and the functions or operations that can be applied to the data.&lt;/p&gt; 
&lt;p&gt;Remember that each data has its own trade-offs. And you need to pay attention more to why you're choosing a certain data structure than to how to implement it.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/linked-list"&gt;Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/doubly-linked-list"&gt;Doubly Linked List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/queue"&gt;Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/stack"&gt;Stack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/hash-table"&gt;Hash Table&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/heap"&gt;Heap&lt;/a&gt; - max and min heap versions&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/priority-queue"&gt;Priority Queue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/trie"&gt;Trie&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree"&gt;Tree&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/binary-search-tree"&gt;Binary Search Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/avl-tree"&gt;AVL Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/red-black-tree"&gt;Red-Black Tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/segment-tree"&gt;Segment Tree&lt;/a&gt; - with min/max/sum range queries examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/tree/fenwick-tree"&gt;Fenwick Tree&lt;/a&gt; (Binary Indexed Tree)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/graph"&gt;Graph&lt;/a&gt; (both directed and undirected)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/disjoint-set"&gt;Disjoint Set&lt;/a&gt; - a union–find data structure or merge–find set&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/bloom-filter"&gt;Bloom Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/data-structures/lru-cache/"&gt;LRU Cache&lt;/a&gt; - Least Recently Used (LRU) cache&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Algorithms&lt;/h2&gt; 
&lt;p&gt;An algorithm is an unambiguous specification of how to solve a class of problems. It is a set of rules that precisely define a sequence of operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;B&lt;/code&gt; - Beginner, &lt;code&gt;A&lt;/code&gt; - Advanced&lt;/p&gt; 
&lt;h3&gt;Algorithms by Topic&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Math&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/bits"&gt;Bit Manipulation&lt;/a&gt; - set/get/update/clear bits, multiplication/division by two, make negative etc.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/binary-floating-point"&gt;Binary Floating Point&lt;/a&gt; - binary representation of the floating-point numbers.&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/factorial"&gt;Factorial&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci"&gt;Fibonacci Number&lt;/a&gt; - classic and closed-form versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/prime-factors"&gt;Prime Factors&lt;/a&gt; - finding prime factors and counting them using Hardy-Ramanujan's theorem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/primality-test"&gt;Primality Test&lt;/a&gt; (trial division method)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm"&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/least-common-multiple"&gt;Least Common Multiple&lt;/a&gt; (LCM)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/sieve-of-eratosthenes"&gt;Sieve of Eratosthenes&lt;/a&gt; - finding all prime numbers up to any given limit&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/is-power-of-two"&gt;Is Power of Two&lt;/a&gt; - check if the number is power of two (naive and bitwise algorithms)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle"&gt;Pascal's Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/complex-number"&gt;Complex Number&lt;/a&gt; - complex numbers and basic operations with them&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/radian"&gt;Radian &amp;amp; Degree&lt;/a&gt; - radians to degree and backwards conversion&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering"&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/horner-method"&gt;Horner's method&lt;/a&gt; - polynomial evaluation&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix"&gt;Matrices&lt;/a&gt; - matrices and basic matrix operations (multiplication, transposition, etc.)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-distance"&gt;Euclidean Distance&lt;/a&gt; - distance between two points/vectors/matrices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition"&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/square-root"&gt;Square Root&lt;/a&gt; - Newton's method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/liu-hui"&gt;Liu Hui π Algorithm&lt;/a&gt; - approximate π calculations based on N-gons&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform"&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sets&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/cartesian-product"&gt;Cartesian Product&lt;/a&gt; - product of multiple sets&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/fisher-yates"&gt;Fisher–Yates Shuffle&lt;/a&gt; - random permutation of a finite sequence&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set"&gt;Power Set&lt;/a&gt; - all subsets of a set (bitwise, backtracking, and cascading solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations"&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations"&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence"&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence"&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence"&gt;Shortest Common Supersequence&lt;/a&gt; (SCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem"&gt;Knapsack Problem&lt;/a&gt; - "0/1" and "Unbound" ones&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt; - "Brute Force" and "Dynamic Programming" (Kadane's) versions&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum"&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/hamming-distance"&gt;Hamming Distance&lt;/a&gt; - number of positions at which the symbols are different&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/palindrome"&gt;Palindrome&lt;/a&gt; - check if the string is the same in reverse&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance"&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/knuth-morris-pratt"&gt;Knuth–Morris–Pratt Algorithm&lt;/a&gt; (KMP Algorithm) - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/z-algorithm"&gt;Z Algorithm&lt;/a&gt; - substring search (pattern matching)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/rabin-karp"&gt;Rabin Karp Algorithm&lt;/a&gt; - substring search&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring"&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching"&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Searches&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search"&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/jump-search"&gt;Jump Search&lt;/a&gt; (or Block Search) - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search"&gt;Binary Search&lt;/a&gt; - search in sorted array&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/interpolation-search"&gt;Interpolation Search&lt;/a&gt; - search in uniformly distributed sorted array&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bubble-sort"&gt;Bubble Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/selection-sort"&gt;Selection Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/insertion-sort"&gt;Insertion Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/heap-sort"&gt;Heap Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort"&gt;Quicksort&lt;/a&gt; - in-place and non-in-place implementations&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/shell-sort"&gt;Shellsort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/counting-sort"&gt;Counting Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/radix-sort"&gt;Radix Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/bucket-sort"&gt;Bucket Sort&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linked Lists&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/traversal"&gt;Straight Traversal&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/linked-list/reverse-traversal"&gt;Reverse Traversal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Trees&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search"&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/breadth-first-search"&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Graphs&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search"&gt;Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/breadth-first-search"&gt;Breadth-First Search&lt;/a&gt; (BFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal"&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra"&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford"&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest paths to all graph vertices from single vertex&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall"&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/detect-cycle"&gt;Detect Cycle&lt;/a&gt; - for both directed and undirected graphs (DFS and Disjoint Set based versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim"&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/topological-sorting"&gt;Topological Sorting&lt;/a&gt; - DFS method&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/articulation-points"&gt;Articulation Points&lt;/a&gt; - Tarjan's algorithm (DFS based)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bridges"&gt;Bridges&lt;/a&gt; - DFS based algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/eulerian-path"&gt;Eulerian Path and Eulerian Circuit&lt;/a&gt; - Fleury's algorithm - Visit every edge exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle"&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/strongly-connected-components"&gt;Strongly Connected Components&lt;/a&gt; - Kosaraju's algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman"&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Cryptography&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/polynomial-hash"&gt;Polynomial Hash&lt;/a&gt; - rolling hash function based on polynomial&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/rail-fence-cipher"&gt;Rail Fence Cipher&lt;/a&gt; - a transposition cipher algorithm for encoding messages&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/caesar-cipher"&gt;Caesar Cipher&lt;/a&gt; - simple substitution cipher&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/cryptography/hill-cipher"&gt;Hill Cipher&lt;/a&gt; - substitution cipher based on linear algebra&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Machine Learning&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://github.com/trekhleb/nano-neuron"&gt;NanoNeuron&lt;/a&gt; - 7 simple JS functions that illustrate how machines can actually learn (forward/backward propagation)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/knn"&gt;k-NN&lt;/a&gt; - k-nearest neighbors classification algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/ml/k-means"&gt;k-Means&lt;/a&gt; - k-Means clustering algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Image Processing&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving"&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Statistics&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/statistics/weighted-random"&gt;Weighted Random&lt;/a&gt; - select the random item from the list based on items' weights&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Evolutionary algorithms&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://github.com/trekhleb/self-parking-car-evolution"&gt;Genetic algorithm&lt;/a&gt; - example of how the genetic algorithm may be applied for training the self-parking cars&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Uncategorized&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower"&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/square-matrix-rotation"&gt;Square Matrix Rotation&lt;/a&gt; - in-place algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt; - backtracking, dynamic programming (top-down + bottom-up) and greedy examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths"&gt;Unique Paths&lt;/a&gt; - backtracking, dynamic programming and Pascal's Triangle based examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces"&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem (dynamic programming and brute force versions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase"&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach to the top (4 solutions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks"&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/stack/valid-parentheses"&gt;Valid Parentheses&lt;/a&gt; - check if a string has valid parentheses (using stack)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens"&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour"&gt;Knight's Tour&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Algorithms by Paradigm&lt;/h3&gt; 
&lt;p&gt;An algorithmic paradigm is a generic method or approach which underlies the design of a class of algorithms. It is an abstraction higher than the notion of an algorithm, just as an algorithm is an abstraction higher than a computer program.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Brute Force&lt;/strong&gt; - look at all the possibilities and selects the best solution 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/linear-search"&gt;Linear Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces"&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase"&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/travelling-salesman"&gt;Travelling Salesman Problem&lt;/a&gt; - shortest possible route that visits each city and returns to the origin city&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fourier-transform"&gt;Discrete Fourier Transform&lt;/a&gt; - decompose a function of time (a signal) into the frequencies that make it up&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Greedy&lt;/strong&gt; - choose the best option at the current time, without any consideration for the future 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem"&gt;Unbound Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/dijkstra"&gt;Dijkstra Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/prim"&gt;Prim’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/kruskal"&gt;Kruskal’s Algorithm&lt;/a&gt; - finding Minimum Spanning Tree (MST) for weighted undirected graph&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Divide and Conquer&lt;/strong&gt; - divide the problem into smaller parts and then solve those parts 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/search/binary-search"&gt;Binary Search&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/hanoi-tower"&gt;Tower of Hanoi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/pascal-triangle"&gt;Pascal's Triangle&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/euclidean-algorithm"&gt;Euclidean Algorithm&lt;/a&gt; - calculate the Greatest Common Divisor (GCD)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/merge-sort"&gt;Merge Sort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sorting/quick-sort"&gt;Quicksort&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/tree/depth-first-search"&gt;Tree Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/depth-first-search"&gt;Graph Depth-First Search&lt;/a&gt; (DFS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/matrix"&gt;Matrices&lt;/a&gt; - generating and traversing the matrices of different shapes&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fast-powering"&gt;Fast Powering&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/best-time-to-buy-sell-stocks"&gt;Best Time To Buy Sell Stocks&lt;/a&gt; - divide and conquer and one-pass examples&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/permutations"&gt;Permutations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combinations"&gt;Combinations&lt;/a&gt; (with and without repetitions)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Dynamic Programming&lt;/strong&gt; - build up a solution using previously found sub-solutions 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/fibonacci"&gt;Fibonacci Number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths"&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/rain-terraces"&gt;Rain Terraces&lt;/a&gt; - trapping rain water problem&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/recursive-staircase"&gt;Recursive Staircase&lt;/a&gt; - count the number of ways to reach the top&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/image-processing/seam-carving"&gt;Seam Carving&lt;/a&gt; - content-aware image resizing algorithm&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/levenshtein-distance"&gt;Levenshtein Distance&lt;/a&gt; - minimum edit distance between two sequences&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-common-subsequence"&gt;Longest Common Subsequence&lt;/a&gt; (LCS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/longest-common-substring"&gt;Longest Common Substring&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/longest-increasing-subsequence"&gt;Longest Increasing Subsequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/shortest-common-supersequence"&gt;Shortest Common Supersequence&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/knapsack-problem"&gt;0/1 Knapsack Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/math/integer-partition"&gt;Integer Partition&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/maximum-subarray"&gt;Maximum Subarray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/bellman-ford"&gt;Bellman-Ford Algorithm&lt;/a&gt; - finding the shortest path to all graph vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/floyd-warshall"&gt;Floyd-Warshall Algorithm&lt;/a&gt; - find the shortest paths between all pairs of vertices&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/string/regular-expression-matching"&gt;Regular Expression Matching&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backtracking&lt;/strong&gt; - similarly to brute force, try to generate all possible solutions, but each time you generate the next solution, you test if it satisfies all conditions and only then continue generating subsequent solutions. Otherwise, backtrack and go on a different path to finding a solution. Normally the DFS traversal of state-space is being used. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/jump-game"&gt;Jump Game&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/unique-paths"&gt;Unique Paths&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;B&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/power-set"&gt;Power Set&lt;/a&gt; - all subsets of a set&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/graph/hamiltonian-cycle"&gt;Hamiltonian Cycle&lt;/a&gt; - Visit every vertex exactly once&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/n-queens"&gt;N-Queens Problem&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/uncategorized/knight-tour"&gt;Knight's Tour&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;A&lt;/code&gt; &lt;a href="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/src/algorithms/sets/combination-sum"&gt;Combination Sum&lt;/a&gt; - find all combinations that form specific sum&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Branch &amp;amp; Bound&lt;/strong&gt; - remember the lowest-cost solution found at each stage of the backtracking search, and use the cost of the lowest-cost solution found so far as a lower bound on the cost of a least-cost solution to the problem in order to discard partial solutions with costs larger than the lowest-cost solution found so far. Normally, BFS traversal in combination with DFS traversal of state-space tree is being used.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to use this repository&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Install all dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run ESLint&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may want to run it to check code quality.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm run lint
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run all tests&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run tests by name&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- 'LinkedList'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Troubleshooting&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;If linting or testing is failing, try to delete the &lt;code&gt;node_modules&lt;/code&gt; folder and re-install npm packages:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;rm -rf ./node_modules
npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Also, make sure that you're using the correct Node version (&lt;code&gt;&amp;gt;=16&lt;/code&gt;). If you're using &lt;a href="https://github.com/nvm-sh/nvm"&gt;nvm&lt;/a&gt; for Node version management you may run &lt;code&gt;nvm use&lt;/code&gt; from the root folder of the project and the correct version will be picked up.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Playground&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You may play with data-structures and algorithms in &lt;code&gt;./src/playground/playground.js&lt;/code&gt; file and write tests for it in &lt;code&gt;./src/playground/__test__/playground.test.js&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Then just, simply run the following command to test if your playground code works as expected:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npm test -- 'playground'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Useful Information&lt;/h2&gt; 
&lt;h3&gt;References&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/playlist?list=PLLXdhg_r2hKA7DPDsunoDZ-Z769jWn4R8"&gt;▶ Data Structures and Algorithms on YouTube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://okso.app/showcase/data-structures"&gt;✍🏻 Data Structure Sketches&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Big O Notation&lt;/h3&gt; 
&lt;p&gt;&lt;em&gt;Big O notation&lt;/em&gt; is used to classify algorithms according to how their running time or space requirements grow as the input size grows. On the chart below, you may find the most common orders of growth of algorithms specified in Big O notation.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/trekhleb/javascript-algorithms/master/assets/big-o-graph.png" alt="Big O graphs" /&gt;&lt;/p&gt; 
&lt;p&gt;Source: &lt;a href="http://bigocheatsheet.com/"&gt;Big O Cheat Sheet&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Below is the list of some of the most used Big O notations and their performance comparisons against different sizes of the input data.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Big O Notation&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Computations for 10 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 100 elements&lt;/th&gt; 
   &lt;th&gt;Computations for 1000 elements&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Constant&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
   &lt;td&gt;1&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Logarithmic&lt;/td&gt; 
   &lt;td&gt;3&lt;/td&gt; 
   &lt;td&gt;6&lt;/td&gt; 
   &lt;td&gt;9&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Linear&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;1000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N log N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;n log(n)&lt;/td&gt; 
   &lt;td&gt;30&lt;/td&gt; 
   &lt;td&gt;600&lt;/td&gt; 
   &lt;td&gt;9000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N^2)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Quadratic&lt;/td&gt; 
   &lt;td&gt;100&lt;/td&gt; 
   &lt;td&gt;10000&lt;/td&gt; 
   &lt;td&gt;1000000&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(2^N)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Exponential&lt;/td&gt; 
   &lt;td&gt;1024&lt;/td&gt; 
   &lt;td&gt;1.26e+29&lt;/td&gt; 
   &lt;td&gt;1.07e+301&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;O(N!)&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Factorial&lt;/td&gt; 
   &lt;td&gt;3628800&lt;/td&gt; 
   &lt;td&gt;9.3e+157&lt;/td&gt; 
   &lt;td&gt;4.02e+2567&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Data Structure Operations Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Data Structure&lt;/th&gt; 
   &lt;th align="center"&gt;Access&lt;/th&gt; 
   &lt;th align="center"&gt;Search&lt;/th&gt; 
   &lt;th align="center"&gt;Insertion&lt;/th&gt; 
   &lt;th align="center"&gt;Deletion&lt;/th&gt; 
   &lt;th align="left"&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Stack&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Queue&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Linked List&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Hash Table&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;In case of perfect hash function costs would be O(1)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Binary Search Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="left"&gt;In case of balanced tree costs would be O(log(n))&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;B-Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Red-Black Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;AVL Tree&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bloom Filter&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;-&lt;/td&gt; 
   &lt;td align="left"&gt;False positives are possible while searching&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Array Sorting Algorithms Complexity&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th align="center"&gt;Best&lt;/th&gt; 
   &lt;th align="center"&gt;Average&lt;/th&gt; 
   &lt;th align="center"&gt;Worst&lt;/th&gt; 
   &lt;th align="center"&gt;Memory&lt;/th&gt; 
   &lt;th align="center"&gt;Stable&lt;/th&gt; 
   &lt;th align="left"&gt;Comments&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bubble sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Insertion sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Selection sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Heap sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Merge sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Quick sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;n&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;Quicksort is usually done in-place with O(log(n)) stack space&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Shell sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;log(n)&lt;/td&gt; 
   &lt;td align="center"&gt;depends on gap sequence&lt;/td&gt; 
   &lt;td align="center"&gt;n&amp;nbsp;(log(n))&lt;sup&gt;2&lt;/sup&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;1&lt;/td&gt; 
   &lt;td align="center"&gt;No&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Counting sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;n + r&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;r - biggest number in array&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Radix sort&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;n * k&lt;/td&gt; 
   &lt;td align="center"&gt;n * k&lt;/td&gt; 
   &lt;td align="center"&gt;n * k&lt;/td&gt; 
   &lt;td align="center"&gt;n + k&lt;/td&gt; 
   &lt;td align="center"&gt;Yes&lt;/td&gt; 
   &lt;td align="left"&gt;k - length of longest key&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Project Backers&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;You may support this project via ❤️️ &lt;a href="https://github.com/sponsors/trekhleb"&gt;GitHub&lt;/a&gt; or ❤️️ &lt;a href="https://www.patreon.com/trekhleb"&gt;Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://github.com/trekhleb/javascript-algorithms/raw/master/BACKERS.md"&gt;Folks who are backing this project&lt;/a&gt; &lt;code&gt;∑ = 1&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Author&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://trekhleb.dev"&gt;@trekhleb&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;A few more &lt;a href="https://trekhleb.dev/projects/"&gt;projects&lt;/a&gt; and &lt;a href="https://trekhleb.dev/blog/"&gt;articles&lt;/a&gt; about JavaScript and algorithms on &lt;a href="https://trekhleb.dev"&gt;trekhleb.dev&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>crocodilestick/Calibre-Web-Automated</title>
      <link>https://github.com/crocodilestick/Calibre-Web-Automated</link>
      <description>&lt;p&gt;Calibre-Web but automated and with Calibre features! Fully automate and simplify your eBook set up!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Calibre-Web Automated &lt;em&gt;(formerly Calibre-Web Automator)&lt;/em&gt;&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-banner.png" alt="Calibre-Web Automated" title="Calibre-Web Automated" /&gt;&lt;/p&gt; 
&lt;h2&gt;Making Calibre-Web your &lt;em&gt;dream&lt;/em&gt;, all-in-one self-hosted digital library solution.&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/docker/pulls/crocodilestick/calibre-web-automated" alt="Docker Pulls" /&gt; &lt;img src="https://img.shields.io/github/v/release/crocodilestick/calibre-web-automated" alt="GitHub Release" /&gt; &lt;img src="https://img.shields.io/github/commits-since/crocodilestick/calibre-web-automated/latest" alt="GitHub commits since latest release" /&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;em&gt;Quick Access&lt;/em&gt;&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#features"&gt;Features&lt;/a&gt; 🪄&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/crocodilestick/Calibre-Web-Automated/releases"&gt;Releases&lt;/a&gt; 🆕&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#features-currently-under-active-development-and-on-our-roadmap-%EF%B8%8F%EF%B8%8F"&gt;Roadmap&lt;/a&gt; 🛣️&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#how-to-install-"&gt;How to Install&lt;/a&gt;: 📖 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#quick-install-"&gt;Quick Install&lt;/a&gt; 🚀&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#using-docker-compose-recommended"&gt;Docker-Compose&lt;/a&gt; 🐋⭐(Recommended)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#users-migrating-from-stock-calibre-web"&gt;Users Migrating from stock Calibre Web&lt;/a&gt; 🔄&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks&lt;/a&gt; 🏁 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#default-admin-login"&gt;Default Login Credentials 🔑&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#usage-"&gt;Usage&lt;/a&gt; 🔧 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#adding-books-to-your-library"&gt;Adding Books to Your Library&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#koreader-syncing-kosync-"&gt;KOReader Syncing (KOSync)&lt;/a&gt; 📖⚡&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#for-developers---building-custom-docker-image"&gt;For Developers&lt;/a&gt; 🚀&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#further-development-%EF%B8%8F"&gt;Further Development&lt;/a&gt; 🏗️&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://ko-fi.com/crocodilestick"&gt;Support / Buy me a Coffee&lt;/a&gt; ☕&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;em&gt;Affiliated Projects&lt;/em&gt; 👬&lt;/h2&gt; 
&lt;h3&gt;Calibre-Web Automated Book Downloader&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;An intuitive web interface for searching and requesting book downloads, designed to work seamlessly with Calibre-Web-Automated. This project streamlines the process of downloading books and preparing them for integration into your Calibre library&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/calibrain/calibre-web-automated-book-downloader"&gt;&lt;img src="https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png" alt="Get it on GitHub" height="80" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Calibre-Web Companion&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Built with &lt;strong&gt;Flutter&lt;/strong&gt; and using &lt;strong&gt;Material You&lt;/strong&gt;, &lt;a href="https://github.com/doen1el/calibre-web-companion"&gt;&lt;strong&gt;Calibre Web Companion&lt;/strong&gt;&lt;/a&gt; is an &lt;strong&gt;unofficial companion application&lt;/strong&gt; for &lt;strong&gt;Calibre Web&lt;/strong&gt; &amp;amp; &lt;strong&gt;Calibre Web Automated&lt;/strong&gt; that allows you to browse your book collection and download books directly on your device, providing a much &lt;strong&gt;more modern, mobile-friendly UX&lt;/strong&gt; than either service can currently provide on its own&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;a href="https://github.com/doen1el/calibre-web-companion"&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cw-companion-screenshots.png" alt="Calibre Web Companion Preview" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://play.google.com/store/apps/details?id=de.doen1el.calibreWebCompanion"&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/google-play.png" alt="Get it on Google Play" height="80" /&gt;&lt;/a&gt; &lt;a href="https://f-droid.org/en/packages/de.doen1el.calibreWebCompanion/"&gt;&lt;img src="https://fdroid.gitlab.io/artwork/badge/get-it-on.png" alt="Get it on F-Droid" height="80" /&gt;&lt;/a&gt; &lt;a href="https://github.com/doen1el/calibre-web-companion"&gt;&lt;img src="https://raw.githubusercontent.com/vadret/android/master/assets/get-github.png" alt="Get it on GitHub" height="80" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why does it exist? 🔓&lt;/h2&gt; 
&lt;p&gt;Calibre, while a fantastic tool for its age, has several problems when containerised, including its reliance on a KasmVNC server instance for the UI, which is near impossible to use on mobile and is relatively resource-heavy if you're running a small, lower power server like I am.&lt;/p&gt; 
&lt;p&gt;For many, Calibre-Web has really swooped in to save the day, offering an alternative to a containerised Calibre instance that's resource-light and with a much more modern UI to boot.&lt;/p&gt; 
&lt;p&gt;However, when compared to full-fat Calibre, it unfortunately lacks a few core features leading many to run both services in parallel, each serving to fill in where the other lacks, resulting in an often clunky, imperfect solution.&lt;/p&gt; 
&lt;h2&gt;Goal of the Project 🎯&lt;/h2&gt; 
&lt;p&gt;Calibre-Web Automated aims to be an all-in-one solution, combining the modern lightweight web UI from Calibre-Web with the robust, versatile feature set of Calibre, with a slew of extra features and automations thrown in on top.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-Homepage.png" alt="Calibre-Web Automated Example Homepage" /&gt;&lt;/p&gt; 
&lt;p style="text-align:center;"&gt;&lt;i&gt;CWA allows you to keep your ebook library accessible &amp;amp; organised and looks good while doing it&lt;/i&gt; 😎🦚&lt;/p&gt; 
&lt;h2&gt;Join our Community! ❤️&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;I want to say a &lt;strong&gt;big thanks&lt;/strong&gt; 🙏 to all the members of this community that have taken the time to participate in the testing and development of this project and we encourage anyone who would like to to contribute in some way. Anyone of any level is welcome and every little helps!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For anyone that wish to contribute to this project in some way&lt;/strong&gt;, please reach out on our Discord Server and see how you can best get involved:&lt;br /&gt; &lt;br /&gt; &lt;a href="https://discord.gg/EjgSeek94R"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/https://discord.gg/EjgSeek94R" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Or alternativly make your own companion project, come hang out and or come get help if you're facing issues :)&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🚨 To users planning to deploy via Network Shares (particularly NFS) 🚨&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Calibre, Calibre-Web and CWA are all SQLite3 based applications and as a result &lt;strong&gt;don't like being run over network shares (especially NFS)&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;SQLite is designed as a lightweight, file-based database system, and it assumes the underlying file system supports certain guarantees about &lt;strong&gt;file locking, atomic writes, and consistency&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Network file systems (e.g., NFS, SMB/CIFS, etc.) often do not meet these assumptions, which can lead to issues.&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;Some users are successful in deploying CWA across NFS shares however doing so &lt;strong&gt;can produce a lot of hard to diagnose issues&lt;/strong&gt; that take time away from users with actual issues&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Therefore as of V3.0.0, deployments over NFS shares are "unsupported"&lt;/strong&gt;, meaning &lt;strong&gt;you are free to do so&lt;/strong&gt;, but &lt;strong&gt;support will not be provided for users facing issues&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;em&gt;Features:&lt;/em&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;h3&gt;CWA supports all Stock CW Features:&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Modern &amp;amp; responsive Bootstrap 3 HTML5 interface&lt;/td&gt; 
   &lt;td align="center"&gt;Comprehensive user management with per-user permissions&lt;/td&gt; 
   &lt;td align="center"&gt;OPDS feed for ereader apps&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;eBook metadata editing and deletion support&lt;/td&gt; 
   &lt;td align="center"&gt;Metadata download from various sources (extensible via plugins)&lt;/td&gt; 
   &lt;td align="center"&gt;eBook download restriction to logged-in users&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;Public user registration support&lt;/td&gt; 
   &lt;td align="center"&gt;Send eBooks to E-Readers with a single click&lt;/td&gt; 
   &lt;td align="center"&gt;Sync Kobo devices with your Calibre library&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;In-browser eBook reading support for multiple formats&lt;/td&gt; 
   &lt;td align="center"&gt;Content hiding based on categories and Custom Column content per user&lt;/td&gt; 
   &lt;td align="center"&gt;"Magic Link" login for easy access on eReaders&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;LDAP, Google/GitHub OAuth, and proxy authentication support&lt;/td&gt; 
   &lt;td align="center"&gt;Advanced search and filtering options&lt;/td&gt; 
   &lt;td align="center"&gt;Multilingual user interface supporting 20+ &lt;a href="https://github.com/janeczku/calibre-web/wiki/Translation-Status"&gt;languages&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Plus these &lt;em&gt;&lt;strong&gt;CWA Specific Features&lt;/strong&gt;&lt;/em&gt; on top:&lt;/h2&gt; 
&lt;h4&gt;Click a feature below to read about it in more detail:&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-ingest-service-"&gt;Automatic Ingest Service ✨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-conversion-service-"&gt;Automatic Conversion Service 🔃&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-enforcement-of-changes-made-to-covers--metadata-through-the-calibre-web-ui-"&gt;Automatic Enforcement of Covers &amp;amp; Metadata 👀📔&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#batch-editing--deletion-%EF%B8%8F%EF%B8%8F"&gt;Batch Editing &amp;amp; Deletion 🗂️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automated-back-up-service-"&gt;Automated Back Up Service 🔒&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#library-auto-detect-%EF%B8%8F"&gt;Automated Setup Experience for New Users 🦮&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#automatic-epub-fixer-service-"&gt;Automatic EPUB Fixer Service 🔨&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#simple-to-use-multi-format-conversion-service-"&gt;Multi-Format Conversion Service 🌌&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#library-auto-detect-%EF%B8%8F"&gt;Library Auto-Detect 📚🕵️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#server-stats-tracking-page-"&gt;Server Stats Tracking Page 📍&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#server-stats-tracking-page-"&gt;Server Stats Tracking 📊&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#easy-dark-light-mode-switching-%EF%B8%8F"&gt;Easy Dark/ Light Mode Switching ☀️🌙&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#internal-update-notification-system-%EF%B8%8F"&gt;Internal Update Notification System 🛎️&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#auto-compression-of-backed-up-files-"&gt;Auto-Compression of Backed Up Files 🤐&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#additional-metadata-providers-%EF%B8%8F"&gt;Additional Metadata Providers 🗃️&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#koreader-syncing-kosync-"&gt;KOReader Syncing (KOSync) 📖⚡&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic Ingest Service&lt;/strong&gt; ✨&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA currently supports automatic ingest of 27 different popular ebook formats&lt;/li&gt; 
 &lt;li&gt;Users can configure the services behavior to ignore and/or have certain formats automatically converted to other formats in the Admin Panel&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - A **Weighted Conversion Algorithm:** ⚖️
  - Using the information provided in the Calibre eBook-converter documentation on which formats convert best into epubs, CWA is able to determine from downloads containing multiple eBook formats, which format will convert most optimally, ignoring the other formats to ensure the **best possible quality** and no **duplicate imports** --&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic Conversion Service&lt;/strong&gt; 🔃&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;On by default though can be toggled of in the CWA Settings page, with EPUB as the default target format 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;Available target formats include:&lt;/em&gt; &lt;strong&gt;EPUB&lt;/strong&gt;, &lt;strong&gt;MOBI&lt;/strong&gt;, &lt;strong&gt;AZW3&lt;/strong&gt;, &lt;strong&gt;KEPUB&lt;/strong&gt; &amp;amp; &lt;strong&gt;PDF&lt;/strong&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Upon detecting new files in the Ingest Directory, if any of the files are in formats the user has configured CWA to auto-convert to the current target format,&lt;/li&gt; 
 &lt;li&gt;The following &lt;strong&gt;28 file types are currently supported:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;em&gt;.azw, .azw3, .azw4, .mobi, .cbz, .cbr, .cb7, .cbc, .chm, .djvu, .docx, .epub, .fb2, .fbz, .html, .htmlz, .lit, .lrf, .odt, .pdf, .prc, .pdb, .pml, .rb, .rtf, .snb, .tcr, .txtz&lt;/em&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic Enforcement of Changes made to Covers &amp;amp; Metadata through the Calibre-Web UI!&lt;/strong&gt; 👀📔&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;In stock Calibre-Web, any changes made to a book's &lt;strong&gt;Cover and/or Metadata&lt;/strong&gt; are only applied to how the book appears in the Calibre-Web UI, changing nothing in the ebook's files like you would expect&lt;/li&gt; 
 &lt;li&gt;This results in a frustrating situation for many CW users who utilise CW's Send-To-Kindle function, and are disappointed to find that the High-Quality Covers they picked out and carefully chosen Metadata they sourced are completely absent on all their other devices! UGH!&lt;/li&gt; 
 &lt;li&gt;CWA's &lt;strong&gt;Automatic Cover &amp;amp; Metadata Enforcement Feature&lt;/strong&gt; makes it so that &lt;strong&gt;WHATEVER&lt;/strong&gt; you changes you make to &lt;strong&gt;YOUR&lt;/strong&gt; books, &lt;strong&gt;&lt;em&gt;are made to the books themselves&lt;/em&gt;&lt;/strong&gt;, as well as in the Web UI, &lt;strong&gt;making what you see, what you get.&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-enforcer-diagram.png" alt="Cover Enforcement CWA" title="CWA 1.2.0 Cover Enforcement Diagram" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Batch Editing &amp;amp; Deletion!&lt;/strong&gt; 🗂️🗄️&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Say goodbye to clicking that edit button again, and again, and again just to remove or edit a single series!&lt;/li&gt; 
 &lt;li&gt;To use, simply navigate to the &lt;code&gt;Books List&lt;/code&gt;page on the left hand side of the Web UI, select the books you wish to edit/ delete and use the buttons either above the table or within the headers to do whatever you need!&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Courtesy of &lt;a href="https://github.com/jmarmstrong1207"&gt;@jmarmstrong1207&lt;/a&gt;&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-bulk-editting-diagram.png" alt="" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Automated Back Up Service&lt;/strong&gt; 🔒&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Worried what will happen if something goes wrong during one of CWA's automated functions? Don't be!&lt;/li&gt; 
 &lt;li&gt;By default, the originals all files processed by CWA are stored in &lt;code&gt;/config/processed_books&lt;/code&gt; though this can be toggled in the CWA Settings panel&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Automatic EPUB Fixer Service&lt;/strong&gt; 🔨&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Ever had it where you're super excited to start reading your next book but for some reason, Amazon's Send-to-Kindle service just keeps rejecting it? Well no more!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Originally developed by &lt;a href="https://github.com/innocenat/kindle-epub-fix"&gt;innocenat&lt;/a&gt;, this tool corrects the following potential issues for every EPUB processed by CWA:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Fixes UTF-8 encoding problem by adding UTF-8 declaration if no encoding is specified&lt;/li&gt; 
   &lt;li&gt;Fixes hyperlink problem (result in Amazon rejecting the EPUB) when NCX table of content link to &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; with ID hash.&lt;/li&gt; 
   &lt;li&gt;Detect invalid and/or missing language tag in metadata, and prompt user to select new language.&lt;/li&gt; 
   &lt;li&gt;Remove stray &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tags with no source field.&lt;/li&gt; 
   &lt;li&gt;Resolves several EPUB compatibility issues, such as UTF-8 encoding, hyperlink problems, invalid/missing language tags, and stray image tags.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;This &lt;strong&gt;ensures maximum comparability&lt;/strong&gt; for each EPUB file with the Amazon &lt;strong&gt;Send-to-Kindle&lt;/strong&gt; service and for those who don't use Amazon devices, has the side benefit of cleaning up your lower quality files!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enabled by default but can be toggled in settings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Files processed by the EPUB-Fixer service are by default automatically backed up to &lt;code&gt;/config/processed_books&lt;/code&gt; however this can also be toggled in the settings.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Bulk processing of whole library with progress tracking available in the Admin Panel&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Available via both the Web UI and CLI&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Simple to use Multi-Format Conversion Service&lt;/strong&gt; 🌌&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;This utility gives the user the option to either keep a copy of the original of all converted files in &lt;code&gt;/config/processed_books&lt;/code&gt; or to trust the process and have CWA simply convert and replace those files (not recommended)&lt;/li&gt; 
 &lt;li&gt;Full usage details can be found &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#the-convert-library-tool"&gt;here&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/CWA-new-process-ui.gif" alt="CWA Convert Library Web UI" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Additional Metadata Providers&lt;/strong&gt; 🗃️&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Users can now make use of &lt;a href="https://isbndb.com/"&gt;isbndb.com&lt;/a&gt;'s huge database when fetching metadata for the books in their library!&lt;/li&gt; 
 &lt;li&gt;Access is being provided via &lt;a href="https://ibdb.dev/"&gt;ibdb.dev&lt;/a&gt; thanks to a generous donation to the community by &lt;a href="https://www.github.com/chad3814"&gt;@chad3814&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hardcover.app/"&gt;Hardcover&lt;/a&gt; is also currently in the process of being added to CWA as a Metadata Provider&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;KOReader Syncing (KOSync)&lt;/strong&gt; 📖⚡&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA now includes built-in KOReader syncing functionality, providing a modern alternative to traditional KOReader sync servers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Universal KOReader Syncer:&lt;/strong&gt; Works across all KOReader-compatible devices, storing sync data in a readable format for future CWA features&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern Authentication:&lt;/strong&gt; Uses RFC 7617 compliant header-based authentication instead of legacy MD5 hashing for enhanced security&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;CWA Integration:&lt;/strong&gt; Leverages your existing CWA user accounts and permissions - no additional server setup required&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy Installation:&lt;/strong&gt; Plugin and setup instructions are available directly from your CWA instance at &lt;code&gt;/kosync&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Server Stats Tracking Page&lt;/strong&gt; 📍📊&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ever wondered how many times CWA has been there for you in the background? Check out the CWA Stats page to see a fun list of statistics showing how many times CWA has been there to make your life just that little bit easier&lt;/li&gt; 
 &lt;li&gt;A database also exists to keep track of any and all enforcements, imports, conversions &amp;amp; fixes both for peace of mind and to make the checking of any bugs or weird behaviour easier 
  &lt;!-- - Full documentation can be found below [here](#checking-the-cover-enforcement-logs) --&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-server-stats-page.png" alt="CWA Server Stats Page" /&gt;&lt;/p&gt; 
&lt;h4&gt;&lt;strong&gt;Library Auto-Detect&lt;/strong&gt; 📚🕵️&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Made to &lt;strong&gt;MASSIVELY&lt;/strong&gt; simplify the setup process for both &lt;strong&gt;new and existing users&lt;/strong&gt; alike&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New Users without existing Libraries:&lt;/strong&gt; 🆕 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;No library? No problem!&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;New users without existing Calibre Libraries no longer need to copy and paste &lt;code&gt;metadata.db&lt;/code&gt; files and point to their location in the Web UI, CWA will now automatically detect the lack of Library in your given bind and automatically create a new one for you! It will even automatically register it with the Web UI so you can really hit the ground running&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;New or Existing Users with Existing Libraries:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Simply bind a directory containing your Calibre Library (search is done recursively so it doesn't matter how deep in the directory it is) and CWA will now automatically find it and mount it to the Web UI&lt;/li&gt; 
   &lt;li&gt;Should you bind a directory with more than 1 Calibre Library in it, CWA will intelligently compare the disk sizes of all discovered libraries and mount the largest one 
    &lt;ul&gt; 
     &lt;li&gt;&lt;em&gt;CWA supports only one library per instance though support for multiple libraries is being investigated for future releases&lt;/em&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;em&gt;In the meantime, users with multiple libraries who don't want to consolidate them are advised to run multiple, parallel instances&lt;/em&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Easy Dark/ Light Mode Switching&lt;/strong&gt; ☀️🌙&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Switch between Light &amp;amp; Dark Modes in just one click from anywhere in the Web UI!&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Simply click/tap the 🕶️ icon on the Web UI's navbar and switch between themes at your leisure&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Internal Update Notification System&lt;/strong&gt; 🛎️&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Users will now be automatically notified of the availability of new updates from within the Web UI&lt;/li&gt; 
 &lt;li&gt;Automatically triggered by a difference between the version number of the most recent GitHub release and the version installed&lt;/li&gt; 
 &lt;li&gt;Set to only show once per calendar day until updated as to not be annoying&lt;/li&gt; 
 &lt;li&gt;&lt;em&gt;Visible to Admin users only&lt;/em&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Manual Library Refresh&lt;/strong&gt; ♻️&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ever had books get stuck in the ingest folder after an unexpected power-cut ect.? Well say goodbye to having to manually copy the books to be ingested back in and out of the ingest folder, simply press the &lt;code&gt;Refresh Library&lt;/code&gt; button on the navbar of the Web UI and anything still sitting in the ingest folder will be automatically ingested!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;&lt;strong&gt;Auto-Compression of Backed Up Files&lt;/strong&gt; 🤐&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Just before midnight each day, the CWA-Auto-Zipper service will automatically zip together all files processed that day.&lt;/li&gt; 
 &lt;li&gt;Minimises disk space usage and helps keep back up files as organised as possible&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enabled by default but can be disabled in the CWA Settings page in the Admin panel&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/README_images/cwa-bulk-editting-diagram.png" alt="Calibre-Web Automated" title="Calibre-Web Automated Bulk Editing &amp;amp; Bulk Deletion" /&gt;&lt;/p&gt; 
&lt;h1&gt;Features Currently Under Active Development and on our Roadmap 🏗️🛣️&lt;/h1&gt; 
&lt;h4&gt;High Priority 🚨&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Integration of CWA with &lt;a href="https://hardcover.app/"&gt;Hardcover&lt;/a&gt; 📚 
  &lt;ul&gt; 
   &lt;li&gt;Ability to use Hardcover as a Metadata Provider&lt;/li&gt; 
   &lt;li&gt;Ability to sync read progress with your Hardcover account! (Kobo users only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;A companion project to integrate CWA with the Friendliest &amp;amp; Warmest Place on the Internet 🐭🧀&lt;/li&gt; 
 &lt;li&gt;Support for Calibre Plugins e.g. deDRM 🔌&lt;/li&gt; 
 &lt;li&gt;Split Libraries (having your Calibre Library and books in separate locations)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Lower Priority 🌱&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Notification system integrations e.g. Telegram, Gotify, ntfy ect. 📧&lt;/li&gt; 
 &lt;li&gt;Possible Prowlarr Integration 🐯&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please suggest any ideas or wishes you might have! we're open to anything!&lt;/p&gt; 
&lt;h1&gt;How To Install 📖&lt;/h1&gt; 
&lt;h2&gt;Quick Install 🚀&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Download the Docker Compose template file using the command below:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;curl -OL https://raw.githubusercontent.com/crocodilestick/calibre-web-automated/main/docker-compose.yml
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt; &lt;p&gt;Move the compose file to an empty folder (e.g. ~/docker/calibre-web-automated/docker-compose.yml). This will be used to store the server data and library&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Edit the compose file using the comments to help, filling in your Timezone (optional) and desired binds&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Navigate to where you downloaded the Compose file using &lt;code&gt;cd&lt;/code&gt; and run:&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;docker compose up -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And that's you off to the races! 🥳 HOWEVER to avoid potential problems and ensure maximum functionality, we recommend carrying out these &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks Here&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Using Docker Compose 🐋⭐(Recommended)&lt;/h2&gt; 
&lt;h3&gt;1. Setup the container using the Docker Compose template below: 🐋📜&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;---
services:
  calibre-web-automated:
    image: crocodilestick/calibre-web-automated:latest
    container_name: calibre-web-automated
    environment:
      # Only change these if you know what you're doing
      - PUID=1000
      - PGID=1000
      # Edit to match your current timezone https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
      - TZ=UTC
    volumes:
      # CW users migrating should stop their existing CW instance, make a copy of the config folder, and bind that here to carry over all of their user settings ect.
      - /path/to/config/folder:/config
      # This is an ingest dir, NOT a library one. Anything added here will be automatically added to your library according to the settings you have configured in CWA Settings page. All files placed here are REMOVED AFTER PROCESSING
      - /path/to/the/folder/you/want/to/use/for/book/ingest:/cwa-book-ingest
      # If you don't have an existing library, CWA will automatically create one at the bind provided here
      - /path/to/your/calibre/library:/calibre-library
    ports:
      # Change the first number to change the port you want to access the Web UI, not the second
      - 8083:8083
    restart: unless-stopped
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Explanation of the Container Bindings:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure all 3 of the main bindings are separate directories, errors can occur when binds are made within other binds&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/config&lt;/code&gt; - This is used to store logs and other miscellaneous files that keep CWA running 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;New Users&lt;/strong&gt; - Use any empty folder (if you run into any issues, make sure the ownership of said folder isn't &lt;code&gt;root:root&lt;/code&gt; in your main os)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Existing/ CW Users&lt;/strong&gt; - Those with existing Calibre-Web setups, map this to your existing &lt;code&gt;/config&lt;/code&gt; directory containing &lt;code&gt;app.db&lt;/code&gt; to ensure settings and users are pulled in&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/cwa-book-ingest&lt;/code&gt; - &lt;strong&gt;ATTENTION&lt;/strong&gt; ⚠️ - All files within this folder will be &lt;strong&gt;DELETED&lt;/strong&gt; after being processed. This folder should only be used to dump new books into for import and automatic conversion&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/calibre-library&lt;/code&gt; - This should be bound to your Calibre library folder where the &lt;code&gt;metadata.db&lt;/code&gt; &amp;amp; book(s) files reside. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;New Users&lt;/strong&gt; - Use any empty folder (if you run into any issues, make sure the ownership of said folder isn't &lt;code&gt;root:root&lt;/code&gt; in your main os)&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Existing/ CW Users&lt;/strong&gt; - If there are multiple libraries in the mounted directory, CWA will automatically find and mount the largest one - check the logs for more details on which &lt;code&gt;metadata.db&lt;/code&gt; was utilised&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- - `/books` _(Optional)_ Utilise if you have a separate collection of book files somewhere and want to be able to access within the container. For the majority of users, this is not required and mounting`/calibre-library' is sufficient --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;/app/calibre-web-automated/gmail.json&lt;/code&gt; &lt;em&gt;(Optional)&lt;/em&gt; - This is used to setup Calibre-Web and/or CWA with your gmail account for sending books via email. Follow the guide &lt;a href="https://github.com/janeczku/calibre-web/wiki/Setup-Mailserver#gmail"&gt;here&lt;/a&gt; if this is something you're interested in but be warned it can be a very fiddly process, I would personally recommend a simple SMTP Server&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;And just like that, Calibre-Web Automated should be up and running! &lt;strong&gt;HOWEVER&lt;/strong&gt; to avoid potential problems and ensure maximum functionality,we recommend carrying out these &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks Here&lt;/a&gt;.&lt;/p&gt; 
&lt;h1&gt;Users migrating from stock Calibre-Web&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA has been designed to make switching over as easy as possible. To migrate your CW instance to CWA, simply: 
  &lt;ol&gt; 
   &lt;li&gt;Stop your instance of CW if it's still running&lt;/li&gt; 
   &lt;li&gt;Whatever your &lt;code&gt;/books&lt;/code&gt; bind was in Calibre-Web, should be your &lt;code&gt;/calibre-library&lt;/code&gt; bind for CWA&lt;/li&gt; 
   &lt;li&gt;Mount the same &lt;code&gt;/config&lt;/code&gt; folder in your Docker Compose that you were using for CW (or a copy of it to be extra safe)&lt;/li&gt; 
   &lt;li&gt;Mount the same folder containing your Calibre Library (the Docker Compose for the Linuxserver image of Calibre Web has this as &lt;code&gt;/books&lt;/code&gt; by default)&lt;/li&gt; 
  &lt;/ol&gt; &lt;/li&gt; 
 &lt;li&gt;And then you're done! All of your users, settings ect. should be automatically carried over into your new CWA instance! Enjoy!&lt;/li&gt; 
 &lt;li&gt;If you run into an issue where the Web UI won't load, trying using the same port as you did for CW and then reconfiguring if you want to once you've got everything set up&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Post-Install Tasks:&lt;/h1&gt; 
&lt;h2&gt;&lt;em&gt;Calibre-Web Quick Start Guide&lt;/em&gt;&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open your browser and navigate to &lt;a href="http://localhost:8083"&gt;http://localhost:8083&lt;/a&gt; or &lt;a href="http://localhost:8083/opds"&gt;http://localhost:8083/opds&lt;/a&gt; for the OPDS catalog&lt;/li&gt; 
 &lt;li&gt;Log in with the default admin credentials (&lt;em&gt;below&lt;/em&gt;)&lt;/li&gt; 
 &lt;li&gt;Configure your Calibre-Web Automated instance via the Admin Page&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;A guide to what all of the stock CW Settings do can be found &lt;a href="https://github.com/janeczku/calibre-web/wiki/Configuration#basic-configuration"&gt;here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Make sure &lt;code&gt;Enable Uploads&lt;/code&gt; is enabled in &lt;code&gt;Settings -&amp;gt; Basic Configuration -&amp;gt; Feature Configuration&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;Configure CWA to behave as you would like it to in the CWA Settings panel&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Here you can turn certain features on and off, set your Target Format, which file formats should be ignored and which should be auto-converted ect.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="6"&gt; 
 &lt;li&gt;Drop a book into your ingest folder to check everything is working and enjoy!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Default Admin Login:&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Username:&lt;/strong&gt; admin&lt;br /&gt; &lt;strong&gt;Password:&lt;/strong&gt; admin123&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Usage 🔧&lt;/h1&gt; 
&lt;h2&gt;Adding Books to Your Library&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simply move your newly downloaded or existing eBook files to the ingest folder which is &lt;code&gt;/cwa-book-ingest&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Anything you place in this folder will be automatically analysed, converted if necessary and then imported into your Calibre-Web library if not in a format you have told CWA to ignore in the CWA Settings Panel 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;⚠️ ATTENTION ⚠️&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;em&gt;Downloading files directly into &lt;code&gt;/cwa-book-ingest&lt;/code&gt; is not supported. It can cause duplicate imports and potentially a corrupt database. It is recommended to first download the books completely, then transfer them to &lt;code&gt;/cwa-book-ingest&lt;/code&gt; to avoid any issues&lt;/em&gt;&lt;/li&gt; 
     &lt;li&gt;Be sure that the books you are transferring to &lt;code&gt;/cwa-book-ingest&lt;/code&gt; are owned by your user rather than root. Otherwise, permission errors may occur and may result in incomplete importing.&lt;/li&gt; 
     &lt;li&gt;In the event you're expecting a book to be ingested and it hasn't been, use the "Library Refresh" button on the Upper Navbar to manually trigger the ingest process&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;KOReader Syncing (KOSync) 📖⚡&lt;/h2&gt; 
&lt;p&gt;CWA now includes built-in KOReader syncing functionality, allowing you to sync your reading progress across devices using KOReader. This feature provides a modern, secure alternative to traditional KOReader sync servers. Navigate to &lt;code&gt;http://your-cwa-instance:8083/kosync&lt;/code&gt; in your browser where you'll find download links and installation instructions for the CWA KOReader plugin.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;For Developers - Building Custom Docker Image&lt;/h2&gt; 
&lt;p&gt;If you want to contribute to this project, you can build a local version with your changes by running &lt;code&gt;build.sh&lt;/code&gt; in the repository.&lt;/p&gt; 
&lt;p&gt;The resultant image will then be automatically deployed using the &lt;code&gt;docker-compose.yml.dev&lt;/code&gt; (make changes as necessary beforehand) in the directory and the &lt;code&gt;build/&lt;/code&gt; folder will be created, primarily housing the development docker-compose.yml file and its mount points. Add a calibre library here for testing if necessary.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ chmod +x build.sh
$ ./build.sh
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Check out &lt;a href="https://raw.githubusercontent.com/crocodilestick/Calibre-Web-Automated/main/#post-install-tasks"&gt;Post-Install Tasks Here&lt;/a&gt; when necessary.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Further Development 🏗️&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;CWA is really lucky to have a very passionate and active community of people that really help shape CWA into what it is today&lt;/li&gt; 
 &lt;li&gt;If you have any ideas or want to contribute to the project, you're more than welcome to! We accept anyone regardless of skill level of expertise!&lt;/li&gt; 
 &lt;li&gt;If you've got a good idea or want to simply suggest improvements, simply get in touch with us on the Discord Server &lt;a href="https://discord.gg/EjgSeek94R"&gt;here&lt;/a&gt;!&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>mediacms-io/mediacms</title>
      <link>https://github.com/mediacms-io/mediacms</link>
      <description>&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaCMS&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mediacms-io/mediacms/releases/"&gt;&lt;img src="https://img.shields.io/github/v/release/mediacms-io/mediacms?color=green" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/mediacms/mediacms"&gt;&lt;img src="https://img.shields.io/docker/pulls/mediacms/mediacms" alt="DockerHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS. It is developed to meet the needs of modern web platforms for viewing and sharing media. It can be used to build a small to medium video and media portal within minutes.&lt;/p&gt; 
&lt;p&gt;It is built mostly using the modern stack Django + React and includes a REST API.&lt;/p&gt; 
&lt;p&gt;A demo is available at &lt;a href="https://demo.mediacms.io"&gt;https://demo.mediacms.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/index.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/video.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/embed.jpg" width="340" /&gt; &lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Complete control over your data&lt;/strong&gt;: host it yourself!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern technologies&lt;/strong&gt;: Django/Python/Celery, React.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for multiple publishing workflows&lt;/strong&gt;: public, private, unlisted and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media types support&lt;/strong&gt;: video, audio, image, pdf&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media classification options&lt;/strong&gt;: categories, tags and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media sharing options&lt;/strong&gt;: social media share, videos embed code generation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Video Trimmer&lt;/strong&gt;: trim video, replace, save as new or create segments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: create RBAC categories and connect users to groups with view/edit access on their media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SAML support&lt;/strong&gt;: with ability to add mappings to system roles and groups&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy media searching&lt;/strong&gt;: enriched with live search functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Playlists for audio and video content&lt;/strong&gt;: create playlists, add and reorder content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsive design&lt;/strong&gt;: including light and dark themes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced users management&lt;/strong&gt;: allow self registration, invite only, closed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable actions&lt;/strong&gt;: allow download, add comments, add likes, dislikes, report media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configuration options&lt;/strong&gt;: change logos, fonts, styling, add more pages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced video player&lt;/strong&gt;: customized video.js player with multiple resolution and playback speed options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple transcoding profiles&lt;/strong&gt;: sane defaults for multiple dimensions (144p, 240p, 360p, 480p, 720p, 1080p) and multiple profiles (h264, h265, vp9)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive video streaming&lt;/strong&gt;: possible through HLS protocol&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subtitles/CC&lt;/strong&gt;: support for multilingual subtitle files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable transcoding&lt;/strong&gt;: transcoding through priorities. Experimental support for remote workers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chunked file uploads&lt;/strong&gt;: for pausable/resumable upload of content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: Documented through Swagger&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Translation&lt;/strong&gt;: Most of the CMS is translated to a number of languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Schools, education.&lt;/strong&gt; Administrators and editors keep what content will be published, students are not distracted with advertisements and irrelevant content, plus they have the ability to select either to stream or download content.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Organization sensitive content.&lt;/strong&gt; In cases where content is sensitive and cannot be uploaded to external sites.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a great community.&lt;/strong&gt; MediaCMS can be customized (URLs, logos, fonts, aesthetics) so that you create a highly customized video portal for your community!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Personal portal.&lt;/strong&gt; Organize, categorize and host your content the way you prefer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;We believe there's a need for quality open source web applications that can be used to build community portals and support collaboration. We have three goals for MediaCMS: a) deliver all functionality one would expect from a modern system, b) allow for easy installation and maintenance, c) allow easy customization and addition of features.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MediaCMS is released under &lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;GNU Affero General Public License v3.0 license&lt;/a&gt;. Copyright Markos Gogoulos.&lt;/p&gt; 
&lt;h2&gt;Support and paid services&lt;/h2&gt; 
&lt;p&gt;We provide custom installations, development of extra functionality, migration from existing systems, integrations with legacy systems, training and support. Contact us at &lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Commercial Hostings&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Elestio&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can deploy MediaCMS on Elestio using one-click deployment. Elestio supports MediaCMS by providing revenue share so go ahead and click below to deploy and use MediaCMS.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://elest.io/open-source/mediacms"&gt;&lt;img src="https://elest.io/images/logos/deploy-to-elestio-btn.png" alt="Deploy on Elestio" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hardware considerations&lt;/h2&gt; 
&lt;p&gt;For a small to medium installation, with a few hours of video uploaded daily, and a few hundreds of active daily users viewing content, 4GB Ram / 2-4 CPUs as minimum is ok. For a larger installation with many hours of video uploaded daily, consider adding more CPUs and more Ram.&lt;/p&gt; 
&lt;p&gt;In terms of disk space, think of what the needs will be. A general rule is to multiply by three the size of the expected uploaded videos (since the system keeps original versions, encoded versions plus HLS), so if you receive 1G of videos daily and maintain all of them, you should consider a 1T disk across a year (1G * 3 * 365).&lt;/p&gt; 
&lt;h2&gt;Installation / Maintanance&lt;/h2&gt; 
&lt;p&gt;There are two ways to run MediaCMS, through Docker Compose and through installing it on a server via an automation script that installs and configures all needed services. Find the related pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#2-server-installation"&gt;Single Server&lt;/a&gt; page&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#3-docker-installation"&gt;Docker Compose&lt;/a&gt; page&lt;/p&gt; &lt;p&gt;A complete guide can be found on the blog post &lt;a href="https://medium.com/@MediaCMS.io/how-to-self-host-and-share-your-videos-in-2021-14067e3b291b"&gt;How to self-host and share your videos in 2021&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/user_docs.md"&gt;Users documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md"&gt;Administrators documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/developers_docs.md"&gt;Developers documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#5-configuration"&gt;Configuration&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/transcoding.md"&gt;Transcoding&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/dev_exp.md"&gt;Developer Experience&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/media_permissions.md"&gt;Media Permissions&lt;/a&gt; page&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technology&lt;/h2&gt; 
&lt;p&gt;This software uses the following list of awesome technologies: Python, Django, Django Rest Framework, Celery, PostgreSQL, Redis, Nginx, uWSGI, React, Fine Uploader, video.js, FFMPEG, Bento4&lt;/p&gt; 
&lt;h2&gt;Who is using it&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cinemata&lt;/strong&gt; non-profit media, technology and culture organization - &lt;a href="https://cinemata.org"&gt;https://cinemata.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Critical Commons&lt;/strong&gt; public media archive and fair use advocacy network - &lt;a href="https://criticalcommons.org"&gt;https://criticalcommons.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;American Association of Gynecologic Laparoscopists&lt;/strong&gt; - &lt;a href="https://surgeryu.org/"&gt;https://surgeryu.org/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you like the project, here's a few things you can do&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hire us, for custom installations, training, support, maintenance work&lt;/li&gt; 
 &lt;li&gt;Suggest us to others that are interested to hire us&lt;/li&gt; 
 &lt;li&gt;Write a blog post/article about MediaCMS&lt;/li&gt; 
 &lt;li&gt;Share on social media about the project&lt;/li&gt; 
 &lt;li&gt;Open issues, participate on &lt;a href="https://github.com/mediacms-io/mediacms/discussions"&gt;discussions&lt;/a&gt;, report bugs, suggest ideas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediacms-io/mediacms/discussions/categories/show-and-tell"&gt;Show and tell&lt;/a&gt; how you are using the project&lt;/li&gt; 
 &lt;li&gt;Star the project&lt;/li&gt; 
 &lt;li&gt;Add functionality, work on a PR, fix an issue!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>louislam/uptime-kuma</title>
      <link>https://github.com/louislam/uptime-kuma</link>
      <description>&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true" width="128" alt="" /&gt; 
&lt;/div&gt; 
&lt;h1&gt;Uptime Kuma&lt;/h1&gt; 
&lt;p&gt;Uptime Kuma is an easy-to-use self-hosted monitoring tool.&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/pulls/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver." /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/last-commit/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://opencollective.com/uptime-kuma"&gt;&lt;img src="https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;amp;color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/louislam"&gt;&lt;img src="https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/"&gt; &lt;img src="https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg" width="700" alt="" /&gt; 
&lt;h2&gt;🥔 Live Demo&lt;/h2&gt; 
&lt;p&gt;Try it!&lt;/p&gt; 
&lt;p&gt;Demo Server (Location: Frankfurt - Germany): &lt;a href="https://demo.kuma.pet/start-demo"&gt;https://demo.kuma.pet/start-demo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by &lt;a href="https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors"&gt;Uptime Kuma Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;⭐ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers&lt;/li&gt; 
 &lt;li&gt;Fancy, Reactive, Fast UI/UX&lt;/li&gt; 
 &lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications"&gt;90+ notification services, click here for the full list&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;20-second intervals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/lang"&gt;Multi Languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple status pages&lt;/li&gt; 
 &lt;li&gt;Map status pages to specific domains&lt;/li&gt; 
 &lt;li&gt;Ping chart&lt;/li&gt; 
 &lt;li&gt;Certificate info&lt;/li&gt; 
 &lt;li&gt;Proxy support&lt;/li&gt; 
 &lt;li&gt;2FA support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 How to Install&lt;/h2&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://0.0.0.0:3001"&gt;http://0.0.0.0:3001&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] File Systems like &lt;strong&gt;NFS&lt;/strong&gt; (Network File System) are &lt;strong&gt;NOT&lt;/strong&gt; supported. Please map to a local directory or volume.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to limit exposure to localhost (without exposing port for other users or to use a &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy"&gt;reverse proxy&lt;/a&gt;), you can expose the port like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💪🏻 Non-Docker&lt;/h3&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Platform 
  &lt;ul&gt; 
   &lt;li&gt;✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.&lt;/li&gt; 
   &lt;li&gt;✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher&lt;/li&gt; 
   &lt;li&gt;❌ FreeBSD / OpenBSD / NetBSD&lt;/li&gt; 
   &lt;li&gt;❌ Replit / Heroku&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; 18 / 20.4&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.npmjs.com/cli/"&gt;npm&lt;/a&gt; 9&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git-scm.com/downloads"&gt;Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pm2.keymetrics.io/"&gt;pm2&lt;/a&gt; - For running Uptime Kuma in the background&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don't have it:
npm install pm2 -g &amp;amp;&amp;amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More useful PM2 Commands&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;amp;&amp;amp; pm2 startup
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;If you need more options or need to browse via a reverse proxy, please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆙 How to Update&lt;/h2&gt; 
&lt;p&gt;Please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆕 What's Next?&lt;/h2&gt; 
&lt;p&gt;I will assign requests/issues to the next milestone.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/milestones"&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;p&gt;Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/sponsors?v=6" alt /&gt; 
&lt;h2&gt;🖼 More Screenshots&lt;/h2&gt; 
&lt;p&gt;Light Mode:&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/img/light.jpg" width="512" alt="" /&gt; 
&lt;p&gt;Status Page:&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png" width="512" alt="" /&gt; 
&lt;p&gt;Settings Page:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/2.jpg" width="400" alt="" /&gt; 
&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/3.jpg" width="400" alt="" /&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;I was looking for a self-hosted monitoring tool like "Uptime Robot", but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.&lt;/li&gt; 
 &lt;li&gt;Wanted to build a fancy UI.&lt;/li&gt; 
 &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; 
 &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; 
 &lt;li&gt;Try to use WebSocket with SPA instead of a REST API.&lt;/li&gt; 
 &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you love this project, please consider giving it a ⭐.&lt;/p&gt; 
&lt;h2&gt;🗣️ Discussion / Ask for Help&lt;/h2&gt; 
&lt;p&gt;⚠️ For any general or technical questions, please don't send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.&lt;/p&gt; 
&lt;p&gt;I recommend using Google, GitHub Issues, or Uptime Kuma's subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/UptimeKuma/"&gt;Subreddit (r/UptimeKuma)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;My Reddit account: &lt;a href="https://reddit.com/u/louislamlam"&gt;u/louislamlam&lt;/a&gt; You can mention me if you ask a question on the subreddit.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;h3&gt;Create Pull Requests&lt;/h3&gt; 
&lt;p&gt;We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules: &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma"&gt;CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Pull Requests&lt;/h3&gt; 
&lt;p&gt;There are a lot of pull requests right now, but I don't have time to test them all.&lt;/p&gt; 
&lt;p&gt;If you want to help, you can check this: &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests"&gt;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Beta Version&lt;/h3&gt; 
&lt;p&gt;Check out the latest beta release here: &lt;a href="https://github.com/louislam/uptime-kuma/releases"&gt;https://github.com/louislam/uptime-kuma/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bug Reports / Feature Requests&lt;/h3&gt; 
&lt;p&gt;If you want to report a bug or request a new feature, feel free to open a &lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;If you want to translate Uptime Kuma into your language, please visit &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/src/lang/README.md"&gt;Weblate Readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Spelling &amp;amp; Grammar&lt;/h3&gt; 
&lt;p&gt;Feel free to correct the grammar in the documentation or code. My mother language is not English and my grammar is not that great.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hakimel/reveal.js</title>
      <link>https://github.com/hakimel/reveal.js</link>
      <description>&lt;p&gt;The HTML Presentation Framework&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://revealjs.com"&gt; &lt;img src="https://hakim-static.s3.amazonaws.com/reveal-js/logo/v1/reveal-black-text-sticker.png" alt="reveal.js" width="500" /&gt; &lt;/a&gt; &lt;br /&gt;&lt;br /&gt; &lt;a href="https://github.com/hakimel/reveal.js/actions"&gt;&lt;img src="https://github.com/hakimel/reveal.js/workflows/tests/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://slides.com/"&gt;&lt;img src="https://static.slid.es/images/slides-github-banner-320x40.png?1" alt="Slides" width="160" height="20" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;reveal.js is an open source HTML presentation framework. It enables anyone with a web browser to create beautiful presentations for free. Check out the live demo at &lt;a href="https://revealjs.com/"&gt;revealjs.com&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The framework comes with a powerful feature set including &lt;a href="https://revealjs.com/vertical-slides/"&gt;nested slides&lt;/a&gt;, &lt;a href="https://revealjs.com/markdown/"&gt;Markdown support&lt;/a&gt;, &lt;a href="https://revealjs.com/auto-animate/"&gt;Auto-Animate&lt;/a&gt;, &lt;a href="https://revealjs.com/pdf-export/"&gt;PDF export&lt;/a&gt;, &lt;a href="https://revealjs.com/speaker-view/"&gt;speaker notes&lt;/a&gt;, &lt;a href="https://revealjs.com/math/"&gt;LaTeX typesetting&lt;/a&gt;, &lt;a href="https://revealjs.com/code/"&gt;syntax highlighted code&lt;/a&gt; and an &lt;a href="https://revealjs.com/api/"&gt;extensive API&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Want to create reveal.js presentation in a graphical editor? Try &lt;a href="https://slides.com"&gt;https://slides.com&lt;/a&gt;. It's made by the same people behind reveal.js.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Getting started&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;🚀 &lt;a href="https://revealjs.com/installation"&gt;Install reveal.js&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;👀 &lt;a href="https://revealjs.com/demo"&gt;View the demo presentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;📖 &lt;a href="https://revealjs.com/markup/"&gt;Read the documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🖌 &lt;a href="https://slides.com/"&gt;Try the visual editor for reveal.js at Slides.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;🎬 &lt;a href="https://revealjs.com/course"&gt;Watch the reveal.js video course (paid)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt;
  MIT licensed | Copyright © 2011-2024 Hakim El Hattab, https://hakim.se 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>copy/v86</title>
      <link>https://github.com/copy/v86</link>
      <description>&lt;p&gt;x86 PC emulator and x86-to-wasm JIT, running in the browser&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gitter.im/copy/v86"&gt;&lt;img src="https://badges.gitter.im/Join%20Chat.svg?sanitize=true" alt="Join the chat at https://gitter.im/copy/v86" /&gt;&lt;/a&gt; or #v86 on &lt;a href="https://libera.chat/"&gt;irc.libera.chat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;v86 emulates an x86-compatible CPU and hardware. Machine code is translated to WebAssembly modules at runtime in order to achieve decent performance. Here's a list of emulated hardware:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An x86-compatible CPU. The instruction set is around Pentium 4 level, including full SSE3 support. Some features are missing, in particular: 
  &lt;ul&gt; 
   &lt;li&gt;Task gates, far calls in protected mode&lt;/li&gt; 
   &lt;li&gt;Some 16 bit protected mode features&lt;/li&gt; 
   &lt;li&gt;Single stepping (trap flag, debug registers)&lt;/li&gt; 
   &lt;li&gt;Some exceptions, especially floating point and SSE&lt;/li&gt; 
   &lt;li&gt;Multicore&lt;/li&gt; 
   &lt;li&gt;64-bit extensions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;A floating point unit (FPU). Calculations are done using the Berkeley SoftFloat library and therefore should be precise (but slow). Trigonometric and log functions are emulated using 64-bit floats and may be less precise. Not all FPU exceptions are supported.&lt;/li&gt; 
 &lt;li&gt;A floppy disk controller (8272A).&lt;/li&gt; 
 &lt;li&gt;An 8042 Keyboard Controller, PS2. With mouse support.&lt;/li&gt; 
 &lt;li&gt;An 8254 Programmable Interval Timer (PIT).&lt;/li&gt; 
 &lt;li&gt;An 8259 Programmable Interrupt Controller (PIC).&lt;/li&gt; 
 &lt;li&gt;Partial APIC support.&lt;/li&gt; 
 &lt;li&gt;A CMOS Real Time Clock (RTC).&lt;/li&gt; 
 &lt;li&gt;A generic VGA card with SVGA support and Bochs VBE Extensions.&lt;/li&gt; 
 &lt;li&gt;A PCI bus. This one is partly incomplete and not used by every device.&lt;/li&gt; 
 &lt;li&gt;An IDE disk controller. 
  &lt;ul&gt; 
   &lt;li&gt;A built-in ISO 9660 CD-ROM generator.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;An NE2000 (RTL8390) PCI network card.&lt;/li&gt; 
 &lt;li&gt;Various virtio devices: Filesystem, network and balloon.&lt;/li&gt; 
 &lt;li&gt;A SoundBlaster 16 sound card.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demos&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://copy.sh/v86/?profile=9front"&gt;9front&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=archlinux"&gt;Arch Linux&lt;/a&gt; — &lt;a href="https://copy.sh/v86?profile=android"&gt;Android-x86 1.6-r2&lt;/a&gt; — &lt;a href="https://copy.sh/v86?profile=android4"&gt;Android-x86 4.4-r2&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=basiclinux"&gt;BasicLinux&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=buildroot"&gt;Buildroot Linux&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=dsl"&gt;Damn Small Linux&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=elks"&gt;ELKS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=freedos"&gt;FreeDOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=freebsd"&gt;FreeBSD&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=fiwix"&gt;FiwixOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=haiku"&gt;Haiku&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=copy/skiffos"&gt;SkiffOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=reactos"&gt;ReactOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows2000"&gt;Windows 2000&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows98"&gt;Windows 98&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows95"&gt;Windows 95&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows1"&gt;Windows 1.01&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=msdos"&gt;MS-DOS 6.22&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=openbsd"&gt;OpenBSD&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=oberon"&gt;Oberon&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=kolibrios"&gt;KolibriOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86?profile=skift"&gt;SkiftOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=qnx"&gt;QNX&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/how-it-works.md"&gt;How it works&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/networking.md"&gt;Networking&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tools/docker/alpine/"&gt;Alpine Linux guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/archlinux.md"&gt;Arch Linux guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-nt.md"&gt;Windows NT guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-9x.md"&gt;Windows 9x guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/filesystem.md"&gt;9p filesystem&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/linux-9p-image.md"&gt;Linux rootfs on 9p&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/profiling.md"&gt;Profiling&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/cpu-idling.md"&gt;CPU Idling&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;Here's an overview of the operating systems supported in v86:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux works pretty well. 64-bit kernels are not supported. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://buildroot.uclibc.org"&gt;Buildroot&lt;/a&gt; can be used to build a minimal image. &lt;a href="https://github.com/humphd/browser-vm"&gt;humphd/browser-vm&lt;/a&gt; and &lt;a href="https://github.com/Darin755/browser-buildroot"&gt;darin755/browser-buildroot&lt;/a&gt; have some useful scripts for building one.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/skiffos/SkiffOS/tree/master/configs/browser/v86"&gt;SkiffOS&lt;/a&gt; (based on Buildroot) can cross-compile a custom image.&lt;/li&gt; 
   &lt;li&gt;Ubuntu and other Debian derivatives works up to the latest version that supported i386 (16.04 LTS or 18.04 LTS for some variants).&lt;/li&gt; 
   &lt;li&gt;Alpine Linux works. An image can be built from a Dockerfile, see &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tools/docker/alpine/"&gt;tools/docker/alpine/&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Arch Linux 32 works. See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/archlinux.md"&gt;archlinux.md&lt;/a&gt; for building an image.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ReactOS works.&lt;/li&gt; 
 &lt;li&gt;FreeDOS, Windows 1.01 and MS-DOS run very well.&lt;/li&gt; 
 &lt;li&gt;KolibriOS works.&lt;/li&gt; 
 &lt;li&gt;Haiku works.&lt;/li&gt; 
 &lt;li&gt;Android-x86 has been tested up to 4.4-r2.&lt;/li&gt; 
 &lt;li&gt;Windows 1, 3.x, 95, 98, ME, NT and 2000 work reasonably well. 
  &lt;ul&gt; 
   &lt;li&gt;In Windows 2000 and higher the PC type has to be changed from ACPI PC to Standard PC&lt;/li&gt; 
   &lt;li&gt;There are some known boot issues (&lt;a href="https://github.com/copy/v86/issues/250"&gt;#250&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/433"&gt;#433&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/507"&gt;#507&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/555"&gt;#555&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/620"&gt;#620&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/645"&gt;#645&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-9x.md"&gt;Windows 9x guest setup&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows XP, Vista and 8 work under certain conditions (see &lt;a href="https://github.com/copy/v86/issues/86"&gt;#86&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/208"&gt;#208&lt;/a&gt;) 
  &lt;ul&gt; 
   &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-nt.md"&gt;Windows NT guest setup&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Many hobby operating systems work.&lt;/li&gt; 
 &lt;li&gt;9front works.&lt;/li&gt; 
 &lt;li&gt;Plan 9 doesn't work.&lt;/li&gt; 
 &lt;li&gt;QNX works.&lt;/li&gt; 
 &lt;li&gt;OS/2 doesn't work.&lt;/li&gt; 
 &lt;li&gt;FreeBSD works.&lt;/li&gt; 
 &lt;li&gt;OpenBSD works with a specific boot configuration. At the &lt;code&gt;boot&amp;gt;&lt;/code&gt; prompt type &lt;code&gt;boot -c&lt;/code&gt;, then at the &lt;code&gt;UKC&amp;gt;&lt;/code&gt; prompt &lt;code&gt;disable mpbios&lt;/code&gt; and &lt;code&gt;exit&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;NetBSD works only with a custom kernel, see &lt;a href="https://github.com/copy/v86/issues/350"&gt;#350&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;SerenityOS works (only 32-bit versions).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://skiftos.org/"&gt;SkiftOS&lt;/a&gt; works.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can get some information on the disk images here: &lt;a href="https://github.com/copy/images"&gt;https://github.com/copy/images&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to build, run and embed?&lt;/h2&gt; 
&lt;p&gt;You need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;make&lt;/li&gt; 
 &lt;li&gt;Rust with the wasm32-unknown-unknown target&lt;/li&gt; 
 &lt;li&gt;A version of clang compatible with Rust&lt;/li&gt; 
 &lt;li&gt;java (for Closure Compiler, not necessary when using &lt;code&gt;debug.html&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;nodejs (a recent version is required, v16.11.1 is known to be working)&lt;/li&gt; 
 &lt;li&gt;To run tests: nasm, gdb, qemu-system, gcc, libc-i386 and rustfmt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tools/docker/test-image/Dockerfile"&gt;tools/docker/test-image/Dockerfile&lt;/a&gt; for a full setup on Debian or &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install"&gt;WSL&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run &lt;code&gt;make&lt;/code&gt; to build the debug build (at &lt;code&gt;debug.html&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;make all&lt;/code&gt; to build the optimized build (at &lt;code&gt;index.html&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;ROM and disk images are loaded via XHR, so if you want to try out &lt;code&gt;index.html&lt;/code&gt; locally, make sure to serve it from a local webserver. You can use &lt;code&gt;make run&lt;/code&gt; to serve the files using Python's http module.&lt;/li&gt; 
 &lt;li&gt;If you only want to embed v86 in a webpage you can use libv86.js. For usage, check out the &lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/"&gt;examples&lt;/a&gt;. You can download it from the release section.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Alternatively, to build using Docker&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you have Docker installed, you can run the whole system inside a container.&lt;/li&gt; 
 &lt;li&gt;See &lt;code&gt;tools/docker/exec&lt;/code&gt; to find the Dockerfile required for this.&lt;/li&gt; 
 &lt;li&gt;You can run &lt;code&gt;docker build -f tools/docker/exec/Dockerfile -t v86:alpine-3.19 .&lt;/code&gt; from the root directory to generate docker image.&lt;/li&gt; 
 &lt;li&gt;Then you can simply run &lt;code&gt;docker run -it -p 8000:8000 v86:alpine-3.19&lt;/code&gt; to start the server.&lt;/li&gt; 
 &lt;li&gt;Check &lt;code&gt;localhost:8000&lt;/code&gt; for hosted server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Running via Dev Container&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are using an IDE that supports Dev Containers, such as GitHub Codespaces, the Visual Studio Code Remote Container extension, or possibly others such as Jetbrains' IntelliJ IDEA, you can setup the development environment in a Dev Container.&lt;/li&gt; 
 &lt;li&gt;Follow the instructions from your development environment to setup the container.&lt;/li&gt; 
 &lt;li&gt;Run the Task "Fetch images" in order to download images for testing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;The disk images for testing are not included in this repository. You can download them directly from the website using:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;curl --compressed --output-dir images/ --remote-name-all https://i.copy.sh/{linux.iso,linux3.iso,linux4.iso,buildroot-bzimage68.bin,TinyCore-11.0.iso,oberon.img,msdos.img,openbsd-floppy.img,kolibri.img,windows101.img,os8.img,freedos722.img,mobius-fd-release5.img,msdos622.img}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Run integration tests: &lt;code&gt;make tests&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Run all tests: &lt;code&gt;make jshint rustfmt kvm-unit-test nasmtests nasmtests-force-jit expect-tests jitpagingtests qemutests rust-test tests&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tests/Readme.md"&gt;tests/Readme.md&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;API examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/basic.html"&gt;Basic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/serial.html"&gt;Programatically using the serial terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/lua.html"&gt;A Lua interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/two_instances.html"&gt;Two instances in one window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/broadcast-network.html"&gt;Networking between browser windows/tabs using the Broadcast Channel API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/tcp_terminal.html"&gt;TCP Terminal (fetch-based networking)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/save_restore.html"&gt;Saving and restoring emulator state&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Using v86 for your own purposes is as easy as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;var emulator = new V86({
    screen_container: document.getElementById("screen_container"),
    bios: {
        url: "../../bios/seabios.bin",
    },
    vga_bios: {
        url: "../../bios/vgabios.bin",
    },
    cdrom: {
        url: "../../images/linux.iso",
    },
    autostart: true,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/src/browser/starter.js"&gt;starter.js&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;v86 is distributed under the terms of the Simplified BSD License, see &lt;a href="https://raw.githubusercontent.com/copy/v86/master/LICENSE"&gt;LICENSE&lt;/a&gt;. The following third-party dependencies are included in the repository under their own licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/lib/softfloat/softfloat.c"&gt;&lt;code&gt;lib/softfloat/softfloat.c&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/lib/zstd/zstddeclib.c"&gt;&lt;code&gt;lib/zstd/zstddeclib.c&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/tests/kvm-unit-tests"&gt;&lt;code&gt;tests/kvm-unit-tests/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/tests/qemutests"&gt;&lt;code&gt;tests/qemutests/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU test cases via &lt;a href="https://wiki.qemu.org/Main_Page"&gt;QEMU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;More tests via &lt;a href="https://www.linux-kvm.org/page/KVM-unit-tests"&gt;kvm-unit-tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/zstd"&gt;zstd&lt;/a&gt; support is included for better compression of state images&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.jhauser.us/arithmetic/SoftFloat.html"&gt;Berkeley SoftFloat&lt;/a&gt; is included to precisely emulate 80-bit floating point numbers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-macke/jor1k"&gt;The jor1k project&lt;/a&gt; for 9p, filesystem and uart drivers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://winworldpc.com/"&gt;WinWorld&lt;/a&gt; sources of some old operating systems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.os2museum.com/"&gt;OS/2 Museum&lt;/a&gt; sources of some old operating systems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://archiveos.org/"&gt;ArchiveOS&lt;/a&gt; sources of several operating systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;More questions?&lt;/h2&gt; 
&lt;p&gt;Shoot me an email to &lt;code&gt;copy@copy.sh&lt;/code&gt;. Please report bugs on GitHub.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HeyPuter/puter</title>
      <link>https://github.com/HeyPuter/puter</link>
      <description>&lt;p&gt;🌐 The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/p&gt;&lt;hr&gt;&lt;h3 align="center"&gt;&lt;img width="80" alt="Puter.com, The Personal Cloud Computer: All your files, apps, and games in one place accessible from anywhere at any time." src="https://assets.puter.site/puter-logo.png" /&gt;&lt;/h3&gt; 
&lt;h3 align="center"&gt;The Internet OS! Free, Open-Source, and Self-Hostable.&lt;/h3&gt; 
&lt;p align="center"&gt; &lt;a href="https://puter.com/?ref=github.com"&gt;&lt;strong&gt;« LIVE DEMO »&lt;/strong&gt;&lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://puter.com/?ref=github.com"&gt;Puter.com&lt;/a&gt; · &lt;a href="https://puter.com/app/app-center"&gt;App Store&lt;/a&gt; · &lt;a href="https://developer.puter.com" target="_blank"&gt;Developers&lt;/a&gt; · &lt;a href="https://github.com/heyputer/puter-cli" target="_blank"&gt;CLI&lt;/a&gt; · &lt;a href="https://discord.com/invite/PQcx7Teh8u"&gt;Discord&lt;/a&gt; · &lt;a href="https://reddit.com/r/puter"&gt;Reddit&lt;/a&gt; · &lt;a href="https://twitter.com/HeyPuter"&gt;X&lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;&lt;img width="800" style="border-radius:5px;" alt="screenshot" src="https://assets.puter.site/puter.com-screenshot-3.webp" /&gt;&lt;/h3&gt; 
&lt;br /&gt; 
&lt;h2&gt;Puter&lt;/h2&gt; 
&lt;p&gt;Puter is an advanced, open-source internet operating system designed to be feature-rich, exceptionally fast, and highly extensible. Puter can be used as:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A privacy-first personal cloud to keep all your files, apps, and games in one secure place, accessible from anywhere at any time.&lt;/li&gt; 
 &lt;li&gt;A platform for building and publishing websites, web apps, and games.&lt;/li&gt; 
 &lt;li&gt;An alternative to Dropbox, Google Drive, OneDrive, etc. with a fresh interface and powerful features.&lt;/li&gt; 
 &lt;li&gt;A remote desktop environment for servers and workstations.&lt;/li&gt; 
 &lt;li&gt;A friendly, open-source project and community to learn about web development, cloud computing, distributed systems, and much more!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;h3&gt;💻 Local Development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/HeyPuter/puter
cd puter
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;p&gt;If this does not work, see &lt;a href="https://raw.githubusercontent.com/HeyPuter/puter/main/doc/self-hosters/first-run-issues.md"&gt;First Run Issues&lt;/a&gt; for troubleshooting steps.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir puter &amp;amp;&amp;amp; cd puter &amp;amp;&amp;amp; mkdir -p puter/config puter/data &amp;amp;&amp;amp; sudo chown -R 1000:1000 puter &amp;amp;&amp;amp; docker run --rm -p 4100:4100 -v `pwd`/puter/config:/etc/puter -v `pwd`/puter/data:/var/puter  ghcr.io/heyputer/puter
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;🐙 Docker Compose&lt;/h3&gt; 
&lt;h4&gt;Linux/macOS&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mkdir -p puter/config puter/data
sudo chown -R 1000:1000 puter
wget https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should be available at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h4&gt;Windows&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;mkdir -p puter
cd puter
New-Item -Path "puter\config" -ItemType Directory -Force
New-Item -Path "puter\data" -ItemType Directory -Force
Invoke-WebRequest -Uri "https://raw.githubusercontent.com/HeyPuter/puter/main/docker-compose.yml" -OutFile "docker-compose.yml"
docker compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;→&lt;/strong&gt; This should launch Puter at &lt;font color="red"&gt; &lt;a href="http://puter.localhost:4100"&gt;http://puter.localhost:4100&lt;/a&gt; (or the next available port). &lt;/font&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;🚀 Self-Hosting&lt;/h3&gt; 
&lt;p&gt;For detailed guides on self-hosting Puter, including configuration options and best practices, see our &lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/self-hosters/instructions.md"&gt;Self-Hosting Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h3&gt;☁️ Puter.com&lt;/h3&gt; 
&lt;p&gt;Puter is available as a hosted service at &lt;a href="https://puter.com"&gt;&lt;strong&gt;puter.com&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Operating Systems:&lt;/strong&gt; Linux, macOS, Windows&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;RAM:&lt;/strong&gt; 2GB minimum (4GB recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Disk Space:&lt;/strong&gt; 1GB free space&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Node.js:&lt;/strong&gt; Version 16+ (Version 23+ recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;npm:&lt;/strong&gt; Latest stable version&lt;/li&gt; 
&lt;/ul&gt; 
&lt;br /&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Connect with the maintainers and community through these channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bug report or feature request? Please &lt;a href="https://github.com/HeyPuter/puter/issues/new/choose"&gt;open an issue&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Discord: &lt;a href="https://discord.com/invite/PQcx7Teh8u"&gt;discord.com/invite/PQcx7Teh8u&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;X (Twitter): &lt;a href="https://x.com/HeyPuter"&gt;x.com/HeyPuter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Reddit: &lt;a href="https://www.reddit.com/r/puter/"&gt;reddit.com/r/puter/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mastodon: &lt;a href="https://mastodon.social/@puter"&gt;mastodon.social/@puter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Security issues? &lt;a href="mailto:security@puter.com"&gt;security@puter.com&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Email maintainers at &lt;a href="mailto:hi@puter.com"&gt;hi@puter.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We are always happy to help you with any questions you may have. Don't hesitate to ask!&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository, including all its contents, sub-projects, modules, and components, is licensed under &lt;a href="https://github.com/HeyPuter/puter/raw/main/LICENSE.txt"&gt;AGPL-3.0&lt;/a&gt; unless explicitly stated otherwise. Third-party libraries included in this repository may be subject to their own licenses.&lt;/p&gt; 
&lt;br /&gt; 
&lt;h2&gt;Translations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ar.md"&gt;Arabic / العربية&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hy.md"&gt;Armenian / Հայերեն&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.bn.md"&gt;Bengali / বাংলা&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.zh.md"&gt;Chinese / 中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.da.md"&gt;Danish / Dansk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/README.md"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fa.md"&gt;Farsi / فارسی&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fi.md"&gt;Finnish / Suomi&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.fr.md"&gt;French / Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.de.md"&gt;German/ Deutsch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.he.md"&gt;Hebrew/ עברית&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hi.md"&gt;Hindi / हिंदी&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.hu.md"&gt;Hungarian / Magyar&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.id.md"&gt;Indonesian / Bahasa Indonesia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.it.md"&gt;Italian / Italiano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.jp.md"&gt;Japanese / 日本語&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ko.md"&gt;Korean / 한국어&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ml.md"&gt;Malayalam / മലയാളം&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.pl.md"&gt;Polish / Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.pt.md"&gt;Portuguese / Português&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ro.md"&gt;Romanian / Română&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ru.md"&gt;Russian / Русский&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.es.md"&gt;Spanish / Español&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.sv.md"&gt;Swedish / Svenska&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ta.md"&gt;Tamil / தமிழ்&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.te.md"&gt;Telugu / తెలుగు&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.th.md"&gt;Thai / ไทย&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.tr.md"&gt;Turkish / Türkçe&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ua.md"&gt;Ukrainian / Українська&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.ur.md"&gt;Urdu / اردو&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HeyPuter/puter/raw/main/doc/i18n/README.vi.md"&gt;Vietnamese / Tiếng Việt&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>