<rss version="2.0">
  <channel>
    <title>GitHub All Languages Daily Trending</title>
    <description>Daily Trending of All Languages in GitHub</description>
    <pubDate>Tue, 26 Aug 2025 01:31:27 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>spotDL/spotify-downloader</title>
      <link>https://github.com/spotDL/spotify-downloader</link>
      <description>&lt;p&gt;Download your Spotify playlists and songs along with album art and metadata (from YouTube if a match is found).&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;h1&gt;spotDL v4&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;spotDL&lt;/strong&gt; finds songs from Spotify playlists on YouTube and downloads them - along with album art, lyrics and metadata.&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/spotDL/spotify-downloader/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/spotdl/spotify-downloader?color=44CC11&amp;amp;style=flat-square" alt="MIT License" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/spotdl/"&gt;&lt;img src="https://img.shields.io/pypi/pyversions/spotDL?color=%2344CC11&amp;amp;style=flat-square" alt="PyPI version" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/spotdl/"&gt;&lt;img src="https://img.shields.io/pypi/dw/spotDL?label=downloads@pypi&amp;amp;color=344CC11&amp;amp;style=flat-square" alt="PyPi downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/contributors/spotDL/spotify-downloader?style=flat-square" alt="Contributors" /&gt; &lt;a href="https://discord.gg/xCa23pwJWY"&gt;&lt;img src="https://img.shields.io/discord/771628785447337985?label=discord&amp;amp;logo=discord&amp;amp;style=flat-square" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;spotDL: The fastest, easiest and most accurate command-line music downloader.&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://spotdl.readthedocs.io"&gt;Read the documentation on ReadTheDocs!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Refer to our &lt;a href="https://raw.githubusercontent.com/spotDL/spotify-downloader/master/docs/installation.md"&gt;Installation Guide&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h3&gt;Python (Recommended Method)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;em&gt;spotDL&lt;/em&gt; can be installed by running &lt;code&gt;pip install spotdl&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;To update spotDL run &lt;code&gt;pip install --upgrade spotdl&lt;/code&gt;&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;On some systems you might have to change &lt;code&gt;pip&lt;/code&gt; to &lt;code&gt;pip3&lt;/code&gt;.&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary style="font-size:1.25em"&gt;&lt;strong&gt;Other options&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Prebuilt executable 
   &lt;ul&gt; 
    &lt;li&gt;You can download the latest version from the &lt;a href="https://github.com/spotDL/spotify-downloader/releases"&gt;Releases Tab&lt;/a&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;On Termux 
   &lt;ul&gt; 
    &lt;li&gt;&lt;code&gt;curl -L https://raw.githubusercontent.com/spotDL/spotify-downloader/master/scripts/termux.sh | sh&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Arch 
   &lt;ul&gt; 
    &lt;li&gt;There is an &lt;a href="https://aur.archlinux.org/packages/spotdl/"&gt;Arch User Repository (AUR) package&lt;/a&gt; for spotDL.&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt;Docker 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Build image:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t spotdl .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Launch container with spotDL parameters (see section below). You need to create mapped volume to access song files&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -v $(pwd):/music spotdl download [trackUrl]
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;Build from source&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/spotDL/spotify-downloader &amp;amp;&amp;amp; cd spotify-downloader
pip install uv
uv sync
uv run scripts/build.py
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;An executable is created in &lt;code&gt;spotify-downloader/dist/&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h3&gt;Installing FFmpeg&lt;/h3&gt; 
&lt;p&gt;FFmpeg is required for spotDL. If using FFmpeg only for spotDL, you can simply install FFmpeg to your spotDL installation directory: &lt;code&gt;spotdl --download-ffmpeg&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;We recommend the above option, but if you want to install FFmpeg system-wide, follow these instructions&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://windowsloop.com/install-ffmpeg-windows-10/"&gt;Windows Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OSX - &lt;code&gt;brew install ffmpeg&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Linux - &lt;code&gt;sudo apt install ffmpeg&lt;/code&gt; or use your distro's package manager&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Using SpotDL without options:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;spotdl [urls]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run &lt;em&gt;spotDL&lt;/em&gt; as a package if running it as a script doesn't work:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;python -m spotdl [urls]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;General usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;spotdl [operation] [options] QUERY
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;There are different &lt;strong&gt;operations&lt;/strong&gt; spotDL can perform. The &lt;em&gt;default&lt;/em&gt; is &lt;code&gt;download&lt;/code&gt;, which simply downloads the songs from YouTube and embeds metadata.&lt;/p&gt; 
&lt;p&gt;The &lt;strong&gt;query&lt;/strong&gt; for spotDL is usually a list of Spotify URLs, but for some operations like &lt;strong&gt;sync&lt;/strong&gt;, only a single link or file is required. For a list of all &lt;strong&gt;options&lt;/strong&gt; use &lt;code&gt;spotdl -h&lt;/code&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary style="font-size:1em"&gt;&lt;strong&gt;Supported operations&lt;/strong&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;save&lt;/code&gt;: Saves only the metadata from Spotify without downloading anything.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Usage: &lt;code&gt;spotdl save [query] --save-file {filename}.spotdl&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;web&lt;/code&gt;: Starts a web interface instead of using the command line. However, it has limited features and only supports downloading single songs.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;url&lt;/code&gt;: Get direct download link for each song from the query.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Usage: &lt;code&gt;spotdl url [query]&lt;/code&gt;&lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;sync&lt;/code&gt;: Updates directories. Compares the directory with the current state of the playlist. Newly added songs will be downloaded and removed songs will be deleted. No other songs will be downloaded and no other files will be deleted.&lt;/p&gt; 
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;Usage: &lt;code&gt;spotdl sync [query] --save-file {filename}.spotdl&lt;/code&gt;&lt;/p&gt; &lt;p&gt;This create a new &lt;strong&gt;sync&lt;/strong&gt; file, to update the directory in the future, use:&lt;/p&gt; &lt;p&gt;&lt;code&gt;spotdl sync {filename}.spotdl&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;/ul&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;code&gt;meta&lt;/code&gt;: Updates metadata for the provided song files.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Music Sourcing and Audio Quality&lt;/h2&gt; 
&lt;p&gt;spotDL uses YouTube as a source for music downloads. This method is used to avoid any issues related to downloading music from Spotify.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt; Users are responsible for their actions and potential legal consequences. We do not support unauthorized downloading of copyrighted material and take no responsibility for user actions.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Audio Quality&lt;/h3&gt; 
&lt;p&gt;spotDL downloads music from YouTube and is designed to always download the highest possible bitrate; which is 128 kbps for regular users and 256 kbps for YouTube Music premium users.&lt;/p&gt; 
&lt;p&gt;Check the &lt;a href="https://raw.githubusercontent.com/spotDL/spotify-downloader/master/docs/usage.md#audio-formats-and-quality"&gt;Audio Formats&lt;/a&gt; page for more info.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Interested in contributing? Check out our &lt;a href="https://raw.githubusercontent.com/spotDL/spotify-downloader/master/docs/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to find resources around contributing along with a guide on how to set up a development environment.&lt;/p&gt; 
&lt;h3&gt;Join our amazing community as a code contributor&lt;/h3&gt; 
&lt;a href="https://github.com/spotDL/spotify-downloader/graphs/contributors"&gt; &lt;img class="dark-light" src="https://contrib.rocks/image?repo=spotDL/spotify-downloader&amp;amp;anon=0&amp;amp;columns=25&amp;amp;max=100&amp;amp;r=true" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is Licensed under the &lt;a href="https://raw.githubusercontent.com/spotDL/spotify-downloader/master/LICENSE"&gt;MIT&lt;/a&gt; License.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>HKUDS/DeepCode</title>
      <link>https://github.com/HKUDS/DeepCode</link>
      <description>&lt;p&gt;"DeepCode: Open Agentic Coding (Paper2Code &amp; Text2Web &amp; Text2Backend)"&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;table style="border: none; margin: 0 auto; padding: 0; border-collapse: collapse;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" style="vertical-align: middle; padding: 10px; border: none; width: 250px;"&gt; &lt;img src="https://raw.githubusercontent.com/HKUDS/DeepCode/main/assets/logo.png" alt="DeepCode Logo" width="200" style="margin: 0; padding: 0; display: block;" /&gt; &lt;/td&gt; 
    &lt;td align="left" style="vertical-align: middle; padding: 10px 0 10px 30px; border: none;"&gt; &lt;pre style="font-family: 'Courier New', monospace; font-size: 16px; color: #0EA5E9; margin: 0; padding: 0; text-shadow: 0 0 10px #0EA5E9, 0 0 20px rgba(14,165,233,0.5); line-height: 1.2; transform: skew(-1deg, 0deg); display: block;"&gt;    ██████╗ ███████╗███████╗██████╗  ██████╗ ██████╗ ██████╗ ███████╗
    ██╔══██╗██╔════╝██╔════╝██╔══██╗██╔════╝██╔═══██╗██╔══██╗██╔════╝
    ██║  ██║█████╗  █████╗  ██████╔╝██║     ██║   ██║██║  ██║█████╗
    ██║  ██║██╔══╝  ██╔══╝  ██╔═══╝ ██║     ██║   ██║██║  ██║██╔══╝
    ██████╔╝███████╗███████╗██║     ╚██████╗╚██████╔╝██████╔╝███████╗
    ╚═════╝ ╚══════╝╚══════╝╚═╝      ╚═════╝ ╚═════╝ ╚═════╝ ╚══════╝&lt;/pre&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://trendshift.io/repositories/14665" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14665" alt="HKUDS%2FDeepCode | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; 
 &lt;/div&gt; 
 &lt;!-- &lt;img src="https://readme-typing-svg.herokuapp.com?font=Russo+One&amp;size=28&amp;duration=2000&amp;pause=800&amp;color=06B6D4&amp;background=00000000&amp;center=true&amp;vCenter=true&amp;width=800&amp;height=50&amp;lines=%E2%9A%A1+OPEN+AGENTIC+CODING+%E2%9A%A1" alt="DeepCode Tech Subtitle" style="margin-top: 5px; filter: drop-shadow(0 0 12px #06B6D4) drop-shadow(0 0 24px rgba(6,182,212,0.4));"/&gt; --&gt; 
 &lt;h1&gt;&lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/43c585dca3d21b8e4b6390d835cdd34dc4b4b23d/DeepCode_images/title_logo.svg?sanitize=true" alt="DeepCode Logo" width="32" height="32" style="vertical-align: middle; margin-right: 8px;" /&gt; DeepCode: Open Agentic Coding&lt;/h1&gt; 
 &lt;h3&gt;&lt;em&gt;Advancing Code Generation with Multi-Agent Systems&lt;/em&gt;&lt;/h3&gt; 
 &lt;!-- &lt;p align="center"&gt;
  &lt;img src="https://img.shields.io/badge/Version-1.0.0-00d4ff?style=for-the-badge&amp;logo=rocket&amp;logoColor=white" alt="Version"&gt;

  &lt;img src="https://img.shields.io/badge/License-MIT-4ecdc4?style=for-the-badge&amp;logo=opensourceinitiative&amp;logoColor=white" alt="License"&gt;
  &lt;img src="https://img.shields.io/badge/AI-Multi--Agent-9b59b6?style=for-the-badge&amp;logo=brain&amp;logoColor=white" alt="AI"&gt;
  &lt;img src="https://img.shields.io/badge/HKU-Data_Intelligence_Lab-f39c12?style=for-the-badge&amp;logo=university&amp;logoColor=white" alt="HKU"&gt;
&lt;/p&gt; --&gt; 
 &lt;p&gt; &lt;a href="https://github.com/HKUDS/DeepCode/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/HKUDS/DeepCode?color=00d9ff&amp;amp;style=for-the-badge&amp;amp;logo=star&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/🐍Python-3.13-4ecdc4?style=for-the-badge&amp;amp;logo=python&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt; &lt;a href="https://pypi.org/project/deepcode-hku/"&gt;&lt;img src="https://img.shields.io/pypi/v/deepcode-hku.svg?style=for-the-badge&amp;amp;logo=pypi&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e&amp;amp;color=ff6b6b" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://discord.gg/yF2MmDJyGJ"&gt;&lt;img src="https://img.shields.io/badge/💬Discord-Community-7289da?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS/DeepCode/issues/11"&gt;&lt;img src="https://img.shields.io/badge/💬WeChat-Group-07c160?style=for-the-badge&amp;amp;logo=wechat&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;div align="center"&gt; 
  &lt;div style="width: 100%; height: 2px; margin: 20px 0; background: linear-gradient(90deg, transparent, #00d9ff, transparent);"&gt;&lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div align="center"&gt; 
  &lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start" style="text-decoration: none;"&gt; &lt;img src="https://img.shields.io/badge/Quick%20Start-Get%20Started%20Now-00d9ff?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white&amp;amp;labelColor=1a1a2e" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
 &lt;h3&gt;🖥️ &lt;strong&gt;Interface Showcase&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" width="100%" style="border: none; border-collapse: collapse; margin: 30px 0;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td width="50%" align="center" style="vertical-align: top; padding: 20px;"&gt; &lt;h4&gt;🖥️ &lt;strong&gt;CLI Interface&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Terminal-Based Development&lt;/strong&gt;&lt;/p&gt; 
     &lt;div align="center"&gt; 
      &lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/8882a7313c504ca97ead6e7b36c51aa761b6a4f3/DeepCode_images/CLI.gif" alt="CLI Interface Demo" width="100%" style="border-radius: 10px; box-shadow: 0 8px 20px rgba(45,55,72,0.3); margin: 15px 0;" /&gt; 
      &lt;div style="background: linear-gradient(135deg, #2D3748 0%, #4A5568 100%); border-radius: 12px; padding: 15px; margin: 15px 0; color: white;"&gt; 
       &lt;strong&gt;🚀 Advanced Terminal Experience&lt;/strong&gt;
       &lt;br /&gt; 
       &lt;small&gt;⚡ Fast command-line workflow&lt;br /&gt;🔧 Developer-friendly interface&lt;br /&gt;📊 Real-time progress tracking&lt;/small&gt; 
      &lt;/div&gt; 
      &lt;p&gt;&lt;em&gt;Professional terminal interface for advanced users and CI/CD integration&lt;/em&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td width="50%" align="center" style="vertical-align: top; padding: 20px;"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Web Interface&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Visual Interactive Experience&lt;/strong&gt;&lt;/p&gt; 
     &lt;div align="center"&gt; 
      &lt;img src="https://github.com/Zongwei9888/Experiment_Images/raw/8882a7313c504ca97ead6e7b36c51aa761b6a4f3/DeepCode_images/UI.gif" alt="Web Interface Demo" width="100%" style="border-radius: 10px; box-shadow: 0 8px 20px rgba(14,165,233,0.3); margin: 15px 0;" /&gt; 
      &lt;div style="background: linear-gradient(135deg, #0EA5E9 0%, #00D4FF 100%); border-radius: 12px; padding: 15px; margin: 15px 0; color: white;"&gt; 
       &lt;strong&gt;🎨 Modern Web Dashboard&lt;/strong&gt;
       &lt;br /&gt; 
       &lt;small&gt;🖱️ Intuitive drag-and-drop&lt;br /&gt;📱 Responsive design&lt;br /&gt;🎯 Visual progress tracking&lt;/small&gt; 
      &lt;/div&gt; 
      &lt;p&gt;&lt;em&gt;Beautiful web interface with streamlined workflow for all skill levels&lt;/em&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;hr /&gt; 
 &lt;div align="center"&gt; 
  &lt;h3&gt;🎬 &lt;strong&gt;Introduction Video&lt;/strong&gt;&lt;/h3&gt; 
  &lt;div style="margin: 20px 0;"&gt; 
   &lt;a href="https://youtu.be/PRgmP8pOI08" target="_blank"&gt; &lt;img src="https://img.youtube.com/vi/PRgmP8pOI08/maxresdefault.jpg" alt="DeepCode Introduction Video" width="75%" style="border-radius: 12px; box-shadow: 0 8px 25px rgba(0,0,0,0.15); transition: transform 0.3s ease;" /&gt; &lt;/a&gt; 
  &lt;/div&gt; 
  &lt;p&gt;&lt;em&gt;🎯 &lt;strong&gt;Watch our complete introduction&lt;/strong&gt; - See how DeepCode transforms research papers and natural language into production-ready code&lt;/em&gt;&lt;/p&gt; 
  &lt;p&gt; &lt;a href="https://youtu.be/PRgmP8pOI08" target="_blank"&gt; &lt;img src="https://img.shields.io/badge/▶️_Watch_Video-FF0000?style=for-the-badge&amp;amp;logo=youtube&amp;amp;logoColor=white" alt="Watch Video" /&gt; &lt;/a&gt; &lt;/p&gt; 
 &lt;/div&gt; 
 &lt;hr /&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;&lt;em&gt;"Where AI Agents Transform Ideas into Production-Ready Code"&lt;/em&gt;&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;📑 Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-key-features"&gt;🚀 Key Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#%EF%B8%8F-architecture"&gt;🏗️ Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start"&gt;🚀 Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-examples"&gt;💡 Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-live-demonstrations"&gt;🎬 Live Demonstrations&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-star-history"&gt;⭐ Star History&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-license"&gt;📄 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Key Features&lt;/h2&gt; 
&lt;br /&gt; 
&lt;table align="center" width="100%" style="border: none; table-layout: fixed;"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;🚀 &lt;strong&gt;Paper2Code&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/ALGORITHM-IMPLEMENTATION-ff6b6b?style=for-the-badge&amp;amp;logo=algorithm&amp;amp;logoColor=white" alt="Algorithm Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Implementation of Complex Algorithms&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Effortlessly converts complex algorithms from research papers into &lt;strong&gt;high-quality&lt;/strong&gt;, &lt;strong&gt;production-ready&lt;/strong&gt; code, accelerating algorithm reproduction.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;🎨 &lt;strong&gt;Text2Web&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/FRONTEND-DEVELOPMENT-4ecdc4?style=for-the-badge&amp;amp;logo=react&amp;amp;logoColor=white" alt="Frontend Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Front-End Web Development&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Translates plain textual descriptions into &lt;strong&gt;fully functional&lt;/strong&gt;, &lt;strong&gt;visually appealing&lt;/strong&gt; front-end web code for rapid interface creation.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="30%" align="center" style="vertical-align: top; padding: 20px;"&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;h3 style="margin: 0; padding: 0;"&gt;⚙️ &lt;strong&gt;Text2Backend&lt;/strong&gt;&lt;/h3&gt; 
    &lt;/div&gt; 
    &lt;div align="center" style="margin: 15px 0;"&gt; 
     &lt;img src="https://img.shields.io/badge/BACKEND-DEVELOPMENT-9b59b6?style=for-the-badge&amp;amp;logo=server&amp;amp;logoColor=white" alt="Backend Badge" /&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 80px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;&lt;strong&gt;Automated Back-End Development&lt;/strong&gt;&lt;/p&gt; 
    &lt;/div&gt; 
    &lt;div style="height: 60px; display: flex; align-items: center; justify-content: center;"&gt; 
     &lt;p align="center"&gt;Generates &lt;strong&gt;efficient&lt;/strong&gt;, &lt;strong&gt;scalable&lt;/strong&gt;, and &lt;strong&gt;feature-rich&lt;/strong&gt; back-end code from simple text inputs, streamlining server-side development.&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;br /&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Autonomous Multi-Agent Workflow&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;The Challenges&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;📄 &lt;strong&gt;Implementation Complexity&lt;/strong&gt;: Converting academic papers and complex algorithms into working code requires significant technical effort and domain expertise&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔬 &lt;strong&gt;Research Bottleneck&lt;/strong&gt;: Researchers spend valuable time implementing algorithms instead of focusing on their core research and discovery work&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⏱️ &lt;strong&gt;Development Delays&lt;/strong&gt;: Product teams experience long wait times between concept and testable prototypes, slowing down innovation cycles&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;Repetitive Coding&lt;/strong&gt;: Developers repeatedly implement similar patterns and functionality instead of building on existing solutions&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;DeepCode&lt;/strong&gt; addresses these workflow inefficiencies by providing reliable automation for common development tasks, streamlining your development workflow from concept to code.&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;pre&gt;&lt;code class="language-mermaid"&gt;flowchart LR
    A["📄 Research Papers&amp;lt;br/&amp;gt;💬 Text Prompts&amp;lt;br/&amp;gt;🌐 URLs &amp;amp; Document&amp;lt;br/&amp;gt;📎 Files: PDF, DOC, PPTX, TXT, HTML"] --&amp;gt; B["🧠 DeepCode&amp;lt;br/&amp;gt;Multi-Agent Engine"]
    B --&amp;gt; C["🚀 Algorithm Implementation &amp;lt;br/&amp;gt;🎨 Frontend Development &amp;lt;br/&amp;gt;⚙️ Backend Development"]

    style A fill:#ff6b6b,stroke:#c0392b,stroke-width:2px,color:#000
    style B fill:#00d4ff,stroke:#0984e3,stroke-width:3px,color:#000
    style C fill:#00b894,stroke:#00a085,stroke-width:2px,color:#000
&lt;/code&gt;&lt;/pre&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🏗️ Architecture&lt;/h2&gt; 
&lt;h3&gt;📊 &lt;strong&gt;System Overview&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;DeepCode&lt;/strong&gt; is an AI-powered development platform that automates code generation and implementation tasks. Our multi-agent system handles the complexity of translating requirements into functional, well-structured code, allowing you to focus on innovation rather than implementation details.&lt;/p&gt; 
&lt;p&gt;🎯 &lt;strong&gt;Technical Capabilities&lt;/strong&gt;:&lt;/p&gt; 
&lt;p&gt;🧬 &lt;strong&gt;Research-to-Production Pipeline&lt;/strong&gt;&lt;br /&gt; Multi-modal document analysis engine that extracts algorithmic logic and mathematical models from academic papers. Generates optimized implementations with proper data structures while preserving computational complexity characteristics.&lt;/p&gt; 
&lt;p&gt;🪄 &lt;strong&gt;Natural Language Code Synthesis&lt;/strong&gt;&lt;br /&gt; Context-aware code generation using fine-tuned language models trained on curated code repositories. Maintains architectural consistency across modules while supporting multiple programming languages and frameworks.&lt;/p&gt; 
&lt;p&gt;⚡ &lt;strong&gt;Automated Prototyping Engine&lt;/strong&gt;&lt;br /&gt; Intelligent scaffolding system generating complete application structures including database schemas, API endpoints, and frontend components. Uses dependency analysis to ensure scalable architecture from initial generation.&lt;/p&gt; 
&lt;p&gt;💎 &lt;strong&gt;Quality Assurance Automation&lt;/strong&gt;&lt;br /&gt; Integrated static analysis with automated unit test generation and documentation synthesis. Employs AST analysis for code correctness and property-based testing for comprehensive coverage.&lt;/p&gt; 
&lt;p&gt;🔮 &lt;strong&gt;CodeRAG Integration System&lt;/strong&gt;&lt;br /&gt; Advanced retrieval-augmented generation combining semantic vector embeddings with graph-based dependency analysis. Automatically discovers optimal libraries and implementation patterns from large-scale code corpus.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🔧 &lt;strong&gt;Core Techniques&lt;/strong&gt;&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🧠 &lt;strong&gt;Intelligent Orchestration Agent&lt;/strong&gt;: Central decision-making system that coordinates workflow phases and analyzes requirements. Employs dynamic planning algorithms to adapt execution strategies in real-time based on evolving project complexity. Dynamically selects optimal processing strategies for each implementation step. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;💾 &lt;strong&gt;Efficient Memory Mechanism&lt;/strong&gt;: Advanced context engineering system that manages large-scale code contexts efficiently. Implements hierarchical memory structures with intelligent compression for handling complex codebases. This component enables instant retrieval of implementation patterns and maintains semantic coherence across extended development sessions. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Advanced CodeRAG System&lt;/strong&gt;: Global code comprehension engine that analyzes complex inter-dependencies across repositories. Performs cross-codebase relationship mapping to understand architectural patterns from a holistic perspective. This module leverages dependency graphs and semantic analysis to provide globally-aware code recommendations during implementation.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🤖 &lt;strong&gt;Multi-Agent Architecture of DeepCode&lt;/strong&gt;:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🎯 Central Orchestrating Agent&lt;/strong&gt;: Orchestrates entire workflow execution and makes strategic decisions. Coordinates specialized agents based on input complexity analysis. Implements dynamic task planning and resource allocation algorithms. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📝 Intent Understanding Agent&lt;/strong&gt;: Performs deep semantic analysis of user requirements to decode complex intentions. Extracts functional specifications and technical constraints through advanced NLP processing. Transforms ambiguous human descriptions into precise, actionable development specifications with structured task decomposition. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📄 Document Parsing Agent&lt;/strong&gt;: Processes complex technical documents and research papers with advanced parsing capabilities. Extracts algorithms and methodologies using document understanding models. Converts academic concepts into practical implementation specifications through intelligent content analysis. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🏗️ Code Planning Agent&lt;/strong&gt;: Performs architectural design and technology stack optimization. Dynamic planning for adaptive development roadmaps. Enforces coding standards and generates modular structures through automated design pattern selection.&lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔍 Code Reference Mining Agent&lt;/strong&gt;: Discovers relevant repositories and frameworks through intelligent search algorithms. Analyzes codebases for compatibility and integration potential. Provides recommendations based on similarity metrics and automated dependency analysis. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;📚 Code Indexing Agent&lt;/strong&gt;: Builds comprehensive knowledge graphs of discovered codebases. Maintains semantic relationships between code components. Enables intelligent retrieval and cross-reference capabilities. &lt;br /&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🧬 Code Generation Agent&lt;/strong&gt;: Synthesizes gathered information into executable code implementations. Creates functional interfaces and integrates discovered components. Generates comprehensive test suites and documentation for reproducibility.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h4&gt;🛠️ &lt;strong&gt;Implementation Tools Matrix&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;🔧 Powered by MCP (Model Context Protocol)&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;DeepCode leverages the &lt;strong&gt;Model Context Protocol (MCP)&lt;/strong&gt; standard to seamlessly integrate with various tools and services. This standardized approach ensures reliable communication between AI agents and external systems, enabling powerful automation capabilities.&lt;/p&gt; 
&lt;h5&gt;📡 &lt;strong&gt;MCP Servers &amp;amp; Tools&lt;/strong&gt;&lt;/h5&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🛠️ &lt;strong&gt;MCP Server&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;🔧 &lt;strong&gt;Primary Function&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;💡 &lt;strong&gt;Purpose &amp;amp; Capabilities&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🔍 brave&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web Search Engine&lt;/td&gt; 
   &lt;td&gt;Real-time information retrieval via Brave Search API&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 bocha-mcp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Alternative Search&lt;/td&gt; 
   &lt;td&gt;Secondary search option with independent API access&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📂 filesystem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;File System Operations&lt;/td&gt; 
   &lt;td&gt;Local file and directory management, read/write operations&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🌐 fetch&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Web Content Retrieval&lt;/td&gt; 
   &lt;td&gt;Fetch and extract content from URLs and web resources&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📥 github-downloader&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Repository Management&lt;/td&gt; 
   &lt;td&gt;Clone and download GitHub repositories for analysis&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📋 file-downloader&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Document Processing&lt;/td&gt; 
   &lt;td&gt;Download and convert files (PDF, DOCX, etc.) to Markdown&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚡ command-executor&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;System Commands&lt;/td&gt; 
   &lt;td&gt;Execute bash/shell commands for environment management&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🧬 code-implementation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Code Generation Hub&lt;/td&gt; 
   &lt;td&gt;Comprehensive code reproduction with execution and testing&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📚 code-reference-indexer&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart Code Search&lt;/td&gt; 
   &lt;td&gt;Intelligent indexing and search of code repositories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📄 document-segmentation&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Smart Document Analysis&lt;/td&gt; 
   &lt;td&gt;Intelligent document segmentation for large papers and technical documents&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h5&gt;🔧 &lt;strong&gt;Legacy Tool Functions&lt;/strong&gt; &lt;em&gt;(for reference)&lt;/em&gt;&lt;/h5&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;🛠️ &lt;strong&gt;Function&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;🎯 &lt;strong&gt;Usage Context&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📄 read_code_mem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Efficient code context retrieval from memory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;✍️ write_file&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Direct file content generation and modification&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;🐍 execute_python&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Python code testing and validation&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📁 get_file_structure&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Project structure analysis and organization&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;⚙️ set_workspace&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Dynamic workspace and environment configuration&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;📊 get_operation_history&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Process monitoring and operation tracking&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;🎛️ &lt;strong&gt;Multi-Interface Framework&lt;/strong&gt;&lt;br /&gt; RESTful API with CLI and web frontends featuring real-time code streaming, interactive debugging, and extensible plugin architecture for CI/CD integration.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🚀 Multi-Agent Intelligent Pipeline:&lt;/strong&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;🌟 &lt;strong&gt;Intelligence Processing Flow&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" width="100%" style="border: none; border-collapse: collapse;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 20px; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); border-radius: 15px; color: white; font-weight: bold;"&gt; 💡 &lt;strong&gt;INPUT LAYER&lt;/strong&gt;&lt;br /&gt; 📄 Research Papers • 💬 Natural Language • 🌐 URLs • 📋 Requirements &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="20"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 🎯 &lt;strong&gt;CENTRAL ORCHESTRATION&lt;/strong&gt;&lt;br /&gt; Strategic Decision Making • Workflow Coordination • Agent Management &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #3742fa 0%, #2f3542 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📝 &lt;strong&gt;TEXT ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Requirement Processing&lt;/small&gt; &lt;/td&gt; 
    &lt;td width="10"&gt;&lt;/td&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #8c7ae6 0%, #9c88ff 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📄 &lt;strong&gt;DOCUMENT ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Paper &amp;amp; Spec Processing&lt;/small&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #00d2d3 0%, #54a0ff 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 📋 &lt;strong&gt;REPRODUCTION PLANNING&lt;/strong&gt;&lt;br /&gt; Deep Paper Analysis • Code Requirements Parsing • Reproduction Strategy Development &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #ffa726 0%, #ff7043 100%); border-radius: 10px; color: white; width: 50%;"&gt; 🔍 &lt;strong&gt;REFERENCE ANALYSIS&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Repository Discovery&lt;/small&gt; &lt;/td&gt; 
    &lt;td width="10"&gt;&lt;/td&gt; 
    &lt;td align="center" style="padding: 12px; background: linear-gradient(135deg, #e056fd 0%, #f368e0 100%); border-radius: 10px; color: white; width: 50%;"&gt; 📚 &lt;strong&gt;CODE INDEXING&lt;/strong&gt;&lt;br /&gt; &lt;small&gt;Knowledge Graph Building&lt;/small&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 15px; background: linear-gradient(135deg, #26de81 0%, #20bf6b 100%); border-radius: 12px; color: white; font-weight: bold;"&gt; 🧬 &lt;strong&gt;CODE IMPLEMENTATION&lt;/strong&gt;&lt;br /&gt; Implementation Generation • Testing • Documentation &lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt;
    &lt;td colspan="3" height="15"&gt;&lt;/td&gt;
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td colspan="3" align="center" style="padding: 20px; background: linear-gradient(135deg, #045de9 0%, #09c6f9 100%); border-radius: 15px; color: white; font-weight: bold;"&gt; ⚡ &lt;strong&gt;OUTPUT DELIVERY&lt;/strong&gt;&lt;br /&gt; 📦 Complete Codebase • 🧪 Test Suite • 📚 Documentation • 🚀 Deployment Ready &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;h3&gt;🔄 &lt;strong&gt;Process Intelligence Features&lt;/strong&gt;&lt;/h3&gt; 
 &lt;table align="center" style="border: none;"&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #ff6b6b;"&gt; 
      &lt;h4&gt;🎯 Adaptive Flow&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Dynamic agent selection based on input complexity&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #4ecdc4;"&gt; 
      &lt;h4&gt;🧠 Smart Coordination&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Intelligent task distribution and parallel processing&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #45b7d1;"&gt; 
      &lt;h4&gt;🔍 Context Awareness&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Deep understanding through CodeRAG integration&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
    &lt;td align="center" width="25%" style="padding: 15px;"&gt; 
     &lt;div style="background: #f8f9fa; border-radius: 10px; padding: 15px; border-left: 4px solid #96ceb4;"&gt; 
      &lt;h4&gt;⚡ Quality Assurance&lt;/h4&gt; 
      &lt;p&gt;&lt;small&gt;Automated testing and validation throughout&lt;/small&gt;&lt;/p&gt; 
     &lt;/div&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;h3&gt;📦 &lt;strong&gt;Step 1: Installation&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;⚡ &lt;strong&gt;Direct Installation (Recommended)&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 🚀 Install DeepCode package directly
pip install deepcode-hku

# 🔑 Download configuration files
curl -O https://raw.githubusercontent.com/HKUDS/DeepCode/main/mcp_agent.config.yaml
curl -O https://raw.githubusercontent.com/HKUDS/DeepCode/main/mcp_agent.secrets.yaml

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🔧 &lt;strong&gt;Development Installation (From Source)&lt;/strong&gt;&lt;/h4&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;📂 Click to expand development installation options&lt;/strong&gt;&lt;/summary&gt; 
 &lt;h5&gt;🔥 &lt;strong&gt;Using UV (Recommended for Development)&lt;/strong&gt;&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 🔽 Clone the repository
git clone https://github.com/HKUDS/DeepCode.git
cd DeepCode/

# 📦 Install UV package manager
curl -LsSf https://astral.sh/uv/install.sh | sh

# 🔧 Install dependencies with UV
uv venv --python=3.13
source .venv/bin/activate  # On Windows: .venv\Scripts\activate
uv pip install -r requirements.txt

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h5&gt;🐍 &lt;strong&gt;Using Traditional pip&lt;/strong&gt;&lt;/h5&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# 🔽 Clone the repository
git clone https://github.com/HKUDS/DeepCode.git
cd DeepCode/

# 📦 Install dependencies
pip install -r requirements.txt

# 🔑 Configure API keys (required)
# Edit mcp_agent.secrets.yaml with your API keys and base_url:
# - openai: api_key, base_url (for OpenAI/custom endpoints)
# - anthropic: api_key (for Claude models)

# 🔑 Configure search API keys for web search (optional)
# Edit mcp_agent.config.yaml to set your API keys:
# - For Brave Search: Set BRAVE_API_KEY: "your_key_here" in brave.env section (line ~28)
# - For Bocha-MCP: Set BOCHA_API_KEY: "your_key_here" in bocha-mcp.env section (line ~74)

# 📄 Configure document segmentation (optional)
# Edit mcp_agent.config.yaml to control document processing:
# - enabled: true/false (whether to use intelligent document segmentation)
# - size_threshold_chars: 50000 (document size threshold to trigger segmentation)
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h4&gt;🪟 &lt;strong&gt;Windows Users: Additional MCP Server Configuration&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;If you're using Windows, you may need to configure MCP servers manually in &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 1. Install MCP servers globally
npm i -g @modelcontextprotocol/server-brave-search
npm i -g @modelcontextprotocol/server-filesystem

# 2. Find your global node_modules path
npm -g root
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then update your &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt; to use absolute paths:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;mcp:
  servers:
    brave:
      command: "node"
      args: ["C:/Program Files/nodejs/node_modules/@modelcontextprotocol/server-brave-search/dist/index.js"]
    filesystem:
      command: "node"
      args: ["C:/Program Files/nodejs/node_modules/@modelcontextprotocol/server-filesystem/dist/index.js", "."]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Replace the path with your actual global node_modules path from step 2.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;🔍 &lt;strong&gt;Search Server Configuration (Optional)&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;DeepCode supports multiple search servers for web search functionality. You can configure your preferred option in &lt;code&gt;mcp_agent.config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# Default search server configuration
# Options: "brave" or "bocha-mcp"
default_search_server: "brave"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Available Options:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🔍 Brave Search&lt;/strong&gt; (&lt;code&gt;"brave"&lt;/code&gt;):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Default option with high-quality search results&lt;/li&gt; 
   &lt;li&gt;Requires BRAVE_API_KEY configuration&lt;/li&gt; 
   &lt;li&gt;Recommended for most users&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;🌐 Bocha-MCP&lt;/strong&gt; (&lt;code&gt;"bocha-mcp"&lt;/code&gt;):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Alternative search server option&lt;/li&gt; 
   &lt;li&gt;Requires BOCHA_API_KEY configuration&lt;/li&gt; 
   &lt;li&gt;Uses local Python server implementation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;API Key Configuration in mcp_agent.config.yaml:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;# For Brave Search (default) - around line 28
brave:
  command: "npx"
  args: ["-y", "@modelcontextprotocol/server-brave-search"]
  env:
    BRAVE_API_KEY: "your_brave_api_key_here"

# For Bocha-MCP (alternative) - around line 74
bocha-mcp:
  command: "python"
  args: ["tools/bocha_search_server.py"]
  env:
    PYTHONPATH: "."
    BOCHA_API_KEY: "your_bocha_api_key_here"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;💡 Tip&lt;/strong&gt;: Both search servers require API key configuration. Choose the one that best fits your API access and requirements.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;⚡ &lt;strong&gt;Step 2: Launch Application&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;🚀 &lt;strong&gt;Using Installed Package (Recommended)&lt;/strong&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# 🌐 Launch web interface directly
deepcode

# The application will automatically start at http://localhost:8501
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;🛠️ &lt;strong&gt;Using Source Code&lt;/strong&gt;&lt;/h4&gt; 
&lt;p&gt;Choose your preferred interface:&lt;/p&gt; 
&lt;h5&gt;🌐 &lt;strong&gt;Web Interface&lt;/strong&gt; (Recommended)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using UV
uv run streamlit run ui/streamlit_app.py
# Or using traditional Python
streamlit run ui/streamlit_app.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/badge/Access-localhost:8501-00d4ff?style=flat-square&amp;amp;logo=streamlit&amp;amp;logoColor=white" alt="Web Access" /&gt; 
&lt;/div&gt; 
&lt;h5&gt;🖥️ &lt;strong&gt;CLI Interface&lt;/strong&gt; (Advanced Users)&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using UV
uv run python cli/main_cli.py
# Or using traditional Python
python cli/main_cli.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://img.shields.io/badge/Mode-Interactive_Terminal-9b59b6?style=flat-square&amp;amp;logo=terminal&amp;amp;logoColor=white" alt="CLI Mode" /&gt; 
&lt;/div&gt; 
&lt;h3&gt;🎯 &lt;strong&gt;Step 3: Generate Code&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;📄 Input&lt;/strong&gt;: Upload your research paper, provide requirements, or paste a URL&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;🤖 Processing&lt;/strong&gt;: Watch the multi-agent system analyze and plan&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;⚡ Output&lt;/strong&gt;: Receive production-ready code with tests and documentation&lt;/li&gt; 
&lt;/ol&gt; 
&lt;hr /&gt; 
&lt;h2&gt;💡 Examples&lt;/h2&gt; 
&lt;h3&gt;🎬 &lt;strong&gt;Live Demonstrations&lt;/strong&gt;&lt;/h3&gt; 
&lt;table align="center"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;📄 &lt;strong&gt;Paper2Code Demo&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Research to Implementation&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=MQZYpLkzsbw"&gt; &lt;img src="https://img.youtube.com/vi/MQZYpLkzsbw/maxresdefault.jpg" alt="Paper2Code Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=MQZYpLkzsbw"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Transform academic papers into production-ready code automatically&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;🖼️ &lt;strong&gt;Image Processing Demo&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;AI-Powered Image Tools&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=nFt5mLaMEac"&gt; &lt;img src="https://img.youtube.com/vi/nFt5mLaMEac/maxresdefault.jpg" alt="Image Processing Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=nFt5mLaMEac"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Intelligent image processing with background removal and enhancement&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
   &lt;td width="33%" align="center"&gt; &lt;h4&gt;🌐 &lt;strong&gt;Frontend Implementation&lt;/strong&gt;&lt;/h4&gt; &lt;p&gt;&lt;strong&gt;Complete Web Application&lt;/strong&gt;&lt;/p&gt; 
    &lt;div align="center"&gt; 
     &lt;a href="https://www.youtube.com/watch?v=78wx3dkTaAU"&gt; &lt;img src="https://img.youtube.com/vi/78wx3dkTaAU/maxresdefault.jpg" alt="Frontend Demo" width="100%" style="border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);" /&gt; &lt;/a&gt; 
     &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.youtube.com/watch?v=78wx3dkTaAU"&gt;▶️ Watch Demo&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
     &lt;p&gt;&lt;em&gt;Full-stack web development from concept to deployment&lt;/em&gt;&lt;/p&gt; 
    &lt;/div&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h3&gt;🆕 &lt;strong&gt;Recent Updates&lt;/strong&gt;&lt;/h3&gt; 
&lt;h4&gt;📄 &lt;strong&gt;Smart Document Segmentation (v1.2.0)&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Intelligent Processing&lt;/strong&gt;: Automatically handles large research papers and technical documents that exceed LLM token limits&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable Control&lt;/strong&gt;: Toggle segmentation via configuration with size-based thresholds&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Semantic Analysis&lt;/strong&gt;: Advanced content understanding with algorithm, concept, and formula preservation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Backward Compatibility&lt;/strong&gt;: Seamlessly falls back to traditional processing for smaller documents&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Coming Soon&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;We're continuously enhancing DeepCode with exciting new features:&lt;/p&gt; 
&lt;h4&gt;🔧 &lt;strong&gt;Enhanced Code Reliability &amp;amp; Validation&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Automated Testing&lt;/strong&gt;: Comprehensive functionality testing with execution verification and error detection.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Code Quality Assurance&lt;/strong&gt;: Multi-level validation through static analysis, dynamic testing, and performance benchmarking.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Smart Debugging&lt;/strong&gt;: AI-powered error detection with automatic correction suggestions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;📊 &lt;strong&gt;PaperBench Performance Showcase&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Benchmark Dashboard&lt;/strong&gt;: Comprehensive performance metrics on the PaperBench evaluation suite.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Accuracy Metrics&lt;/strong&gt;: Detailed comparison with state-of-the-art paper reproduction systems.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Success Analytics&lt;/strong&gt;: Statistical analysis across paper categories and complexity levels.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;⚡ &lt;strong&gt;System-wide Optimizations&lt;/strong&gt;&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Performance Boost&lt;/strong&gt;: Multi-threaded processing and optimized agent coordination for faster generation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced Reasoning&lt;/strong&gt;: Advanced reasoning capabilities with improved context understanding.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Expanded Support&lt;/strong&gt;: Extended compatibility with additional programming languages and frameworks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;em&gt;Community Growth Trajectory&lt;/em&gt;&lt;/p&gt; 
 &lt;a href="https://star-history.com/#HKUDS/DeepCode&amp;amp;Date"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date" /&gt; 
   &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=HKUDS/DeepCode&amp;amp;type=Date" style="border-radius: 15px; box-shadow: 0 0 30px rgba(0, 217, 255, 0.3);" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;hr /&gt; 
&lt;h3&gt;🚀 &lt;strong&gt;Ready to Transform Development?&lt;/strong&gt;&lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt; &lt;a href="https://raw.githubusercontent.com/HKUDS/DeepCode/main/#-quick-start"&gt;&lt;img src="https://img.shields.io/badge/🚀_Get_Started-00d4ff?style=for-the-badge&amp;amp;logo=rocket&amp;amp;logoColor=white" alt="Get Started" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS"&gt;&lt;img src="https://img.shields.io/badge/🏛️_View_on_GitHub-00d4ff?style=for-the-badge&amp;amp;logo=github&amp;amp;logoColor=white" alt="View on GitHub" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HKUDS/deepcode-agent"&gt;&lt;img src="https://img.shields.io/badge/⭐_Star_Project-00d4ff?style=for-the-badge&amp;amp;logo=star&amp;amp;logoColor=white" alt="Star Project" /&gt;&lt;/a&gt; &lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;📄 &lt;strong&gt;License&lt;/strong&gt;&lt;/h3&gt; 
 &lt;img src="https://img.shields.io/badge/License-MIT-4ecdc4?style=for-the-badge&amp;amp;logo=opensourceinitiative&amp;amp;logoColor=white" alt="MIT License" /&gt; 
 &lt;p&gt;&lt;strong&gt;MIT License&lt;/strong&gt; - Copyright (c) 2025 Data Intelligence Lab, The University of Hong Kong&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;img src="https://visitor-badge.laobi.icu/badge?page_id=deepcode.readme&amp;amp;style=for-the-badge&amp;amp;color=00d4ff" alt="Visitors" /&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>HunxByts/GhostTrack</title>
      <link>https://github.com/HunxByts/GhostTrack</link>
      <description>&lt;p&gt;Useful tool to track location or mobile number&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GhostTrack&lt;/h1&gt; 
&lt;p&gt;Useful tool to track location or mobile number, so this tool can be called osint or also information gathering&lt;/p&gt; 
&lt;img src="https://github.com/HunxByts/GhostTrack/raw/main/asset/bn.png" /&gt; 
&lt;p&gt;New update : &lt;code&gt;Version 2.2&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Instalation on Linux (deb)&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;sudo apt-get install git
sudo apt-get install python3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Instalation on Termux&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;pkg install git
pkg install python3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage Tool&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/HunxByts/GhostTrack.git
cd GhostTrack
pip3 install -r requirements.txt
python3 GhostTR.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Display on the menu &lt;code&gt;IP Tracker&lt;/code&gt;&lt;/p&gt; 
&lt;img src="https://github.com/HunxByts/GhostTrack/blob/main/asset/ip.png " /&gt; 
&lt;p&gt;on the IP Track menu, you can combo with the seeker tool to get the target IP&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;⚡&lt;/span&gt; Install Seeker :&lt;/summary&gt; - 
 &lt;strong&gt;&lt;a href="https://github.com/thewhiteh4t/seeker"&gt;Get Seeker&lt;/a&gt;&lt;/strong&gt; 
&lt;/details&gt; 
&lt;p&gt;Display on the menu &lt;code&gt;Phone Tracker&lt;/code&gt;&lt;/p&gt; 
&lt;img src="https://github.com/HunxByts/GhostTrack/raw/main/asset/phone.png" /&gt; 
&lt;p&gt;on this menu you can search for information from the target phone number&lt;/p&gt; 
&lt;p&gt;Display on the menu &lt;code&gt;Username Tracker&lt;/code&gt;&lt;/p&gt; 
&lt;img src="https://github.com/HunxByts/GhostTrack/raw/main/asset/User.png" /&gt; on this menu you can search for information from the target username on social media 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;⚡&lt;/span&gt; Author :&lt;/summary&gt; - 
 &lt;strong&gt;&lt;a href="https://github.com/HunxByts"&gt;HunxByts&lt;/a&gt;&lt;/strong&gt; 
&lt;/details&gt;</description>
    </item>
    
    <item>
      <title>rothgar/awesome-tuis</title>
      <link>https://github.com/rothgar/awesome-tuis</link>
      <description>&lt;p&gt;List of projects that provide terminal user interfaces&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/img/banner.png" alt="" /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#dashboards"&gt;Dashboards&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#development"&gt;Development&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#dockerlxck8s"&gt;Docker/Containers/K8s&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#editors"&gt;Editors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#file-managers"&gt;File Managers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#games"&gt;Games&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#libraries"&gt;Libraries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#messaging"&gt;Messaging&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#miscellaneous"&gt;Miscellaneous&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#multimedia"&gt;Multimedia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#productivity"&gt;Productivity&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/rothgar/awesome-tuis/master/#web"&gt;Web&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Dashboards&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lissy93/AdGuardian-Term"&gt;AdGuardian-Term&lt;/a&gt; A TUI dashboard for monitoring real-time traffic from an AdGuard Home instance&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imsnif/bandwhich"&gt;bandwhich&lt;/a&gt; Terminal bandwidth utilization tool&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aristocratos/bashtop"&gt;bashtop&lt;/a&gt; Resource manager written in bash&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/facebookincubator/below"&gt;below&lt;/a&gt; A time traveling resource monitor for modern Linux systems&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orhun/binsider"&gt;binsider&lt;/a&gt; A TUI for analyzing Linux binaries.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tgraf/bmon"&gt;bmon&lt;/a&gt; A monitoring and debugging tool to capture networking related statistics and prepare them visually.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ClementTsang/bottom"&gt;bottom&lt;/a&gt; A customizable graphical process/system monitor for the terminal.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aristocratos/bpytop"&gt;bpytop&lt;/a&gt; A Python-based system monitor with lots of information.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aristocratos/btop"&gt;btop++&lt;/a&gt; Resource monitor with extras&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/cgdb/cgdb"&gt;cgdb&lt;/a&gt; Console front-end to the GNU debugger&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/azat/chdig"&gt;chdig&lt;/a&gt; Dig into ClickHouse with TUI interface&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AnirudhG07/cheatshh"&gt;cheatshh&lt;/a&gt; A fzf TUI for managing custom made command-line cheatsheet for Unix.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/miguelmota/cointop"&gt;cointop&lt;/a&gt; The fastest and most interactive terminal based UI application for tracking cryptocurrencies&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/cyring/CoreFreq"&gt;CoreFreq&lt;/a&gt; CPU monitoring software designed for the 64-bits Processors&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hashicorp/damon"&gt;damon&lt;/a&gt; TUI interface for Hashicorp Nomad&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rasjonell/dashbrew"&gt;dashbrew&lt;/a&gt; TUI dashboard builder that lets you visualize data from scripts and APIs.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/charles-001/dolphie"&gt;dolphie&lt;/a&gt; Your single pane of glass for real-time analytics into MySQL/MariaDB &amp;amp; ProxySQL&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/irishmaestro/fubar"&gt;fubar&lt;/a&gt; Formidable Unix Binary Arsenal &amp;amp; Repository. TUI built for gtfobins power users.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nicolargo/glances"&gt;Glances&lt;/a&gt; Glances an Eye on your system. A top/htop alternative.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/allinurl/goaccess"&gt;Goaccess&lt;/a&gt; GoAccess is a real-time web log analyzer and interactive viewer that runs in a terminal in nix systems or through your browser.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TaKO8Ki/gobang"&gt;gobang&lt;/a&gt; A cross-platform TUI database management tool written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/xxxserxxx/gotop"&gt;gotop&lt;/a&gt; A terminal based graphical activity monitor inspired by gtop and vtop&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orf/gping"&gt;gping&lt;/a&gt; Ping, but with a graph&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/slok/grafterm"&gt;Grafterm&lt;/a&gt; Metrics dashboards on terminal, a Grafana inspired terminal version&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/htop-dev/htop"&gt;htop&lt;/a&gt; Interactive text-mode process viewer for Unix systems. It aims to be a better 'top'&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PierreKieffer/htui"&gt;htui&lt;/a&gt; Heroku Terminal User Interface&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/JuanjoFuchs/hwinfo-tui"&gt;hwinfo-tui&lt;/a&gt; A gping-inspired terminal visualization tool for monitoring real-time hardware sensor data from HWInfo&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sauljabin/kaskade"&gt;kaskade&lt;/a&gt; TUI for kafka, which allows you to interact and consume topics from your terminal in style!&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orhun/kmon"&gt;kmon&lt;/a&gt; Linux Kernel Manager and Activity Monitor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hengyoush/kyanos"&gt;Kyanos&lt;/a&gt; Linux network analysis tool based on eBPF&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vladkens/macmon"&gt;macmon&lt;/a&gt; Sudoless performance monitoring for Apple Silicon processors written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dimonomid/nerdlog"&gt;nerdlog&lt;/a&gt; fast, remote-first, multi-host TUI log viewer&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Chleba/netscanner"&gt;netscanner&lt;/a&gt; Network scanner&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Syllo/nvtop"&gt;nvtop&lt;/a&gt; GPUs process monitoring for AMD, Intel and NVIDIA&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pythops/oryx"&gt;oryx&lt;/a&gt; A TUI for sniffing network traffic using eBPF&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ymtdzzz/otel-tui"&gt;otel-tui&lt;/a&gt; A terminal OpenTelemetry viewer&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mrusme/planor"&gt;Planor&lt;/a&gt; The Cloud Aviator, dashboard for AWS, Vultr, Heroku, ...&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/F1bonacc1/process-compose"&gt;process-compose&lt;/a&gt; TUI for running apps and processes&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/siddhantac/puffin"&gt;Puffin&lt;/a&gt; A beautiful terminal dashboard for hledger&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MasonStooksbury/Raijin"&gt;Raijin&lt;/a&gt; A free, simple weather TUI that pulls data without the need for an API key, account, or subscription&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/amanusk/s-tui"&gt;s-tui&lt;/a&gt; CPU stress and monitoring utility&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jasonwitty/socktop"&gt;sockttop&lt;/a&gt; socktop is a remote system monitor with a rich TUI, inspired by top/btop, talking to a lightweight agent over WebSockets.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joehillen/sysz"&gt;sysz&lt;/a&gt; An fzf terminal UI for systemctl&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/siderolabs/talos"&gt;talos linux&lt;/a&gt; A Linux distro with a TUI dashboard for local and remote usage&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jessfraz/tdash"&gt;tdash&lt;/a&gt; A terminal dashboard with stats from Google Analytics, GitHub, Travis CI, and Jenkins. Very much built specific to me&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pythops/tegratop"&gt;tegratop&lt;/a&gt; Monitoring tool (top like) for Nvidia jetson boards&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gizak/termui"&gt;TermUI&lt;/a&gt; Golang terminal dashboard&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/franckverrot/trek"&gt;trek&lt;/a&gt; ncurses explorer for Hashicorp Nomad clusters&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fujiapple852/trippy"&gt;trippy&lt;/a&gt; A network diagnostic tool that includes functionality like mtr and more&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/inv2004/ttop"&gt;ttop&lt;/a&gt; System monitoring tool with historical data service, triggers and top-like TUI&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/peltho/tufw"&gt;tufw&lt;/a&gt; Terminal UI for ufw&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AbeEstrada/tuicamp"&gt;tuicamp&lt;/a&gt; Unofficial TimeCamp TUI&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/CDWEN0526/tmd-top"&gt;tmd-top&lt;/a&gt; Used to monitor the process tcp traffic of the linux system, detailed to each IP connection&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/robinovitch61/wander"&gt;wander&lt;/a&gt; HashiCorp Nomad terminal client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/senorprogrammer/wtf"&gt;WTF&lt;/a&gt; The personal information dashboard for your terminal.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MAIF/yozefu"&gt;Yozefu&lt;/a&gt; An TUI for exploring data of a kafka cluster.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bvaisvil/zenith"&gt;zenith&lt;/a&gt; In terminal graphical metrics for your *nix system written in Rust&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Development&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dhth/act3"&gt;act3&lt;/a&gt; Glance at the last 3 runs of your Github Actions&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pehlicd/amtui/"&gt;amtui&lt;/a&gt; Alertmanager TUI - Your Terminal Companion for Alertmanager&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Julien-cpsn/ATAC"&gt;ATAC&lt;/a&gt; A feature-full TUI API client made in Rust. ATAC is free, open-source, offline and account-less.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/P403n1x87/austin-tui"&gt;austin-tui&lt;/a&gt; The top-like text-based user interface for Austin&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jart/blink"&gt;blinkenlights&lt;/a&gt; TUI that may be used for debugging x86_64-linux or i8086 programs across platforms&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rubysolo/brows"&gt;brows&lt;/a&gt; CLI GitHub release browser&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/razeghi71/burf"&gt;burf&lt;/a&gt; TUI for Google Cloud Storage (GCS)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tareqimbasher/cargo-seek"&gt;cargo-seek&lt;/a&gt; A TUI for searching, adding and installing cargo crates&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PraveenGongada/catalyst"&gt;catalyst&lt;/a&gt; Elegant TUI for triggering GitHub Actions workflows with matrix configurations.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fipso/cntui"&gt;cnTUI&lt;/a&gt; Replay chrome requests from your terminal using curl&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/felangga/chiko"&gt;chiko&lt;/a&gt; The Ultimate Beauty TUI gRPC Client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/closeio/close-mongo-ops-manager"&gt;Close Mongo Ops Manager&lt;/a&gt; Monitor and kill MongoDB operations&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Maciek-roboblog/Claude-Code-Usage-Monitor"&gt;Cloud Code Usage Monitor&lt;/a&gt; Monitor Claude token usage&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/agvxov/csope"&gt;csope&lt;/a&gt; C source code browser based on cscope&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PThorpe92/CuTE"&gt;CuTE&lt;/a&gt; TUI to help build, execute and save curl commands, recursively download from remote sources, test your API endpoints, and mange your keys&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/charmbracelet/crush"&gt;crush&lt;/a&gt; The glamourous AI coding agent&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/murat-cileli/dbee"&gt;dbee&lt;/a&gt; Fast &amp;amp; Minimalistic Database Browser&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/danvergara/dblab"&gt;dblab&lt;/a&gt; The database client every command line junkie deserves&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/DataDog/ddqa"&gt;ddqa&lt;/a&gt; Jira TUI to help with software releases&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dandavison/delta"&gt;delta&lt;/a&gt; A syntax-highlighting pager for git, diff, and grep output&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thewizardshell/froggit"&gt;Froggit&lt;/a&gt; Minimalist Git TUI with GitHub CLI integration&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/joouha/euporie"&gt;euporie&lt;/a&gt; Jupyter notebooks in the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/antonmedv/fx"&gt;fx&lt;/a&gt; Terminal JSON viewer &amp;amp; processor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bmf-san/ggc"&gt;ggc&lt;/a&gt; A terminal-based Git CLI tool written in Go&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/extrawurst/gitui"&gt;gitui&lt;/a&gt; blazing fast terminal-ui for git written in rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andrewshadura/git-crecord"&gt;git-crecord&lt;/a&gt; interactive selective commit tool&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rgburke/grv"&gt;grv&lt;/a&gt; Terminal interface for viewing git repositories&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tconbeer/harlequin"&gt;harlequin&lt;/a&gt; The SQL IDE for Your Terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/noahgorstein/jqp"&gt;jqp&lt;/a&gt; A TUI playground to experiment with jq&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazygit"&gt;lazygit&lt;/a&gt; Simple terminal UI for git commands&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jorgerojas26/lazysql"&gt;lazysql&lt;/a&gt; A cross-platform TUI database management tool written in Go.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Lifailon/lazyjournal"&gt;lazyjournal&lt;/a&gt; TUI for journalctl, file system logs, as well Docker and Podman containers for quick viewing and filtering&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ugosan/logshark"&gt;logshark&lt;/a&gt; A debugger CLI for JSON logs written in Go&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.mitmproxy.org"&gt;mitmproxy&lt;/a&gt; A free and open source interactive HTTPS proxy&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maaslalani/nap"&gt;nap&lt;/a&gt; Code snippets in your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonaburg/nodebro"&gt;nodebro&lt;/a&gt; Easily view most recent Github releases/tags and release notes from the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sst/opencode"&gt;opencode&lt;/a&gt; AI coding agent, built for the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/paololazzari/play"&gt;play&lt;/a&gt; A TUI playground to experiment with your favorite programs, such as grep, sed, awk, jq and yq&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/darrenburns/posting"&gt;posting&lt;/a&gt; A powerful HTTP client that lives in your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Oloruntobi1/pproftui"&gt;pproftui&lt;/a&gt; A terminal-based UI for Go's pprof that makes profiling interactive&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://proxymock.io"&gt;proxymock&lt;/a&gt; A network recorder that shows API payloads in a TUI and automatically generates tests and mocks from what it observes.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dhth/prs"&gt;prs&lt;/a&gt; Stay updated on PRs without leaving the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/inducer/pudb"&gt;pudb&lt;/a&gt; A console-based visual debugger for Python&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jwlodek/pyautogit"&gt;pyautogit&lt;/a&gt; A terminal UI for managing git repositories, written using py_cui&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/achristmascarl/rainfrog"&gt;rainfrog&lt;/a&gt; A database management TUI for Postgres, MySQL, and SQLite written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/stateful/runme"&gt;runme&lt;/a&gt; Discover and run code snippets directly from your README.md or other markdowns&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Theodo-UK/sls-dev-tools"&gt;sls-dev-tools&lt;/a&gt; Dev Tools for the Serverless World&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lusingander/stu"&gt;stu&lt;/a&gt; A TUI for Amazon S3&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mathaou/termdbms"&gt;termdbms&lt;/a&gt; A TUI for viewing and editing database files.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/idoavrah/terraform-tui"&gt;terraform-tui&lt;/a&gt; view and interact with Terraform state&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jinek/ToolUI"&gt;toolui&lt;/a&gt; Dotnet core application to manage installed nuget tools&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/zdyxry/tokui"&gt;tokui&lt;/a&gt; An interactive TUI for visualizing code statistics from tokei.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/charmbracelet/soft-serve"&gt;soft-serve&lt;/a&gt; A tasty, self-hostable Git server for the command lineicecream&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jonas/tig"&gt;tig&lt;/a&gt; Text-mode interface for git&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thebsdbox/vctui"&gt;vctui&lt;/a&gt; Console interface for vCenter&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/braheezy/violet"&gt;violet&lt;/a&gt; Colorful TUI frontend to run Vagrant commands&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Docker/LXC/K8s&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bcicen/ctop"&gt;ctop&lt;/a&gt; Top-like interface for container metrics&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/wagoodman/dive"&gt;dive&lt;/a&gt; A tool for exploring each layer in a docker image&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lirantal/dockly"&gt;dockly&lt;/a&gt; Immersive terminal interface for managing docker containers and services&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/moncho/dry"&gt;dry&lt;/a&gt; A Docker manager for the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/robertpsoane/ducker"&gt;ducker&lt;/a&gt; A slightly quackers Docker TUI based on k9s&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/keidarcy/e1s"&gt;e1s&lt;/a&gt; TUI for managing AWS ECS resources&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/awslabs/eks-node-viewer/"&gt;eks-node-viewer&lt;/a&gt; visualizing dynamic node usage within a kubernetes cluster&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/derailed/k9s"&gt;k9s&lt;/a&gt; TUI for managing a Kubernetes cluster&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kdash-rs/kdash"&gt;kdash&lt;/a&gt; A simple and fast dashboard for Kubernetes&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hcavarsan/kftray"&gt;kftui&lt;/a&gt; - A TUI to manage multiple kubectl port-forward commands, with support for UDP and K8s proxy.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vladimirvivien/ktop"&gt;ktop&lt;/a&gt; A top-like tool for your Kubernetes clusters&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sarub0b0/kubetui"&gt;kubetui&lt;/a&gt; A TUI tool designed for monitoring Kubernetes resources.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andreybleme/lazycontainer"&gt;lazycontainer&lt;/a&gt; TUI for managing Apple containers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker"&gt;lazydocker&lt;/a&gt; The lazier way to manage everything docker&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mrjackwills/oxker"&gt;oxker&lt;/a&gt; A simple tui to view &amp;amp; control docker containers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pommee/Pocker"&gt;Pocker&lt;/a&gt; TUI based application for docker related tasks.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/containers/podman-tui"&gt;Podman-tui&lt;/a&gt; TUI for Podman containers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TomasTomecek/sen"&gt;sen&lt;/a&gt; Terminal User Interface for docker engine&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Editors&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jmacdonald/amp"&gt;amp&lt;/a&gt; A complete text editor for your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/velorek1/c-edit"&gt;C-Edit&lt;/a&gt; A text editor with drop down menus in the style of MS-DOS Editor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/cmang/durdraw"&gt;Durdraw&lt;/a&gt; An ASCII, Unicode and ANSI art editor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/microsoft/edit"&gt;Edit&lt;/a&gt; A simple text editor. Pays homage to the classic MS-DOS Editor.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://helix-editor.com/"&gt;helix&lt;/a&gt; A post-modern text editor.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Textualize/frogmouth"&gt;frogmouth&lt;/a&gt; A Markdown browser for your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="http://kakoune.org/"&gt;kakoune&lt;/a&gt; A modern, modal text editor with focus on interactivity and efficiency&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://sr.ht/~bscit/maki/"&gt;maki&lt;/a&gt; A simple tabbed text editor with file navigation and an emphasis on preserving battery life&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/zyedidia/micro"&gt;micro&lt;/a&gt; A modern and intuitive terminal-based text editor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/xyproto/orbiton"&gt;orbiton&lt;/a&gt; Text editor limited by VT100, suitable for programming, writing git commit messages and editing Markdown&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/slap-editor/slap"&gt;slap&lt;/a&gt; Sublime-like terminal-based text editor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gphalkes/tilde"&gt;tilde&lt;/a&gt; Intuitive text editor for the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/blademd/thymus"&gt;thymus&lt;/a&gt; An interactive browser &amp;amp; editor for network configuration files.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/magiblot/turbo"&gt;turbo&lt;/a&gt; An experimental text editor for the terminal, based on Scintilla and Turbo Vision&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/martanne/vis"&gt;vis&lt;/a&gt; A vi-like editor based on Plan 9's structural regular expressions&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/zee-editor/zee"&gt;zee&lt;/a&gt; A modern text editor for the terminal written in Rust&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;File Managers&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/darkhz/adbtuifm"&gt;adbtuifm&lt;/a&gt; A TUI file manager for Android, based on the Android Debug Bridge(ADB).&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Canop/broot"&gt;broot&lt;/a&gt; A new way to see and navigate directory trees&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/elfmz/far2l"&gt;far2l&lt;/a&gt; Linux port of Far v2 file manager&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/wick3dr0se/fml"&gt;fml&lt;/a&gt; &lt;span&gt;📁&lt;/span&gt; A stupid simple, fast file manager written in BASH v4.2+.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/anmitsu/goful"&gt;goful&lt;/a&gt; a powerful TUI file manager written in Go.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gokcehan/lf"&gt;lf&lt;/a&gt; A terminal file manager written in Go with heavy inspiration from ranger file manager.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MidnightCommander/mc"&gt;mc&lt;/a&gt; GNU Midnight Commander. A free cross-platform orthodox file manager.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jarun/nnn"&gt;nnn&lt;/a&gt; n³ The unorthodox terminal file manager.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://codeberg.org/ItsZariep/ntc"&gt;ntc&lt;/a&gt; Ncurses Tabbed file Chooser.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ranger/ranger"&gt;ranger&lt;/a&gt; A VIM-inspired file manager for the console.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/afify/sfm"&gt;sfm&lt;/a&gt; Simple file manager.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MHNightCat/superfile"&gt;superfile&lt;/a&gt; Pretty fancy and modern terminal file manager.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/GiorgosXou/TUIFIManager"&gt;TUIFIManager&lt;/a&gt; A cross-platform terminal-based file manager &lt;em&gt;(supports termux)&lt;/em&gt;.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vifm/vifm"&gt;Vifm&lt;/a&gt; A TUI file manager with vi-keybindings and other vim like behaviour.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sxyazi/yazi"&gt;yazi&lt;/a&gt; Blazing fast terminal file manager written in Rust, based on async I/O.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Games&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tiehuis/2048-cli"&gt;2048-cli&lt;/a&gt; The game 2048 for your Linux terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/TheMozg/awk-raycaster"&gt;awkaster&lt;/a&gt; Pseudo-3D shooter written completely in gawk using raycasting technique&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Passeriform/BalatroTUI"&gt;balatrotui&lt;/a&gt; A TUI clone of Balatro&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fph/bastet"&gt;bastet&lt;/a&gt; Evil falling block game&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jifunks/botany/"&gt;botany&lt;/a&gt; Virtual plant buddy&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ilyakurdyukov/brickgame-4bit"&gt;brickgame-4bit&lt;/a&gt; Brick Game emulator (4-bit Holtek chip)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tmewett/BrogueCE"&gt;BrogueCE&lt;/a&gt; Beautiful roguelike dungeon crawler&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://gitlab.com/jallbrit/cbonsai"&gt;cbonsai&lt;/a&gt; A bonsai tree generator&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thomas-mauran/chess-tui"&gt;chess-tui&lt;/a&gt; Play Chess in your terminal, built in rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ajeetdsouza/clidle"&gt;clidle&lt;/a&gt; Play Wordle in your terminal. Also works over SSH!&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nielssp/csol"&gt;csol&lt;/a&gt; Collection of solitaire/patience games, such as Klondike, FreeCell, Spider, and Yukon&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/wojciech-graj/doom-ascii"&gt;DOOM-ASCII&lt;/a&gt; Text-based DOOM running in terminal.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gabrielrcouto/php-terminal-gameboy-emulator"&gt;Gameboy Emulator&lt;/a&gt; A PHP Terminal GameBoy Emulator&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sachaos/go-life"&gt;go-life&lt;/a&gt; Terminal based Conway's Game of Life&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://gitlab.com/esr/greed"&gt;Greed&lt;/a&gt; A game of consumption. Eat as much as you can before munching yourself into a corner!&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/L4z3x/mal-tui"&gt;MAL-Cli&lt;/a&gt; A terminal interface for the official myanimelist api written in rust.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/agl-alexglopez/maze-tui"&gt;Maze TUI&lt;/a&gt; Build mazes and solve them with various algorithms.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/troglobit/snake"&gt;Micro Snake&lt;/a&gt; A small snake game, utilizing ANSI escape sequences to draw the board.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/troglobit/tetris"&gt;Micro Tetris&lt;/a&gt; One of the smallest Tetris implementations in the world, utilizing only ANSI escape sequences to draw the board.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/seehuhn/moon-buggy"&gt;moon-buggy&lt;/a&gt; Drive some car across the moon&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://sourceforge.net/projects/myman/"&gt;MyMan&lt;/a&gt; MyMan is a video game for color and monochrome text terminals in the genre of Namco's Pac-Man&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/billyvinning/nchess"&gt;nchess&lt;/a&gt; Chess in the terminal, written in C.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NetHack/NetHack"&gt;NetHack&lt;/a&gt; Dungeon exploration game&lt;/li&gt; 
  &lt;li&gt;&lt;a href="http://ninvaders.sourceforge.net/"&gt;nInvaders&lt;/a&gt; Space Invaders&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/alexdantas/nSnake"&gt;nSnake&lt;/a&gt; The classic snake game with textual interface&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jubalh/nudoku"&gt;nudoku&lt;/a&gt; ncurses based sudoku game&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vyalovvldmr/onx"&gt;onx&lt;/a&gt; Noughts &amp;amp; Crosses client-server game with your partner. Based on textual and python.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/lxgr-linux/pokete"&gt;pokete&lt;/a&gt; A terminal based Pokemon like game&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ricott1/rebels-in-the-sky"&gt;Rebels in the sky&lt;/a&gt; P2P terminal game about spacepirates playing basketball across the galaxy.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/wick3dr0se/snake"&gt;snake&lt;/a&gt; &lt;span&gt;🎮&lt;/span&gt; A super minimal TUI snake game written in pure BASH v5.1+&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/learnbyexample/TUI-apps/tree/main/SquareTicTacToe"&gt;Square Tic Tac Toe&lt;/a&gt; Like Tic Tac Toe, but form a square with 4 corners instead of a line&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ricott1/sshattrick"&gt;ssHattrick&lt;/a&gt; Play Hattrick in your terminal over SSH.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/zachlatta/sshtron"&gt;sshtron&lt;/a&gt; multiplayer lightcycle game that runs through SSH&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AngelJumbo/sssnake"&gt;sssnake&lt;/a&gt; The classic snake game for the terminal that can play itself and be used like a screensaver.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dmadisetti/steam-tui"&gt;steam-tui&lt;/a&gt; Just a simple TUI client for steamcmd. Allows for the graphical launching, updating, and downloading of steam games through a simple terminal client.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MitchelPaulin/sudoku-rs"&gt;sudoku-rs&lt;/a&gt; Sudoku built with tui-rs&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/igor47/sweeper"&gt;sweeper&lt;/a&gt; Minesweeper game using curtsies&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://gitlab.com/dustyweb/terminal-phase"&gt;terminal-phase&lt;/a&gt; Space shooter game that runs in your terminal!&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/taylorconor/tinytetris"&gt;tinytetris&lt;/a&gt; 80x23 terminal tetris!&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mpereira/tty-solitaire"&gt;tty-solitaire&lt;/a&gt; Solitaire runs in your terminal!&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AnirudhG07/Typeinc"&gt;typeinc&lt;/a&gt; ncurses based typing speed test with various difficulty levels.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/akgondber/typing-game-cli"&gt;typing-game-cli&lt;/a&gt; Command line game to practice your typing speed by competing against typer-robot or against your best result&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://codeberg.org/kedlubnowski/wocogo"&gt;wocogo&lt;/a&gt; Construct words from a list of given segments. A simple TUI game in Python, similar to the NY Times Combinations game.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/m-dango/raku-wordle/"&gt;Wordle&lt;/a&gt; Script and library for Wordle, written in Raku&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ringtailsoftware/zigtris"&gt;Zigtris&lt;/a&gt; YA terminal tetris&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ringtailsoftware/zoridor"&gt;Zoridor&lt;/a&gt; Play Quoridor in the terminal&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Libraries&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/oerg866/anbui"&gt;AnbUI&lt;/a&gt; A minimal Text UI Library in &lt;strong&gt;C&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/koloideal/Argenta"&gt;Argenta&lt;/a&gt; Library for building modular applications &lt;strong&gt;Python&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tjunruh/ASCII_Board_Game_Engine"&gt;ASCII_Board_Game_Engine&lt;/a&gt; A graphics engine for making board games in &lt;strong&gt;C++&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/colinta/Ashen"&gt;Ashen&lt;/a&gt; An Elm inspired framework written in &lt;strong&gt;Swift&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chjj/blessed"&gt;blessed&lt;/a&gt; A high-level terminal interface library for &lt;strong&gt;Node.js&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jquast/blessed"&gt;blessed&lt;/a&gt; Blessed is an easy, practical library for making &lt;strong&gt;Python&lt;/strong&gt; terminal apps&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/erikrose/blessings"&gt;blessings&lt;/a&gt; A &lt;strong&gt;Python&lt;/strong&gt; wrapper lib for ncurses that makes your code pretty to look at&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/charmbracelet/bubbletea"&gt;bubbletea&lt;/a&gt; A &lt;strong&gt;Go&lt;/strong&gt; framework based on Elm to build functional and stateful TUI apps, complete with extensions known as &lt;a href="https://github.com/charmbracelet/bubbles"&gt;bubbles&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/saccharineboi/CursedGL"&gt;CursedGL&lt;/a&gt; A &lt;strong&gt;C&lt;/strong&gt; notcurses-based software rasterizer inspired by OpenGL 1.X that renders directly to the terminal.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jinek/Consolonia"&gt;Consolonia&lt;/a&gt; Dotnet core terminal-based GUI framework with support of XAML&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gansm/finalcut"&gt;FINAL CUT&lt;/a&gt; &lt;strong&gt;C++&lt;/strong&gt; library for creating terminal applications with text-based widgets&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ArthurSonzogni/FTXUI"&gt;FTXUI&lt;/a&gt; 💻 &lt;strong&gt;C++&lt;/strong&gt; Functional Terminal User Interface. ❤️&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jroimartin/gocui"&gt;gocui&lt;/a&gt; Minimalist &lt;strong&gt;Go&lt;/strong&gt; package aimed at creating Console User Interfaces&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/migueldeicaza/gui.cs"&gt;gui.cs&lt;/a&gt; Console-based user interface toolkit for &lt;strong&gt;.NET&lt;/strong&gt; applications&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/charmbracelet/gum"&gt;gum&lt;/a&gt; A tool for glamorous &lt;strong&gt;shell&lt;/strong&gt; scripts&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ggerganov/imtui"&gt;imtui&lt;/a&gt; An immediate mode text-based user interface &lt;strong&gt;C++&lt;/strong&gt; library, supporting 256 ANSI colors and mouse/keyboard input.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/vadimdemedes/ink"&gt;ink&lt;/a&gt; React for &lt;strong&gt;Node.js&lt;/strong&gt; interactive command-line apps&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ccbrown/iocraft"&gt;iocraft&lt;/a&gt; &lt;strong&gt;Rust&lt;/strong&gt; crate for beautiful, artisanally crafted TUIs and text-based IO, with a declarative, React-like API inspired by Ink.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mabe02/lanterna"&gt;Lanterna&lt;/a&gt; A &lt;strong&gt;Java&lt;/strong&gt; library for creating text-based UIs, very similar to the C library curses but with more functionality.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://moulti.run/"&gt;moulti&lt;/a&gt; A CLI-driven TUI displaying arbitrary outputs inside visual, collapsible blocks. Designed with &lt;strong&gt;shell&lt;/strong&gt; scripts in mind. &lt;strong&gt;Ansible&lt;/strong&gt;-friendly too.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://invisible-island.net/ncurses/announce.html"&gt;ncurses&lt;/a&gt; A classic &lt;strong&gt;C&lt;/strong&gt; library with bindings for many languages&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ansiwave/nimwave"&gt;nimwave&lt;/a&gt; Build text interfaces for the terminal or browser in &lt;strong&gt;Nim&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dankamongmen/notcurses"&gt;notcurses&lt;/a&gt; blingful character graphics/TUI library for &lt;strong&gt;C&lt;/strong&gt; and &lt;strong&gt;Python&lt;/strong&gt;. definitely not curses.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/php-tui/php-tui"&gt;php-tui&lt;/a&gt; comprehensive TUI library for &lt;strong&gt;PHP&lt;/strong&gt; based heavily on Ratatui.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pterm/pterm/"&gt;pterm&lt;/a&gt; A modern &lt;strong&gt;Go&lt;/strong&gt; module to beautify console output. Featuring charts, progressbars, tables, trees, and much more! It's completely configurable and 100% cross-platform compatible.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jwlodek/py_cui"&gt;py_cui&lt;/a&gt; &lt;strong&gt;Python&lt;/strong&gt; library aimed at making widget based TUI/CUI interfaces as simple as possible. Supports standard widgets and popups like menus, textboxes, forms, file explorers etc.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/bczsalba/pytermgui"&gt;pytermgui&lt;/a&gt; A simple yet powerful TUI framework for your &lt;strong&gt;Python&lt;/strong&gt; (3.7+) applications.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ceccopierangiolieugenio/pyTermTk"&gt;pyTermTk&lt;/a&gt; self-contained TUI library for &lt;strong&gt;Python&lt;/strong&gt; with a QT-like API semantics&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/prompt-toolkit/python-prompt-toolkit"&gt;Python Prompt Toolkit&lt;/a&gt; Library for building powerful interactive command line applications in &lt;strong&gt;Python&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/agauniyal/rang"&gt;rang&lt;/a&gt; A Minimal, Header only Modern &lt;strong&gt;C++&lt;/strong&gt; library for terminal goodies&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tui-rs-revival/ratatui"&gt;Ratatui&lt;/a&gt; A &lt;strong&gt;Rust&lt;/strong&gt; crate for building Terminal UIs (actively maintained fork of tui-rs).&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/willmcgugan/rich"&gt;Rich&lt;/a&gt; is a &lt;strong&gt;Python&lt;/strong&gt; library for rich text and beautiful formatting in the terminal.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/76creates/stickers"&gt;stickers&lt;/a&gt; Building blocks for charmbracelet/lipgloss in &lt;strong&gt;Go&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gdamore/tcell"&gt;tcell&lt;/a&gt; Tcell is an alternate &lt;strong&gt;Go&lt;/strong&gt; terminal package, similar in some ways to termbox, but better in others.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/termbox/termbox2"&gt;termbox2&lt;/a&gt; A terminal rendering library for creating TUIs.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/willmcgugan/textual"&gt;textual&lt;/a&gt; is a TUI (Text User Interface) framework for &lt;strong&gt;Python&lt;/strong&gt; inspired by modern web development.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/thermage/thermage"&gt;Thermage&lt;/a&gt; Thermage is a &lt;strong&gt;PHP&lt;/strong&gt; library that provides a fluent and incredibly powerful, object-oriented interface for customizing CLI output text color, background, formatting, theming and more.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/wojciech-graj/TermGL"&gt;TermGL&lt;/a&gt; A terminal-based graphics library for 2D and 3D graphics.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/agauniyal/termdb"&gt;termdb&lt;/a&gt; Terminfo parser for modern &lt;strong&gt;C++&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sayanarijit/tui-input"&gt;tui-input&lt;/a&gt; TUI input library supporting multiple backends, tui-rs and ratatui&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/marcusolsson/tui-go"&gt;tui-go&lt;/a&gt; A &lt;strong&gt;Go&lt;/strong&gt; UI library for terminal applications (deprecated)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fdehau/tui-rs"&gt;tui-rs&lt;/a&gt; Terminal user interfaces and dashboards using &lt;strong&gt;Rust&lt;/strong&gt; (no longer maintained, use Ratatui instead).&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Cubified/tuibox"&gt;tuibox&lt;/a&gt; A single-header &lt;strong&gt;C&lt;/strong&gt; terminal UI library, capable of creating mouse-driven, interactive applications on the command line.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tuiwidgets/tuiwidgets"&gt;Tui Widgets&lt;/a&gt; A high-level widget based toolkit for terminal applications.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rivo/tview/"&gt;tview&lt;/a&gt; Terminal UI library with rich, interactive widgets — written in &lt;strong&gt;Go&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/magiblot/tvision"&gt;tvision&lt;/a&gt; A modern port of &lt;strong&gt;C++&lt;/strong&gt; Turbo Vision 2.0, cross-platform and Unicode support.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/unicurses/unicurses"&gt;UniCurses&lt;/a&gt; A &lt;strong&gt;Python&lt;/strong&gt; module that is aimed at providing the Curses functionality on all operating systems.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/urwid/urwid"&gt;urwid&lt;/a&gt; A console user interface library for &lt;strong&gt;Python&lt;/strong&gt; on Linux, OSX, Cygwin or other unix-like OS.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/libuv/libuv"&gt;libuv&lt;/a&gt; Cross-platform asynchronous I/O library - written in &lt;strong&gt;C&lt;/strong&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/skypjack/uvw"&gt;uvw&lt;/a&gt; Header-only, event based, tiny and easy to use libuv wrapper in modern &lt;strong&gt;C++&lt;/strong&gt; - now available as also shared/static library!&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gammasoft71/xtd"&gt;xtd&lt;/a&gt; Free open-source modern &lt;strong&gt;C++&lt;/strong&gt; framework to create console (CLI), forms (GUI like WinForms) and unit test (xUnit) applications and libraries on Windows, macOS, Linux, iOS, Android, FreeBSD, and Haiku.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Messaging&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Lommix/blitzdenk"&gt;blitzdenk&lt;/a&gt; A minimal multi api auto-context project chat bot as tui&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/quackduck/devzat"&gt;Devzat&lt;/a&gt; Chat over SSH, written in Golang with self-hosting ability.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ayntgl/discordo"&gt;discordo&lt;/a&gt; A lightweight, secure, and feature-rich Discord terminal client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mzivic7/endcord"&gt;endcord&lt;/a&gt; Feature rich Discord TUI client.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mrusme/gomphotherium"&gt;Gomphotherium&lt;/a&gt; A command line Mastodon client.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tulir/gomuks"&gt;gomuks&lt;/a&gt; Matrix client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/boxdot/gurk-rs"&gt;gurk-rs&lt;/a&gt; Signal Messenger client for terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/supreme-gg-gg/instagram-cli"&gt;instagram-cli&lt;/a&gt; Use Instagram from your terminal, the end of brainrot is here&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://irssi.org/"&gt;irssi&lt;/a&gt; An IRC terminal client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kimusan/mastui"&gt;mastui&lt;/a&gt; Mastodon TUI&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/matterhorn-chat/matterhorn"&gt;matterhorn&lt;/a&gt; A Mattermost terminal client.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://mcabber.com/"&gt;mcabber&lt;/a&gt; XMPP (Jabber) client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://meli.delivery/"&gt;meli&lt;/a&gt; Email client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://gitlab.com/muttmua/mutt"&gt;Mutt&lt;/a&gt; Email client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/d99kris/nchat"&gt;nchat&lt;/a&gt; Telegram/WhatsApp client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/markqvist/NomadNet"&gt;nomadnet&lt;/a&gt; Secure messaging network built on Reticulum&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/akiomik/nostui"&gt;nostui&lt;/a&gt; Nostr client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/adamm-xyz/nostratui"&gt;nostratui&lt;/a&gt; A terminal user interface (TUI) for browsing Nostr posts, written in Rust.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://profanity-im.github.io"&gt;Profanity&lt;/a&gt; XMPP (Jabber) client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/haskellcamargo/sclack"&gt;sclack&lt;/a&gt; Slack terminal client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/isamert/scli/"&gt;scli&lt;/a&gt; A simple terminal user interface for signal messenger&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/derricw/siggo"&gt;siggo&lt;/a&gt; A terminal ui for signal-cli, written in Go&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/erroneousboat/slack-term"&gt;Slack-term&lt;/a&gt; Slack client for your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sup-heliotrope/sup"&gt;sup&lt;/a&gt; A curses threads-with-tags style email client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mrusme/superhighway84"&gt;Superhighway84&lt;/a&gt; USENET-inspired decentralized internet discussion system&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/FedericoBruzzone/tgt"&gt;tgt&lt;/a&gt; A TUI for Telegram written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ihabunek/toot"&gt;toot&lt;/a&gt; Mastodon CLI &amp;amp; TUI&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sugyan/tuisky"&gt;tuisky&lt;/a&gt; TUI client for BlueSky&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pythops/tuix"&gt;tuix&lt;/a&gt; TUI for managing screens&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/RasmusLindroth/tut"&gt;tut&lt;/a&gt; Mastodon TUI client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Xithrius/twitch-tui"&gt;twitch-tui&lt;/a&gt; Twitch chat in the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://weechat.org/"&gt;Weechat&lt;/a&gt; Extensible chat client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/zulip/zulip-terminal"&gt;zulip-terminal&lt;/a&gt; Official Zulip terminal client (similar to matterhorn)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Miscellaneous&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/reportaman/arttime"&gt;arttime&lt;/a&gt; An app that brings beauty of text-art together with functionality of clock, timer, and pattern-based time manager.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dewberryants/asciiMol"&gt;asciiMol&lt;/a&gt; Curses based ASCII molecule viewer for linux terminals.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/darkhz/bluetuith"&gt;bluetuith&lt;/a&gt; A TUI-based bluetooth connection manager, which can interact with bluetooth adapters and devices.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pythops/bluetui"&gt;bluetui&lt;/a&gt; A TUI for managing bluetooth devices.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ifd3f/caligula"&gt;Caligula&lt;/a&gt; A user-friendly, lightweight TUI for imaging disks.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NikolaDucak/caps-log"&gt;Captain's log&lt;/a&gt; A small TUI journaling tool&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/karlstav/cava"&gt;cava&lt;/a&gt; Cross-platform Audio Visualizer&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/util-linux/util-linux"&gt;cfdisk&lt;/a&gt; TUI partition editor included in util-linux&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://www.rodsbooks.com/gdisk/cgdisk-walkthrough.html"&gt;cgdisk&lt;/a&gt; TUI partition editor for manipulating GUID partition tables, and modeled after cfdisk&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/YS-L/csvlens"&gt;csvlens&lt;/a&gt; TUI CSV file viewer. It is like less but made for CSV.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/actuday6418/Diary"&gt;diary&lt;/a&gt; A diary app written in Rust that encrypts both text and file data, and can decrypt and build a rich HTML representation of your diary when required.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/SeanMcLoughlin/digisurf"&gt;DigiSurf&lt;/a&gt; A TUI signal waveform viewer&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/imsnif/diskonaut"&gt;diskonaut&lt;/a&gt; Terminal disk space navigator&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hyperreal64/distrobox-tui"&gt;distrobox-tui&lt;/a&gt; TUI for managing distrobox containers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aws/amazon-ec2-instance-selector"&gt;ec2-instance-selector&lt;/a&gt; A CLI tool and go library which recommends instance types based on resource criteria like vcpus and memory&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dmsc/emu2"&gt;emu2&lt;/a&gt; A simple DOS emulator for the Linux text console, supporting basic DOS system calls and console I/O.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orhun/flawz"&gt;flawz&lt;/a&gt; A Terminal UI for browsing security vulnerabilities (CVEs)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/leo-arch/fnf"&gt;fnf&lt;/a&gt; An interactive fuzzy finder for the terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt; A general-purpose command-line fuzzy finder&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dundee/gdu"&gt;gdu&lt;/a&gt; Fast disk usage analyzer with console interface written in Go&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/google/gif-for-cli"&gt;gif-for-cli&lt;/a&gt; Convert a gif into ASCII&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Macmod/godap"&gt;godap&lt;/a&gt; A complete TUI for LDAP written in Golang&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/orhun/gpg-tui"&gt;gpg-tui&lt;/a&gt; A terminal user interface for GnuPG&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/koenvervloesem/humble-explorer"&gt;HumBLE Explorer&lt;/a&gt; A cross-platform, command-line and human-friendly Bluetooth Low Energy scanner&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/iconicFonts/iconic-fonts"&gt;IconicFonts&lt;/a&gt; A collection of patched fonts featuring over 60,000 icons, tailored specifically for TUIs.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pythops/impala"&gt;impala&lt;/a&gt; TUI for managing wifi&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://gitlab.com/thom-cameron/isw"&gt;isw&lt;/a&gt; A simple terminal stopwatch application for pomodoro etc.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://jrnl.sh/"&gt;jrnl&lt;/a&gt; Collect your thoughts and notes without leaving the command line. human-friendly. future-proof. secure.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/learnbyexample/TUI-apps"&gt;LearnByExample&lt;/a&gt; A TUI with tutorials and +300 exercises on python, grep, awk, sed &amp;amp; general terminal usage.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://lnav.org/"&gt;lnav&lt;/a&gt; An advanced log file viewer for the small-scale&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rastapasta/mapscii"&gt;mapscii&lt;/a&gt; Braille &amp;amp; ASCII world map renderer for your console&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/EdJoPaTo/mqttui"&gt;mqttui&lt;/a&gt; MQTT Client written in rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://moc.daper.net/download"&gt;moc&lt;/a&gt; console audio player&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PabloLec/neoss"&gt;neoss&lt;/a&gt; Socket statistics visualization and explanation tool for Unix systems.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://developer.gnome.org/NetworkManager/stable/nmtui.html"&gt;nmtui&lt;/a&gt; ncurses network manager&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hatoo/oha"&gt;oha&lt;/a&gt; HTTP load generator&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ddddddO/packemon"&gt;packemon&lt;/a&gt; Packet generator and monitor.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/HeyItsGilbert/PesterExplorer"&gt;PesterExplorer&lt;/a&gt; A TUI to explore Pester results.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Sethispr/pola"&gt;pola&lt;/a&gt; A TUI for efficiently searching skins, checking values and finding owners in Silent Assassin.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/leg100/pug"&gt;pug&lt;/a&gt; terraform and tofu module and infrastructure management.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/profanity-im/profanity"&gt;profanity&lt;/a&gt; A cross-platfrom XMPP client.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ClaudioRMalvino/physics_TUI"&gt;physics-TUI&lt;/a&gt; Physics TUI application for undergraduate study&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://dev.yorhel.nl/ncdu"&gt;ncdu&lt;/a&gt; disk usage analyzer with an ncurses interface&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nemuTUI/nemu"&gt;nemu&lt;/a&gt; A TUI for QEMU&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PabloLec/recoverpy"&gt;recoverpy&lt;/a&gt; A TUI to recover overwritten or deleted data.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gerstner-hub/rocket.term"&gt;rocket.term&lt;/a&gt; Text based chat client for the Rocket.chat messaging solution.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AdamWHY2K/steam_friends_list_tui"&gt;steam_friends_list_tui&lt;/a&gt; The steam friends list in the commandline&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sachaos/tcpterm"&gt;tcpterm&lt;/a&gt; tcpterm is a packet visualizer in TUI.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ben-n93/tab-pal"&gt;tab-pal&lt;/a&gt; Add and edit custom colour palettes in Tableau from the command-line.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/velorek1/terminalperiodictable"&gt;terminalperiodictable&lt;/a&gt; A beautiful TUI periodic table for Unix systems coded in C.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gcla/termshark"&gt;termshark&lt;/a&gt; Terminal UI for tshark&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/coloradocolby/thokr"&gt;thokr&lt;/a&gt; a sleek typing tui written in rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eklairs/tlock"&gt;tlock&lt;/a&gt; Two-Factor Authentication Tokens Manager in Terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Levizor/tray-tui"&gt;tray-tui&lt;/a&gt; System tray in your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/max-niederman/ttyper"&gt;ttyper&lt;/a&gt; Terminal-based typing test&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Gcat101/tui-shop"&gt;tui-shop&lt;/a&gt; Something between a CLI and a GUI way of downloading TUIs/CLIs&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MertGunduz/wb"&gt;wb&lt;/a&gt; A TUI vocabulary notebook app for Linux based devices.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/schachmat/wego"&gt;wego&lt;/a&gt; Weather app&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/uoaerg/wavemon"&gt;wavemon&lt;/a&gt; A wireless device monitoring application&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andrianbdn/wg-cmd"&gt;WG Commander&lt;/a&gt; A TUI for a simple WireGuard VPN setup: peer management, QR codes, setup wizard.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chubin/wttr.in"&gt;wttr.in&lt;/a&gt; The right way to check the weather&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sayanarijit/xplr"&gt;xplr&lt;/a&gt; A hackable, minimal, fast TUI file explorer, stealing ideas from nnn and fzf.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/x-cmd/x-cmd"&gt;x-cmd&lt;/a&gt; A vast and interesting collection of tools that can then bootstrap lots of other programs / functions in a consistent and structured way.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Multimedia&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://github.com/chaosprint/asak"&gt;asak&lt;/a&gt; A cross-platform audio recording/playback TUI.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://hpjansson.org/chafa/"&gt;chafa&lt;/a&gt; A powerful utility that converts image data, including animated GIFs, into graphics formats or ANSI/Unicode character art suitable for display in a terminal.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/knosmos/cmdpxl"&gt;cmdpxl&lt;/a&gt; Totally practical command-line image editor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://cmus.github.io/"&gt;cmus&lt;/a&gt; A small, fast and powerful console music player for Unix-like operating systems.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/An7ar35/ctune"&gt;ctune&lt;/a&gt; ncurses based internet radio player for Linux.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maaslalani/draw"&gt;draw&lt;/a&gt; A simple drawing tool in the terminal.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/freref/fancy-cat"&gt;fancy-cat&lt;/a&gt; A Lightweight terminal-based PDF reader with Vim keybindings&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/xyproto/favicon-editor"&gt;favicon-editor&lt;/a&gt; Spartan grayscale favicon editor&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rareitems/gadacz"&gt;gadacz&lt;/a&gt; Audiobook player&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/krishnassh/gophertube"&gt;GopherTube&lt;/a&gt; A terminal-based YouTube client that scrapes YouTube search results and uses mpv for video playback&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jgalat/image-sorter"&gt;image-sorter&lt;/a&gt; Terminal user interface for sorting images using key bindings written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/darkhz/invidtui"&gt;invidtui&lt;/a&gt; A TUI Invidious client for Windows, Linux and MacOS, that fetches and plays audio/video from an invidious instance. Supports viewing and playing from playlists and channels as well.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dhonus/jellyfin-tui"&gt;jellyfin-tui&lt;/a&gt; Jellyfin client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ravachol/kew"&gt;kew&lt;/a&gt; A terminal music player for Linux&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pd3v/line"&gt;line&lt;/a&gt; Tiny command-line midi sequencer and language for live coding&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/L4z3x/mal-cli"&gt;mal-cli&lt;/a&gt; A TUI for myanimelist api.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Dark-Alex-17/managarr"&gt;managarr&lt;/a&gt; A TUI and CLI for managing your *arr servers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/josueBarretogit/manga-tui"&gt;manga-tui&lt;/a&gt; Terminal-based manga reader and downloader with image rendering support&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/schooldanlp6/marstui-rustio"&gt;marstui-audio&lt;/a&gt; A nice audio management Interface, similar to pavucontrol with the benefit of customizing everything&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mps-youtube/mps-youtube"&gt;mps-youtube&lt;/a&gt; Terminal based YouTube player and downloader&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/gmt4/mpvc"&gt;mpvc&lt;/a&gt; A mpc-like control interface for mpv&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://nap.sourceforge.net/"&gt;nap&lt;/a&gt; Linux napster client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hrkfdn/ncspot"&gt;ncspot&lt;/a&gt; Cross-platform ncurses Spotify client written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/coderholic/pyradio"&gt;pyradio&lt;/a&gt; TUI web radio player with thousands of stations from around the world&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Zi0P4tch0/RadioGoGo"&gt;RadioGoGo&lt;/a&gt; Go-powered CLI to surf global radio waves via a sleek TUI.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/winsbe01/roku-cli"&gt;roku-cli&lt;/a&gt; A command line TUI remote for Roku&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://mierak.github.io/rmpc/"&gt;rmpc&lt;/a&gt; A configurable MPD client inspired by ncmpcpp and ranger with album art support via various graphics protocols.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/dancnb/sonicradio"&gt;sonicradio&lt;/a&gt; A stylish TUI radio player making use of Radio Browser API and Bubbletea.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/grobie/soundcloud2000"&gt;soundcloud2000&lt;/a&gt; A terminal client for soundcloud&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aome510/spotify-player"&gt;spotify-player&lt;/a&gt; A Spotify player in the terminal with full feature parity&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ceuk/spotui"&gt;spotui&lt;/a&gt; Spotify client written in Python&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jooooscha/terminal-yt"&gt;terminal-yt&lt;/a&gt; A small newsboat-inspired terminal youtube manager&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tramhao/termusic"&gt;termusic&lt;/a&gt; Music Player TUI written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/1j01/textual-paint"&gt;textual-paint&lt;/a&gt; MS Paint in your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/hzeller/timg"&gt;timg&lt;/a&gt; A terminal image viewer&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tizonia/tizonia-openmax-il"&gt;tizonia-openmax-il&lt;/a&gt; Command-line cloud music player for Linux with support for Spotify, Google Play Music, YouTube, SoundCloud, Dirble, Plex servers and Chromecast devices&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/AlbanDAVID/Toutui"&gt;Toutui&lt;/a&gt; A TUI Audiobookshelf Client for Linux&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/eliasdorneles/upiano"&gt;upiano&lt;/a&gt; A Piano in your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/videolan/vlc"&gt;vlc&lt;/a&gt; VLC includes an ncurses interface, &lt;code&gt;vlc --intf ncurses&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/sudipghimire533/ytui-music"&gt;ytui-music&lt;/a&gt; Listen to music from youtube. Configurable, minimal, lightweight, private &amp;amp; beautiful music client.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/darky/ytdl-tui"&gt;ytdl-tui&lt;/a&gt; TUI for downloading Youtube videos&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pystardust/ytfzf"&gt;ytfzf&lt;/a&gt; A POSIX script that helps you find Youtube videos (without API) or Peertube videos and opens/downloads them using mpv/youtube-dl&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/wolfpld/vv"&gt;vv&lt;/a&gt; A terminal image viewer, supporting an extensive range of modern image formats&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Productivity&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://abook.sourceforge.io/"&gt;abook&lt;/a&gt; TUI addressbook with &lt;a href="http://www.mutt.org/"&gt;mutt&lt;/a&gt; integration&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/EnhancedJax/Bagels"&gt;Bagels&lt;/a&gt; TUI expense tracker&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/anufrievroman/calcure"&gt;calcure&lt;/a&gt; Modern TUI calendar and task manager with minimal and customizable UI.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://calcurse.org/"&gt;calcurse&lt;/a&gt; calendar and scheduling application for the command line&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/savedra1/clipse"&gt;clipse&lt;/a&gt; TUI-based clipboard manager application&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/martanne/dvtm"&gt;dvtm&lt;/a&gt; A terminal multiplexer with dwm like window management&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/darrenburns/elia"&gt;elia&lt;/a&gt; A terminal ChatGPT client build with Textual&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mk-5/fjira"&gt;fjira&lt;/a&gt; TUI application for Atlassian Jira&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/charmbracelet/glow"&gt;Glow&lt;/a&gt; A markdown reader, designed from the ground up to showcase the elegance and capabilities of TUI.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Achno/gocheat"&gt;gocheat&lt;/a&gt; A beautiful TUI cheatsheet for keybindings,hotkeys,gestures and aliases&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/simonmichael/hledger"&gt;hledger-ui&lt;/a&gt; A fast TUI for browsing double entry bookkeeping data&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nadrad/h-m-m"&gt;h-m-m&lt;/a&gt; Hackers Mind Map&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mwinters0/hnjobs"&gt;hnjobs&lt;/a&gt; Find your next job on Who's Hiring&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kruserr/hygg"&gt;hygg&lt;/a&gt; 📚 Simplifying the way you read. Minimalistic Vim-like TUI document reader.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/PlankCipher/kabmat"&gt;kabmat&lt;/a&gt; TUI program for managing kanban boards with vim-like keybindings&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Zaloog/kanban-python"&gt;kanban-python&lt;/a&gt; Kanban Terminal App written in Python&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pimutils/khal"&gt;khal&lt;/a&gt; A standards based CLI calendar program, able to synchronize with CalDAV servers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/RauliL/levite"&gt;levite&lt;/a&gt; A TUI spreadsheet application that uses an RPN formulas and features a vi-friendly interface&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/cantino/mcfly"&gt;mcfly&lt;/a&gt; Intelligent context-aware search engine for your shell history&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/GianlucaP106/mynav"&gt;mynav&lt;/a&gt; Workspace and session management for terminal environments&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Lifailon/multranslate"&gt;multranslate&lt;/a&gt; A TUI for translating text in multiple translators simultaneously, with support for translation history and language detection&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Mk555/pagerduty-tui"&gt;pagerduty-tui&lt;/a&gt; Minimalistic terminal UI to manage triggered incidents&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jaspervdj/patat"&gt;patat&lt;/a&gt; Terminal-based presentations using Pandoc&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/manipuladordedados/pdiary"&gt;pdiary&lt;/a&gt; A simple terminal diary journal application written in Python with encryption support&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/wick3dr0se/pkm"&gt;pkm&lt;/a&gt; A super minimal TUI package manager wrapper written in BASH v4.2+&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/MarkusZoppelt/portfolio_rs"&gt;portfolio_rs&lt;/a&gt; A command line tool for managing financial investment portfolios.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/nikoladucak/pream-team/"&gt;pream-team&lt;/a&gt; a TUI utility that helps you keep track of your teams GitHub PRs across multiple repositories&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mfontanini/presenterm"&gt;presenterm&lt;/a&gt; A markdown terminal slideshow tool&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/napisani/procmux"&gt;procmux&lt;/a&gt; - a TUI for running multiple commands in parallel in easily switchable terminals&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/h-sifat/productivity-timer"&gt;productivity-timer&lt;/a&gt; A command line time tracker application with a sleek TUI.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/andmarti1424/sc-im"&gt;sc-im&lt;/a&gt; An ncurses spreadsheet program for terminal. Reignited version of sc&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/zaphar/sheetsui"&gt;SheetsUI&lt;/a&gt; A console based spreadsheet application&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/maaslalani/slides"&gt;slides&lt;/a&gt; A terminal based presentation tool, supporting markdown syntax.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ivantsepp/ssh-slides"&gt;ssh-slides&lt;/a&gt; Terminal-based presentations over SSH&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/shshemi/tabiew"&gt;Tabiew&lt;/a&gt; A lightweight app to view and query tabular data files, such as CSV, TSV, and parquet.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/perryrh0dan/taskline"&gt;taskline&lt;/a&gt; Tasks, boards &amp;amp; notes for the command-line habitat&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/kdheepak/taskwarrior-tui"&gt;taskwarrior-tui&lt;/a&gt; A Terminal User Interface for Taskwarrior&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/alexpasmantier/television"&gt;television&lt;/a&gt; A fast and versatile fuzzy finder TUI&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pythops/tenere"&gt;tenere&lt;/a&gt; A TUI for ChatGPT written in Rust.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/veeso/termscp"&gt;termscp&lt;/a&gt; A TUI file transfer and explorer, with support for SCP/SFTP/FTP/S3.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tmux/tmux"&gt;tmux&lt;/a&gt; Terminal multiplexer&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/pimutils/todoman"&gt;todoman&lt;/a&gt; A simple, standards-based (ics, DAV), cli task-manager&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/topydo/topydo"&gt;topydo&lt;/a&gt; A powerful todo list application using the todo.txt format&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tenox7/ttyplot"&gt;ttyplot&lt;/a&gt; A realtime plotting utility for terminals with data input from stdin/pipe.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/NicoDblc/TUI_ProjectManager"&gt;TUI_ProjectManager&lt;/a&gt; A simple project-based todo list written in Rust&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mebitek/tui-deck"&gt;tui-deck&lt;/a&gt; A TUI frontend for Nextcloud Deck app written in GO&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Chleba/tui-slides"&gt;tui-slides&lt;/a&gt; A terminal presentation tool capable of rendering images and many other widgets.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ashis0013/tuihub"&gt;tuihub&lt;/a&gt; A utility hub/dashboard for personal use&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/magiblot/tvterm"&gt;tvterm&lt;/a&gt; A terminal emulator that runs in your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/saulpw/visidata"&gt;Visidata&lt;/a&gt; A terminal spreadsheet multitool for discovering and arranging data&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/zellij-org/zellij"&gt;zellij&lt;/a&gt; A terminal workspace with batteries included&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mrusme/zeit"&gt;zeit&lt;/a&gt; A command line tool for tracking time spent on activities.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/SourcewareLab/Toney"&gt;Toney&lt;/a&gt; a fast, lightweight, terminal-based note-taking app for the modern developer.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;details open&gt;
 &lt;summary&gt;&lt;h2&gt;Web&lt;/h2&gt;&lt;/summary&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://bombadillo.colorfield.space/"&gt;bombadillo&lt;/a&gt; A TUI browser for the non-web: Gopher, Gemini, Finger&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/browsh-org/browsh"&gt;browsh&lt;/a&gt; A fully-modern text-based browser, rendering to TTY and browsers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/mrusme/canard"&gt;Canard&lt;/a&gt; A command line TUI client for the &lt;a href="https://github.com/mrusme/journalist"&gt;Journalist&lt;/a&gt; RSS aggregator.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/fathyb/carbonyl"&gt;carbonyl&lt;/a&gt; Chromium running inside your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/xgi/castero"&gt;castero&lt;/a&gt; A TUI app to listen to podcast&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/jimbob88/CatenaVetus"&gt;CatenaVetus&lt;/a&gt; A TUI for reading the Church Fathers&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rkd77/elinks"&gt;elinks&lt;/a&gt; ELinks (HTTP/FTP/..) brower with mujs javascript support.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/aome510/hackernews-TUI"&gt;hackernews-TUI&lt;/a&gt; A Terminal UI to browse Hacker News&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/donnemartin/haxor-news"&gt;haxor-news&lt;/a&gt; Browse Hacker News like a haxor: A Hacker News command line interface (CLI)&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://lynx.invisible-island.net/"&gt;LYNX&lt;/a&gt; A text based Terminal browser&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/newsboat/newsboat"&gt;newsboat&lt;/a&gt; An RSS/Atom feed reader for the text console&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Beastwick18/nyaa"&gt;nyaa&lt;/a&gt; A nyaa.si TUI for browsing and downloading torrents&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Rolv-Apneseth/omaro"&gt;omaro&lt;/a&gt; TUI to browse posts and comments on lobste.rs&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ozan2003/rfc_reader"&gt;rfc_reader&lt;/a&gt; A tool to read RFCs (Request for Comments) with a TUI, allowing you to fetch, cache, and browse RFC documents.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/rakshasa/rtorrent"&gt;rtorrent&lt;/a&gt; A text-based BitTorrent client written in C++&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://gitlab.com/BlackEdder/rttt"&gt;rttt&lt;/a&gt; A Hackernews, RSS and Reddit reader for the terminal written in C++.&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/LucasPickering/slumber"&gt;Slumber&lt;/a&gt; Terminal-based HTTP/REST client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ezeoleaf/tblogs"&gt;tblogs&lt;/a&gt; Read and browse development blogs from your terminal&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/Textualize/textual-web"&gt;textual-web&lt;/a&gt; Run TUIs and terminals in your browser&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/ryota-ka/twterm"&gt;twterm&lt;/a&gt; A full-featured TUI Twitter client&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://github.com/tats/w3m"&gt;w3m&lt;/a&gt; A text-mode WWW browser&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;hr /&gt; 
&lt;/details&gt; 
&lt;p&gt;There's a crazy amount of TUI projects out there, and we can't list them all (though we try!)&lt;/p&gt; 
&lt;p&gt;For more, see awesome-opensource's &lt;a href="https://awesomeopensource.com/projects/tui"&gt;TUI Projects&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;Looking for lightweight but not necessarily TUI? check out mayfrost's &lt;a href="https://github.com/mayfrost/guides/raw/master/ALTERNATIVES.md"&gt;alternatives list&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Enjoy Vim keybinds and don't want to learn new ones? check out the &lt;a href="https://vim.reversed.top"&gt;Big Pile of Vim-like&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;First-hand reviews for a lot of these tools and many, many more at k.mandla's &lt;a href="https://inconsolation.wordpress.com/index/"&gt;Inconsolation blog&lt;/a&gt;. The site also has a "surprise me with a random tool" link!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>plait-board/drawnix</title>
      <link>https://github.com/plait-board/drawnix</link>
      <description>&lt;p&gt;开源白板工具（SaaS），一体化白板，包含思维导图、流程图、自由画等。All in one open-source whiteboard tool with mind, flowchart, freehand and etc.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; 
 &lt;picture style="width: 320px"&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/plait-board/drawnix/blob/develop/apps/web/public/logo/logo_drawnix_h.svg?raw=true" /&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/plait-board/drawnix/blob/develop/apps/web/public/logo/logo_drawnix_h_dark.svg?raw=true" /&gt; 
  &lt;img src="https://github.com/plait-board/drawnix/raw/develop/apps/web/public/logo/logo_drawnix_h.svg?raw=true" width="360" alt="Drawnix logo and name" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h2&gt; 开源白板工具（SaaS），一体化白板，包含思维导图、流程图、自由画等 &lt;br /&gt; &lt;/h2&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;figure&gt; 
  &lt;a target="_blank" rel="noopener"&gt; &lt;img src="https://github.com/plait-board/drawnix/raw/develop/apps/web/public/product_showcase/case-2.png" alt="Product showcase" width="80%" /&gt; &lt;/a&gt; 
  &lt;figcaption&gt; 
   &lt;p align="center"&gt; All in one 白板，思维导图、流程图、自由画等 &lt;/p&gt; 
  &lt;/figcaption&gt; 
 &lt;/figure&gt; 
 &lt;a href="https://hellogithub.com/repository/plait-board/drawnix" target="_blank"&gt; 
  &lt;picture style="width: 250"&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=4dcea807fab7468a962c153b07ae4e4e&amp;amp;claim_uid=zmFSY5k8EuZri43&amp;amp;theme=neutral" /&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=4dcea807fab7468a962c153b07ae4e4e&amp;amp;claim_uid=zmFSY5k8EuZri43&amp;amp;theme=dark" /&gt; 
   &lt;img src="https://abroad.hellogithub.com/v1/widgets/recommend.svg?rid=4dcea807fab7468a962c153b07ae4e4e&amp;amp;claim_uid=zmFSY5k8EuZri43&amp;amp;theme=neutral" alt="Featured｜HelloGitHub" style="width: 250px; height: 54px;" width="250" height="54" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13979" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13979" alt="plait-board%2Fdrawnix | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;a href="https://github.com/plait-board/drawnix/raw/develop/README_en.md"&gt;&lt;em&gt;English README&lt;/em&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;特性&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;💯&amp;nbsp;免费 + 开源&lt;/li&gt; 
 &lt;li&gt;⚒️&amp;nbsp;思维导图、流程图&lt;/li&gt; 
 &lt;li&gt;🖌 画笔&lt;/li&gt; 
 &lt;li&gt;😀 插入图片&lt;/li&gt; 
 &lt;li&gt;🚀 基于插件机制&lt;/li&gt; 
 &lt;li&gt;🖼️ 📃 导出为 PNG, JSON(&lt;code&gt;.drawnix&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;💾 自动保存（浏览器缓存）&lt;/li&gt; 
 &lt;li&gt;⚡ 编辑特性：撤销、重做、复制、粘贴等&lt;/li&gt; 
 &lt;li&gt;🌌 无限画布：缩放、滚动&lt;/li&gt; 
 &lt;li&gt;🎨 主题模式&lt;/li&gt; 
 &lt;li&gt;📱 移动设备适配&lt;/li&gt; 
 &lt;li&gt;📈 支持 mermaid 语法转流程图&lt;/li&gt; 
 &lt;li&gt;✨ 支持 markdown 文本转思维导图（新支持 🔥🔥🔥）&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;关于名称&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Drawnix&lt;/strong&gt;&lt;/em&gt; ，源于绘画( &lt;em&gt;&lt;strong&gt;Draw&lt;/strong&gt;&lt;/em&gt; )与凤凰( &lt;em&gt;&lt;strong&gt;Phoenix&lt;/strong&gt;&lt;/em&gt; )的灵感交织。&lt;/p&gt; 
&lt;p&gt;凤凰象征着生生不息的创造力，而 &lt;em&gt;Draw&lt;/em&gt; 代表着人类最原始的表达方式。在这里，每一次创作都是一次艺术的涅槃，每一笔绘画都是灵感的重生。&lt;/p&gt; 
&lt;p&gt;创意如同凤凰，浴火方能重生，而 &lt;em&gt;&lt;strong&gt;Drawnix&lt;/strong&gt;&lt;/em&gt; 要做技术与创意之火的守护者。&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Draw Beyond, Rise Above.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;与 Plait 画图框架&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;Drawnix&lt;/em&gt; 的定位是一个开箱即用、开源、免费的工具产品，它的底层是 &lt;em&gt;Plait&lt;/em&gt; 框架，&lt;em&gt;Plait&lt;/em&gt; 是我司开源的一款画图框架，代表着公司在知识库产品上的重要技术沉淀。&lt;/p&gt; 
&lt;p&gt;Drawnix 是插件架构，与前面说到开源工具比技术架构更复杂一些，但是插件架构也有优势，比如能够支持多种 UI 框架（&lt;em&gt;Angular、React&lt;/em&gt;），能够集成不同富文本框架（当前仅支持 &lt;em&gt;Slate&lt;/em&gt; 框架），在开发上可以很好的实现业务的分层，开发各种细粒度的可复用插件，可以扩展更多的画板的应用场景。&lt;/p&gt; 
&lt;h2&gt;仓储结构&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;drawnix/
├── apps/
│   ├── web                   # drawnix.com
│   │    └── index.html       # HTML
├── dist/                     # 构建产物
├── packages/
│   └── drawnix/              # 白板应用
│   └── react-board/          # 白板 React 视图层
│   └── react-text/           # 文本渲染模块
├── package.json
├── ...
└── README.md
└── README_en.md

&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;应用&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://drawnix.com"&gt;&lt;em&gt;https://drawnix.com&lt;/em&gt;&lt;/a&gt; 是 &lt;em&gt;drawnix&lt;/em&gt; 的最小化应用。&lt;/p&gt; 
&lt;p&gt;近期会高频迭代 drawnix.com，直到发布 &lt;em&gt;Dawn（破晓）&lt;/em&gt; 版本。&lt;/p&gt; 
&lt;h2&gt;开发&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;npm install

npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;docker pull pubuzhixing/drawnix:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;依赖&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/worktile/plait"&gt;plait&lt;/a&gt; - 画图框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ianstormtaylor/slate"&gt;slate&lt;/a&gt; - 富文本编辑器框架&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/floating-ui/floating-ui"&gt;floating-ui&lt;/a&gt; - 一个超级好用的创建弹出层基础库&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;贡献&lt;/h2&gt; 
&lt;p&gt;欢迎任何形式的贡献：&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;提 Bug&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;贡献代码&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;支持&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;欢迎大家 star ⭐️⭐️⭐️ 支持。&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/plait-board/drawnix/raw/master/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>winapps-org/winapps</title>
      <link>https://github.com/winapps-org/winapps</link>
      <description>&lt;p&gt;Run Windows apps such as Microsoft Office/Adobe in Linux (Ubuntu/Fedora) and GNOME/KDE as if they were a part of the native OS, including Nautilus integration. Hard fork of https://github.com/Fmstrat/winapps/&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt;&lt;img align="center" width="700" src="https://raw.githubusercontent.com/winapps-org/winapps/main/icons/banner_dark.svg#gh-dark-mode-only" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;img align="center" width="700" src="https://raw.githubusercontent.com/winapps-org/winapps/main/icons/banner_light.svg#gh-light-mode-only" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Run Windows applications (including &lt;a href="https://www.microsoft365.com/"&gt;Microsoft 365&lt;/a&gt; and &lt;a href="https://www.adobe.com/creativecloud.html"&gt;Adobe Creative Cloud&lt;/a&gt;) on GNU/Linux with &lt;code&gt;KDE Plasma&lt;/code&gt;, &lt;code&gt;GNOME&lt;/code&gt; or &lt;code&gt;XFCE&lt;/code&gt;, integrated seamlessly as if they were native to the OS.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/demo/demo.png" width="1000" alt="WinApps Demonstration." /&gt;&lt;/p&gt; 
&lt;h2&gt;Underlying Mechanism&lt;/h2&gt; 
&lt;p&gt;WinApps works by:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Running Windows in a &lt;code&gt;Docker&lt;/code&gt;, &lt;code&gt;Podman&lt;/code&gt; or &lt;code&gt;libvirt&lt;/code&gt; virtual machine.&lt;/li&gt; 
 &lt;li&gt;Querying Windows for all installed applications.&lt;/li&gt; 
 &lt;li&gt;Creating shortcuts to selected Windows applications on the host GNU/Linux OS.&lt;/li&gt; 
 &lt;li&gt;Using &lt;a href="https://www.freerdp.com/"&gt;&lt;code&gt;FreeRDP&lt;/code&gt;&lt;/a&gt; as a backend to seamlessly render Windows applications alongside GNU/Linux applications.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Additional Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;The GNU/Linux &lt;code&gt;/home&lt;/code&gt; directory is accessible within Windows via the &lt;code&gt;\\tsclient\home&lt;/code&gt; mount.&lt;/li&gt; 
 &lt;li&gt;Integration with &lt;code&gt;Nautilus&lt;/code&gt;, allowing you to right-click files to open them with specific Windows applications based on the file MIME type.&lt;/li&gt; 
 &lt;li&gt;The &lt;a href="https://github.com/winapps-org/WinApps-Launcher"&gt;official taskbar widget&lt;/a&gt; enables seamless administration of the Windows subsystem and offers an easy way to launch Windows applications.&lt;/li&gt; 
 &lt;li&gt;Microsoft Office links (e.g. ms-word://) from the host system are automatically opened in the Windows subsystem. (Note: You may need to use a &lt;a href="https://github.com/ray-lothian/UserAgent-Switcher/"&gt;User Agent Switcher&lt;/a&gt; browser extension and set the User-Agent to Windows, as the Office webapps typically hide the "Open in Desktop App" option for Linux users.)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Applications&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;WinApps supports &lt;u&gt;&lt;em&gt;ALL&lt;/em&gt;&lt;/u&gt; Windows applications.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Universal application support is achieved by:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Scanning Windows for any officially supported applications (list below).&lt;/li&gt; 
 &lt;li&gt;Scanning Windows for any other &lt;code&gt;.exe&lt;/code&gt; files listed within the Windows Registry.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Officially supported applications benefit from high-resolution icons and pre-populated MIME types. This enables file managers to determine which Windows applications should open files based on file extensions. Icons for other detected applications are pulled from &lt;code&gt;.exe&lt;/code&gt; files.&lt;/p&gt; 
&lt;p&gt;Contributing to the list of supported applications is encouraged through submission of pull requests! Please help us grow the WinApps community.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Please note that the provided list of officially supported applications is community-driven. As such, some applications may not be tested and verified by the WinApps team.&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Officially Supported Applications&lt;/h3&gt; 
&lt;table cellpadding="10" cellspacing="0" border="0"&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;!-- Adobe Acrobat Pro --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/acrobat-x-pro/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe Acrobat Pro&lt;/b&gt;&lt;br /&gt; (X)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Adobe_Acrobat_DC_logo_2020.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Adobe After Effects --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/aftereffects-cc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe After Effects&lt;/b&gt;&lt;br /&gt; (CC)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Adobe_After_Effects_CC_icon.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Adobe Audition --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/audition-cc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe Audition&lt;/b&gt;&lt;br /&gt; (CC)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Adobe_Audition_CC_icon_%282020%29.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Adobe Bridge --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/bridge-cs6/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe Bridge&lt;/b&gt;&lt;br /&gt; (CS6, CC)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Adobe_Bridge_CC_icon.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Adobe Creative Cloud --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/adobe-cc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe Creative Cloud&lt;/b&gt;&lt;br /&gt; (CC)&lt;br /&gt; &lt;i&gt;&lt;a href="https://iconduck.com/icons/240218/adobe-creative-cloud"&gt;Icon&lt;/a&gt; under &lt;a href="https://iconduck.com/licenses/mit"&gt;MIT license&lt;/a&gt;.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Adobe Illustrator --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/illustrator-cc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe Illustrator&lt;/b&gt;&lt;br /&gt; (CC)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Adobe_Illustrator_CC_icon.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Adobe InDesign --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/indesign-cc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe InDesign&lt;/b&gt;&lt;br /&gt; (CC)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Adobe_InDesign_CC_icon.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Adobe Lightroom --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/lightroom-cc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe Lightroom&lt;/b&gt;&lt;br /&gt; (CC)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Adobe_Photoshop_Lightroom_CC_logo.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Adobe Photoshop --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/photoshop-cc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Adobe Photoshop&lt;/b&gt;&lt;br /&gt; (CS6, CC, 2022)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Adobe_Photoshop_CC_icon.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Command Prompt --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/cmd/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Command Prompt&lt;/b&gt;&lt;br /&gt; (cmd.exe)&lt;br /&gt; &lt;i&gt;&lt;a href="https://github.com/microsoft/terminal/raw/main/res/terminal/Terminal.svg"&gt;Icon&lt;/a&gt; under &lt;a href="https://github.com/microsoft/terminal/raw/main/LICENSE"&gt;MIT license&lt;/a&gt;.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- File Explorer --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/explorer/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;File Explorer&lt;/b&gt;&lt;br /&gt; (Windows Explorer)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Windows_Explorer.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Internet Explorer --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/iexplorer/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Internet Explorer&lt;/b&gt;&lt;br /&gt; (11)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Internet_Explorer_10%2B11_logo.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Microsoft Access --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/access/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Access&lt;/b&gt;&lt;br /&gt; (2016, 2019, o365)&lt;br /&gt; &lt;i&gt;&lt;a href="https://commons.wikimedia.org/wiki/File:Microsoft_Office_Access_(2019-present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Microsoft Excel --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/excel/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Excel&lt;/b&gt;&lt;br /&gt; (2016, 2019, o365)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Office_Excel_(2019%E2%80%93present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Microsoft Word --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/word/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Word&lt;/b&gt;&lt;br /&gt; (2016, 2019, o365)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Office_Word_(2019%E2%80%93present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Microsoft OneNote --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/onenote/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft OneNote&lt;/b&gt;&lt;br /&gt; (2016, 2019, o365)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Office_OneNote_(2019%E2%80%93present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Microsoft Outlook --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/outlook/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Outlook&lt;/b&gt;&lt;br /&gt; (2016, 2019, o365)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Office_Outlook_(2018%E2%80%93present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Microsoft PowerPoint --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/powerpoint/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft PowerPoint&lt;/b&gt;&lt;br /&gt; (2016, 2019, o365)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Office_PowerPoint_(2019%E2%80%93present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Microsoft Publisher --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/publisher/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Publisher&lt;/b&gt;&lt;br /&gt; (2016, 2019, o365)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Office_Publisher_(2019-present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Microsoft Visio --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/visio/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Visio&lt;/b&gt;&lt;br /&gt; (Standard/Pro. 2021, Plan 2)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Office_Visio_(2019).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Microsoft Project --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/project/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Project&lt;/b&gt;&lt;br /&gt; (Standard/Pro. 2021, Plan 3/5)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Microsoft_Project_(2019–present).svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- Microsoft Visual Studio --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/visual-studio-pro/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Microsoft Visual Studio&lt;/b&gt;&lt;br /&gt; (Comm./Pro./Ent. 2022)&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.m.wikipedia.org/wiki/File:Visual_Studio_Icon_2022.svg"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- mIRC --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/mirc/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;mIRC&lt;/b&gt;&lt;br /&gt; &lt;i&gt;&lt;a href="https://en.wikipedia.org/wiki/MIRC#/media/File:Mircnewlogo.png"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
   &lt;!-- PowerShell --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/apps/powershell/icon.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;PowerShell&lt;/b&gt;&lt;br /&gt; &lt;i&gt;&lt;a href="https://iconduck.com/icons/102322/file-type-powershell"&gt;Icon&lt;/a&gt; under &lt;a href="https://iconduck.com/licenses/mit"&gt;MIT license&lt;/a&gt;.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;!-- Windows --&gt; 
   &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/icons/windows.svg?sanitize=true" width="100" /&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;b&gt;Windows&lt;/b&gt;&lt;br /&gt; (Full RDP Session)&lt;br /&gt; &lt;i&gt;&lt;a href="https://raw.githubusercontent.com/winapps-org/winapps/main/url"&gt;Icon&lt;/a&gt; in the Public Domain.&lt;/i&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Step 1: Configure a Windows VM&lt;/h3&gt; 
&lt;p&gt;Both &lt;code&gt;Docker&lt;/code&gt; and &lt;code&gt;Podman&lt;/code&gt; are recommended backends for running the Windows virtual machine, as they facilitate an automated Windows installation process. WinApps is also compatible with &lt;code&gt;libvirt&lt;/code&gt;. While this method requires considerably more manual configuration, it also provides greater virtual machine customisation options. All three methods leverage the &lt;code&gt;KVM&lt;/code&gt; hypervisor, ensuring excellent virtual machine performance. Ultimately, the choice of backend depends on your specific use case.&lt;/p&gt; 
&lt;p&gt;The following guides are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/winapps-org/winapps/main/docs/docker.md"&gt;Creating a Windows VM with &lt;code&gt;Docker&lt;/code&gt; or &lt;code&gt;Podman&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/winapps-org/winapps/main/docs/libvirt.md"&gt;Creating a Windows VM with &lt;code&gt;libvirt&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you already have a Windows VM or server you wish to use with WinApps, you will still have to follow the &lt;a href="https://raw.githubusercontent.com/winapps-org/winapps/main/docs/libvirt.md#final-configuration-steps"&gt;final steps described in the &lt;code&gt;libvirt&lt;/code&gt; documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Step 2: Install Dependencies&lt;/h3&gt; 
&lt;p&gt;Install the required dependencies.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Debian/Ubuntu: &lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt install -y curl dialog freerdp3-x11 git iproute2 libnotify-bin netcat-openbsd
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] On Debian 12 (&lt;em&gt;"bookworm"&lt;/em&gt;), you need to enable the &lt;code&gt;backports&lt;/code&gt; repository for the &lt;code&gt;freerdp3-x11&lt;/code&gt; package to become available. For instructions, see &lt;a href="https://backports.debian.org/Instructions"&gt;https://backports.debian.org/Instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Fedora/RHEL: &lt;pre&gt;&lt;code class="language-bash"&gt;sudo dnf install -y curl dialog freerdp git iproute libnotify nmap-ncat
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Arch Linux: &lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -Syu --needed -y curl dialog freerdp git iproute2 libnotify openbsd-netcat
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;openSUSE: &lt;pre&gt;&lt;code class="language-bash"&gt;sudo zypper install -y curl dialog freerdp git iproute2 libnotify-tools netcat-openbsd
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt;Gentoo Linux: &lt;pre&gt;&lt;code class="language-bash"&gt;sudo emerge --ask=n net-misc/curl dev-util/dialog net-misc/freerdp:3 dev-vcs/git sys-apps/iproute2 x11-libs/libnotify net-analyzer/openbsd-netcat
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] WinApps requires &lt;code&gt;FreeRDP&lt;/code&gt; version 3 or later. If not available for your distribution through your package manager, you can install the &lt;a href="https://flathub.org/apps/com.freerdp.FreeRDP"&gt;Flatpak&lt;/a&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;flatpak install flathub com.freerdp.FreeRDP
sudo flatpak override --filesystem=home com.freerdp.FreeRDP # To use `+home-drive`
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;However, if you have weird issues like &lt;a href="https://github.com/winapps-org/winapps/issues/233"&gt;#233&lt;/a&gt; when running Flatpak, please compile FreeRDP from source according to &lt;a href="https://github.com/FreeRDP/FreeRDP/wiki/Compilation"&gt;this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Step 3: Create a WinApps Configuration File&lt;/h3&gt; 
&lt;p&gt;Create a configuration file at &lt;code&gt;~/.config/winapps/winapps.conf&lt;/code&gt; containing the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;##################################
#   WINAPPS CONFIGURATION FILE   #
##################################

# INSTRUCTIONS
# - Leading and trailing whitespace are ignored.
# - Empty lines are ignored.
# - Lines starting with '#' are ignored.
# - All characters following a '#' are ignored.

# [WINDOWS USERNAME]
RDP_USER="MyWindowsUser"

# [WINDOWS PASSWORD]
# NOTES:
# - If using FreeRDP v3.9.0 or greater, you *have* to set a password
RDP_PASS="MyWindowsPassword"

# [WINDOWS DOMAIN]
# DEFAULT VALUE: '' (BLANK)
RDP_DOMAIN=""

# [WINDOWS IPV4 ADDRESS]
# NOTES:
# - If using 'libvirt', 'RDP_IP' will be determined by WinApps at runtime if left unspecified.
# DEFAULT VALUE:
# - 'docker': '127.0.0.1'
# - 'podman': '127.0.0.1'
# - 'libvirt': '' (BLANK)
RDP_IP="127.0.0.1"

# [VM NAME]
# NOTES:
# - Only applicable when using 'libvirt'
# - The libvirt VM name must match so that WinApps can determine VM IP, start the VM, etc.
# DEFAULT VALUE: 'RDPWindows'
VM_NAME="RDPWindows"

# [WINAPPS BACKEND]
# DEFAULT VALUE: 'docker'
# VALID VALUES:
# - 'docker'
# - 'podman'
# - 'libvirt'
# - 'manual'
WAFLAVOR="docker"

# [DISPLAY SCALING FACTOR]
# NOTES:
# - If an unsupported value is specified, a warning will be displayed.
# - If an unsupported value is specified, WinApps will use the closest supported value.
# DEFAULT VALUE: '100'
# VALID VALUES:
# - '100'
# - '140'
# - '180'
RDP_SCALE="100"

# [MOUNTING REMOVABLE PATHS FOR FILES]
# NOTES:
# - By default, `udisks` (which you most likely have installed) uses /run/media for mounting removable devices.
#   This improves compatibility with most desktop environments (DEs).
# ATTENTION: The Filesystem Hierarchy Standard (FHS) recommends /media instead. Verify your system's configuration.
# - To manually mount devices, you may optionally use /mnt.
# REFERENCE: https://wiki.archlinux.org/title/Udisks#Mount_to_/media
REMOVABLE_MEDIA="/run/media"

# [ADDITIONAL FREERDP FLAGS &amp;amp; ARGUMENTS]
# NOTES:
# - You can try adding /network:lan to these flags in order to increase performance, however, some users have faced issues with this.
# DEFAULT VALUE: '/cert:tofu /sound /microphone +home-drive'
# VALID VALUES: See https://github.com/awakecoding/FreeRDP-Manuals/blob/master/User/FreeRDP-User-Manual.markdown
RDP_FLAGS="/cert:tofu /sound /microphone +home-drive"

# [DEBUG WINAPPS]
# NOTES:
# - Creates and appends to ~/.local/share/winapps/winapps.log when running WinApps.
# DEFAULT VALUE: 'true'
# VALID VALUES:
# - 'true'
# - 'false'
DEBUG="true"

# [AUTOMATICALLY PAUSE WINDOWS]
# NOTES:
# - This is currently INCOMPATIBLE with 'manual'.
# DEFAULT VALUE: 'off'
# VALID VALUES:
# - 'on'
# - 'off'
AUTOPAUSE="off"

# [AUTOMATICALLY PAUSE WINDOWS TIMEOUT]
# NOTES:
# - This setting determines the duration of inactivity to tolerate before Windows is automatically paused.
# - This setting is ignored if 'AUTOPAUSE' is set to 'off'.
# - The value must be specified in seconds (to the nearest 10 seconds e.g., '30', '40', '50', etc.).
# - For RemoteApp RDP sessions, there is a mandatory 20-second delay, so the minimum value that can be specified here is '20'.
# - Source: https://techcommunity.microsoft.com/t5/security-compliance-and-identity/terminal-services-remoteapp-8482-session-termination-logic/ba-p/246566
# DEFAULT VALUE: '300'
# VALID VALUES: &amp;gt;=20
AUTOPAUSE_TIME="300"

# [FREERDP COMMAND]
# NOTES:
# - WinApps will attempt to automatically detect the correct command to use for your system.
# DEFAULT VALUE: '' (BLANK)
# VALID VALUES: The command required to run FreeRDPv3 on your system (e.g., 'xfreerdp', 'xfreerdp3', etc.).
FREERDP_COMMAND=""

# [TIMEOUTS]
# NOTES:
# - These settings control various timeout durations within the WinApps setup.
# - Increasing the timeouts is only necessary if the corresponding errors occur.
# - Ensure you have followed all the Troubleshooting Tips in the error message first.

# PORT CHECK
# - The maximum time (in seconds) to wait when checking if the RDP port on Windows is open.
# - Corresponding error: "NETWORK CONFIGURATION ERROR" (exit status 13).
# DEFAULT VALUE: '5'
PORT_TIMEOUT="5"

# RDP CONNECTION TEST
# - The maximum time (in seconds) to wait when testing the initial RDP connection to Windows.
# - Corresponding error: "REMOTE DESKTOP PROTOCOL FAILURE" (exit status 14).
# DEFAULT VALUE: '30'
RDP_TIMEOUT="30"

# APPLICATION SCAN
# - The maximum time (in seconds) to wait for the script that scans for installed applications on Windows to complete.
# - Corresponding error: "APPLICATION QUERY FAILURE" (exit status 15).
# DEFAULT VALUE: '60'
APP_SCAN_TIMEOUT="60"

# WINDOWS BOOT
# - The maximum time (in seconds) to wait for the Windows VM to boot if it is not running, before attempting to launch an application.
# DEFAULT VALUE: '120'
BOOT_TIMEOUT="120"
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To safeguard your Windows password, ensure &lt;code&gt;~/.config/winapps/winapps.conf&lt;/code&gt; is accessible only by your user account.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;chown $(whoami):$(whoami) ~/.config/winapps/winapps.conf
chmod 600 ~/.config/winapps/winapps.conf
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] &lt;code&gt;RDP_USER&lt;/code&gt; and &lt;code&gt;RDP_PASS&lt;/code&gt; must correspond to a complete Windows user account and password, such as those created during Windows setup or for a domain user. User/PIN combinations are not valid for RDP access.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you wish to use an alternative WinApps backend (other than &lt;code&gt;Docker&lt;/code&gt;), uncomment and change &lt;code&gt;WAFLAVOR="docker"&lt;/code&gt; to &lt;code&gt;WAFLAVOR="podman"&lt;/code&gt; or &lt;code&gt;WAFLAVOR="libvirt"&lt;/code&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Configuration Options Explained&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;If using a pre-existing Windows RDP server on your LAN, you must use &lt;code&gt;RDP_IP&lt;/code&gt; to specify the location of the Windows server. You may also wish to configure a static IP address for this server.&lt;/li&gt; 
 &lt;li&gt;If running a Windows VM using &lt;code&gt;libvirt&lt;/code&gt; with NAT enabled, leave &lt;code&gt;RDP_IP&lt;/code&gt; commented out and WinApps will auto-detect the local IP address for the VM.&lt;/li&gt; 
 &lt;li&gt;For domain users, you can uncomment and change &lt;code&gt;RDP_DOMAIN&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;On high-resolution (UHD) displays, you can set &lt;code&gt;RDP_SCALE&lt;/code&gt; to the scale you would like to use (100, 140 or 180).&lt;/li&gt; 
 &lt;li&gt;To add additional flags to the FreeRDP call (e.g. &lt;code&gt;/prevent-session-lock 120&lt;/code&gt;), uncomment and use the &lt;code&gt;RDP_FLAGS&lt;/code&gt; configuration option.&lt;/li&gt; 
 &lt;li&gt;For multi-monitor setups, you can try adding &lt;code&gt;/multimon&lt;/code&gt; to &lt;code&gt;RDP_FLAGS&lt;/code&gt;. A FreeRDP bug may result in a black screen however, in which case you should revert this change.&lt;/li&gt; 
 &lt;li&gt;To enable non-English input and seamless language switching, you can try adding &lt;code&gt;/kbd:unicode&lt;/code&gt; to &lt;code&gt;RDP_FLAGS&lt;/code&gt;. This ensures client inputs are sent as Unicode sequences.&lt;/li&gt; 
 &lt;li&gt;If you enable &lt;code&gt;DEBUG&lt;/code&gt;, a log will be created on each application start in &lt;code&gt;~/.local/share/winapps/winapps.log&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If using a system on which the FreeRDP command is not &lt;code&gt;xfreerdp&lt;/code&gt; or &lt;code&gt;xfreerdp3&lt;/code&gt;, the correct command can be specified using &lt;code&gt;FREERDP_COMMAND&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Step 4: Test FreeRDP&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Test establishing an RDP session by running the following command, replacing the &lt;code&gt;/u:&lt;/code&gt;, &lt;code&gt;/p:&lt;/code&gt;, and &lt;code&gt;/v:&lt;/code&gt; values with the correct values specified in &lt;code&gt;~/.config/winapps/winapps.conf&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;xfreerdp3 /u:"Your Windows Username" /p:"Your Windows Password" /v:192.168.122.2 /cert:tofu

# Or, if you installed FreeRDP using Flatpak
flatpak run --command=xfreerdp com.freerdp.FreeRDP /u:"Your Windows Username" /p:"Your Windows Password" /v:192.168.122.2 /cert:tofu
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Please note that the correct &lt;code&gt;FreeRDP&lt;/code&gt; command may vary depending on your system (e.g. &lt;code&gt;xfreerdp&lt;/code&gt;, &lt;code&gt;xfreerdp3&lt;/code&gt;, etc.).&lt;/li&gt; 
   &lt;li&gt;Ensure you use the correct IP address for your Windows instance in the above command.&lt;/li&gt; 
   &lt;li&gt;If prompted within the terminal window, choose to accept the certificate permanently.&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;If the Windows desktop appears in a &lt;code&gt;FreeRDP&lt;/code&gt; window, the configuration was successful and the correct RDP TLS certificate was enrolled on the Linux host. Disconnect from the RDP session and skip the following debugging step.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;[DEBUGGING STEP] If an outdated or expired certificate is detected, the &lt;code&gt;FreeRDP&lt;/code&gt; command will display output resembling the following. In this case, the old certificate will need to be removed and a new RDP TLS certificate installed.&lt;/p&gt; &lt;pre&gt;&lt;code&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@           WARNING: CERTIFICATE NAME MISMATCH!           @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

The hostname used for this connection (192.168.122.2:3389)
does not match the name given in the certificate:
Common Name (CN):
        RDPWindows
A valid certificate for the wrong name should NOT be trusted!

The host key for 192.168.122.2:3389 has changed

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now (man-in-the-middle attack)!
It is also possible that a host key has just been changed.
The fingerprint for the host key sent by the remote host is 8e:b4:d2:8e:4e:14:e7:4e:82:9b:07:5b:e1:68:40:18:bc:db:5f:bc:29:0d:91:83:f9:17:f9:13:e6:51:dc:36
Please contact your system administrator.
Add correct host key in /home/rohanbarar/.config/freerdp/server/192.168.122.2_3389.pem to get rid of this message.
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;If you experience the above error, delete any old or outdated RDP TLS certificates associated with Windows, as they can prevent &lt;code&gt;FreeRDP&lt;/code&gt; from establishing a connection.&lt;/p&gt; &lt;p&gt;These certificates are located within &lt;code&gt;~/.config/freerdp/server/&lt;/code&gt; and follow the naming format &lt;code&gt;&amp;lt;Windows-VM-IPv4-Address&amp;gt;_&amp;lt;RDP-Port&amp;gt;.pem&lt;/code&gt; (e.g., &lt;code&gt;192.168.122.2_3389.pem&lt;/code&gt;, &lt;code&gt;127.0.0.1_3389.pem&lt;/code&gt;, etc.).&lt;/p&gt; &lt;p&gt;If you use FreeRDP for purposes other than WinApps, ensure you only remove certificates related to the relevant Windows VM. If no relevant certificates are found, no action is needed.&lt;/p&gt; &lt;p&gt;Following deletion, re-attempt establishing an RDP session.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Step 5: Run the WinApps Installer&lt;/h3&gt; 
&lt;p&gt;With Windows still powered on, run the WinApps installer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash &amp;lt;(curl https://raw.githubusercontent.com/winapps-org/winapps/main/setup.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once WinApps is installed, a list of additional arguments can be accessed by running &lt;code&gt;winapps-setup --help&lt;/code&gt;.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/demo/installer.gif" width="1000" alt="WinApps Installer Animation." /&gt; 
&lt;h2&gt;Adding Additional Pre-defined Applications&lt;/h2&gt; 
&lt;p&gt;Adding your own applications with custom icons and MIME types to the installer is easy. Simply copy one of the application configurations in the &lt;code&gt;apps&lt;/code&gt; folder located within the WinApps repository, and:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Modify the name and variables to reflect the appropriate/desired values for your application.&lt;/li&gt; 
 &lt;li&gt;Replace &lt;code&gt;icon.svg&lt;/code&gt; with an SVG for your application (ensuring the icon is appropriately licensed).&lt;/li&gt; 
 &lt;li&gt;Remove and reinstall WinApps.&lt;/li&gt; 
 &lt;li&gt;Submit a pull request to add your application to WinApps as an officially supported application once you have tested and verified your configuration (optional, but encouraged).&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Running Applications Manually&lt;/h2&gt; 
&lt;p&gt;WinApps offers a manual mode for running applications that were not configured by the WinApps installer. This is completed with the &lt;code&gt;manual&lt;/code&gt; flag. Executables that are in the Windows PATH do not require full path definition.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;winapps manual "C:\my\directory\executableNotInPath.exe"
winapps manual executableInPath.exe
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Updating WinApps&lt;/h2&gt; 
&lt;p&gt;The installer can be run multiple times. To update your installation of WinApps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run the WinApps installer to remove WinApps from your system.&lt;/li&gt; 
 &lt;li&gt;Pull the latest changes from the WinApps GitHub repository.&lt;/li&gt; 
 &lt;li&gt;Re-install WinApps using the WinApps installer by running &lt;code&gt;winapps-setup&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;WinApps Launcher (Optional)&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/winapps-org/winapps-launcher"&gt;WinApps Launcher&lt;/a&gt; provides a simple system tray menu that makes it easy to launch your installed Windows applications, open a full desktop RDP session, and control your Windows VM or container. You can start, stop, pause, reboot or hibernate Windows, as well as access your installed applications from a convenient list. This lightweight, optional tool helps streamline your overall WinApps experience.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/winapps-org/winapps/main/demo/launcher.gif" width="1000" alt="WinApps Launcher Animation." /&gt; 
&lt;h2&gt;Installation using Nix&lt;/h2&gt; 
&lt;p&gt;First, follow Step 1 of the normal installation guide to create your VM. Then, install WinApps according to the following instructions.&lt;/p&gt; 
&lt;p&gt;After installation, it will be available under &lt;code&gt;winapps&lt;/code&gt;, with the installer being available under &lt;code&gt;winapps-setup&lt;/code&gt; and the optional launcher being available under &lt;code&gt;winapps-launcher.&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Using standalone Nix&lt;/h3&gt; 
&lt;p&gt;First, make sure Flakes and the &lt;code&gt;nix&lt;/code&gt; command are enabled. In your &lt;code&gt;~/.config/nix/nix.conf&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;experimental-features = nix-command flakes
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;nix profile install github:winapps-org/winapps#winapps
nix profile install github:winapps-org/winapps#winapps-launcher # optional
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On NixOS using Flakes&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-nix"&gt;# flake.nix
{
  description = "My configuration";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";

    winapps = {
      url = "github:winapps-org/winapps";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };

  outputs =
    inputs@{
      nixpkgs,
      winapps,
      ...
    }:
    {
      nixosConfigurations.hostname = nixpkgs.lib.nixosSystem rec {
        system = "x86_64-linux";

        specialArgs = {
          inherit inputs system;
        };

        modules = [
          ./configuration.nix
          (
            {
              pkgs,
              system ? pkgs.system,
              ...
            }:
            {
              environment.systemPackages = [
                winapps.packages."${system}".winapps
                winapps.packages."${system}".winapps-launcher # optional
              ];
            }
          )
        ];
      };
    };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;On NixOS without Flakes&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://jade.fyi/blog/flakes-arent-real/"&gt;Flakes aren't real and they can't hurt you.&lt;/a&gt;. However, if you still don't want to use flakes, you can use WinApps with flake-compat like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-nix"&gt;# configuration.nix
{
  pkgs,
  system ? pkgs.system,
  ...
}:
{
  # set up binary cache (optional)
  nix.settings = {
    substituters = [ "https://winapps.cachix.org/" ];
    trusted-public-keys = [ "winapps.cachix.org-1:HI82jWrXZsQRar/PChgIx1unmuEsiQMQq+zt05CD36g=" ];
    trusted-users = [ "&amp;lt;your username&amp;gt;" ]; # replace with your username
  };

  environment.systemPackages =
    let
      winapps =
        (import (builtins.fetchTarball "https://github.com/winapps-org/winapps/archive/main.tar.gz"))
        .packages."${system}";
    in
    [
      winapps.winapps
      winapps.winapps-launcher # optional
    ];
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#winapps-org/winapps&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=winapps-org/winapps&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=winapps-org/winapps&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=winapps-org/winapps&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>moeru-ai/airi</title>
      <link>https://github.com/moeru-ai/airi</link>
      <description>&lt;p&gt;💖🧸 Self hosted, you owned Grok Companion, a container of souls of waifu, cyber livings to bring them into our worlds, wishing to achieve Neuro-sama's altitude. Capable of realtime voice chat, Minecraft, Factorio playing. Web / macOS / Windows supported.&lt;/p&gt;&lt;hr&gt;&lt;picture&gt; 
 &lt;source width="100%" srcset="./docs/content/public/banner-dark-1280x640.avif" media="(prefers-color-scheme: dark)" /&gt; 
 &lt;source width="100%" srcset="./docs/content/public/banner-light-1280x640.avif" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)" /&gt; 
 &lt;img width="250" src="https://raw.githubusercontent.com/moeru-ai/airi/main/docs/content/public/banner-light-1280x640.avif" /&gt; 
&lt;/picture&gt; 
&lt;h1 align="center"&gt;Project AIRI&lt;/h1&gt; 
&lt;p align="center"&gt;Re-creating Neuro-sama, a soul container of AI waifu / virtual characters to bring them into our world.&lt;/p&gt; 
&lt;p align="center"&gt; [&lt;a href="https://discord.gg/TgQ3Cu2F7A"&gt;Join Discord Server&lt;/a&gt;] [&lt;a href="https:///airi.moeru.ai"&gt;Try it&lt;/a&gt;] [&lt;a href="https://github.com/moeru-ai/airi/raw/main/docs/README.zh-CN.md"&gt;简体中文&lt;/a&gt;] [&lt;a href="https://github.com/moeru-ai/airi/raw/main/docs/README.ja-JP.md"&gt;日本語&lt;/a&gt;] &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://deepwiki.com/moeru-ai/airi"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://github.com/moeru-ai/airi/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/moeru-ai/airi.svg?style=flat&amp;amp;colorA=080f12&amp;amp;colorB=1fa669" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/TgQ3Cu2F7A"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fdiscord.com%2Fapi%2Finvites%2FTgQ3Cu2F7A%3Fwith_counts%3Dtrue&amp;amp;query=%24.approximate_member_count&amp;amp;suffix=%20members&amp;amp;logo=discord&amp;amp;logoColor=white&amp;amp;label=%20&amp;amp;color=7389D8&amp;amp;labelColor=6A7EC2" /&gt;&lt;/a&gt; &lt;a href="https://x.com/proj_airi"&gt;&lt;img src="https://img.shields.io/badge/%40proj__airi-black?style=flat&amp;amp;logo=x&amp;amp;labelColor=%23101419&amp;amp;color=%232d2e30" /&gt;&lt;/a&gt; &lt;a href="https://t.me/+7M_ZKO3zUHFlOThh"&gt;&lt;img src="https://img.shields.io/badge/Telegram-%235AA9E6?logo=telegram&amp;amp;labelColor=FFFFFF" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.producthunt.com/products/airi?embed=true&amp;amp;utm_source=badge-featured&amp;amp;utm_medium=badge&amp;amp;utm_source=badge-airi" target="_blank"&gt;&lt;img src="https://api.producthunt.com/widgets/embed-image/v1/featured.svg?post_id=993524&amp;amp;theme=neutral&amp;amp;t=1752696535380" alt="AIRI - A container of cyber living souls, re-creation of Neuro-sama | Product Hunt" style="width: 250px; height: 54px;" width="250" height="54" /&gt;&lt;/a&gt; &lt;a href="https://trendshift.io/repositories/14636" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/14636" alt="moeru-ai%2Fairi | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Heavily inspired by &lt;a href="https://www.youtube.com/@Neurosama"&gt;Neuro-sama&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] &lt;strong&gt;Attention:&lt;/strong&gt; We &lt;strong&gt;do not&lt;/strong&gt; have any officially minted cryptocurrency or token associated with this project. Please check the information and proceed with caution.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;We've got a whole dedicated organization &lt;a href="https://github.com/proj-airi"&gt;@proj-airi&lt;/a&gt; for all the sub-projects born from Project AIRI. Check it out!&lt;/p&gt; 
 &lt;p&gt;RAG, memory system, embedded database, icons, Live2D utilities, and more!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Have you dreamed about having a cyber living being (cyber waifu / husbando, digital pet) or digital companion that could play with and talk to you?&lt;/p&gt; 
&lt;p&gt;With the power of modern large language models like &lt;a href="https://chatgpt.com"&gt;ChatGPT&lt;/a&gt; and famous &lt;a href="https://claude.ai"&gt;Claude&lt;/a&gt;, asking a virtual being to roleplay and chat with us is already easy enough for everyone. Platforms like &lt;a href="https://character.ai"&gt;Character.ai (a.k.a. c.ai)&lt;/a&gt; and &lt;a href="https://janitorai.com/"&gt;JanitorAI&lt;/a&gt; as well as local playgrounds like &lt;a href="https://github.com/SillyTavern/SillyTavern"&gt;SillyTavern&lt;/a&gt; are already good-enough solutions for a chat based or visual adventure game like experience.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;But, what about the abilities to play games? And see what you are coding at? Chatting while playing games, watching videos, and capable of doing many other things.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Perhaps you know &lt;a href="https://www.youtube.com/@Neurosama"&gt;Neuro-sama&lt;/a&gt; already. She is currently the best virtual streamer capable of playing games, chatting, and interacting with you and the participants. Some also call this kind of being "digital human." &lt;strong&gt;Sadly, as it's not open sourced, you cannot interact with her after her live streams go offline&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Therefore, this project, AIRI, offers another possibility here: &lt;strong&gt;let you own your digital life, cyber living, easily, anywhere, anytime&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;DevLogs We Posted &amp;amp; Recent Updates&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://airi.moeru.ai/docs/blog/DevLog-2025.07.18/"&gt;DevLog @ 2025.07.18&lt;/a&gt; on July 18, 2025&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://airi.moeru.ai/docs/blog/dreamlog-0x1/"&gt;DreamLog 0x1&lt;/a&gt; on June 16, 2025&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://airi.moeru.ai/docs/blog/DevLog-2025.06.08/"&gt;DevLog @ 2025.06.08&lt;/a&gt; on June 8, 2025&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://airi.moeru.ai/docs/blog/DevLog-2025.05.16/"&gt;DevLog @ 2025.05.16&lt;/a&gt; on May 16, 2025&lt;/li&gt; 
 &lt;li&gt;...more on &lt;a href="https://airi.moeru.ai/docs"&gt;documentation site&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;What's So Special About This Project?&lt;/h2&gt; 
&lt;p&gt;Unlike the other AI driven VTuber open source projects, アイリ was built with support of many Web technologies such as &lt;a href="https://www.w3.org/TR/webgpu/"&gt;WebGPU&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Audio_API"&gt;WebAudio&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers"&gt;Web Workers&lt;/a&gt;, &lt;a href="https://webassembly.org/"&gt;WebAssembly&lt;/a&gt;, &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WebSocket"&gt;WebSocket&lt;/a&gt;, etc. from the first day.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] Worrying about the performance drop since we are using Web related technologies?&lt;/p&gt; 
 &lt;p&gt;Don't worry, while Web browser version is meant to give an insight about how much we can push and do inside browsers, and webviews, we will never fully rely on this, the desktop version of AIRI is capable of using native &lt;a href="https://developer.nvidia.com/cuda-toolkit"&gt;NVIDIA CUDA&lt;/a&gt; and &lt;a href="https://developer.apple.com/metal/"&gt;Apple Metal&lt;/a&gt; by default (thanks to HuggingFace &amp;amp; beloved &lt;a href="https://github.com/huggingface/candle"&gt;candle&lt;/a&gt; project), without any complex dependency managements, considering the tradeoff, it was partially powered by Web technologies for graphics, layouts, animations, and the WIP plugin systems for everyone to integrate things.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This means that &lt;strong&gt;アイリ is capable of running on modern browsers and devices&lt;/strong&gt; and even on mobile devices (already done with PWA support). This brings a lot of possibilities for us (the developers) to build and extend the power of アイリ VTuber to the next level, while still leaving the flexibilities for users to enable features that requires TCP connections or other non-Web technologies such as connecting to Discord voice channel or playing Minecraft and Factorio with friends.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;/p&gt; 
 &lt;p&gt;We are still in the early stage of development where we are seeking out talented developers to join us and help us to make アイリ a reality.&lt;/p&gt; 
 &lt;p&gt;It's ok if you are not familiar with Vue.js, TypeScript, and devtools that required for this project, you can join us as an artist, designer, or even help us to launch our first live stream.&lt;/p&gt; 
 &lt;p&gt;Even you are a big fan of React, Svelte or even Solid, we welcome you. You can open a sub-directory to add features that you want to see in アイリ, or would like to experiment with.&lt;/p&gt; 
 &lt;p&gt;Fields (and related projects) that we are looking for:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Live2D modeller&lt;/li&gt; 
  &lt;li&gt;VRM modeller&lt;/li&gt; 
  &lt;li&gt;VRChat avatar designer&lt;/li&gt; 
  &lt;li&gt;Computer Vision&lt;/li&gt; 
  &lt;li&gt;Reinforcement Learning&lt;/li&gt; 
  &lt;li&gt;Speech Recognition&lt;/li&gt; 
  &lt;li&gt;Speech Synthesis&lt;/li&gt; 
  &lt;li&gt;ONNX Runtime&lt;/li&gt; 
  &lt;li&gt;Transformers.js&lt;/li&gt; 
  &lt;li&gt;vLLM&lt;/li&gt; 
  &lt;li&gt;WebGPU&lt;/li&gt; 
  &lt;li&gt;Three.js&lt;/li&gt; 
  &lt;li&gt;WebXR (&lt;a href="https://github.com/moeru-ai/chat"&gt;checkout the another project&lt;/a&gt; we have under the @moeru-ai organization)&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;p&gt;&lt;strong&gt;If you are interested, why not introduce yourself here? &lt;a href="https://github.com/moeru-ai/airi/discussions/33"&gt;Would like to join part of us to build AIRI?&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Current Progress&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/moeru-ai/airi/main/docs/content/public/readme-image-pc-preview.avif" /&gt; 
&lt;p&gt;Capable of&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Brain 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Play &lt;a href="https://www.minecraft.net"&gt;Minecraft&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Play &lt;a href="https://www.factorio.com"&gt;Factorio&lt;/a&gt; (WIP, but &lt;a href="https://github.com/moeru-ai/airi-factorio"&gt;PoC and demo available&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Chat in &lt;a href="https://telegram.org"&gt;Telegram&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Chat in &lt;a href="https://discord.com"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Memory 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Pure in-browser database support (DuckDB WASM | &lt;code&gt;pglite&lt;/code&gt;)&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Memory Alaya (WIP)&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; Pure in-browser local (WebGPU) inference&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Ears 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Audio input from browser&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Audio input from &lt;a href="https://discord.com"&gt;Discord&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Client side speech recognition&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Client side talking detection&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Mouth 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://elevenlabs.io/"&gt;ElevenLabs&lt;/a&gt; voice synthesis&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Body 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; VRM support 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Control VRM model&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; VRM model animations 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto blink&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto look at&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Idle eye movement&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Live2D support 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Control Live2D model&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Live2D model animations 
    &lt;ul&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto blink&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Auto look at&lt;/li&gt; 
     &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; Idle eye movement&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;For detailed instructions to develop this project, follow &lt;a href="https://raw.githubusercontent.com/moeru-ai/airi/main/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] By default, &lt;code&gt;pnpm dev&lt;/code&gt; will start the development server for the Stage Web (browser version). If you would like to try developing the desktop version, please make sure you read &lt;a href="https://raw.githubusercontent.com/moeru-ai/airi/main/.github/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; to setup the environment correctly.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm i
pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stage Web (Browser Version at &lt;a href="https://airi.moeru.ai"&gt;airi.moeru.ai&lt;/a&gt;)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Stage Tamagotchi (Desktop Version)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev:tamagotchi
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;A Nix package for Tamagotchi is included. To run airi with Nix, first make sure to enable flakes, then run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;nix run github:moeru-ai/airi
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Documentation Site&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;pnpm dev:docs
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Publish&lt;/h3&gt; 
&lt;p&gt;Please update the version in &lt;code&gt;Cargo.toml&lt;/code&gt; after running &lt;code&gt;bumpp&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;npx bumpp --no-commit --no-tag
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Support of LLM API Providers (powered by &lt;a href="https://github.com/moeru-ai/xsai"&gt;xsai&lt;/a&gt;)&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://openrouter.ai/"&gt;OpenRouter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/vllm-project/vllm"&gt;vLLM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/sgl-project/sglang"&gt;SGLang&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/ollama/ollama"&gt;Ollama&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://developers.generativeai.google"&gt;Google Gemini&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://platform.openai.com/docs/guides/gpt/chat-completions-api"&gt;OpenAI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; &lt;a href="https://learn.microsoft.com/en-us/azure/ai-services/openai/reference"&gt;Azure OpenAI API&lt;/a&gt; (PR welcome)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://anthropic.com"&gt;Anthropic Claude&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" disabled /&gt; &lt;a href="https://docs.anthropic.com/en/api/claude-on-amazon-bedrock"&gt;AWS Claude&lt;/a&gt; (PR welcome)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.deepseek.com/"&gt;DeepSeek&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://help.aliyun.com/document_detail/2400395.html"&gt;Qwen&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://x.ai/"&gt;xAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://wow.groq.com/"&gt;Groq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://mistral.ai/"&gt;Mistral&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://developers.cloudflare.com/workers-ai/"&gt;Cloudflare Workers AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.together.ai/"&gt;Together.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.together.ai/"&gt;Fireworks.ai&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.novita.ai/"&gt;Novita&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://bigmodel.cn"&gt;Zhipu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://cloud.siliconflow.cn/i/rKXmRobW"&gt;SiliconFlow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://platform.stepfun.com/"&gt;Stepfun&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://platform.baichuan-ai.com"&gt;Baichuan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://api.minimax.chat/"&gt;Minimax&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://platform.moonshot.cn/"&gt;Moonshot AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://player2.game/"&gt;Player2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://cloud.tencent.com/document/product/1729"&gt;Tencent Cloud&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; &lt;a href="https://www.xfyun.cn/doc/spark/Web.html"&gt;Sparks&lt;/a&gt; (PR welcome)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" disabled /&gt; &lt;a href="https://www.volcengine.com/experience/ark?utm_term=202502dsinvite&amp;amp;ac=DSASUQY5&amp;amp;rc=2QXCA1VI"&gt;Volcano Engine&lt;/a&gt; (PR welcome)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Sub-projects Born from This Project&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/proj-airi/awesome-ai-vtuber"&gt;Awesome AI VTuber&lt;/a&gt;: A curated list of AI VTubers and related projects&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/unspeech"&gt;&lt;code&gt;unspeech&lt;/code&gt;&lt;/a&gt;: Universal endpoint proxy server for &lt;code&gt;/audio/transcriptions&lt;/code&gt; and &lt;code&gt;/audio/speech&lt;/code&gt;, like LiteLLM but for any ASR and TTS&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/hfup"&gt;&lt;code&gt;hfup&lt;/code&gt;&lt;/a&gt;: tools to help on deploying, bundling to HuggingFace Spaces&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/xsai-transformers"&gt;&lt;code&gt;xsai-transformers&lt;/code&gt;&lt;/a&gt;: Experimental &lt;a href="https://github.com/huggingface/transformers.js"&gt;🤗 Transformers.js&lt;/a&gt; provider for &lt;a href="https://github.com/moeru-ai/xsai"&gt;xsAI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/proj-airi/webai-realtime-voice-chat"&gt;WebAI: Realtime Voice Chat&lt;/a&gt;: Full example of implementing ChatGPT's realtime voice from scratch with VAD + STT + LLM + TTS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/airi/tree/main/packages/drizzle-duckdb-wasm/README.md"&gt;&lt;code&gt;@proj-airi/drizzle-duckdb-wasm&lt;/code&gt;&lt;/a&gt;: Drizzle ORM driver for DuckDB WASM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/airi/tree/main/packages/duckdb-wasm/README.md"&gt;&lt;code&gt;@proj-airi/duckdb-wasm&lt;/code&gt;&lt;/a&gt;: Easy to use wrapper for &lt;code&gt;@duckdb/duckdb-wasm&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/airi/raw/main/crates/tauri-plugin-mcp/README.md"&gt;&lt;code&gt;tauri-plugin-mcp&lt;/code&gt;&lt;/a&gt;: A Tauri plugin for interacting with MCP servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/airi-factorio"&gt;AIRI Factorio&lt;/a&gt;: Allow AIRI to play Factorio&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nekomeowww/factorio-rcon-api"&gt;Factorio RCON API&lt;/a&gt;: RESTful API wrapper for Factorio headless server console&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/airi-factorio/tree/main/packages/autorio"&gt;&lt;code&gt;autorio&lt;/code&gt;&lt;/a&gt;: Factorio automation library&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/airi-factorio/tree/main/packages/tstl-plugin-reload-factorio-mod"&gt;&lt;code&gt;tstl-plugin-reload-factorio-mod&lt;/code&gt;&lt;/a&gt;: Reload Factorio mod when developing&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luoling8192/velin"&gt;Velin&lt;/a&gt;: Use Vue SFC and Markdown to write easy to manage stateful prompts for LLM&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/demodel"&gt;&lt;code&gt;demodel&lt;/code&gt;&lt;/a&gt;: Easily boost the speed of pulling your models and datasets from various of inference runtimes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/inventory"&gt;&lt;code&gt;inventory&lt;/code&gt;&lt;/a&gt;: Centralized model catalog and default provider configurations backend service&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/mcp-launcher"&gt;MCP Launcher&lt;/a&gt;: Easy to use MCP builder &amp;amp; launcher for all possible MCP servers, just like Ollama for models!&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/sad"&gt;🥺 SAD&lt;/a&gt;: Documentation and notes for self-host and browser running LLMs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-mermaid"&gt;%%{ init: { 'flowchart': { 'curve': 'catmullRom' } } }%%

flowchart TD
  Core("Core")
  Unspeech("unspeech")
  DBDriver("@proj-airi/drizzle-duckdb-wasm")
  MemoryDriver("[WIP] Memory Alaya")
  DB1("@proj-airi/duckdb-wasm")
  SVRT("@proj-airi/server-runtime")
  Memory("Memory")
  STT("STT")
  Stage("Stage")
  StageUI("@proj-airi/stage-ui")
  UI("@proj-airi/ui")

  subgraph AIRI
    DB1 --&amp;gt; DBDriver --&amp;gt; MemoryDriver --&amp;gt; Memory --&amp;gt; Core
    UI --&amp;gt; StageUI --&amp;gt; Stage --&amp;gt; Core
    Core --&amp;gt; STT
    Core --&amp;gt; SVRT
  end

  subgraph UI_Components
    UI --&amp;gt; StageUI
    UITransitions("@proj-airi/ui-transitions") --&amp;gt; StageUI
    UILoadingScreens("@proj-airi/ui-loading-screens") --&amp;gt; StageUI
    FontCJK("@proj-airi/font-cjkfonts-allseto") --&amp;gt; StageUI
    FontXiaolai("@proj-airi/font-xiaolai") --&amp;gt; StageUI
  end

  subgraph Apps
    Stage --&amp;gt; StageWeb("@proj-airi/stage-web")
    Stage --&amp;gt; StageTamagotchi("@proj-airi/stage-tamagotchi")
    Core --&amp;gt; RealtimeAudio("@proj-airi/realtime-audio")
    Core --&amp;gt; PromptEngineering("@proj-airi/playground-prompt-engineering")
  end

  subgraph Server_Components
    Core --&amp;gt; ServerSDK("@proj-airi/server-sdk")
    ServerShared("@proj-airi/server-shared") --&amp;gt; SVRT
    ServerShared --&amp;gt; ServerSDK
  end

  STT --&amp;gt;|Speaking| Unspeech
  SVRT --&amp;gt;|Playing Factorio| F_AGENT
  SVRT --&amp;gt;|Playing Minecraft| MC_AGENT

  subgraph Factorio_Agent
    F_AGENT("Factorio Agent")
    F_API("Factorio RCON API")
    factorio-server("factorio-server")
    F_MOD1("autorio")

    F_AGENT --&amp;gt; F_API -.-&amp;gt; factorio-server
    F_MOD1 -.-&amp;gt; factorio-server
  end

  subgraph Minecraft_Agent
    MC_AGENT("Minecraft Agent")
    Mineflayer("Mineflayer")
    minecraft-server("minecraft-server")

    MC_AGENT --&amp;gt; Mineflayer -.-&amp;gt; minecraft-server
  end

  XSAI("xsAI") --&amp;gt; Core
  XSAI --&amp;gt; F_AGENT
  XSAI --&amp;gt; MC_AGENT

  Core --&amp;gt; TauriMCP("@proj-airi/tauri-plugin-mcp")
  Memory_PGVector("@proj-airi/memory-pgvector") --&amp;gt; Memory

  style Core fill:#f9d4d4,stroke:#333,stroke-width:1px
  style AIRI fill:#fcf7f7,stroke:#333,stroke-width:1px
  style UI fill:#d4f9d4,stroke:#333,stroke-width:1px
  style Stage fill:#d4f9d4,stroke:#333,stroke-width:1px
  style UI_Components fill:#d4f9d4,stroke:#333,stroke-width:1px
  style Server_Components fill:#d4e6f9,stroke:#333,stroke-width:1px
  style Apps fill:#d4d4f9,stroke:#333,stroke-width:1px
  style Factorio_Agent fill:#f9d4f2,stroke:#333,stroke-width:1px
  style Minecraft_Agent fill:#f9d4f2,stroke:#333,stroke-width:1px

  style DBDriver fill:#f9f9d4,stroke:#333,stroke-width:1px
  style MemoryDriver fill:#f9f9d4,stroke:#333,stroke-width:1px
  style DB1 fill:#f9f9d4,stroke:#333,stroke-width:1px
  style Memory fill:#f9f9d4,stroke:#333,stroke-width:1px
  style Memory_PGVector fill:#f9f9d4,stroke:#333,stroke-width:1px
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Similar Projects&lt;/h2&gt; 
&lt;h3&gt;Open sourced ones&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kimjammer/Neuro"&gt;kimjammer/Neuro: A recreation of Neuro-Sama originally created in 7 days.&lt;/a&gt;: very well completed implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SugarcaneDefender/z-waif"&gt;SugarcaneDefender/z-waif&lt;/a&gt;: Great at gaming, autonomous, and prompt engineering&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/semperai/amica/"&gt;semperai/amica&lt;/a&gt;: Great at VRM, WebXR&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/elizaOS/eliza"&gt;elizaOS/eliza&lt;/a&gt;: Great examples and software engineering on how to integrate agent into various of systems and APIs&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ardha27/AI-Waifu-Vtuber"&gt;ardha27/AI-Waifu-Vtuber&lt;/a&gt;: Great about Twitch API integrations&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/InsanityLabs/AIVTuber"&gt;InsanityLabs/AIVTuber&lt;/a&gt;: Nice UI and UX&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/IRedDragonICY/vixevia"&gt;IRedDragonICY/vixevia&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/t41372/Open-LLM-VTuber"&gt;t41372/Open-LLM-VTuber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PeterH0323/Streamer-Sales"&gt;PeterH0323/Streamer-Sales&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Non-open-sourced ones&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://clips.twitch.tv/WanderingCaringDeerDxCat-Qt55xtiGDSoNmDDr"&gt;https://clips.twitch.tv/WanderingCaringDeerDxCat-Qt55xtiGDSoNmDDr&lt;/a&gt; &lt;a href="https://www.youtube.com/watch?v=8Giv5mupJNE"&gt;https://www.youtube.com/watch?v=8Giv5mupJNE&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://clips.twitch.tv/TriangularAthleticBunnySoonerLater-SXpBk1dFso21VcWD"&gt;https://clips.twitch.tv/TriangularAthleticBunnySoonerLater-SXpBk1dFso21VcWD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/@NOWA_Mirai"&gt;https://www.youtube.com/@NOWA_Mirai&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://repobeats.axiom.co/api/embed/a1d6fe2c13ea2bb53a5154435a71e2431f70c2ee.svg?sanitize=true" alt="Repobeats analytics image" title="Repobeats analytics image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/unovue/reka-ui"&gt;Reka UI&lt;/a&gt;: for designing the documentation site, new landing page is based on this, as well as implementing massive amount of UI components. (shadcn-vue is using Reka UI as the headless, do checkout!)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pixiv/ChatVRM"&gt;pixiv/ChatVRM&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/josephrocca/ChatVRM-js"&gt;josephrocca/ChatVRM-js: A JS conversion/adaptation of parts of the ChatVRM (TypeScript) code for standalone use in OpenCharacters and elsewhere&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Design of UI and style was inspired by &lt;a href="https://store.steampowered.com/app/2919650/Cookard/"&gt;Cookard&lt;/a&gt;, &lt;a href="https://store.steampowered.com/app/2240620/UNBEATABLE/"&gt;UNBEATABLE&lt;/a&gt;, and &lt;a href="https://store.steampowered.com/app/2957700/_/"&gt;Sensei! I like you so much!&lt;/a&gt;, and artworks of &lt;a href="https://dribbble.com/shots/22157656-Ayame"&gt;Ayame by Mercedes Bazan&lt;/a&gt; with &lt;a href="https://dribbble.com/shots/24501019-Wish"&gt;Wish by Mercedes Bazan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mallorbc/whisper_mic"&gt;mallorbc/whisper_mic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/moeru-ai/xsai"&gt;&lt;code&gt;xsai&lt;/code&gt;&lt;/a&gt;: Implemented a decent amount of packages to interact with LLMs and models, like &lt;a href="https://sdk.vercel.ai/"&gt;Vercel AI SDK&lt;/a&gt; but way small.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#moeru-ai/airi&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=moeru-ai/airi&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/generative-ai-for-beginners</title>
      <link>https://github.com/microsoft/generative-ai-for-beginners</link>
      <description>&lt;p&gt;21 Lessons, Get Started Building with Generative AI&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/images/repo-thumbnailv4-fixed.png?WT.mc_id=academic-105485-koreyst" alt="Generative AI For Beginners" /&gt;&lt;/p&gt; 
&lt;h3&gt;21 Lessons teaching everything you need to know to start building Generative AI applications&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/microsoft/Generative-AI-For-Beginners/raw/master/LICENSE?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/github/license/microsoft/Generative-AI-For-Beginners.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Generative-AI-For-Beginners/graphs/contributors/?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/github/contributors/microsoft/Generative-AI-For-Beginners.svg?sanitize=true" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Generative-AI-For-Beginners/issues/?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/github/issues/microsoft/Generative-AI-For-Beginners.svg?sanitize=true" alt="GitHub issues" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Generative-AI-For-Beginners/pulls/?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/github/issues-pr/microsoft/Generative-AI-For-Beginners.svg?sanitize=true" alt="GitHub pull-requests" /&gt;&lt;/a&gt; &lt;a href="http://makeapullrequest.com?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/Generative-AI-For-Beginners/watchers/?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/github/watchers/microsoft/Generative-AI-For-Beginners.svg?style=social&amp;amp;label=Watch" alt="GitHub watchers" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Generative-AI-For-Beginners/network/?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/github/forks/microsoft/Generative-AI-For-Beginners.svg?style=social&amp;amp;label=Fork" alt="GitHub forks" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Generative-AI-For-Beginners/stargazers/?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://img.shields.io/github/stars/microsoft/Generative-AI-For-Beginners.svg?style=social&amp;amp;label=Star" alt="GitHub stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://aka.ms/genai-discord?WT.mc_id=academic-105485-koreyst"&gt;&lt;img src="https://dcbadge.limes.pink/api/server/ByRwuEEgH4" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;🌐 Multi-Language Support&lt;/h3&gt; 
&lt;h4&gt;Supported via GitHub Action (Automated &amp;amp; Always Up-to-Date)&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/fr/README.md"&gt;French&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/es/README.md"&gt;Spanish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/de/README.md"&gt;German&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ru/README.md"&gt;Russian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ar/README.md"&gt;Arabic&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/fa/README.md"&gt;Persian (Farsi)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ur/README.md"&gt;Urdu&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/zh/README.md"&gt;Chinese (Simplified)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/mo/README.md"&gt;Chinese (Traditional, Macau)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/hk/README.md"&gt;Chinese (Traditional, Hong Kong)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/tw/README.md"&gt;Chinese (Traditional, Taiwan)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ja/README.md"&gt;Japanese&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ko/README.md"&gt;Korean&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/hi/README.md"&gt;Hindi&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/bn/README.md"&gt;Bengali&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/mr/README.md"&gt;Marathi&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ne/README.md"&gt;Nepali&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/pa/README.md"&gt;Punjabi (Gurmukhi)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/pt/README.md"&gt;Portuguese (Portugal)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/br/README.md"&gt;Portuguese (Brazil)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/it/README.md"&gt;Italian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/pl/README.md"&gt;Polish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/tr/README.md"&gt;Turkish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/el/README.md"&gt;Greek&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/th/README.md"&gt;Thai&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/sv/README.md"&gt;Swedish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/da/README.md"&gt;Danish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/no/README.md"&gt;Norwegian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/fi/README.md"&gt;Finnish&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/nl/README.md"&gt;Dutch&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/he/README.md"&gt;Hebrew&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/vi/README.md"&gt;Vietnamese&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/id/README.md"&gt;Indonesian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ms/README.md"&gt;Malay&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/tl/README.md"&gt;Tagalog (Filipino)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/sw/README.md"&gt;Swahili&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/hu/README.md"&gt;Hungarian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/cs/README.md"&gt;Czech&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/sk/README.md"&gt;Slovak&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/ro/README.md"&gt;Romanian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/bg/README.md"&gt;Bulgarian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/sr/README.md"&gt;Serbian (Cyrillic)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/hr/README.md"&gt;Croatian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/sl/README.md"&gt;Slovenian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/uk/README.md"&gt;Ukrainian&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/translations/my/README.md"&gt;Burmese (Myanmar)&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Generative AI for Beginners (Version 3) - A Course&lt;/h1&gt; 
&lt;p&gt;Learn the fundamentals of building Generative AI applications with our 21-lesson comprehensive course by Microsoft Cloud Advocates.&lt;/p&gt; 
&lt;h2&gt;🌱 Getting Started&lt;/h2&gt; 
&lt;p&gt;This course has 21 lessons. Each lesson covers its own topic so start wherever you like!&lt;/p&gt; 
&lt;p&gt;Lessons are labeled either "Learn" lessons explaining a Generative AI concept or "Build" lessons that explain a concept and code examples in both &lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;TypeScript&lt;/strong&gt; when possible.&lt;/p&gt; 
&lt;p&gt;For .NET Developers checkout &lt;a href="https://github.com/microsoft/Generative-AI-for-beginners-dotnet?WT.mc_id=academic-105485-koreyst"&gt;Generative AI for Beginners (.NET Edition)&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;Each lesson also includes a "Keep Learning" section with additional learning tools.&lt;/p&gt; 
&lt;h2&gt;What You Need&lt;/h2&gt; 
&lt;h3&gt;To run the code of this course, you can use either:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://aka.ms/genai-beginners/azure-open-ai?WT.mc_id=academic-105485-koreyst"&gt;Azure OpenAI Service&lt;/a&gt; - &lt;strong&gt;Lessons:&lt;/strong&gt; "aoai-assignment"&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://aka.ms/genai-beginners/gh-models?WT.mc_id=academic-105485-koreyst"&gt;GitHub Marketplace Model Catalog&lt;/a&gt; - &lt;strong&gt;Lessons:&lt;/strong&gt; "githubmodels"&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://aka.ms/genai-beginners/open-ai?WT.mc_id=academic-105485-koreyst"&gt;OpenAI API&lt;/a&gt; - &lt;strong&gt;Lessons:&lt;/strong&gt; "oai-assignment"&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Basic knowledge of Python or TypeScript is helpful - *For absolute beginners check out these &lt;a href="https://aka.ms/genai-beginners/python?WT.mc_id=academic-105485-koreyst"&gt;Python&lt;/a&gt; and &lt;a href="https://aka.ms/genai-beginners/typescript?WT.mc_id=academic-105485-koreyst"&gt;TypeScript&lt;/a&gt; courses&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;A GitHub account to &lt;a href="https://aka.ms/genai-beginners/github?WT.mc_id=academic-105485-koreyst"&gt;fork this entire repo&lt;/a&gt; to your own GitHub account&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We have created a &lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/00-course-setup/README.md?WT.mc_id=academic-105485-koreyst"&gt;Course Setup&lt;/a&gt;&lt;/strong&gt; lesson to help you with setting up your development environment.&lt;/p&gt; 
&lt;p&gt;Don't forget to &lt;a href="https://docs.github.com/en/get-started/exploring-projects-on-github/saving-repositories-with-stars?WT.mc_id=academic-105485-koreyst"&gt;star (🌟) this repo&lt;/a&gt; to find it easier later.&lt;/p&gt; 
&lt;h2&gt;🧠 Ready to Deploy?&lt;/h2&gt; 
&lt;p&gt;If you are looking for more advanced code samples, check out our &lt;a href="https://aka.ms/genai-beg-code?WT.mc_id=academic-105485-koreyst"&gt;collection of Generative AI Code Samples&lt;/a&gt; in both &lt;strong&gt;Python&lt;/strong&gt; and &lt;strong&gt;TypeScript&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;🗣️ Meet Other Learners, Get Support&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://aka.ms/genai-discord?WT.mc_id=academic-105485-koreyst"&gt;official Azure AI Foundry Discord server&lt;/a&gt; to meet and network with other learners taking this course and get support.&lt;/p&gt; 
&lt;p&gt;Ask questions or share product feedback in our &lt;a href="https://aka.ms/azureaifoundry/forum"&gt;Azure AI Foundry Developer Forum&lt;/a&gt; on Github.&lt;/p&gt; 
&lt;h2&gt;🚀 Building a Startup?&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://www.microsoft.com/startups"&gt;Microsoft for Startups&lt;/a&gt; to find out how to get started building with Azure credits today.&lt;/p&gt; 
&lt;h2&gt;🙏 Want to help?&lt;/h2&gt; 
&lt;p&gt;Do you have suggestions or found spelling or code errors? &lt;a href="https://github.com/microsoft/generative-ai-for-beginners/issues?WT.mc_id=academic-105485-koreyst"&gt;Raise an issue&lt;/a&gt; or &lt;a href="https://github.com/microsoft/generative-ai-for-beginners/pulls?WT.mc_id=academic-105485-koreyst"&gt;Create a pull request&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📂 Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A short video introduction to the topic&lt;/li&gt; 
 &lt;li&gt;A written lesson located in the README&lt;/li&gt; 
 &lt;li&gt;Python and TypeScript code samples supporting Azure OpenAI and OpenAI API&lt;/li&gt; 
 &lt;li&gt;Links to extra resources to continue your learning&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🗃️ Lessons&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;#&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Lesson Link&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Video&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Extra Learning&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;00&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/00-course-setup/README.md?WT.mc_id=academic-105485-koreyst"&gt;Course Setup&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; How to Setup Your Development Environment&lt;/td&gt; 
   &lt;td&gt;Video Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;01&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/01-introduction-to-genai/README.md?WT.mc_id=academic-105485-koreyst"&gt;Introduction to Generative AI and LLMs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; Understanding what Generative AI is and how Large Language Models (LLMs) work.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson-1-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;02&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/02-exploring-and-comparing-different-llms/README.md?WT.mc_id=academic-105485-koreyst"&gt;Exploring and comparing different LLMs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; How to select the right model for your use case&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson2-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;03&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/03-using-generative-ai-responsibly/README.md?WT.mc_id=academic-105485-koreyst"&gt;Using Generative AI Responsibly&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; How to build Generative AI Applications responsibly&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson3-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;04&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/04-prompt-engineering-fundamentals/README.md?WT.mc_id=academic-105485-koreyst"&gt;Understanding Prompt Engineering Fundamentals&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; Hands-on Prompt Engineering Best Practices&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson4-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;05&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/05-advanced-prompts/README.md?WT.mc_id=academic-105485-koreyst"&gt;Creating Advanced Prompts&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; How to apply prompt engineering techniques that improve the outcome of your prompts.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson5-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;06&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/06-text-generation-apps/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building Text Generation Applications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; A text generation app using Azure OpenAI / OpenAI API&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson6-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;07&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/07-building-chat-applications/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building Chat Applications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; Techniques for efficiently building and integrating chat applications.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lessons7-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;08&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/08-building-search-applications/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building Search Apps Vector Databases&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; A search application that uses Embeddings to search for data.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson8-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;09&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/09-building-image-applications/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building Image Generation Applications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; An image generation application&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson9-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/10-building-low-code-ai-applications/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building Low Code AI Applications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; A Generative AI application using Low Code tools&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson10-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;11&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/11-integrating-with-function-calling/README.md?WT.mc_id=academic-105485-koreyst"&gt;Integrating External Applications with Function Calling&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; What is function calling and its use cases for applications&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson11-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;12&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/12-designing-ux-for-ai-applications/README.md?WT.mc_id=academic-105485-koreyst"&gt;Designing UX for AI Applications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; How to apply UX design principles when developing Generative AI Applications&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson12-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;13&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/13-securing-ai-applications/README.md?WT.mc_id=academic-105485-koreyst"&gt;Securing Your Generative AI Applications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; The threats and risks to AI systems and methods to secure these systems.&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson13-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;14&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/14-the-generative-ai-application-lifecycle/README.md?WT.mc_id=academic-105485-koreyst"&gt;The Generative AI Application Lifecycle&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; The tools and metrics to manage the LLM Lifecycle and LLMOps&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson14-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;15&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/15-rag-and-vector-databases/README.md?WT.mc_id=academic-105485-koreyst"&gt;Retrieval Augmented Generation (RAG) and Vector Databases&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; An application using a RAG Framework to retrieve embeddings from a Vector Databases&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson15-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;16&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/16-open-source-models/README.md?WT.mc_id=academic-105485-koreyst"&gt;Open Source Models and Hugging Face&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; An application using open source models available on Hugging Face&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson16-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;17&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/17-ai-agents/README.md?WT.mc_id=academic-105485-koreyst"&gt;AI Agents&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Build:&lt;/strong&gt; An application using an AI Agent Framework&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson17-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;18&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/18-fine-tuning/README.md?WT.mc_id=academic-105485-koreyst"&gt;Fine-Tuning LLMs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; The what, why and how of fine-tuning LLMs&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/gen-ai-lesson18-gh?WT.mc_id=academic-105485-koreyst"&gt;Video&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;19&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/19-slm/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building with SLMs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; The benefits of building with Small Language Models&lt;/td&gt; 
   &lt;td&gt;Video Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;20&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/20-mistral/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building with Mistral Models&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; The features and differences of the Mistral Family Models&lt;/td&gt; 
   &lt;td&gt;Video Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;21&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/generative-ai-for-beginners/main/21-meta/README.md?WT.mc_id=academic-105485-koreyst"&gt;Building with Meta Models&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;Learn:&lt;/strong&gt; The features and differences of the Meta Family Models&lt;/td&gt; 
   &lt;td&gt;Video Coming Soon&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://aka.ms/genai-collection?WT.mc_id=academic-105485-koreyst"&gt;Learn More&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;🌟 Special thanks&lt;/h3&gt; 
&lt;p&gt;Special thanks to &lt;a href="https://www.linkedin.com/in/john0isaac/"&gt;&lt;strong&gt;John Aziz&lt;/strong&gt;&lt;/a&gt; for creating all of the GitHub Actions and workflows&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.linkedin.com/in/bernhard-merkle-738b73/"&gt;&lt;strong&gt;Bernhard Merkle&lt;/strong&gt;&lt;/a&gt; for making key contributions to each lesson to improve the learner and code experience.&lt;/p&gt; 
&lt;h2&gt;🎒 Other Courses&lt;/h2&gt; 
&lt;p&gt;Our team produces other courses! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/mcp-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;&lt;strong&gt;NEW&lt;/strong&gt; Model Context Protocol for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/ai-agents-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;AI Agents for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Generative-AI-for-beginners-dotnet?WT.mc_id=academic-105485-koreyst"&gt;Generative AI for Beginners using .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/genai-js-course?WT.mc_id=academic-105485-koreyst"&gt;Generative AI for Beginners using JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/genaijava?WT.mc_id=academic-105485-koreyst"&gt;Generative AI for Beginners using Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ml-beginners?WT.mc_id=academic-105485-koreyst"&gt;ML for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/datascience-beginners?WT.mc_id=academic-105485-koreyst"&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-beginners?WT.mc_id=academic-105485-koreyst"&gt;AI for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Security-101??WT.mc_id=academic-96948-sayoung"&gt;Cybersecurity for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/webdev-beginners?WT.mc_id=academic-105485-koreyst"&gt;Web Dev for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/iot-beginners?WT.mc_id=academic-105485-koreyst"&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/xr-development-for-beginners?WT.mc_id=academic-105485-koreyst"&gt;XR Development for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/GitHubCopilotAI?WT.mc_id=academic-105485-koreyst"&gt;Mastering GitHub Copilot for AI Paired Programming&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers?WT.mc_id=academic-105485-koreyst"&gt;Mastering GitHub Copilot for C#/.NET Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/CopilotAdventures?WT.mc_id=academic-105485-koreyst"&gt;Choose Your Own Copilot Adventure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>willccbb/verifiers</title>
      <link>https://github.com/willccbb/verifiers</link>
      <description>&lt;p&gt;Verifiers for LLM Reinforcement Learning&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p align="center"&gt; &lt;/p&gt;
 &lt;h1&gt;Verifiers&lt;/h1&gt; 
 &lt;p&gt;&lt;/p&gt; 
 &lt;p&gt; Environments for LLM Reinforcement Learning &lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;p&gt;Verifiers is a library of modular components for creating RL environments and training LLM agents. Verifiers includes an async GRPO implementation built around the &lt;code&gt;transformers&lt;/code&gt; Trainer, is supported by &lt;code&gt;prime-rl&lt;/code&gt; for large-scale FSDP training, and can easily be integrated into any RL framework which exposes an OpenAI-compatible inference client. In addition to RL training, Verifiers can be used directly for building LLM evaluations, creating synthetic data pipelines, and implementing agent harnesses.&lt;/p&gt; 
&lt;p&gt;Full documentation is available &lt;a href="https://verifiers.readthedocs.io/en/latest/"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Setup&lt;/h2&gt; 
&lt;p&gt;We recommend using &lt;code&gt;verifiers&lt;/code&gt; with along &lt;a href="https://docs.astral.sh/uv/getting-started/installation/"&gt;uv&lt;/a&gt; for dependency management in your own project:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;curl -LsSf https://astral.sh/uv/install.sh | sh
uv init # create a fresh project
source .venv/bin/activate
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For local (CPU) development and evaluation with API models, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv add verifiers # uv add 'verifiers[dev]' for Jupyter + testing support
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For training on GPUs with &lt;code&gt;vf.GRPOTrainer&lt;/code&gt;, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv add 'verifiers[all]' &amp;amp;&amp;amp; uv pip install flash-attn --no-build-isolation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use the latest &lt;code&gt;main&lt;/code&gt; branch, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;uv add verifiers @ git+https://github.com/willccbb/verifiers.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To use with &lt;code&gt;prime-rl&lt;/code&gt;, see &lt;a href="https://github.com/PrimeIntellect-ai/prime-rl"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install &lt;code&gt;verifiers&lt;/code&gt; from source for core library development, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/willccbb/verifiers.git
cd verifiers
uv sync --all-extras &amp;amp;&amp;amp; uv pip install flash-attn --no-build-isolation
uv run pre-commit install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In general, we recommend that you build and train Environments &lt;em&gt;with&lt;/em&gt; &lt;code&gt;verifiers&lt;/code&gt;, not &lt;em&gt;in&lt;/em&gt; &lt;code&gt;verifiers&lt;/code&gt;. If you find yourself needing to clone and modify the core library in order to implement key functionality for your project, we'd love for you to open an issue so that we can try and streamline the development experience. Our aim is for &lt;code&gt;verifiers&lt;/code&gt; to be a reliable toolkit to build on top of, and to minimize the "fork proliferation" which often pervades the RL infrastructure ecosystem.&lt;/p&gt; 
&lt;h2&gt;Environments&lt;/h2&gt; 
&lt;p&gt;Environments in Verifiers are installable Python modules which can specify dependencies in a &lt;code&gt;pyproject.toml&lt;/code&gt;, and which expose a &lt;code&gt;load_environment&lt;/code&gt; function for instantiation by downstream applications (e.g. trainers). See &lt;code&gt;environments/&lt;/code&gt; for examples.&lt;/p&gt; 
&lt;p&gt;To initialize a blank Environment module template, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;vf-init vf-environment-name # -p /path/to/environments (defaults to "./environments")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To an install an Environment module into your project, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;vf-install vf-environment-name # -p /path/to/environments (defaults to "./environments") 
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install an Environment module from this repo's &lt;code&gt;environments&lt;/code&gt; folder, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;vf-install vf-math-python --from-repo # -b branch_or_commit (defaults to "main")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once an Environment module is installed, you can create an instance of the Environment using &lt;code&gt;load_environment&lt;/code&gt;, passing any necessary args:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import verifiers as vf
vf_env = vf.load_environment("vf-environment-name", **env_args)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run a quick evaluation of your Environment with an API-based model, do:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;vf-eval vf-environment-name # vf-eval -h for config options; defaults to gpt-4.1-mini, 5 prompts, 3 rollouts for each
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The core elements of Environments in are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Datasets: a Hugging Face &lt;code&gt;Dataset&lt;/code&gt; with a &lt;code&gt;prompt&lt;/code&gt; column for inputs, and either &lt;code&gt;answer (str)&lt;/code&gt; or &lt;code&gt;info (dict)&lt;/code&gt; columns for evaluation&lt;/li&gt; 
 &lt;li&gt;Rollout logic: interactions between models and the environment (e.g. &lt;code&gt;env_response&lt;/code&gt; + &lt;code&gt;is_completed&lt;/code&gt; for any &lt;code&gt;MultiTurnEnv&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Rubrics: an encapsulation for one or more reward functions&lt;/li&gt; 
 &lt;li&gt;Parsers: optional; an encapsulation for reusable parsing logic&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We support both &lt;code&gt;/v1/chat/completions&lt;/code&gt;-style and &lt;code&gt;/v1/completions&lt;/code&gt;-style inference via OpenAI clients, though we generally recommend &lt;code&gt;/v1/chat/completions&lt;/code&gt;-style inference for the vast majority of applications. Both the included &lt;code&gt;GRPOTrainer&lt;/code&gt; as well as &lt;code&gt;prime-rl&lt;/code&gt; support the full set of &lt;a href="https://docs.vllm.ai/en/v0.6.0/dev/sampling_params.html"&gt;SamplingParams&lt;/a&gt; exposed by vLLM (via their OpenAI-compatible &lt;a href="https://docs.vllm.ai/en/latest/serving/openai_compatible_server.html"&gt;server&lt;/a&gt; interface), and leveraging this will often be the appropriate way to implement rollout strategies requiring finer-grained control, such as interrupting and resuming generations for interleaved tool use, or enforcing reasoning budgets.&lt;/p&gt; 
&lt;p&gt;The primary constraint we impose on rollout logic is that token sequences must be &lt;em&gt;increasing&lt;/em&gt;, i.e. once a token has been added to a model's context in a rollout, it must remain as the rollout progresses. Note that this causes issues with some popular reasoning models such as the Qwen3 and DeepSeek-R1-Distill series; see &lt;a href="https://raw.githubusercontent.com/willccbb/verifiers/main/#footguns"&gt;Footguns&lt;/a&gt; for guidance on adapting these models to support multi-turn rollouts.&lt;/p&gt; 
&lt;h3&gt;SingleTurnEnv&lt;/h3&gt; 
&lt;p&gt;For tasks requiring only a single response from a model for each prompt, you can use &lt;code&gt;SingleTurnEnv&lt;/code&gt; directly by specifying a Dataset and a Rubric.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from datasets import load_dataset
import verifiers as vf

dataset = load_dataset("my-account/my-dataset", split="train")

def reward_A(prompt, completion, info) -&amp;gt; float:
	# reward fn, e.g. correctness
	...

def reward_B(parser, completion) -&amp;gt; float:
	# auxiliary reward fn, e.g. format
	...

def metric(completion) -&amp;gt; float:
	# non-reward metric, e.g. proper noun count
	...

rubric = vf.Rubric(funcs=[reward_A, reward_B, metric], weights=[1.0, 0.5, 0.0])

vf_env = SingleTurnEnv(
	dataset=dataset,
	rubric=rubric
)
results = vf_env.evaluate(client=OpenAI(), model="gpt-4.1-mini", num_examples=100, rollouts_per_example=1)
vf_env.make_dataset(results, push_to_hub=True, hub_name="my-new-environment-eval-results") # save results to HF hub
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Datasets should be formatted with columns for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;'prompt' (List[ChatMessage])&lt;/code&gt; OR &lt;code&gt;'question' (str)&lt;/code&gt; fields 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;ChatMessage&lt;/code&gt; = e.g. &lt;code&gt;{'role': 'user', 'content': '...'}&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;if &lt;code&gt;question&lt;/code&gt; is set instead of &lt;code&gt;prompt&lt;/code&gt;, you can also pass &lt;code&gt;system_prompt (str)&lt;/code&gt; and/or &lt;code&gt;few_shot (List[ChatMessage])&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;answer (str)&lt;/code&gt; AND/OR &lt;code&gt;info (dict)&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;task (str)&lt;/code&gt;: optional, used by &lt;code&gt;EnvGroup&lt;/code&gt; and &lt;code&gt;RubricGroup&lt;/code&gt; for orchestrating composition of Environments and Rubrics&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following named attributes available for use by reward functions in your Rubric:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;prompt&lt;/code&gt;: sequence of input messages&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;completion&lt;/code&gt;: sequence of messages generated during rollout by model and Environment&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;answer&lt;/code&gt;: primary answer column, optional if &lt;code&gt;info&lt;/code&gt; is used&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;state&lt;/code&gt;: can be modified during rollout to accumulate any metadata (&lt;code&gt;state['responses']&lt;/code&gt; includes full OpenAI response objects by default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;info&lt;/code&gt;: auxiliary info needed for reward computation (e.g. test cases), optional if &lt;code&gt;answer&lt;/code&gt; is used&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;task&lt;/code&gt;: tag for task type (used by &lt;code&gt;EnvGroup&lt;/code&gt; and &lt;code&gt;RubricGroup&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;parser&lt;/code&gt;: the parser object declared. Note: &lt;code&gt;vf.Parser().get_format_reward_func()&lt;/code&gt; is a no-op (always 1.0); use &lt;code&gt;vf.ThinkParser&lt;/code&gt; or a custom parser if you want a real format adherence reward.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For tasks involving LLM judges, you may wish to use &lt;code&gt;vf.JudgeRubric()&lt;/code&gt; for managing requests to auxiliary models.&lt;/p&gt; 
&lt;p&gt;Note on concurrency: environment APIs accept &lt;code&gt;max_concurrent&lt;/code&gt; to control parallel rollouts. The &lt;code&gt;vf-eval&lt;/code&gt; CLI currently exposes &lt;code&gt;--max-concurrent-requests&lt;/code&gt;; ensure this maps to your environment’s concurrency as expected.&lt;/p&gt; 
&lt;h3&gt;ToolEnv&lt;/h3&gt; 
&lt;p&gt;For many applications involving tool use, you can use &lt;code&gt;ToolEnv&lt;/code&gt; to leverage models' native tool/function-calling capabilities in an agentic loop. Tools can be specified as generic Python functions (with type hints and docstrings), which will then be passed in JSON schema form to each inference request.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import verifiers as vf
vf_env = vf.ToolEnv(
	dataset= ... # HF Dataset with 'prompt'/'question' + 'answer'/'info' columns
	rubric= ... # Rubric object; vf.ToolRubric() can be optionally used for counting tool invocations in each rollout
	tools=[search_tool, read_article_tool, python_tool], # python functions with type hints + docstrings
	max_turns=10
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In cases where your tools require heavy computational resources, we recommend hosting your tools as standalone servers (e.g. MCP servers) and creating lightweight wrapper functions to pass to &lt;code&gt;ToolEnv&lt;/code&gt;. Parallel tool call support is enabled by default.&lt;/p&gt; 
&lt;p&gt;For training, or self-hosted endpoints, you'll want to enable auto tool choice in &lt;a href="https://docs.vllm.ai/en/stable/features/tool_calling.html#automatic-function-calling"&gt;vLLM&lt;/a&gt; with the appropriate parser. If your model does not support native tool calling, you may find the &lt;code&gt;XMLParser&lt;/code&gt; abstraction useful for rolling your own tool call parsing on top of &lt;code&gt;MultiTurnEnv&lt;/code&gt;; see &lt;code&gt;environments/xml_tool_env&lt;/code&gt; for an example.&lt;/p&gt; 
&lt;h3&gt;MultiTurnEnv&lt;/h3&gt; 
&lt;p&gt;Both &lt;code&gt;SingleTurnEnv&lt;/code&gt; and &lt;code&gt;ToolEnv&lt;/code&gt; are instances of &lt;code&gt;MultiTurnEnv&lt;/code&gt;, which exposes an interface for writing custom Environment interaction protocols. The two methods you must override are&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from typing import Tuple
import verifiers as vf
from verifiers.types import Messages, State
class YourMultiTurnEnv(vf.MultiTurnEnv):
    def __init__(self,
                 dataset: Dataset,
                 rubric: Rubric,
				 max_turns: int,
                 **kwargs):
	
  def is_completed(self, messages: Messages, state: State, **kwargs) -&amp;gt; bool:
    # return whether or not a rollout is completed

  def env_response(self, messages: Messages, state: State, **kwargs) -&amp;gt; Tuple[Messages, State]:
    # return new environment message(s) + updated state
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If your application requires more fine-grained control than is allowed by &lt;code&gt;MultiTurnEnv&lt;/code&gt;, you may want to inherit from the base &lt;code&gt;Environment&lt;/code&gt; functionality directly and override the &lt;code&gt;rollout&lt;/code&gt; method.&lt;/p&gt; 
&lt;h2&gt;Training&lt;/h2&gt; 
&lt;h3&gt;GRPOTrainer&lt;/h3&gt; 
&lt;p&gt;The included trainer (&lt;code&gt;vf.GRPOTrainer&lt;/code&gt;) supports running GRPO-style RL training via Accelerate/DeepSpeed, and uses vLLM for inference. It supports both full-parameter finetuning, and is optimized for efficiently training dense transformer models on 2-16 GPUs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# install environment
vf-install vf-wordle (-p /path/to/environments | --from-repo)

# quick eval
vf-eval vf-wordle -m (model_name in configs/endpoints.py) -n NUM_EXAMPLES -r ROLLOUTS_PER_EXAMPLE

# inference (shell 0)
CUDA_VISIBLE_DEVICES=0,1,2,3,4,5 vf-vllm --model willcb/Qwen3-1.7B-Wordle \
    --data-parallel-size 7 --enforce-eager --disable-log-requests

# training (shell 1)
CUDA_VISIBLE_DEVICES=6,7 accelerate launch --num-processes 2 \
    --config-file configs/zero3.yaml examples/grpo/train_wordle.py --size 1.7B
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, you can train environments with the external &lt;code&gt;prime-rl&lt;/code&gt; project (FSDP-first orchestration). See the &lt;code&gt;prime-rl&lt;/code&gt; README for installation and examples. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-toml"&gt;# orchestrator config (prime-rl)
[environment]
id = "vf-math-python"  # or your environment ID
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# run (prime-rl)
uv run rl \
  --trainer @ configs/your_exp/train.toml \
  --orchestrator @ configs/your_exp/orch.toml \
  --inference @ configs/your_exp/infer.toml
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ensure your &lt;code&gt;wandb&lt;/code&gt; and &lt;code&gt;huggingface-cli&lt;/code&gt; logins are set up (or set &lt;code&gt;report_to=None&lt;/code&gt; in &lt;code&gt;training_args&lt;/code&gt;). You should also have something set as your &lt;code&gt;OPENAI_API_KEY&lt;/code&gt; in your environment (can be a dummy key for vLLM).&lt;/li&gt; 
 &lt;li&gt;If using high max concurrency, increase the number of allowed open sockets (e.g. &lt;code&gt;ulimit -n 4096&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;On some setups, inter-GPU communication can &lt;a href="https://github.com/huggingface/trl/issues/2923"&gt;hang&lt;/a&gt; or crash during vLLM weight syncing. This can usually be alleviated by setting (or unsetting) &lt;code&gt;NCCL_P2P_DISABLE=1&lt;/code&gt; in your environment (or potentially &lt;code&gt;NCCL_CUMEM_ENABLE=1&lt;/code&gt;). Try this as your first step if you experience NCCL-related issues.&lt;/li&gt; 
 &lt;li&gt;If problems persist, please open an &lt;a href="https://github.com/willccbb/verifiers/issues"&gt;issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Resource Requirements&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;GRPOTrainer&lt;/code&gt; is optimized for setups with at least 2 GPUs, scaling up to multiple nodes. 2-GPU setups with sufficient memory to enable small-scale experimentation can be &lt;a href="https://app.primeintellect.ai/dashboard/create-cluster?image=ubuntu_22_cuda_12"&gt;rented&lt;/a&gt; for &amp;lt;$1/hr.&lt;/p&gt; 
&lt;h3&gt;PRIME-RL&lt;/h3&gt; 
&lt;p&gt;If you do not require LoRA support, you may want to use the &lt;code&gt;prime-rl&lt;/code&gt; trainer, which natively supports Environments created using &lt;code&gt;verifiers&lt;/code&gt;, is more optimized for performance and scalability via FSDP, includes a broader set of configuration options and user experience features, and has more battle-tested defaults. Both trainers support asynchronous rollouts, and use a one-step off-policy delay by default for overlapping training and inference. See the &lt;code&gt;prime-rl&lt;/code&gt; &lt;a href="https://github.com/PrimeIntellect-ai/prime-rl"&gt;docs&lt;/a&gt; for usage instructions.&lt;/p&gt; 
&lt;h2&gt;Further Documentation&lt;/h2&gt; 
&lt;p&gt;See the full &lt;a href="https://verifiers.readthedocs.io/en/latest/"&gt;docs&lt;/a&gt; for more info, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Dataset configuration options (system prompts, few-shot examples, eval datasets)&lt;/li&gt; 
 &lt;li&gt;Parsers (e.g. ThinkParser, XMLParser)&lt;/li&gt; 
 &lt;li&gt;Advanced Rubric patterns&lt;/li&gt; 
 &lt;li&gt;Composing Environments (EnvGroup) and Rubrics (RubricGroup)&lt;/li&gt; 
 &lt;li&gt;Creating and saving rollout datasets using Environments&lt;/li&gt; 
 &lt;li&gt;More Environment example walkthroughs&lt;/li&gt; 
 &lt;li&gt;Hardware considerations&lt;/li&gt; 
 &lt;li&gt;SFT warmup for improving small-model training efficiency&lt;/li&gt; 
 &lt;li&gt;RL + GRPO best practices&lt;/li&gt; 
 &lt;li&gt;Common footguns&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Footguns&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Non-Increasing Chat Templates:&lt;/strong&gt; The Qwen3 and DeepSeek-R1 model series both remove &lt;code&gt;&amp;lt;think&amp;gt;&lt;/code&gt; sections from messages when processing inputs, which violates the increasing context requirement for multi-turn GRPO-style training. We provide versions of many of these models with modified chat templates &lt;a href="https://huggingface.co/collections/willcb/qwen3-68434f4883925bfdb4570ee5"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;p&gt;Verifiers warmly welcomes community contributions! Please open an issue or PR if you encounter bugs or other pain points during your development, or start a discussion for more open-ended questions.&lt;/p&gt; 
&lt;p&gt;Please note that the core &lt;code&gt;verifiers/&lt;/code&gt; library is intended to be a relatively lightweight set of reusable components rather than an exhaustive catalog of RL environments. For &lt;em&gt;applications&lt;/em&gt; of &lt;code&gt;verifiers&lt;/code&gt; (e.g. "an Environment for XYZ task"), you are welcome to submit a PR for a self-contained module that lives within &lt;code&gt;environments/&lt;/code&gt; if it serves as a canonical example of a new pattern. Stay tuned for more info shortly about our plans for supporting community Environment contributions 🙂&lt;/p&gt; 
&lt;h2&gt;Citation&lt;/h2&gt; 
&lt;p&gt;If you use this code in your research, please cite:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bibtex"&gt;@misc{brown_verifiers_2025,
  author       = {William&amp;nbsp;Brown},
  title        = {{Verifiers}: Reinforcement Learning with LLMs in Verifiable Environments},
  howpublished = {\url{https://github.com/willccbb/verifiers}},
  note         = {Commit abcdefg • accessed DD Mon YYYY},
  year         = {2025}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;A community Environments hub for crowdsourcing, sharing, and discovering new RL environments built with &lt;code&gt;verifiers&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Default patterns for hosted resources such as code sandboxes, auxiliary models, and MCP servers&lt;/li&gt; 
 &lt;li&gt;Multimodal input support&lt;/li&gt; 
 &lt;li&gt;Non-increasing token sequences via REINFORCE&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>asgeirtj/system_prompts_leaks</title>
      <link>https://github.com/asgeirtj/system_prompts_leaks</link>
      <description>&lt;p&gt;Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude &amp; Gemini&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NEW: 23 Aug 2025 &lt;a href="https://github.com/asgeirtj/system_prompts_leaks/raw/main/OpenAI/gpt-5-thinking.md"&gt;OpenAI/gpt-5-thinking.md &lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;System Prompts Leaks&lt;/h1&gt; 
&lt;p&gt;Collection of system message instructions for various publicly deployed chatbots.&lt;/p&gt; 
&lt;p&gt;Feel free to do PR's.&lt;/p&gt; 
&lt;p&gt;Please use discussions tabs for discussions not the Issues tab.&lt;/p&gt; 
&lt;p&gt;Discord username: asgeirtj&lt;br /&gt; X profile: &lt;a href="https://x.com/asgeirtj"&gt;https://x.com/asgeirtj&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#asgeirtj/system_prompts_leaks&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=asgeirtj/system_prompts_leaks&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>anuraghazra/github-readme-stats</title>
      <link>https://github.com/anuraghazra/github-readme-stats</link>
      <description>&lt;p&gt;⚡ Dynamically generated stats for your github readmes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img width="100px" src="https://res.cloudinary.com/anuraghazra/image/upload/v1594908242/logo_ccswme.svg?sanitize=true" align="center" alt="GitHub Readme Stats" /&gt; &lt;/p&gt;
&lt;h2 align="center"&gt;GitHub Readme Stats&lt;/h2&gt; 
&lt;p align="center"&gt;Get dynamically generated GitHub stats on your READMEs!&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/actions"&gt; &lt;img alt="Tests Passing" src="https://github.com/anuraghazra/github-readme-stats/workflows/Test/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/graphs/contributors"&gt; &lt;img alt="GitHub Contributors" src="https://img.shields.io/github/contributors/anuraghazra/github-readme-stats" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/anuraghazra/github-readme-stats"&gt; &lt;img alt="Tests Coverage" src="https://codecov.io/gh/anuraghazra/github-readme-stats/branch/master/graph/badge.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues"&gt; &lt;img alt="Issues" src="https://img.shields.io/github/issues/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/pulls"&gt; &lt;img alt="GitHub pull requests" src="https://img.shields.io/github/issues-pr/anuraghazra/github-readme-stats?color=0088ff" /&gt; &lt;/a&gt; &lt;a href="https://securityscorecards.dev/viewer/?uri=github.com/anuraghazra/github-readme-stats"&gt; &lt;img alt="OpenSSF Scorecard" src="https://api.securityscorecards.dev/projects/github.com/anuraghazra/github-readme-stats/badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;br /&gt; &lt;a href="https://vercel.com?utm\_source=github\_readme\_stats\_team\&amp;amp;utm\_campaign=oss"&gt; &lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;View Demo&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=bug&amp;amp;projects=&amp;amp;template=bug_report.yml"&gt;Report Bug&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/new?assignees=&amp;amp;labels=enhancement&amp;amp;projects=&amp;amp;template=feature_request.yml"&gt;Request Feature&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/1770"&gt;FAQ&lt;/a&gt; · &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/new?category=q-a"&gt;Ask Question&lt;/a&gt; &lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt;Love the project? Please consider &lt;a href="https://www.paypal.me/anuraghazra"&gt;donating&lt;/a&gt; to help it improve!&lt;/p&gt; 
&lt;a href="https://indiafightscorona.giveindia.org"&gt; &lt;img src="https://cfstatic.give.do/logo.png" alt="Give india logo" width="200" /&gt; &lt;/a&gt; 
&lt;p&gt;Are you considering supporting the project by donating to me? Please DO NOT!!!&lt;/p&gt; 
&lt;img src="https://cfstatic.give.do/910ede2a-7892-43fe-8c8a-dea45e96d950.webp" alt="Picture of Coromandel Express train tragedy" width="35%" /&gt; 
&lt;p&gt;India has recently suffered one of the most devastating train accidents, and your help will be immensely valuable for the people who were affected by this tragedy.&lt;/p&gt; 
&lt;p&gt;Please visit &lt;a href="https://give.do/fundraisers/stand-beside-the-victims-of-the-coromandel-express-train-tragedy-in-odisha-donate-now"&gt;this link&lt;/a&gt; and make a small donation to help the people in need. A small donation goes a long way. &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;h1&gt;Features 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-stats-card"&gt;GitHub Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;Hiding individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;Showing additional individual stats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-icons"&gt;Showing icons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;Themes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;Customization&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-extra-pins"&gt;GitHub Extra Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#github-gist-pins"&gt;GitHub Gist Pins&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-1"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-1"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#top-languages-card"&gt;Top Languages Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#usage-2"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#exclude-individual-repositories"&gt;Exclude individual repositories&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;Hide individual languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#show-more-languages"&gt;Show more languages&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#compact-language-card-layout"&gt;Compact Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-chart-language-card-layout"&gt;Donut Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#donut-vertical-chart-language-card-layout"&gt;Donut Vertical Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#pie-chart-language-card-layout"&gt;Pie Chart Language Card Layout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-progress-bars"&gt;Hide Progress Bars&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-2"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#wakatime-stats-card"&gt;WakaTime Stats Card&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#demo-3"&gt;Demo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#all-demos"&gt;All Demos&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#quick-tip-align-the-cards"&gt;Quick Tip (Align The Cards)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;Deploy on your own&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-vercel"&gt;On Vercel&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#film_projector-check-out-step-by-step-video-tutorial-by-codestackr"&gt;&lt;span&gt;📽&lt;/span&gt; Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#on-other-platforms"&gt;On other platforms&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;Disable rate limit protections&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#keep-your-fork-up-to-date"&gt;Keep your fork up to date&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#sparkling_heart-support-the-project"&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Important Notices 
 &lt;!-- omit in toc --&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Since the GitHub API only &lt;a href="https://docs.github.com/en/graphql/overview/resource-limitations"&gt;allows 5k requests per hour per user account&lt;/a&gt;, the public Vercel instance hosted on &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). We use caching to prevent this from happening (see &lt;a href="https://github.com/anuraghazra/github-readme-stats#common-options"&gt;https://github.com/anuraghazra/github-readme-stats#common-options&lt;/a&gt;). You can turn off these rate limit protections by deploying &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;your own Vercel instance&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;img alt="Uptime Badge" src="https://img.shields.io/endpoint?url=https%3A%2F%2Fgithub-readme-stats-git-monitoring-github-readme-stats-team.vercel.app%2Fapi%2Fstatus%2Fup%3Ftype%3Dshields" /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; We're a small team, and to prioritize, we rely on upvotes &lt;span&gt;👍&lt;/span&gt;. We use the Top Issues dashboard for tracking community demand (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1935"&gt;#1935&lt;/a&gt;). Do not hesitate to upvote the issues and pull requests you are interested in. We will work on the most upvoted first.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;GitHub Stats Card&lt;/h1&gt; 
&lt;p&gt;Copy and paste this into your markdown, and that's it. Simple!&lt;/p&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your GitHub username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the stats card only shows statistics like stars, commits, and pull requests from public repositories. To show private statistics on the stats card, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Available ranks are S (top 1%), A+ (12.5%), A (25%), A- (37.5%), B+ (50%), B (62.5%), B- (75%), C+ (87.5%) and C (everyone). This ranking scheme is based on the &lt;a href="https://wikipedia.org/wiki/Academic_grading_in_Japan"&gt;Japanese academic grading&lt;/a&gt; system. The global percentile is calculated as a weighted sum of percentiles for each statistic (number of commits, pull requests, reviews, issues, stars, and followers), based on the cumulative distribution function of the &lt;a href="https://wikipedia.org/wiki/exponential_distribution"&gt;exponential&lt;/a&gt; and the &lt;a href="https://wikipedia.org/wiki/Log-normal_distribution"&gt;log-normal&lt;/a&gt; distributions. The implementation can be investigated at &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/src/calculateRank.js"&gt;src/calculateRank.js&lt;/a&gt;. The circle around the rank shows 100 minus the global percentile.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Hiding individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;hide=&lt;/code&gt; to hide any specific stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;hide=stars,commits,prs,issues,contribs&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,prs)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing additional individual stats&lt;/h3&gt; 
&lt;p&gt;You can pass a query parameter &lt;code&gt;&amp;amp;show=&lt;/code&gt; to show any specific additional stats with comma-separated values.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Options: &lt;code&gt;&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Showing icons&lt;/h3&gt; 
&lt;p&gt;To enable icons, you can pass &lt;code&gt;&amp;amp;show_icons=true&lt;/code&gt; in the query param, like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Themes&lt;/h3&gt; 
&lt;p&gt;With inbuilt themes, you can customize the look of the card without doing any &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#customization"&gt;manual customization&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Use &lt;code&gt;&amp;amp;theme=THEME_NAME&lt;/code&gt; parameter like so :&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;All inbuilt themes&lt;/h4&gt; 
&lt;p&gt;GitHub Readme Stats comes with several built-in themes (e.g. &lt;code&gt;dark&lt;/code&gt;, &lt;code&gt;radical&lt;/code&gt;, &lt;code&gt;merko&lt;/code&gt;, &lt;code&gt;gruvbox&lt;/code&gt;, &lt;code&gt;tokyonight&lt;/code&gt;, &lt;code&gt;onedark&lt;/code&gt;, &lt;code&gt;cobalt&lt;/code&gt;, &lt;code&gt;synthwave&lt;/code&gt;, &lt;code&gt;highcontrast&lt;/code&gt;, &lt;code&gt;dracula&lt;/code&gt;).&lt;/p&gt; 
&lt;img src="https://res.cloudinary.com/anuraghazra/image/upload/v1595174536/grs-themes_l4ynja.png" alt="GitHub Readme Stats Themes" width="600px" /&gt; 
&lt;p&gt;You can look at a preview for &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt; or checkout the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/index.js"&gt;theme config file&lt;/a&gt;. Please note that we paused the addition of new themes to decrease maintenance efforts; all pull requests related to new themes will be closed.&lt;/p&gt; 
&lt;h4&gt;Responsive Card Theme&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#responsive-card-theme#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Since GitHub will re-upload the cards and serve them from their &lt;a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/about-anonymized-urls"&gt;CDN&lt;/a&gt;, we can not infer the browser/GitHub theme on the server side. There are, however, four methods you can use to create dynamics themes on the client side.&lt;/p&gt; 
&lt;h5&gt;Use the transparent theme&lt;/h5&gt; 
&lt;p&gt;We have included a &lt;code&gt;transparent&lt;/code&gt; theme that has a transparent background. This theme is optimized to look good on GitHub's dark and light default themes. You can enable this theme using the &lt;code&gt;&amp;amp;theme=transparent&lt;/code&gt; parameter like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=transparent" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Add transparent alpha channel to a themes bg_color&lt;/h5&gt; 
&lt;p&gt;You can use the &lt;code&gt;bg_color&lt;/code&gt; parameter to make any of &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;the available themes&lt;/a&gt; transparent. This is done by setting the &lt;code&gt;bg_color&lt;/code&gt; to a color with a transparent alpha channel (i.e. &lt;code&gt;bg_color=00000000&lt;/code&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Anurag's GitHub stats](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;bg_color=00000000" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's theme context tag&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2021-11-24-specify-theme-context-for-images-in-markdown/"&gt;GitHub's theme context&lt;/a&gt; tags to switch the theme based on the user GitHub theme automatically. This is done by appending &lt;code&gt;#gh-dark-mode-only&lt;/code&gt; or &lt;code&gt;#gh-light-mode-only&lt;/code&gt; to the end of an image URL. This tag will define whether the image specified in the markdown is only shown to viewers using a light or a dark GitHub theme:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Anurag's GitHub stats-Dark](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only)
[![Anurag's GitHub stats-Light](https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only)](https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only)
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-dark-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark#gh-dark-mode-only" alt="Anurag's GitHub stats-Dark" /&gt;&lt;/a&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats#gh-light-mode-only"&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=default#gh-light-mode-only" alt="Anurag's GitHub stats-Light" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h5&gt;Use GitHub's new media feature&lt;/h5&gt; 
&lt;p&gt;You can use &lt;a href="https://github.blog/changelog/2022-05-19-specify-theme-context-for-images-in-markdown-beta/"&gt;GitHub's new media feature&lt;/a&gt; in HTML to specify whether to display images for light or dark themes. This is done using the HTML &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; element in combination with the &lt;code&gt;prefers-color-scheme&lt;/code&gt; media feature.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;picture&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark"
    media="(prefers-color-scheme: dark)"
  /&amp;gt;
  &amp;lt;source
    srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true"
    media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)"
  /&amp;gt;
  &amp;lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&amp;gt;
&amp;lt;/picture&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;picture&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=dark" media="(prefers-color-scheme: dark)" /&gt; 
  &lt;source srcset="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" media="(prefers-color-scheme: light), (prefers-color-scheme: no-preference)" /&gt; 
  &lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true" /&gt; 
 &lt;/picture&gt; 
&lt;/details&gt; 
&lt;h3&gt;Customization&lt;/h3&gt; 
&lt;p&gt;You can customize the appearance of all your cards however you wish with URL parameters.&lt;/p&gt; 
&lt;h4&gt;Common Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;title_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's title color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Body text color.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;434d58&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;icon_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Icons color if available.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4c71f2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's border color. Does not apply when &lt;code&gt;hide_border&lt;/code&gt; is enabled.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;e4e2e2&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bg_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Card's background color.&lt;/td&gt; 
   &lt;td&gt;string (hex color or a gradient in the form of &lt;em&gt;angle,start,end&lt;/em&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;fffefe&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_border&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the card's border.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;theme&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Name of the theme, choose from &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/themes/README.md"&gt;all available themes&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;cache_seconds&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the cache header manually (min: 21600, max: 86400).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;21600&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the language in the card, you can check full list of available locales &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#available-locales"&gt;here&lt;/a&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;border_radius&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Corner rounding on the card.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;4.5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; We use caching to decrease the load on our servers (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425"&gt;https://github.com/anuraghazra/github-readme-stats/issues/1471#issuecomment-1271551425&lt;/a&gt;). Our cards have the following default cache hours: stats card - 24 hours, top languages card - 144 hours (6 days), pin card - 240 hours (10 days), gist card - 48 hours (2 days). If you want the data on your statistics card to be updated more often you can &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; and set &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#disable-rate-limit-protections"&gt;environment variable&lt;/a&gt; &lt;code&gt;CACHE_SECONDS&lt;/code&gt; to a value of your choosing.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h5&gt;Gradient in bg_color&lt;/h5&gt; 
&lt;p&gt;You can provide multiple comma-separated values in the bg_color option to render a gradient with the following format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;amp;bg_color=DEG,COLOR1,COLOR2,COLOR3...COLOR10
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Available locales&lt;/h5&gt; 
&lt;p&gt;Here is a list of all available locales:&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;zh-tw&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Chinese (Taiwan)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ar&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Arabic&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;cs&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Czech&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;de&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;German&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;English&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;bn&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Bengali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;es&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Spanish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;fr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;French&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;hu&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Hungarian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;it&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Italian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ja&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Japanese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;kr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Korean&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;nl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Dutch&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-pt&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Portugal)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pt-br&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Portuguese (Brazil)&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;np&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Nepali&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;el&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Greek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ru&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Russian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uk-ua&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Ukrainian&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
   &lt;td&gt; 
    &lt;table&gt; 
     &lt;thead&gt; 
      &lt;tr&gt; 
       &lt;th&gt;Code&lt;/th&gt; 
       &lt;th&gt;Locale&lt;/th&gt; 
      &lt;/tr&gt; 
     &lt;/thead&gt; 
     &lt;tbody&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;id&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Indonesian&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;ml&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Malayalam&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;my&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Burmese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;sk&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Slovak&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;tr&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Turkish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;pl&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Polish&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;uz&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Uzbek&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;vi&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Vietnamese&lt;/td&gt; 
      &lt;/tr&gt; 
      &lt;tr&gt; 
       &lt;td&gt;&lt;code&gt;se&lt;/code&gt;&lt;/td&gt; 
       &lt;td&gt;Swedish&lt;/td&gt; 
      &lt;/tr&gt; 
     &lt;/tbody&gt; 
    &lt;/table&gt; &lt;/td&gt;
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;p&gt;If we don't support your language, please consider contributing! You can find more information about how to do it in our &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/CONTRIBUTING.md#translations-contribution"&gt;contributing guidelines&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Stats Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hiding-individual-stats"&gt;specified items&lt;/a&gt; from stats.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your stats card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;500px (approx.)&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_rank&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the rank and automatically resizes the card width.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;rank_icon&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows alternative rank icon (i.e. &lt;code&gt;github&lt;/code&gt;, &lt;code&gt;percentile&lt;/code&gt; or &lt;code&gt;default&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_icons&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows icons near all stats.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;include_all_commits&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Count total commits instead of just the current year commits.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;&amp;lt;username&amp;gt; GitHub Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;text_bold&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses bold text.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ring_color&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Color of the rank circle.&lt;/td&gt; 
   &lt;td&gt;string (hex color)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;2f80ed&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;number_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available formats for displaying the card values &lt;code&gt;short&lt;/code&gt; (i.e. &lt;code&gt;6.6k&lt;/code&gt;) and &lt;code&gt;long&lt;/code&gt; (i.e. &lt;code&gt;6626&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;short&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#showing-additional-individual-stats"&gt;additional items&lt;/a&gt; on stats card (i.e. &lt;code&gt;reviews&lt;/code&gt;, &lt;code&gt;discussions_started&lt;/code&gt;, &lt;code&gt;discussions_answered&lt;/code&gt;, &lt;code&gt;prs_merged&lt;/code&gt; or &lt;code&gt;prs_merged_percentage&lt;/code&gt;).&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; When hide_rank=&lt;code&gt;true&lt;/code&gt;, the minimum card width is 270 px + the title length and padding.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;Repo Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the repo's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;description_lines_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Manually set the number of lines for the description. Specified value will be clamped between 1 and 3. If this parameter is not specified, the number of lines will be automatically adjusted according to the actual length of the description.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Gist Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_owner&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows the gist's owner name.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Language Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#hide-individual-languages"&gt;specified languages&lt;/a&gt; from card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between five available layouts &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; &amp;amp; &lt;code&gt;donut-vertical&lt;/code&gt; &amp;amp; &lt;code&gt;pie&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;normal&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;card_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the card's width manually.&lt;/td&gt; 
   &lt;td&gt;number&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;300&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows more languages on the card, between 1-20.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; and &lt;code&gt;donut&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt; for other layouts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;exclude_repo&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Excludes specified repositories.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Most Used Languages&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Uses the compact layout option, hides percentages, and removes the bars.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;size_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;count_weight&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Configures language stats algorithm (see &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#language-stats-algorithm"&gt;Language stats algorithm&lt;/a&gt;).&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;0&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Language names should be URI-escaped, as specified in &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding"&gt;Percent Encoding&lt;/a&gt; (i.e: &lt;code&gt;c++&lt;/code&gt; should become &lt;code&gt;c%2B%2B&lt;/code&gt;, &lt;code&gt;jupyter notebook&lt;/code&gt; should become &lt;code&gt;jupyter%20notebook&lt;/code&gt;, etc.) You can use &lt;a href="https://www.urlencoder.org/"&gt;urlencoder.org&lt;/a&gt; to help you do this automatically.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h4&gt;WakaTime Card Exclusive Options&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Name&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Type&lt;/th&gt; 
   &lt;th&gt;Default value&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the languages specified from the card.&lt;/td&gt; 
   &lt;td&gt;string (comma-separated values)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the title of your card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;line_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the line height between text.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;25&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;hide_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Hides the progress bar and percentage.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;custom_title&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom title for the card.&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;WakaTime Stats&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;layout&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Switches between two available layouts &lt;code&gt;default&lt;/code&gt; &amp;amp; &lt;code&gt;compact&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;default&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;langs_count&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Limits the number of languages on the card, defaults to all reported languages.&lt;/td&gt; 
   &lt;td&gt;integer&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;null&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;api_domain&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets a custom API domain for the card, e.g. to use services like &lt;a href="https://github.com/mujx/hakatime"&gt;Hakatime&lt;/a&gt; or &lt;a href="https://github.com/muety/wakapi"&gt;Wakapi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;string&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;wakatime.com&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;display_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Sets the WakaTime stats display format. Choose &lt;code&gt;time&lt;/code&gt; to display time-based stats or &lt;code&gt;percent&lt;/code&gt; to show percentages.&lt;/td&gt; 
   &lt;td&gt;enum&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;time&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;disable_animations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all animations in the card.&lt;/td&gt; 
   &lt;td&gt;boolean&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;h1&gt;GitHub Extra Pins&lt;/h1&gt; 
&lt;p&gt;GitHub extra pins allow you to pin more than 6 repositories in your profile using a GitHub readme profile.&lt;/p&gt; 
&lt;p&gt;Yay! You are no longer limited to 6 pinned repositories.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Readme Card](https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#repo-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the repo's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;show_owner=true" alt="Readme Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;GitHub Gist Pins&lt;/h1&gt; 
&lt;p&gt;GitHub gist pins allow you to pin gists in your GitHub profile using a GitHub readme profile.&lt;/p&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/gist?id=bbfce31e0217a3689c8d961a356cb10d&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Gist Card](https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d)](https://gist.github.com/Yizack/bbfce31e0217a3689c8d961a356cb10d/)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;p&gt;Use &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#gist-card-exclusive-options"&gt;show_owner&lt;/a&gt; query option to include the gist's owner username&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;show_owner=true" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;h1&gt;Top Languages Card&lt;/h1&gt; 
&lt;p&gt;The top languages card shows a GitHub user's most frequently used languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; By default, the language card shows language results only from public repositories. To include languages used in private repositories, you should &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#deploy-on-your-own"&gt;deploy your own instance&lt;/a&gt; using your own GitHub API token.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Top Languages does not indicate the user's skill level or anything like that; it's a GitHub metric to determine which languages have the most code on GitHub. It is a new feature of github-readme-stats.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This card shows language usage only inside your own non-forked repositories, not depending on who the author of the commits is. It does not include your contributions into another users/organizations repositories. Currently there are no way to get this data from GitHub API. If you want this behavior to be improved you can support &lt;a href="https://github.com/orgs/community/discussions/18230"&gt;this feature request&lt;/a&gt; created by &lt;a href="https://github.com/rickstaa"&gt;@rickstaa&lt;/a&gt; inside GitHub Community.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Currently this card shows data only about first 100 repositories. This is because GitHub API limitations which cause downtimes of public instances (see &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1471"&gt;#1471&lt;/a&gt;). In future this behavior will be improved by releasing GitHub action or providing environment variables for user's own instances.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;Copy-paste this code into your readme and change the links.&lt;/p&gt; 
&lt;p&gt;Endpoint: &lt;code&gt;api/top-langs?username=anuraghazra&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Language stats algorithm&lt;/h3&gt; 
&lt;p&gt;We use the following algorithm to calculate the languages percentages on the language card:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;ranking_index = (byte_count ^ size_weight) * (repo_count ^ count_weight)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;By default, only the byte count is used for determining the languages percentages shown on the language card (i.e. &lt;code&gt;size_weight=1&lt;/code&gt; and &lt;code&gt;count_weight=0&lt;/code&gt;). You can, however, use the &lt;code&gt;&amp;amp;size_weight=&lt;/code&gt; and &lt;code&gt;&amp;amp;count_weight=&lt;/code&gt; options to weight the language usage calculation. The values must be positive real numbers. &lt;a href="https://github.com/anuraghazra/github-readme-stats/issues/1600#issuecomment-1046056305"&gt;More details about the algorithm can be found here&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=1&amp;amp;count_weight=0&lt;/code&gt; - &lt;em&gt;(default)&lt;/em&gt; Orders by byte count.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5&lt;/code&gt; - &lt;em&gt;(recommended)&lt;/em&gt; Uses both byte and repo count for ranking&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;amp;size_weight=0&amp;amp;count_weight=1&lt;/code&gt; - Orders by repo count&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;size_weight=0.5&amp;amp;count_weight=0.5)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Exclude individual repositories&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;exclude_repo=repo1,repo2&lt;/code&gt; parameter to exclude individual repositories.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;exclude_repo=github-readme-stats,anuraghazra.github.io)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide individual languages&lt;/h3&gt; 
&lt;p&gt;You can use &lt;code&gt;&amp;amp;hide=language1,language2&lt;/code&gt; parameter to hide individual languages.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide=javascript,html)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Show more languages&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;langs_count=&lt;/code&gt; option to increase or decrease the number of languages shown on the card. Valid values are integers between 1 and 20 (inclusive). By default it was set to &lt;code&gt;5&lt;/code&gt; for &lt;code&gt;normal&lt;/code&gt; &amp;amp; &lt;code&gt;donut&lt;/code&gt; and &lt;code&gt;6&lt;/code&gt; for other layouts.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;langs_count=8)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Compact Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=compact&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Donut Vertical Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=donut-vertical&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Pie Chart Language Card Layout&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;layout=pie&lt;/code&gt; option to change the card design.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Hide Progress Bars&lt;/h3&gt; 
&lt;p&gt;You can use the &lt;code&gt;&amp;amp;hide_progress=true&lt;/code&gt; option to hide the percentages and the progress bars (layout will be automatically set to &lt;code&gt;compact&lt;/code&gt;).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;![Top Langs](https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=compact" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Donut Vertical Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=donut-vertical" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pie Chart layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;layout=pie" alt="Top Langs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hidden progress bars&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra&amp;amp;hide_progress=true" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;h1&gt;WakaTime Stats Card&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; Please be aware that we currently only show data from WakaTime profiles that are public. You therefore have to make sure that &lt;strong&gt;BOTH&lt;/strong&gt; &lt;code&gt;Display code time publicly&lt;/code&gt; and &lt;code&gt;Display languages, editors, os, categories publicly&lt;/code&gt; are enabled.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Change the &lt;code&gt;?username=&lt;/code&gt; value to your &lt;a href="https://wakatime.com"&gt;WakaTime&lt;/a&gt; username.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-md"&gt;[![Harlok's WakaTime stats](https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs)](https://github.com/anuraghazra/github-readme-stats)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Demo&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;hide_progress=true" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Compact layout&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs&amp;amp;layout=compact" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;All Demos&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;Default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hiding specific stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=contribs,issues" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing additional stats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Showing icons&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;hide=issues&amp;amp;show_icons=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows Github logo instead rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=github" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Shows user rank percentile instead of rank level&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;rank_icon=percentile" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customize Border Color&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;border_color=2e4058" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Include All Commits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;include_all_commits=true" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Themes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Choose from any of the &lt;a href="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/#themes"&gt;default themes&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;show_icons=true&amp;amp;theme=radical" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gradient&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api?username=anuraghazra&amp;amp;bg_color=30,e96443,904e95&amp;amp;title_color=fff&amp;amp;text_color=fff" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing stats card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;show_icons=true&amp;amp;title_color=fff&amp;amp;icon_color=79ff97&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setting card locale&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/?username=anuraghazra&amp;amp;locale=es" alt="Anurag's GitHub stats" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing repo card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/pin?username=anuraghazra&amp;amp;repo=github-readme-stats&amp;amp;title_color=fff&amp;amp;icon_color=f9f9f9&amp;amp;text_color=9f9f9f&amp;amp;bg_color=151515" alt="Customized Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Customizing gist card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/gist?id=bbfce31e0217a3689c8d961a356cb10d&amp;amp;theme=calm" alt="Gist Card" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Top languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/top-langs/?username=anuraghazra" alt="Top Langs" /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;WakaTime card&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;img src="https://github-readme-stats.vercel.app/api/wakatime?username=ffflabs" alt="Harlok's WakaTime stats" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Quick Tip (Align The Cards)&lt;/h2&gt; 
&lt;p&gt;By default, GitHub does not lay out the cards side by side. To do that, you can use this approach:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img height=200 align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;a href="https://github.com/anuraghazra/github-readme-stats"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&amp;gt;
&amp;lt;/a&amp;gt;
&amp;lt;a href="https://github.com/anuraghazra/convoychat"&amp;gt;
  &amp;lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&amp;gt;
&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;span&gt;👀&lt;/span&gt; Show example&lt;/summary&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api?username=anuraghazra" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img height="200" align="center" src="https://github-readme-stats.vercel.app/api/top-langs?username=anuraghazra&amp;amp;layout=compact&amp;amp;langs_count=8&amp;amp;card_width=320" /&gt; &lt;/a&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://github.com/anuraghazra/github-readme-stats"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=github-readme-stats" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/anuraghazra/convoychat"&gt; &lt;img align="center" src="https://github-readme-stats.vercel.app/api/pin/?username=anuraghazra&amp;amp;repo=convoychat" /&gt; &lt;/a&gt; 
&lt;/details&gt; 
&lt;h1&gt;Deploy on your own&lt;/h1&gt; 
&lt;h2&gt;On Vercel&lt;/h2&gt; 
&lt;h3&gt;&lt;span&gt;📽&lt;/span&gt; &lt;a href="https://youtu.be/n6d4KHSKqGk?t=107"&gt;Check Out Step By Step Video Tutorial By @codeSTACKr&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;Since the GitHub API only allows 5k requests per hour, my &lt;code&gt;https://github-readme-stats.vercel.app/api&lt;/code&gt; could possibly hit the rate limiter. If you host it on your own Vercel server, then you do not have to worry about anything. Click on the deploy button to get started!&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Since &lt;a href="https://github.com/anuraghazra/github-readme-stats/pull/58"&gt;#58&lt;/a&gt;, we should be able to handle more than 5k requests and have fewer issues with downtime &lt;span&gt;😁&lt;/span&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; If you are on the &lt;a href="https://vercel.com/pricing"&gt;Pro (i.e. paid)&lt;/a&gt; Vercel plan, the &lt;a href="https://vercel.com/docs/concepts/projects/project-configuration#value-definition"&gt;maxDuration&lt;/a&gt; value found in the &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/master/vercel.json"&gt;vercel.json&lt;/a&gt; can be increased when your Vercel instance frequently times out during the card request. You are advised to keep this value lower than &lt;code&gt;30&lt;/code&gt; seconds to prevent high memory usage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://vercel.com/import/project?template=https://github.com/anuraghazra/github-readme-stats"&gt;&lt;img src="https://vercel.com/button" alt="Deploy to Vercel" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide on setting up your own Vercel instance&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href="https://vercel.com/"&gt;vercel.com&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Log in&lt;/code&gt;. &lt;img src="https://files.catbox.moe/pcxk33.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in with GitHub by pressing &lt;code&gt;Continue with GitHub&lt;/code&gt;. &lt;img src="https://files.catbox.moe/b9oxey.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Sign in to GitHub and allow access to all repositories if prompted.&lt;/li&gt; 
  &lt;li&gt;Fork this repo.&lt;/li&gt; 
  &lt;li&gt;Go back to your &lt;a href="https://vercel.com/dashboard"&gt;Vercel dashboard&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;To import a project, click the &lt;code&gt;Add New...&lt;/code&gt; button and select the &lt;code&gt;Project&lt;/code&gt; option. &lt;img src="https://files.catbox.moe/3n76fh.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click the &lt;code&gt;Continue with GitHub&lt;/code&gt; button, search for the required Git Repository and import it by clicking the &lt;code&gt;Import&lt;/code&gt; button. Alternatively, you can import a Third-Party Git Repository using the &lt;code&gt;Import Third-Party Git Repository -&amp;gt;&lt;/code&gt; link at the bottom of the page. &lt;img src="https://files.catbox.moe/mg5p04.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Create a personal access token (PAT) &lt;a href="https://github.com/settings/tokens/new"&gt;here&lt;/a&gt; and enable the &lt;code&gt;repo&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; permissions (this allows access to see private repo and user stats).&lt;/li&gt; 
  &lt;li&gt;Add the PAT as an environment variable named &lt;code&gt;PAT_1&lt;/code&gt; (as shown). &lt;img src="https://files.catbox.moe/0yclio.png" alt="" /&gt;&lt;/li&gt; 
  &lt;li&gt;Click deploy, and you're good to go. See your domains to use the API!&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;On other platforms&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING]&lt;br /&gt; This way of using GRS is not officially supported and was added to cater to some particular use cases where Vercel could not be used (e.g. &lt;a href="https://github.com/anuraghazra/github-readme-stats/discussions/2341"&gt;#2341&lt;/a&gt;). The support for this method, therefore, is limited.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;&lt;span&gt;🛠&lt;/span&gt; Step-by-step guide for deploying on other platforms&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Fork or clone this repo as per your needs&lt;/li&gt; 
  &lt;li&gt;Add &lt;code&gt;express&lt;/code&gt; to the dependencies section of &lt;code&gt;package.json&lt;/code&gt; &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L54-L61&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;npm i&lt;/code&gt; if needed (initial setup)&lt;/li&gt; 
  &lt;li&gt;Run &lt;code&gt;node express.js&lt;/code&gt; to start the server, or set the entry point to &lt;code&gt;express.js&lt;/code&gt; in &lt;code&gt;package.json&lt;/code&gt; if you're deploying on a managed service &lt;a href="https://github.com/anuraghazra/github-readme-stats/raw/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11"&gt;https://github.com/anuraghazra/github-readme-stats/blob/ba7c2f8b55eac8452e479c8bd38b044d204d0424/package.json#L11&lt;/a&gt;&lt;/li&gt; 
  &lt;li&gt;You're done 🎉 &lt;/li&gt;
 &lt;/ol&gt;
&lt;/details&gt;   
&lt;h2&gt;Disable rate limit protections&lt;/h2&gt; 
&lt;p&gt;Github Readme Stats contains several Vercel environment variables that can be used to remove the rate limit protections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;CACHE_SECONDS&lt;/code&gt;: This environment variable takes precedence over our cache minimum and maximum values and can circumvent these values for self-hosted Vercel instances.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://vercel.com/docs/concepts/projects/environment-variables"&gt;the Vercel documentation&lt;/a&gt; on adding these environment variables to your Vercel instance.&lt;/p&gt; 
&lt;h2&gt;Keep your fork up to date&lt;/h2&gt; 
&lt;p&gt;You can keep your fork, and thus your private Vercel instance up to date with the upstream using GitHub's &lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork"&gt;Sync Fork button&lt;/a&gt;. You can also use the &lt;a href="https://github.com/wei/pull"&gt;pull&lt;/a&gt; package created by &lt;a href="https://github.com/wei"&gt;@wei&lt;/a&gt; to automate this process.&lt;/p&gt; 
&lt;h1&gt;&lt;span&gt;💖&lt;/span&gt; Support the project&lt;/h1&gt; 
&lt;p&gt;I open-source almost everything I can and try to reply to everyone needing help using these projects. Obviously, this takes time. You can use this service for free.&lt;/p&gt; 
&lt;p&gt;However, if you are using this project and are happy with it or just want to encourage me to continue creating stuff, there are a few ways you can do it:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Giving proper credit when you use github-readme-stats on your readme, linking back to it. :D&lt;/li&gt; 
 &lt;li&gt;Starring and sharing the project. &lt;span&gt;🚀&lt;/span&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.paypal.me/anuraghazra"&gt;&lt;img src="https://ionicabizau.github.io/badges/paypal.svg?sanitize=true" alt="paypal.me/anuraghazra" /&gt;&lt;/a&gt; - You can make a one-time donations via PayPal. I'll probably buy a &lt;del&gt;coffee&lt;/del&gt; tea. &lt;span&gt;🍵&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Thanks! &lt;span&gt;❤️&lt;/span&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;a href="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss"&gt;&lt;img src="https://raw.githubusercontent.com/anuraghazra/github-readme-stats/master/powered-by-vercel.svg?sanitize=true" alt="https://vercel.com?utm_source=github_readme_stats_team&amp;amp;utm_campaign=oss" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Contributions are welcome! &amp;lt;3&lt;/p&gt; 
&lt;p&gt;Made with &lt;span&gt;❤️&lt;/span&gt; and JavaScript.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>karpathy/nn-zero-to-hero</title>
      <link>https://github.com/karpathy/nn-zero-to-hero</link>
      <description>&lt;p&gt;Neural Networks: Zero to Hero&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;Neural Networks: Zero to Hero&lt;/h2&gt; 
&lt;p&gt;A course on neural networks that starts all the way at the basics. The course is a series of YouTube videos where we code and train neural networks together. The Jupyter notebooks we build in the videos are then captured here inside the &lt;a href="https://raw.githubusercontent.com/karpathy/nn-zero-to-hero/master/lectures/"&gt;lectures&lt;/a&gt; directory. Every lecture also has a set of exercises included in the video description. (This may grow into something more respectable).&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 1: The spelled-out intro to neural networks and backpropagation: building micrograd&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Backpropagation and training of neural networks. Assumes basic knowledge of Python and a vague recollection of calculus from high school.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VMj-3S1tku0"&gt;YouTube video lecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/karpathy/nn-zero-to-hero/master/lectures/micrograd"&gt;Jupyter notebook files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karpathy/micrograd"&gt;micrograd Github repo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 2: The spelled-out intro to language modeling: building makemore&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We implement a bigram character-level language model, which we will further complexify in followup videos into a modern Transformer language model, like GPT. In this video, the focus is on (1) introducing torch.Tensor and its subtleties and use in efficiently evaluating neural networks and (2) the overall framework of language modeling that includes model training, sampling, and the evaluation of a loss (e.g. the negative log likelihood for classification).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PaCmpygFfXo"&gt;YouTube video lecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/karpathy/nn-zero-to-hero/master/lectures/makemore/makemore_part1_bigrams.ipynb"&gt;Jupyter notebook files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karpathy/makemore"&gt;makemore Github repo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 3: Building makemore Part 2: MLP&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We implement a multilayer perceptron (MLP) character-level language model. In this video we also introduce many basics of machine learning (e.g. model training, learning rate tuning, hyperparameters, evaluation, train/dev/test splits, under/overfitting, etc.).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/TCH_1BHY58I"&gt;YouTube video lecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/karpathy/nn-zero-to-hero/master/lectures/makemore/makemore_part2_mlp.ipynb"&gt;Jupyter notebook files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karpathy/makemore"&gt;makemore Github repo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 4: Building makemore Part 3: Activations &amp;amp; Gradients, BatchNorm&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We dive into some of the internals of MLPs with multiple layers and scrutinize the statistics of the forward pass activations, backward pass gradients, and some of the pitfalls when they are improperly scaled. We also look at the typical diagnostic tools and visualizations you'd want to use to understand the health of your deep network. We learn why training deep neural nets can be fragile and introduce the first modern innovation that made doing so much easier: Batch Normalization. Residual connections and the Adam optimizer remain notable todos for later video.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/P6sfmUTpUmc"&gt;YouTube video lecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/karpathy/nn-zero-to-hero/master/lectures/makemore/makemore_part3_bn.ipynb"&gt;Jupyter notebook files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karpathy/makemore"&gt;makemore Github repo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 5: Building makemore Part 4: Becoming a Backprop Ninja&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We take the 2-layer MLP (with BatchNorm) from the previous video and backpropagate through it manually without using PyTorch autograd's loss.backward(). That is, we backprop through the cross entropy loss, 2nd linear layer, tanh, batchnorm, 1st linear layer, and the embedding table. Along the way, we get an intuitive understanding about how gradients flow backwards through the compute graph and on the level of efficient Tensors, not just individual scalars like in micrograd. This helps build competence and intuition around how neural nets are optimized and sets you up to more confidently innovate on and debug modern neural networks.&lt;/p&gt; 
&lt;p&gt;I recommend you work through the exercise yourself but work with it in tandem and whenever you are stuck unpause the video and see me give away the answer. This video is not super intended to be simply watched. The exercise is &lt;a href="https://colab.research.google.com/drive/1WV2oi2fh9XXyldh02wupFQX0wh5ZC-z-?usp=sharing"&gt;here as a Google Colab&lt;/a&gt;. Good luck :)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/q8SA3rM6ckI"&gt;YouTube video lecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/karpathy/nn-zero-to-hero/master/lectures/makemore/makemore_part4_backprop.ipynb"&gt;Jupyter notebook files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karpathy/makemore"&gt;makemore Github repo&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 6: Building makemore Part 5: Building WaveNet&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We take the 2-layer MLP from previous video and make it deeper with a tree-like structure, arriving at a convolutional neural network architecture similar to the WaveNet (2016) from DeepMind. In the WaveNet paper, the same hierarchical architecture is implemented more efficiently using causal dilated convolutions (not yet covered). Along the way we get a better sense of torch.nn and what it is and how it works under the hood, and what a typical deep learning development process looks like (a lot of reading of documentation, keeping track of multidimensional tensor shapes, moving between jupyter notebooks and repository code, ...).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/t3YJ5hKiMQ0"&gt;YouTube video lecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/karpathy/nn-zero-to-hero/master/lectures/makemore/makemore_part5_cnn1.ipynb"&gt;Jupyter notebook files&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 7: Let's build GPT: from scratch, in code, spelled out.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;We build a Generatively Pretrained Transformer (GPT), following the paper "Attention is All You Need" and OpenAI's GPT-2 / GPT-3. We talk about connections to ChatGPT, which has taken the world by storm. We watch GitHub Copilot, itself a GPT, help us write a GPT (meta :D!) . I recommend people watch the earlier makemore videos to get comfortable with the autoregressive language modeling framework and basics of tensors and PyTorch nn, which we take for granted in this video.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kCc8FmEb1nY"&gt;YouTube video lecture&lt;/a&gt;. For all other links see the video description.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Lecture 8: Let's build the GPT Tokenizer&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The Tokenizer is a necessary and pervasive component of Large Language Models (LLMs), where it translates between strings and tokens (text chunks). Tokenizers are a completely separate stage of the LLM pipeline: they have their own training sets, training algorithms (Byte Pair Encoding), and after training implement two fundamental functions: encode() from strings to tokens, and decode() back from tokens to strings. In this lecture we build from scratch the Tokenizer used in the GPT series from OpenAI. In the process, we will see that a lot of weird behaviors and problems of LLMs actually trace back to tokenization. We'll go through a number of these issues, discuss why tokenization is at fault, and why someone out there ideally finds a way to delete this stage entirely.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=zduSFxRajkE"&gt;YouTube video lecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/karpathy/minbpe"&gt;minBPE code&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://colab.research.google.com/drive/1y0KnCFZvGVf_odSfcNAws6kcDD7HsI0L?usp=sharing"&gt;Google Colab&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p&gt;Ongoing...&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;License&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitHubDaily/GitHubDaily</title>
      <link>https://github.com/GitHubDaily/GitHubDaily</link>
      <description>&lt;p&gt;坚持分享 GitHub 上高质量、有趣实用的开源技术教程、开发者工具、编程网站、技术资讯。A list cool, interesting projects of GitHub.&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/githubdaily_brand.png" /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/weixin.png"&gt;&lt;img src="https://img.shields.io/badge/ GitHubDaily-公众号-brightgreen.svg" alt="WeChat" /&gt;&lt;/a&gt; &lt;a href="https://weibo.com/GitHubDaily"&gt;&lt;img src="https://img.shields.io/badge/%E6%96%B0%E6%B5%AA-%E5%BE%AE%E5%8D%9A-red" alt="Weibo" /&gt;&lt;/a&gt; &lt;a href="https://www.zhihu.com/people/githubdaily"&gt;&lt;img src="https://img.shields.io/badge/%E7%9F%A5%E4%B9%8E-blue" alt="Zhihu" /&gt;&lt;/a&gt; &lt;a href="https://x.com/intent/follow?screen_name=GitHub_Daily"&gt;&lt;img alt="X (formerly Twitter) Follow" src="https://img.shields.io/twitter/follow/GitHub_Daily" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GitHubDaily/GitHubDaily/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/GitHubDaily/GitHubDaily" alt="GitHub stars" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;宗旨&lt;/h2&gt; 
&lt;p&gt;多年以前，我曾看到 GitHub 开源项目作者、全栈工程师 TJ Holowaychunk 说过这么一句话：&lt;/p&gt; 
&lt;p&gt;"I don't read books, never went to school, I just read other people's code and always wonder how things work"。&lt;/p&gt; 
&lt;p&gt;从那时起，我便认为，通过阅读源码，站在前辈的角度上，去思考代码架构与程序逻辑，乃是提升编程技巧最好的方式。&lt;/p&gt; 
&lt;p&gt;因此，GitHub 也自然而然的，成为我最喜爱的开发者平台。&lt;/p&gt; 
&lt;p&gt;秉着挖掘开源价值的初衷，GitHubDaily 自 2015 年 10 月 10 日正式成立。&lt;/p&gt; 
&lt;p&gt;我们希望能通过这一举措，帮助开发者们发现当下最火的开源项目，掌控最新技术动态, 扩大技术视野, 并从开源项目的学习中获得编程能力的提升。&lt;/p&gt; 
&lt;p&gt;目前，GitHubDaily 已累积分享超过 8000 个开源项目，内容包括但不限于 GitHub 上的开源技术资料、开发者工具、编程网站以及成熟应用。&lt;/p&gt; 
&lt;p&gt;除了 GitHub 之外，我们也开始在下面多个社交媒体平台，帮助开发者传播与分享优质开源项目，挖掘其未来的技术应用前景。&lt;/p&gt; 
&lt;p&gt;如果你想接收最新的 GitHub 开源项目资讯，可以关注一下👇&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;公众号: &lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/weixin.png"&gt;GitHubDaily&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;微博: &lt;a href="https://weibo.com/GitHubDaily"&gt;@GitHubDaily&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;知乎: &lt;a href="https://www.zhihu.com/people/githubdaily"&gt;@GitHubDaily&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;X (Twitter)：&lt;a href="https://x.com/intent/follow?screen_name=GitHub_Daily"&gt;@GitHubDaily&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;有不错的开源项目，也欢迎到本仓库的 &lt;a href="https://github.com/GitHubDaily/GitHubDaily/issues/new"&gt;issues&lt;/a&gt; 推荐或自荐项目，我们期待你的分享。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h2&gt;2024 年复盘&lt;/h2&gt; 
&lt;p&gt;下面是对 GitHubDaily 在 2024 年所推荐的项目进行分类整理，方便大家查找以往分享过的内容。&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;过往复盘 &lt;a href="https://github.com/GitHubDaily/GitHubDaily/raw/master/2023.md"&gt;2023&lt;/a&gt;， &lt;a href="https://github.com/GitHubDaily/GitHubDaily/raw/master/2022.md"&gt;2022&lt;/a&gt;， &lt;a href="https://github.com/GitHubDaily/GitHubDaily/raw/master/2021.md"&gt;2021&lt;/a&gt;，&lt;a href="https://github.com/GitHubDaily/GitHubDaily/raw/master/2020.md"&gt;2020&lt;/a&gt;，&lt;a href="https://github.com/GitHubDaily/GitHubDaily/raw/master/2019.md"&gt;2019&lt;/a&gt;，&lt;a href="https://github.com/GitHubDaily/GitHubDaily/raw/master/2018.md"&gt;2018&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;目录&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E5%AE%97%E6%97%A8"&gt;宗旨&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#2024-%E5%B9%B4%E5%A4%8D%E7%9B%98"&gt;2024 年复盘&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E7%9B%AE%E5%BD%95"&gt;目录&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#ai-%E6%8A%80%E6%9C%AF"&gt;AI 技术&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#ai-%E5%B7%A5%E5%85%B7"&gt;AI 工具&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E5%85%8D%E8%B4%B9%E4%B9%A6%E7%B1%8D"&gt;免费书籍&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E5%AD%A6%E4%B9%A0%E6%95%99%E7%A8%8B"&gt;学习教程&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E5%AE%9E%E7%94%A8%E5%B7%A5%E5%85%B7"&gt;实用工具&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E5%AE%9E%E7%94%A8%E6%8F%92%E4%BB%B6"&gt;实用插件&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E8%B5%84%E6%96%99%E9%9B%86%E5%90%88"&gt;资料集合&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E5%85%B6%E4%BB%96"&gt;其他&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/#%E5%A3%B0%E6%98%8E"&gt;声明&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;AI 技术&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6n4HUTW"&gt;OmniParser&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于纯视觉的 GUI 智能体，能够准确识别界面上可交互图标以及理解截图中各元素语义，实现自动化界面交互场景，如自动化测试、自动化操作等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODDGE9iKe"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/2noise/ChatTTS"&gt;ChatTTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款专门为对话场景设计的语音生成模型，主要用于 LLM 助手对话任务、对话语音以及视频介绍等，支持中英文混合文本合成语音，音色表现强，能达到真假难辨程度。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OgtYGiyMo"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/intelligent-machine-learning/dlrover"&gt;DLRover&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套 AI 大模型训练方案，可实现训练"自动驾驶"，提高训练效率，降低研发成本，具有容错性、快速恢复和自动扩展等特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NF2cklwac"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hpcaitech/SwiftInfer"&gt;SwiftInfer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 TensorRT 实现的 StreamingLLM 推理加速框架，可提升大模型推理性能 46 %，为多轮对话推理提供高效可靠的落地方案。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NAS7K9B1u"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/facebookresearch/audio2photoreal"&gt;Audio2PhotoReal&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一项由 Meta AI 发布的新技术，能够通过音频驱动生成全身逼真的虚拟人物对话，包括动作、表情和多人对话等，可广泛应用于虚拟现实、影视制作等领域。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NAqwLvBIV"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/myshell-ai/OpenVoice"&gt;OpenVoice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一项由 MyShell 团队开发的多功能即时声音克隆技术，只需提供简短音频样本，即可克隆原发言者的声音，生成多种语言语音，支持高精度音色克隆、灵活的声音风格调控以及无需样本的跨语言声音克隆。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NAiw7rRNh"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h3&gt;AI 工具&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/anti-work/shortest"&gt;Shortest&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款利用 Claude 模型能力的端到端 AI 测试框架，通过自然语言编写可执行的单元测试，支持 GitHub 与 2FA 集成，提供安全认证方式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P78T3tP8F"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ZGGSONG/STranslate"&gt;STranslate&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开箱即用的翻译和 OCR 工具，支持多种翻译方式、多家翻译服务、离线 OCR、回译、TTS 等功能，提升翻译效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6VVmEi17"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xiaoxiunique/x-kit"&gt;x-kit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款用于抓取和分析 Twitter 推友数据的工具，可自动抓取指定推友的基本信息和推文，支持定时更新时间线数据和本地存储。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6Q246RBv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/spaces/hkchengrex/MMAudio"&gt;MMAudio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款视频自动配音工具，可根据视频内容或文本提示生成符合场景的音效，并与视频画面动作保持同步对齐。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6OR0gwq7"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hoarder-app/hoarder"&gt;Hoarder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款自托管的书签管理 AI 工具，支持保存链接、笔记、图片和 PDF 文件，利用 AI 自动打标签分类存储，提供全文搜索能力。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6wew9VS5"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/web-infra-dev/midscene"&gt;Midscene.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由 AI 驱动的 UI 自动化 SDK，通过自然语言描述对任意网页进行自动化操作、验证和数据提取，生成可视化测试报告，支持多种主流 AI 模型和自动化库集成。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6v17rEJR"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/browser-use/browser-use"&gt;Browser Use&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源工具，能让 AI 智能体自动化操作浏览器，像真人一样理解网页内容并完成复杂任务，如投递简历、查询航班等，具备视觉识别、HTML 解析、多标签页管理等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6lCEB88t"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hpcaitech/Open-Sora"&gt;Video Ocean&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Colossal - AI 优化的 Sora 视频模型的免费视频生成平台，提供极低成本、快速的视频生成服务，并将优化方案开源。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6kdo241Y"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Nutlope/logocreator"&gt;LogoCreator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 AI Logo 生成器，使用 Flux Pro 1 . 1 模型快速生成 Logo 图标，支持编辑样式，代码完全开源并提供免费体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P64YnygK8"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/microsoft/markitdown"&gt;MarkltDown&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由微软开源的工具，可将常见文件如 Word、Excel、PPT 等转换为 Markdown 格式，支持 OCR 和 AI 模型处理多媒体文件，提供命令行、Python API 和 Docker 三种使用方式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5H89CIC8"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Byaidu/PDFMathTranslate"&gt;PDFMathTranslate&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 PDF 文档翻译及双语对照工具，能够很好地保留公式、图表、目录和注释等排版，支持多种语言和翻译服务，可通过命令行、GUI 界面、Docker 等方式使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5CICinD6"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nishuzumi/gemini-teacher"&gt;Gemini-Teacher&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Gemini 2 . 0 开发的英语口语练习 AI 助手，能实时识别发音并提供反馈和纠正建议，适合英语口语学习和教学。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5xHF6P6c"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/whotto/Video_note_generator"&gt;XHS Note Generator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款小红书笔记 AI 生成器，支持快速批量将视频或直播内容一键转换为符合小红书风格的爆款笔记，自动优化内容和配图。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5tbArUkt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mediar-ai/screenpipe"&gt;ScreenPipe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款强大的开源 AI 桌面应用，可 24 小时监控电脑，通过屏幕录制、OCR、音频输入和转录收集信息，保存到本地数据库，利用 LLM 对话、总结和回顾你所做的事情。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P1c7O5pXF"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/briaai/RMBG-2.0"&gt;RMBG-2.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高效的背景移除工具，支持处理各种图像，一键移除背景，效果出色且处理速度快，适用于电商、广告等场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P12Dlmfo7"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/TTPlanetPig/Comfyui_Object_Migration"&gt;Comfyui_Object_Migration&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套基于 ComfyUI 的服装迁移工作流，可将服装照片自然真实地迁移到模特身上，支持虚拟试穿和风格迁移（如动漫转现实风格），还原度较高。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P0YSLnIPZ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/tmplink/nsfw_detector"&gt;NSFW Detector&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 NSFW 内容检测器，使用 Google 模型，准确度高，支持检测图片、PDF 文件、视频、压缩包等多种文件类型，支持纯 CPU 推理，提供 API 服务便于集成。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P0UmHjmi7"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/WEIFENG2333/VideoCaptioner"&gt;VideoCaptioner&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的视频字幕翻译助手，提供可视化操作界面，支持字幕智能断句、校正、优化、翻译，一键生成双字幕视频。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P0BvHjG5I"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/magic-quill/magicquill"&gt;MagicQuill&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 AI 互动式图像编辑工具，用户只需通过画笔涂抹和简单提示词，即可轻松实现插入元素、擦除物体、调整颜色等各种图像编辑操作。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P0sfgqLQl"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/abus-aikorea/voice-pro"&gt;Voice-Pro&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款集转录、翻译和文字转语音为一体的开源工具，提供简洁直观的可视化操作界面，支持实时转录和翻译，以及批量处理模式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OFXg2nrNa"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jhj0517/AdvancedLivePortrait-WebUI"&gt;AdvancedLivePortrait-WebUI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Gradio 开发的开源工具，能够对图像中的人物进行实时面部表情精确控制，如微笑、眨眼、摇头等，支持多种部署方式使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OF8Ana05p"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/CatchTheTornado/pdf-extract-api"&gt;pdf-extract-api&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 FastAPI 的 PDF 文档提取和解析工具，利用 OCR 技术和 Ollama 模型将 PDF 或图像转换为 Markdown 文本或 JSON 文档，支持表格、公式等格式解析，使用 Redis 缓存提高效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OES7rAt81"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/theredsix/cerebellum"&gt;Cerebellum&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于智能体的浏览器自动化工具，通过使用 LLM 构建的智能体实现自动化操作键盘和鼠标，在网页上完成数据抓取、自动化测试等任务。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OEPJnt0p7"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yeates/PromptFix"&gt;PromptFix&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于提示的 AI 图像修复工具，能够根据输入的提示对图像进行上色、移除物体、去除水印、高清化、调整光线等操作。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OEzct54QI"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getmaxun/maxun"&gt;Maxun&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的自动化网页数据爬取工具，无需编写代码，通过可视化界面构建自定义机器人实现网页数据捕获、提取和处理等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OEpO15B1v"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6nVnoTM"&gt;AI Podcast Generator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的自动化 AI 播客生成工具，能够自动抓取网络新闻内容，并生成自然流畅的叙述性音频播客，提供简单易用的界面。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OE6X11vEB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6nfRDtg"&gt;MegaParse&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于大型语言模型构建的功能强大的文档解析开源工具，可以轻松处理 PDF、PPT、Word、Excel 等常见格式，保证解析过程中不丢失任何信息，还能准确识别文档中的表格、目录、页眉页脚和图片等内容，解析速度快，效率高。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODXwwqWPu"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6nVFPdz"&gt;SoniTranslate&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Gradio 构建的简单易用的视频翻译工具，支持将视频一键翻译成多种语言，并提供视频同声翻译功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODVaoqul9"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/16131zzzzzzzz/EveryoneNobel"&gt;EveryoneNobel&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 AI 工具，可用于生成个性化诺贝尔奖项图片，利用 ComfyUI 进行图像生成，并结合 HTML 模板展示图片上的文本，只需提供个人肖像图即可生成诺贝尔奖项风格图像。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODjspfWSC"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/YOYZHANG/PodCastLM"&gt;PodCastLM&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的工具，可以将 PDF 内容转化为适合音频播客的自然对话，并输出为 MP3 文件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODco2x491"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/corbt/agent.exe"&gt;Agent.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 AI 自主操作计脑工具，利用 Claude 3 . 5 Sonnet 直接控制本地电脑，展示了 Claude 的 Computer Use 能力，可用于自动化智能体开发。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OD8EGbgkh"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/getomni-ai/zerox"&gt;Zerox&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款简单易用的 OCR 文档工具，支持 PDF、Docx、图像等文件格式，可将文件转换为图像后利用 gpt - 4o - mini 模型识别图像信息并输出 Markdown 格式文件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OD48BgZ27"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Eddycrack864/UVR5-UI"&gt;UVR5-UI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的人声伴奏分离 AI 工具，提供在线简洁易用的操作界面，支持选择不同的 AI 模型以及输出格式和质量，支持批量处理。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCGnbC7UP"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/adarshb3/Virtual-Try-On-Application-using-Flask-Twilio-and-Gradio"&gt;Virtual Try-On Application&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 WhatsApp API 和 IDM - VTON 虚拟试穿模型的 AI 应用，用户只需在 WhatsApp 上传个人照片和服装照片，即可生成虚拟试穿效果图，提供便捷的虚拟试衣体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCAG362B4"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/anthropics/anthropic-quickstarts/tree/main/financial-data-analyst"&gt;Claude Financial Data Analyst&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由 Anthropic 开源的基于 Next . js 和 Claude AI 构建的金融数据分析助手，支持多种格式文件上传，通过聊天界面进行财务数据分析并生成可视化图表。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCj07iHiB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/VikParuchuri/tabled"&gt;Tabled&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Surya 开发的 OCR 小工具，能够识别 PDF、图像、Word 和 PPT 等文件中的表格，并将表格内容提取转换为 Markdown、CSV 或 HTML 格式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OChP4iiej"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/VikParuchuri/surya"&gt;Surya&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源且强大的文档 OCR 工具，专注于文档图像的处理和分析，能够准确进行逐行文本检测和识别，支持 90 多种语言。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OC62rozdB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://lucaria-academy.github.io/Animate-X/"&gt;Animate-X&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 AI 的动画生成工具，可以通过输入角色图片和参考动作视频，自动生成角色按照指定动作移动的动画效果，支持真人、游戏、卡通等多种类型的角色，保持角色一致性并允许大幅度动作。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OC0f8wojR"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/WEIFENG2333/AsrTools"&gt;AsrTools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的智能语音转字幕文本工具，集成了多家公司的语音识别接口，支持多种音频格式，提供批量处理和生成字幕文件功能，界面简单易用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBLOcu6QU"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/spaces/thatupiso/Podcastfy.ai_demo"&gt;Podcastfy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源工具，可将视频、PDF、论文、网站和文章等内容转换为对话式的播客音频。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBdPAmvWp"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ErikBjare/gptme"&gt;gptme&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的开源终端 AI 助手，支持在终端执行本地代码、读写文件、搜索浏览网页和进行视觉识别等操作，可连接 OpenAI、Anthropic、OpenRouter 等主流 LLM 提供商，也可使用 llama . cpp 在本地提供服务。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OALy5o5df"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AI4Finance-Foundation/FinRL"&gt;FinRL&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源的量化金融自动交易框架，包含市场环境、智能体和应用三层架构，提供先进算法核心支持连续交易决策。支持投资组合分配、加密货币交易、高频交易等金融任务和实时交易功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OACdjiyiF"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://yt-whisper.danilotpnta.com/"&gt;Youtube-Whisper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款利用 OpenAI Whisper 模型实现音频转文本的轻量级开源免费工具，可输入 YouTube 视频链接提取音频并转换为文本，支持多种语言。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAsGnlCN8"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/DrewThomasson/ebook2audiobookXTTS"&gt;ebook2audiobookXTTS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 AI 工具，利用 Calibre 和 Coqui TTS 将电子书转换为高质量的有声读物，支持多种语言和语音克隆功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OA0kD8uPB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/RexanWONG/text-behind-image"&gt;Text Behind Image&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款简单有趣的开源免费工具，可以轻松将文本添加到图像中指定对象的背后，如动物、人物或物品等，并支持保存到本地。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OzSaaDpcL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://godbolt.org"&gt;Compiler Explorer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款在线交互式编程语言编译器探索工具，支持超过 30 种语言如 C、C ++、Rust、Go 等，可在浏览器中实时编辑代码并查看编译后的汇编代码输出，提供多种编辑器、工具和可视化选项。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OyvjHA5lr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/QiuYannnn/Local-File-Organizer"&gt;Local File Organizer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 AI 的本地文件整理器，可以自动扫描指定目录中的文件，理解文件内容并生成相关描述、文件夹名称和文件名，将文件整理到新的目录结构中。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OykI8FvUd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/pencilresearch/OpenScanner"&gt;OpenScanner&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款快速、易用且开源免费的文档扫描工具，具有自动文本识别、文档命名、地理位置标记、签名添加、Vision Pro 支持等功能，可保存、编辑、注释和分享扫描文档。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OxQaLinEV"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/spaces/huggingface/diffusers-image-outpaint"&gt;Diffusers Image Outpaint&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款在线 AI 扩图工具，可以免费使用，只需上传图片并选择扩展比例，即可一键完成图像扩展。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OxKbdDZTX"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/ucaslcl/GOT-OCR2_0"&gt;GOT-OCR2.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款端到端的开源 OCR 模型，被称为 OCR 2 . 0，支持识别场景文本、文档、乐谱、图表、数学公式等多种内容，在 BLEU 评测中取得 0 . 972 的高分，模型体积仅 1 . 43GB。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OxgIFBROC"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://%E7%BD%91%E9%A1%B5%E9%93%BE%E6%8E%A5"&gt;Python Tutor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;除了 Python 外，还支持 Java、C、C ++和 JavaScript 等编程语言。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwFav6ZaV"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/spaces/fishaudio/fish-speech-1"&gt;Fish Speech&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的多语言 TTS 模型，使用 70 万小时数据训练，支持英语、中文、韩语、日语、法语、德语、阿拉伯语和西班牙语 8 种语言。具有快速语音合成、低延迟、声音丰富、混合语言和语音克隆等特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwwLfEVIn"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wechatferry/wechatferry"&gt;wcf.js&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款强大、快速、开源的微信机器人底层框架，提供消息监听、发送和群聊操作的一站式解决方案，内置强大易用的 Agent 库和开发者工具包，具有高效稳定的处理能力和自由控制发消息频率的功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwaojcwHV"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/markmap/markmap"&gt;markmap&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的工具，可以将 Markdown 文档内容转换为直观可视化的思维导图，支持图像、链接、代码块、内联样式和数学公式等格式内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvU3a3PwQ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/k4yt3x/video2x/"&gt;Video2x&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的无损放大视频和图像工具，使用多种先进的超分辨率算法如 waifu2x、Anime4K、SRMD 和 RealSR 等实现视频/ GIF /图像的无损放大和提高帧速率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvGIlvBh5"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gitbrent/PptxGenJS"&gt;PptxGenJS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 JavaScript 的开源库，可用于生成 PPT 演示文稿，支持添加图表、表格、图像、视频等多种元素，生成的文件与 PowerPoint 等应用兼容，并提供 HTML 转 PPT 功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvCcgy1il"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dataease/dataease"&gt;DataEase&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的开源数据可视化分析工具，可作为 Tableau 的替代品，提供丰富美观的图表展示、制作和数据引擎等功能，支持多种数据链接、拖拽式图表制作和与他人分享，并具备 AI 辅助分析和模板市场等创新功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ovx7Hct4m"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ddean2009/MoneyPrinterPlus"&gt;MoneyPrinterPlus&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的全自动化 AI 视频剪辑工具，借助 AI 技术一键生成和批量混剪各类短视频，支持自动发布到视频平台，助力变现。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvrAIaFqb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/meltylabs/melty"&gt;Melty&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款专为 10x 工程师打造的开源 AI 代码编辑器，能够与开发者的整个开发流程集成，理解从终端到 GitHub 的操作，协助高效编写和重构代码，支持多文件大规模更改。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvpglxhG4"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Spr-Aachen/Easy-Voice-Toolkit"&gt;Easy Voice Toolkit&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套功能丰富的开源 AI 语音工具箱，包括音频处理、语音识别、语音转录、数据集制作和语音合成等，形成完整语音模型训练工作流。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ov8JJd1Z3"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/chartdb/chartdb"&gt;ChartDB&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Web 的功能强大的数据库图表编辑器，支持多种数据库如 PostgreSQL、MySQL、SQL Server 等，提供基于 AI 的导出功能生成 DDL 脚本方便数据库迁移，可在线使用或本地部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ov0uhu4Py"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mendableai/firecrawl"&gt;FireCrawl&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源且强大的 Web 爬虫工具，可爬取任何网站内容并转换为 Markdown 或结构化数据，为大语言模型训练、检索增强生成（RAG）提供数据。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OuXaFn2ws"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/1Panel-dev/MaxKB"&gt;MaxKB&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;支持多种大语言模型对接，内置工作流引擎编排 AI 过程，可无缝嵌入第三方系统，在短时间内获得 9000 +星。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oux1JkeSB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Zeyi-Lin/HivisionIDPhotos"&gt;HivisionIDPhoto&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款轻量级的 AI 证件照制作工具，可识别多种用户拍照场景，实现抠图和生成标准尺寸的证件照。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Outin1JV2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Huanshere/VideoLingo"&gt;VideoLingo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款全自动视频翻译的 AI 工具，能够一键对视频进行字幕切割、翻译、精准对齐和个性化配音，生成高质量的字幕和配音。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ouarniyk4"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cursor.directory/"&gt;Cursor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款智能代码编辑神器，提供代码补全、错误修复等功能，支持多种编程语言。该项目收集了各语言的最佳配置提示词和使用教程。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ou3LmbyQh"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/linyqh/NarratoAI"&gt;NarratoAI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款一站式自动化影视解说的 AI 视频剪辑工具，基于 LLM 实现文案撰写、自动化视频剪辑、配音和字幕生成，是影视解说剪辑神器，可高效创作内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OtVxY92hM"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lhl/voicechat2"&gt;voicechat2&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款响应快速且完全本地化的 AI 语音聊天工具，使用 WebSockets 实现低延迟语音交互并允许远程访问，可本地运行语音识别、文本转语音和大语言模型，在 4090 显卡上延迟低至 300 毫秒。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OtfSor20F"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/itsOwen/CyberScraper-2077"&gt;CyberScraper 2077&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 OpenAI 大语言模型的强大网络爬虫工具，能够智能理解和解析网页内容，提供简单易用的可视化界面，无需编程知识即可操作使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ot7P94c8X"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wan-h/awesome-digital-human-live2d"&gt;awesome-digital-human-live2d&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源项目，旨在打造一个有温度的数字人，支持 Docker 快速部署、Dify 服务接入、ASR、LLM、TTS、Agent 模块化扩展、Live2d 人物模型扩展和控制、PC 端和移动端 Web 访问。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsX1p7nxr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Dicklesworthstone/llm_aided_ocr"&gt;LLM-Aided OCR&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于大语言模型（LLM）的开源 OCR 扫描 PDF 工具，可将原始 OCR 扫描 PDF 文本转换成高准确度、格式正确且易于阅读的 Markdown 文档。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsRkgr9JW"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ViggoZ/producthunt-daily-hot"&gt;Product Hunt Daily Hot&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 GitHub Action 的自动化工具，每天定时爬取并生成 Product Hunt 热门产品榜单的 Markdown 文件，使用 GPT - 4 模型翻译产品描述，帮助快速查看每日热门榜单。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsQsKDY0a"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/BMPixel/moffee"&gt;moffee&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 PPT 制作工具，能够将 Markdown 文档一键转换为干净、专业的幻灯片，提供 web 界面实时预览效果。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsFxEhRIP"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Kedreamix/Linly-Dubbing"&gt;Linly-Dubbing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源且强大的视频多语言 AI 配音/翻译工具，能自动下载视频、翻译字幕、人声分离、克隆音色配音并合成视频。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Osw79mpN5"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://poloclub.github.io/transformer-explainer/"&gt;Transformer Explainer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个可视化交互式学习工具，以 GPT - 2 为例，通过输入文本实时观察 Transformer 各组件（嵌入层、自注意力机制、MLP 等）的工作过程和预测下一个 Token，适合教学和理解 Transformer 内部原理。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsmMgmpvX"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/SakanaAI/AI-Scientist"&gt;AI Scientist&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款全球首个自动化科学研究 AI 系统，能够从构思、编写代码、进行实验、总结结果到撰写完整论文和进行同行评审的全过程，支持多种主流大语言模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Os6bNfuRq"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jbilcke-hf/clapper"&gt;Clapper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款集成多种 AI 功能的开源视频剪辑工具，可一键生成图像、视频、语音、音乐等素材，并进行二次剪辑，让用户无需专业技能即可通过互动迭代的方式制作视频。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OrWLifEcS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ozgrozer/ai-renamer"&gt;ai-renamer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Node . js 的命令行工具，可根据文件内容自动批量重命名本地文件、图像或视频，默认使用 Ollama 本地模型如 Gemma、Llama 等进行智能识别。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oq3TYgib9"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lipku/metahuman-stream"&gt;metahuman-stream&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源项目，实现实时交互流式数字人，支持音视频同步对话，具有多种功能如数字人模型选择、声音克隆、对话被打断处理、全身视频拼接、推流、视频编排和大语言模型对话等，基本可达到商用效果。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpVQIrJFX"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ssine/pptx2md"&gt;PPTX2MD&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源免费的工具，能够将 PPT 幻灯片转换为 Markdown 文件，支持保留标题、列表、粗体、斜体、颜色、超链接、图片、表格以及合并单元格等 PPT 内容格式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpPXpBoi2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://disksing.com/fake-screenshot"&gt;Fake Screenshot Generator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款可直接在线免费使用的字幕截图生成器工具，可生成逼真的带字幕的截图。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpCZIs2Dd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/opendatalab/MinerU"&gt;MinerU&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款一站式、开源、高质量的数据提取工具，能够将 PDF、网页以及多格式电子书转换为 Markdown 格式，提取图像、表格并转换公式为 LaTex，支持多种语言识别。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpvVlCyPv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Nutlope/llamatutor"&gt;Llama Tutor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 AI 个人导师工具，基于 Next . js 和 Tailwind CSS 构建，集成 Llama 3 . 1 和 Serper 提供强大的推理和搜索能力，可根据用户选择的教育水平生成个性化导师解答各种问题。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpmuQEURu"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yihong0618/bilingual_book_maker"&gt;bilingual_book_maker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款利用大语言模型（如 ChatGPT、Claude 等）对文件和图书进行多语言翻译的开源工具，支持 epub、txt 和 srt 等格式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoQtZtumW"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Doriandarko/claude-engineer"&gt;Claude Engineer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Claude 3 . 5 模型的交互式命令行工具，整合了文件系统操作、网络搜索等功能，可协助完成各种软件开发任务，如智能代码分析、修改建议、项目管理等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoKMRyN4F"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/harry0703/AudioNotes"&gt;AudioNotes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的音视频转结构化笔记工具，基于 FunASR 和 Qwen2 构建，可快速提取音视频内容，并利用大模型能力整理成结构化 Markdown 笔记，方便快速阅读。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoIvdqNoc"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/TahaSh/swapy"&gt;Swapy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个简单的 JavaScript 开源工具，只需几行代码就可以将网页上任何布局转换为可拖动交换布局，适用于 React、Vue 等主流前端框架。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoBmn2TwN"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kkangert/kspider"&gt;Kspider&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的可视化爬虫平台，通过流程图配置即可完成数据爬取工作，无需编写代码，对小白极其友好。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoeM0ylVt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/BuilderIO/ai-shell"&gt;AI Shell&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的终端 AI 助手，可在命令行界面通过自然语言转换为对应的 Shell 命令执行，支持多种语言输入，提高终端操作效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnGNolhEO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/apify/crawlee-python"&gt;Crawlee&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费且非常强大的 Python 网页抓取和浏览器自动化库，旨在构建可靠的爬虫为 AI、大语言模型、检索增强生成或 GPTs 提取数据。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OntDwxRMQ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AugustDev/enchanted"&gt;Enchanted&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的本地大模型 Mac 客户端，类似于 ChatGPT 客户端，需搭配 Ollama 使用，可轻松连接本地部署的私有模型，如 Llama2、Mistral 以及 Vicuna 等，提供在 iOS 生态系统中无过滤、安全、私密和多模态的使用体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnnWp76yF"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xenova/transformers.js/tree/v3/examples/whisper-word-timestamps"&gt;Whisper Timestamped&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Transformers . js 的浏览器内语音识别工具，可本地运行 whisper - base 模型进行语音转文字，支持 100 种语言并生成单词级时间戳。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnlAhtJnJ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/vanna-ai/vanna"&gt;Vanna&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款 SQL 生成 AI 框架，允许在自有数据上训练 RAG 模型，通过自然语言准确生成 SQL 查询语句，支持多种主流大模型，使用简单，开源可自行部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmTiME6d3"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/posit-dev/great-tables"&gt;Great Tables&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款用于制作高质量表格的 Python 库，内置丰富的表格组件和格式化选项，可以组合创建多种类型的精美表格。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmLfwjEBF"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ogkalu2/comic-translate"&gt;Comic Translate&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款利用 GPT - 4 视觉能力的开源漫画自动翻译神器，支持多种格式如图像、PDF、Epub 等，可实现多种语言之间互译，包括日语、英语、中文、韩语、德语、荷兰语等，并提供可视化操作界面。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmpE3eQpQ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://codegeex.cn/zh-CN?article=24075"&gt;CodeGeeX&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能全面的国产开源代码模型，集成代码补全、生成、问答、解释、工具调用、联网搜索等多种能力，覆盖编程开发各种场景，在百亿参数以下性能最强。同时也提供 CodeGeeX 智能编程助手插件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmawqkiTI"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/BinNong/meet-libai"&gt;遇见李白&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源项目，旨在通过构建李白知识图谱的 AI 智能体，以生成式对话应用的形式推广和普及李白古诗词文化，最终目标是开发一款生成式对话应用，实现实时互动并提供个性化的李白诗歌鉴赏体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Om2gZgi95"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/DAMO-NLP-SG/WebDesignAgent"&gt;WebDesignAgent&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于人工智能的网站构建工具，支持多页面管理、用户自定义添加/删除、迭代优化和视觉优化等功能，可通过文本、图片、视觉线索或混合方式生成设计精美的网站。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlIeVCnbi"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/worm128/AI-YinMei"&gt;AI-YinMei&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能齐全的 AI 虚拟主播（Vtuber）工具，集成了 FastGPT 知识库聊天、语音合成、Stable Diffusion 绘画、AI 唱歌等技术，可实现聊天、唱歌、绘画、跳舞、表情切换、换装、搜图、场景切换等多种功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlxOia4uv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/adithya-s-k/omniparse"&gt;OmniParse&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源工具，能够将各种非结构化数据如文档、表格、图像、视频、音频和网页转化为结构化的可操作数据，方便用于检索增强生成（RAG）和微调。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Olh8vj7To"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/CosmosShadow/gptpdf"&gt;gptpdf&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 GPT - 4o 视觉大语言模型的开源工具，仅用 293 行代码就能将 PDF 文件解析为 Markdown 格式，几乎完美地解析排版、数学公式、表格、图片和图表等内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlgrhbhsQ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/PeterH0323/Streamer-Sales"&gt;Streamer-Sales&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款能够根据商品特点进行解说的卖货主播大模型，通过生成细腻、独到的解说词，激发用户购买欲望，提供多种功能如文案生成、语音转换、视频生成等，旨在成为销售助手，提升销量和用户体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OkEft1zqt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/TeamWiseFlow/wiseflow"&gt;Wiseflow&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款敏捷的信息挖掘开源免费工具，可从网站、公众号、社交平台等渠道爬取相关信息，擅长从公众号文章中提取信息。支持对爬取信息进行筛选、提炼、贴标签等处理，并可整合到任意 Agent 项目中作为动态知识库。可完全本地部署，无需 GPU，适合任何硬件环境。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OkBTkBzRA"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/onuratakan/gpt-computer-assistant"&gt;GPT Computer Assistant&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 GPT 客户端应用程序，旨在为 Windows 和 Linux 系统提供类似 macOS 上 GPT 应用的功能，包括屏幕读取、麦克风长音频输入、编写和运行程序以及知识库管理等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OkuOY0Env"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/modelscope/DiffSynth-Studio/raw/main/examples/Diffutoon/README.md"&gt;Diffutoon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的视频动漫化项目，提供 Colab 运行笔记，无需部署即可一键动漫化视频，转换后的视频画面稳定流畅，还可编辑和添加视频效果。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OkssQgFpm"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/niedev/RTranslator"&gt;RTranslator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费、可离线的实时翻译应用，能够实时将对方说的语言翻译成你能听懂的语言，支持对话模式、对讲模式和文本翻译模式，使用 Meta 的 NLLB 和 OpenAI 的 Whisper 进行翻译和语音识别。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Okr5B6urE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ayushpai/AI-Math-Notes"&gt;AI Math Notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Python 开发的交互式绘图应用程序，允许用户在画布上手写数学方程，利用多模态大语言模型（LLM）计算并显示结果，实现了类似苹果"备忘录数学计算器"的功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OjqPulncY"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://huggingface.co/spaces/Xenova/whisper-web"&gt;Whisper Web&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 OpenAI 的 Whisper 语音识别模型的开源 Web 应用程序，允许直接在浏览器中运行使用 Whisper 进行语音转文本，支持 WebGPU 加速，无需后端服务器，可导出 TXT 和 JSON 格式文件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oj5Cn7Qqk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/binary-husky/gpt_academic"&gt;GPT Academic&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的 GPT 学术优化开源项目，提供论文翻译、代码解析、知识获取、语法校对、论文润色、摘要生成等多种功能，支持接入多种 LLM 模型，提升学术研究效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OiYyb1dgs"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/andrewyng/translation-agent"&gt;Translation Agent&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套由吴恩达老师开源的 AI 翻译工作流程，基于大语言模型进行翻译、反思和优化，可控制语气、地区和术语翻译一致性，翻译质量媲美商业工具。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OiDkSzO3J"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/VinciGit00/Scrapegraph-ai"&gt;ScrapeGraphAI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于大语言模型和直接图逻辑的 AI 网页爬虫工具，可以根据用户提示自动为网站和本地文档创建爬取管道，支持单页、多页和语音爬取，提高数据采集效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OhVJA5eQR"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/idootop/mi-gpt"&gt;MiGPT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源项目，旨在将小米小爱音箱打造成专属的 AI 语音助手，将小爱音箱和米家智能设备与 ChatGPT 等大模型的理解能力完美融合，提供 LLM 回答、角色扮演、流式响应、长短期记忆、自定义 TTS 和智能家居 Agent 等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OhHoECwbO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jianchang512/pyvideotrans"&gt;pyVideoTrans&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的视频翻译配音工具，可将一种语言的视频自动翻译为指定语言的视频，生成字幕和配音，支持多种翻译服务和配音引擎，可本地离线使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OhCSAkXdw"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Jazee6/cloudflare-ai-web"&gt;cloudflare-ai-web&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源项目，利用 Cloudflare Workers AI 免费提供的大模型，可快速搭建多模态 AI 平台，支持一键部署、无需服务器、个性化定制等，集成了 ChatGPT、Stable Diffusion 等多种 AI 模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ohsh2rkhe"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jianchang512/ChatTTS-ui"&gt;ChatTTS-ui&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开箱即用的 ChatTTS 安装包，提供 Web 界面和 API 接口，支持 Windows、Linux、macOS 部署，Windows 用户可直接下载安装包一键安装使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OgO23Cn8P"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ItzCrazyKns/Perplexica"&gt;Perplexica&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由 AI 驱动的开源搜索工具，能够深入互联网提供精准答案，理解问题并优化搜索结果，提供带引用来源的明确答案。具有隐私保护、本地大语言模型支持、双模式搜索和专注模式等特征。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OgkybrvOe"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ragapp/ragapp"&gt;RAGapp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款无需编码的可视化界面工具，用于配置基于 LlamaIndex 构建的 RAG 聊天机器人，类似于 OpenAI 的 GPT 模型，可轻松部署在自有云基础设施中。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OgfDLz9xc"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gabotechs/MusicGPT"&gt;MusicGPT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 AI 音乐生成器，支持在 Windows、macOS 和 Linux 系统上本地高效运行最新音乐生成 AI 模型，如 Meta 的 MusicGen 模型，无需安装依赖，易于使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OgcuWezqY"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/khoj-ai/khoj"&gt;Khoj&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款融合本地文档和在线搜索的 AI 第二大脑工具，可连接个人知识库、提供强大搜索引擎、支持在线离线使用，并提供定制 AI 智能代理协助完成任务，完全开源免费。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OfW04hxRS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Amery2010/TalkWithGemini"&gt;Talk With Gemini&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款可一键免费部署的私人 Gemini 应用程序，支持最新的 Gemini 模型，如 Gemini 1 . 5 Pro、Gemini 1 . 5 Flash 等，具有多模态支持、语音模式、视觉识别、助理市场、Markdown 支持、上下文压缩、隐私安全、精心设计的 UI 等特性。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OfKdrkyjt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/txstc55/ugly-avatar"&gt;ugly-avatar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源免费的潦草头像生成器，可以生成极具特色的头像，受到许多网友的喜爱。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ofki4s5aO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/solidSpoon/DashPlayer"&gt;DashPlayer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款专为英语学习打造的视频播放器，提供双语字幕、按字幕跳转、查词查询、可调整界面尺寸、记录播放位置、蓝牙遥控操作、夜间模式、AI 字幕生成、长视频切分和视频下载等功能，助力通过观看视频提升英语水平。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ofc2DBgRT"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/BasedHardware/openglass"&gt;OpenGlass&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于开源硬件的 AI 智能眼镜系统，只需 20 美元的成本即可将普通眼镜升级为智能眼镜，实现记录生活、识别物体、计算卡路里、实时翻译等多项 AI 功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oe6S6wjjP"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gezhaoyou/picprose"&gt;PicProse&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的封面图片制作工具，能帮助用户轻松为 Medium、Wordpress、微信等平台的文章制作精美封面。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OaVb6EzZm"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jina-ai/reader"&gt;Reader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的工具，专门用于将网页内容转换为 Markdown 格式，方便将网页内容整合到知识库中。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oa7PjB0mS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Dhravya/supermemory"&gt;SuperMemory&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的个人知识管理工具，可以帮助用户轻松收集和管理网上的有价值内容，通过 AI 快速查找和回顾已保存的内容，打造属于自己的"第二大脑"。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oa0kHfLaq"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://storm.genie.stanford.edu/"&gt;STORM&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由斯坦福大学开发的创新型 AI 写作工具，可根据主题自动收集信息、创建大纲，模拟专家对话并撰写完整文章，帮助编写出具有深度和广度的高质量内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O9vH5ciur"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nilsherzig/LLocalSearch"&gt;LLocalSearch&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款完全本地化的 AI 搜索集成工具，无需依赖任何外部 API，通过 LLM Agents 寻找答案，支持低配置硬件运行，提供详细进度日志和后续问题交互，界面美观支持浅色深色主题，支持 Docker Compose 部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O8XwhBOt1"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nashsu/FreeAskInternet"&gt;FreeAskInternet&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的基于搜索的问答 AI 工具，可本地运行无需 GPU 硬件支持，通过多引擎搜索并利用 GPT - 3 . 5 处理结果生成答案，确保隐私安全。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O8EFinFty"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/palxiao/poster-design"&gt;poster-design&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的在线创意图片编辑器，适用于海报图片生成、电商分享图、文章长图等场景，提供丰富的编辑功能，如元素拖拽、图片编辑、SVG 编辑、画布自定义等，无需客户端即可轻松完成图文排版。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O8DueqJmG"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/open-webui/open-webui"&gt;Open WebUI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款专为大型语言模型（LLM）设计的可扩展且功能丰富的 Web 界面，支持运行各种 LLM 模型，包括 Ollama、OpenAI 兼容 API、Gemini、Groq、Claude 等，提供直观界面、响应式设计、代码语法高亮、Markdown 和 LaTeX 支持、本地检索增强生成（RAG）集成、多模型支持与多模态互动、安全和多用户管理等丰富功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7TwOm5sS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Evil0ctal/Douyin_TikTok_Download_API"&gt;Douyin_TikTok_Download_API&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的高性能异步数据爬取工具，支持 API 调用和在线批量解析及下载无水印视频或图集，覆盖抖音、快手、TikTok、B 站等多个视频平台。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7K6jeyVS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://aicomicfactory.app/"&gt;AI Comic Factory&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 LLM + SDXL 技术的开源免费在线 AI 漫画生成工具，可自动生成精美漫画作品，支持自定义 LLM 和图像生成模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7IVfn7ua"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/SunoAI-API/Suno-API"&gt;Suno-API&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个非官方的 Suno AI API 项目，支持生成歌曲、歌词等功能，具有自动维护 token、全异步响应、代码简单易维护等特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7gDL4J5k"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mshumer/ai-journalist"&gt;Claude-Journalist&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Claude 3 的 AI 写作助手，可根据输入主题自动搜索相关信息、撰写和编辑高质量文章，提高写作效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O6TRedZob"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/harry0703/MoneyPrinterTurbo"&gt;MoneyPrinterTurbo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 AI 工具，可以根据提供的主题或关键词自动生成视频文案、素材、字幕和背景音乐，并合成高清短视频，支持多种功能如自定义文案、视频尺寸、批量生成、语音合成、字幕设置等，提高短视频制作效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O6Omh9qzQ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/zeke/livestory"&gt;LiveStory&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款利用 AI 进行实时语音绘图的工具，将传统的文本输入换成语音输入，实时生成图像，支持语音控制绘图。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O6cO4n2jo"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/chidiwilliams/buzz"&gt;Buzz&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费、简洁、可离线的音频转录和翻译工具，基于 OpenAI Whisper 开发，支持拖放导入音视频文件进行转录和翻译，转录文本可导出多种格式，支持多种语音识别框架和命令行操作。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5Rwp4vbC"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/NanmiCoder/MediaCrawler"&gt;MediaCrawler&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的自媒体爬虫工具，支持小红书、抖音、快手、B 站、微博等平台的视频、图片、评论、点赞、转发数据抓取，具备多种登录方式、指定数据爬取、IP 代理池和多种数据格式保存等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5AWioP9X"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6YeOe86"&gt;小浣熊智能助手&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由商汤科技研发的功能全面的国产 AI 工具，内置代码模式和办公模式，可大幅提升编程开发和协作办公效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4QYSysWr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/6174/comflowyspace"&gt;Comflowy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款针对 Mac 用户优化的 ComfyUI 整合包，提供一键部署、模型管理、工作流管理和扩展管理等功能，使用体验比官方 ComfyUI 更佳。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O3D4eDi2N"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lxfater/inpaint-web/tree/main"&gt;Inpaint-web&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 WebGPU 技术开发的开源免费图像修复和放大工具，可直接在浏览器上运行，无需客户端，提供图像局部擦除修复和超分辨率放大功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O3t0QckJj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Eladlev/AutoPrompt"&gt;AutoPrompt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个自动优化提示词的开源框架，可根据用户意图生成高质量详细的提示词，并通过迭代数据集不断优化提示词，减少工作量，解决敏感性和歧义性问题。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O2QI6s9hf"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/melon/qingwu-zimu"&gt;青梧字幕&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Whisper 的开源字幕提取工具，支持智能提取、编辑和高质量翻译字幕，可生成单/双语字幕并选择多种格式下载。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O2IGr0tzU"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/qnguyen3/chat-with-mlx"&gt;Chat with MLX&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的本地 AI 对话助手工具，可与本地数据进行交互，支持多种文件格式和语言，并可集成多个开源大语言模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O2Ijy2cy3"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fofr/cog-stickers"&gt;StickerBaker&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 AI 贴纸制作工具，结合了 Stickers SDXL Lora 和 BRIA 背景移除工具，只需输入简单的提示词，即可快速生成高清精美的贴纸。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O2yomp6bK"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/levihsu/OOTDiffusion"&gt;OOTDiffusion&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 AI 虚拟试衣工具，支持一键试穿上半身/下半身/连衣裙，服装与模特贴合自然，试穿效果逼真。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1CSjxOJV"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6YSFjDa"&gt;MoneyPrinter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款自动化创建短视频的工具，可根据主题自动生成带配乐及字幕的视频，并上传到 YouTube 获取收益。支持使用 GPT、DALL - E 等大模型生成脚本和图像。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1m9sxX52"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Nutlope/notesGPT"&gt;NotesGPT&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的语音笔记工具，界面简洁，支持语音输入转文字和自动总结，内置 Mixtral LLM 和 Whisper 转录引擎，支持中英混合输入。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1kYomKnv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/reorproject/reor"&gt;Reor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由 AI 驱动的开源免费桌面笔记工具，能够智能整理和归纳笔记内容，自动关联相关想法，内置 LLM 提供问答和语义搜索功能，可作为个人知识管理工具使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1jXYpMNd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lencx/Noi"&gt;Noi&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的高颜值 AI 客户端，集成了 ChatGPT、Claude、Bard、Poe 等主流 AI 模型，并内置 GitHub、HuggingFace 和 VS Code 等工具，支持自定义 Prompt 管理、多语言、多主题等功能，可在 MacOS、Windows、Linux 系统上安装使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NF1I7z18y"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Dooy/chatgpt-web-midjourney-proxy"&gt;ChatGPT Web + Midjourney Proxy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能全面的镜像站，支持 AI 对话、AI 换脸、Midjourney、GPTs、TTS Whisper 等多种 AI 功能，提供 Vercel 一键部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NEIagC5Iw"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bclswl0827/ChatGemini"&gt;ChatGemini&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的简洁 Google Gemini 网页客户端，界面和交互类似 ChatGPT，支持在对话框中上传图片并自动调用 Gemini - Pro - Vision 模型进行图像识别。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NExFt37tW"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/collabora/WhisperFusion"&gt;WhisperFusion&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 WhisperLive 和 WhisperSpeech 构建的 AI 对话系统，集成了 Mistral 大语言模型，实现了极低延迟的语音与 AI 对话体验，并通过 TensorRT 引擎优化和 torch . compile 技术提升了运行效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NEqulvSJE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/leptonai/search_with_lepton"&gt;search_with_lepton&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款使用不到 500 行代码构建的对话式搜索引擎，实现了类似 Perplexity 的效果，集成了大语言模型（Llama2、Mixtral）和搜索引擎（支持 Bing、Google 搜索），具有可自定义的个性化 UI 界面，支持搜索结果的共享和缓存。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NEmX9xo03"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/all-in-aigc/aicover"&gt;AI红包封面生成器&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 DALL - E 3 的 AI 红包封面生成工具，支持自定义生成红包封面图像，采用 Next . js 全栈开发，集成了多种功能如谷歌登录、图片上传、支付等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NEf2A0zm1"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/zed-industries/zed"&gt;Zed&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的高性能可多人协作代码编辑器，集成了 AI 代码生成和重构功能，提供语言感知、集成终端、多种编辑模式、团队协作和远程代码操作等强大功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NDWgHEVOi"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mlc-ai/web-llm"&gt;Web LLM&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款可在浏览器中直接运行大型语言模型的工具，支持 Llama 2 7B / 13B、Mistral 7B 和 WizadMath 等模型，并通过 WebGPU 实现加速，无需服务器支持。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NDMulfXnj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/collabora/WhisperSpeech"&gt;WhisperSpeech&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Whisper 语音识别模型的开源文本转语音工具，目前仅支持英语，作者计划在下一个版本增加多语言支持，可用于商业用途。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCHfHoIKx"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/RVC-Boss/GPT-SoVITS"&gt;GPT-SoVITS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的中文语音克隆工具，仅需 5 秒语音样本即可实现 80 %~ 95 %相似度的声音克隆，提供 1 分钟语音可逼近真人效果并生成高质量 TTS 模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCo6Xt3ta"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/netease-youdao/QAnything"&gt;QAnything&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的知识库问答引擎，支持本地部署和调用云端大模型服务，可导入多种格式文档，提供准确快速可靠的问答体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCivo7c6k"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Portkey-AI/gateway"&gt;AI Gateway&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款统一的 API 网关工具，可轻松快速接入 100 多种大语言模型，如 OpenAI、Anthropic、Mistral、LLama2、Google Gemini 等，具有占用空间小、处理速度快、支持负载均衡、故障转移、自动重试等优势，已在超过 100B Tokens 上进行实战测试。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NC6ILzu2Q"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/liwenju0/cutword"&gt;cutword&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个简单快速的中文分词和命名实体识别工具，分词速度是知名"结巴"中文分词的两倍，字典文件根据最新数据统计得到，词频更加合理。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NC3YicKMg"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/piddnad/DDColor"&gt;DDColor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 AI 的图像着色工具，可为黑白老旧照片和动漫游戏场景提供逼真自然的着色效果，实现照片级真实感。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NBYtl76nL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AIGCDesignGroup/ReplaceAnything"&gt;ReplaceAnything&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由阿里巴巴发布的 AI 内容替换工具，能够准确保留指定的物体（如人脸、人物、服装、物品等），并通过输入提示词实现超高质量的内容替换，可用于人物替换、服装替换、背景替换等多种场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NBXz9pRhx"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/janhq/jan"&gt;Jan&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的本地 AI 工具，可无需编码运行主流大语言模型如 Mistral、Llama、Mixtral 等，支持 Windows、Mac 和 Linux 系统，拥有简洁美观的 UI 界面。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NB2WZDMgy"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/nan"&gt;Mobile ALOHA&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款多功能家务机器人，可以帮助浇花、拖地、做饭、逗猫、扔垃圾、洗衣服、铺床单、整理衣物等家务活动，具有模仿学习和远程操作功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NAqQMF5ST"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Frrrrrrrrank/auto_job__find__chatgpt__rpa"&gt;Auto Job Find Assistant&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款结合 GPT 和 RPA 技术的自动投简历助手，可根据个人简历和职位要求自动匹配合适的工作机会，生成自我介绍和求职信，并自动发送给 HR，实现一键寻找工作的全流程自动化。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NAimK7naB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h3&gt;免费书籍&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wangwei1237/LLM_in_Action"&gt;Large Language Model in Action&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本专注于大语言模型实践应用的开源书籍，通过介绍工具和案例实践，帮助读者快速上手大模型应用开发。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P63IAy7du"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://%E6%97%A0"&gt;Select Star SQL&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本免费的互动式学习 SQL 书籍，共五章内容，每章约 30 分钟，涵盖行操作、分组聚合、表连接等主题，结合实际案例学习。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCnwbDxHU"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/NannyML/The-Little-Book-of-ML-Metrics"&gt;The Little Book of ML Metrics&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本面向数据科学家的开源免费书籍，涵盖广泛的机器学习指标，包括回归、分类、聚类、排行、计算机视觉和自然语言处理等领域，旨在成为数据科学家的快速参考手册。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBxRDpUiz"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://lfs.xry111.site/zh_CN/12.2/index.html"&gt;Linux From Scratch 中文翻译版&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本免费的在线书籍，教授从源代码开始构建整个 Linux 系统的过程，深入了解 Linux 工作原理，支持个性化定制和优化，提高系统安全性，通过实践获得 Linux 系统的深刻理解。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAJjE4NxJ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/handsOnLLM/Hands-On-Large-Language-Models"&gt;Hands-On Large Language Models&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本由吴恩达老师推荐的关于大语言模型的实践指南书籍，涵盖语言模型基础知识、文本分类、提示工程、语义搜索、多模态语言模型等内容，配有案例代码、插图和引用论文，帮助读者深入理解和使用大语言模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OxSqEpjmb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://foxsen.github.io/archbase/index.html"&gt;计算机体系结构基础（第三版）&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本由"龙芯之父"胡伟武老师等编写的开源免费在线书籍，涵盖指令系统结构、计算机硬件结构、CPU 微结构、并行处理结构、计算机性能分析等内容，适合本科生、研究生和技术人员学习参考。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvI5Adb3R"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/R7cZfp3"&gt;Decision Making Under Uncertainty&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本由麻省理工学院出品的免费电子书，涵盖概率推理、序列决策问题、模型/状态不确定性以及多 Agent 系统等内容，使用大量示例和练习帮助读者理解不同算法的直觉和应用场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsEapfo3p"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/llwslc/grammar-club"&gt;Grammar Club&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本开源且免费的在线英语语法学习书籍，采用循序渐进的方式，从初级到高级分为三大篇幅，涵盖简单句、复句、合句和简化从句等内容，旨在培养英语能力、建立信心并增强阅读兴趣。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oq5hdAmUT"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/careywyr/UnderstandingDeepLearning-ZH-CN"&gt;《理解深度学习》中文版&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本由麻省理工开源的深度学习教材中文版，全面涵盖深度学习基础概念、监督学习、强化学习等内容，并提供 PPT、笔记和 Python 练习 Demo。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoxD0vPwf"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/udlbook/udlbook"&gt;Understanding Deep Learning&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本来自麻省理工的开源书籍，全面涵盖了深度学习的基础概念、监督学习、强化学习、线性回归、神经网络、扩散模型等内容。该书提供了 PPT、笔记和 68 个 Python 练习 Demo 供学习和实践。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oml7ZfYGb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/luckrnx09/python-guide-for-javascript-engineers"&gt;Python Guide for JavaScript Engineers&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本面向 JavaScript 工程师的 Python 学习指南，由一名前端工程师编写，系统介绍了 Python 环境搭建、项目开发等内容，并对比了 JavaScript 和 Python 的异同，帮助 JavaScript 工程师快速掌握 Python 语言。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Om6N3uysr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/isno/theByteBook"&gt;深入超高可用架构原理与实践&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一本开源的架构设计书籍，涵盖云计算、网络、分布式系统、容器技术、可观测性、服务网格、DevOps 等主题，帮助程序员深入理解相关技术的原理与实践。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlzWze7Y2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h3&gt;学习教程&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6mkWHyD"&gt;Reasoning with o1&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一门由 OpenAI AI 解决方案主管 Colin Jarvis 主讲的免费 AI 短课程，教授如何有效使用 OpenAI 最新推理模型 o1，包括多步骤任务规划、代码开发与编辑、图像理解等实践项目，帮助学习者掌握 o1 模型的高级推理能力。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5KRx9BEa"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/EJKb2nf"&gt;A Programmer's Guide to English&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份专为程序员设计的英语学习指南，通过程序员易于理解的方式剖析语言学习本质，提供适合不同水平的训练方法和学习资料推荐，并从构建英语识别程序的角度助力学习。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODalbpiMt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hesamsheikh/ml-retreat"&gt;ML Retreat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份从中级到高级的 AI 学习路径，包含作者在学习高级机器学习时的个人笔记和资源，涵盖从基础到更高级主题的深入理解，如从头构建大语言模型、LLM 幻觉深入研究以及 LLM 超越注意力机制等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBum9wgGe"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.cs.cmu.edu/~hn1/documents/machine-learning/notes.pdf"&gt;Machine Learning Course Notes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份来自卡内基梅隆大学的机器学习入门课程笔记，涵盖了机器学习各主题的要点，包括非参数模型、线性回归、逻辑回归、神经网络、支持向量机等，针对初学者提供全面的概念解释、数学证明和算法步骤。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OzRhXEtCy"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A68R6CQ0"&gt;AI Python for Beginners&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一门由吴恩达老师主讲的免费 AI 短课程，面向初学者，教授 Python 编程基础知识以及集成 AI 工具进行数据操作、分析和可视化，通过真实项目实践强化 Python 技能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwBhjxcpT"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6RCcp0z"&gt;软件工程师学习指南&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份从零开始成为软件工程师的详细学习指南，涵盖计算机基础知识、软件开发工具和流程、数据库、面向对象编程、DevOps 工具等内容，从 Python 语言入门，最后提供编码面试准备、工作选择和持续学习建议。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ov7LUjLhG"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/DorsaRoh/Machine-Learning"&gt;Machine-Learning&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份从零开始学习机器学习算法的教程，包含神经网络和 Transformer 模型的详细解释和 Python 实现代码，如 Neuron、Layer 和 NeuralNetwork 类，还提供机器学习视频和 Jupyter Notebook 文件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OuNwC1Hgi"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xuchengsheng/spring-reading"&gt;Spring-Reading&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份深入了解 Spring 源码的系列学习资料，涵盖了 Spring 框架的核心概念和关键功能，如资源加载、表达式语言、Bean 定义、Aware 接口、核心注解和 AOP 等，帮助更透彻地理解 Spring 内部工作机制。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpZnTy6ae"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6aP9tQt"&gt;Machine Learning Specialization&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套由吴恩达老师主讲的机器学习专业课程，包括机器学习回归与分类、高级学习算法、无监督学习等多个领域，涵盖监督学习、无监督学习、神经网络等内容，适合初学者和希望在人工智能领域发展的专业人士学习。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Opx6pj0Zz"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/decodingml/llm-twin-course"&gt;LLM Twin Course&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一门全面的大型语言模型（LLM）免费学习课程，教授如何构建生产级别的 LLM 和基于 LLM 的检索增强生成（RAG）系统，涵盖系统设计、数据工程、特征管道、训练管道和推理管道等方面。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OorVRAcQU"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/juraam/stable-diffusion-from-scratch"&gt;Stable Diffusion From Scratch&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套系统性的教程，讲解 Stable Diffusion 和扩散模型的工作原理及其背后的数学知识，并提供一系列步骤指导训练完成一个扩散模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnZEnsNN7"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jla524/fromthetensor"&gt;From Tensor to Stable Diffusion&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份开源的深度学习教程，提供为期 9 周的课程大纲，从张量基础到稳定扩散模型实现，包括视频讲解、代码实现和论文学习。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmNpttYXs"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/datawhalechina/so-large-lm"&gt;大模型理论基础&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份关于大规模预训练语言模型的教程资料集合，涵盖数据准备、模型构建、训练策略、模型评估与改进等内容，旨在为读者提供深入的理论知识和实践方法。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlNW47BIP"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/FareedKhan-dev/AI-text-to-video-model-from-scratch"&gt;AI Text-to-Video Model from Scratch&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份手把手教程，教你如何使用 Python 从零开始构建一个文本到视频生成模型，涵盖理论概念、架构设计和编码实现等全过程。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlFSO6VRt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jaywcjlove/nginx-tutorial"&gt;nginx-tutorial&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份开源的 Nginx 入门学习笔记，涵盖基础安装、参数说明、配置讲解、第三方模块安装、性能优化及常见使用场景等内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlEvzdgci"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mrdbourke/pytorch-deep-learning"&gt;PyTorch Deep Learning Tutorial&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份开源的《从零到精通深度学习 PyTorch》教程，涵盖 PyTorch 基础、深度学习工作流程、计算机视觉、自定义数据集处理、模块化代码编写及模型部署等内容，提供视频和代码示例，适合有 Python 编程和基础机器学习知识的初学者。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlpPMu4WI"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://genai-handbook.github.io/"&gt;Generative AI Handbook&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份系统化的生成式人工智能学习路线手册，包含 9 大章节，涵盖生成式 AI 的基础知识、实践应用和最新研究进展，并提供相关学习资源。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ok3Ix6QQY"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://www.lingohut.com/zh"&gt;LingoHut&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个免费的在线语言学习平台，提供 45 种语言的学习资源，包括 125 节免费课程，涵盖日常用语和词汇，让你用母语轻松学习新语言。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OjHklDrnR"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/WTFAcademy/WTF-zk"&gt;WTF-zk&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份零知识证明入门教程，旨在让仅有高中数学基础的人也能入门零知识证明（zk）技术，教程使用 Python 复现相关算法，需要一些 Python 语言基础。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OgvlVhJdx"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mainmatter/100-exercises-to-learn-rust"&gt;100-exercises-to-learn-rust&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套包含 100 个练习的 Rust 编程语言学习资源，旨在帮助初学者从零基础逐步掌握 Rust 编程，最终能够独立编写 Rust 程序。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OfDgO9yQA"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/LLMBook-zh/LLMBook-zh.github.io"&gt;《大语言模型》电子书籍&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份全面系统地介绍大语言模型的电子书籍，涵盖基础理论、预训练、微调与对齐、使用部署以及评测与应用等内容，为大模型入门读者提供详细指南。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oflvak2z1"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Lordog/dive-into-llms"&gt;《动手学大模型》&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份由上海交通大学《人工智能安全技术》课程讲义拓展而来的编程实战教程系列，通过实践帮助快速入门大模型相关技术，涵盖模型微调与部署、提示学习与思维链、知识编辑、模型水印以及大模型智能体与安全等内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OdKhKlOrt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/elicit/machine-learning-list"&gt;machine-learning-list&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份较为全面的机器学习教程，涵盖从基础到高级再到实践与应用的内容，包括基本简介、训练和微调、推理和执行策略、数据集处理以及实际应用等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OaaWfFiNX"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bradtraversy/50projects50days"&gt;50projects50days&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份包含 50 个使用 HTML、CSS 和 JavaScript 实现的小 Demo 的项目集合，适合前端初学者练手，涵盖动画导航、背景滑块、密码生成器、图像轮播等常见网站功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O9y3cCdKM"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/datawhalechina/self-llm"&gt;self-llm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份超全面的开源大模型使用指南，提供针对国内初学者的开源大模型教程，通过 AutoDL 平台简化模型部署、使用和应用流程。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O8MUIyrVD"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/liyupi/sql-mother"&gt;SQL之母&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个免费的闯关式 SQL 自学网站，通过有趣的交互式关卡，让初学者从 0 到 1 掌握常用 SQL 语法，包括 30 多个关卡、在线提交代码、自由选择关卡、自定义关卡等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5TNi3BCb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/huggingface/course"&gt;Hugging Face AI Courses&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套由 Hugging Face 出品的 4 门 AI 学习课程，涵盖自然语言处理、深度强化学习、音频处理和开源 AI 开发等主题，适合初学者免费学习。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4GmqkbnY"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/cuixueshe/earthworm"&gt;earthworm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个通过连词构句的方式帮助用户更好地学习英语的开源项目，从简单到复杂的句子逐步训练，让用户轻松掌握写出长句子，顺便还可以练习键盘英文打字。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4es38OKr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/farhanashrafdev/90DaysOfCyberSecurity"&gt;90DaysOfCyberSecurity&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份 90 天网络安全学习计划，涵盖网络基础、安全基础、Linux、Python、流量分析、Git、ELK、AWS、Azure 和黑客攻击等主题，提供完整的学习资源和材料。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NEo8e4Qju"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/rasbt/LLMs-from-scratch"&gt;Build a Large Language Model (From Scratch)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套从零开始构建类似 ChatGPT 的大型语言模型（LLM）的教程，涵盖了文本数据处理、注意力机制实现、模型构建、预训练、微调等内容，帮助读者深入了解 LLM 的工作原理和实现方式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NEbXf8R0H"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mlabonne/llm-course"&gt;LLM Course&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份开源免费的大语言模型课程，包含详细的学习路线和实践笔记，分为三个部分：LLM 基础教程、LLM 深入探索和 LLM 应用与部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NDEaNgSEd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://cs50.harvard.edu/x/2024/"&gt;CS50&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一门由哈佛大学免费开放的计算机科学和编程入门课程，教授编程基本原理和计算思维方法，涵盖 C、Python、SQL、HTML、CSS 和 JavaScript 等多种语言，最后以终极项目作为收官。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NDDbUuY3i"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/byoungd/English-level-up-tips"&gt;English-level-up-tips&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份系统化的英语学习指南，包含认知、单词、听力、阅读、口语、写作和扯淡等七大章节，旨在帮助用户高效提升英语水平。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NDhArlM4d"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yeasy/docker_practice"&gt;Docker 从入门到实践&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份全面的 Docker 学习指南，涵盖了 Docker 的基础知识、安装、镜像使用、容器操作、数据管理、网络配置等内容，旨在教会新手有效使用 Docker。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCpzLCrZj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h3&gt;实用工具&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/stark81/VutronMusic"&gt;VutronMusic&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高颜值的第三方网易云音乐播放器，支持本地歌曲、离线歌单播放，读取歌曲封面、内嵌歌词等功能，同时支持线上信息匹配、云盘、对歌曲评论，界面纯净无广告。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P7iwOnglL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/addyosmani/squish"&gt;Squish&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的图像压缩工具，支持多种图像格式，具有高性能压缩优化功能，能保持图像质量不变，并提供批量处理、格式转换、实时预览等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6Uy8njRw"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/schlagmichdoch/PairDrop"&gt;PairDrop&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开箱即用的跨平台文件传输工具，无需注册和安装，只需浏览器即可在同一局域网内任意设备之间自由传输文件，还支持创建临时公共房间实现公网传输，采用点对点传输保证数据安全隐私。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6PDIrGgz"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/bluewave-labs/checkmate"&gt;Checkmate&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高颜值的可视化实时监控工具，支持网站、页面加载速度、Docker 容器、Ping 响应等多种监控类型，并提供服务器 CPU、内存、磁盘和温度等状态信息。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6Oatg3Kv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jason5ng32/MyIP"&gt;MyIP&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 IP 工具箱，可以检查 IP 地址、地理位置、DNS 泄露、网速测试、Ping 测试和网站可用性等，提供 258 项安全检查清单及详细解释。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6GD6rY0f"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://hgithub.com/mfontanini/presenterm"&gt;Presenterm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源工具，能够在终端上演示由 Markdown 创建的精美 PPT，支持代码高亮、图片展示、LaTeX 公式渲染等功能，内置丰富主题风格并可自定义，还可导出 PDF 文件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6sgEaqDS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Tichau/FileConverter"&gt;File Converter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款实用的文件格式转换工具，支持视频、音频、图片和文档等多种文件格式转换，可以快速完成文件格式转换和压缩，支持批量处理。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6ek51Q56"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mistricky/CodeSnap"&gt;CodeSnap&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Rust 开发的代码截图工具，可离线使用，支持 Sublime Text 代码语法高亮主题，可自定义字体、行号、水印等，支持 PNG、SVG 和 HTML 输出格式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6d90tfJ1"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/soulteary/ip-helper"&gt;IP Helper&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款简洁的 IP 信息查询工具，支持 Web、命令行、Telnet 和 FTP 等多种查询方式，提供 IP 地理位置查询、Token 认证和自定义域名等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P69pE9DTa"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ShouChenICU/FastSend"&gt;FastSend&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 WebRTC 技术的开源免费点对点文件传输工具，支持快速安全的文件和目录同步传输，具有加密传输、局域网优化、简洁界面等特性。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5QyEsF1z"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/JunyaoHu/academic-project-page-template-vue"&gt;academic-project-page-template-vue&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个基于 Vue 开发的学术论文项目页面模板，支持轮播图、嵌入视频、数据可视化等丰富功能，还能一键复制引用格式，内置评论系统，非常适合研究人员快速直观地呈现论文基本信息。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5BAesHje"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/janreges/siteone-crawler"&gt;SiteOne Crawler&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款简单易用且功能强大的网站分析工具，可一键完成网站分析、性能检测、SEO 优化建议，并导出完整的离线 HTML 分析结果，用于网站分析优化。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P5s0xc6FE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/git-jiadong/wechatDataBackup"&gt;wechatDataBackup&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款微信聊天记录导出工具，提供类似微信的简易操作界面，支持一键导出聊天记录、图片、视频、链接、语音、文件和表情等信息。还支持按类型、日期、群成员进行检索，以及多开账号选择导出和数据切换。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P3k7T5BOE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/m1k1o/neko"&gt;Neko&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的虚拟浏览器工具，支持多人同时访问和控制同一浏览器界面，实现画面和声音同步，内置聊天系统、文件传输等功能，可用于远程协作、在线观影等场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P3aB5gbmE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/koodo-reader/koodo-reader"&gt;Koodo Reader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的跨平台电子书阅读器，支持多种格式导入、多种阅读模式、听书、翻译、词典等功能，并提供个性化排版、笔记标注等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P1mEcsNta"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kingToolbox/WindTerm"&gt;WindTerm&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高颜值且功能强大的跨平台终端工具，支持多种协议连接、文件传输、多语言界面、命令补全、文件管理、分屏显示等功能，具有高性能、低延迟和低内存占用的特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P0qU8soSZ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/marktext/marktext"&gt;MarkText&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高颜值的开源 Markdown 编辑器，界面简洁干净，提供实时预览、多种主题和编辑模式等功能，支持数学公式、表情符号、快捷键等，可导出 HTML 和 PDF 文件，适用于 Windows、macOS 和 Linux 系统。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P0htEbTHs"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jaywcjlove/rightmenu-master"&gt;RightMenu Master&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款 Finder 右键菜单增强工具，内置多个实用预设操作，支持移动复制文件、创建新文档、代码高亮预览、快捷打开常用文件夹和终端等，旨在提升 Mac 用户的工作效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OFSlBwmq4"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/filecxx/FileCentipede"&gt;File Centipede&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的文件上传/下载管理器，支持多种协议如 HTTPS、BT /磁力链接、FTP、WebDAV、m3u8 等，内置多种实用辅助功能，还提供浏览器插件抓取网站音视频。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OFDdYCVjZ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/paperless-ngx/paperless-ngx"&gt;Paperless-ngx&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的文档管理系统，能够将纸质文档转换为在线可搜索的文档，支持 OCR 技术、自动分类、多种文件格式、多语言识别、全文搜索等功能，界面美观，提供权限管理。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OFtNu4PO5"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yournextstore/yournextstore"&gt;Your Next Store&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套基于 Next . js 开发的 Shopify 独立站搭建开源解决方案，使用 Stripe 管理产品及支付，界面简洁美观，提供完整的购物流程。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OFkmZxzKo"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Uahh/ToastFish"&gt;ToastFish&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款利用 Windows 通知栏背单词的开源工具，可在工作或上课时隐蔽地背诵英语单词，支持自定义词库、设置背诵数量和单词测试等实用功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OEJQ41h7r"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/HeyPuter/puter"&gt;Puter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的个人云电脑工具，提供丰富功能、极致体验和高度个性化定制，可作为网盘、开发环境、远程桌面等使用，支持自托管保护隐私。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OEwSntki0"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6nITzAU"&gt;MD3-Windows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Material You 设计风格的 Windows 桌面美化工具，能根据壁纸自动调整配色，提供丰富的桌面小组件和自定义功能，打造整洁实用的桌面体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OE3dEq2Us"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/junegunn/fzf"&gt;fzf&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的命令行模糊查找器，通过模糊匹配算法快速筛选列表中的命令、文件、历史记录等，支持多种显示模式和自定义选项，并与 bash、zsh、fish、Vim 和 Neovim 等集成。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODEFwtsKO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/newsapp/newsnow"&gt;NewsNow&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款优雅的实时热门新闻阅读工具，包括国内、国际、科技、财经等多个类别，整合了微博、知乎、抖音、澎湃、GitHub、华尔街、Hacker News、IT 之家等多个平台的热门资讯。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODvf1Bkms"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/laurent22/joplin"&gt;Joplin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的跨平台笔记应用，支持 Markdown 语法、多种内容插入和管理，可作为印象笔记、OneNote 的替代品，提供多种同步、导入导出、加密等功能，适用于学习整理、会议记录、文档管理等场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OD2Xxnl12"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Guovin/TV"&gt;TV&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款 IPTV 电视直播源更新工具，可自定义频道菜单，根据模板频道自动获取并更新最新直播源接口，生成可用接口文件，支持多种运行方式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCTNJclWE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/barry-ran/QtScrcpy"&gt;QtScrcpy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的手机投屏电脑工具，支持通过 USB 或 WIFI 无需 root 权限连接 Android 设备到电脑，提供实时屏幕显示、键鼠控制、录制截图、文件传输等丰富功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCSyO7RDd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/mifi/lossless-cut"&gt;LosslessCut&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高效的无损音视频剪辑工具，能够在几秒内完成对音视频的无损压缩，特别适用于高清视频文件。还支持快速提取视频精华、添加配乐字幕轨道等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCK6yeFZh"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/1Remote/1Remote"&gt;1Remote&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的远程会话管理工具，支持多种协议如 RDP、VNC、SSH 等，具有快速启动、多显示器支持、细节配置、界面定制等特性，提升远程管理效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCrfy9uKC"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jooooock/wechat-article-exporter"&gt;wechat-article-exporter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的微信公众号文章批量下载工具，可在线导出公众号文章，支持音视频导出和私有部署，能还原文章样式，过滤已删除文章，根据规则自动下载并缓存数据。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCe5H6xOP"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/localsend/localsend"&gt;LocalSend&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款无需联网的跨平台本地文件传输工具，类似 AirDrop，可在本地网络上安全共享文件和消息，简单易用且传输速度超快。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OC8oyBiW2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/siyuan-note/siyuan"&gt;思源笔记&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款隐私优先的个人知识管理系统，支持细粒度块级引用和 Markdown 所见即所得编辑，拥有实时渲染、数学公式、图表、导出 HTML、Markdown 文件、AI 写作等特性，支持跨平台使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBPxzcajL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/1Panel-dev/1Panel"&gt;1Panel&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 Linux 可视化管理工具，提供实时监控、文件管理、快速建站、一键安装应用、计划任务管理等功能，让用户更方便地管理 Linux 服务器。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBG74mdxj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sickcodes/Docker-OSX"&gt;Docker-OSX&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的黑苹果部署工具，可在 Windows 或 Linux 的 Docker 容器中一键部署安装 macOS 系统，支持共享文件夹、USB 设备热插拔、音频驱动配置等功能，提供接近原生的体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBwGzu4N9"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xushengfeng/eSearch"&gt;eSearch&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的多功能工具，具有截屏、OCR、搜索、翻译、贴图、以图搜图以及录屏等功能，支持 Windows、Linux 和 macOS 系统。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBng4zJ1L"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ZCShou/GoGoGo"&gt;GoGoGo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的虚拟定位 APP，无需 ROOT 权限即可轻松修改位置信息和模拟移动，提供历史记录、位置搜索和直接输入坐标等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBf0E1RIk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jinweijie/notify-me"&gt;Notify Me&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 Android 应用，可以捕获手机来电和短信信息，并将数据转发到 Bark 服务器或电子邮箱，实现跨设备及时接收重要通知。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OB4q9FHUQ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/immich-app/immich"&gt;immich&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的高性能照片和视频自托管解决方案，支持内容自动备份、快速上传下载、共享相册、足迹地图、内容时间线索引和元数据搜索等功能，提供 Docker 部署方式和安卓、iOS 客户端。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OASCsxnjC"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dreamhunter2333/cloudflare_temp_email"&gt;cloudflare_temp_email&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个基于 CloudFlare 免费服务搭建的功能全面的临时邮箱开源项目，支持收发邮件、访问密码、自动回复、查看附件等多种功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAzLt2Ie5"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/honmashironeko/ProxyCat"&gt;ProxyCat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款能将临时 IP 变成固定 IP 的代理池中间件，支持多协议、动态获取、自动验证，配合高并发异步处理，适用于需要频繁更换 IP 的网络操作场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAoXJu5Fj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/0xJacky/nginx-ui"&gt;Nginx UI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大且界面友好的 Nginx 可视化管理工具，提供服务器监控、证书管理、配置编辑、日志分析等多种功能，支持多语言和深色模式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAb1alvfb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/imfile-io/imfile-desktop"&gt;imFile&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Motrix 开发的开源免费下载工具，界面简洁易用，支持 HTTP、FTP、BT、磁力链等多种资源下载，具有多线程下载、限速、模拟 UA、系统通知等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OA9Q6qLcI"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/amir1376/ab-download-manager"&gt;AB Download Manager&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的下载管理器工具，能够提升高达 500 %的下载速度，批量管理下载队列，自定义下载速度，并提供浏览器扩展自动获取下载链接。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ozy87aIJ4"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/files-community/Files"&gt;Files&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Windows 设计的功能强大的文件管理器工具，支持标签页管理多个文件夹、双面板对比文件夹内容、云端存储集成、压缩文件处理以及 Git 项目管理等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OzoHD5cKS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Bao-qing/123pan"&gt;123pan&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款能突破 123 云盘下载速度限制的 Python 脚本工具，提供列出文件、下载文件、上传文件、分享文件等功能，为 Windows 用户提供开箱即用安装包。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ozfik5v0H"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Lakr233/BBackupp"&gt;BBackupp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 iOS 设备备份工具，支持备份到外置硬盘、监控备份进度、加密备份，可以无缝迁移到新设备。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OyulQexGD"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/doocs/md"&gt;md&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的微信 Markdown 编辑器，支持自定义 CSS 样式、Markdown 语法、LaTeX 公式，提供多种实用功能如格式化、取色、图片上传等，界面简洁好用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OylTdiuz1"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/glushchenko/fsnotes"&gt;FSNotes&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款简洁且功能强大的笔记管理工具，支持 Markdown 和纯文本文件、多文件夹存储、代码语法高亮、内联图片、跨笔记链接、暗黑主题等丰富功能，适用于 macOS 和 iOS 系统。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OxZv2dwKk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Adonis142857/Real-Address-Generator"&gt;Real-Address-Generator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个基于 Cloudflare Workers 的真实地址生成器，可以生成不同国家的真实随机地址，包括姓名、性别、电话号码和详细地址等信息。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OxTNThUjc"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/BookerLiu/GeekDesk"&gt;GeekDesk&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高颜值、功能强大的桌面快速启动管理工具，集成了强大的文件搜索、自定义快捷键、壁纸、界面效果调整、系统图标选择和定时提醒等功能，旨在为用户打造高效且个性化的极客桌面体验。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OxJ0h5tgL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/spacedriveapp/spacedrive"&gt;Spacedrive&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Rust 开发的跨平台文件管理器，提供安全且直观的文件管理体验，能够结合云端存储和本地硬盘，打造个人分布式云。功能丰富，包括文件预览、识别、搜索、多视图布局、AI 标签、云存储支持、个性化主题和多语言支持等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwCEyfS7c"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/tw93/Pake"&gt;Pake&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Rust 的开源工具，能将任何网页轻松打包成多端桌面应用，相比 Electron 更加小巧、快速、高性能、低内存占用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Owte44RSn"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/usual2970/certimate"&gt;Certimate&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 SSL 证书管理工具，可自动申请、部署 SSL 证书并在证书即将过期时自动续期，提供安全便捷的 SSL 证书管理解决方案。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwrQPcipY"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wanglin2/mind-map"&gt;SimpleMindMap&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 JavaScript 实现的开源 Web 思维导图工具，具备思维导图核心功能，支持插件扩展更多实用功能，提供在线体验，上手简单。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwcJc7RlZ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/udecode/plate"&gt;Plate&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 React 的功能强大且高颜值的 Markdown 富文本编辑器框架，提供 50 多个插件开箱即用，支持无缝系统集成和组件定制开发，UI 响应式设计支持深浅色主题。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwbKjtDWo"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/shadow1ng/fscan"&gt;fscan&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的内网综合扫描工具，支持主机存活探测、服务爆破、redis 批量写公钥、web 指纹识别和漏洞扫描等功能，可一键自动化全方位进行漏扫扫描。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ow3kI7Bqr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xiaoyaocz/dart_simple_live"&gt;Simple Live&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的聚合直播工具，集成了各大主流直播平台，支持多账号登录、观看记录、链接解析、弹幕设置等功能，提供 Android、iOS、Windows、macOS 和 Android TV 客户端。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvKDfcsAU"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hanxi/xiaomusic"&gt;xiaomusic&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的工具，可让小爱音箱播放本地音乐，支持多种音频格式，语音控制播放，自动搜索下载匹配歌曲，支持网络歌单、电台、Docker 部署等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ov6zSs7wL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/infrost/DeeplxFile"&gt;DeeplxFile&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Deeplx / playwright 实现的简单易用、快速且免费的文件翻译工具，不限制文件大小，支持超长文本翻译，使用 DeepL 作为翻译源，能够翻译超长且复杂的文档，如超大的 Excel 文件，甚至还能正确显示复杂的引用公式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OuCIS74zL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/4gray/iptvnator"&gt;IPTVnator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的跨平台 IPTV 播放器，界面简洁且功能强大，支持导入播放列表、自动更新、频道搜索、电视存档、分组频道列表、多种主题等，支持外部播放器和 HTML 视频播放器，提供多语言支持。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ot0KLqZ3w"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ayangweb/EcoPaste/"&gt;EcoPaste&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的剪贴板管理工具，具有轻量小巧、快捷唤醒、本地存储、智能分组、收藏功能、内置搜索、图片 OCR 等特性，功能全面且操作便捷。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oqdkt1Qrf"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sinaatalay/rendercv"&gt;RenderCV&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 LaTeX 的简历框架，内置多种主题，可从 YAML 输入文件生成 PDF、LaTeX、Markdown、HTML 和 PNG 格式的高质量简历文档。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpdfoEmLf"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Dhravya/cloudflare-saas-stack"&gt;cloudflare-saas-stack&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套基于 Cloudflare 的全栈 SaaS 开发模板，可快速在 Cloudflare 上构建并部署全栈应用，包括数据库、认证、样式、存储等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Op4OV0Cwz"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/alienator88/Pearcleaner"&gt;Pearcleaner&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费且简洁好用的 Mac 软件卸载工具，提供高颜值简洁的操作界面，支持多选一键卸载软件并清理残留文件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoZUujrNb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/chenfan0/fideo-live-record"&gt;Fideo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费且易于使用的直播录制工具，能够简单快捷地录制 YouTube、TikTok、抖音、快手、B 站、微博、淘宝等平台的直播内容，并保存为 MP4 格式的视频文件，提供开箱即用的安装包，支持 Windows 和 macOS 系统。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoUdmAP9O"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/codewithsadee/vcard-personal-portfolio"&gt;vCard&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款使用 HTML、CSS 和 JavaScript 构建的纯静态网站模板，界面布局适配所有设备，可用于搭建在线个人介绍或个人简历。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oog9foIZB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Pintree-io/pintree"&gt;Pintree&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款将浏览器书签转换成美观导航网站的开源工具，可直观展示和管理大量书签，提高使用效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oo94Snaba"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/raycast/ray-so"&gt;ray.so&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套来自 Raycast 团队的开源 Web 工具箱，提供代码图片生成器、图标制作器、高颜值 Raycast 主题等多种实用工具。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oo6IL8dmy"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kevin2li/PDF-Guru"&gt;PDF Guru&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的功能强大的 PDF 工具箱，支持水印去除、批量添加书签、OCR、格式转换、合并、拆分、插入、替换等多种 PDF 实用功能，还提供卡片制作、视频笔记、字段批量修改等额外功能，可大幅提高办公和学习效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oo5lvBNEx"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/revezone/revezone"&gt;Revezone&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款以图形为中心的思维管理工具，集成了无限画布白板、所见即所得编辑器、边栏文件管理和灵活布局等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnRoWwuUj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/caorushizi/mediago"&gt;MediaGo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的视频在线提取工具，支持流媒体下载、视频下载、m3u8 文件下载以及 B 站视频下载，具有无需抓包、移动播放、批量下载等特性，提供 Windows 和 macOS 桌面客户端。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnD41xHPp"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/pacexy/flow"&gt;Flow&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的在线 ePub 阅读器，支持书内搜索、多主题切换、图片预览、链接分享、下载书籍、自定义排版、高亮笔记、数据导出以及云端存储等功能，兼容跨平台使用，可离线运行，允许同时阅读多本书。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnxmTmvCT"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/danbao/auto-ssl"&gt;Auto-SSL&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个自动化管理域名 SSL 证书的开源项目，利用 GitHub Actions 和 acme . sh 实现自动申请、续期 SSL 证书，并将证书保存到 Git 仓库。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnfGY1ZKR"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/XPoet/picx"&gt;PicX&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 GitHub API 的图床工具，提供图片上传托管、生成图片链接和常用图片工具服务，具有开箱即用、操作简单、数据安全等特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmRVxsPvt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/luost26/academic-homepage"&gt;academic-homepage&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源的 GitHub Pages 模板，可快速搭建个人学术主页，包含个人简介、教育经历、发布学术列表等内容，页面布局兼容移动端。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmMepzej2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/aome510/spotify-player"&gt;spotify_player&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款快速、易用且高度可配置的终端 Spotify 播放器，具有极简界面、个性化配置、远程控制、歌词显示、跨平台支持、图像渲染、桌面通知等功能，提供丰富的 CLI 命令。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Omr1ip0Ye"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/CH563/shot-easy-website"&gt;ShotEasy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费且无限制的在线图片编辑工具，能够进行裁剪旋转、添加水印、添加圆角、背景美化、背景移除替换以及快速压缩等操作，所有编辑都在浏览器中进行，不会上传到服务器，保护数据隐私安全。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Om8ain7J3"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/T8RIN/ImageToolbox"&gt;Image ToolBox&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费且功能强大的图片编辑器，提供批量裁剪、滤镜、图片提取文本、图片拼接与叠加、背景移除、水印添加、格式转换等多种功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Om15VifOj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/docmost/docmost"&gt;Docmost&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的协作文档和 Wiki 工具，提供富文本编辑器、表格、数学公式等功能，支持多人实时协作编辑，内置权限管理系统，可作为 Confluence 和 Notion 的替代品。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OlyOr24GO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/unilei/image-watermark-tool"&gt;Image Watermark Tool&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的图片水印添加工具，可在本地设备上为图片添加水印，支持自定义水印颜色、大小、透明度和倾斜角度，保护隐私。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ol7I0mzdw"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wanghongenpin/network_proxy_flutter"&gt;ProxyPin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的跨平台抓包工具，基于 Flutter 开发，界面简洁易用，可用于拦截、检查和重写 http（s）流量。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ol70OEOIi"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/raqibnur/quick-waitlist"&gt;Quick Waitlist&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源项目，帮助快速搭建精心设计的 Waitlist 页面，集成 Resend 进行邮件管理和自定义模板，提供 SEO 优化解决方案，并支持通过 Vercel 一键部署，适合发布任何产品或服务时收集潜在客户邮箱地址。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OkW8aky99"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Neet-Nestor/Telegram-Media-Downloader"&gt;Telegram Media Downloader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源免费的 Telegram 媒体下载脚本，可在 Telegram 网页版上自由下载图片、GIF 和视频等内容，即使是私人频道限制下载功能也能解锁。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ojs0ycNjF"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dreammis/social-auto-upload"&gt;social-auto-upload&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的自动化短视频上传和分发工具，支持主流视频平台如抖音、B 站、视频号、TikTok 等，可以多账号矩阵化执行任务，并支持自定义复杂发布时间。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OiBXDpExq"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/imputnet/cobalt"&gt;cobalt&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的视频下载工具，支持 B 站、YouTube、Instagram、TikTok 和 Twitter 视频下载，无广告干扰。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OhBHwjCns"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dwarvesf/hidden"&gt;Hidden Bar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 Mac 菜单栏管理工具，可以一键折叠隐藏菜单栏中的图标，自由调整图标的显隐状态，使菜单栏变得干净整洁。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OhzlpducM"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Lymphatus/caesium-image-compressor"&gt;Caesium Image Compressor&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的图像压缩工具，可以在保持图像质量的前提下减小文件大小，支持 JPG、PNG 和 WebP 格式，提供浏览器版本和跨平台客户端。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OfIQcwmDS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/CorentinTh/it-tools"&gt;IT-Tools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套专为开发人员打造的在线实用工具库，包括 Token 生成器、大小写转换器、进制转换器、二维码生成器、Git 备忘录等，可通过 Docker 一键部署到自己的服务器上。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OdYCFq6vy"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/putyy/res-downloader"&gt;res-downloader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的网络资源嗅探下载器，可获取视频、音频、图片以及 m3u8 等不同类型资源，支持微信视频号、抖音、快手、小红书、QQ 音乐等主流平台。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OdXz37hcU"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hua0512/stream-rec"&gt;Stream-rec&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的直播录制工具，支持虎牙、抖音、斗鱼和 Twitch 等多个平台，可自动录制直播视频和弹幕，支持自定义录制质量、格式等设置，并提供 Web 界面配置和 Docker 部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OdLEZeoeJ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://jherr.github.io/depth-of-field/"&gt;Depth of Field Simulator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个在线景深模拟器工具，可以通过调整光圈、焦距和拍摄对象距离等参数，直观展示这些因素对景深的影响，非常适合摄影爱好者学习和掌握拍摄技巧。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OdchUx6Ms"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/zyronon/douyin"&gt;Douyin-Vue&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个模仿抖音的移动端短视频项目，使用最新的 Vue 技术栈开发，实现媲美原生 App 丝滑流畅的使用体验，可作为学习 Vue 最佳实践的项目。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ObZcLnjsd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lihaoyun6/QuickRecorder"&gt;QuickRecorder&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款多功能、轻量化、高性能的 macOS 屏幕工具，支持窗口录制、App 录制、窗口声音内录、鼠标高亮、隐藏桌面文件等功能，体积仅 4MB，操作简便。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ObvCMgwyE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/chanind/hanzi-writer"&gt;Hanzi Writer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源免费的 JavaScript 库，可根据汉字书写时的笔画顺序播放正确的描边动画和练习测试，包含 9000 多个常用汉字，库大小仅 30kb，可嵌入 Web、iOS 或 Android 等平台应用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OaARCr9Nb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/stonith404/pingvin-share"&gt;Pingvin Share&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款可自建的文件分享工具，支持自定义链接、上传限制、有效期、访问次数、密码保护等，并提供反病毒检查，界面简洁易用，可通过 Docker 一键部署到私有服务器。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oa1vL66ai"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/usememos/memos"&gt;Memos&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的轻量级笔记服务，像极简版微博社区，可记录想法、知识和笔记，支持公开分享。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O922m4CUj"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/drawdb-io/drawdb"&gt;DrawDB&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的在线数据库设计工具及 SQL 生成器，支持主流数据库，可轻松创建数据库图表、导出 SQL 脚本和自定义编辑器。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O8Wle8PES"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lizongying/my-tv"&gt;My TV&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的安卓电视直播软件，内置直播源，安装即可使用，具有稳定、快速、免费和无广告等特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O8h6334To"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/JunkFood02/Seal"&gt;Seal&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 Android 视频/音频下载工具，底层使用 yt - dlp 下载框架，支持数千个视频平台，界面简洁友好，遵循 MD3 设计规范。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7SlKfgqT"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/houbb/sensitive-word"&gt;sensitive-word&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 DFA 算法实现的高性能 Java 敏感词过滤工具框架，内置 6W +敏感词库，支持敏感词判断、返回、脱敏等操作，具有性能优异、功能丰富、使用简洁等特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7PZDCOJl"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/agalwood/Motrix"&gt;Motrix&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的全能下载工具，界面简洁易用，支持 HTTP、FTP、BT、磁力链等资源下载，具有多线程下载、BT 选择性下载、自动更新 Tracker 等功能，可替代迅雷。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7HZK7Fje"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/soybeanjs/soybean-admin"&gt;Soybean Admin&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款清新优雅、高颜值且功能强大的开源后台管理模板，采用前沿技术栈，提供丰富的主题配置、组件和一站式后台管理解决方案，无需额外配置即可使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7mkT9khB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/DamascenoRafael/reminders-menubar"&gt;Reminders MenuBar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款专为 macOS 设计的提醒菜单栏小工具，可以直接在菜单栏上管理提醒事项，支持同步、创建、编辑和筛选等操作，提高工作效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O6PxlkEKx"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/tryzealot/zealot"&gt;Zealot&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的自部署托管移动应用和 macOS 应用的分发平台，提供 iOS、Android SDK、fastlane 等丰富组件库，支持企业打包分发流程、上传应用全套流程方案，可接入任意 CI 系统实现自动化处理。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O6G6PCzSD"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Meekdai/Gmeek"&gt;Gmeek&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款超轻量级的开源个人博客框架，无需本地部署，基于 GitHub Pages、GitHub Issues 和 GitHub Actions，仅需 3 步 18 秒即可搭建好博客并开始写作。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O6Ede41wk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jaywcjlove/DevHub"&gt;DevHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款专为开发者打造的 macOS 应用工具箱，集成超过 30 种常用小工具，如 API 请求、UUID 生成器、编解码工具等，无需联网即可使用，旨在提升开发效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O63Hvj9ky"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/zh-lx/pinyin-pro"&gt;pinyin-pro&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款专业的 JavaScript 汉字拼音转换库，功能丰富、准确率高、性能优异，支持多种拼音转换模式，包括拼音/声母/韵母/首字母/音调等，并提供拼音输入转换、文本匹配等高级功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5T3sjLw8"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yesmore/vmail"&gt;Vmail.DEV&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的临时邮箱创建工具，使用 Cloudflare email worker 实现，支持接收、显示和存储电子邮件，可自托管部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5JwwFwS3"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/iawia002/lux"&gt;Lux&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款跨平台的视频下载命令行工具，使用 Go 语言编写，支持几乎所有视频平台如抖音、B 站、YouTube 等，可控制下载视频的格式、清晰度和字幕。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5zLeAFOt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/milanvarady/Applite"&gt;Applite&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 Homebrew 可视化工具，提供简洁易用的界面，让非技术用户轻松安装和管理第三方应用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5gUfje5o"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/027xiguapi/pear-rec"&gt;pear-rec&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款简单高效且功能齐全的日常工具，支持截图、录屏、录像、录制 GIF、查看多媒体文件和修改图片等，同时支持跨平台，目前提供 Windows 安装包。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5fEC4g0S"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lcomplete/huntly"&gt;Huntly&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 RSS 阅读器，支持 RSS 订阅、全文搜索、自动保存等功能，可自托管或本地运行。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4ViM4x4m"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/BingyanStudio/LapisCV"&gt;LapisCV&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份基于 Markdown 格式的简洁正式简历模板，适用于 Obsidian / Typora，开箱即用，风格简洁正式，适合求职求学场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4wYIrzPl"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/KurtBestor/Hitomi-Downloader"&gt;Hitomi Downloader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的视频下载工具，提供简单易用的操作界面，支持多个视频平台如 B 站、YouTube、抖音等，可下载视频、图像、音频和文本文件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O3VffkUCT"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/cooderl/wewe-rss"&gt;WeWe RSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款优雅的微信公众号订阅工具，支持微信公众号订阅以及 RSS 生成，后台自动定时更新内容，支持全文内容输出，让阅读无障碍。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O3DOmoCjb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gitbutlerapp/gitbutler"&gt;GitButler&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款由 GitHub 联合创始人开源的高颜值且好用的可视化 Git 客户端，支持自动创建分支、管理分支合并、使用 AI 编写提交信息、快速解决问题等功能，提升 Git 使用效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O3tM3m1JL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Lissy93/web-check"&gt;Web-Check&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的开源免费网站分析工具，可以分析任何网站的 IP 信息、SSL 链、DNS 记录、Cookie、域名信息、服务器位置、网站性能等信息。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O30FR71IP"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/exelban/stats"&gt;Stats&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 Mac 系统监控工具，功能全面，可监控 CPU、GPU、磁盘、内存、网络、电池、传感器、风扇、蓝牙设备和多时区时钟等，是 iStat Menus 的良好替代品。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O30rB0lcQ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/TeamNewPipe/NewPipe"&gt;NewPipe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的轻量级 YouTube 第三方客户端，无需 Google 服务框架和 YouTube 账号登录，支持 4K 视频播放、画中画模式、搜索视频/音频/频道/播放列表，可下载视频/音频/字幕等功能丰富。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O2IZVjGvv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/qarmin/czkawka"&gt;Czkawka&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的简单、快速且强大的不必要文件清理工具，支持扫描重复、空文件夹、大文件、相似多媒体文件、无效文件等内容，扫描速度极快，支持多语言和多平台。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1DPo4OFM"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/oddfar/campus-imaotai"&gt;campus-imaotai&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款自动化工具，可以在 i 茅台 App 上自动完成注册、预约、旅行等操作，支持多账号、门店选择、耐力值查询、消息推送等功能，并提供 Docker 一键部署。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1uVsCfJq"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/MrKai77/Loop"&gt;Loop&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的 MacOS 屏幕窗口管理工具，可轻松拖拽、调整和排列窗口，提高工作效率，支持自定义颜色和设置。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NEJllims0"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/0xdevalias/chatgpt-source-watch"&gt;ChatGPT Source Watch&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个监控 ChatGPT 前端代码变化的工具，可以提前发现即将推出的新功能，为 ChatGPT 用户和竞争对手提供有价值的信息。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NE5CwC9uO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/goenning/google-indexing-script"&gt;Google Indexing Script&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源脚本，利用 Google API 可以在 48 小时内让你的网站在 Google 上建立索引，无需复杂技术或黑客手段。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NDX1MEVo3"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AmruthPillai/Reactive-Resume"&gt;Reactive Resume&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款独特的免费开源简历生成器，支持中文和多种配置，可轻松创建、更新、共享和打印简历，支持个性化主题和布局，并集成 GPT 辅助编写修改。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCIqL0K0K"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/YiNNx/cmd-wrapped"&gt;cmd-wrapped&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款命令行工具，可以统计和分析过去一年中用户在终端上使用的命令情况，包括每日最活跃时段、常用命令统计等，并生成类似 GitHub 年度贡献图的命令分布图。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCz9miCLo"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/rwv/lookscanned.io"&gt;Look Scanned&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款纯前端网站工具，能够让 PDF 文件看起来像是扫描件一样，无需打印机和扫描仪，操作简单快捷，具有隐私保护、个性化调整和跨平台支持等优点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NChkklg4i"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lanceliao/china-holiday-calender"&gt;China Holiday Calendar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份开源维护的中国节假日补班日历，提供 2022 - 2024 年中国节假日、调休、补班信息，支持 ICS 格式和 API 获取，可订阅到 iPhone、Google Calendar、Outlook 等客户端。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NAK3ybJ3l"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/movie-web/movie-web"&gt;movie-web&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个极简且易用的开源电影网站，支持搜索和在线观看电影，具有自动保存播放进度、收藏电影、界面简洁、搜索响应快等特点。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NzZ064MGc"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/KRTirtho/spotube"&gt;Spotube&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的跨平台 Spotify 客户端，无需付费订阅，支持离线播放、歌词同步等功能，注重隐私且体验流畅。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NzXjp0nQ2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h3&gt;实用插件&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fatwang2/fasturl"&gt;FastURL&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款实用的开源 Chrome 插件，可以在任何输入框中通过快捷键粘贴网页正文的 Markdown 格式内容，支持清理广告和导航栏等多余内容，同时保留标题、列表、链接等 HTML 元素，操作在本地浏览器完成，速度快且数据安全。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6MuStfEh"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/molvqingtai/WebChat"&gt;WebChat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款去中心化、无服务器的匿名聊天浏览器插件，利用 WebRTC 端到端加密技术，所有聊天数据保存在本地，确保安全隐私。无需注册，可在任何网站一键开启与他人聊天，适合即时交流需求场景。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6tDSAbN6"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/alyssaxuu/screenity"&gt;Screenity&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款功能强大的 Chrome 录屏插件，支持屏幕任意位置录制、标注、录音，可导出多种视频格式并进行简单编辑。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OFMEtmh5N"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lujunji4113/cloud-document-converter"&gt;Cloud Document Converter&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 Chrome 插件，支持下载和复制飞书文档为 Markdown 格式，兼容多种元素如标题、代码块、列表、表格、图片等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBDKWvEFL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/laylavish/uBlockOrigin-HUGE-AI-Blocklist"&gt;uBlockOrigin-HUGE-AI-Blocklist&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份综合性的 AI 内容过滤列表，包含约 950 个网站，可用于 uBlock Origin 和 uBlacklist，主要目的是清理 Google Search、DuckDuckGo 和 Bing 等图像搜索引擎中的 AI 生成内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OARfelVoz"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/KoriIku/luxirty-search"&gt;Luxirty Search&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于 Google 的开源搜索引擎插件，屏蔽内容农场、无广告、无跟踪、界面简洁，提升 GitHub、StackOverflow 等技术社区的搜索权重。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAMJ9hK8F"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/XengShi/materialYouNewTab"&gt;materialYouNewTab&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款采用 Google Material You 设计风格的浏览器主页插件，提供自定义搜索引擎、快捷网站图标、主题切换等功能，无需权限即可使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OA1AFjrwW"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/shyjal/visual-try-on"&gt;visual-try-on&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款基于快手 Kolors 图像模型开发的 Chrome 浏览器插件，可在任何电商网站上上传自己的照片，一键试穿喜欢的衣服。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OvB1cySwr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/027xiguapi/code-box"&gt;code-box&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的浏览器插件，适用于主流技术社区网站，提供一键复制代码、阅读全文和去除登录弹窗等实用功能，为技术开发者提供便利。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsYoDBw9t"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/zhulu111/ComfyUI_Bxb"&gt;ComfyUI_Bxb&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源插件，能够将 ComfyUI 工作流转换成小程序，支持主流平台和支付变现功能，方便将现有工作流推广到更广阔的市场。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Os3PF1Qsz"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/hediet/vscode-drawio"&gt;vscode-drawio&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款将 draw . io 集成到 VSCode 的插件，让开发者能够在 VSCode 中快速绘制流程图、思维导图或 UML 类图。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Op1sZlgfA"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nicepkg/aide"&gt;Aide&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款实用的 AI 编程助手 VSCode 扩展，为现有编程助手（如 Copilot、CodegeeX 或 Codeium 等）提供功能补充，让开发者能更高效地编程。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ooz0foptK"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Christopher-Hayes/vscode-chatgpt-reborn"&gt;Reborn AI&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 VSCode 插件，能够帮助编写、重构和改进代码，支持多种语言模型和语种，包括中文和英文等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Olf5PnSjv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dlvhdr/gh-dash"&gt;gh-dash&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款高颜值的 GitHub CLI 扩展，以仪表板形式展示 GitHub 项目的拉取请求和问题信息，支持搜索、过滤、操作等丰富功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OgxI3eTqk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xifangczy/cat-catch"&gt;cat-catch (猫抓)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源免费的网页资源嗅探插件，能够筛选列出当前页面的资源，提供嗅探、缓存捕捉、视频录制等工具帮助抓取资源，支持自定义抓取资源类型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OewNznNwZ"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/skmail/responsive-viewer"&gt;Responsive Viewer&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款开源的 Chrome 浏览器插件，可以在一个界面中同时展示多个屏幕尺寸，方便前端开发者测试响应式网站或应用在不同设备尺寸下的显示效果，提供多种设备尺寸选择、横竖屏显示和一键截图分享等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ObwBFa78o"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fishjar/kiss-translator"&gt;kiss-translator&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款简约且好用的双语对照翻译插件和油猴脚本，支持多种浏览器和翻译服务，提供网页双语对照翻译、输入框翻译、YouTube 字幕翻译等功能，支持自定义翻译规则、译文样式和快捷键。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oa8MjtHIr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xaoxuu/hexo-theme-stellar"&gt;Stellar&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一款内置文档系统的简约商务风 Hexo 主题，支持丰富的标签和动态数据组件，可帮助简单应对各种表达需求。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7fGfAZcH"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h3&gt;资料集合&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Shubhamsaboo/awesome-llm-apps"&gt;Awesome LLM Apps&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心整理的大语言模型在不同领域实际应用的集合，涵盖客服、法律、健康、旅游、数据分析等场景，以及结合 RGA 和具备记忆功能的应用，还收集了 LLM 微调、高级工具和框架使用教程等，提供详细介绍。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P6cnJfNL0"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/wangschang/web3.0"&gt;web3.0&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份颇为全面的学习 Web3 资料集合，涵盖 Web3 基础知识、应用及项目、相关分享博主、视频教程、相关书籍、开发资源以及工具等内容，还整理了一些与 Web3 相关的招聘工作机会。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OEnLvvP1d"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/imthenachoman/How-To-Secure-A-Linux-Server"&gt;How-To-Secure-A-Linux-Server&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份关于如何保护 Linux 服务器安全的操作指南，涵盖 SSH 配置、基本安全措施、网络防火墙、系统审计和其他安全增强措施，并提供详细步骤和建议。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OEe1nDxh2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6nMuXKB"&gt;awesome-falsehood&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份整理了程序员在开发过程中常犯的错误观点集合，包括时间日期处理、地理位置、国际化、电子邮件格式化、邮政地址等场景，旨在帮助开发者认识并避免这些误解。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OE5YxfXIc"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/YanG-1989/m3u"&gt;m3u直播源收集列表&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份包含电视、直播、MyTV 以及体育等订阅列表的 m3u 直播源收集列表，持续更新。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ODsVQdRCv"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/WangRongsheng/awesome-LLM-resourses"&gt;awesome-LLM-resourses&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份颇为全面的大语言模型（LLM）资源集合，涵盖数据、微调、推理、知识库、智能体、书籍、相关课程、学习教程以及论文等内容，旨在成为全球最佳 LLM 资源汇总。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCyjWy06o"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ashishps1/awesome-low-level-design"&gt;awesome-low-level-design&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份关于学习低级设计（LLD）的资源集合，涵盖面向对象编程概念、设计模式、UML 图、面试题目和相关书籍推荐等内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCsqCaQ1O"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/NirDiamant/Prompt_Engineering"&gt;Prompt_Engineering&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份全面的提示词学习指南，涵盖从基础到高级的提示工程技术，包括基本概念、思维链、角色提示、结构提示以及可直接使用的提示模板等内容，旨在帮助学习和使用大语言模型。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OC4FcfuVf"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/valeman/Awesome_Math_Books"&gt;Awesome_Math_Books&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收集了各种数学领域经典书籍的集合，包括概率论、代数、微积分等，提供下载链接或在线阅读，还有高中数学问题和物理学基础知识书籍。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OBNbroT9d"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/lukasz-madon/awesome-remote-job"&gt;awesome-remote-job&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份整理了关于远程工作职位和资源的列表，涵盖文章、视频、书籍、招聘网站、面试资料、问答社区、远程工作社区、会议工具以及法律和财务建议等内容，为寻找远程工作提供帮助和有用信息。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAtSzh8YL"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/iAmCorey/awesome-indie-hacker-tools"&gt;Awesome Indie Hacker Tools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收录独立开发/出海开发相关技术栈及工具的 GitHub 仓库，涵盖原型设计、UI 框架/组件库、图标/字体库、前端/后端开发框架、支付、国际化、产品发布推广等实用内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAkrFdDIk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Tikam02/DevOps-Guide"&gt;DevOps-Guide&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份整理了丰富的 DevOps 学习资源列表，涵盖 CI / CD、数据库、开发运维实践、面试准备、操作系统、网络、终端命令等多个方面，并提供了入门 DevOps 的学习指南。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OAjp22ytu"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/princehuang/overseas-website-note"&gt;出海网站经验总结&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份关于出海网站收款全流程的总结，包括公司注册、申请 EIN、申请银行卡、激活 Stripe 等内容，对于将业务拓展到海外的产品非常有帮助。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwVvyhKND"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/svcvit/Awesome-Dify-Workflow"&gt;Awesome-Dify-Workflow&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份整理了一系列好用的 Dify 工作流集合，包括中英文翻译、知识库聊天、搜索大师、爆款标题、文章仿写、运营一条龙、聊天机器人、代码生成等，所有工作流基本可免费使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OwnkKzAcX"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/CyberAlbSecOP/Awesome_GPT_Super_Prompting"&gt;Awesome_GPT_Super_Prompting&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份在 GitHub 上整理的 ChatGPT 超级提示词集合，收集了 ChatGPT 越狱提示词、GPT 智能体提示词、提示词注入及保护、各种 GPTs 提示词以及 Prompt Engineering 学习资料等相关资源，内容全面且持续更新。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ow4tL79ET"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="http://t.cn/A6RM9Vru"&gt;Free Public APIs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收集了大量免费 API 的网站，每天定时测试 API 可用性，确保收录的 248 个 API 涵盖金融、娱乐、音乐、旅行、交通等类别均可供学生和开发者使用。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OuZjdArbm"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/systemdesign42/system-design"&gt;system-design&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集整理的系统设计面试资源列表，提供知名科技公司实战案例和系统设计基础知识，帮助通过系统设计面试。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OuuQGiHAC"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/cuda-mode/awesomeMLSys"&gt;awesomeMLSys&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精选的机器学习系统入门资料集合，包括论文、视频和代码库，涵盖注意力机制、性能优化、量化、长上下文长度和稀疏性等主题。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OsOY94wud"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/NirDiamant/RAG_Techniques"&gt;RAG_Techniques&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份全面的检索增强生成（RAG）技术学习集合，涵盖 22 种 RAG 技术，提供详细文档、实现指南和示例代码。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OszElm1oI"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Yolain-Codes/ComfyUI-Yolain-Workflows"&gt;ComfyUI-Yolain-Workflows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份较全面的 ComfyUI 工作流合集，涵盖从基础到进阶再到落地应用，包括图生图、细节修复、背景去除、重绘/扩图、人脸迁移、重绘光影、电商产品主图等工作流。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Osp2NhomB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/miss-mumu/developer2gwy"&gt;developer2gwy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份开源的公务员考试最佳实践指南，由从程序员转行成为公务员的朋友们共同编写，涵盖公考基础知识、备考实践、常见问题、面试手册和问答等内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpYcPtsIk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/CrazyBoyM/llama3-Chinese-chat"&gt;llama3-Chinese-chat&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份关于针对 Llama 3 进行中文微调的教程和工具集合，包括微调、魔改版本权重、训练、推理、评测以及部署 Llama 3 和 Llama 3 . 1 的视频和文档等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OpOMkCpzE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/KonghaYao/chinese-free-web-font-storage"&gt;中文网字计划&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套可商用免费的中文 Web 字体库，收录众多中文字体，提供在线加载和查看字体信息的功能，并有全字符集中文渲染方案。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoRRex42F"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/piotrkulpinski/openalternative"&gt;OpenAlternative&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收集主流软件开源替代品的列表，对每个替代品进行了详细介绍，并列举了更多类似的开源选择，涵盖多个领域，方便查找所需开源软件。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OoLXVlPJb"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jaywcjlove/free-font"&gt;Free Font&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收录了 630 多种免费可商用的字体列表，包括汉字字体和英文字体，按黑体、宋体、楷体、艺术体和手绘体等分类，可在线查看并下载字体包。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oot6WaYaB"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/DeveloperPaul123/modern-cv"&gt;Modern-CV&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套受 Awesome - CV 启发的现代简历模板集合，使用 Typst 编写，提供多种现代简历模板样式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Oo0PrkfAo"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/iptv-org/iptv"&gt;IPTV Channels Collection&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收集了世界各地公开的 IPTV 频道集合，涵盖动画、商业、教育、历史、电影、音乐、科学等多种类别，并按语言、国家、地区进行分组。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnErgkNAz"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/DangJin/awesome-social-media-downloader"&gt;awesome-social-media-downloader&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的开源免费视频下载工具列表，包括能够免费下载油管、B 站、抖音、视频号等平台视频的工具，以及一些短视频去水印和视频压缩等辅助工具。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnwbPlaV6"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/OI-wiki/OI-wiki"&gt;OI Wiki&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份免费开放且持续更新的编程竞赛知识整合站点，包含基础知识、常见题型、解题思路以及常用工具等内容，旨在帮助学习编程竞赛。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Onkd1FJ7m"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/nordicgiant2/awesome-landing-page"&gt;awesome-landing-page&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的落地页模板集合，包含多种高颜值且实用的开源落地页模板，使用不同前端技术框架构建，还收集了相关制作教程和设计资源。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OnevUmEXS"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/saasfly/best-practice"&gt;best-practice&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份 2024 年构建 SaaS 初创公司的最佳实践集合，涵盖技术栈、云服务、架构、数据库、AI、后端及站点生成器等资源。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmjWV3DKd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/javayhu/haitang"&gt;海棠诗社&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个开源的精美古诗词网站，内含丰富的古诗词资源，支持多种检索和分类方式，每首诗词均有注解、翻译和评价，助力理解诗词。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OmbHtBbXt"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/KenneyNL/Adobe-Alternatives"&gt;Adobe-Alternatives&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精选的 GitHub 列表，收录了可替代 Adobe 全家桶软件（如 Photoshop、Illustrator、Lightroom、Premiere 和 After Effects 等）的开源、免费或付费替代品，并使用图标标注了软件的付费模式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OhTFgtNfq"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/B3o/GPTS-Prompt-Collection"&gt;GPTS-Prompt-Collection&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收集各种精彩 GPT 提示词的集合，涵盖写作、开发、生产力、商业、教育、金融、健康、营销、销售、游戏、设计等多个领域，可以搜索关键词查找所需提示词，学习优秀提示词的写法并进行改进。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ogohy7lPd"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/owainlewis/awesome-artificial-intelligence"&gt;awesome-artificial-intelligence&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的人工智能领域资源集合，涵盖机器学习、深度学习、自然语言处理等基础知识，以及应用工具、教程、书籍、视频和论文等内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OfaRAkmJ4"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/marekbrze/categorized-raycast-extensions"&gt;categorized-raycast-extensions&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收集了超过 1498 个 Raycast 第三方插件的集合，涵盖商业、设计、音视频、社交媒体、教育、娱乐、AI、自动化、实用工具等多个类别。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Od3chdgtk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/TheAlgorithms"&gt;The Algorithms&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一套收录了 Python、Java、C ++、JavaScript、Go 等多种编程语言的算法实现代码的开源算法库，包含二分查找、快速排序、斐波那契数列等热门算法。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/ObufybGsO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/HqWu-HITCS/Awesome-Chinese-LLM"&gt;Awesome Chinese LLM&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集和梳理的中文大语言模型（LLM）相关资源集合，包括多个垂直领域的开源微调中文模型、底层模型、数据集、微调框架、推理部署框架、评测方法和相关教程。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Ob1Y34slk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/zhuima/awesome-cloudflare"&gt;Awesome Cloudflare&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的基于 Cloudflare 的各种资源列表，包括开源工具、学习指南、博客等，旨在帮助独立开发者降本增效。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O9OHoziu2"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/Developer-Y/cs-video-courses"&gt;cs-video-courses&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精选的计算机科学视频课程列表，涵盖计算机科学导论、数据结构和算法、系统编程、软件工程、人工智能、机器学习等领域，包含知名大学公开课程及专业讲师课程。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O8CvlerXF"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/DataExpert-io/data-engineer-handbook"&gt;data-engineer-handbook&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份面向数据工程师的学习手册，涵盖书籍、课程、面试资料、优秀博客、社区和值得关注的博主等全面内容。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7OCo193W"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/aishwaryanr/awesome-generative-ai-guide"&gt;awesome-generative-ai-guide&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份全面的生成式 AI 学习指南，涵盖最新研究动态、面试资料、免费课程、学习笔记等丰富内容，帮助学习者系统掌握生成式 AI 相关知识。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O7ehDbXp3"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ZHO-ZHO-ZHO/ComfyUI-Workflows-ZHO"&gt;ComfyUI Workflows&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份包含 36 个 ComfyUI 工作流的开源合集，涵盖 14 大类别，如 Stable Cascade、3D、LLM + SD、Portrait Master、SVD 等，为 ComfyUI 学习者提供参考。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O5yAbdbar"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://indiegoodies.com/awesome-open-source-mac-apps"&gt;Open Source Mac Apps&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心整理的最受欢迎的 Mac 系统开源免费软件列表，涵盖自动化、开发工具、日常生活、音视频、生产力、社交媒体、文本文件等多个类别。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O58UBegjy"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/jackhawks/rectg"&gt;rectg&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心整理的 Telegram 群组、频道和机器人推荐列表，包含 5000 多个优质资源，帮助用户快速找到符合需求的优质信息渠道。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4Q3oERvN"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ai-boost/Awesome-GPTs"&gt;Awesome-GPTs&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的有趣和创新 GPTs 列表，涵盖学术、写作、教育、生产力、编程、生活方式、娱乐等领域。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4Ha1rXdK"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fr0gger/Awesome-GPT-Agents"&gt;Awesome-GPT-Agents&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的专注于网络安全领域的 GPT 代理列表，涵盖了网络安全助手、网络安全导师、黑客新闻、数据分析等多个方面，旨在帮助网络安全学习者和从业者提高效率。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O4xTmd5BC"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/cloudcommunity/Free-Certifications"&gt;Free Certifications&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的免费在线课程和认证列表，涵盖常见技术栈、网络安全、数据库、项目管理、市场营销等领域，为学习者提供免费的课程资源和技能认证证书。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O31sz3Tld"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/weijunext/indie-hacker-tools"&gt;indie-hacker-tools&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收录独立开发者出海技术栈和工具的合集，涵盖 Web 开发模板、Chrome 插件开发模板、前端、后端、数据库、支付等内容，旨在提升开发效率和降低成本。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1OoAuRWp"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/sun0225SUN/Awesome-Love-Code"&gt;Awesome-Love-Code&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份收集了 50 多份表白代码的代码库，为程序员提供浪漫的表白方式。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O1F0sg2sE"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xlucn/oh-my-foss-android"&gt;oh-my-foss-android&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心收集的实用、良心开源的安卓软件清单，涵盖应用商店、浏览器、视频播放器、相机、学习办公和日常工具等类别，经过作者严格筛选。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NE6EsCBfG"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/pingcap/awesome-database-learning"&gt;Awesome Database Learning&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份精心整理的数据库学习合集，涵盖课程、书籍、讲座、论文等数据库相关学习资料，帮助了解数据库内部工作原理。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCg9h4lyk"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/kenjihiranabe/The-Art-of-Linear-Algebra"&gt;The-Art-of-Linear-Algebra&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份对《给每个人的线性代数》书籍的图解笔记，通过可视化图释帮助理解矩阵分解、向量、矩阵计算和算法，提供中英日三种语言笔记。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/Op9kZlucP"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/google-gemini/gemini-api-cookbook"&gt;Gemini API Cookbook&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一份由 Google 在 GitHub 上分享的 Gemini API 学习手册，旨在帮助开发者更好地理解和使用 Gemini API，包括使用指南、快速入门教程和示例项目。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/O6EVM2ZlG"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h3&gt;其他&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;项目&lt;/th&gt; 
   &lt;th&gt;简述&lt;/th&gt; 
   &lt;th&gt;源&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/SteveSuv/remix-words-funny"&gt;WordsFunny&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个全栈英语单词学习网站，涵盖多个版本的词汇资源，提供在线播读、翻译、同义词和例句等功能。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/P77KYCasD"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/RomanHauksson/academic-project-astro-template"&gt;academic-project-astro-template&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个基于 Astro 和 Tailwind CSS 构建的精美学术项目页面模版，具有快速加载、响应式设计、易于访问和 SEO 友好等特性，支持使用 Markdown 编辑内容并显示标题、图片、公式、两列布局、代码块和视频等。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/OCBR72YtO"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/suyalcinkaya/onur.dev"&gt;onur.dev&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;一个极简风格的三栏式个人主页网站，使用了 Next . js、Tailwind CSS、shadcn / ui、Contentful、Raindrop、Supabase 构建并部署在 Vercel 上，兼容移动端。&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://weibo.com/5722964389/NCP6M7JBr"&gt;&lt;img src="https://raw.githubusercontent.com/GitHubDaily/GitHubDaily/master/assets/sina_logo.png" alt="" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;div align="right"&gt; 
 &lt;b&gt;&lt;a href="#2024-年复盘"&gt;↥ 返回目录&lt;/a&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;h2&gt;声明&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"&gt;&lt;img src="https://licensebuttons.net/l/by-nc-nd/4.0/88x31.png" alt="" /&gt;&lt;/a&gt;&lt;br /&gt; 本作品采用&lt;a href="https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh"&gt;知识共享署名-非商业性使用-禁止演绎 4.0 通用许可协议&lt;/a&gt;进行许可。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yt-dlp/yt-dlp</title>
      <link>https://github.com/yt-dlp/yt-dlp</link>
      <description>&lt;p&gt;A feature-rich command-line audio/video downloader&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#readme"&gt;&lt;img src="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/.github/banner.svg?sanitize=true" alt="YT-DLP" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#installation" title="Installation"&gt;&lt;img src="https://img.shields.io/github/v/release/yt-dlp/yt-dlp?color=brightgreen&amp;amp;label=Download&amp;amp;style=for-the-badge" alt="Release version" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/yt-dlp" title="PyPI"&gt;&lt;img src="https://img.shields.io/badge/-PyPI-blue.svg?logo=pypi&amp;amp;labelColor=555555&amp;amp;style=for-the-badge" alt="PyPI" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/Collaborators.md#collaborators" title="Donate"&gt;&lt;img src="https://img.shields.io/badge/_-Donate-red.svg?logo=githubsponsors&amp;amp;labelColor=555555&amp;amp;style=for-the-badge" alt="Donate" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/H5MNcFW63r" title="Discord"&gt;&lt;img src="https://img.shields.io/discord/807245652072857610?color=blue&amp;amp;labelColor=555555&amp;amp;label=&amp;amp;logo=discord&amp;amp;style=for-the-badge" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/supportedsites.md" title="Supported Sites"&gt;&lt;img src="https://img.shields.io/badge/-Supported_Sites-brightgreen.svg?style=for-the-badge" alt="Supported Sites" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/LICENSE" title="License"&gt;&lt;img src="https://img.shields.io/badge/-Unlicense-blue.svg?style=for-the-badge" alt="License: Unlicense" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yt-dlp/yt-dlp/actions" title="CI Status"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/yt-dlp/yt-dlp/core.yml?branch=master&amp;amp;label=Tests&amp;amp;style=for-the-badge" alt="CI Status" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yt-dlp/yt-dlp/commits" title="Commit History"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/yt-dlp/yt-dlp?label=commits&amp;amp;style=for-the-badge" alt="Commits" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yt-dlp/yt-dlp/pulse/monthly" title="Last activity"&gt;&lt;img src="https://img.shields.io/github/last-commit/yt-dlp/yt-dlp/master?label=&amp;amp;style=for-the-badge&amp;amp;display_timestamp=committer" alt="Last Commit" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; 
&lt;p&gt;yt-dlp is a feature-rich command-line audio/video downloader with support for &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/supportedsites.md"&gt;thousands of sites&lt;/a&gt;. The project is a fork of &lt;a href="https://github.com/ytdl-org/youtube-dl"&gt;youtube-dl&lt;/a&gt; based on the now inactive &lt;a href="https://github.com/blackjack4494/yt-dlc"&gt;youtube-dlc&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- MANPAGE: MOVE "USAGE AND OPTIONS" SECTION HERE --&gt; 
&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#installation"&gt;INSTALLATION&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Installation"&gt;Detailed instructions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files"&gt;Release Files&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#update"&gt;Update&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#dependencies"&gt;Dependencies&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#compile"&gt;Compile&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#usage-and-options"&gt;USAGE AND OPTIONS&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#general-options"&gt;General Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#network-options"&gt;Network Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#geo-restriction"&gt;Geo-restriction&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#video-selection"&gt;Video Selection&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#download-options"&gt;Download Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#filesystem-options"&gt;Filesystem Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#thumbnail-options"&gt;Thumbnail Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#internet-shortcut-options"&gt;Internet Shortcut Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#verbosity-and-simulation-options"&gt;Verbosity and Simulation Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#workarounds"&gt;Workarounds&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#video-format-options"&gt;Video Format Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#subtitle-options"&gt;Subtitle Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#authentication-options"&gt;Authentication Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#post-processing-options"&gt;Post-processing Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sponsorblock-options"&gt;SponsorBlock Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#extractor-options"&gt;Extractor Options&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#preset-aliases"&gt;Preset Aliases&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration"&gt;CONFIGURATION&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration-file-encoding"&gt;Configuration file encoding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#authentication-with-netrc"&gt;Authentication with netrc&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#notes-about-environment-variables"&gt;Notes about environment variables&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template"&gt;OUTPUT TEMPLATE&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template-examples"&gt;Output template examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection"&gt;FORMAT SELECTION&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#filtering-formats"&gt;Filtering Formats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats"&gt;Sorting Formats&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection-examples"&gt;Format Selection examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#modifying-metadata"&gt;MODIFYING METADATA&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#modifying-metadata-examples"&gt;Modifying metadata examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#extractor-arguments"&gt;EXTRACTOR ARGUMENTS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#plugins"&gt;PLUGINS&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#installing-plugins"&gt;Installing Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#developing-plugins"&gt;Developing Plugins&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#embedding-yt-dlp"&gt;EMBEDDING YT-DLP&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#embedding-examples"&gt;Embedding examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#changes-from-youtube-dl"&gt;CHANGES FROM YOUTUBE-DL&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#new-features"&gt;New features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#differences-in-default-behavior"&gt;Differences in default behavior&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#deprecated-options"&gt;Deprecated options&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#contributing-to-yt-dlp"&gt;CONTRIBUTING&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#opening-an-issue"&gt;Opening an Issue&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#developer-instructions"&gt;Developer Instructions&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/wiki"&gt;WIKI&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/FAQ"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; 
&lt;h1&gt;INSTALLATION&lt;/h1&gt; 
&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; 
&lt;p&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe"&gt;&lt;img src="https://img.shields.io/badge/-Windows_x64-blue.svg?style=for-the-badge&amp;amp;logo=windows" alt="Windows" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp"&gt;&lt;img src="https://img.shields.io/badge/-Linux/BSD-red.svg?style=for-the-badge&amp;amp;logo=linux" alt="Unix" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos"&gt;&lt;img src="https://img.shields.io/badge/-MacOS-lightblue.svg?style=for-the-badge&amp;amp;logo=apple" alt="MacOS" /&gt;&lt;/a&gt; &lt;a href="https://pypi.org/project/yt-dlp"&gt;&lt;img src="https://img.shields.io/badge/-PyPI-blue.svg?logo=pypi&amp;amp;labelColor=555555&amp;amp;style=for-the-badge" alt="PyPI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz"&gt;&lt;img src="https://img.shields.io/badge/-Source_tar-green.svg?style=for-the-badge" alt="Source Tarball" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files"&gt;&lt;img src="https://img.shields.io/badge/-Other-grey.svg?style=for-the-badge" alt="Other variants" /&gt;&lt;/a&gt; &lt;a href="https://github.com/yt-dlp/yt-dlp/releases"&gt;&lt;img src="https://img.shields.io/badge/-All_Versions-lightgrey.svg?style=for-the-badge" alt="All versions" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; 
&lt;p&gt;You can install yt-dlp using &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files"&gt;the binaries&lt;/a&gt;, &lt;a href="https://pypi.org/project/yt-dlp"&gt;pip&lt;/a&gt; or one using a third-party package manager. See &lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Installation"&gt;the wiki&lt;/a&gt; for detailed instructions&lt;/p&gt; 
&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; 
&lt;h2&gt;RELEASE FILES&lt;/h2&gt; 
&lt;h4&gt;Recommended&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;File&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp"&gt;yt-dlp&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Platform-independent &lt;a href="https://docs.python.org/3/library/zipimport.html"&gt;zipimport&lt;/a&gt; binary. Needs Python (recommended for &lt;strong&gt;Linux/BSD&lt;/strong&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe"&gt;yt-dlp.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Windows (Win8+) standalone x64 binary (recommended for &lt;strong&gt;Windows&lt;/strong&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos"&gt;yt-dlp_macos&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Universal MacOS (10.15+) standalone executable (recommended for &lt;strong&gt;MacOS&lt;/strong&gt;)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Alternatives&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;File&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_x86.exe"&gt;yt-dlp_x86.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Windows (Win8+) standalone x86 (32-bit) binary&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_arm64.exe"&gt;yt-dlp_arm64.exe&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Windows (Win10+) standalone arm64 (64-bit) binary&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux"&gt;yt-dlp_linux&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Linux standalone x64 binary&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux_armv7l"&gt;yt-dlp_linux_armv7l&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Linux standalone armv7l (32-bit) binary&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_linux_aarch64"&gt;yt-dlp_linux_aarch64&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Linux standalone aarch64 (64-bit) binary&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_win.zip"&gt;yt-dlp_win.zip&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Unpackaged Windows (Win8+) x64 executable (no auto-update)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_win_x86.zip"&gt;yt-dlp_win_x86.zip&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Unpackaged Windows (Win8+) x86 executable (no auto-update)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_win_arm64.zip"&gt;yt-dlp_win_arm64.zip&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Unpackaged Windows (Win10+) arm64 executable (no auto-update)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos.zip"&gt;yt-dlp_macos.zip&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Unpackaged MacOS (10.15+) executable (no auto-update)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h4&gt;Misc&lt;/h4&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;File&lt;/th&gt; 
   &lt;th align="left"&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz"&gt;yt-dlp.tar.gz&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;Source tarball&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-512SUMS"&gt;SHA2-512SUMS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GNU-style SHA512 sums&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-512SUMS.sig"&gt;SHA2-512SUMS.sig&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GPG signature file for SHA512 sums&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-256SUMS"&gt;SHA2-256SUMS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GNU-style SHA256 sums&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/SHA2-256SUMS.sig"&gt;SHA2-256SUMS.sig&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;GPG signature file for SHA256 sums&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The public key that can be used to verify the GPG signatures is &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/public.key"&gt;available here&lt;/a&gt; Example usage:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl -L https://github.com/yt-dlp/yt-dlp/raw/master/public.key | gpg --import
gpg --verify SHA2-256SUMS.sig SHA2-256SUMS
gpg --verify SHA2-512SUMS.sig SHA2-512SUMS
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The manpages, shell completion (autocomplete) files etc. are available inside the &lt;a href="https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.tar.gz"&gt;source tarball&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;UPDATE&lt;/h2&gt; 
&lt;p&gt;You can use &lt;code&gt;yt-dlp -U&lt;/code&gt; to update if you are using the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#release-files"&gt;release binaries&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you &lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Installation#with-pip"&gt;installed with pip&lt;/a&gt;, simply re-run the same command that was used to install the program&lt;/p&gt; 
&lt;p&gt;For other third-party package managers, see &lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Installation#third-party-package-managers"&gt;the wiki&lt;/a&gt; or refer to their documentation&lt;/p&gt; 
&lt;p&gt;&lt;a id="update-channels"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;There are currently three release channels for binaries: &lt;code&gt;stable&lt;/code&gt;, &lt;code&gt;nightly&lt;/code&gt; and &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;stable&lt;/code&gt; is the default channel, and many of its changes have been tested by users of the &lt;code&gt;nightly&lt;/code&gt; and &lt;code&gt;master&lt;/code&gt; channels.&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;nightly&lt;/code&gt; channel has releases scheduled to build every day around midnight UTC, for a snapshot of the project's new patches and changes. This is the &lt;strong&gt;recommended channel for regular users&lt;/strong&gt; of yt-dlp. The &lt;code&gt;nightly&lt;/code&gt; releases are available from &lt;a href="https://github.com/yt-dlp/yt-dlp-nightly-builds/releases"&gt;yt-dlp/yt-dlp-nightly-builds&lt;/a&gt; or as development releases of the &lt;code&gt;yt-dlp&lt;/code&gt; PyPI package (which can be installed with pip's &lt;code&gt;--pre&lt;/code&gt; flag).&lt;/li&gt; 
 &lt;li&gt;The &lt;code&gt;master&lt;/code&gt; channel features releases that are built after each push to the master branch, and these will have the very latest fixes and additions, but may also be more prone to regressions. They are available from &lt;a href="https://github.com/yt-dlp/yt-dlp-master-builds/releases"&gt;yt-dlp/yt-dlp-master-builds&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;When using &lt;code&gt;--update&lt;/code&gt;/&lt;code&gt;-U&lt;/code&gt;, a release binary will only update to its current channel. &lt;code&gt;--update-to CHANNEL&lt;/code&gt; can be used to switch to a different channel when a newer version is available. &lt;code&gt;--update-to [CHANNEL@]TAG&lt;/code&gt; can also be used to upgrade or downgrade to specific tags from a channel.&lt;/p&gt; 
&lt;p&gt;You may also use &lt;code&gt;--update-to &amp;lt;repository&amp;gt;&lt;/code&gt; (&lt;code&gt;&amp;lt;owner&amp;gt;/&amp;lt;repository&amp;gt;&lt;/code&gt;) to update to a channel on a completely different repository. Be careful with what repository you are updating to though, there is no verification done for binaries from different repositories.&lt;/p&gt; 
&lt;p&gt;Example usage:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;yt-dlp --update-to master&lt;/code&gt; switch to the &lt;code&gt;master&lt;/code&gt; channel and update to its latest release&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yt-dlp --update-to stable@2023.07.06&lt;/code&gt; upgrade/downgrade to release to &lt;code&gt;stable&lt;/code&gt; channel tag &lt;code&gt;2023.07.06&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yt-dlp --update-to 2023.10.07&lt;/code&gt; upgrade/downgrade to tag &lt;code&gt;2023.10.07&lt;/code&gt; if it exists on the current channel&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;yt-dlp --update-to example/yt-dlp@2023.09.24&lt;/code&gt; upgrade/downgrade to the release from the &lt;code&gt;example/yt-dlp&lt;/code&gt; repository, tag &lt;code&gt;2023.09.24&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Any user experiencing an issue with the &lt;code&gt;stable&lt;/code&gt; release should install or update to the &lt;code&gt;nightly&lt;/code&gt; release before submitting a bug report:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# To update to nightly from stable executable/binary:
yt-dlp --update-to nightly

# To install nightly with pip:
python3 -m pip install -U --pre "yt-dlp[default]"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When running a yt-dlp version that is older than 90 days, you will see a warning message suggesting to update to the latest version. You can suppress this warning by adding &lt;code&gt;--no-update&lt;/code&gt; to your command or configuration file.&lt;/p&gt; 
&lt;h2&gt;DEPENDENCIES&lt;/h2&gt; 
&lt;p&gt;Python versions 3.9+ (CPython) and 3.11+ (PyPy) are supported. Other versions and implementations may or may not work correctly.&lt;/p&gt; 
&lt;!-- Python 3.5+ uses VC++14 and it is already embedded in the binary created
&lt;!x-- https://www.microsoft.com/en-us/download/details.aspx?id=26999 --x&gt;
On Windows, [Microsoft Visual C++ 2010 SP1 Redistributable Package (x86)](https://download.microsoft.com/download/1/6/5/165255E7-1014-4D0A-B094-B6A430A6BFFC/vcredist_x86.exe) is also necessary to run yt-dlp. You probably already have this, but if the executable throws an error due to missing `MSVCR100.dll` you need to install it manually.
--&gt; 
&lt;p&gt;While all the other dependencies are optional, &lt;code&gt;ffmpeg&lt;/code&gt; and &lt;code&gt;ffprobe&lt;/code&gt; are highly recommended&lt;/p&gt; 
&lt;h3&gt;Strongly recommended&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://www.ffmpeg.org"&gt;&lt;strong&gt;ffmpeg&lt;/strong&gt; and &lt;strong&gt;ffprobe&lt;/strong&gt;&lt;/a&gt; - Required for &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection"&gt;merging separate video and audio files&lt;/a&gt;, as well as for various &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#post-processing-options"&gt;post-processing&lt;/a&gt; tasks. License &lt;a href="https://www.ffmpeg.org/legal.html"&gt;depends on the build&lt;/a&gt;&lt;/p&gt; &lt;p&gt;There are bugs in ffmpeg that cause various issues when used alongside yt-dlp. Since ffmpeg is such an important dependency, we provide &lt;a href="https://github.com/yt-dlp/FFmpeg-Builds#ffmpeg-static-auto-builds"&gt;custom builds&lt;/a&gt; with patches for some of these issues at &lt;a href="https://github.com/yt-dlp/FFmpeg-Builds"&gt;yt-dlp/FFmpeg-Builds&lt;/a&gt;. See &lt;a href="https://github.com/yt-dlp/FFmpeg-Builds#patches-applied"&gt;the readme&lt;/a&gt; for details on the specific issues solved by these builds&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: What you need is ffmpeg &lt;em&gt;binary&lt;/em&gt;, &lt;strong&gt;NOT&lt;/strong&gt; &lt;a href="https://pypi.org/project/ffmpeg"&gt;the Python package of the same name&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Networking&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/certifi/python-certifi"&gt;&lt;strong&gt;certifi&lt;/strong&gt;&lt;/a&gt;* - Provides Mozilla's root certificate bundle. Licensed under &lt;a href="https://github.com/certifi/python-certifi/raw/master/LICENSE"&gt;MPLv2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/google/brotli"&gt;&lt;strong&gt;brotli&lt;/strong&gt;&lt;/a&gt;* or &lt;a href="https://github.com/python-hyper/brotlicffi"&gt;&lt;strong&gt;brotlicffi&lt;/strong&gt;&lt;/a&gt; - &lt;a href="https://en.wikipedia.org/wiki/Brotli"&gt;Brotli&lt;/a&gt; content encoding support. Both licensed under MIT &lt;sup&gt;&lt;a href="https://github.com/google/brotli/raw/master/LICENSE"&gt;1&lt;/a&gt; &lt;a href="https://github.com/python-hyper/brotlicffi/raw/master/LICENSE"&gt;2&lt;/a&gt; &lt;/sup&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aaugustin/websockets"&gt;&lt;strong&gt;websockets&lt;/strong&gt;&lt;/a&gt;* - For downloading over websocket. Licensed under &lt;a href="https://github.com/aaugustin/websockets/raw/main/LICENSE"&gt;BSD-3-Clause&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/psf/requests"&gt;&lt;strong&gt;requests&lt;/strong&gt;&lt;/a&gt;* - HTTP library. For HTTPS proxy and persistent connections support. Licensed under &lt;a href="https://github.com/psf/requests/raw/main/LICENSE"&gt;Apache-2.0&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Impersonation&lt;/h4&gt; 
&lt;p&gt;The following provide support for impersonating browser requests. This may be required for some sites that employ TLS fingerprinting.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lexiforest/curl_cffi"&gt;&lt;strong&gt;curl_cffi&lt;/strong&gt;&lt;/a&gt; (recommended) - Python binding for &lt;a href="https://github.com/lexiforest/curl-impersonate"&gt;curl-impersonate&lt;/a&gt;. Provides impersonation targets for Chrome, Edge and Safari. Licensed under &lt;a href="https://github.com/lexiforest/curl_cffi/raw/main/LICENSE"&gt;MIT&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Can be installed with the &lt;code&gt;curl-cffi&lt;/code&gt; group, e.g. &lt;code&gt;pip install "yt-dlp[default,curl-cffi]"&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Currently included in &lt;code&gt;yt-dlp.exe&lt;/code&gt;, &lt;code&gt;yt-dlp_linux&lt;/code&gt; and &lt;code&gt;yt-dlp_macos&lt;/code&gt; builds&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Metadata&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quodlibet/mutagen"&gt;&lt;strong&gt;mutagen&lt;/strong&gt;&lt;/a&gt;* - For &lt;code&gt;--embed-thumbnail&lt;/code&gt; in certain formats. Licensed under &lt;a href="https://github.com/quodlibet/mutagen/raw/master/COPYING"&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wez/atomicparsley"&gt;&lt;strong&gt;AtomicParsley&lt;/strong&gt;&lt;/a&gt; - For &lt;code&gt;--embed-thumbnail&lt;/code&gt; in &lt;code&gt;mp4&lt;/code&gt;/&lt;code&gt;m4a&lt;/code&gt; files when &lt;code&gt;mutagen&lt;/code&gt;/&lt;code&gt;ffmpeg&lt;/code&gt; cannot. Licensed under &lt;a href="https://github.com/wez/atomicparsley/raw/master/COPYING"&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xattr/xattr"&gt;&lt;strong&gt;xattr&lt;/strong&gt;&lt;/a&gt;, &lt;a href="https://github.com/iustin/pyxattr"&gt;&lt;strong&gt;pyxattr&lt;/strong&gt;&lt;/a&gt; or &lt;a href="http://savannah.nongnu.org/projects/attr"&gt;&lt;strong&gt;setfattr&lt;/strong&gt;&lt;/a&gt; - For writing xattr metadata (&lt;code&gt;--xattrs&lt;/code&gt;) on &lt;strong&gt;Mac&lt;/strong&gt; and &lt;strong&gt;BSD&lt;/strong&gt;. Licensed under &lt;a href="https://github.com/xattr/xattr/raw/master/LICENSE.txt"&gt;MIT&lt;/a&gt;, &lt;a href="https://github.com/iustin/pyxattr/raw/master/COPYING"&gt;LGPL2.1&lt;/a&gt; and &lt;a href="http://git.savannah.nongnu.org/cgit/attr.git/tree/doc/COPYING"&gt;GPLv2+&lt;/a&gt; respectively&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Misc&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Legrandin/pycryptodome"&gt;&lt;strong&gt;pycryptodomex&lt;/strong&gt;&lt;/a&gt;* - For decrypting AES-128 HLS streams and various other data. Licensed under &lt;a href="https://github.com/Legrandin/pycryptodome/raw/master/LICENSE.rst"&gt;BSD-2-Clause&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ariya/phantomjs"&gt;&lt;strong&gt;phantomjs&lt;/strong&gt;&lt;/a&gt; - Used in extractors where javascript needs to be run. Licensed under &lt;a href="https://github.com/ariya/phantomjs/raw/master/LICENSE.BSD"&gt;BSD-3-Clause&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mitya57/secretstorage"&gt;&lt;strong&gt;secretstorage&lt;/strong&gt;&lt;/a&gt;* - For &lt;code&gt;--cookies-from-browser&lt;/code&gt; to access the &lt;strong&gt;Gnome&lt;/strong&gt; keyring while decrypting cookies of &lt;strong&gt;Chromium&lt;/strong&gt;-based browsers on &lt;strong&gt;Linux&lt;/strong&gt;. Licensed under &lt;a href="https://github.com/mitya57/secretstorage/raw/master/LICENSE"&gt;BSD-3-Clause&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Any external downloader that you want to use with &lt;code&gt;--downloader&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Deprecated&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.libav.org"&gt;&lt;strong&gt;avconv&lt;/strong&gt; and &lt;strong&gt;avprobe&lt;/strong&gt;&lt;/a&gt; - Now &lt;strong&gt;deprecated&lt;/strong&gt; alternative to ffmpeg. License &lt;a href="https://libav.org/legal"&gt;depends on the build&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/faissaloo/SponSkrub"&gt;&lt;strong&gt;sponskrub&lt;/strong&gt;&lt;/a&gt; - For using the now &lt;strong&gt;deprecated&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sponskrub-options"&gt;sponskrub options&lt;/a&gt;. Licensed under &lt;a href="https://github.com/faissaloo/SponSkrub/raw/master/LICENCE.md"&gt;GPLv3+&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://rtmpdump.mplayerhq.hu"&gt;&lt;strong&gt;rtmpdump&lt;/strong&gt;&lt;/a&gt; - For downloading &lt;code&gt;rtmp&lt;/code&gt; streams. ffmpeg can be used instead with &lt;code&gt;--downloader ffmpeg&lt;/code&gt;. Licensed under &lt;a href="http://rtmpdump.mplayerhq.hu"&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://mplayerhq.hu/design7/info.html"&gt;&lt;strong&gt;mplayer&lt;/strong&gt;&lt;/a&gt; or &lt;a href="https://mpv.io"&gt;&lt;strong&gt;mpv&lt;/strong&gt;&lt;/a&gt; - For downloading &lt;code&gt;rstp&lt;/code&gt;/&lt;code&gt;mms&lt;/code&gt; streams. ffmpeg can be used instead with &lt;code&gt;--downloader ffmpeg&lt;/code&gt;. Licensed under &lt;a href="https://github.com/mpv-player/mpv/raw/master/Copyright"&gt;GPLv2+&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To use or redistribute the dependencies, you must agree to their respective licensing terms.&lt;/p&gt; 
&lt;p&gt;The standalone release binaries are built with the Python interpreter and the packages marked with &lt;strong&gt;*&lt;/strong&gt; included.&lt;/p&gt; 
&lt;p&gt;If you do not have the necessary dependencies for a task you are attempting, yt-dlp will warn you. All the currently available dependencies are visible at the top of the &lt;code&gt;--verbose&lt;/code&gt; output&lt;/p&gt; 
&lt;h2&gt;COMPILE&lt;/h2&gt; 
&lt;h3&gt;Standalone PyInstaller Builds&lt;/h3&gt; 
&lt;p&gt;To build the standalone executable, you must have Python and &lt;code&gt;pyinstaller&lt;/code&gt; (plus any of yt-dlp's &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#dependencies"&gt;optional dependencies&lt;/a&gt; if needed). The executable will be built for the same CPU architecture as the Python used.&lt;/p&gt; 
&lt;p&gt;You can run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;python3 devscripts/install_deps.py --include pyinstaller
python3 devscripts/make_lazy_extractors.py
python3 -m bundle.pyinstaller
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;On some systems, you may need to use &lt;code&gt;py&lt;/code&gt; or &lt;code&gt;python&lt;/code&gt; instead of &lt;code&gt;python3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;python -m bundle.pyinstaller&lt;/code&gt; accepts any arguments that can be passed to &lt;code&gt;pyinstaller&lt;/code&gt;, such as &lt;code&gt;--onefile/-F&lt;/code&gt; or &lt;code&gt;--onedir/-D&lt;/code&gt;, which is further &lt;a href="https://pyinstaller.org/en/stable/usage.html#what-to-generate"&gt;documented here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Pyinstaller versions below 4.4 &lt;a href="https://github.com/pyinstaller/pyinstaller#requirements-and-tested-platforms"&gt;do not support&lt;/a&gt; Python installed from the Windows store without using a virtual environment.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;: Running &lt;code&gt;pyinstaller&lt;/code&gt; directly &lt;strong&gt;instead of&lt;/strong&gt; using &lt;code&gt;python -m bundle.pyinstaller&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; officially supported. This may or may not work correctly.&lt;/p&gt; 
&lt;h3&gt;Platform-independent Binary (UNIX)&lt;/h3&gt; 
&lt;p&gt;You will need the build tools &lt;code&gt;python&lt;/code&gt; (3.9+), &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;make&lt;/code&gt; (GNU), &lt;code&gt;pandoc&lt;/code&gt;* and &lt;code&gt;pytest&lt;/code&gt;*.&lt;/p&gt; 
&lt;p&gt;After installing these, simply run &lt;code&gt;make&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also run &lt;code&gt;make yt-dlp&lt;/code&gt; instead to compile only the binary without updating any of the additional files. (The build tools marked with &lt;strong&gt;*&lt;/strong&gt; are not needed for this)&lt;/p&gt; 
&lt;h3&gt;Related scripts&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;devscripts/install_deps.py&lt;/code&gt;&lt;/strong&gt; - Install dependencies for yt-dlp.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;devscripts/update-version.py&lt;/code&gt;&lt;/strong&gt; - Update the version number based on the current date.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;devscripts/set-variant.py&lt;/code&gt;&lt;/strong&gt; - Set the build variant of the executable.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;devscripts/make_changelog.py&lt;/code&gt;&lt;/strong&gt; - Create a markdown changelog using short commit messages and update &lt;code&gt;CONTRIBUTORS&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;code&gt;devscripts/make_lazy_extractors.py&lt;/code&gt;&lt;/strong&gt; - Create lazy extractors. Running this before building the binaries (any variant) will improve their startup performance. Set the environment variable &lt;code&gt;YTDLP_NO_LAZY_EXTRACTORS&lt;/code&gt; to something nonempty to forcefully disable lazy extractor loading.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Note: See their &lt;code&gt;--help&lt;/code&gt; for more info.&lt;/p&gt; 
&lt;h3&gt;Forking the project&lt;/h3&gt; 
&lt;p&gt;If you fork the project on GitHub, you can run your fork's &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/.github/workflows/build.yml"&gt;build workflow&lt;/a&gt; to automatically build the selected version(s) as artifacts. Alternatively, you can run the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/.github/workflows/release.yml"&gt;release workflow&lt;/a&gt; or enable the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/.github/workflows/release-nightly.yml"&gt;nightly workflow&lt;/a&gt; to create full (pre-)releases.&lt;/p&gt; 
&lt;h1&gt;USAGE AND OPTIONS&lt;/h1&gt; 
&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; 
&lt;pre&gt;&lt;code&gt;yt-dlp [OPTIONS] [--] URL [URL...]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Tip: Use &lt;code&gt;CTRL&lt;/code&gt;+&lt;code&gt;F&lt;/code&gt; (or &lt;code&gt;Command&lt;/code&gt;+&lt;code&gt;F&lt;/code&gt;) to search by keywords&lt;/p&gt; 
&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; 
&lt;!-- Auto generated --&gt; 
&lt;h2&gt;General Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-h, --help                      Print this help text and exit
--version                       Print program version and exit
-U, --update                    Update this program to the latest version
--no-update                     Do not check for updates (default)
--update-to [CHANNEL]@[TAG]     Upgrade/downgrade to a specific version.
                                CHANNEL can be a repository as well. CHANNEL
                                and TAG default to "stable" and "latest"
                                respectively if omitted; See "UPDATE" for
                                details. Supported channels: stable,
                                nightly, master
-i, --ignore-errors             Ignore download and postprocessing errors.
                                The download will be considered successful
                                even if the postprocessing fails
--no-abort-on-error             Continue with next video on download errors;
                                e.g. to skip unavailable videos in a
                                playlist (default)
--abort-on-error                Abort downloading of further videos if an
                                error occurs (Alias: --no-ignore-errors)
--dump-user-agent               Display the current user-agent and exit
--list-extractors               List all supported extractors and exit
--extractor-descriptions        Output descriptions of all supported
                                extractors and exit
--use-extractors NAMES          Extractor names to use separated by commas.
                                You can also use regexes, "all", "default"
                                and "end" (end URL matching); e.g. --ies
                                "holodex.*,end,youtube". Prefix the name
                                with a "-" to exclude it, e.g. --ies
                                default,-generic. Use --list-extractors for
                                a list of extractor names. (Alias: --ies)
--default-search PREFIX         Use this prefix for unqualified URLs. E.g.
                                "gvsearch2:python" downloads two videos from
                                google videos for the search term "python".
                                Use the value "auto" to let yt-dlp guess
                                ("auto_warning" to emit a warning when
                                guessing). "error" just throws an error. The
                                default value "fixup_error" repairs broken
                                URLs, but emits an error if this is not
                                possible instead of searching
--ignore-config                 Don't load any more configuration files
                                except those given to --config-locations.
                                For backward compatibility, if this option
                                is found inside the system configuration
                                file, the user configuration is not loaded.
                                (Alias: --no-config)
--no-config-locations           Do not load any custom configuration files
                                (default). When given inside a configuration
                                file, ignore all previous --config-locations
                                defined in the current file
--config-locations PATH         Location of the main configuration file;
                                either the path to the config or its
                                containing directory ("-" for stdin). Can be
                                used multiple times and inside other
                                configuration files
--plugin-dirs PATH              Path to an additional directory to search
                                for plugins. This option can be used
                                multiple times to add multiple directories.
                                Use "default" to search the default plugin
                                directories (default)
--no-plugin-dirs                Clear plugin directories to search,
                                including defaults and those provided by
                                previous --plugin-dirs
--flat-playlist                 Do not extract a playlist's URL result
                                entries; some entry metadata may be missing
                                and downloading may be bypassed
--no-flat-playlist              Fully extract the videos of a playlist
                                (default)
--live-from-start               Download livestreams from the start.
                                Currently experimental and only supported
                                for YouTube and Twitch
--no-live-from-start            Download livestreams from the current time
                                (default)
--wait-for-video MIN[-MAX]      Wait for scheduled streams to become
                                available. Pass the minimum number of
                                seconds (or range) to wait between retries
--no-wait-for-video             Do not wait for scheduled streams (default)
--mark-watched                  Mark videos watched (even with --simulate)
--no-mark-watched               Do not mark videos watched (default)
--color [STREAM:]POLICY         Whether to emit color codes in output,
                                optionally prefixed by the STREAM (stdout or
                                stderr) to apply the setting to. Can be one
                                of "always", "auto" (default), "never", or
                                "no_color" (use non color terminal
                                sequences). Use "auto-tty" or "no_color-tty"
                                to decide based on terminal support only.
                                Can be used multiple times
--compat-options OPTS           Options that can help keep compatibility
                                with youtube-dl or youtube-dlc
                                configurations by reverting some of the
                                changes made in yt-dlp. See "Differences in
                                default behavior" for details
--alias ALIASES OPTIONS         Create aliases for an option string. Unless
                                an alias starts with a dash "-", it is
                                prefixed with "--". Arguments are parsed
                                according to the Python string formatting
                                mini-language. E.g. --alias get-audio,-X "-S
                                aext:{0},abr -x --audio-format {0}" creates
                                options "--get-audio" and "-X" that takes an
                                argument (ARG0) and expands to "-S
                                aext:ARG0,abr -x --audio-format ARG0". All
                                defined aliases are listed in the --help
                                output. Alias options can trigger more
                                aliases; so be careful to avoid defining
                                recursive options. As a safety measure, each
                                alias may be triggered a maximum of 100
                                times. This option can be used multiple times
-t, --preset-alias PRESET       Applies a predefined set of options. e.g.
                                --preset-alias mp3. The following presets
                                are available: mp3, aac, mp4, mkv, sleep.
                                See the "Preset Aliases" section at the end
                                for more info. This option can be used
                                multiple times
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Network Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;--proxy URL                     Use the specified HTTP/HTTPS/SOCKS proxy. To
                                enable SOCKS proxy, specify a proper scheme,
                                e.g. socks5://user:pass@127.0.0.1:1080/.
                                Pass in an empty string (--proxy "") for
                                direct connection
--socket-timeout SECONDS        Time to wait before giving up, in seconds
--source-address IP             Client-side IP address to bind to
--impersonate CLIENT[:OS]       Client to impersonate for requests. E.g.
                                chrome, chrome-110, chrome:windows-10. Pass
                                --impersonate="" to impersonate any client.
                                Note that forcing impersonation for all
                                requests may have a detrimental impact on
                                download speed and stability
--list-impersonate-targets      List available clients to impersonate.
-4, --force-ipv4                Make all connections via IPv4
-6, --force-ipv6                Make all connections via IPv6
--enable-file-urls              Enable file:// URLs. This is disabled by
                                default for security reasons.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Geo-restriction:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;--geo-verification-proxy URL    Use this proxy to verify the IP address for
                                some geo-restricted sites. The default proxy
                                specified by --proxy (or none, if the option
                                is not present) is used for the actual
                                downloading
--xff VALUE                     How to fake X-Forwarded-For HTTP header to
                                try bypassing geographic restriction. One of
                                "default" (only when known to be useful),
                                "never", an IP block in CIDR notation, or a
                                two-letter ISO 3166-2 country code
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Video Selection:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-I, --playlist-items ITEM_SPEC  Comma separated playlist_index of the items
                                to download. You can specify a range using
                                "[START]:[STOP][:STEP]". For backward
                                compatibility, START-STOP is also supported.
                                Use negative indices to count from the right
                                and negative STEP to download in reverse
                                order. E.g. "-I 1:3,7,-5::2" used on a
                                playlist of size 15 will download the items
                                at index 1,2,3,7,11,13,15
--min-filesize SIZE             Abort download if filesize is smaller than
                                SIZE, e.g. 50k or 44.6M
--max-filesize SIZE             Abort download if filesize is larger than
                                SIZE, e.g. 50k or 44.6M
--date DATE                     Download only videos uploaded on this date.
                                The date can be "YYYYMMDD" or in the format 
                                [now|today|yesterday][-N[day|week|month|year]].
                                E.g. "--date today-2weeks" downloads only
                                videos uploaded on the same day two weeks ago
--datebefore DATE               Download only videos uploaded on or before
                                this date. The date formats accepted are the
                                same as --date
--dateafter DATE                Download only videos uploaded on or after
                                this date. The date formats accepted are the
                                same as --date
--match-filters FILTER          Generic video filter. Any "OUTPUT TEMPLATE"
                                field can be compared with a number or a
                                string using the operators defined in
                                "Filtering Formats". You can also simply
                                specify a field to match if the field is
                                present, use "!field" to check if the field
                                is not present, and "&amp;amp;" to check multiple
                                conditions. Use a "\" to escape "&amp;amp;" or
                                quotes if needed. If used multiple times,
                                the filter matches if at least one of the
                                conditions is met. E.g. --match-filters
                                !is_live --match-filters "like_count&amp;gt;?100 &amp;amp;
                                description~='(?i)\bcats \&amp;amp; dogs\b'" matches
                                only videos that are not live OR those that
                                have a like count more than 100 (or the like
                                field is not available) and also has a
                                description that contains the phrase "cats &amp;amp;
                                dogs" (caseless). Use "--match-filters -" to
                                interactively ask whether to download each
                                video
--no-match-filters              Do not use any --match-filters (default)
--break-match-filters FILTER    Same as "--match-filters" but stops the
                                download process when a video is rejected
--no-break-match-filters        Do not use any --break-match-filters (default)
--no-playlist                   Download only the video, if the URL refers
                                to a video and a playlist
--yes-playlist                  Download the playlist, if the URL refers to
                                a video and a playlist
--age-limit YEARS               Download only videos suitable for the given
                                age
--download-archive FILE         Download only videos not listed in the
                                archive file. Record the IDs of all
                                downloaded videos in it
--no-download-archive           Do not use archive file (default)
--max-downloads NUMBER          Abort after downloading NUMBER files
--break-on-existing             Stop the download process when encountering
                                a file that is in the archive supplied with
                                the --download-archive option
--no-break-on-existing          Do not stop the download process when
                                encountering a file that is in the archive
                                (default)
--break-per-input               Alters --max-downloads, --break-on-existing,
                                --break-match-filters, and autonumber to
                                reset per input URL
--no-break-per-input            --break-on-existing and similar options
                                terminates the entire download queue
--skip-playlist-after-errors N  Number of allowed failures until the rest of
                                the playlist is skipped
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Download Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-N, --concurrent-fragments N    Number of fragments of a dash/hlsnative
                                video that should be downloaded concurrently
                                (default is 1)
-r, --limit-rate RATE           Maximum download rate in bytes per second,
                                e.g. 50K or 4.2M
--throttled-rate RATE           Minimum download rate in bytes per second
                                below which throttling is assumed and the
                                video data is re-extracted, e.g. 100K
-R, --retries RETRIES           Number of retries (default is 10), or
                                "infinite"
--file-access-retries RETRIES   Number of times to retry on file access
                                error (default is 3), or "infinite"
--fragment-retries RETRIES      Number of retries for a fragment (default is
                                10), or "infinite" (DASH, hlsnative and ISM)
--retry-sleep [TYPE:]EXPR       Time to sleep between retries in seconds
                                (optionally) prefixed by the type of retry
                                (http (default), fragment, file_access,
                                extractor) to apply the sleep to. EXPR can
                                be a number, linear=START[:END[:STEP=1]] or
                                exp=START[:END[:BASE=2]]. This option can be
                                used multiple times to set the sleep for the
                                different retry types, e.g. --retry-sleep
                                linear=1::2 --retry-sleep fragment:exp=1:20
--skip-unavailable-fragments    Skip unavailable fragments for DASH,
                                hlsnative and ISM downloads (default)
                                (Alias: --no-abort-on-unavailable-fragments)
--abort-on-unavailable-fragments
                                Abort download if a fragment is unavailable
                                (Alias: --no-skip-unavailable-fragments)
--keep-fragments                Keep downloaded fragments on disk after
                                downloading is finished
--no-keep-fragments             Delete downloaded fragments after
                                downloading is finished (default)
--buffer-size SIZE              Size of download buffer, e.g. 1024 or 16K
                                (default is 1024)
--resize-buffer                 The buffer size is automatically resized
                                from an initial value of --buffer-size
                                (default)
--no-resize-buffer              Do not automatically adjust the buffer size
--http-chunk-size SIZE          Size of a chunk for chunk-based HTTP
                                downloading, e.g. 10485760 or 10M (default
                                is disabled). May be useful for bypassing
                                bandwidth throttling imposed by a webserver
                                (experimental)
--playlist-random               Download playlist videos in random order
--lazy-playlist                 Process entries in the playlist as they are
                                received. This disables n_entries,
                                --playlist-random and --playlist-reverse
--no-lazy-playlist              Process videos in the playlist only after
                                the entire playlist is parsed (default)
--xattr-set-filesize            Set file xattribute ytdl.filesize with
                                expected file size
--hls-use-mpegts                Use the mpegts container for HLS videos;
                                allowing some players to play the video
                                while downloading, and reducing the chance
                                of file corruption if download is
                                interrupted. This is enabled by default for
                                live streams
--no-hls-use-mpegts             Do not use the mpegts container for HLS
                                videos. This is default when not downloading
                                live streams
--download-sections REGEX       Download only chapters that match the
                                regular expression. A "*" prefix denotes
                                time-range instead of chapter. Negative
                                timestamps are calculated from the end.
                                "*from-url" can be used to download between
                                the "start_time" and "end_time" extracted
                                from the URL. Needs ffmpeg. This option can
                                be used multiple times to download multiple
                                sections, e.g. --download-sections
                                "*10:15-inf" --download-sections "intro"
--downloader [PROTO:]NAME       Name or path of the external downloader to
                                use (optionally) prefixed by the protocols
                                (http, ftp, m3u8, dash, rstp, rtmp, mms) to
                                use it for. Currently supports native,
                                aria2c, avconv, axel, curl, ffmpeg, httpie,
                                wget. You can use this option multiple times
                                to set different downloaders for different
                                protocols. E.g. --downloader aria2c
                                --downloader "dash,m3u8:native" will use
                                aria2c for http/ftp downloads, and the
                                native downloader for dash/m3u8 downloads
                                (Alias: --external-downloader)
--downloader-args NAME:ARGS     Give these arguments to the external
                                downloader. Specify the downloader name and
                                the arguments separated by a colon ":". For
                                ffmpeg, arguments can be passed to different
                                positions using the same syntax as
                                --postprocessor-args. You can use this
                                option multiple times to give different
                                arguments to different downloaders (Alias:
                                --external-downloader-args)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Filesystem Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-a, --batch-file FILE           File containing URLs to download ("-" for
                                stdin), one URL per line. Lines starting
                                with "#", ";" or "]" are considered as
                                comments and ignored
--no-batch-file                 Do not read URLs from batch file (default)
-P, --paths [TYPES:]PATH        The paths where the files should be
                                downloaded. Specify the type of file and the
                                path separated by a colon ":". All the same
                                TYPES as --output are supported.
                                Additionally, you can also provide "home"
                                (default) and "temp" paths. All intermediary
                                files are first downloaded to the temp path
                                and then the final files are moved over to
                                the home path after download is finished.
                                This option is ignored if --output is an
                                absolute path
-o, --output [TYPES:]TEMPLATE   Output filename template; see "OUTPUT
                                TEMPLATE" for details
--output-na-placeholder TEXT    Placeholder for unavailable fields in
                                --output (default: "NA")
--restrict-filenames            Restrict filenames to only ASCII characters,
                                and avoid "&amp;amp;" and spaces in filenames
--no-restrict-filenames         Allow Unicode characters, "&amp;amp;" and spaces in
                                filenames (default)
--windows-filenames             Force filenames to be Windows-compatible
--no-windows-filenames          Sanitize filenames only minimally
--trim-filenames LENGTH         Limit the filename length (excluding
                                extension) to the specified number of
                                characters
-w, --no-overwrites             Do not overwrite any files
--force-overwrites              Overwrite all video and metadata files. This
                                option includes --no-continue
--no-force-overwrites           Do not overwrite the video, but overwrite
                                related files (default)
-c, --continue                  Resume partially downloaded files/fragments
                                (default)
--no-continue                   Do not resume partially downloaded
                                fragments. If the file is not fragmented,
                                restart download of the entire file
--part                          Use .part files instead of writing directly
                                into output file (default)
--no-part                       Do not use .part files - write directly into
                                output file
--mtime                         Use the Last-modified header to set the file
                                modification time
--no-mtime                      Do not use the Last-modified header to set
                                the file modification time (default)
--write-description             Write video description to a .description file
--no-write-description          Do not write video description (default)
--write-info-json               Write video metadata to a .info.json file
                                (this may contain personal information)
--no-write-info-json            Do not write video metadata (default)
--write-playlist-metafiles      Write playlist metadata in addition to the
                                video metadata when using --write-info-json,
                                --write-description etc. (default)
--no-write-playlist-metafiles   Do not write playlist metadata when using
                                --write-info-json, --write-description etc.
--clean-info-json               Remove some internal metadata such as
                                filenames from the infojson (default)
--no-clean-info-json            Write all fields to the infojson
--write-comments                Retrieve video comments to be placed in the
                                infojson. The comments are fetched even
                                without this option if the extraction is
                                known to be quick (Alias: --get-comments)
--no-write-comments             Do not retrieve video comments unless the
                                extraction is known to be quick (Alias:
                                --no-get-comments)
--load-info-json FILE           JSON file containing the video information
                                (created with the "--write-info-json" option)
--cookies FILE                  Netscape formatted file to read cookies from
                                and dump cookie jar in
--no-cookies                    Do not read/dump cookies from/to file
                                (default)
--cookies-from-browser BROWSER[+KEYRING][:PROFILE][::CONTAINER]
                                The name of the browser to load cookies
                                from. Currently supported browsers are:
                                brave, chrome, chromium, edge, firefox,
                                opera, safari, vivaldi, whale. Optionally,
                                the KEYRING used for decrypting Chromium
                                cookies on Linux, the name/path of the
                                PROFILE to load cookies from, and the
                                CONTAINER name (if Firefox) ("none" for no
                                container) can be given with their
                                respective separators. By default, all
                                containers of the most recently accessed
                                profile are used. Currently supported
                                keyrings are: basictext, gnomekeyring,
                                kwallet, kwallet5, kwallet6
--no-cookies-from-browser       Do not load cookies from browser (default)
--cache-dir DIR                 Location in the filesystem where yt-dlp can
                                store some downloaded information (such as
                                client ids and signatures) permanently. By
                                default ${XDG_CACHE_HOME}/yt-dlp
--no-cache-dir                  Disable filesystem caching
--rm-cache-dir                  Delete all filesystem cache files
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Thumbnail Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;--write-thumbnail               Write thumbnail image to disk
--no-write-thumbnail            Do not write thumbnail image to disk (default)
--write-all-thumbnails          Write all thumbnail image formats to disk
--list-thumbnails               List available thumbnails of each video.
                                Simulate unless --no-simulate is used
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Internet Shortcut Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;--write-link                    Write an internet shortcut file, depending
                                on the current platform (.url, .webloc or
                                .desktop). The URL may be cached by the OS
--write-url-link                Write a .url Windows internet shortcut. The
                                OS caches the URL based on the file path
--write-webloc-link             Write a .webloc macOS internet shortcut
--write-desktop-link            Write a .desktop Linux internet shortcut
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Verbosity and Simulation Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-q, --quiet                     Activate quiet mode. If used with --verbose,
                                print the log to stderr
--no-quiet                      Deactivate quiet mode. (Default)
--no-warnings                   Ignore warnings
-s, --simulate                  Do not download the video and do not write
                                anything to disk
--no-simulate                   Download the video even if printing/listing
                                options are used
--ignore-no-formats-error       Ignore "No video formats" error. Useful for
                                extracting metadata even if the videos are
                                not actually available for download
                                (experimental)
--no-ignore-no-formats-error    Throw error when no downloadable video
                                formats are found (default)
--skip-download                 Do not download the video but write all
                                related files (Alias: --no-download)
-O, --print [WHEN:]TEMPLATE     Field name or output template to print to
                                screen, optionally prefixed with when to
                                print it, separated by a ":". Supported
                                values of "WHEN" are the same as that of
                                --use-postprocessor (default: video).
                                Implies --quiet. Implies --simulate unless
                                --no-simulate or later stages of WHEN are
                                used. This option can be used multiple times
--print-to-file [WHEN:]TEMPLATE FILE
                                Append given template to the file. The
                                values of WHEN and TEMPLATE are the same as
                                that of --print. FILE uses the same syntax
                                as the output template. This option can be
                                used multiple times
-j, --dump-json                 Quiet, but print JSON information for each
                                video. Simulate unless --no-simulate is
                                used. See "OUTPUT TEMPLATE" for a
                                description of available keys
-J, --dump-single-json          Quiet, but print JSON information for each
                                URL or infojson passed. Simulate unless
                                --no-simulate is used. If the URL refers to
                                a playlist, the whole playlist information
                                is dumped in a single line
--force-write-archive           Force download archive entries to be written
                                as far as no errors occur, even if -s or
                                another simulation option is used (Alias:
                                --force-download-archive)
--newline                       Output progress bar as new lines
--no-progress                   Do not print progress bar
--progress                      Show progress bar, even if in quiet mode
--console-title                 Display progress in console titlebar
--progress-template [TYPES:]TEMPLATE
                                Template for progress outputs, optionally
                                prefixed with one of "download:" (default),
                                "download-title:" (the console title),
                                "postprocess:",  or "postprocess-title:".
                                The video's fields are accessible under the
                                "info" key and the progress attributes are
                                accessible under "progress" key. E.g.
                                --console-title --progress-template
                                "download-title:%(info.id)s-%(progress.eta)s"
--progress-delta SECONDS        Time between progress output (default: 0)
-v, --verbose                   Print various debugging information
--dump-pages                    Print downloaded pages encoded using base64
                                to debug problems (very verbose)
--write-pages                   Write downloaded intermediary pages to files
                                in the current directory to debug problems
--print-traffic                 Display sent and read HTTP traffic
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Workarounds:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;--encoding ENCODING             Force the specified encoding (experimental)
--legacy-server-connect         Explicitly allow HTTPS connection to servers
                                that do not support RFC 5746 secure
                                renegotiation
--no-check-certificates         Suppress HTTPS certificate validation
--prefer-insecure               Use an unencrypted connection to retrieve
                                information about the video (Currently
                                supported only for YouTube)
--add-headers FIELD:VALUE       Specify a custom HTTP header and its value,
                                separated by a colon ":". You can use this
                                option multiple times
--bidi-workaround               Work around terminals that lack
                                bidirectional text support. Requires bidiv
                                or fribidi executable in PATH
--sleep-requests SECONDS        Number of seconds to sleep between requests
                                during data extraction
--sleep-interval SECONDS        Number of seconds to sleep before each
                                download. This is the minimum time to sleep
                                when used along with --max-sleep-interval
                                (Alias: --min-sleep-interval)
--max-sleep-interval SECONDS    Maximum number of seconds to sleep. Can only
                                be used along with --min-sleep-interval
--sleep-subtitles SECONDS       Number of seconds to sleep before each
                                subtitle download
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Video Format Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-f, --format FORMAT             Video format code, see "FORMAT SELECTION"
                                for more details
-S, --format-sort SORTORDER     Sort the formats by the fields given, see
                                "Sorting Formats" for more details
--format-sort-force             Force user specified sort order to have
                                precedence over all fields, see "Sorting
                                Formats" for more details (Alias: --S-force)
--no-format-sort-force          Some fields have precedence over the user
                                specified sort order (default)
--video-multistreams            Allow multiple video streams to be merged
                                into a single file
--no-video-multistreams         Only one video stream is downloaded for each
                                output file (default)
--audio-multistreams            Allow multiple audio streams to be merged
                                into a single file
--no-audio-multistreams         Only one audio stream is downloaded for each
                                output file (default)
--prefer-free-formats           Prefer video formats with free containers
                                over non-free ones of the same quality. Use
                                with "-S ext" to strictly prefer free
                                containers irrespective of quality
--no-prefer-free-formats        Don't give any special preference to free
                                containers (default)
--check-formats                 Make sure formats are selected only from
                                those that are actually downloadable
--check-all-formats             Check all formats for whether they are
                                actually downloadable
--no-check-formats              Do not check that the formats are actually
                                downloadable
-F, --list-formats              List available formats of each video.
                                Simulate unless --no-simulate is used
--merge-output-format FORMAT    Containers that may be used when merging
                                formats, separated by "/", e.g. "mp4/mkv".
                                Ignored if no merge is required. (currently
                                supported: avi, flv, mkv, mov, mp4, webm)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Subtitle Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;--write-subs                    Write subtitle file
--no-write-subs                 Do not write subtitle file (default)
--write-auto-subs               Write automatically generated subtitle file
                                (Alias: --write-automatic-subs)
--no-write-auto-subs            Do not write auto-generated subtitles
                                (default) (Alias: --no-write-automatic-subs)
--list-subs                     List available subtitles of each video.
                                Simulate unless --no-simulate is used
--sub-format FORMAT             Subtitle format; accepts formats preference
                                separated by "/", e.g. "srt" or "ass/srt/best"
--sub-langs LANGS               Languages of the subtitles to download (can
                                be regex) or "all" separated by commas, e.g.
                                --sub-langs "en.*,ja" (where "en.*" is a
                                regex pattern that matches "en" followed by
                                0 or more of any character). You can prefix
                                the language code with a "-" to exclude it
                                from the requested languages, e.g. --sub-
                                langs all,-live_chat. Use --list-subs for a
                                list of available language tags
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Authentication Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-u, --username USERNAME         Login with this account ID
-p, --password PASSWORD         Account password. If this option is left
                                out, yt-dlp will ask interactively
-2, --twofactor TWOFACTOR       Two-factor authentication code
-n, --netrc                     Use .netrc authentication data
--netrc-location PATH           Location of .netrc authentication data;
                                either the path or its containing directory.
                                Defaults to ~/.netrc
--netrc-cmd NETRC_CMD           Command to execute to get the credentials
                                for an extractor.
--video-password PASSWORD       Video-specific password
--ap-mso MSO                    Adobe Pass multiple-system operator (TV
                                provider) identifier, use --ap-list-mso for
                                a list of available MSOs
--ap-username USERNAME          Multiple-system operator account login
--ap-password PASSWORD          Multiple-system operator account password.
                                If this option is left out, yt-dlp will ask
                                interactively
--ap-list-mso                   List all supported multiple-system operators
--client-certificate CERTFILE   Path to client certificate file in PEM
                                format. May include the private key
--client-certificate-key KEYFILE
                                Path to private key file for client
                                certificate
--client-certificate-password PASSWORD
                                Password for client certificate private key,
                                if encrypted. If not provided, and the key
                                is encrypted, yt-dlp will ask interactively
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Post-Processing Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;-x, --extract-audio             Convert video files to audio-only files
                                (requires ffmpeg and ffprobe)
--audio-format FORMAT           Format to convert the audio to when -x is
                                used. (currently supported: best (default),
                                aac, alac, flac, m4a, mp3, opus, vorbis,
                                wav). You can specify multiple rules using
                                similar syntax as --remux-video
--audio-quality QUALITY         Specify ffmpeg audio quality to use when
                                converting the audio with -x. Insert a value
                                between 0 (best) and 10 (worst) for VBR or a
                                specific bitrate like 128K (default 5)
--remux-video FORMAT            Remux the video into another container if
                                necessary (currently supported: avi, flv,
                                gif, mkv, mov, mp4, webm, aac, aiff, alac,
                                flac, m4a, mka, mp3, ogg, opus, vorbis,
                                wav). If the target container does not
                                support the video/audio codec, remuxing will
                                fail. You can specify multiple rules; e.g.
                                "aac&amp;gt;m4a/mov&amp;gt;mp4/mkv" will remux aac to m4a,
                                mov to mp4 and anything else to mkv
--recode-video FORMAT           Re-encode the video into another format if
                                necessary. The syntax and supported formats
                                are the same as --remux-video
--postprocessor-args NAME:ARGS  Give these arguments to the postprocessors.
                                Specify the postprocessor/executable name
                                and the arguments separated by a colon ":"
                                to give the argument to the specified
                                postprocessor/executable. Supported PP are:
                                Merger, ModifyChapters, SplitChapters,
                                ExtractAudio, VideoRemuxer, VideoConvertor,
                                Metadata, EmbedSubtitle, EmbedThumbnail,
                                SubtitlesConvertor, ThumbnailsConvertor,
                                FixupStretched, FixupM4a, FixupM3u8,
                                FixupTimestamp and FixupDuration. The
                                supported executables are: AtomicParsley,
                                FFmpeg and FFprobe. You can also specify
                                "PP+EXE:ARGS" to give the arguments to the
                                specified executable only when being used by
                                the specified postprocessor. Additionally,
                                for ffmpeg/ffprobe, "_i"/"_o" can be
                                appended to the prefix optionally followed
                                by a number to pass the argument before the
                                specified input/output file, e.g. --ppa
                                "Merger+ffmpeg_i1:-v quiet". You can use
                                this option multiple times to give different
                                arguments to different postprocessors.
                                (Alias: --ppa)
-k, --keep-video                Keep the intermediate video file on disk
                                after post-processing
--no-keep-video                 Delete the intermediate video file after
                                post-processing (default)
--post-overwrites               Overwrite post-processed files (default)
--no-post-overwrites            Do not overwrite post-processed files
--embed-subs                    Embed subtitles in the video (only for mp4,
                                webm and mkv videos)
--no-embed-subs                 Do not embed subtitles (default)
--embed-thumbnail               Embed thumbnail in the video as cover art
--no-embed-thumbnail            Do not embed thumbnail (default)
--embed-metadata                Embed metadata to the video file. Also
                                embeds chapters/infojson if present unless
                                --no-embed-chapters/--no-embed-info-json are
                                used (Alias: --add-metadata)
--no-embed-metadata             Do not add metadata to file (default)
                                (Alias: --no-add-metadata)
--embed-chapters                Add chapter markers to the video file
                                (Alias: --add-chapters)
--no-embed-chapters             Do not add chapter markers (default) (Alias:
                                --no-add-chapters)
--embed-info-json               Embed the infojson as an attachment to
                                mkv/mka video files
--no-embed-info-json            Do not embed the infojson as an attachment
                                to the video file
--parse-metadata [WHEN:]FROM:TO
                                Parse additional metadata like title/artist
                                from other fields; see "MODIFYING METADATA"
                                for details. Supported values of "WHEN" are
                                the same as that of --use-postprocessor
                                (default: pre_process)
--replace-in-metadata [WHEN:]FIELDS REGEX REPLACE
                                Replace text in a metadata field using the
                                given regex. This option can be used
                                multiple times. Supported values of "WHEN"
                                are the same as that of --use-postprocessor
                                (default: pre_process)
--xattrs                        Write metadata to the video file's xattrs
                                (using Dublin Core and XDG standards)
--concat-playlist POLICY        Concatenate videos in a playlist. One of
                                "never", "always", or "multi_video"
                                (default; only when the videos form a single
                                show). All the video files must have the
                                same codecs and number of streams to be
                                concatenable. The "pl_video:" prefix can be
                                used with "--paths" and "--output" to set
                                the output filename for the concatenated
                                files. See "OUTPUT TEMPLATE" for details
--fixup POLICY                  Automatically correct known faults of the
                                file. One of never (do nothing), warn (only
                                emit a warning), detect_or_warn (the
                                default; fix the file if we can, warn
                                otherwise), force (try fixing even if the
                                file already exists)
--ffmpeg-location PATH          Location of the ffmpeg binary; either the
                                path to the binary or its containing directory
--exec [WHEN:]CMD               Execute a command, optionally prefixed with
                                when to execute it, separated by a ":".
                                Supported values of "WHEN" are the same as
                                that of --use-postprocessor (default:
                                after_move). The same syntax as the output
                                template can be used to pass any field as
                                arguments to the command. If no fields are
                                passed, %(filepath,_filename|)q is appended
                                to the end of the command. This option can
                                be used multiple times
--no-exec                       Remove any previously defined --exec
--convert-subs FORMAT           Convert the subtitles to another format
                                (currently supported: ass, lrc, srt, vtt).
                                Use "--convert-subs none" to disable
                                conversion (default) (Alias: --convert-
                                subtitles)
--convert-thumbnails FORMAT     Convert the thumbnails to another format
                                (currently supported: jpg, png, webp). You
                                can specify multiple rules using similar
                                syntax as "--remux-video". Use "--convert-
                                thumbnails none" to disable conversion
                                (default)
--split-chapters                Split video into multiple files based on
                                internal chapters. The "chapter:" prefix can
                                be used with "--paths" and "--output" to set
                                the output filename for the split files. See
                                "OUTPUT TEMPLATE" for details
--no-split-chapters             Do not split video based on chapters (default)
--remove-chapters REGEX         Remove chapters whose title matches the
                                given regular expression. The syntax is the
                                same as --download-sections. This option can
                                be used multiple times
--no-remove-chapters            Do not remove any chapters from the file
                                (default)
--force-keyframes-at-cuts       Force keyframes at cuts when
                                downloading/splitting/removing sections.
                                This is slow due to needing a re-encode, but
                                the resulting video may have fewer artifacts
                                around the cuts
--no-force-keyframes-at-cuts    Do not force keyframes around the chapters
                                when cutting/splitting (default)
--use-postprocessor NAME[:ARGS]
                                The (case-sensitive) name of plugin
                                postprocessors to be enabled, and
                                (optionally) arguments to be passed to it,
                                separated by a colon ":". ARGS are a
                                semicolon ";" delimited list of NAME=VALUE.
                                The "when" argument determines when the
                                postprocessor is invoked. It can be one of
                                "pre_process" (after video extraction),
                                "after_filter" (after video passes filter),
                                "video" (after --format; before
                                --print/--output), "before_dl" (before each
                                video download), "post_process" (after each
                                video download; default), "after_move"
                                (after moving the video file to its final
                                location), "after_video" (after downloading
                                and processing all formats of a video), or
                                "playlist" (at end of playlist). This option
                                can be used multiple times to add different
                                postprocessors
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;SponsorBlock Options:&lt;/h2&gt; 
&lt;p&gt;Make chapter entries for, or remove various segments (sponsor, introductions, etc.) from downloaded YouTube videos using the &lt;a href="https://sponsor.ajay.app"&gt;SponsorBlock API&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--sponsorblock-mark CATS        SponsorBlock categories to create chapters
                                for, separated by commas. Available
                                categories are sponsor, intro, outro,
                                selfpromo, preview, filler, interaction,
                                music_offtopic, poi_highlight, chapter, all
                                and default (=all). You can prefix the
                                category with a "-" to exclude it. See [1]
                                for descriptions of the categories. E.g.
                                --sponsorblock-mark all,-preview
                                [1] https://wiki.sponsor.ajay.app/w/Segment_Categories
--sponsorblock-remove CATS      SponsorBlock categories to be removed from
                                the video file, separated by commas. If a
                                category is present in both mark and remove,
                                remove takes precedence. The syntax and
                                available categories are the same as for
                                --sponsorblock-mark except that "default"
                                refers to "all,-filler" and poi_highlight,
                                chapter are not available
--sponsorblock-chapter-title TEMPLATE
                                An output template for the title of the
                                SponsorBlock chapters created by
                                --sponsorblock-mark. The only available
                                fields are start_time, end_time, category,
                                categories, name, category_names. Defaults
                                to "[SponsorBlock]: %(category_names)l"
--no-sponsorblock               Disable both --sponsorblock-mark and
                                --sponsorblock-remove
--sponsorblock-api URL          SponsorBlock API location, defaults to
                                https://sponsor.ajay.app
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Extractor Options:&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;--extractor-retries RETRIES     Number of retries for known extractor errors
                                (default is 3), or "infinite"
--allow-dynamic-mpd             Process dynamic DASH manifests (default)
                                (Alias: --no-ignore-dynamic-mpd)
--ignore-dynamic-mpd            Do not process dynamic DASH manifests
                                (Alias: --no-allow-dynamic-mpd)
--hls-split-discontinuity       Split HLS playlists to different formats at
                                discontinuities such as ad breaks
--no-hls-split-discontinuity    Do not split HLS playlists into different
                                formats at discontinuities such as ad breaks
                                (default)
--extractor-args IE_KEY:ARGS    Pass ARGS arguments to the IE_KEY extractor.
                                See "EXTRACTOR ARGUMENTS" for details. You
                                can use this option multiple times to give
                                arguments for different extractors
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Preset Aliases:&lt;/h2&gt; 
&lt;p&gt;Predefined aliases for convenience and ease of use. Note that future versions of yt-dlp may add or adjust presets, but the existing preset names will not be changed or removed&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-t mp3                          -f 'ba[acodec^=mp3]/ba/b' -x --audio-format
                                mp3

-t aac                          -f
                                'ba[acodec^=aac]/ba[acodec^=mp4a.40.]/ba/b'
                                -x --audio-format aac

-t mp4                          --merge-output-format mp4 --remux-video mp4
                                -S vcodec:h264,lang,quality,res,fps,hdr:12,a
                                codec:aac

-t mkv                          --merge-output-format mkv --remux-video mkv

-t sleep                        --sleep-subtitles 5 --sleep-requests 0.75
                                --sleep-interval 10 --max-sleep-interval 20
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;CONFIGURATION&lt;/h1&gt; 
&lt;p&gt;You can configure yt-dlp by placing any supported command line option in a configuration file. The configuration is loaded from the following locations:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Main Configuration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The file given to &lt;code&gt;--config-location&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Portable Configuration&lt;/strong&gt;: (Recommended for portable installations)&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If using a binary, &lt;code&gt;yt-dlp.conf&lt;/code&gt; in the same directory as the binary&lt;/li&gt; 
   &lt;li&gt;If running from source-code, &lt;code&gt;yt-dlp.conf&lt;/code&gt; in the parent directory of &lt;code&gt;yt_dlp&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Home Configuration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;yt-dlp.conf&lt;/code&gt; in the home path given to &lt;code&gt;-P&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;If &lt;code&gt;-P&lt;/code&gt; is not given, the current directory is searched&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;User Configuration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;${XDG_CONFIG_HOME}/yt-dlp.conf&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;${XDG_CONFIG_HOME}/yt-dlp/config&lt;/code&gt; (recommended on Linux/macOS)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;${XDG_CONFIG_HOME}/yt-dlp/config.txt&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;${APPDATA}/yt-dlp.conf&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;${APPDATA}/yt-dlp/config&lt;/code&gt; (recommended on Windows)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;${APPDATA}/yt-dlp/config.txt&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;~/yt-dlp.conf&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;~/yt-dlp.conf.txt&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;~/.yt-dlp/config&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;~/.yt-dlp/config.txt&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;p&gt;See also: &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#notes-about-environment-variables"&gt;Notes about environment variables&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;System Configuration&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;/etc/yt-dlp.conf&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/etc/yt-dlp/config&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;/etc/yt-dlp/config.txt&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;E.g. with the following configuration file, yt-dlp will always extract the audio, copy the mtime, use a proxy and save all videos under &lt;code&gt;YouTube&lt;/code&gt; directory in your home directory:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;# Lines starting with # are comments

# Always extract audio
-x

# Copy the mtime
--mtime

# Use this proxy
--proxy 127.0.0.1:3128

# Save all videos under YouTube directory in your home directory
-o ~/YouTube/%(title)s.%(ext)s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Options in a configuration file are just the same options aka switches used in regular command line calls; thus there &lt;strong&gt;must be no whitespace&lt;/strong&gt; after &lt;code&gt;-&lt;/code&gt; or &lt;code&gt;--&lt;/code&gt;, e.g. &lt;code&gt;-o&lt;/code&gt; or &lt;code&gt;--proxy&lt;/code&gt; but not &lt;code&gt;- o&lt;/code&gt; or &lt;code&gt;-- proxy&lt;/code&gt;. They must also be quoted when necessary, as if it were a UNIX shell.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;--ignore-config&lt;/code&gt; if you want to disable all configuration files for a particular yt-dlp run. If &lt;code&gt;--ignore-config&lt;/code&gt; is found inside any configuration file, no further configuration will be loaded. For example, having the option in the portable configuration file prevents loading of home, user, and system configurations. Additionally, (for backward compatibility) if &lt;code&gt;--ignore-config&lt;/code&gt; is found inside the system configuration file, the user configuration is not loaded.&lt;/p&gt; 
&lt;h3&gt;Configuration file encoding&lt;/h3&gt; 
&lt;p&gt;The configuration files are decoded according to the UTF BOM if present, and in the encoding from system locale otherwise.&lt;/p&gt; 
&lt;p&gt;If you want your file to be decoded differently, add &lt;code&gt;# coding: ENCODING&lt;/code&gt; to the beginning of the file (e.g. &lt;code&gt;# coding: shift-jis&lt;/code&gt;). There must be no characters before that, even spaces or BOM.&lt;/p&gt; 
&lt;h3&gt;Authentication with netrc&lt;/h3&gt; 
&lt;p&gt;You may also want to configure automatic credentials storage for extractors that support authentication (by providing login and password with &lt;code&gt;--username&lt;/code&gt; and &lt;code&gt;--password&lt;/code&gt;) in order not to pass credentials as command line arguments on every yt-dlp execution and prevent tracking plain text passwords in the shell command history. You can achieve this using a &lt;a href="https://stackoverflow.com/tags/.netrc/info"&gt;&lt;code&gt;.netrc&lt;/code&gt; file&lt;/a&gt; on a per-extractor basis. For that, you will need to create a &lt;code&gt;.netrc&lt;/code&gt; file in &lt;code&gt;--netrc-location&lt;/code&gt; and restrict permissions to read/write by only you:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;touch ${HOME}/.netrc
chmod a-rwx,u+rw ${HOME}/.netrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;After that, you can add credentials for an extractor in the following format, where &lt;em&gt;extractor&lt;/em&gt; is the name of the extractor in lowercase:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;machine &amp;lt;extractor&amp;gt; login &amp;lt;username&amp;gt; password &amp;lt;password&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;E.g.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;machine youtube login myaccount@gmail.com password my_youtube_password
machine twitch login my_twitch_account_name password my_twitch_password
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To activate authentication with the &lt;code&gt;.netrc&lt;/code&gt; file you should pass &lt;code&gt;--netrc&lt;/code&gt; to yt-dlp or place it in the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration"&gt;configuration file&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The default location of the .netrc file is &lt;code&gt;~&lt;/code&gt; (see below).&lt;/p&gt; 
&lt;p&gt;As an alternative to using the &lt;code&gt;.netrc&lt;/code&gt; file, which has the disadvantage of keeping your passwords in a plain text file, you can configure a custom shell command to provide the credentials for an extractor. This is done by providing the &lt;code&gt;--netrc-cmd&lt;/code&gt; parameter, it shall output the credentials in the netrc format and return &lt;code&gt;0&lt;/code&gt; on success, other values will be treated as an error. &lt;code&gt;{}&lt;/code&gt; in the command will be replaced by the name of the extractor to make it possible to select the credentials for the right extractor.&lt;/p&gt; 
&lt;p&gt;E.g. To use an encrypted &lt;code&gt;.netrc&lt;/code&gt; file stored as &lt;code&gt;.authinfo.gpg&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;yt-dlp --netrc-cmd 'gpg --decrypt ~/.authinfo.gpg' 'https://www.youtube.com/watch?v=BaW_jenozKc'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Notes about environment variables&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Environment variables are normally specified as &lt;code&gt;${VARIABLE}&lt;/code&gt;/&lt;code&gt;$VARIABLE&lt;/code&gt; on UNIX and &lt;code&gt;%VARIABLE%&lt;/code&gt; on Windows; but is always shown as &lt;code&gt;${VARIABLE}&lt;/code&gt; in this documentation&lt;/li&gt; 
 &lt;li&gt;yt-dlp also allows using UNIX-style variables on Windows for path-like options; e.g. &lt;code&gt;--output&lt;/code&gt;, &lt;code&gt;--config-location&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;If unset, &lt;code&gt;${XDG_CONFIG_HOME}&lt;/code&gt; defaults to &lt;code&gt;~/.config&lt;/code&gt; and &lt;code&gt;${XDG_CACHE_HOME}&lt;/code&gt; to &lt;code&gt;~/.cache&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On Windows, &lt;code&gt;~&lt;/code&gt; points to &lt;code&gt;${HOME}&lt;/code&gt; if present; or, &lt;code&gt;${USERPROFILE}&lt;/code&gt; or &lt;code&gt;${HOMEDRIVE}${HOMEPATH}&lt;/code&gt; otherwise&lt;/li&gt; 
 &lt;li&gt;On Windows, &lt;code&gt;${USERPROFILE}&lt;/code&gt; generally points to &lt;code&gt;C:\Users\&amp;lt;user name&amp;gt;&lt;/code&gt; and &lt;code&gt;${APPDATA}&lt;/code&gt; to &lt;code&gt;${USERPROFILE}\AppData\Roaming&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;OUTPUT TEMPLATE&lt;/h1&gt; 
&lt;p&gt;The &lt;code&gt;-o&lt;/code&gt; option is used to indicate a template for the output file names while &lt;code&gt;-P&lt;/code&gt; option is used to specify the path each type of file should be saved to.&lt;/p&gt; 
&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; 
&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template-examples"&gt;navigate me to examples&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; 
&lt;p&gt;The simplest usage of &lt;code&gt;-o&lt;/code&gt; is not to set any template arguments when downloading a single file, like in &lt;code&gt;yt-dlp -o funny_video.flv "https://some/video"&lt;/code&gt; (hard-coding file extension like this is &lt;em&gt;not&lt;/em&gt; recommended and could break some post-processing).&lt;/p&gt; 
&lt;p&gt;It may however also contain special sequences that will be replaced when downloading each video. The special sequences may be formatted according to &lt;a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting"&gt;Python string formatting operations&lt;/a&gt;, e.g. &lt;code&gt;%(NAME)s&lt;/code&gt; or &lt;code&gt;%(NAME)05d&lt;/code&gt;. To clarify, that is a percent symbol followed by a name in parentheses, followed by formatting operations.&lt;/p&gt; 
&lt;p&gt;The field names themselves (the part inside the parenthesis) can also have some special formatting:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Object traversal&lt;/strong&gt;: The dictionaries and lists available in metadata can be traversed by using a dot &lt;code&gt;.&lt;/code&gt; separator; e.g. &lt;code&gt;%(tags.0)s&lt;/code&gt;, &lt;code&gt;%(subtitles.en.-1.ext)s&lt;/code&gt;. You can do Python slicing with colon &lt;code&gt;:&lt;/code&gt;; E.g. &lt;code&gt;%(id.3:7)s&lt;/code&gt;, &lt;code&gt;%(id.6:2:-1)s&lt;/code&gt;, &lt;code&gt;%(formats.:.format_id)s&lt;/code&gt;. Curly braces &lt;code&gt;{}&lt;/code&gt; can be used to build dictionaries with only specific keys; e.g. &lt;code&gt;%(formats.:.{format_id,height})#j&lt;/code&gt;. An empty field name &lt;code&gt;%()s&lt;/code&gt; refers to the entire infodict; e.g. &lt;code&gt;%(.{id,title})s&lt;/code&gt;. Note that all the fields that become available using this method are not listed below. Use &lt;code&gt;-j&lt;/code&gt; to see such fields&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Arithmetic&lt;/strong&gt;: Simple arithmetic can be done on numeric fields using &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt;. E.g. &lt;code&gt;%(playlist_index+10)03d&lt;/code&gt;, &lt;code&gt;%(n_entries+1-playlist_index)d&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Date/time Formatting&lt;/strong&gt;: Date/time fields can be formatted according to &lt;a href="https://docs.python.org/3/library/datetime.html#strftime-and-strptime-format-codes"&gt;strftime formatting&lt;/a&gt; by specifying it separated from the field name using a &lt;code&gt;&amp;gt;&lt;/code&gt;. E.g. &lt;code&gt;%(duration&amp;gt;%H-%M-%S)s&lt;/code&gt;, &lt;code&gt;%(upload_date&amp;gt;%Y-%m-%d)s&lt;/code&gt;, &lt;code&gt;%(epoch-3600&amp;gt;%H-%M-%S)s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Alternatives&lt;/strong&gt;: Alternate fields can be specified separated with a &lt;code&gt;,&lt;/code&gt;. E.g. &lt;code&gt;%(release_date&amp;gt;%Y,upload_date&amp;gt;%Y|Unknown)s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Replacement&lt;/strong&gt;: A replacement value can be specified using a &lt;code&gt;&amp;amp;&lt;/code&gt; separator according to the &lt;a href="https://docs.python.org/3/library/string.html#format-specification-mini-language"&gt;&lt;code&gt;str.format&lt;/code&gt; mini-language&lt;/a&gt;. If the field is &lt;em&gt;not&lt;/em&gt; empty, this replacement value will be used instead of the actual field content. This is done after alternate fields are considered; thus the replacement is used if &lt;em&gt;any&lt;/em&gt; of the alternative fields is &lt;em&gt;not&lt;/em&gt; empty. E.g. &lt;code&gt;%(chapters&amp;amp;has chapters|no chapters)s&lt;/code&gt;, &lt;code&gt;%(title&amp;amp;TITLE={:&amp;gt;20}|NO TITLE)s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Default&lt;/strong&gt;: A literal default value can be specified for when the field is empty using a &lt;code&gt;|&lt;/code&gt; separator. This overrides &lt;code&gt;--output-na-placeholder&lt;/code&gt;. E.g. &lt;code&gt;%(uploader|Unknown)s&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;More Conversions&lt;/strong&gt;: In addition to the normal format types &lt;code&gt;diouxXeEfFgGcrs&lt;/code&gt;, yt-dlp additionally supports converting to &lt;code&gt;B&lt;/code&gt; = &lt;strong&gt;B&lt;/strong&gt;ytes, &lt;code&gt;j&lt;/code&gt; = &lt;strong&gt;j&lt;/strong&gt;son (flag &lt;code&gt;#&lt;/code&gt; for pretty-printing, &lt;code&gt;+&lt;/code&gt; for Unicode), &lt;code&gt;h&lt;/code&gt; = HTML escaping, &lt;code&gt;l&lt;/code&gt; = a comma separated &lt;strong&gt;l&lt;/strong&gt;ist (flag &lt;code&gt;#&lt;/code&gt; for &lt;code&gt;\n&lt;/code&gt; newline-separated), &lt;code&gt;q&lt;/code&gt; = a string &lt;strong&gt;q&lt;/strong&gt;uoted for the terminal (flag &lt;code&gt;#&lt;/code&gt; to split a list into different arguments), &lt;code&gt;D&lt;/code&gt; = add &lt;strong&gt;D&lt;/strong&gt;ecimal suffixes (e.g. 10M) (flag &lt;code&gt;#&lt;/code&gt; to use 1024 as factor), and &lt;code&gt;S&lt;/code&gt; = &lt;strong&gt;S&lt;/strong&gt;anitize as filename (flag &lt;code&gt;#&lt;/code&gt; for restricted)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Unicode normalization&lt;/strong&gt;: The format type &lt;code&gt;U&lt;/code&gt; can be used for NFC &lt;a href="https://docs.python.org/3/library/unicodedata.html#unicodedata.normalize"&gt;Unicode normalization&lt;/a&gt;. The alternate form flag (&lt;code&gt;#&lt;/code&gt;) changes the normalization to NFD and the conversion flag &lt;code&gt;+&lt;/code&gt; can be used for NFKC/NFKD compatibility equivalence normalization. E.g. &lt;code&gt;%(title)+.100U&lt;/code&gt; is NFKC&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To summarize, the general syntax for a field is:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;%(name[.keys][addition][&amp;gt;strf][,alternate][&amp;amp;replacement][|default])[flags][width][.precision][length]type
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Additionally, you can set different output templates for the various metadata files separately from the general output template by specifying the type of file followed by the template separated by a colon &lt;code&gt;:&lt;/code&gt;. The different file types supported are &lt;code&gt;subtitle&lt;/code&gt;, &lt;code&gt;thumbnail&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt;, &lt;code&gt;annotation&lt;/code&gt; (deprecated), &lt;code&gt;infojson&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;pl_thumbnail&lt;/code&gt;, &lt;code&gt;pl_description&lt;/code&gt;, &lt;code&gt;pl_infojson&lt;/code&gt;, &lt;code&gt;chapter&lt;/code&gt;, &lt;code&gt;pl_video&lt;/code&gt;. E.g. &lt;code&gt;-o "%(title)s.%(ext)s" -o "thumbnail:%(title)s\%(title)s.%(ext)s"&lt;/code&gt; will put the thumbnails in a folder with the same name as the video. If any of the templates is empty, that type of file will not be written. E.g. &lt;code&gt;--write-thumbnail -o "thumbnail:"&lt;/code&gt; will write thumbnails only for playlists and not for video.&lt;/p&gt; 
&lt;p&gt;&lt;a id="outtmpl-postprocess-note"&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Due to post-processing (i.e. merging etc.), the actual output filename might differ. Use &lt;code&gt;--print after_move:filepath&lt;/code&gt; to get the name after all post-processing is complete.&lt;/p&gt; 
&lt;p&gt;The available fields are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;id&lt;/code&gt; (string): Video identifier&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;title&lt;/code&gt; (string): Video title&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fulltitle&lt;/code&gt; (string): Video title ignoring live timestamp and generic title&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ext&lt;/code&gt; (string): Video filename extension&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;alt_title&lt;/code&gt; (string): A secondary title of the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;description&lt;/code&gt; (string): The description of the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;display_id&lt;/code&gt; (string): An alternative identifier for the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;uploader&lt;/code&gt; (string): Full name of the video uploader&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;uploader_id&lt;/code&gt; (string): Nickname or id of the video uploader&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;uploader_url&lt;/code&gt; (string): URL to the video uploader's profile&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;license&lt;/code&gt; (string): License name the video is licensed under&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;creators&lt;/code&gt; (list): The creators of the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;creator&lt;/code&gt; (string): The creators of the video; comma-separated&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;timestamp&lt;/code&gt; (numeric): UNIX timestamp of the moment the video became available&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;upload_date&lt;/code&gt; (string): Video upload date in UTC (YYYYMMDD)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release_timestamp&lt;/code&gt; (numeric): UNIX timestamp of the moment the video was released&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release_date&lt;/code&gt; (string): The date (YYYYMMDD) when the video was released in UTC&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;release_year&lt;/code&gt; (numeric): Year (YYYY) when the video or album was released&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;modified_timestamp&lt;/code&gt; (numeric): UNIX timestamp of the moment the video was last modified&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;modified_date&lt;/code&gt; (string): The date (YYYYMMDD) when the video was last modified in UTC&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;channel&lt;/code&gt; (string): Full name of the channel the video is uploaded on&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;channel_id&lt;/code&gt; (string): Id of the channel&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;channel_url&lt;/code&gt; (string): URL of the channel&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;channel_follower_count&lt;/code&gt; (numeric): Number of followers of the channel&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;channel_is_verified&lt;/code&gt; (boolean): Whether the channel is verified on the platform&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;location&lt;/code&gt; (string): Physical location where the video was filmed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;duration&lt;/code&gt; (numeric): Length of the video in seconds&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;duration_string&lt;/code&gt; (string): Length of the video (HH:mm:ss)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;view_count&lt;/code&gt; (numeric): How many users have watched the video on the platform&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;concurrent_view_count&lt;/code&gt; (numeric): How many users are currently watching the video on the platform.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;like_count&lt;/code&gt; (numeric): Number of positive ratings of the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dislike_count&lt;/code&gt; (numeric): Number of negative ratings of the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;repost_count&lt;/code&gt; (numeric): Number of reposts of the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;average_rating&lt;/code&gt; (numeric): Average rating given by users, the scale used depends on the webpage&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;comment_count&lt;/code&gt; (numeric): Number of comments on the video (For some extractors, comments are only downloaded at the end, and so this field cannot be used)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;age_limit&lt;/code&gt; (numeric): Age restriction for the video (years)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;live_status&lt;/code&gt; (string): One of "not_live", "is_live", "is_upcoming", "was_live", "post_live" (was live, but VOD is not yet processed)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;is_live&lt;/code&gt; (boolean): Whether this video is a live stream or a fixed-length video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;was_live&lt;/code&gt; (boolean): Whether this video was originally a live stream&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playable_in_embed&lt;/code&gt; (string): Whether this video is allowed to play in embedded players on other sites&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;availability&lt;/code&gt; (string): Whether the video is "private", "premium_only", "subscriber_only", "needs_auth", "unlisted" or "public"&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;media_type&lt;/code&gt; (string): The type of media as classified by the site, e.g. "episode", "clip", "trailer"&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;start_time&lt;/code&gt; (numeric): Time in seconds where the reproduction should start, as specified in the URL&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;end_time&lt;/code&gt; (numeric): Time in seconds where the reproduction should end, as specified in the URL&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;extractor&lt;/code&gt; (string): Name of the extractor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;extractor_key&lt;/code&gt; (string): Key name of the extractor&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;epoch&lt;/code&gt; (numeric): Unix epoch of when the information extraction was completed&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;autonumber&lt;/code&gt; (numeric): Number that will be increased with each download, starting at &lt;code&gt;--autonumber-start&lt;/code&gt;, padded with leading zeros to 5 digits&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;video_autonumber&lt;/code&gt; (numeric): Number that will be increased with each video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;n_entries&lt;/code&gt; (numeric): Total number of extracted items in the playlist&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_id&lt;/code&gt; (string): Identifier of the playlist that contains the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_title&lt;/code&gt; (string): Name of the playlist that contains the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist&lt;/code&gt; (string): &lt;code&gt;playlist_title&lt;/code&gt; if available or else &lt;code&gt;playlist_id&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_count&lt;/code&gt; (numeric): Total number of items in the playlist. May not be known if entire playlist is not extracted&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_index&lt;/code&gt; (numeric): Index of the video in the playlist padded with leading zeros according the final index&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_autonumber&lt;/code&gt; (numeric): Position of the video in the playlist download queue padded with leading zeros according to the total length of the playlist&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_uploader&lt;/code&gt; (string): Full name of the playlist uploader&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_uploader_id&lt;/code&gt; (string): Nickname or id of the playlist uploader&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_channel&lt;/code&gt; (string): Display name of the channel that uploaded the playlist&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_channel_id&lt;/code&gt; (string): Identifier of the channel that uploaded the playlist&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_webpage_url&lt;/code&gt; (string): URL of the playlist webpage&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webpage_url&lt;/code&gt; (string): A URL to the video webpage which, if given to yt-dlp, should yield the same result again&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webpage_url_basename&lt;/code&gt; (string): The basename of the webpage URL&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webpage_url_domain&lt;/code&gt; (string): The domain of the webpage URL&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;original_url&lt;/code&gt; (string): The URL given by the user (or the same as &lt;code&gt;webpage_url&lt;/code&gt; for playlist entries)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;categories&lt;/code&gt; (list): List of categories the video belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tags&lt;/code&gt; (list): List of tags assigned to the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cast&lt;/code&gt; (list): List of cast members&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All the fields in &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#filtering-formats"&gt;Filtering Formats&lt;/a&gt; can also be used&lt;/p&gt; 
&lt;p&gt;Available for the video that belongs to some logical chapter or section:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;chapter&lt;/code&gt; (string): Name or title of the chapter the video belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;chapter_number&lt;/code&gt; (numeric): Number of the chapter the video belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;chapter_id&lt;/code&gt; (string): Id of the chapter the video belongs to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Available for the video that is an episode of some series or program:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;series&lt;/code&gt; (string): Title of the series or program the video episode belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;series_id&lt;/code&gt; (string): Id of the series or program the video episode belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;season&lt;/code&gt; (string): Title of the season the video episode belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;season_number&lt;/code&gt; (numeric): Number of the season the video episode belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;season_id&lt;/code&gt; (string): Id of the season the video episode belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;episode&lt;/code&gt; (string): Title of the video episode&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;episode_number&lt;/code&gt; (numeric): Number of the video episode within a season&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;episode_id&lt;/code&gt; (string): Id of the video episode&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Available for the media that is a track or a part of a music album:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;track&lt;/code&gt; (string): Title of the track&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;track_number&lt;/code&gt; (numeric): Number of the track within an album or a disc&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;track_id&lt;/code&gt; (string): Id of the track&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;artists&lt;/code&gt; (list): Artist(s) of the track&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;artist&lt;/code&gt; (string): Artist(s) of the track; comma-separated&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;genres&lt;/code&gt; (list): Genre(s) of the track&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;genre&lt;/code&gt; (string): Genre(s) of the track; comma-separated&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;composers&lt;/code&gt; (list): Composer(s) of the piece&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;composer&lt;/code&gt; (string): Composer(s) of the piece; comma-separated&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;album&lt;/code&gt; (string): Title of the album the track belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;album_type&lt;/code&gt; (string): Type of the album&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;album_artists&lt;/code&gt; (list): All artists appeared on the album&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;album_artist&lt;/code&gt; (string): All artists appeared on the album; comma-separated&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;disc_number&lt;/code&gt; (numeric): Number of the disc or other physical medium the track belongs to&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Available only when using &lt;code&gt;--download-sections&lt;/code&gt; and for &lt;code&gt;chapter:&lt;/code&gt; prefix when using &lt;code&gt;--split-chapters&lt;/code&gt; for videos with internal chapters:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;section_title&lt;/code&gt; (string): Title of the chapter&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;section_number&lt;/code&gt; (numeric): Number of the chapter within the file&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;section_start&lt;/code&gt; (numeric): Start time of the chapter in seconds&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;section_end&lt;/code&gt; (numeric): End time of the chapter in seconds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Available only when used in &lt;code&gt;--print&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;urls&lt;/code&gt; (string): The URLs of all requested formats, one in each line&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;filename&lt;/code&gt; (string): Name of the video file. Note that the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#outtmpl-postprocess-note"&gt;actual filename may differ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;formats_table&lt;/code&gt; (table): The video format table as printed by &lt;code&gt;--list-formats&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;thumbnails_table&lt;/code&gt; (table): The thumbnail format table as printed by &lt;code&gt;--list-thumbnails&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;subtitles_table&lt;/code&gt; (table): The subtitle format table as printed by &lt;code&gt;--list-subs&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;automatic_captions_table&lt;/code&gt; (table): The automatic subtitle format table as printed by &lt;code&gt;--list-subs&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Available only after the video is downloaded (&lt;code&gt;post_process&lt;/code&gt;/&lt;code&gt;after_move&lt;/code&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;filepath&lt;/code&gt;: Actual path of downloaded video file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Available only in &lt;code&gt;--sponsorblock-chapter-title&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;start_time&lt;/code&gt; (numeric): Start time of the chapter in seconds&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;end_time&lt;/code&gt; (numeric): End time of the chapter in seconds&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;categories&lt;/code&gt; (list): The &lt;a href="https://wiki.sponsor.ajay.app/w/Types#Category"&gt;SponsorBlock categories&lt;/a&gt; the chapter belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;category&lt;/code&gt; (string): The smallest SponsorBlock category the chapter belongs to&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;category_names&lt;/code&gt; (list): Friendly names of the categories&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;name&lt;/code&gt; (string): Friendly name of the smallest category&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt; (string): The &lt;a href="https://wiki.sponsor.ajay.app/w/Types#Action_Type"&gt;SponsorBlock action type&lt;/a&gt; of the chapter&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Each aforementioned sequence when referenced in an output template will be replaced by the actual value corresponding to the sequence name. E.g. for &lt;code&gt;-o %(title)s-%(id)s.%(ext)s&lt;/code&gt; and an mp4 video with title &lt;code&gt;yt-dlp test video&lt;/code&gt; and id &lt;code&gt;BaW_jenozKc&lt;/code&gt;, this will result in a &lt;code&gt;yt-dlp test video-BaW_jenozKc.mp4&lt;/code&gt; file created in the current directory.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Some of the sequences are not guaranteed to be present, since they depend on the metadata obtained by a particular extractor. Such sequences will be replaced with placeholder value provided with &lt;code&gt;--output-na-placeholder&lt;/code&gt; (&lt;code&gt;NA&lt;/code&gt; by default).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: Look at the &lt;code&gt;-j&lt;/code&gt; output to identify which fields are available for the particular URL&lt;/p&gt; 
&lt;p&gt;For numeric sequences, you can use &lt;a href="https://docs.python.org/3/library/stdtypes.html#printf-style-string-formatting"&gt;numeric related formatting&lt;/a&gt;; e.g. &lt;code&gt;%(view_count)05d&lt;/code&gt; will result in a string with view count padded with zeros up to 5 characters, like in &lt;code&gt;00042&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Output templates can also contain arbitrary hierarchical path, e.g. &lt;code&gt;-o "%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s"&lt;/code&gt; which will result in downloading each video in a directory corresponding to this path template. Any missing directory will be automatically created for you.&lt;/p&gt; 
&lt;p&gt;To use percent literals in an output template use &lt;code&gt;%%&lt;/code&gt;. To output to stdout use &lt;code&gt;-o -&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The current default template is &lt;code&gt;%(title)s [%(id)s].%(ext)s&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In some cases, you don't want special characters such as 中, spaces, or &amp;amp;, such as when transferring the downloaded filename to a Windows system or the filename through an 8bit-unsafe channel. In these cases, add the &lt;code&gt;--restrict-filenames&lt;/code&gt; flag to get a shorter title.&lt;/p&gt; 
&lt;h4&gt;Output template examples&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ yt-dlp --print filename -o "test video.%(ext)s" BaW_jenozKc
test video.webm    # Literal name with correct extension

$ yt-dlp --print filename -o "%(title)s.%(ext)s" BaW_jenozKc
youtube-dl test video ''_ä↭𝕐.webm    # All kinds of weird characters

$ yt-dlp --print filename -o "%(title)s.%(ext)s" BaW_jenozKc --restrict-filenames
youtube-dl_test_video_.webm    # Restricted file name

# Download YouTube playlist videos in separate directory indexed by video order in a playlist
$ yt-dlp -o "%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" "https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re"

# Download YouTube playlist videos in separate directories according to their uploaded year
$ yt-dlp -o "%(upload_date&amp;gt;%Y)s/%(title)s.%(ext)s" "https://www.youtube.com/playlist?list=PLwiyx1dc3P2JR9N8gQaQN_BCvlSlap7re"

# Prefix playlist index with " - " separator, but only if it is available
$ yt-dlp -o "%(playlist_index&amp;amp;{} - |)s%(title)s.%(ext)s" BaW_jenozKc "https://www.youtube.com/user/TheLinuxFoundation/playlists"

# Download all playlists of YouTube channel/user keeping each playlist in separate directory:
$ yt-dlp -o "%(uploader)s/%(playlist)s/%(playlist_index)s - %(title)s.%(ext)s" "https://www.youtube.com/user/TheLinuxFoundation/playlists"

# Download Udemy course keeping each chapter in separate directory under MyVideos directory in your home
$ yt-dlp -u user -p password -P "~/MyVideos" -o "%(playlist)s/%(chapter_number)s - %(chapter)s/%(title)s.%(ext)s" "https://www.udemy.com/java-tutorial"

# Download entire series season keeping each series and each season in separate directory under C:/MyVideos
$ yt-dlp -P "C:/MyVideos" -o "%(series)s/%(season_number)s - %(season)s/%(episode_number)s - %(episode)s.%(ext)s" "https://videomore.ru/kino_v_detalayah/5_sezon/367617"

# Download video as "C:\MyVideos\uploader\title.ext", subtitles as "C:\MyVideos\subs\uploader\title.ext"
# and put all temporary files in "C:\MyVideos\tmp"
$ yt-dlp -P "C:/MyVideos" -P "temp:tmp" -P "subtitle:subs" -o "%(uploader)s/%(title)s.%(ext)s" BaW_jenozKc --write-subs

# Download video as "C:\MyVideos\uploader\title.ext" and subtitles as "C:\MyVideos\uploader\subs\title.ext"
$ yt-dlp -P "C:/MyVideos" -o "%(uploader)s/%(title)s.%(ext)s" -o "subtitle:%(uploader)s/subs/%(title)s.%(ext)s" BaW_jenozKc --write-subs

# Stream the video being downloaded to stdout
$ yt-dlp -o - BaW_jenozKc
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;FORMAT SELECTION&lt;/h1&gt; 
&lt;p&gt;By default, yt-dlp tries to download the best available quality if you &lt;strong&gt;don't&lt;/strong&gt; pass any options. This is generally equivalent to using &lt;code&gt;-f bestvideo*+bestaudio/best&lt;/code&gt;. However, if multiple audiostreams is enabled (&lt;code&gt;--audio-multistreams&lt;/code&gt;), the default format changes to &lt;code&gt;-f bestvideo+bestaudio/best&lt;/code&gt;. Similarly, if ffmpeg is unavailable, or if you use yt-dlp to stream to &lt;code&gt;stdout&lt;/code&gt; (&lt;code&gt;-o -&lt;/code&gt;), the default becomes &lt;code&gt;-f best/bestvideo+bestaudio&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Deprecation warning&lt;/strong&gt;: Latest versions of yt-dlp can stream multiple formats to the stdout simultaneously using ffmpeg. So, in future versions, the default for this will be set to &lt;code&gt;-f bv*+ba/b&lt;/code&gt; similar to normal downloads. If you want to preserve the &lt;code&gt;-f b/bv+ba&lt;/code&gt; setting, it is recommended to explicitly specify it in the configuration options.&lt;/p&gt; 
&lt;p&gt;The general syntax for format selection is &lt;code&gt;-f FORMAT&lt;/code&gt; (or &lt;code&gt;--format FORMAT&lt;/code&gt;) where &lt;code&gt;FORMAT&lt;/code&gt; is a &lt;em&gt;selector expression&lt;/em&gt;, i.e. an expression that describes format or formats you would like to download.&lt;/p&gt; 
&lt;!-- MANPAGE: BEGIN EXCLUDED SECTION --&gt; 
&lt;p&gt;&lt;strong&gt;tl;dr:&lt;/strong&gt; &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection-examples"&gt;navigate me to examples&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- MANPAGE: END EXCLUDED SECTION --&gt; 
&lt;p&gt;The simplest case is requesting a specific format; e.g. with &lt;code&gt;-f 22&lt;/code&gt; you can download the format with format code equal to 22. You can get the list of available format codes for particular video using &lt;code&gt;--list-formats&lt;/code&gt; or &lt;code&gt;-F&lt;/code&gt;. Note that these format codes are extractor specific.&lt;/p&gt; 
&lt;p&gt;You can also use a file extension (currently &lt;code&gt;3gp&lt;/code&gt;, &lt;code&gt;aac&lt;/code&gt;, &lt;code&gt;flv&lt;/code&gt;, &lt;code&gt;m4a&lt;/code&gt;, &lt;code&gt;mp3&lt;/code&gt;, &lt;code&gt;mp4&lt;/code&gt;, &lt;code&gt;ogg&lt;/code&gt;, &lt;code&gt;wav&lt;/code&gt;, &lt;code&gt;webm&lt;/code&gt; are supported) to download the best quality format of a particular file extension served as a single file, e.g. &lt;code&gt;-f webm&lt;/code&gt; will download the best quality format with the &lt;code&gt;webm&lt;/code&gt; extension served as a single file.&lt;/p&gt; 
&lt;p&gt;You can use &lt;code&gt;-f -&lt;/code&gt; to interactively provide the format selector &lt;em&gt;for each video&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;You can also use special names to select particular edge case formats:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;all&lt;/code&gt;: Select &lt;strong&gt;all formats&lt;/strong&gt; separately&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;mergeall&lt;/code&gt;: Select and &lt;strong&gt;merge all formats&lt;/strong&gt; (Must be used with &lt;code&gt;--audio-multistreams&lt;/code&gt;, &lt;code&gt;--video-multistreams&lt;/code&gt; or both)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;b*&lt;/code&gt;, &lt;code&gt;best*&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains either&lt;/strong&gt; a video or an audio or both (i.e.; &lt;code&gt;vcodec!=none or acodec!=none&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;best&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains both&lt;/strong&gt; video and audio. Equivalent to &lt;code&gt;best*[vcodec!=none][acodec!=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bv&lt;/code&gt;, &lt;code&gt;bestvideo&lt;/code&gt;: Select the best quality &lt;strong&gt;video-only&lt;/strong&gt; format. Equivalent to &lt;code&gt;best*[acodec=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;bv*&lt;/code&gt;, &lt;code&gt;bestvideo*&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains video&lt;/strong&gt;. It may also contain audio. Equivalent to &lt;code&gt;best*[vcodec!=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ba&lt;/code&gt;, &lt;code&gt;bestaudio&lt;/code&gt;: Select the best quality &lt;strong&gt;audio-only&lt;/strong&gt; format. Equivalent to &lt;code&gt;best*[vcodec=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ba*&lt;/code&gt;, &lt;code&gt;bestaudio*&lt;/code&gt;: Select the best quality format that &lt;strong&gt;contains audio&lt;/strong&gt;. It may also contain video. Equivalent to &lt;code&gt;best*[acodec!=none]&lt;/code&gt; (&lt;a href="https://github.com/yt-dlp/yt-dlp/issues/979#issuecomment-919629354"&gt;Do not use!&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;w*&lt;/code&gt;, &lt;code&gt;worst*&lt;/code&gt;: Select the worst quality format that contains either a video or an audio&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;w&lt;/code&gt;, &lt;code&gt;worst&lt;/code&gt;: Select the worst quality format that contains both video and audio. Equivalent to &lt;code&gt;worst*[vcodec!=none][acodec!=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;wv&lt;/code&gt;, &lt;code&gt;worstvideo&lt;/code&gt;: Select the worst quality video-only format. Equivalent to &lt;code&gt;worst*[acodec=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;wv*&lt;/code&gt;, &lt;code&gt;worstvideo*&lt;/code&gt;: Select the worst quality format that contains video. It may also contain audio. Equivalent to &lt;code&gt;worst*[vcodec!=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;wa&lt;/code&gt;, &lt;code&gt;worstaudio&lt;/code&gt;: Select the worst quality audio-only format. Equivalent to &lt;code&gt;worst*[vcodec=none]&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;wa*&lt;/code&gt;, &lt;code&gt;worstaudio*&lt;/code&gt;: Select the worst quality format that contains audio. It may also contain video. Equivalent to &lt;code&gt;worst*[acodec!=none]&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For example, to download the worst quality video-only format you can use &lt;code&gt;-f worstvideo&lt;/code&gt;. It is, however, recommended not to use &lt;code&gt;worst&lt;/code&gt; and related options. When your format selector is &lt;code&gt;worst&lt;/code&gt;, the format which is worst in all respects is selected. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use &lt;code&gt;-S +size&lt;/code&gt; or more rigorously, &lt;code&gt;-S +size,+br,+res,+fps&lt;/code&gt; instead of &lt;code&gt;-f worst&lt;/code&gt;. See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats"&gt;Sorting Formats&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;p&gt;You can select the n'th best format of a type by using &lt;code&gt;best&amp;lt;type&amp;gt;.&amp;lt;n&amp;gt;&lt;/code&gt;. For example, &lt;code&gt;best.2&lt;/code&gt; will select the 2nd best combined format. Similarly, &lt;code&gt;bv*.3&lt;/code&gt; will select the 3rd best format that contains a video stream.&lt;/p&gt; 
&lt;p&gt;If you want to download multiple videos, and they don't have the same formats available, you can specify the order of preference using slashes. Note that formats on the left hand side are preferred; e.g. &lt;code&gt;-f 22/17/18&lt;/code&gt; will download format 22 if it's available, otherwise it will download format 17 if it's available, otherwise it will download format 18 if it's available, otherwise it will complain that no suitable formats are available for download.&lt;/p&gt; 
&lt;p&gt;If you want to download several formats of the same video use a comma as a separator, e.g. &lt;code&gt;-f 22,17,18&lt;/code&gt; will download all these three formats, of course if they are available. Or a more sophisticated example combined with the precedence feature: &lt;code&gt;-f 136/137/mp4/bestvideo,140/m4a/bestaudio&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can merge the video and audio of multiple formats into a single file using &lt;code&gt;-f &amp;lt;format1&amp;gt;+&amp;lt;format2&amp;gt;+...&lt;/code&gt; (requires ffmpeg installed); e.g. &lt;code&gt;-f bestvideo+bestaudio&lt;/code&gt; will download the best video-only format, the best audio-only format and mux them together with ffmpeg.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Deprecation warning&lt;/strong&gt;: Since the &lt;em&gt;below&lt;/em&gt; described behavior is complex and counter-intuitive, this will be removed and multistreams will be enabled by default in the future. A new operator will be instead added to limit formats to single audio/video&lt;/p&gt; 
&lt;p&gt;Unless &lt;code&gt;--video-multistreams&lt;/code&gt; is used, all formats with a video stream except the first one are ignored. Similarly, unless &lt;code&gt;--audio-multistreams&lt;/code&gt; is used, all formats with an audio stream except the first one are ignored. E.g. &lt;code&gt;-f bestvideo+best+bestaudio --video-multistreams --audio-multistreams&lt;/code&gt; will download and merge all 3 given formats. The resulting file will have 2 video streams and 2 audio streams. But &lt;code&gt;-f bestvideo+best+bestaudio --no-video-multistreams&lt;/code&gt; will download and merge only &lt;code&gt;bestvideo&lt;/code&gt; and &lt;code&gt;bestaudio&lt;/code&gt;. &lt;code&gt;best&lt;/code&gt; is ignored since another format containing a video stream (&lt;code&gt;bestvideo&lt;/code&gt;) has already been selected. The order of the formats is therefore important. &lt;code&gt;-f best+bestaudio --no-audio-multistreams&lt;/code&gt; will download only &lt;code&gt;best&lt;/code&gt; while &lt;code&gt;-f bestaudio+best --no-audio-multistreams&lt;/code&gt; will ignore &lt;code&gt;best&lt;/code&gt; and download only &lt;code&gt;bestaudio&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Filtering Formats&lt;/h2&gt; 
&lt;p&gt;You can also filter the video formats by putting a condition in brackets, as in &lt;code&gt;-f "best[height=720]"&lt;/code&gt; (or &lt;code&gt;-f "[filesize&amp;gt;10M]"&lt;/code&gt; since filters without a selector are interpreted as &lt;code&gt;best&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;The following numeric meta fields can be used with comparisons &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt; (equals), &lt;code&gt;!=&lt;/code&gt; (not equals):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt;: The number of bytes, if known in advance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;filesize_approx&lt;/code&gt;: An estimate for the number of bytes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: Width of the video, if known&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: Height of the video, if known&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aspect_ratio&lt;/code&gt;: Aspect ratio of the video, if known&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tbr&lt;/code&gt;: Average bitrate of audio and video in &lt;a href="##" title="1000 bits/sec"&gt;kbps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;abr&lt;/code&gt;: Average audio bitrate in &lt;a href="##" title="1000 bits/sec"&gt;kbps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vbr&lt;/code&gt;: Average video bitrate in &lt;a href="##" title="1000 bits/sec"&gt;kbps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;asr&lt;/code&gt;: Audio sampling rate in Hertz&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fps&lt;/code&gt;: Frame rate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;audio_channels&lt;/code&gt;: The number of audio channels&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;stretched_ratio&lt;/code&gt;: &lt;code&gt;width:height&lt;/code&gt; of the video's pixels, if not square&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also filtering work for comparisons &lt;code&gt;=&lt;/code&gt; (equals), &lt;code&gt;^=&lt;/code&gt; (starts with), &lt;code&gt;$=&lt;/code&gt; (ends with), &lt;code&gt;*=&lt;/code&gt; (contains), &lt;code&gt;~=&lt;/code&gt; (matches regex) and following string meta fields:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;url&lt;/code&gt;: Video URL&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ext&lt;/code&gt;: File extension&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;acodec&lt;/code&gt;: Name of the audio codec in use&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt;: Name of the video codec in use&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;container&lt;/code&gt;: Name of the container format&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;protocol&lt;/code&gt;: The protocol that will be used for the actual download, lower-case (&lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt;, &lt;code&gt;rtsp&lt;/code&gt;, &lt;code&gt;rtmp&lt;/code&gt;, &lt;code&gt;rtmpe&lt;/code&gt;, &lt;code&gt;mms&lt;/code&gt;, &lt;code&gt;f4m&lt;/code&gt;, &lt;code&gt;ism&lt;/code&gt;, &lt;code&gt;http_dash_segments&lt;/code&gt;, &lt;code&gt;m3u8&lt;/code&gt;, or &lt;code&gt;m3u8_native&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;language&lt;/code&gt;: Language code&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dynamic_range&lt;/code&gt;: The dynamic range of the video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;format_id&lt;/code&gt;: A short description of the format&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;format&lt;/code&gt;: A human-readable description of the format&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;format_note&lt;/code&gt;: Additional info about the format&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;resolution&lt;/code&gt;: Textual description of width and height&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Any string comparison may be prefixed with negation &lt;code&gt;!&lt;/code&gt; in order to produce an opposite comparison, e.g. &lt;code&gt;!*=&lt;/code&gt; (does not contain). The comparand of a string comparison needs to be quoted with either double or single quotes if it contains spaces or special characters other than &lt;code&gt;._-&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: None of the aforementioned meta fields are guaranteed to be present since this solely depends on the metadata obtained by the particular extractor, i.e. the metadata offered by the website. Any other field made available by the extractor can also be used for filtering.&lt;/p&gt; 
&lt;p&gt;Formats for which the value is not known are excluded unless you put a question mark (&lt;code&gt;?&lt;/code&gt;) after the operator. You can combine format filters, so &lt;code&gt;-f "bv[height&amp;lt;=?720][tbr&amp;gt;500]"&lt;/code&gt; selects up to 720p videos (or videos where the height is not known) with a bitrate of at least 500 kbps. You can also use the filters with &lt;code&gt;all&lt;/code&gt; to download all formats that satisfy the filter, e.g. &lt;code&gt;-f "all[vcodec=none]"&lt;/code&gt; selects all audio-only formats.&lt;/p&gt; 
&lt;p&gt;Format selectors can also be grouped using parentheses; e.g. &lt;code&gt;-f "(mp4,webm)[height&amp;lt;480]"&lt;/code&gt; will download the best pre-merged mp4 and webm formats with a height lower than 480.&lt;/p&gt; 
&lt;h2&gt;Sorting Formats&lt;/h2&gt; 
&lt;p&gt;You can change the criteria for being considered the &lt;code&gt;best&lt;/code&gt; by using &lt;code&gt;-S&lt;/code&gt; (&lt;code&gt;--format-sort&lt;/code&gt;). The general format for this is &lt;code&gt;--format-sort field1,field2...&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The available fields are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;hasvid&lt;/code&gt;: Gives priority to formats that have a video stream&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hasaud&lt;/code&gt;: Gives priority to formats that have an audio stream&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ie_pref&lt;/code&gt;: The format preference&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lang&lt;/code&gt;: The language preference as determined by the extractor (e.g. original language preferred over audio description)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;quality&lt;/code&gt;: The quality of the format&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;source&lt;/code&gt;: The preference of the source&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;proto&lt;/code&gt;: Protocol used for download (&lt;code&gt;https&lt;/code&gt;/&lt;code&gt;ftps&lt;/code&gt; &amp;gt; &lt;code&gt;http&lt;/code&gt;/&lt;code&gt;ftp&lt;/code&gt; &amp;gt; &lt;code&gt;m3u8_native&lt;/code&gt;/&lt;code&gt;m3u8&lt;/code&gt; &amp;gt; &lt;code&gt;http_dash_segments&lt;/code&gt;&amp;gt; &lt;code&gt;websocket_frag&lt;/code&gt; &amp;gt; &lt;code&gt;mms&lt;/code&gt;/&lt;code&gt;rtsp&lt;/code&gt; &amp;gt; &lt;code&gt;f4f&lt;/code&gt;/&lt;code&gt;f4m&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt;: Video Codec (&lt;code&gt;av01&lt;/code&gt; &amp;gt; &lt;code&gt;vp9.2&lt;/code&gt; &amp;gt; &lt;code&gt;vp9&lt;/code&gt; &amp;gt; &lt;code&gt;h265&lt;/code&gt; &amp;gt; &lt;code&gt;h264&lt;/code&gt; &amp;gt; &lt;code&gt;vp8&lt;/code&gt; &amp;gt; &lt;code&gt;h263&lt;/code&gt; &amp;gt; &lt;code&gt;theora&lt;/code&gt; &amp;gt; other)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;acodec&lt;/code&gt;: Audio Codec (&lt;code&gt;flac&lt;/code&gt;/&lt;code&gt;alac&lt;/code&gt; &amp;gt; &lt;code&gt;wav&lt;/code&gt;/&lt;code&gt;aiff&lt;/code&gt; &amp;gt; &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;vorbis&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt; &amp;gt; &lt;code&gt;mp4a&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;ac4&lt;/code&gt; &amp;gt; &lt;code&gt;eac3&lt;/code&gt; &amp;gt; &lt;code&gt;ac3&lt;/code&gt; &amp;gt; &lt;code&gt;dts&lt;/code&gt; &amp;gt; other)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;codec&lt;/code&gt;: Equivalent to &lt;code&gt;vcodec,acodec&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vext&lt;/code&gt;: Video Extension (&lt;code&gt;mp4&lt;/code&gt; &amp;gt; &lt;code&gt;mov&lt;/code&gt; &amp;gt; &lt;code&gt;webm&lt;/code&gt; &amp;gt; &lt;code&gt;flv&lt;/code&gt; &amp;gt; other). If &lt;code&gt;--prefer-free-formats&lt;/code&gt; is used, &lt;code&gt;webm&lt;/code&gt; is preferred.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aext&lt;/code&gt;: Audio Extension (&lt;code&gt;m4a&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;ogg&lt;/code&gt; &amp;gt; &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;webm&lt;/code&gt; &amp;gt; other). If &lt;code&gt;--prefer-free-formats&lt;/code&gt; is used, the order changes to &lt;code&gt;ogg&lt;/code&gt; &amp;gt; &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;webm&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;m4a&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;ext&lt;/code&gt;: Equivalent to &lt;code&gt;vext,aext&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;filesize&lt;/code&gt;: Exact filesize, if known in advance&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fs_approx&lt;/code&gt;: Approximate filesize&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;size&lt;/code&gt;: Exact filesize if available, otherwise approximate filesize&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;height&lt;/code&gt;: Height of video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;width&lt;/code&gt;: Width of video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;res&lt;/code&gt;: Video resolution, calculated as the smallest dimension.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fps&lt;/code&gt;: Framerate of video&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hdr&lt;/code&gt;: The dynamic range of the video (&lt;code&gt;DV&lt;/code&gt; &amp;gt; &lt;code&gt;HDR12&lt;/code&gt; &amp;gt; &lt;code&gt;HDR10+&lt;/code&gt; &amp;gt; &lt;code&gt;HDR10&lt;/code&gt; &amp;gt; &lt;code&gt;HLG&lt;/code&gt; &amp;gt; &lt;code&gt;SDR&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;channels&lt;/code&gt;: The number of audio channels&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tbr&lt;/code&gt;: Total average bitrate in &lt;a href="##" title="1000 bits/sec"&gt;kbps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vbr&lt;/code&gt;: Average video bitrate in &lt;a href="##" title="1000 bits/sec"&gt;kbps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;abr&lt;/code&gt;: Average audio bitrate in &lt;a href="##" title="1000 bits/sec"&gt;kbps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;br&lt;/code&gt;: Average bitrate in &lt;a href="##" title="1000 bits/sec"&gt;kbps&lt;/a&gt;, &lt;code&gt;tbr&lt;/code&gt;/&lt;code&gt;vbr&lt;/code&gt;/&lt;code&gt;abr&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;asr&lt;/code&gt;: Audio sample rate in Hz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Deprecation warning&lt;/strong&gt;: Many of these fields have (currently undocumented) aliases, that may be removed in a future version. It is recommended to use only the documented field names.&lt;/p&gt; 
&lt;p&gt;All fields, unless specified otherwise, are sorted in descending order. To reverse this, prefix the field with a &lt;code&gt;+&lt;/code&gt;. E.g. &lt;code&gt;+res&lt;/code&gt; prefers format with the smallest resolution. Additionally, you can suffix a preferred value for the fields, separated by a &lt;code&gt;:&lt;/code&gt;. E.g. &lt;code&gt;res:720&lt;/code&gt; prefers larger videos, but no larger than 720p and the smallest video if there are no videos less than 720p. For &lt;code&gt;codec&lt;/code&gt; and &lt;code&gt;ext&lt;/code&gt;, you can provide two preferred values, the first for video and the second for audio. E.g. &lt;code&gt;+codec:avc:m4a&lt;/code&gt; (equivalent to &lt;code&gt;+vcodec:avc,+acodec:m4a&lt;/code&gt;) sets the video codec preference to &lt;code&gt;h264&lt;/code&gt; &amp;gt; &lt;code&gt;h265&lt;/code&gt; &amp;gt; &lt;code&gt;vp9&lt;/code&gt; &amp;gt; &lt;code&gt;vp9.2&lt;/code&gt; &amp;gt; &lt;code&gt;av01&lt;/code&gt; &amp;gt; &lt;code&gt;vp8&lt;/code&gt; &amp;gt; &lt;code&gt;h263&lt;/code&gt; &amp;gt; &lt;code&gt;theora&lt;/code&gt; and audio codec preference to &lt;code&gt;mp4a&lt;/code&gt; &amp;gt; &lt;code&gt;aac&lt;/code&gt; &amp;gt; &lt;code&gt;vorbis&lt;/code&gt; &amp;gt; &lt;code&gt;opus&lt;/code&gt; &amp;gt; &lt;code&gt;mp3&lt;/code&gt; &amp;gt; &lt;code&gt;ac3&lt;/code&gt; &amp;gt; &lt;code&gt;dts&lt;/code&gt;. You can also make the sorting prefer the nearest values to the provided by using &lt;code&gt;~&lt;/code&gt; as the delimiter. E.g. &lt;code&gt;filesize~1G&lt;/code&gt; prefers the format with filesize closest to 1 GiB.&lt;/p&gt; 
&lt;p&gt;The fields &lt;code&gt;hasvid&lt;/code&gt; and &lt;code&gt;ie_pref&lt;/code&gt; are always given highest priority in sorting, irrespective of the user-defined order. This behavior can be changed by using &lt;code&gt;--format-sort-force&lt;/code&gt;. Apart from these, the default order used is: &lt;code&gt;lang,quality,res,fps,hdr:12,vcodec,channels,acodec,size,br,asr,proto,ext,hasaud,source,id&lt;/code&gt;. The extractors may override this default order, but they cannot override the user-provided order.&lt;/p&gt; 
&lt;p&gt;Note that the default for hdr is &lt;code&gt;hdr:12&lt;/code&gt;; i.e. Dolby Vision is not preferred. This choice was made since DV formats are not yet fully compatible with most devices. This may be changed in the future.&lt;/p&gt; 
&lt;p&gt;If your format selector is &lt;code&gt;worst&lt;/code&gt;, the last item is selected after sorting. This means it will select the format that is worst in all respects. Most of the time, what you actually want is the video with the smallest filesize instead. So it is generally better to use &lt;code&gt;-f best -S +size,+br,+res,+fps&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: You can use the &lt;code&gt;-v -F&lt;/code&gt; to see how the formats have been sorted (worst to best).&lt;/p&gt; 
&lt;h2&gt;Format Selection examples&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Download and merge the best video-only format and the best audio-only format,
# or download the best combined format if video-only format is not available
$ yt-dlp -f "bv+ba/b"

# Download best format that contains video,
# and if it doesn't already have an audio stream, merge it with best audio-only format
$ yt-dlp -f "bv*+ba/b"

# Same as above
$ yt-dlp

# Download the best video-only format and the best audio-only format without merging them
# For this case, an output template should be used since
# by default, bestvideo and bestaudio will have the same file name.
$ yt-dlp -f "bv,ba" -o "%(title)s.f%(format_id)s.%(ext)s"

# Download and merge the best format that has a video stream,
# and all audio-only formats into one file
$ yt-dlp -f "bv*+mergeall[vcodec=none]" --audio-multistreams

# Download and merge the best format that has a video stream,
# and the best 2 audio-only formats into one file
$ yt-dlp -f "bv*+ba+ba.2" --audio-multistreams


# The following examples show the old method (without -S) of format selection
# and how to use -S to achieve a similar but (generally) better result

# Download the worst video available (old method)
$ yt-dlp -f "wv*+wa/w"

# Download the best video available but with the smallest resolution
$ yt-dlp -S "+res"

# Download the smallest video available
$ yt-dlp -S "+size,+br"



# Download the best mp4 video available, or the best video if no mp4 available
$ yt-dlp -f "bv*[ext=mp4]+ba[ext=m4a]/b[ext=mp4] / bv*+ba/b"

# Download the best video with the best extension
# (For video, mp4 &amp;gt; mov &amp;gt; webm &amp;gt; flv. For audio, m4a &amp;gt; aac &amp;gt; mp3 ...)
$ yt-dlp -S "ext"



# Download the best video available but no better than 480p,
# or the worst video if there is no video under 480p
$ yt-dlp -f "bv*[height&amp;lt;=480]+ba/b[height&amp;lt;=480] / wv*+ba/w"

# Download the best video available with the largest height but no better than 480p,
# or the best video with the smallest resolution if there is no video under 480p
$ yt-dlp -S "height:480"

# Download the best video available with the largest resolution but no better than 480p,
# or the best video with the smallest resolution if there is no video under 480p
# Resolution is determined by using the smallest dimension.
# So this works correctly for vertical videos as well
$ yt-dlp -S "res:480"



# Download the best video (that also has audio) but no bigger than 50 MB,
# or the worst video (that also has audio) if there is no video under 50 MB
$ yt-dlp -f "b[filesize&amp;lt;50M] / w"

# Download the largest video (that also has audio) but no bigger than 50 MB,
# or the smallest video (that also has audio) if there is no video under 50 MB
$ yt-dlp -f "b" -S "filesize:50M"

# Download the best video (that also has audio) that is closest in size to 50 MB
$ yt-dlp -f "b" -S "filesize~50M"



# Download best video available via direct link over HTTP/HTTPS protocol,
# or the best video available via any protocol if there is no such video
$ yt-dlp -f "(bv*+ba/b)[protocol^=http][protocol!*=dash] / (bv*+ba/b)"

# Download best video available via the best protocol
# (https/ftps &amp;gt; http/ftp &amp;gt; m3u8_native &amp;gt; m3u8 &amp;gt; http_dash_segments ...)
$ yt-dlp -S "proto"



# Download the best video with either h264 or h265 codec,
# or the best video if there is no such video
$ yt-dlp -f "(bv*[vcodec~='^((he|a)vc|h26[45])']+ba) / (bv*+ba/b)"

# Download the best video with best codec no better than h264,
# or the best video with worst codec if there is no such video
$ yt-dlp -S "codec:h264"

# Download the best video with worst codec no worse than h264,
# or the best video with best codec if there is no such video
$ yt-dlp -S "+codec:h264"



# More complex examples

# Download the best video no better than 720p preferring framerate greater than 30,
# or the worst video (still preferring framerate greater than 30) if there is no such video
$ yt-dlp -f "((bv*[fps&amp;gt;30]/bv*)[height&amp;lt;=720]/(wv*[fps&amp;gt;30]/wv*)) + ba / (b[fps&amp;gt;30]/b)[height&amp;lt;=720]/(w[fps&amp;gt;30]/w)"

# Download the video with the largest resolution no better than 720p,
# or the video with the smallest resolution available if there is no such video,
# preferring larger framerate for formats with the same resolution
$ yt-dlp -S "res:720,fps"



# Download the video with smallest resolution no worse than 480p,
# or the video with the largest resolution available if there is no such video,
# preferring better codec and then larger total bitrate for the same resolution
$ yt-dlp -S "+res:480,codec,br"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;MODIFYING METADATA&lt;/h1&gt; 
&lt;p&gt;The metadata obtained by the extractors can be modified by using &lt;code&gt;--parse-metadata&lt;/code&gt; and &lt;code&gt;--replace-in-metadata&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;--replace-in-metadata FIELDS REGEX REPLACE&lt;/code&gt; is used to replace text in any metadata field using &lt;a href="https://docs.python.org/3/library/re.html#regular-expression-syntax"&gt;Python regular expression&lt;/a&gt;. &lt;a href="https://docs.python.org/3/library/re.html?highlight=backreferences#re.sub"&gt;Backreferences&lt;/a&gt; can be used in the replace string for advanced use.&lt;/p&gt; 
&lt;p&gt;The general syntax of &lt;code&gt;--parse-metadata FROM:TO&lt;/code&gt; is to give the name of a field or an &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template"&gt;output template&lt;/a&gt; to extract data from, and the format to interpret it as, separated by a colon &lt;code&gt;:&lt;/code&gt;. Either a &lt;a href="https://docs.python.org/3/library/re.html#regular-expression-syntax"&gt;Python regular expression&lt;/a&gt; with named capture groups, a single field name, or a similar syntax to the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template"&gt;output template&lt;/a&gt; (only &lt;code&gt;%(field)s&lt;/code&gt; formatting is supported) can be used for &lt;code&gt;TO&lt;/code&gt;. The option can be used multiple times to parse and modify various fields.&lt;/p&gt; 
&lt;p&gt;Note that these options preserve their relative order, allowing replacements to be made in parsed fields and vice versa. Also, any field thus created can be used in the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template"&gt;output template&lt;/a&gt; and will also affect the media file's metadata added when using &lt;code&gt;--embed-metadata&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;This option also has a few special uses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;You can download an additional URL based on the metadata of the currently downloaded video. To do this, set the field &lt;code&gt;additional_urls&lt;/code&gt; to the URL that you want to download. E.g. &lt;code&gt;--parse-metadata "description:(?P&amp;lt;additional_urls&amp;gt;https?://www\.vimeo\.com/\d+)"&lt;/code&gt; will download the first vimeo video found in the description&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;You can use this to change the metadata that is embedded in the media file. To do this, set the value of the corresponding field with a &lt;code&gt;meta_&lt;/code&gt; prefix. For example, any value you set to &lt;code&gt;meta_description&lt;/code&gt; field will be added to the &lt;code&gt;description&lt;/code&gt; field in the file - you can use this to set a different "description" and "synopsis". To modify the metadata of individual streams, use the &lt;code&gt;meta&amp;lt;n&amp;gt;_&lt;/code&gt; prefix (e.g. &lt;code&gt;meta1_language&lt;/code&gt;). Any value set to the &lt;code&gt;meta_&lt;/code&gt; field will overwrite all default values.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Metadata modification happens before format selection, post-extraction and other post-processing operations. Some fields may be added or changed during these steps, overriding your changes.&lt;/p&gt; 
&lt;p&gt;For reference, these are the fields yt-dlp adds by default to the file metadata:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="left"&gt;Metadata fields&lt;/th&gt; 
   &lt;th align="left"&gt;From&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;title&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;track&lt;/code&gt; or &lt;code&gt;title&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;upload_date&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;description&lt;/code&gt;, &lt;code&gt;synopsis&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;description&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;purl&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;webpage_url&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;track&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;track_number&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;artist&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;artist&lt;/code&gt;, &lt;code&gt;artists&lt;/code&gt;, &lt;code&gt;creator&lt;/code&gt;, &lt;code&gt;creators&lt;/code&gt;, &lt;code&gt;uploader&lt;/code&gt; or &lt;code&gt;uploader_id&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;composer&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;composer&lt;/code&gt; or &lt;code&gt;composers&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;genre&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;genre&lt;/code&gt; or &lt;code&gt;genres&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;album&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;album&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;album_artist&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;album_artist&lt;/code&gt; or &lt;code&gt;album_artists&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;disc&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;disc_number&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;show&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;series&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;season_number&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;season_number&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;episode_id&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;episode&lt;/code&gt; or &lt;code&gt;episode_id&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;episode_sort&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="left"&gt;&lt;code&gt;episode_number&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="left"&gt;&lt;code&gt;language&lt;/code&gt; of each stream&lt;/td&gt; 
   &lt;td align="left"&gt;the format's &lt;code&gt;language&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The file format may not support some of these fields&lt;/p&gt; 
&lt;h2&gt;Modifying metadata examples&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Interpret the title as "Artist - Title"
$ yt-dlp --parse-metadata "title:%(artist)s - %(title)s"

# Regex example
$ yt-dlp --parse-metadata "description:Artist - (?P&amp;lt;artist&amp;gt;.+)"

# Set title as "Series name S01E05"
$ yt-dlp --parse-metadata "%(series)s S%(season_number)02dE%(episode_number)02d:%(title)s"

# Prioritize uploader as the "artist" field in video metadata
$ yt-dlp --parse-metadata "%(uploader|)s:%(meta_artist)s" --embed-metadata

# Set "comment" field in video metadata using description instead of webpage_url,
# handling multiple lines correctly
$ yt-dlp --parse-metadata "description:(?s)(?P&amp;lt;meta_comment&amp;gt;.+)" --embed-metadata

# Do not set any "synopsis" in the video metadata
$ yt-dlp --parse-metadata ":(?P&amp;lt;meta_synopsis&amp;gt;)"

# Remove "formats" field from the infojson by setting it to an empty string
$ yt-dlp --parse-metadata "video::(?P&amp;lt;formats&amp;gt;)" --write-info-json

# Replace all spaces and "_" in title and uploader with a `-`
$ yt-dlp --replace-in-metadata "title,uploader" "[ _]" "-"

&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;EXTRACTOR ARGUMENTS&lt;/h1&gt; 
&lt;p&gt;Some extractors accept additional arguments which can be passed using &lt;code&gt;--extractor-args KEY:ARGS&lt;/code&gt;. &lt;code&gt;ARGS&lt;/code&gt; is a &lt;code&gt;;&lt;/code&gt; (semicolon) separated string of &lt;code&gt;ARG=VAL1,VAL2&lt;/code&gt;. E.g. &lt;code&gt;--extractor-args "youtube:player-client=tv,mweb;formats=incomplete" --extractor-args "twitter:api=syndication"&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Note: In CLI, &lt;code&gt;ARG&lt;/code&gt; can use &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;_&lt;/code&gt;; e.g. &lt;code&gt;youtube:player-client"&lt;/code&gt; becomes &lt;code&gt;youtube:player_client"&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;The following extractors use this feature:&lt;/p&gt; 
&lt;h4&gt;youtube&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lang&lt;/code&gt;: Prefer translated metadata (&lt;code&gt;title&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; etc) of this language code (case-sensitive). By default, the video primary language metadata is preferred, with a fallback to &lt;code&gt;en&lt;/code&gt; translated. See &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/415b4c9f955b1a0391204bd24a7132590e7b3bdb/yt_dlp/extractor/youtube/_base.py#L402-L409"&gt;youtube/_base.py&lt;/a&gt; for the list of supported content language codes&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;skip&lt;/code&gt;: One or more of &lt;code&gt;hls&lt;/code&gt;, &lt;code&gt;dash&lt;/code&gt; or &lt;code&gt;translated_subs&lt;/code&gt; to skip extraction of the m3u8 manifests, dash manifests and &lt;a href="https://github.com/yt-dlp/yt-dlp/issues/4090#issuecomment-1158102032"&gt;auto-translated subtitles&lt;/a&gt; respectively&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;player_client&lt;/code&gt;: Clients to extract video data from. The currently available clients are &lt;code&gt;web&lt;/code&gt;, &lt;code&gt;web_safari&lt;/code&gt;, &lt;code&gt;web_embedded&lt;/code&gt;, &lt;code&gt;web_music&lt;/code&gt;, &lt;code&gt;web_creator&lt;/code&gt;, &lt;code&gt;mweb&lt;/code&gt;, &lt;code&gt;ios&lt;/code&gt;, &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;android_vr&lt;/code&gt;, &lt;code&gt;tv&lt;/code&gt;, &lt;code&gt;tv_simply&lt;/code&gt; and &lt;code&gt;tv_embedded&lt;/code&gt;. By default, &lt;code&gt;tv_simply,tv,web&lt;/code&gt; is used, but &lt;code&gt;tv,web_safari,web&lt;/code&gt; is used when authenticating with cookies and &lt;code&gt;tv,web_creator,web&lt;/code&gt; is used with premium accounts. The &lt;code&gt;web_music&lt;/code&gt; client is added for &lt;code&gt;music.youtube.com&lt;/code&gt; URLs when logged-in cookies are used. The &lt;code&gt;web_embedded&lt;/code&gt; client is added for age-restricted videos but only works if the video is embeddable. The &lt;code&gt;tv_embedded&lt;/code&gt; and &lt;code&gt;web_creator&lt;/code&gt; clients are added for age-restricted videos if account age-verification is required. Some clients, such as &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;web_music&lt;/code&gt;, require a &lt;code&gt;po_token&lt;/code&gt; for their formats to be downloadable. Some clients, such as &lt;code&gt;web_creator&lt;/code&gt;, will only work with authentication. Not all clients support authentication via cookies. You can use &lt;code&gt;default&lt;/code&gt; for the default clients, or you can use &lt;code&gt;all&lt;/code&gt; for all clients (not recommended). You can prefix a client with &lt;code&gt;-&lt;/code&gt; to exclude it, e.g. &lt;code&gt;youtube:player_client=default,-ios&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;player_skip&lt;/code&gt;: Skip some network requests that are generally needed for robust extraction. One or more of &lt;code&gt;configs&lt;/code&gt; (skip client configs), &lt;code&gt;webpage&lt;/code&gt; (skip initial webpage), &lt;code&gt;js&lt;/code&gt; (skip js player), &lt;code&gt;initial_data&lt;/code&gt; (skip initial data/next ep request). While these options can help reduce the number of requests needed or avoid some rate-limiting, they could cause issues such as missing formats or metadata. See &lt;a href="https://github.com/yt-dlp/yt-dlp/pull/860"&gt;#860&lt;/a&gt; and &lt;a href="https://github.com/yt-dlp/yt-dlp/issues/12826"&gt;#12826&lt;/a&gt; for more details&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;webpage_skip&lt;/code&gt;: Skip extraction of embedded webpage data. One or both of &lt;code&gt;player_response&lt;/code&gt;, &lt;code&gt;initial_data&lt;/code&gt;. These options are for testing purposes and don't skip any network requests&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;player_params&lt;/code&gt;: YouTube player parameters to use for player requests. Will overwrite any default ones set by yt-dlp.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;player_js_variant&lt;/code&gt;: The player javascript variant to use for signature and nsig deciphering. The known variants are: &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;tce&lt;/code&gt;, &lt;code&gt;tv&lt;/code&gt;, &lt;code&gt;tv_es6&lt;/code&gt;, &lt;code&gt;phone&lt;/code&gt;, &lt;code&gt;tablet&lt;/code&gt;. The default is &lt;code&gt;main&lt;/code&gt;, and the others are for debugging purposes. You can use &lt;code&gt;actual&lt;/code&gt; to go with what is prescribed by the site&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;comment_sort&lt;/code&gt;: &lt;code&gt;top&lt;/code&gt; or &lt;code&gt;new&lt;/code&gt; (default) - choose comment sorting mode (on YouTube's side)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;max_comments&lt;/code&gt;: Limit the amount of comments to gather. Comma-separated list of integers representing &lt;code&gt;max-comments,max-parents,max-replies,max-replies-per-thread&lt;/code&gt;. Default is &lt;code&gt;all,all,all,all&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;E.g. &lt;code&gt;all,all,1000,10&lt;/code&gt; will get a maximum of 1000 replies total, with up to 10 replies per thread. &lt;code&gt;1000,all,100&lt;/code&gt; will get a maximum of 1000 comments, with a maximum of 100 replies total&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;formats&lt;/code&gt;: Change the types of formats to return. &lt;code&gt;dashy&lt;/code&gt; (convert HTTP to DASH), &lt;code&gt;duplicate&lt;/code&gt; (identical content but different URLs or protocol; includes &lt;code&gt;dashy&lt;/code&gt;), &lt;code&gt;incomplete&lt;/code&gt; (cannot be downloaded completely - live dash and post-live m3u8), &lt;code&gt;missing_pot&lt;/code&gt; (include formats that require a PO Token but are missing one)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;innertube_host&lt;/code&gt;: Innertube API host to use for all API requests; e.g. &lt;code&gt;studio.youtube.com&lt;/code&gt;, &lt;code&gt;youtubei.googleapis.com&lt;/code&gt;. Note that cookies exported from one subdomain will not work on others&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;innertube_key&lt;/code&gt;: Innertube API key to use for all API requests. By default, no API key is used&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;raise_incomplete_data&lt;/code&gt;: &lt;code&gt;Incomplete Data Received&lt;/code&gt; raises an error instead of reporting a warning&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;data_sync_id&lt;/code&gt;: Overrides the account Data Sync ID used in Innertube API requests. This may be needed if you are using an account with &lt;code&gt;youtube:player_skip=webpage,configs&lt;/code&gt; or &lt;code&gt;youtubetab:skip=webpage&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;visitor_data&lt;/code&gt;: Overrides the Visitor Data used in Innertube API requests. This should be used with &lt;code&gt;player_skip=webpage,configs&lt;/code&gt; and without cookies. Note: this may have adverse effects if used improperly. If a session from a browser is wanted, you should pass cookies instead (which contain the Visitor ID)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;po_token&lt;/code&gt;: Proof of Origin (PO) Token(s) to use. Comma seperated list of PO Tokens in the format &lt;code&gt;CLIENT.CONTEXT+PO_TOKEN&lt;/code&gt;, e.g. &lt;code&gt;youtube:po_token=web.gvs+XXX,web.player=XXX,web_safari.gvs+YYY&lt;/code&gt;. Context can be any of &lt;code&gt;gvs&lt;/code&gt; (Google Video Server URLs), &lt;code&gt;player&lt;/code&gt; (Innertube player request) or &lt;code&gt;subs&lt;/code&gt; (Subtitles)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pot_trace&lt;/code&gt;: Enable debug logging for PO Token fetching. Either &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; (default)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;fetch_pot&lt;/code&gt;: Policy to use for fetching a PO Token from providers. One of &lt;code&gt;always&lt;/code&gt; (always try fetch a PO Token regardless if the client requires one for the given context), &lt;code&gt;never&lt;/code&gt; (never fetch a PO Token), or &lt;code&gt;auto&lt;/code&gt; (default; only fetch a PO Token if the client requires one for the given context)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playback_wait&lt;/code&gt;: Duration (in seconds) to wait inbetween the extraction and download stages in order to ensure the formats are available. The default is &lt;code&gt;6&lt;/code&gt; seconds&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;youtubepot-webpo&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;bind_to_visitor_id&lt;/code&gt;: Whether to use the Visitor ID instead of Visitor Data for caching WebPO tokens. Either &lt;code&gt;true&lt;/code&gt; (default) or &lt;code&gt;false&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;youtubetab (YouTube playlists, channels, feeds, etc.)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;skip&lt;/code&gt;: One or more of &lt;code&gt;webpage&lt;/code&gt; (skip initial webpage download), &lt;code&gt;authcheck&lt;/code&gt; (allow the download of playlists requiring authentication when no initial webpage is downloaded. This may cause unwanted behavior, see &lt;a href="https://github.com/yt-dlp/yt-dlp/pull/1122"&gt;#1122&lt;/a&gt; for more details)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;approximate_date&lt;/code&gt;: Extract approximate &lt;code&gt;upload_date&lt;/code&gt; and &lt;code&gt;timestamp&lt;/code&gt; in flat-playlist. This may cause date-based filters to be slightly off&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;generic&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;fragment_query&lt;/code&gt;: Passthrough any query in mpd/m3u8 manifest URLs to their fragments if no value is provided, or else apply the query string given as &lt;code&gt;fragment_query=VALUE&lt;/code&gt;. Note that if the stream has an HLS AES-128 key, then the query parameters will be passed to the key URI as well, unless the &lt;code&gt;key_query&lt;/code&gt; extractor-arg is passed, or unless an external key URI is provided via the &lt;code&gt;hls_key&lt;/code&gt; extractor-arg. Does not apply to ffmpeg&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;variant_query&lt;/code&gt;: Passthrough the master m3u8 URL query to its variant playlist URLs if no value is provided, or else apply the query string given as &lt;code&gt;variant_query=VALUE&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;key_query&lt;/code&gt;: Passthrough the master m3u8 URL query to its HLS AES-128 decryption key URI if no value is provided, or else apply the query string given as &lt;code&gt;key_query=VALUE&lt;/code&gt;. Note that this will have no effect if the key URI is provided via the &lt;code&gt;hls_key&lt;/code&gt; extractor-arg. Does not apply to ffmpeg&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;hls_key&lt;/code&gt;: An HLS AES-128 key URI &lt;em&gt;or&lt;/em&gt; key (as hex), and optionally the IV (as hex), in the form of &lt;code&gt;(URI|KEY)[,IV]&lt;/code&gt;; e.g. &lt;code&gt;generic:hls_key=ABCDEF1234567980,0xFEDCBA0987654321&lt;/code&gt;. Passing any of these values will force usage of the native HLS downloader and override the corresponding values found in the m3u8 playlist&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;is_live&lt;/code&gt;: Bypass live HLS detection and manually set &lt;code&gt;live_status&lt;/code&gt; - a value of &lt;code&gt;false&lt;/code&gt; will set &lt;code&gt;not_live&lt;/code&gt;, any other value (or no value) will set &lt;code&gt;is_live&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;impersonate&lt;/code&gt;: Target(s) to try and impersonate with the initial webpage request; e.g. &lt;code&gt;generic:impersonate=safari,chrome-110&lt;/code&gt;. Use &lt;code&gt;generic:impersonate&lt;/code&gt; to impersonate any available target, and use &lt;code&gt;generic:impersonate=false&lt;/code&gt; to disable impersonation (default)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;vikichannel&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;video_types&lt;/code&gt;: Types of videos to download - one or more of &lt;code&gt;episodes&lt;/code&gt;, &lt;code&gt;movies&lt;/code&gt;, &lt;code&gt;clips&lt;/code&gt;, &lt;code&gt;trailers&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;youtubewebarchive&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;check_all&lt;/code&gt;: Try to check more at the cost of more requests. One or more of &lt;code&gt;thumbnails&lt;/code&gt;, &lt;code&gt;captures&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;gamejolt&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;comment_sort&lt;/code&gt;: &lt;code&gt;hot&lt;/code&gt; (default), &lt;code&gt;you&lt;/code&gt; (cookies needed), &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;new&lt;/code&gt; - choose comment sorting mode (on GameJolt's side)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;hotstar&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;res&lt;/code&gt;: resolution to ignore - one or more of &lt;code&gt;sd&lt;/code&gt;, &lt;code&gt;hd&lt;/code&gt;, &lt;code&gt;fhd&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;vcodec&lt;/code&gt;: vcodec to ignore - one or more of &lt;code&gt;h264&lt;/code&gt;, &lt;code&gt;h265&lt;/code&gt;, &lt;code&gt;dvh265&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;dr&lt;/code&gt;: dynamic range to ignore - one or more of &lt;code&gt;sdr&lt;/code&gt;, &lt;code&gt;hdr10&lt;/code&gt;, &lt;code&gt;dv&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;instagram&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;app_id&lt;/code&gt;: The value of the &lt;code&gt;X-IG-App-ID&lt;/code&gt; header used for API requests. Default is the web app ID, &lt;code&gt;936619743392459&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;niconicochannelplus&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;max_comments&lt;/code&gt;: Maximum number of comments to extract - default is &lt;code&gt;120&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;tiktok&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;api_hostname&lt;/code&gt;: Hostname to use for mobile API calls, e.g. &lt;code&gt;api22-normal-c-alisg.tiktokv.com&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;app_name&lt;/code&gt;: Default app name to use with mobile API calls, e.g. &lt;code&gt;trill&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;app_version&lt;/code&gt;: Default app version to use with mobile API calls - should be set along with &lt;code&gt;manifest_app_version&lt;/code&gt;, e.g. &lt;code&gt;34.1.2&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;manifest_app_version&lt;/code&gt;: Default numeric app version to use with mobile API calls, e.g. &lt;code&gt;2023401020&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;aid&lt;/code&gt;: Default app ID to use with mobile API calls, e.g. &lt;code&gt;1180&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;app_info&lt;/code&gt;: Enable mobile API extraction with one or more app info strings in the format of &lt;code&gt;&amp;lt;iid&amp;gt;/[app_name]/[app_version]/[manifest_app_version]/[aid]&lt;/code&gt;, where &lt;code&gt;iid&lt;/code&gt; is the unique app install ID. &lt;code&gt;iid&lt;/code&gt; is the only required value; all other values and their &lt;code&gt;/&lt;/code&gt; separators can be omitted, e.g. &lt;code&gt;tiktok:app_info=1234567890123456789&lt;/code&gt; or &lt;code&gt;tiktok:app_info=123,456/trill///1180,789//34.0.1/340001&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;device_id&lt;/code&gt;: Enable mobile API extraction with a genuine device ID to be used with mobile API calls. Default is a random 19-digit string&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;rokfinchannel&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;tab&lt;/code&gt;: Which tab to download - one of &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;top&lt;/code&gt;, &lt;code&gt;videos&lt;/code&gt;, &lt;code&gt;podcasts&lt;/code&gt;, &lt;code&gt;streams&lt;/code&gt;, &lt;code&gt;stacks&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;twitter&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;api&lt;/code&gt;: Select one of &lt;code&gt;graphql&lt;/code&gt; (default), &lt;code&gt;legacy&lt;/code&gt; or &lt;code&gt;syndication&lt;/code&gt; as the API for tweet extraction. Has no effect if logged in&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;stacommu, wrestleuniverse&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;device_id&lt;/code&gt;: UUID value assigned by the website and used to enforce device limits for paid livestream content. Can be found in browser local storage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;twitch&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;client_id&lt;/code&gt;: Client ID value to be sent with GraphQL requests, e.g. &lt;code&gt;twitch:client_id=kimne78kx3ncx6brgo4mv6wki5h1ko&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;nhkradirulive (NHK らじる★らじる LIVE)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;area&lt;/code&gt;: Which regional variation to extract. Valid areas are: &lt;code&gt;sapporo&lt;/code&gt;, &lt;code&gt;sendai&lt;/code&gt;, &lt;code&gt;tokyo&lt;/code&gt;, &lt;code&gt;nagoya&lt;/code&gt;, &lt;code&gt;osaka&lt;/code&gt;, &lt;code&gt;hiroshima&lt;/code&gt;, &lt;code&gt;matsuyama&lt;/code&gt;, &lt;code&gt;fukuoka&lt;/code&gt;. Defaults to &lt;code&gt;tokyo&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;nflplusreplay&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;type&lt;/code&gt;: Type(s) of game replays to extract. Valid types are: &lt;code&gt;full_game&lt;/code&gt;, &lt;code&gt;full_game_spanish&lt;/code&gt;, &lt;code&gt;condensed_game&lt;/code&gt; and &lt;code&gt;all_22&lt;/code&gt;. You can use &lt;code&gt;all&lt;/code&gt; to extract all available replay types, which is the default&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;jiocinema&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;refresh_token&lt;/code&gt;: The &lt;code&gt;refreshToken&lt;/code&gt; UUID from browser local storage can be passed to extend the life of your login session when logging in with &lt;code&gt;token&lt;/code&gt; as username and the &lt;code&gt;accessToken&lt;/code&gt; from browser local storage as password&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;jiosaavn&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;bitrate&lt;/code&gt;: Audio bitrates to request. One or more of &lt;code&gt;16&lt;/code&gt;, &lt;code&gt;32&lt;/code&gt;, &lt;code&gt;64&lt;/code&gt;, &lt;code&gt;128&lt;/code&gt;, &lt;code&gt;320&lt;/code&gt;. Default is &lt;code&gt;128,320&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;afreecatvlive&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;cdn&lt;/code&gt;: One or more CDN IDs to use with the API call for stream URLs, e.g. &lt;code&gt;gcp_cdn&lt;/code&gt;, &lt;code&gt;gs_cdn_pc_app&lt;/code&gt;, &lt;code&gt;gs_cdn_mobile_web&lt;/code&gt;, &lt;code&gt;gs_cdn_pc_web&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;soundcloud&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;formats&lt;/code&gt;: Formats to request from the API. Requested values should be in the format of &lt;code&gt;{protocol}_{codec}&lt;/code&gt;, e.g. &lt;code&gt;hls_opus,http_aac&lt;/code&gt;. The &lt;code&gt;*&lt;/code&gt; character functions as a wildcard, e.g. &lt;code&gt;*_mp3&lt;/code&gt;, and can be passed by itself to request all formats. Known protocols include &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;hls&lt;/code&gt; and &lt;code&gt;hls-aes&lt;/code&gt;; known codecs include &lt;code&gt;aac&lt;/code&gt;, &lt;code&gt;opus&lt;/code&gt; and &lt;code&gt;mp3&lt;/code&gt;. Original &lt;code&gt;download&lt;/code&gt; formats are always extracted. Default is &lt;code&gt;http_aac,hls_aac,http_opus,hls_opus,http_mp3,hls_mp3&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;orfon (orf:on)&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;prefer_segments_playlist&lt;/code&gt;: Prefer a playlist of program segments instead of a single complete video when available. If individual segments are desired, use &lt;code&gt;--concat-playlist never --extractor-args "orfon:prefer_segments_playlist"&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;bilibili&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;prefer_multi_flv&lt;/code&gt;: Prefer extracting flv formats over mp4 for older videos that still provide legacy formats&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;sonylivseries&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;sort_order&lt;/code&gt;: Episode sort order for series extraction - one of &lt;code&gt;asc&lt;/code&gt; (ascending, oldest first) or &lt;code&gt;desc&lt;/code&gt; (descending, newest first). Default is &lt;code&gt;asc&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;tver&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;backend&lt;/code&gt;: Backend API to use for extraction - one of &lt;code&gt;streaks&lt;/code&gt; (default) or &lt;code&gt;brightcove&lt;/code&gt; (deprecated)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;vimeo&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;client&lt;/code&gt;: Client to extract video data from. The currently available clients are &lt;code&gt;android&lt;/code&gt;, &lt;code&gt;ios&lt;/code&gt;, and &lt;code&gt;web&lt;/code&gt;. Only one client can be used. The &lt;code&gt;web&lt;/code&gt; client is used by default. The &lt;code&gt;web&lt;/code&gt; client only works with account cookies or login credentials. The &lt;code&gt;android&lt;/code&gt; and &lt;code&gt;ios&lt;/code&gt; clients only work with previously cached OAuth tokens&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;original_format_policy&lt;/code&gt;: Policy for when to try extracting original formats. One of &lt;code&gt;always&lt;/code&gt;, &lt;code&gt;never&lt;/code&gt;, or &lt;code&gt;auto&lt;/code&gt;. The default &lt;code&gt;auto&lt;/code&gt; policy tries to avoid exceeding the web client's API rate-limit by only making an extra request when Vimeo publicizes the video's downloadability&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: These options may be changed/removed in the future without concern for backward compatibility&lt;/p&gt; 
&lt;!-- MANPAGE: MOVE "INSTALLATION" SECTION HERE --&gt; 
&lt;h1&gt;PLUGINS&lt;/h1&gt; 
&lt;p&gt;Note that &lt;strong&gt;all&lt;/strong&gt; plugins are imported even if not invoked, and that &lt;strong&gt;there are no checks&lt;/strong&gt; performed on plugin code. &lt;strong&gt;Use plugins at your own risk and only if you trust the code!&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Plugins can be of &lt;code&gt;&amp;lt;type&amp;gt;&lt;/code&gt;s &lt;code&gt;extractor&lt;/code&gt; or &lt;code&gt;postprocessor&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Extractor plugins do not need to be enabled from the CLI and are automatically invoked when the input URL is suitable for it.&lt;/li&gt; 
 &lt;li&gt;Extractor plugins take priority over built-in extractors.&lt;/li&gt; 
 &lt;li&gt;Postprocessor plugins can be invoked using &lt;code&gt;--use-postprocessor NAME&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Plugins are loaded from the namespace packages &lt;code&gt;yt_dlp_plugins.extractor&lt;/code&gt; and &lt;code&gt;yt_dlp_plugins.postprocessor&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;In other words, the file structure on the disk looks something like:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;    yt_dlp_plugins/
        extractor/
            myplugin.py
        postprocessor/
            myplugin.py
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;yt-dlp looks for these &lt;code&gt;yt_dlp_plugins&lt;/code&gt; namespace folders in many locations (see below) and loads in plugins from &lt;strong&gt;all&lt;/strong&gt; of them. Set the environment variable &lt;code&gt;YTDLP_NO_PLUGINS&lt;/code&gt; to something nonempty to disable loading plugins entirely.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Plugins"&gt;wiki for some known plugins&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installing Plugins&lt;/h2&gt; 
&lt;p&gt;Plugins can be installed using various methods and locations.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configuration directories&lt;/strong&gt;: Plugin packages (containing a &lt;code&gt;yt_dlp_plugins&lt;/code&gt; namespace folder) can be dropped into the following standard &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration"&gt;configuration locations&lt;/a&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;strong&gt;User Plugins&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;${XDG_CONFIG_HOME}/yt-dlp/plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt; (recommended on Linux/macOS)&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;${XDG_CONFIG_HOME}/yt-dlp-plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;${APPDATA}/yt-dlp/plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt; (recommended on Windows)&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;${APPDATA}/yt-dlp-plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;~/.yt-dlp/plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;~/yt-dlp-plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;System Plugins&lt;/strong&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;code&gt;/etc/yt-dlp/plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;code&gt;/etc/yt-dlp-plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Executable location&lt;/strong&gt;: Plugin packages can similarly be installed in a &lt;code&gt;yt-dlp-plugins&lt;/code&gt; directory under the executable location (recommended for portable installations):&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Binary: where &lt;code&gt;&amp;lt;root-dir&amp;gt;/yt-dlp.exe&lt;/code&gt;, &lt;code&gt;&amp;lt;root-dir&amp;gt;/yt-dlp-plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;Source: where &lt;code&gt;&amp;lt;root-dir&amp;gt;/yt_dlp/__main__.py&lt;/code&gt;, &lt;code&gt;&amp;lt;root-dir&amp;gt;/yt-dlp-plugins/&amp;lt;package name&amp;gt;/yt_dlp_plugins/&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;pip and other locations in &lt;code&gt;PYTHONPATH&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Plugin packages can be installed and managed using &lt;code&gt;pip&lt;/code&gt;. See &lt;a href="https://github.com/yt-dlp/yt-dlp-sample-plugins"&gt;yt-dlp-sample-plugins&lt;/a&gt; for an example. 
    &lt;ul&gt; 
     &lt;li&gt;Note: plugin files between plugin packages installed with pip must have unique filenames.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;Any path in &lt;code&gt;PYTHONPATH&lt;/code&gt; is searched in for the &lt;code&gt;yt_dlp_plugins&lt;/code&gt; namespace folder. 
    &lt;ul&gt; 
     &lt;li&gt;Note: This does not apply for Pyinstaller builds.&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;code&gt;.zip&lt;/code&gt;, &lt;code&gt;.egg&lt;/code&gt; and &lt;code&gt;.whl&lt;/code&gt; archives containing a &lt;code&gt;yt_dlp_plugins&lt;/code&gt; namespace folder in their root are also supported as plugin packages.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;e.g. &lt;code&gt;${XDG_CONFIG_HOME}/yt-dlp/plugins/mypluginpkg.zip&lt;/code&gt; where &lt;code&gt;mypluginpkg.zip&lt;/code&gt; contains &lt;code&gt;yt_dlp_plugins/&amp;lt;type&amp;gt;/myplugin.py&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Run yt-dlp with &lt;code&gt;--verbose&lt;/code&gt; to check if the plugin has been loaded.&lt;/p&gt; 
&lt;h2&gt;Developing Plugins&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/yt-dlp/yt-dlp-sample-plugins"&gt;yt-dlp-sample-plugins&lt;/a&gt; repo for a template plugin package and the &lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Plugin-Development"&gt;Plugin Development&lt;/a&gt; section of the wiki for a plugin development guide.&lt;/p&gt; 
&lt;p&gt;All public classes with a name ending in &lt;code&gt;IE&lt;/code&gt;/&lt;code&gt;PP&lt;/code&gt; are imported from each file for extractors and postprocessors respectively. This respects underscore prefix (e.g. &lt;code&gt;_MyBasePluginIE&lt;/code&gt; is private) and &lt;code&gt;__all__&lt;/code&gt;. Modules can similarly be excluded by prefixing the module name with an underscore (e.g. &lt;code&gt;_myplugin.py&lt;/code&gt;).&lt;/p&gt; 
&lt;p&gt;To replace an existing extractor with a subclass of one, set the &lt;code&gt;plugin_name&lt;/code&gt; class keyword argument (e.g. &lt;code&gt;class MyPluginIE(ABuiltInIE, plugin_name='myplugin')&lt;/code&gt; will replace &lt;code&gt;ABuiltInIE&lt;/code&gt; with &lt;code&gt;MyPluginIE&lt;/code&gt;). Since the extractor replaces the parent, you should exclude the subclass extractor from being imported separately by making it private using one of the methods described above.&lt;/p&gt; 
&lt;p&gt;If you are a plugin author, add &lt;a href="https://github.com/topics/yt-dlp-plugins"&gt;yt-dlp-plugins&lt;/a&gt; as a topic to your repository for discoverability.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/CONTRIBUTING.md#developer-instructions"&gt;Developer Instructions&lt;/a&gt; on how to write and test an extractor.&lt;/p&gt; 
&lt;h1&gt;EMBEDDING YT-DLP&lt;/h1&gt; 
&lt;p&gt;yt-dlp makes the best effort to be a good command-line program, and thus should be callable from any programming language.&lt;/p&gt; 
&lt;p&gt;Your program should avoid parsing the normal stdout since they may change in future versions. Instead, they should use options such as &lt;code&gt;-J&lt;/code&gt;, &lt;code&gt;--print&lt;/code&gt;, &lt;code&gt;--progress-template&lt;/code&gt;, &lt;code&gt;--exec&lt;/code&gt; etc to create console output that you can reliably reproduce and parse.&lt;/p&gt; 
&lt;p&gt;From a Python program, you can embed yt-dlp in a more powerful fashion, like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;from yt_dlp import YoutubeDL

URLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']
with YoutubeDL() as ydl:
    ydl.download(URLS)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Most likely, you'll want to use various options. For a list of options available, have a look at &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/yt_dlp/YoutubeDL.py#L183"&gt;&lt;code&gt;yt_dlp/YoutubeDL.py&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;help(yt_dlp.YoutubeDL)&lt;/code&gt; in a Python shell. If you are already familiar with the CLI, you can use &lt;a href="https://github.com/yt-dlp/yt-dlp/raw/master/devscripts/cli_to_api.py"&gt;&lt;code&gt;devscripts/cli_to_api.py&lt;/code&gt;&lt;/a&gt; to translate any CLI switches to &lt;code&gt;YoutubeDL&lt;/code&gt; params.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: If you are porting your code from youtube-dl to yt-dlp, one important point to look out for is that we do not guarantee the return value of &lt;code&gt;YoutubeDL.extract_info&lt;/code&gt; to be json serializable, or even be a dictionary. It will be dictionary-like, but if you want to ensure it is a serializable dictionary, pass it through &lt;code&gt;YoutubeDL.sanitize_info&lt;/code&gt; as shown in the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#extracting-information"&gt;example below&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Embedding examples&lt;/h2&gt; 
&lt;h4&gt;Extracting information&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import json
import yt_dlp

URL = 'https://www.youtube.com/watch?v=BaW_jenozKc'

# ℹ️ See help(yt_dlp.YoutubeDL) for a list of available options and public functions
ydl_opts = {}
with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    info = ydl.extract_info(URL, download=False)

    # ℹ️ ydl.sanitize_info makes the info json-serializable
    print(json.dumps(ydl.sanitize_info(info)))
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Download using an info-json&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import yt_dlp

INFO_FILE = 'path/to/video.info.json'

with yt_dlp.YoutubeDL() as ydl:
    error_code = ydl.download_with_info_file(INFO_FILE)

print('Some videos failed to download' if error_code
      else 'All videos successfully downloaded')
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Extract audio&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import yt_dlp

URLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']

ydl_opts = {
    'format': 'm4a/bestaudio/best',
    # ℹ️ See help(yt_dlp.postprocessor) for a list of available Postprocessors and their arguments
    'postprocessors': [{  # Extract audio using ffmpeg
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'm4a',
    }]
}

with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    error_code = ydl.download(URLS)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Filter videos&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import yt_dlp

URLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']

def longer_than_a_minute(info, *, incomplete):
    """Download only videos longer than a minute (or with unknown duration)"""
    duration = info.get('duration')
    if duration and duration &amp;lt; 60:
        return 'The video is too short'

ydl_opts = {
    'match_filter': longer_than_a_minute,
}

with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    error_code = ydl.download(URLS)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Adding logger and progress hook&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import yt_dlp

URLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']

class MyLogger:
    def debug(self, msg):
        # For compatibility with youtube-dl, both debug and info are passed into debug
        # You can distinguish them by the prefix '[debug] '
        if msg.startswith('[debug] '):
            pass
        else:
            self.info(msg)

    def info(self, msg):
        pass

    def warning(self, msg):
        pass

    def error(self, msg):
        print(msg)


# ℹ️ See "progress_hooks" in help(yt_dlp.YoutubeDL)
def my_hook(d):
    if d['status'] == 'finished':
        print('Done downloading, now post-processing ...')


ydl_opts = {
    'logger': MyLogger(),
    'progress_hooks': [my_hook],
}

with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    ydl.download(URLS)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Add a custom PostProcessor&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import yt_dlp

URLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']

# ℹ️ See help(yt_dlp.postprocessor.PostProcessor)
class MyCustomPP(yt_dlp.postprocessor.PostProcessor):
    def run(self, info):
        self.to_screen('Doing stuff')
        return [], info


with yt_dlp.YoutubeDL() as ydl:
    # ℹ️ "when" can take any value in yt_dlp.utils.POSTPROCESS_WHEN
    ydl.add_post_processor(MyCustomPP(), when='pre_process')
    ydl.download(URLS)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Use a custom format selector&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;import yt_dlp

URLS = ['https://www.youtube.com/watch?v=BaW_jenozKc']

def format_selector(ctx):
    """ Select the best video and the best audio that won't result in an mkv.
    NOTE: This is just an example and does not handle all cases """

    # formats are already sorted worst to best
    formats = ctx.get('formats')[::-1]

    # acodec='none' means there is no audio
    best_video = next(f for f in formats
                      if f['vcodec'] != 'none' and f['acodec'] == 'none')

    # find compatible audio extension
    audio_ext = {'mp4': 'm4a', 'webm': 'webm'}[best_video['ext']]
    # vcodec='none' means there is no video
    best_audio = next(f for f in formats if (
        f['acodec'] != 'none' and f['vcodec'] == 'none' and f['ext'] == audio_ext))

    # These are the minimum required fields for a merged format
    yield {
        'format_id': f'{best_video["format_id"]}+{best_audio["format_id"]}',
        'ext': best_video['ext'],
        'requested_formats': [best_video, best_audio],
        # Must be + separated list of protocols
        'protocol': f'{best_video["protocol"]}+{best_audio["protocol"]}'
    }


ydl_opts = {
    'format': format_selector,
}

with yt_dlp.YoutubeDL(ydl_opts) as ydl:
    ydl.download(URLS)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;CHANGES FROM YOUTUBE-DL&lt;/h1&gt; 
&lt;h3&gt;New features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Forked from &lt;a href="https://github.com/blackjack4494/yt-dlc/commit/f9401f2a91987068139c5f757b12fc711d4c0cee"&gt;&lt;strong&gt;yt-dlc@f9401f2&lt;/strong&gt;&lt;/a&gt; and merged with &lt;a href="https://github.com/ytdl-org/youtube-dl/commit/a08f2b7e4567cdc50c0614ee0a4ffdff49b8b6e6"&gt;&lt;strong&gt;youtube-dl@a08f2b7&lt;/strong&gt;&lt;/a&gt; (&lt;a href="https://github.com/yt-dlp/yt-dlp/issues/21"&gt;exceptions&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sponsorblock-options"&gt;SponsorBlock Integration&lt;/a&gt;&lt;/strong&gt;: You can mark/remove sponsor sections in YouTube videos by utilizing the &lt;a href="https://sponsor.ajay.app"&gt;SponsorBlock&lt;/a&gt; API&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats"&gt;Format Sorting&lt;/a&gt;&lt;/strong&gt;: The default format sorting options have been changed so that higher resolution and better codecs will be now preferred instead of simply using larger bitrate. Furthermore, you can now specify the sort order using &lt;code&gt;-S&lt;/code&gt;. This allows for much easier format selection than what is possible by simply using &lt;code&gt;--format&lt;/code&gt; (&lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection-examples"&gt;examples&lt;/a&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Merged with animelover1984/youtube-dl&lt;/strong&gt;: You get most of the features and improvements from &lt;a href="https://github.com/animelover1984/youtube-dl"&gt;animelover1984/youtube-dl&lt;/a&gt; including &lt;code&gt;--write-comments&lt;/code&gt;, &lt;code&gt;BiliBiliSearch&lt;/code&gt;, &lt;code&gt;BilibiliChannel&lt;/code&gt;, Embedding thumbnail in mp4/ogg/opus, playlist infojson etc. See &lt;a href="https://github.com/yt-dlp/yt-dlp/pull/31"&gt;#31&lt;/a&gt; for details.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;YouTube improvements&lt;/strong&gt;:&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Supports Clips, Stories (&lt;code&gt;ytstories:&amp;lt;channel UCID&amp;gt;&lt;/code&gt;), Search (including filters)&lt;strong&gt;*&lt;/strong&gt;, YouTube Music Search, Channel-specific search, Search prefixes (&lt;code&gt;ytsearch:&lt;/code&gt;, &lt;code&gt;ytsearchdate:&lt;/code&gt;)&lt;strong&gt;*&lt;/strong&gt;, Mixes, and Feeds (&lt;code&gt;:ytfav&lt;/code&gt;, &lt;code&gt;:ytwatchlater&lt;/code&gt;, &lt;code&gt;:ytsubs&lt;/code&gt;, &lt;code&gt;:ythistory&lt;/code&gt;, &lt;code&gt;:ytrec&lt;/code&gt;, &lt;code&gt;:ytnotif&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;Fix for &lt;a href="https://github.com/ytdl-org/youtube-dl/issues/29326"&gt;n-sig based throttling&lt;/a&gt; &lt;strong&gt;*&lt;/strong&gt;&lt;/li&gt; 
   &lt;li&gt;Download livestreams from the start using &lt;code&gt;--live-from-start&lt;/code&gt; (&lt;em&gt;experimental&lt;/em&gt;)&lt;/li&gt; 
   &lt;li&gt;Channel URLs download all uploads of the channel, including shorts and live&lt;/li&gt; 
   &lt;li&gt;Support for &lt;a href="https://github.com/yt-dlp/yt-dlp/wiki/Extractors#logging-in-with-oauth"&gt;logging in with OAuth&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Cookies from browser&lt;/strong&gt;: Cookies can be automatically extracted from all major web browsers using &lt;code&gt;--cookies-from-browser BROWSER[+KEYRING][:PROFILE][::CONTAINER]&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Download time range&lt;/strong&gt;: Videos can be downloaded partially based on either timestamps or chapters using &lt;code&gt;--download-sections&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Split video by chapters&lt;/strong&gt;: Videos can be split into multiple files based on chapters using &lt;code&gt;--split-chapters&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multi-threaded fragment downloads&lt;/strong&gt;: Download multiple fragments of m3u8/mpd videos in parallel. Use &lt;code&gt;--concurrent-fragments&lt;/code&gt; (&lt;code&gt;-N&lt;/code&gt;) option to set the number of threads used&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Aria2c with HLS/DASH&lt;/strong&gt;: You can use &lt;code&gt;aria2c&lt;/code&gt; as the external downloader for DASH(mpd) and HLS(m3u8) formats&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;New and fixed extractors&lt;/strong&gt;: Many new extractors have been added and a lot of existing ones have been fixed. See the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/Changelog.md"&gt;changelog&lt;/a&gt; or the &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/supportedsites.md"&gt;list of supported sites&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;New MSOs&lt;/strong&gt;: Philo, Spectrum, SlingTV, Cablevision, RCN etc.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Subtitle extraction from manifests&lt;/strong&gt;: Subtitles can be extracted from streaming media manifests. See &lt;a href="https://github.com/yt-dlp/yt-dlp/commit/be6202f12b97858b9d716e608394b51065d0419f"&gt;commit/be6202f&lt;/a&gt; for details&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Multiple paths and output templates&lt;/strong&gt;: You can give different &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template"&gt;output templates&lt;/a&gt; and download paths for different types of files. You can also set a temporary path where intermediary files are downloaded to using &lt;code&gt;--paths&lt;/code&gt; (&lt;code&gt;-P&lt;/code&gt;)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Portable Configuration&lt;/strong&gt;: Configuration files are automatically loaded from the home and root directories. See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration"&gt;CONFIGURATION&lt;/a&gt; for details&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Output template improvements&lt;/strong&gt;: Output templates can now have date-time formatting, numeric offsets, object traversal etc. See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template"&gt;output template&lt;/a&gt; for details. Even more advanced operations can also be done with the help of &lt;code&gt;--parse-metadata&lt;/code&gt; and &lt;code&gt;--replace-in-metadata&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Other new options&lt;/strong&gt;: Many new options have been added such as &lt;code&gt;--alias&lt;/code&gt;, &lt;code&gt;--print&lt;/code&gt;, &lt;code&gt;--concat-playlist&lt;/code&gt;, &lt;code&gt;--wait-for-video&lt;/code&gt;, &lt;code&gt;--retry-sleep&lt;/code&gt;, &lt;code&gt;--sleep-requests&lt;/code&gt;, &lt;code&gt;--convert-thumbnails&lt;/code&gt;, &lt;code&gt;--force-download-archive&lt;/code&gt;, &lt;code&gt;--force-overwrites&lt;/code&gt;, &lt;code&gt;--break-match-filters&lt;/code&gt; etc&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Improvements&lt;/strong&gt;: Regex and other operators in &lt;code&gt;--format&lt;/code&gt;/&lt;code&gt;--match-filters&lt;/code&gt;, multiple &lt;code&gt;--postprocessor-args&lt;/code&gt; and &lt;code&gt;--downloader-args&lt;/code&gt;, faster archive checking, more &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#format-selection"&gt;format selection options&lt;/a&gt;, merge multi-video/audio, multiple &lt;code&gt;--config-locations&lt;/code&gt;, &lt;code&gt;--exec&lt;/code&gt; at different stages, etc&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Plugins&lt;/strong&gt;: Extractors and PostProcessors can be loaded from an external file. See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#plugins"&gt;plugins&lt;/a&gt; for details&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Self updater&lt;/strong&gt;: The releases can be updated using &lt;code&gt;yt-dlp -U&lt;/code&gt;, and downgraded using &lt;code&gt;--update-to&lt;/code&gt; if required&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Automated builds&lt;/strong&gt;: &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#update-channels"&gt;Nightly/master builds&lt;/a&gt; can be used with &lt;code&gt;--update-to nightly&lt;/code&gt; and &lt;code&gt;--update-to master&lt;/code&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/Changelog.md"&gt;changelog&lt;/a&gt; or &lt;a href="https://github.com/yt-dlp/yt-dlp/commits"&gt;commits&lt;/a&gt; for the full list of changes&lt;/p&gt; 
&lt;p&gt;Features marked with a &lt;strong&gt;*&lt;/strong&gt; have been back-ported to youtube-dl&lt;/p&gt; 
&lt;h3&gt;Differences in default behavior&lt;/h3&gt; 
&lt;p&gt;Some of yt-dlp's default options are different from that of youtube-dl and youtube-dlc:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;yt-dlp supports only &lt;a href="##" title="Windows 8"&gt;Python 3.9+&lt;/a&gt;, and will remove support for more versions as they &lt;a href="https://devguide.python.org/versions/#python-release-cycle"&gt;become EOL&lt;/a&gt;; while &lt;a href="https://github.com/ytdl-org/youtube-dl/issues/30568#issue-1118238743"&gt;youtube-dl still supports Python 2.6+ and 3.2+&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;The options &lt;code&gt;--auto-number&lt;/code&gt; (&lt;code&gt;-A&lt;/code&gt;), &lt;code&gt;--title&lt;/code&gt; (&lt;code&gt;-t&lt;/code&gt;) and &lt;code&gt;--literal&lt;/code&gt; (&lt;code&gt;-l&lt;/code&gt;), no longer work. See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#Removed"&gt;removed options&lt;/a&gt; for details&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;avconv&lt;/code&gt; is not supported as an alternative to &lt;code&gt;ffmpeg&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;yt-dlp stores config files in slightly different locations to youtube-dl. See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#configuration"&gt;CONFIGURATION&lt;/a&gt; for a list of correct locations&lt;/li&gt; 
 &lt;li&gt;The default &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#output-template"&gt;output template&lt;/a&gt; is &lt;code&gt;%(title)s [%(id)s].%(ext)s&lt;/code&gt;. There is no real reason for this change. This was changed before yt-dlp was ever made public and now there are no plans to change it back to &lt;code&gt;%(title)s-%(id)s.%(ext)s&lt;/code&gt;. Instead, you may use &lt;code&gt;--compat-options filename&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;The default &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#sorting-formats"&gt;format sorting&lt;/a&gt; is different from youtube-dl and prefers higher resolution and better codecs rather than higher bitrates. You can use the &lt;code&gt;--format-sort&lt;/code&gt; option to change this to any order you prefer, or use &lt;code&gt;--compat-options format-sort&lt;/code&gt; to use youtube-dl's sorting order. Older versions of yt-dlp preferred VP9 due to its broader compatibility; you can use &lt;code&gt;--compat-options prefer-vp9-sort&lt;/code&gt; to revert to that format sorting preference. These two compat options cannot be used together&lt;/li&gt; 
 &lt;li&gt;The default format selector is &lt;code&gt;bv*+ba/b&lt;/code&gt;. This means that if a combined video + audio format that is better than the best video-only format is found, the former will be preferred. Use &lt;code&gt;-f bv+ba/b&lt;/code&gt; or &lt;code&gt;--compat-options format-spec&lt;/code&gt; to revert this&lt;/li&gt; 
 &lt;li&gt;Unlike youtube-dlc, yt-dlp does not allow merging multiple audio/video streams into one file by default (since this conflicts with the use of &lt;code&gt;-f bv*+ba&lt;/code&gt;). If needed, this feature must be enabled using &lt;code&gt;--audio-multistreams&lt;/code&gt; and &lt;code&gt;--video-multistreams&lt;/code&gt;. You can also use &lt;code&gt;--compat-options multistreams&lt;/code&gt; to enable both&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--no-abort-on-error&lt;/code&gt; is enabled by default. Use &lt;code&gt;--abort-on-error&lt;/code&gt; or &lt;code&gt;--compat-options abort-on-error&lt;/code&gt; to abort on errors instead&lt;/li&gt; 
 &lt;li&gt;When writing metadata files such as thumbnails, description or infojson, the same information (if available) is also written for playlists. Use &lt;code&gt;--no-write-playlist-metafiles&lt;/code&gt; or &lt;code&gt;--compat-options no-playlist-metafiles&lt;/code&gt; to not write these files&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--add-metadata&lt;/code&gt; attaches the &lt;code&gt;infojson&lt;/code&gt; to &lt;code&gt;mkv&lt;/code&gt; files in addition to writing the metadata when used with &lt;code&gt;--write-info-json&lt;/code&gt;. Use &lt;code&gt;--no-embed-info-json&lt;/code&gt; or &lt;code&gt;--compat-options no-attach-info-json&lt;/code&gt; to revert this&lt;/li&gt; 
 &lt;li&gt;Some metadata are embedded into different fields when using &lt;code&gt;--add-metadata&lt;/code&gt; as compared to youtube-dl. Most notably, &lt;code&gt;comment&lt;/code&gt; field contains the &lt;code&gt;webpage_url&lt;/code&gt; and &lt;code&gt;synopsis&lt;/code&gt; contains the &lt;code&gt;description&lt;/code&gt;. You can &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/#modifying-metadata"&gt;use &lt;code&gt;--parse-metadata&lt;/code&gt;&lt;/a&gt; to modify this to your liking or use &lt;code&gt;--compat-options embed-metadata&lt;/code&gt; to revert this&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;playlist_index&lt;/code&gt; behaves differently when used with options like &lt;code&gt;--playlist-reverse&lt;/code&gt; and &lt;code&gt;--playlist-items&lt;/code&gt;. See &lt;a href="https://github.com/yt-dlp/yt-dlp/issues/302"&gt;#302&lt;/a&gt; for details. You can use &lt;code&gt;--compat-options playlist-index&lt;/code&gt; if you want to keep the earlier behavior&lt;/li&gt; 
 &lt;li&gt;The output of &lt;code&gt;-F&lt;/code&gt; is listed in a new format. Use &lt;code&gt;--compat-options list-formats&lt;/code&gt; to revert this&lt;/li&gt; 
 &lt;li&gt;Live chats (if available) are considered as subtitles. Use &lt;code&gt;--sub-langs all,-live_chat&lt;/code&gt; to download all subtitles except live chat. You can also use &lt;code&gt;--compat-options no-live-chat&lt;/code&gt; to prevent any live chat/danmaku from downloading&lt;/li&gt; 
 &lt;li&gt;YouTube channel URLs download all uploads of the channel. To download only the videos in a specific tab, pass the tab's URL. If the channel does not show the requested tab, an error will be raised. Also, &lt;code&gt;/live&lt;/code&gt; URLs raise an error if there are no live videos instead of silently downloading the entire channel. You may use &lt;code&gt;--compat-options no-youtube-channel-redirect&lt;/code&gt; to revert all these redirections&lt;/li&gt; 
 &lt;li&gt;Unavailable videos are also listed for YouTube playlists. Use &lt;code&gt;--compat-options no-youtube-unavailable-videos&lt;/code&gt; to remove this&lt;/li&gt; 
 &lt;li&gt;The upload dates extracted from YouTube are in UTC.&lt;/li&gt; 
 &lt;li&gt;If &lt;code&gt;ffmpeg&lt;/code&gt; is used as the downloader, the downloading and merging of formats happen in a single step when possible. Use &lt;code&gt;--compat-options no-direct-merge&lt;/code&gt; to revert this&lt;/li&gt; 
 &lt;li&gt;Thumbnail embedding in &lt;code&gt;mp4&lt;/code&gt; is done with mutagen if possible. Use &lt;code&gt;--compat-options embed-thumbnail-atomicparsley&lt;/code&gt; to force the use of AtomicParsley instead&lt;/li&gt; 
 &lt;li&gt;Some internal metadata such as filenames are removed by default from the infojson. Use &lt;code&gt;--no-clean-infojson&lt;/code&gt; or &lt;code&gt;--compat-options no-clean-infojson&lt;/code&gt; to revert this&lt;/li&gt; 
 &lt;li&gt;When &lt;code&gt;--embed-subs&lt;/code&gt; and &lt;code&gt;--write-subs&lt;/code&gt; are used together, the subtitles are written to disk and also embedded in the media file. You can use just &lt;code&gt;--embed-subs&lt;/code&gt; to embed the subs and automatically delete the separate file. See &lt;a href="https://github.com/yt-dlp/yt-dlp/issues/630#issuecomment-893659460"&gt;#630 (comment)&lt;/a&gt; for more info. &lt;code&gt;--compat-options no-keep-subs&lt;/code&gt; can be used to revert this&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;certifi&lt;/code&gt; will be used for SSL root certificates, if installed. If you want to use system certificates (e.g. self-signed), use &lt;code&gt;--compat-options no-certifi&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;yt-dlp's sanitization of invalid characters in filenames is different/smarter than in youtube-dl. You can use &lt;code&gt;--compat-options filename-sanitization&lt;/code&gt; to revert to youtube-dl's behavior&lt;/li&gt; 
 &lt;li&gt;&lt;del&gt;yt-dlp tries to parse the external downloader outputs into the standard progress output if possible (Currently implemented: &lt;a href="https://github.com/yt-dlp/yt-dlp/issues/5931"&gt;aria2c&lt;/a&gt;). You can use &lt;code&gt;--compat-options no-external-downloader-progress&lt;/code&gt; to get the downloader output as-is&lt;/del&gt;&lt;/li&gt; 
 &lt;li&gt;yt-dlp versions between 2021.09.01 and 2023.01.02 applies &lt;code&gt;--match-filters&lt;/code&gt; to nested playlists. This was an unintentional side-effect of &lt;a href="https://github.com/yt-dlp/yt-dlp/commit/8f18aca8717bb0dd49054555af8d386e5eda3a88"&gt;8f18ac&lt;/a&gt; and is fixed in &lt;a href="https://github.com/yt-dlp/yt-dlp/commit/d7b460d0e5fc710950582baed2e3fc616ed98a80"&gt;d7b460&lt;/a&gt;. Use &lt;code&gt;--compat-options playlist-match-filter&lt;/code&gt; to revert this&lt;/li&gt; 
 &lt;li&gt;yt-dlp versions between 2021.11.10 and 2023.06.21 estimated &lt;code&gt;filesize_approx&lt;/code&gt; values for fragmented/manifest formats. This was added for convenience in &lt;a href="https://github.com/yt-dlp/yt-dlp/commit/f2fe69c7b0d208bdb1f6292b4ae92bc1e1a7444a"&gt;f2fe69&lt;/a&gt;, but was reverted in &lt;a href="https://github.com/yt-dlp/yt-dlp/commit/0dff8e4d1e6e9fb938f4256ea9af7d81f42fd54f"&gt;0dff8e&lt;/a&gt; due to the potentially extreme inaccuracy of the estimated values. Use &lt;code&gt;--compat-options manifest-filesize-approx&lt;/code&gt; to keep extracting the estimated values&lt;/li&gt; 
 &lt;li&gt;yt-dlp uses modern http client backends such as &lt;code&gt;requests&lt;/code&gt;. Use &lt;code&gt;--compat-options prefer-legacy-http-handler&lt;/code&gt; to prefer the legacy http handler (&lt;code&gt;urllib&lt;/code&gt;) to be used for standard http requests.&lt;/li&gt; 
 &lt;li&gt;The sub-modules &lt;code&gt;swfinterp&lt;/code&gt;, &lt;code&gt;casefold&lt;/code&gt; are removed.&lt;/li&gt; 
 &lt;li&gt;Passing &lt;code&gt;--simulate&lt;/code&gt; (or calling &lt;code&gt;extract_info&lt;/code&gt; with &lt;code&gt;download=False&lt;/code&gt;) no longer alters the default format selection. See &lt;a href="https://github.com/yt-dlp/yt-dlp/issues/9843"&gt;#9843&lt;/a&gt; for details.&lt;/li&gt; 
 &lt;li&gt;yt-dlp no longer applies the server modified time to downloaded files by default. Use &lt;code&gt;--mtime&lt;/code&gt; or &lt;code&gt;--compat-options mtime-by-default&lt;/code&gt; to revert this.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For ease of use, a few more compat options are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--compat-options all&lt;/code&gt;: Use all compat options (&lt;strong&gt;Do NOT use this!&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--compat-options youtube-dl&lt;/code&gt;: Same as &lt;code&gt;--compat-options all,-multistreams,-playlist-match-filter,-manifest-filesize-approx,-allow-unsafe-ext,-prefer-vp9-sort&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--compat-options youtube-dlc&lt;/code&gt;: Same as &lt;code&gt;--compat-options all,-no-live-chat,-no-youtube-channel-redirect,-playlist-match-filter,-manifest-filesize-approx,-allow-unsafe-ext,-prefer-vp9-sort&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--compat-options 2021&lt;/code&gt;: Same as &lt;code&gt;--compat-options 2022,no-certifi,filename-sanitization&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--compat-options 2022&lt;/code&gt;: Same as &lt;code&gt;--compat-options 2023,playlist-match-filter,no-external-downloader-progress,prefer-legacy-http-handler,manifest-filesize-approx&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--compat-options 2023&lt;/code&gt;: Same as &lt;code&gt;--compat-options 2024,prefer-vp9-sort&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--compat-options 2024&lt;/code&gt;: Same as &lt;code&gt;--compat-options mtime-by-default&lt;/code&gt;. Use this to enable all future compat options&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The following compat options restore vulnerable behavior from before security patches:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;--compat-options allow-unsafe-ext&lt;/code&gt;: Allow files with any extension (including unsafe ones) to be downloaded (&lt;a href="https://github.com/yt-dlp/yt-dlp/security/advisories/GHSA-79w7-vh3h-8g4j"&gt;GHSA-79w7-vh3h-8g4j&lt;/a&gt;)&lt;/p&gt; 
  &lt;blockquote&gt; 
   &lt;p&gt;&lt;span&gt;⚠&lt;/span&gt; Only use if a valid file download is rejected because its extension is detected as uncommon&lt;/p&gt; 
   &lt;p&gt;&lt;strong&gt;This option can enable remote code execution! Consider &lt;a href="https://github.com/yt-dlp/yt-dlp/issues/new/choose"&gt;opening an issue&lt;/a&gt; instead!&lt;/strong&gt;&lt;/p&gt; 
  &lt;/blockquote&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Deprecated options&lt;/h3&gt; 
&lt;p&gt;These are all the deprecated options and the current alternative to achieve the same effect&lt;/p&gt; 
&lt;h4&gt;Almost redundant options&lt;/h4&gt; 
&lt;p&gt;While these options are almost the same as their new counterparts, there are some differences that prevents them being redundant&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-j, --dump-json                  --print "%()j"
-F, --list-formats               --print formats_table
--list-thumbnails                --print thumbnails_table --print playlist:thumbnails_table
--list-subs                      --print automatic_captions_table --print subtitles_table
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Redundant options&lt;/h4&gt; 
&lt;p&gt;While these options are redundant, they are still expected to be used due to their ease of use&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--get-description                --print description
--get-duration                   --print duration_string
--get-filename                   --print filename
--get-format                     --print format
--get-id                         --print id
--get-thumbnail                  --print thumbnail
-e, --get-title                  --print title
-g, --get-url                    --print urls
--match-title REGEX              --match-filters "title ~= (?i)REGEX"
--reject-title REGEX             --match-filters "title !~= (?i)REGEX"
--min-views COUNT                --match-filters "view_count &amp;gt;=? COUNT"
--max-views COUNT                --match-filters "view_count &amp;lt;=? COUNT"
--break-on-reject                Use --break-match-filters
--user-agent UA                  --add-headers "User-Agent:UA"
--referer URL                    --add-headers "Referer:URL"
--playlist-start NUMBER          -I NUMBER:
--playlist-end NUMBER            -I :NUMBER
--playlist-reverse               -I ::-1
--no-playlist-reverse            Default
--no-colors                      --color no_color
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Not recommended&lt;/h4&gt; 
&lt;p&gt;While these options still work, their use is not recommended since there are other alternatives to achieve the same&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--force-generic-extractor        --ies generic,default
--exec-before-download CMD       --exec "before_dl:CMD"
--no-exec-before-download        --no-exec
--all-formats                    -f all
--all-subs                       --sub-langs all --write-subs
--print-json                     -j --no-simulate
--autonumber-size NUMBER         Use string formatting, e.g. %(autonumber)03d
--autonumber-start NUMBER        Use internal field formatting like %(autonumber+NUMBER)s
--id                             -o "%(id)s.%(ext)s"
--metadata-from-title FORMAT     --parse-metadata "%(title)s:FORMAT"
--hls-prefer-native              --downloader "m3u8:native"
--hls-prefer-ffmpeg              --downloader "m3u8:ffmpeg"
--list-formats-old               --compat-options list-formats (Alias: --no-list-formats-as-table)
--list-formats-as-table          --compat-options -list-formats [Default] (Alias: --no-list-formats-old)
--youtube-skip-dash-manifest     --extractor-args "youtube:skip=dash" (Alias: --no-youtube-include-dash-manifest)
--youtube-skip-hls-manifest      --extractor-args "youtube:skip=hls" (Alias: --no-youtube-include-hls-manifest)
--youtube-include-dash-manifest  Default (Alias: --no-youtube-skip-dash-manifest)
--youtube-include-hls-manifest   Default (Alias: --no-youtube-skip-hls-manifest)
--geo-bypass                     --xff "default"
--no-geo-bypass                  --xff "never"
--geo-bypass-country CODE        --xff CODE
--geo-bypass-ip-block IP_BLOCK   --xff IP_BLOCK
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Developer options&lt;/h4&gt; 
&lt;p&gt;These options are not intended to be used by the end-user&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--test                           Download only part of video for testing extractors
--load-pages                     Load pages dumped by --write-pages
--youtube-print-sig-code         For testing youtube signatures
--allow-unplayable-formats       List unplayable formats also
--no-allow-unplayable-formats    Default
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Old aliases&lt;/h4&gt; 
&lt;p&gt;These are aliases that are no longer documented for various reasons&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--avconv-location                --ffmpeg-location
--clean-infojson                 --clean-info-json
--cn-verification-proxy URL      --geo-verification-proxy URL
--dump-headers                   --print-traffic
--dump-intermediate-pages        --dump-pages
--force-write-download-archive   --force-write-archive
--no-clean-infojson              --no-clean-info-json
--no-split-tracks                --no-split-chapters
--no-write-srt                   --no-write-subs
--prefer-unsecure                --prefer-insecure
--rate-limit RATE                --limit-rate RATE
--split-tracks                   --split-chapters
--srt-lang LANGS                 --sub-langs LANGS
--trim-file-names LENGTH         --trim-filenames LENGTH
--write-srt                      --write-subs
--yes-overwrites                 --force-overwrites
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Sponskrub Options&lt;/h4&gt; 
&lt;p&gt;Support for &lt;a href="https://github.com/faissaloo/SponSkrub"&gt;SponSkrub&lt;/a&gt; has been deprecated in favor of the &lt;code&gt;--sponsorblock&lt;/code&gt; options&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--sponskrub                      --sponsorblock-mark all
--no-sponskrub                   --no-sponsorblock
--sponskrub-cut                  --sponsorblock-remove all
--no-sponskrub-cut               --sponsorblock-remove -all
--sponskrub-force                Not applicable
--no-sponskrub-force             Not applicable
--sponskrub-location             Not applicable
--sponskrub-args                 Not applicable
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;No longer supported&lt;/h4&gt; 
&lt;p&gt;These options may no longer work as intended&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;--prefer-avconv                  avconv is not officially supported by yt-dlp (Alias: --no-prefer-ffmpeg)
--prefer-ffmpeg                  Default (Alias: --no-prefer-avconv)
-C, --call-home                  Not implemented
--no-call-home                   Default
--include-ads                    No longer supported
--no-include-ads                 Default
--write-annotations              No supported site has annotations now
--no-write-annotations           Default
--compat-options seperate-video-versions  No longer needed
--compat-options no-youtube-prefer-utc-upload-date  No longer supported
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Removed&lt;/h4&gt; 
&lt;p&gt;These options were deprecated since 2014 and have now been entirely removed&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;-A, --auto-number                -o "%(autonumber)s-%(id)s.%(ext)s"
-t, -l, --title, --literal       -o "%(title)s-%(id)s.%(ext)s"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;CONTRIBUTING&lt;/h1&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#contributing-to-yt-dlp"&gt;CONTRIBUTING.md&lt;/a&gt; for instructions on &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#opening-an-issue"&gt;Opening an Issue&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/yt-dlp/yt-dlp/master/CONTRIBUTING.md#developer-instructions"&gt;Contributing code to the project&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;WIKI&lt;/h1&gt; 
&lt;p&gt;See the &lt;a href="https://github.com/yt-dlp/yt-dlp/wiki"&gt;Wiki&lt;/a&gt; for more information&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>