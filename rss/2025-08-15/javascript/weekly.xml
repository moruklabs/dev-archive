<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Weekly Trending</title>
    <description>Weekly Trending of JavaScript in GitHub</description>
    <pubDate>Thu, 14 Aug 2025 01:47:06 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>FreeTubeApp/FreeTube</title>
      <link>https://github.com/FreeTubeApp/FreeTube</link>
      <description>&lt;p&gt;An Open Source YouTube app for privacy&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img alt="" src="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/_icons/logoColor.svg?sanitize=true" width="500" align="center" /&gt; &lt;/p&gt; 
&lt;p&gt;FreeTube is an open source desktop YouTube player built with privacy in mind. Use YouTube without advertisements and prevent Google from tracking you with their cookies and JavaScript. Available for Windows (10 and later), Mac (macOS 11 and later) &amp;amp; Linux thanks to Electron.&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;Download FreeTube&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml"&gt; &lt;img alt="Build status" src="https://github.com/FreeTubeApp/FreeTube/actions/workflows/build.yml/badge.svg?branch=development" /&gt; &lt;/a&gt; &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt;&lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#screenshots"&gt;Screenshots&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#how-does-it-work"&gt;How does it work?&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#features"&gt;Features&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#download-links"&gt;Download Links&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contributing"&gt;Contributing&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#localization"&gt;Localization&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#contact"&gt;Contact&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#donate"&gt;Donate&lt;/a&gt; • &lt;a href="https://raw.githubusercontent.com/FreeTubeApp/FreeTube/development/#license"&gt;License&lt;/a&gt;&lt;/p&gt; 
&lt;p align="center"&gt;&lt;a href="https://freetubeapp.io/"&gt;Website&lt;/a&gt; • &lt;a href="https://blog.freetubeapp.io/"&gt;Blog&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/"&gt;Documentation&lt;/a&gt; • &lt;a href="https://docs.freetubeapp.io/faq/"&gt;FAQ&lt;/a&gt; • &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] FreeTube is currently in Beta. While it should work well for most users, there are still bugs and missing features that need to be addressed.&lt;/p&gt; 
 &lt;p&gt;If you have an idea or if you found a bug, please submit a &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues/new/choose"&gt;GitHub issue&lt;/a&gt; so that we can track it. Please &lt;a href="https://github.com/FreeTubeApp/FreeTube/issues?q=is%3Aissue+sort%3Arelevance-desc"&gt;search the existing issues&lt;/a&gt; before submitting to prevent duplicates!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;The main FreeTube window&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube1.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Watching a video&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube2.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Settings&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/FreeTubeApp/FreeTubeApp.io/master/src/images/FreeTube3.png" alt="" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;How does it work?&lt;/h2&gt; 
&lt;p&gt;FreeTube uses a built in extractor to grab and serve data / videos. The &lt;a href="https://github.com/iv-org/invidious"&gt;Invidious API&lt;/a&gt; can also optionally be used. FreeTube does not use any official APIs to obtain data. While YouTube can still see your video requests, it can no longer track you using cookies or JavaScript. Your subscriptions, playlists and history are stored locally on your computer and never sent out.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT]&lt;br /&gt; Using a VPN or Tor is highly recommended to hide your IP while using FreeTube.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Watch videos without ads&lt;/li&gt; 
 &lt;li&gt;Use YouTube without Google tracking you using cookies and JavaScript&lt;/li&gt; 
 &lt;li&gt;Two extractor APIs to choose from (Built in or Invidious)&lt;/li&gt; 
 &lt;li&gt;Subscribe to channels without an account&lt;/li&gt; 
 &lt;li&gt;Connect to an externally setup proxy such as Tor&lt;/li&gt; 
 &lt;li&gt;View and search your local subscriptions, playlists and history&lt;/li&gt; 
 &lt;li&gt;Organize your subscriptions into "Profiles" to create a more focused feed&lt;/li&gt; 
 &lt;li&gt;Export &amp;amp; import subscriptions&lt;/li&gt; 
 &lt;li&gt;Youtube Trending&lt;/li&gt; 
 &lt;li&gt;Youtube Chapters&lt;/li&gt; 
 &lt;li&gt;Most popular videos page based on the set Invidious instance&lt;/li&gt; 
 &lt;li&gt;SponsorBlock&lt;/li&gt; 
 &lt;li&gt;DeArrow&lt;/li&gt; 
 &lt;li&gt;Open videos from your browser directly into FreeTube (with extension)&lt;/li&gt; 
 &lt;li&gt;Watch videos using an external player&lt;/li&gt; 
 &lt;li&gt;Full Theme support&lt;/li&gt; 
 &lt;li&gt;Make a screenshot of a video&lt;/li&gt; 
 &lt;li&gt;Multiple windows&lt;/li&gt; 
 &lt;li&gt;Mini Player (Picture-in-Picture)&lt;/li&gt; 
 &lt;li&gt;Keyboard shortcuts&lt;/li&gt; 
 &lt;li&gt;Option to show only family friendly content&lt;/li&gt; 
 &lt;li&gt;Show/hide functionality or elements within the app using the distraction free settings&lt;/li&gt; 
 &lt;li&gt;View channel posts&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Browser Extensions&lt;/h3&gt; 
&lt;p&gt;The following extensions open YouTube links directly in FreeTube:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://libredirect.github.io/"&gt;LibRedirect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MStankiewiczOfficial/RedirectTube"&gt;RedirectTube&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;LibRedirect automatically redirect YouTube links to FreeTube.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] To ensure proper functionality, select FreeTube as Frontend in the Services settings of the extension.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;RedirectTube, doesn’t automatically open YouTube links in FreeTube. Instead, it adds buttons to the toolbar and context menu, which you can click to open videos in FreeTube manually.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Download LibRedirect from &lt;a href="https://addons.mozilla.org/firefox/addon/libredirect/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers) or &lt;a href="https://libredirect.github.io/download_chromium.html"&gt;developer's website&lt;/a&gt; (for Chrome and Chromium-based browsers).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Download RedirectTube from &lt;a href="https://addons.mozilla.org/firefox/addon/redirecttube/"&gt;Mozilla Add-ons&lt;/a&gt; (for Firefox based-browsers).&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] These extensions do not work on Linux portable builds!&lt;/p&gt; 
 &lt;p&gt;If you have issues with the extension working with FreeTube, please create an issue in this repository instead of the extension repository.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Download Links&lt;/h2&gt; 
&lt;h3&gt;Official Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!CAUTION] FreeTube is only supported on Windows 10 and later, macOS 11 and above, and various Linux distributions. Installing it on unsupported systems may result in unexpected issues.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/FreeTubeApp/FreeTube/releases"&gt;GitHub Releases&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://freetubeapp.io/#download"&gt;FreeTube Website&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Flatpak on Flathub: &lt;a href="https://flathub.org/apps/details/io.freetubeapp.FreeTube"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Automated Builds (Nightly / Weekly)&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Use these builds at your own risk. These are pre-release versions and are only intended for people that want to test changes early and are willing to accept that things could break from one build to another.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Builds are automatically created from changes to our development branch via &lt;a href="https://github.com/FreeTubeApp/FreeTube/actions?query=workflow%3ABuild"&gt;GitHub Actions&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The first build with a green check mark is the latest build.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You will need to have a GitHub account to download these builds.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Unofficial Downloads&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] These builds are maintained by the community. While they should be safe, download at your own risk. There may be issues with using these versus the official builds. Any issues specific with these builds should be sent to their respective maintainer. Make sure u always try an &lt;a href="https://github.com/freetubeapp/freetube/#official-downloads"&gt;official download&lt;/a&gt; before reporting your issue to us!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Arch User Repository (AUR): &lt;a href="https://aur.archlinux.org/packages/freetube-bin/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Chocolatey: &lt;a href="https://chocolatey.org/packages/freetube/"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;FreeTubeAndroid (FreeTube port for Android and PWA): &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/MarmadileManteater/FreeTubeAndroid"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Homebrew Formulae (Mac only): &lt;a href="https://formulae.brew.sh/cask/freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;makedeb Package Repository (MPR): &lt;a href="https://mpr.makedeb.org/packages/freetube-bin"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Nix Packages: &lt;a href="https://search.nixos.org/packages?query=freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;PortableApps (Windows Only): &lt;a href="https://github.com/rddim/FreeTubePortable/releases"&gt;Download&lt;/a&gt; and &lt;a href="https://github.com/rddim/FreeTubePortable"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Scoop (Windows Only): &lt;a href="https://github.com/ScoopInstaller/Scoop"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Snap: &lt;a href="https://snapcraft.io/freetube"&gt;Download&lt;/a&gt; and &lt;a href="https://git.launchpad.net/freetube"&gt;Source Code&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;WAPT: &lt;a href="https://wapt.tranquil.it/store/tis-freetube"&gt;Download&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Windows Package Manager (winget): &lt;a href="https://docs.microsoft.com/en-us/windows/package-manager/winget/"&gt;Usage&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Thank you very much to the &lt;a href="https://docs.freetubeapp.io/credits/"&gt;People and Projects&lt;/a&gt; that make FreeTube possible!&lt;/p&gt; 
&lt;p&gt;If you like to get your hands dirty and want to contribute, we would love to have your help. Send a pull request and someone will review your code.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Please follow the &lt;a href="https://github.com/FreeTubeApp/FreeTube/raw/development/CONTRIBUTING.md"&gt;Contribution Guidelines&lt;/a&gt; before sending your pull request.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt; &lt;img src="https://hosted.weblate.org/widgets/free-tube/-/287x66-grey.png" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;p&gt;We are actively looking for translations! We use &lt;a href="https://hosted.weblate.org/engage/free-tube/"&gt;Weblate&lt;/a&gt; to make it easy for translators to get involved. Click on the badge above to learn how to get involved.&lt;/p&gt; 
&lt;p&gt;For the Linux Flatpak, the desktop entry comment string can be translated at our &lt;a href="https://github.com/flathub/io.freetubeapp.FreeTube/raw/master/io.freetubeapp.FreeTube.desktop"&gt;Flatpak repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;If you ever have any questions, feel free to ask it on our &lt;a href="https://github.com/FreeTubeApp/FreeTube/discussions"&gt;Discussions&lt;/a&gt; page. Alternatively, you can email us at &lt;a href="mailto:FreeTubeApp@protonmail.com"&gt;FreeTubeApp@protonmail.com&lt;/a&gt; or you can join our &lt;a href="https://matrix.to/#/#freetube:matrix.org"&gt;Matrix Room&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Don't forget to check out the &lt;a href="https://docs.freetubeapp.io/community/matrix/"&gt;rules&lt;/a&gt; before joining.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you enjoy using FreeTube, you're welcome to leave a donation using the following method.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Bitcoin Address: &lt;code&gt;1Lih7Ho5gnxb1CwPD4o59ss78pwo2T91eS&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;While your donations are much appreciated, only donate if you really want to. Donations are used for keeping the website up and running and eventual code signing costs.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you are using the Invidious API then we recommend that you donate to the instance that you use. You can also donate to the &lt;a href="https://invidious.io/donate/"&gt;Invidious team&lt;/a&gt; or the &lt;a href="https://github.com/sponsors/LuanRT"&gt;Local API developer&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;&lt;img src="https://www.gnu.org/graphics/agplv3-155x51.png" alt="GNU AGPLv3 Image" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;FreeTube is Free Software: You can use, study share and improve it at your will. Specifically you can redistribute and/or modify it under the terms of the &lt;a href="https://www.gnu.org/licenses/agpl-3.0.html"&gt;GNU Affero General Public License&lt;/a&gt; as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>louislam/uptime-kuma</title>
      <link>https://github.com/louislam/uptime-kuma</link>
      <description>&lt;p&gt;A fancy self-hosted monitoring tool&lt;/p&gt;&lt;hr&gt;&lt;div align="center" width="100%"&gt; 
 &lt;img src="https://raw.githubusercontent.com/louislam/uptime-kuma/master/public/icon.svg?sanitize=true" width="128" alt="" /&gt; 
&lt;/div&gt; 
&lt;h1&gt;Uptime Kuma&lt;/h1&gt; 
&lt;p&gt;Uptime Kuma is an easy-to-use self-hosted monitoring tool.&lt;/p&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/stars/louislam/uptime-kuma?style=flat" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/pulls/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://hub.docker.com/r/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/docker/v/louislam/uptime-kuma/latest?label=docker%20image%20ver." /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://github.com/louislam/uptime-kuma"&gt;&lt;img src="https://img.shields.io/github/last-commit/louislam/uptime-kuma" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://opencollective.com/uptime-kuma"&gt;&lt;img src="https://opencollective.com/uptime-kuma/total/badge.svg?label=Open%20Collective%20Backers&amp;amp;color=brightgreen" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/louislam"&gt;&lt;img src="https://img.shields.io/github/sponsors/louislam?label=GitHub%20Sponsors" alt="GitHub Sponsors" /&gt;&lt;/a&gt; &lt;a href="https://weblate.kuma.pet/projects/uptime-kuma/uptime-kuma/"&gt; &lt;img src="https://weblate.kuma.pet/widgets/uptime-kuma/-/svg-badge.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/212262296-e6205815-ad62-488c-83ec-a5b0d0689f7c.jpg" width="700" alt="" /&gt; 
&lt;h2&gt;🥔 Live Demo&lt;/h2&gt; 
&lt;p&gt;Try it!&lt;/p&gt; 
&lt;p&gt;Demo Server (Location: Frankfurt - Germany): &lt;a href="https://demo.kuma.pet/start-demo"&gt;https://demo.kuma.pet/start-demo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;It is a temporary live demo, all data will be deleted after 10 minutes. Sponsored by &lt;a href="https://github.com/louislam/uptime-kuma#%EF%B8%8F-sponsors"&gt;Uptime Kuma Sponsors&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;⭐ Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Monitoring uptime for HTTP(s) / TCP / HTTP(s) Keyword / HTTP(s) Json Query / Ping / DNS Record / Push / Steam Game Server / Docker Containers&lt;/li&gt; 
 &lt;li&gt;Fancy, Reactive, Fast UI/UX&lt;/li&gt; 
 &lt;li&gt;Notifications via Telegram, Discord, Gotify, Slack, Pushover, Email (SMTP), and &lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/components/notifications"&gt;90+ notification services, click here for the full list&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;20-second intervals&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/tree/master/src/lang"&gt;Multi Languages&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Multiple status pages&lt;/li&gt; 
 &lt;li&gt;Map status pages to specific domains&lt;/li&gt; 
 &lt;li&gt;Ping chart&lt;/li&gt; 
 &lt;li&gt;Certificate info&lt;/li&gt; 
 &lt;li&gt;Proxy support&lt;/li&gt; 
 &lt;li&gt;2FA support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔧 How to Install&lt;/h2&gt; 
&lt;h3&gt;🐳 Docker&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://0.0.0.0:3001"&gt;http://0.0.0.0:3001&lt;/a&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] File Systems like &lt;strong&gt;NFS&lt;/strong&gt; (Network File System) are &lt;strong&gt;NOT&lt;/strong&gt; supported. Please map to a local directory or volume.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you want to limit exposure to localhost (without exposing port for other users or to use a &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Reverse-Proxy"&gt;reverse proxy&lt;/a&gt;), you can expose the port like this:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --restart=always -p 127.0.0.1:3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1
&lt;/code&gt;&lt;/pre&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;💪🏻 Non-Docker&lt;/h3&gt; 
&lt;p&gt;Requirements:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Platform 
  &lt;ul&gt; 
   &lt;li&gt;✅ Major Linux distros such as Debian, Ubuntu, CentOS, Fedora and ArchLinux etc.&lt;/li&gt; 
   &lt;li&gt;✅ Windows 10 (x64), Windows Server 2012 R2 (x64) or higher&lt;/li&gt; 
   &lt;li&gt;❌ FreeBSD / OpenBSD / NetBSD&lt;/li&gt; 
   &lt;li&gt;❌ Replit / Heroku&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;Node.js&lt;/a&gt; 18 / 20.4&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.npmjs.com/cli/"&gt;npm&lt;/a&gt; 9&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://git-scm.com/downloads"&gt;Git&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://pm2.keymetrics.io/"&gt;pm2&lt;/a&gt; - For running Uptime Kuma in the background&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/louislam/uptime-kuma.git
cd uptime-kuma
npm run setup

# Option 1. Try it
node server/server.js

# (Recommended) Option 2. Run in the background using PM2
# Install PM2 if you don't have it:
npm install pm2 -g &amp;amp;&amp;amp; pm2 install pm2-logrotate

# Start Server
pm2 start server/server.js --name uptime-kuma
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Uptime Kuma is now running on &lt;a href="http://localhost:3001"&gt;http://localhost:3001&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;More useful PM2 Commands&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# If you want to see the current console output
pm2 monit

# If you want to add it to startup
pm2 save &amp;amp;&amp;amp; pm2 startup
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Advanced Installation&lt;/h3&gt; 
&lt;p&gt;If you need more options or need to browse via a reverse proxy, please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%94%A7-How-to-Install&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆙 How to Update&lt;/h2&gt; 
&lt;p&gt;Please read:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update"&gt;https://github.com/louislam/uptime-kuma/wiki/%F0%9F%86%99-How-to-Update&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;🆕 What's Next?&lt;/h2&gt; 
&lt;p&gt;I will assign requests/issues to the next milestone.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/louislam/uptime-kuma/milestones"&gt;https://github.com/louislam/uptime-kuma/milestones&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;❤️ Sponsors&lt;/h2&gt; 
&lt;p&gt;Thank you so much! (GitHub Sponsors will be updated manually. OpenCollective sponsors will be updated automatically, the list will be cached by GitHub though. It may need some time to be updated)&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/sponsors?v=6" alt /&gt; 
&lt;h2&gt;🖼 More Screenshots&lt;/h2&gt; 
&lt;p&gt;Light Mode:&lt;/p&gt; 
&lt;img src="https://uptime.kuma.pet/img/light.jpg" width="512" alt="" /&gt; 
&lt;p&gt;Status Page:&lt;/p&gt; 
&lt;img src="https://user-images.githubusercontent.com/1336778/134628766-a3fe0981-0926-4285-ab46-891a21c3e4cb.png" width="512" alt="" /&gt; 
&lt;p&gt;Settings Page:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/2.jpg" width="400" alt="" /&gt; 
&lt;p&gt;Telegram Notification Sample:&lt;/p&gt; 
&lt;img src="https://louislam.net/uptimekuma/3.jpg" width="400" alt="" /&gt; 
&lt;h2&gt;Motivation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;I was looking for a self-hosted monitoring tool like "Uptime Robot", but it is hard to find a suitable one. One of the closest ones is statping. Unfortunately, it is not stable and no longer maintained.&lt;/li&gt; 
 &lt;li&gt;Wanted to build a fancy UI.&lt;/li&gt; 
 &lt;li&gt;Learn Vue 3 and vite.js.&lt;/li&gt; 
 &lt;li&gt;Show the power of Bootstrap 5.&lt;/li&gt; 
 &lt;li&gt;Try to use WebSocket with SPA instead of a REST API.&lt;/li&gt; 
 &lt;li&gt;Deploy my first Docker image to Docker Hub.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you love this project, please consider giving it a ⭐.&lt;/p&gt; 
&lt;h2&gt;🗣️ Discussion / Ask for Help&lt;/h2&gt; 
&lt;p&gt;⚠️ For any general or technical questions, please don't send me an email, as I am unable to provide support in that manner. I will not respond if you ask questions there.&lt;/p&gt; 
&lt;p&gt;I recommend using Google, GitHub Issues, or Uptime Kuma's subreddit for finding answers to your question. If you cannot find the information you need, feel free to ask:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;GitHub Issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/UptimeKuma/"&gt;Subreddit (r/UptimeKuma)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;My Reddit account: &lt;a href="https://reddit.com/u/louislamlam"&gt;u/louislamlam&lt;/a&gt; You can mention me if you ask a question on the subreddit.&lt;/p&gt; 
&lt;h2&gt;Contributions&lt;/h2&gt; 
&lt;h3&gt;Create Pull Requests&lt;/h3&gt; 
&lt;p&gt;We DO NOT accept all types of pull requests and do not want to waste your time. Please be sure that you have read and follow pull request rules: &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma"&gt;CONTRIBUTING.md#can-i-create-a-pull-request-for-uptime-kuma&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Pull Requests&lt;/h3&gt; 
&lt;p&gt;There are a lot of pull requests right now, but I don't have time to test them all.&lt;/p&gt; 
&lt;p&gt;If you want to help, you can check this: &lt;a href="https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests"&gt;https://github.com/louislam/uptime-kuma/wiki/Test-Pull-Requests&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Test Beta Version&lt;/h3&gt; 
&lt;p&gt;Check out the latest beta release here: &lt;a href="https://github.com/louislam/uptime-kuma/releases"&gt;https://github.com/louislam/uptime-kuma/releases&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Bug Reports / Feature Requests&lt;/h3&gt; 
&lt;p&gt;If you want to report a bug or request a new feature, feel free to open a &lt;a href="https://github.com/louislam/uptime-kuma/issues"&gt;new issue&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Translations&lt;/h3&gt; 
&lt;p&gt;If you want to translate Uptime Kuma into your language, please visit &lt;a href="https://github.com/louislam/uptime-kuma/raw/master/src/lang/README.md"&gt;Weblate Readme&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Spelling &amp;amp; Grammar&lt;/h3&gt; 
&lt;p&gt;Feel free to correct the grammar in the documentation or code. My mother language is not English and my grammar is not that great.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>microsoft/Web-Dev-For-Beginners</title>
      <link>https://github.com/microsoft/Web-Dev-For-Beginners</link>
      <description>&lt;p&gt;24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/graphs/contributors/"&gt;&lt;img src="https://img.shields.io/github/contributors/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/issues/"&gt;&lt;img src="https://img.shields.io/github/issues/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub issues" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/pulls/"&gt;&lt;img src="https://img.shields.io/github/issues-pr/microsoft/Web-Dev-For-Beginners.svg?sanitize=true" alt="GitHub pull-requests" /&gt;&lt;/a&gt; &lt;a href="http://makeapullrequest.com"&gt;&lt;img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/watchers/"&gt;&lt;img src="https://img.shields.io/github/watchers/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Watch&amp;amp;maxAge=2592000" alt="GitHub watchers" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/network/"&gt;&lt;img src="https://img.shields.io/github/forks/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Fork&amp;amp;maxAge=2592000" alt="GitHub forks" /&gt;&lt;/a&gt; &lt;a href="https://GitHub.com/microsoft/Web-Dev-For-Beginners/stargazers/"&gt;&lt;img src="https://img.shields.io/github/stars/microsoft/Web-Dev-For-Beginners.svg?style=social&amp;amp;label=Star&amp;amp;maxAge=2592000" alt="GitHub stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/zxKYvhSnVp?WT.mc_id=academic-000002-leestott"&gt;&lt;img src="https://dcbadge.vercel.app/api/server/ByRwuEEgH4" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://open.vscode.dev/microsoft/Web-Dev-For-Beginners"&gt;&lt;img src="https://img.shields.io/static/v1?logo=visualstudiocode&amp;amp;label=&amp;amp;message=Open%20in%20Visual%20Studio%20Code&amp;amp;labelColor=2c2c32&amp;amp;color=007acc&amp;amp;logoColor=007acc" alt="Open in Visual Studio Code" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Web Development for Beginners - A Curriculum&lt;/h1&gt; 
&lt;p&gt;Learn the fundamentals of web development with our 12-week comprehensive course by Microsoft Cloud Advocates. Each of the 24 lessons dives into JavaScript, CSS, and HTML through hands-on projects like terrariums, browser extensions, and space games. Engage with quizzes, discussions, and practical assignments. Enhance your skills and optimize your knowledge retention with our effective project-based pedagogy. Start your coding journey today!&lt;/p&gt; 
&lt;h4&gt;🧑‍🎓 &lt;em&gt;Are you a student?&lt;/em&gt;&lt;/h4&gt; 
&lt;p&gt;Visit &lt;a href="https://docs.microsoft.com/learn/student-hub/?WT.mc_id=academic-77807-sagibbon"&gt;&lt;strong&gt;Student Hub page&lt;/strong&gt;&lt;/a&gt; where you will find beginner resources, Student packs and even ways to get a free certificate voucher. This is the page you want to bookmark and check from time to time as we switch out content monthly.&lt;/p&gt; 
&lt;h3&gt;📣 Announcement - &lt;em&gt;New Curriculum&lt;/em&gt; on Generative AI for JavaScript was just released&lt;/h3&gt; 
&lt;p&gt;Don't miss our new Generative AI curriculum!&lt;/p&gt; 
&lt;p&gt;Visit &lt;a href="https://aka.ms/genai-js-course"&gt;https://aka.ms/genai-js-course&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;div&gt; 
 &lt;img src="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/background.png" width="600px" /&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;Lessons covering everything from basics to RAG.&lt;/li&gt; 
 &lt;li&gt;Interact with historical characters using GenAI and our companion app.&lt;/li&gt; 
 &lt;li&gt;Fun and engaging narrative, you'll be time traveling!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;img src="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/character.png" width="600px" /&gt; 
&lt;/div&gt; 
&lt;p&gt;Each lesson includes an assignment to complete, a knowledge check and a challenge to guide you on learning topics like:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Prompting and prompt engineering&lt;/li&gt; 
 &lt;li&gt;Text and image app generation&lt;/li&gt; 
 &lt;li&gt;Search apps&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Visit &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/%5Bhttps://aka.ms/genai-js-course"&gt;https://aka.ms/genai-js-course&lt;/a&gt; to get started!&lt;/p&gt; 
&lt;h2&gt;🌱 Getting Started&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Teachers&lt;/strong&gt;, we have &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/for-teachers.md"&gt;included some suggestions&lt;/a&gt; on how to use this curriculum. We'd love your feedback &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/discussions/categories/teacher-corner"&gt;in our discussion forum&lt;/a&gt;!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://aka.ms/student-page/?WT.mc_id=academic-77807-sagibbon"&gt;Learners&lt;/a&gt;&lt;/strong&gt;, for each lesson, start with a pre-lecture quiz and follow through with reading the lecture material, completing the various activities and check your understanding with the post-lecture quiz.&lt;/p&gt; 
&lt;p&gt;To enhance your learning experience, connect with your peers to work on the projects together! Discussions are encouraged in our &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/discussions"&gt;discussion forum&lt;/a&gt; where our team of moderators will be available to answer your questions.&lt;/p&gt; 
&lt;p&gt;To further your education, we highly recommend exploring &lt;a href="https://learn.microsoft.com/users/wirelesslife/collections/p1ddcy5jwy0jkm?WT.mc_id=academic-77807-sagibbon"&gt;Microsoft Learn&lt;/a&gt; for additional study materials.&lt;/p&gt; 
&lt;h3&gt;📋 Setting up your environment&lt;/h3&gt; 
&lt;p&gt;This curriculum has a development environment ready to go! As you get started you can choose to run the curriculum in a &lt;a href="https://github.com/features/codespaces/"&gt;Codespace&lt;/a&gt; (&lt;em&gt;a browser-based, no installs needed environment&lt;/em&gt;), or locally on your computer using a text editor such as &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;Visual Studio Code&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Create your repository&lt;/h4&gt; 
&lt;p&gt;For you to easily save your work, it is recommended that you create your own copy of this repository. You can do this by clicking the &lt;strong&gt;Use this template&lt;/strong&gt; button at the top of the page. This will create a new repository in your GitHub account with a copy of the curriculum.&lt;/p&gt; 
&lt;p&gt;Follow these steps:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Fork the Repository&lt;/strong&gt;: Click on the "Fork" button at the top-right corner of this page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Clone the Repository&lt;/strong&gt;: &lt;code&gt;git clone https://github.com/microsoft/Web-Dev-For-Beginners.git&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h4&gt;Running the curriculum in a Codespace&lt;/h4&gt; 
&lt;p&gt;In your copy of this repository that you created, click the &lt;strong&gt;Code&lt;/strong&gt; button and select &lt;strong&gt;Open with Codespaces&lt;/strong&gt;. This will create a new Codespace for you to work in.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/createcodespace.png" alt="Create codespace" style="width:270px;" /&gt; 
&lt;h4&gt;Running the curriculum locally on your computer&lt;/h4&gt; 
&lt;p&gt;To run this curriculum locally on your computer, you will need a text editor, a browser and a command line tool. Our first lesson, &lt;a href="https://github.com/microsoft/Web-Dev-For-Beginners/tree/main/1-getting-started-lessons/1-intro-to-programming-languages"&gt;Introduction to Programming Languages and Tools of the Trade&lt;/a&gt;, will walk you through various options for each of these tools for you to select what works best for you.&lt;/p&gt; 
&lt;p&gt;Our recommendation is to use &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;Visual Studio Code&lt;/a&gt; as your editor, which also has a built-in &lt;a href="https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon"&gt;Terminal&lt;/a&gt;. You can download Visual Studio Code &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone your repository to your computer. You can do this by clicking the &lt;strong&gt;Code&lt;/strong&gt; button and copying the URL:&lt;/p&gt; &lt;img src="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/images/createcodespace.png" alt="Copy your repository URL" style="width:270px;" /&gt; &lt;p&gt;Then, open &lt;a href="https://code.visualstudio.com/docs/terminal/basics/?WT.mc_id=academic-77807-sagibbon"&gt;Terminal&lt;/a&gt; within &lt;a href="https://code.visualstudio.com/?WT.mc_id=academic-77807-sagibbon"&gt;Visual Studio Code&lt;/a&gt; and run the following command, replacing &lt;code&gt;&amp;lt;your-repository-url&amp;gt;&lt;/code&gt; with the URL you just copied:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone &amp;lt;your-repository-url&amp;gt;
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Open the folder in Visual Studio Code. You can do this by clicking &lt;strong&gt;File&lt;/strong&gt; &amp;gt; &lt;strong&gt;Open Folder&lt;/strong&gt; and selecting the folder you just cloned.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Recommended Visual Studio Code extensions:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer&amp;amp;WT.mc_id=academic-77807-sagibbon"&gt;Live Server&lt;/a&gt; - to preview HTML pages within Visual Studio Code&lt;/li&gt; 
  &lt;li&gt;&lt;a href="https://marketplace.visualstudio.com/items?itemName=GitHub.copilot&amp;amp;WT.mc_id=academic-77807-sagibbon"&gt;Copilot&lt;/a&gt; - to help you write code faster&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;📂 Each lesson includes:&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;optional sketchnote&lt;/li&gt; 
 &lt;li&gt;optional supplemental video&lt;/li&gt; 
 &lt;li&gt;pre-lesson warmup quiz&lt;/li&gt; 
 &lt;li&gt;written lesson&lt;/li&gt; 
 &lt;li&gt;for project-based lessons, step-by-step guides on how to build the project&lt;/li&gt; 
 &lt;li&gt;knowledge checks&lt;/li&gt; 
 &lt;li&gt;a challenge&lt;/li&gt; 
 &lt;li&gt;supplemental reading&lt;/li&gt; 
 &lt;li&gt;assignment&lt;/li&gt; 
 &lt;li&gt;post-lesson quiz&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;A note about quizzes&lt;/strong&gt;: All quizzes are contained in the Quiz-app folder, 48 total quizzes of three questions each. They are linked from within the lessons the quiz app can be run locally or deployed to Azure; follow the instruction in the &lt;code&gt;quiz-app&lt;/code&gt; folder. They are gradually being localized.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🗃️ Lessons&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th align="center"&gt;&lt;/th&gt; 
   &lt;th align="center"&gt;Project Name&lt;/th&gt; 
   &lt;th align="center"&gt;Concepts Taught&lt;/th&gt; 
   &lt;th&gt;Learning Objectives&lt;/th&gt; 
   &lt;th align="center"&gt;Linked Lesson&lt;/th&gt; 
   &lt;th align="center"&gt;Author&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;01&lt;/td&gt; 
   &lt;td align="center"&gt;Getting Started&lt;/td&gt; 
   &lt;td align="center"&gt;Introduction to Programming and Tools of the Trade&lt;/td&gt; 
   &lt;td&gt;Learn the basic underpinnings behind most programming languages and about software that helps professional developers do their jobs&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/1-intro-to-programming-languages/README.md"&gt;Intro to Programming Languages and Tools of the Trade&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;02&lt;/td&gt; 
   &lt;td align="center"&gt;Getting Started&lt;/td&gt; 
   &lt;td align="center"&gt;Basics of GitHub, includes working with a team&lt;/td&gt; 
   &lt;td&gt;How to use GitHub in your project, how to collaborate with others on a code base&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/2-github-basics/README.md"&gt;Intro to GitHub&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Floor&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;03&lt;/td&gt; 
   &lt;td align="center"&gt;Getting Started&lt;/td&gt; 
   &lt;td align="center"&gt;Accessibility&lt;/td&gt; 
   &lt;td&gt;Learn the basics of web accessibility&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/1-getting-started-lessons/3-accessibility/README.md"&gt;Accessibility Fundamentals&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;04&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;JavaScript Data Types&lt;/td&gt; 
   &lt;td&gt;The basics of JavaScript data types&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/1-data-types/README.md"&gt;Data Types&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;05&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;Functions and Methods&lt;/td&gt; 
   &lt;td&gt;Learn about functions and methods to manage an application's logic flow&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/2-functions-methods/README.md"&gt;Functions and Methods&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine and Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;06&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;Making Decisions with JS&lt;/td&gt; 
   &lt;td&gt;Learn how to create conditions in your code using decision-making methods&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/3-making-decisions/README.md"&gt;Making Decisions&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;07&lt;/td&gt; 
   &lt;td align="center"&gt;JS Basics&lt;/td&gt; 
   &lt;td align="center"&gt;Arrays and Loops&lt;/td&gt; 
   &lt;td&gt;Work with data using arrays and loops in JavaScript&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/2-js-basics/4-arrays-loops/README.md"&gt;Arrays and Loops&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jasmine&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;08&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md"&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;HTML in Practice&lt;/td&gt; 
   &lt;td&gt;Build the HTML to create an online terrarium, focusing on building a layout&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/1-intro-to-html/README.md"&gt;Introduction to HTML&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;09&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md"&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;CSS in Practice&lt;/td&gt; 
   &lt;td&gt;Build the CSS to style the online terrarium, focusing on the basics of CSS including making the page responsive&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/2-intro-to-css/README.md"&gt;Introduction to CSS&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;10&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/solution/README.md"&gt;Terrarium&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;JavaScript Closures, DOM manipulation&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript to make the terrarium function as a drag/drop interface, focusing on closures and DOM manipulation&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/3-terrarium/3-intro-to-DOM-and-closures/README.md"&gt;JavaScript Closures, DOM manipulation&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;11&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/solution/README.md"&gt;Typing Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Build a Typing Game&lt;/td&gt; 
   &lt;td&gt;Learn how to use keyboard events to drive the logic of your JavaScript app&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/4-typing-game/typing-game/README.md"&gt;Event-Driven Programming&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Christopher&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;12&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution/README.md"&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Working with Browsers&lt;/td&gt; 
   &lt;td&gt;Learn how browsers work, their history, and how to scaffold the first elements of a browser extension&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/1-about-browsers/README.md"&gt;About Browsers&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;13&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution/README.md"&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Building a form, calling an API and storing variables in local storage&lt;/td&gt; 
   &lt;td&gt;Build the JavaScript elements of your browser extension to call an API using variables stored in local storage&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/2-forms-browsers-local-storage/README.md"&gt;APIs, Forms, and Local Storage&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;14&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/solution/README.md"&gt;Green Browser Extension&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Background processes in the browser, web performance&lt;/td&gt; 
   &lt;td&gt;Use the browser's background processes to manage the extension's icon; learn about web performance and some optimizations to make&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/5-browser-extension/3-background-tasks-and-performance/README.md"&gt;Background Tasks and Performance&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Jen&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;15&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;More Advanced Game Development with JavaScript&lt;/td&gt; 
   &lt;td&gt;Learn about Inheritance using both Classes and Composition and the Pub/Sub pattern, in preparation for building a game&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/1-introduction/README.md"&gt;Introduction to Advanced Game Development&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;16&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Drawing to canvas&lt;/td&gt; 
   &lt;td&gt;Learn about the Canvas API, used to draw elements to a screen&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/2-drawing-to-canvas/README.md"&gt;Drawing to Canvas&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;17&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Moving elements around the screen&lt;/td&gt; 
   &lt;td&gt;Discover how elements can gain motion using the cartesian coordinates and the Canvas API&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/3-moving-elements-around/README.md"&gt;Moving Elements Around&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;18&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Collision detection&lt;/td&gt; 
   &lt;td&gt;Make elements collide and react to each other using keypresses and provide a cooldown function to ensure performance of the game&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/4-collision-detection/README.md"&gt;Collision Detection&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;19&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Keeping score&lt;/td&gt; 
   &lt;td&gt;Perform math calculations based on the game's status and performance&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/5-keeping-score/README.md"&gt;Keeping Score&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;20&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/solution/README.md"&gt;Space Game&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Ending and restarting the game&lt;/td&gt; 
   &lt;td&gt;Learn about ending and restarting the game, including cleaning up assets and resetting variable values&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/6-space-game/6-end-condition/README.md"&gt;The Ending Condition&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Chris&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;21&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;HTML Templates and Routes in a Web App&lt;/td&gt; 
   &lt;td&gt;Learn how to create the scaffold of a multipage website's architecture using routing and HTML templates&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/1-template-route/README.md"&gt;HTML Templates and Routes&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;22&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Build a Login and Registration Form&lt;/td&gt; 
   &lt;td&gt;Learn about building forms and handling validation routines&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/2-forms/README.md"&gt;Forms&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;23&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Methods of Fetching and Using Data&lt;/td&gt; 
   &lt;td&gt;How data flows in and out of your app, how to fetch it, store it, and dispose of it&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/3-data/README.md"&gt;Data&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td align="center"&gt;24&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/solution/README.md"&gt;Banking App&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Concepts of State Management&lt;/td&gt; 
   &lt;td&gt;Learn how your app retains state and how to manage it programmatically&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/7-bank-project/4-state-management/README.md"&gt;State Management&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;Yohan&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🏫 Pedagogy&lt;/h2&gt; 
&lt;p&gt;Our curriculum is designed with two key pedagogical principles in mind:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;project-based learning&lt;/li&gt; 
 &lt;li&gt;frequent quizzes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The program teaches the fundamentals of JavaScript, HTML, and CSS, as well as the latest tools and techniques used by today's web developers. Students will have the opportunity to develop hands-on experience by building a typing game, virtual terrarium, eco-friendly browser extension, space-invader-style game, and a banking app for businesses. By the end of the series, students will have gained a solid understanding of web development.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🎓 You can take the first few lessons in this curriculum as a &lt;a href="https://docs.microsoft.com/learn/paths/web-development-101/?WT.mc_id=academic-77807-sagibbon"&gt;Learn Path&lt;/a&gt; on Microsoft Learn!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;By ensuring that the content aligns with projects, the process is made more engaging for students and retention of concepts will be augmented. We also wrote several starter lessons in JavaScript basics to introduce concepts, paired with a video from the "&lt;a href="https://channel9.msdn.com/Series/Beginners-Series-to-JavaScript/?WT.mc_id=academic-77807-sagibbon"&gt;Beginners Series to: JavaScript&lt;/a&gt;" collection of video tutorials, some of whose authors contributed to this curriculum.&lt;/p&gt; 
&lt;p&gt;In addition, a low-stakes quiz before a class sets the intention of the student towards learning a topic, while a second quiz after class ensures further retention. This curriculum was designed to be flexible and fun and can be taken in whole or in part. The projects start small and become increasingly complex by the end of the 12-week cycle.&lt;/p&gt; 
&lt;p&gt;While we have purposefully avoided introducing JavaScript frameworks to concentrate on the basic skills needed as a web developer before adopting a framework, a good next step to completing this curriculum would be learning about Node.js via another collection of videos: "&lt;a href="https://channel9.msdn.com/Series/Beginners-Series-to-Nodejs/?WT.mc_id=academic-77807-sagibbon"&gt;Beginner Series to: Node.js&lt;/a&gt;".&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Visit our &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; guidelines. We welcome your constructive feedback!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;🧭 Offline access&lt;/h2&gt; 
&lt;p&gt;You can run this documentation offline by using &lt;a href="https://docsify.js.org/#/"&gt;Docsify&lt;/a&gt;. Fork this repo, &lt;a href="https://docsify.js.org/#/quickstart"&gt;install Docsify&lt;/a&gt; on your local machine, and then in the root folder of this repo, type &lt;code&gt;docsify serve&lt;/code&gt;. The website will be served on port 3000 on your localhost: &lt;code&gt;localhost:3000&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;📘 PDF&lt;/h2&gt; 
&lt;p&gt;A PDF of all of the lessons can be found &lt;a href="https://microsoft.github.io/Web-Dev-For-Beginners/pdf/readme.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;🎒 Other Courses&lt;/h2&gt; 
&lt;p&gt;Our team produces other courses! Check out:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/genai-beginners"&gt;Generative AI for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Generative-AI-for-beginners-dotnet"&gt;Generative AI for Beginners .NET&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/generative-ai-with-javascript"&gt;Generative AI with JavaScript&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Generative-AI-for-beginners-java"&gt;Generative AI with Java&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ai-beginners"&gt;AI for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/datascience-beginners"&gt;Data Science for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/ml-beginners"&gt;ML for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Security-101"&gt;Cybersecurity for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/webdev-beginners"&gt;Web Dev for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aka.ms/iot-beginners"&gt;IoT for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/xr-development-for-beginners"&gt;XR Development for Beginners&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/Mastering-GitHub-Copilot-for-Paired-Programming"&gt;Mastering GitHub Copilot for Agentic use&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/mastering-github-copilot-for-dotnet-csharp-developers"&gt;Mastering GitHub Copilot for C#/.NET Developers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/microsoft/CopilotAdventures"&gt;Choose Your Own Copilot Adventure&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This repository is licensed under the MIT license. See the &lt;a href="https://raw.githubusercontent.com/microsoft/Web-Dev-For-Beginners/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for more information.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fchollet/ARC-AGI</title>
      <link>https://github.com/fchollet/ARC-AGI</link>
      <description>&lt;p&gt;The Abstraction and Reasoning Corpus&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Abstraction and Reasoning Corpus for Artificial General Intelligence v1 (ARC-AGI-1)&lt;/h1&gt; 
&lt;p&gt;This repository contains the ARC-AGI-1 task data, as well as a browser-based interface for humans to try their hand at solving the tasks manually.&lt;/p&gt; 
&lt;p&gt;See also the &lt;a href="https://github.com/arcprize/ARC-AGI-2"&gt;ARC-AGI-2 repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;"ARC can be seen as a general artificial intelligence benchmark, as a program synthesis benchmark, or as a psychometric intelligence test. It is targeted at both humans and artificially intelligent systems that aim at emulating a human-like form of general fluid intelligence."&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;A complete description of the dataset, its goals, and its underlying logic, can be found in: &lt;a href="https://arxiv.org/abs/1911.01547"&gt;On the Measure of Intelligence&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;As a reminder, a test-taker is said to solve a task when, upon seeing the task for the first time, they are able to produce the correct output grid for &lt;em&gt;all&lt;/em&gt; test inputs in the task (this includes picking the dimensions of the output grid). For each test input, the test-taker is allowed 3 trials (this holds for all test-takers, either humans or AI).&lt;/p&gt; 
&lt;h2&gt;Task file format&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;data&lt;/code&gt; directory contains two subdirectories:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;data/training&lt;/code&gt;: contains the task files for training (400 tasks). Use these to prototype your algorithm or to train your algorithm to acquire ARC-relevant cognitive priors.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;data/evaluation&lt;/code&gt;: contains the task files for evaluation (400 tasks). Use these to evaluate your final algorithm. To ensure fair evaluation results, do not leak information from the evaluation set into your algorithm (e.g. by looking at the evaluation tasks yourself during development, or by repeatedly modifying an algorithm while using its evaluation score as feedback).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The tasks are stored in JSON format. Each task JSON file contains a dictionary with two fields:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;"train"&lt;/code&gt;: demonstration input/output pairs. It is a list of "pairs" (typically 3 pairs).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;"test"&lt;/code&gt;: test input/output pairs. It is a list of "pairs" (typically 1 pair).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A "pair" is a dictionary with two fields:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;"input"&lt;/code&gt;: the input "grid" for the pair.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;"output"&lt;/code&gt;: the output "grid" for the pair.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;A "grid" is a rectangular matrix (list of lists) of integers between 0 and 9 (inclusive). The smallest possible grid size is 1x1 and the largest is 30x30.&lt;/p&gt; 
&lt;p&gt;When looking at a task, a test-taker has access to inputs &amp;amp; outputs of the demonstration pairs, plus the input(s) of the test pair(s). The goal is to construct the output grid(s) corresponding to the test input grid(s), using 3 trials for each test input. "Constructing the output grid" involves picking the height and width of the output grid, then filling each cell in the grid with a symbol (integer between 0 and 9, which are visualized as colors). Only &lt;em&gt;exact&lt;/em&gt; solutions (all cells match the expected answer) can be said to be correct.&lt;/p&gt; 
&lt;h2&gt;Usage of the testing interface&lt;/h2&gt; 
&lt;p&gt;The testing interface is located at &lt;code&gt;apps/testing_interface.html&lt;/code&gt;. Open it in a web browser (Chrome recommended). It will prompt you to select a task JSON file.&lt;/p&gt; 
&lt;p&gt;After loading a task, you will enter the test space, which looks like this:&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://arc-benchmark.s3.amazonaws.com/figs/arc_test_space.png" alt="test space" /&gt;&lt;/p&gt; 
&lt;p&gt;On the left, you will see the input/output pairs demonstrating the nature of the task. In the middle, you will see the current test input grid. On the right, you will see the controls you can use to construct the corresponding output grid.&lt;/p&gt; 
&lt;p&gt;You have access to the following tools:&lt;/p&gt; 
&lt;h3&gt;Grid controls&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Resize: input a grid size (e.g. "10x20" or "4x4") and click "Resize". This preserves existing grid content (in the top left corner).&lt;/li&gt; 
 &lt;li&gt;Copy from input: copy the input grid to the output grid. This is useful for tasks where the output consists of some modification of the input.&lt;/li&gt; 
 &lt;li&gt;Reset grid: fill the grid with 0s.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Symbol controls&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Edit: select a color (symbol) from the color picking bar, then click on a cell to set its color.&lt;/li&gt; 
 &lt;li&gt;Select: click and drag on either the output grid or the input grid to select cells. 
  &lt;ul&gt; 
   &lt;li&gt;After selecting cells on the output grid, you can select a color from the color picking to set the color of the selected cells. This is useful to draw solid rectangles or lines.&lt;/li&gt; 
   &lt;li&gt;After selecting cells on either the input grid or the output grid, you can press C to copy their content. After copying, you can select a cell on the output grid and press "V" to paste the copied content. You should select the cell in the top left corner of the zone you want to paste into.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Floodfill: click on a cell from the output grid to color all connected cells to the selected color. "Connected cells" are contiguous cells with the same color.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Answer validation&lt;/h3&gt; 
&lt;p&gt;When your output grid is ready, click the green "Submit!" button to check your answer. We do not enforce the 3-trials rule.&lt;/p&gt; 
&lt;p&gt;After you've obtained the correct answer for the current test input grid, you can switch to the next test input grid for the task using the "Next test input" button (if there is any available; most tasks only have one test input).&lt;/p&gt; 
&lt;p&gt;When you're done with a task, use the "load task" button to open a new task.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mediacms-io/mediacms</title>
      <link>https://github.com/mediacms-io/mediacms</link>
      <description>&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaCMS&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mediacms-io/mediacms/releases/"&gt;&lt;img src="https://img.shields.io/github/v/release/mediacms-io/mediacms?color=green" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/mediacms/mediacms"&gt;&lt;img src="https://img.shields.io/docker/pulls/mediacms/mediacms" alt="DockerHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS. It is developed to meet the needs of modern web platforms for viewing and sharing media. It can be used to build a small to medium video and media portal within minutes.&lt;/p&gt; 
&lt;p&gt;It is built mostly using the modern stack Django + React and includes a REST API.&lt;/p&gt; 
&lt;p&gt;A demo is available at &lt;a href="https://demo.mediacms.io"&gt;https://demo.mediacms.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/index.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/video.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/embed.jpg" width="340" /&gt; &lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Complete control over your data&lt;/strong&gt;: host it yourself!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern technologies&lt;/strong&gt;: Django/Python/Celery, React.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for multiple publishing workflows&lt;/strong&gt;: public, private, unlisted and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media types support&lt;/strong&gt;: video, audio, image, pdf&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media classification options&lt;/strong&gt;: categories, tags and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media sharing options&lt;/strong&gt;: social media share, videos embed code generation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Video Trimmer&lt;/strong&gt;: trim video, replace, save as new or create segments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: create RBAC categories and connect users to groups with view/edit access on their media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SAML support&lt;/strong&gt;: with ability to add mappings to system roles and groups&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy media searching&lt;/strong&gt;: enriched with live search functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Playlists for audio and video content&lt;/strong&gt;: create playlists, add and reorder content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsive design&lt;/strong&gt;: including light and dark themes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced users management&lt;/strong&gt;: allow self registration, invite only, closed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable actions&lt;/strong&gt;: allow download, add comments, add likes, dislikes, report media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configuration options&lt;/strong&gt;: change logos, fonts, styling, add more pages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced video player&lt;/strong&gt;: customized video.js player with multiple resolution and playback speed options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple transcoding profiles&lt;/strong&gt;: sane defaults for multiple dimensions (144p, 240p, 360p, 480p, 720p, 1080p) and multiple profiles (h264, h265, vp9)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive video streaming&lt;/strong&gt;: possible through HLS protocol&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subtitles/CC&lt;/strong&gt;: support for multilingual subtitle files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable transcoding&lt;/strong&gt;: transcoding through priorities. Experimental support for remote workers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chunked file uploads&lt;/strong&gt;: for pausable/resumable upload of content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: Documented through Swagger&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Translation&lt;/strong&gt;: Most of the CMS is translated to a number of languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Schools, education.&lt;/strong&gt; Administrators and editors keep what content will be published, students are not distracted with advertisements and irrelevant content, plus they have the ability to select either to stream or download content.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Organization sensitive content.&lt;/strong&gt; In cases where content is sensitive and cannot be uploaded to external sites.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a great community.&lt;/strong&gt; MediaCMS can be customized (URLs, logos, fonts, aesthetics) so that you create a highly customized video portal for your community!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Personal portal.&lt;/strong&gt; Organize, categorize and host your content the way you prefer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;We believe there's a need for quality open source web applications that can be used to build community portals and support collaboration. We have three goals for MediaCMS: a) deliver all functionality one would expect from a modern system, b) allow for easy installation and maintenance, c) allow easy customization and addition of features.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MediaCMS is released under &lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;GNU Affero General Public License v3.0 license&lt;/a&gt;. Copyright Markos Gogoulos.&lt;/p&gt; 
&lt;h2&gt;Support and paid services&lt;/h2&gt; 
&lt;p&gt;We provide custom installations, development of extra functionality, migration from existing systems, integrations with legacy systems, training and support. Contact us at &lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Commercial Hostings&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Elestio&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can deploy MediaCMS on Elestio using one-click deployment. Elestio supports MediaCMS by providing revenue share so go ahead and click below to deploy and use MediaCMS.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://elest.io/open-source/mediacms"&gt;&lt;img src="https://elest.io/images/logos/deploy-to-elestio-btn.png" alt="Deploy on Elestio" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hardware considerations&lt;/h2&gt; 
&lt;p&gt;For a small to medium installation, with a few hours of video uploaded daily, and a few hundreds of active daily users viewing content, 4GB Ram / 2-4 CPUs as minimum is ok. For a larger installation with many hours of video uploaded daily, consider adding more CPUs and more Ram.&lt;/p&gt; 
&lt;p&gt;In terms of disk space, think of what the needs will be. A general rule is to multiply by three the size of the expected uploaded videos (since the system keeps original versions, encoded versions plus HLS), so if you receive 1G of videos daily and maintain all of them, you should consider a 1T disk across a year (1G * 3 * 365).&lt;/p&gt; 
&lt;h2&gt;Installation / Maintanance&lt;/h2&gt; 
&lt;p&gt;There are two ways to run MediaCMS, through Docker Compose and through installing it on a server via an automation script that installs and configures all needed services. Find the related pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#2-server-installation"&gt;Single Server&lt;/a&gt; page&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#3-docker-installation"&gt;Docker Compose&lt;/a&gt; page&lt;/p&gt; &lt;p&gt;A complete guide can be found on the blog post &lt;a href="https://medium.com/@MediaCMS.io/how-to-self-host-and-share-your-videos-in-2021-14067e3b291b"&gt;How to self-host and share your videos in 2021&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/user_docs.md"&gt;Users documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md"&gt;Administrators documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/developers_docs.md"&gt;Developers documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#5-configuration"&gt;Configuration&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/transcoding.md"&gt;Transcoding&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/dev_exp.md"&gt;Developer Experience&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/media_permissions.md"&gt;Media Permissions&lt;/a&gt; page&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technology&lt;/h2&gt; 
&lt;p&gt;This software uses the following list of awesome technologies: Python, Django, Django Rest Framework, Celery, PostgreSQL, Redis, Nginx, uWSGI, React, Fine Uploader, video.js, FFMPEG, Bento4&lt;/p&gt; 
&lt;h2&gt;Who is using it&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cinemata&lt;/strong&gt; non-profit media, technology and culture organization - &lt;a href="https://cinemata.org"&gt;https://cinemata.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Critical Commons&lt;/strong&gt; public media archive and fair use advocacy network - &lt;a href="https://criticalcommons.org"&gt;https://criticalcommons.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;American Association of Gynecologic Laparoscopists&lt;/strong&gt; - &lt;a href="https://surgeryu.org/"&gt;https://surgeryu.org/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you like the project, here's a few things you can do&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hire us, for custom installations, training, support, maintenance work&lt;/li&gt; 
 &lt;li&gt;Suggest us to others that are interested to hire us&lt;/li&gt; 
 &lt;li&gt;Write a blog post/article about MediaCMS&lt;/li&gt; 
 &lt;li&gt;Share on social media about the project&lt;/li&gt; 
 &lt;li&gt;Open issues, participate on &lt;a href="https://github.com/mediacms-io/mediacms/discussions"&gt;discussions&lt;/a&gt;, report bugs, suggest ideas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediacms-io/mediacms/discussions/categories/show-and-tell"&gt;Show and tell&lt;/a&gt; how you are using the project&lt;/li&gt; 
 &lt;li&gt;Star the project&lt;/li&gt; 
 &lt;li&gt;Add functionality, work on a PR, fix an issue!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>qeeqbox/social-analyzer</title>
      <link>https://github.com/qeeqbox/social-analyzer</link>
      <description>&lt;p&gt;API, CLI, and Web App for analyzing and finding a person's profile in 1000 social media \ websites&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/socialanalyzerlogo_.png" /&gt;&lt;/p&gt; 
&lt;p&gt;Social Analyzer - API, CLI, and Web App for analyzing &amp;amp; finding a person's profile across +1000 social media \ websites. It includes different analysis and detection modules, and you can choose which modules to use during the investigation process.&lt;/p&gt; 
&lt;p&gt;The detection modules utilize a rating mechanism based on different detection techniques, which produces a rate value that starts from 0 to 100 (No-Maybe-Yes). This module is intended to have fewer false positives.&lt;/p&gt; 
&lt;p&gt;The analysis and public extracted information from this OSINT tool could help investigate profiles related to suspicious or malicious activities such as cyberbullying, cyber grooming, cyberstalking, and spreading misinformation.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;This project is currently used by some law enforcement agencies in countries where resources are limited - The detection database is different than the one shared here..&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;So·cial Me·di·a&lt;/h2&gt; 
&lt;p&gt;Websites and applications that enable users to create and share content or to participate in social networking - Oxford Dictionary&lt;/p&gt; 
&lt;h2&gt;Structure&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/structure.png" /&gt; 
&lt;h2&gt;APP (Preferred!)&lt;/h2&gt; 
&lt;p&gt;Standard localhost WEB APP url: &lt;a href="http://0.0.0.0:9005/app.html"&gt;http://0.0.0.0:9005/app.html&lt;/a&gt;&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/intro_fast.gif" style="max-width:768px" /&gt; 
&lt;h2&gt;CLI&lt;/h2&gt; 
&lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/cli.gif" style="max-width:768px" /&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;String &amp;amp; name analysis (Permutations and Combinations)&lt;/li&gt; 
 &lt;li&gt;Find a profile using multiple techniques (HTTPS library &amp;amp; Webdriver)&lt;/li&gt; 
 &lt;li&gt;Multi profile search (Used for correlation - any combination separated with "," )&lt;/li&gt; 
 &lt;li&gt;Multilayers detections (OCR, normal, advanced &amp;amp; special)&lt;/li&gt; 
 &lt;li&gt;Visualized profile information using Ixora (Metadata &amp;amp; Patterns)&lt;/li&gt; 
 &lt;li&gt;Metadata &amp;amp; Patterns extraction (Added from Qeeqbox OSINT project)&lt;/li&gt; 
 &lt;li&gt;Force-directed Graph for Metadata (Needs ExtractPatterns)&lt;/li&gt; 
 &lt;li&gt;Search by top ranking or by country (Alexa Ranking)&lt;/li&gt; 
 &lt;li&gt;Search by type (adult, music, etc.. - automated websites stats)&lt;/li&gt; 
 &lt;li&gt;Profiles stats and static info (Category country)&lt;/li&gt; 
 &lt;li&gt;Cross Metadata stats (Added from Qeeqbox OSINT project)&lt;/li&gt; 
 &lt;li&gt;Auto-flirtation to unnecessary output (Enable javascript etc..)&lt;/li&gt; 
 &lt;li&gt;Search engine lookup (Google API - optional)&lt;/li&gt; 
 &lt;li&gt;Custom search queries (Google API &amp;amp; DuckDuckGo API - optional)&lt;/li&gt; 
 &lt;li&gt;Profile screenshot, title, info, and website description&lt;/li&gt; 
 &lt;li&gt;Find name origins, name similarity &amp;amp; common words by language&lt;/li&gt; 
 &lt;li&gt;Find possible profile\person age (Limited analysis)&lt;/li&gt; 
 &lt;li&gt;Custom user-agent, proxy, timeout &amp;amp; implicit wait&lt;/li&gt; 
 &lt;li&gt;Python CLI &amp;amp; NodeJS CLI (limited to FindUserProfilesFast option)&lt;/li&gt; 
 &lt;li&gt;Screenshots of detected profile (The latest version of Chrome must be installed)&lt;/li&gt; 
 &lt;li&gt;Grid option for faster checking (limited to docker-compose)&lt;/li&gt; 
 &lt;li&gt;Dump logs to folder or terminal (prettified)&lt;/li&gt; 
 &lt;li&gt;Adjust finding\getting profile workers (default 15)&lt;/li&gt; 
 &lt;li&gt;Re-checking option for failed profiles&lt;/li&gt; 
 &lt;li&gt;Filter profiles by good, maybe, and bad&lt;/li&gt; 
 &lt;li&gt;Save the analysis as a JSON file&lt;/li&gt; 
 &lt;li&gt;Simplified web interface and CLI&lt;/li&gt; 
 &lt;li&gt;And, more!!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Special Detections&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Facebook (Phone number, name, or profile name)&lt;/li&gt; 
 &lt;li&gt;Gmail (&lt;a href="mailto:example@gmail.com"&gt;example@gmail.com&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Google (&lt;a href="mailto:example@example.com"&gt;example@example.com&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Install &amp;amp; Run&lt;/h2&gt; 
&lt;h3&gt;Linux (As Node WebApp)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm update
npm install
npm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As Node CLI)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
#Depedning on your Linux distro, you may or may not need these 2 lines
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y software-properties-common
sudo add-apt-repository ppa:mozillateam/ppa -y
sudo apt-get install -y firefox-esr tesseract-ocr git nodejs npm
git clone https://github.com/qeeqbox/social-analyzer.git
cd social-analyzer
npm install
nodejs app.js --username "johndoe"
#or
nodejs app.js --username "johndoe,janedoe" --metadata
#or
nodejs app.js --username "johndoe,janedoe" --metadata --top 100
#or
nodejs app.js --username "johndoe" --type "adult"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As python package)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install python3 python3-pip
pip3 install social-analyzer
python3 -m social-analyzer --username "johndoe"
#or
python3 -m social-analyzer --username "johndoe" --metadata
#or
python3 -m social-analyzer --username "johndoe" --metadata --top 100
#or
python3 -m social-analyzer --username "johndoe" --type "adult"
#or
python3 -m social-analyzer --username "johndoe" --websites "car" --logs --screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux (As python script)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get update
sudo apt-get install git python3 python3-pip
git clone https://github.com/qeeqbox/social-analyzer
cd social-analyzer
pip3 install -r requirements.txt
python3 app.py --username "janedoe"
#or
python3 app.py --username "johndoe" --metadata
#or
python3 app.py --username "johndoe" --metadata --top 100
#or
python3 app.py --username "johndoe" --type "adult"
#or
python3 app.py --username "johndoe" --websites "car" --logs --screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Importing as object (python)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-python"&gt;
#E.g. #1
from importlib import import_module
SocialAnalyzer = import_module("social-analyzer").SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username="johndoe",silent=True)
print(results)

#E.g. #2
from importlib import import_module
SocialAnalyzer = import_module("social-analyzer").SocialAnalyzer()
results = SocialAnalyzer.run_as_object(username="johndoe,janedoe",silent=True,output="json",filter="good",metadata=False,timeout=10, profiles="detected")
print(results)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux, Windows, MacOS, Raspberry pi..&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;check this &lt;a href="https://github.com/qeeqbox/social-analyzer/wiki/install"&gt;wiki&lt;/a&gt; for all possible installation methods&lt;/li&gt; 
 &lt;li&gt;check this &lt;a href="https://github.com/qeeqbox/social-analyzer/wiki/integration"&gt;wiki&lt;/a&gt; for integrating social-analyzer with your OSINT tools, feeds, etc...&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;social-analyzer --h&lt;/h2&gt; 
&lt;pre&gt;&lt;code&gt;Required Arguments:
  --username   E.g. johndoe, john_doe or johndoe9999

Optional Arguments:
  --websites    A website or websites separated by space E.g. youtube, tiktokor tumblr
  --mode        Analysis mode E.g.fast -&amp;gt; FindUserProfilesFast, slow -&amp;gt; FindUserProfilesSlow or special -&amp;gt; FindUserProfilesSpecial
  --output      Show the output in the following format: json -&amp;gt; json outputfor integration or pretty -&amp;gt; prettify the output
  --options     Show the following when a profile is found: link, rate, titleor text
  --method      find -&amp;gt; show detected profiles, get -&amp;gt; show all profiles regardless detected or not, all -&amp;gt; combine find &amp;amp; get
  --filter      Filter detected profiles by good, maybe or bad, you can do combine them with comma (good,bad) or use all
  --profiles    Filter profiles by detected, unknown or failed, you can do combine them with comma (detected,failed) or use all
  --countries   select websites by country or countries separated by space as: us br ru
  --type        Select websites by type (Adult, Music etc)
  --top         select top websites as 10, 50 etc...[--websites is not needed]
  --extract     Extract profiles, urls &amp;amp; patterns if possible
  --metadata    Extract metadata if possible (pypi QeeqBox OSINT)
  --trim        Trim long strings
  --gui         Reserved for a gui (Not implemented)
  --cli         Reserved for a cli (Not needed)

Listing websites &amp;amp; detections:
  --list        List all available websites

Setting:
  --headers     Headers as dict
  --logs_dir    Change logs directory
  --timeout     Change timeout between each request
  --silent      Disable output to screen
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Open Shell&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ssh.cloud.google.com/cloudshell/editor?cloudshell_git_repo=https://github.com/qeeqbox/social-analyzer&amp;amp;tutorial=README.md"&gt;&lt;img src="https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20Cloud%20Shell&amp;amp;color=3267d6&amp;amp;style=flat-square" alt="Open in Cloud Shell" /&gt;&lt;/a&gt; &lt;a href="https://repl.it/github/qeeqbox/social-analyzer"&gt;&lt;img src="https://img.shields.io/static/v1?label=%3E_&amp;amp;message=Open%20in%20repl.it%20Shell&amp;amp;color=606c74&amp;amp;style=flat-square" alt="Open in repl.it Shell" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;DuckDuckGo API, Google API, NodeJS, bootstrap, selectize, jQuery, Wikipedia, font-awesome, selenium-webdriver &amp;amp; tesseract.js&lt;/li&gt; 
 &lt;li&gt;Let me know if I missed a reference or resource!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Disclaimer\Notes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download this project from GitHub and treat it as a security project&lt;/li&gt; 
 &lt;li&gt;If you want your website to be excluded from this project list, please reach out to me&lt;/li&gt; 
 &lt;li&gt;This tool is meant to be used locally, not as a service (It does not have any Access Control)&lt;/li&gt; 
 &lt;li&gt;For issues related to modules that end with -private or under the private group &lt;img src="https://raw.githubusercontent.com/qeeqbox/social-analyzer/main/readme/modules.png" alt="" /&gt;, reach out directly to me (do not open an issue on GitHub)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Other Projects&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/qeeqbox/analyzer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/analyzer.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/chameleon"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/chameleon.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/honeypots"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/honeypots.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/osint"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/osint.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/url-sandbox"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/url-sandbox.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/mitre-visualizer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/mitre-visualizer.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/woodpecker"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/woodpecker.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/docker-images"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/docker-images.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/seahorse"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/seahorse.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/rhino"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/rhino.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/raven"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/raven.png" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qeeqbox/image-analyzer"&gt;&lt;img src="https://github.com/qeeqbox/.github/raw/main/data/image-analyzer.png" alt="" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>koodo-reader/koodo-reader</title>
      <link>https://github.com/koodo-reader/koodo-reader</link>
      <description>&lt;p&gt;A modern ebook manager and reader with sync and backup capacities for Windows, macOS, Linux, Android, iOS and Web&lt;/p&gt;&lt;hr&gt;&lt;div align="left"&gt; 
 &lt;p&gt;&lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_cn.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_hi.md"&gt;हिंदी&lt;/a&gt; |&lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_pt.md"&gt;Português&lt;/a&gt; | &lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/README_id.md"&gt;Indonesian&lt;/a&gt; | English&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://dl.koodoreader.com/screenshots/logo.png" width="96px" height="96px" /&gt; 
&lt;/div&gt; 
&lt;h1 align="center"&gt; Koodo Reader &lt;/h1&gt; 
&lt;h3 align="center"&gt; A cross-platform ebook reader &lt;/h3&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://koodoreader.com/en"&gt;Download&lt;/a&gt; | &lt;a href="https://web.koodoreader.com"&gt;Preview&lt;/a&gt; | &lt;a href="https://koodoreader.com/en/roadmap"&gt;Roadmap&lt;/a&gt; | &lt;a href="https://koodoreader.com/en/document"&gt;Document&lt;/a&gt; | &lt;a href="https://koodoreader.com/en/plugin"&gt;Plugins&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Preview&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;img src="https://dl.koodoreader.com/screenshots/7.png" width="800px" /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;img src="https://dl.koodoreader.com/screenshots/8.png" width="800px" /&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;h2&gt;Feature&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Format support: 
  &lt;ul&gt; 
   &lt;li&gt;EPUB (&lt;strong&gt;.epub&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;PDF (&lt;strong&gt;.pdf&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;DRM-free Mobipocket (&lt;strong&gt;.mobi&lt;/strong&gt;) and Kindle (&lt;strong&gt;.azw3&lt;/strong&gt;, &lt;strong&gt;.azw&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Plain text (&lt;strong&gt;.txt&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;FictionBook (&lt;strong&gt;.fb2&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Comic book archive (&lt;strong&gt;.cbr&lt;/strong&gt;, &lt;strong&gt;.cbz&lt;/strong&gt;, &lt;strong&gt;.cbt&lt;/strong&gt;, &lt;strong&gt;.cb7&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Rich text (&lt;strong&gt;.md&lt;/strong&gt;, &lt;strong&gt;.docx&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;Hyper Text (&lt;strong&gt;.html&lt;/strong&gt;, &lt;strong&gt;.xml&lt;/strong&gt;, &lt;strong&gt;.xhtml&lt;/strong&gt;, &lt;strong&gt;.mhtml&lt;/strong&gt;, &lt;strong&gt;.htm&lt;/strong&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Platform support: &lt;strong&gt;Windows&lt;/strong&gt;, &lt;strong&gt;macOS&lt;/strong&gt;, &lt;strong&gt;Linux&lt;/strong&gt;, &lt;strong&gt;Android&lt;/strong&gt;, &lt;strong&gt;iOS&lt;/strong&gt; and &lt;strong&gt;Web&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Utilize &lt;strong&gt;OneDrive&lt;/strong&gt;, &lt;strong&gt;Google Drive&lt;/strong&gt;, &lt;strong&gt;Dropbox&lt;/strong&gt;, &lt;strong&gt;MEGA&lt;/strong&gt;, &lt;strong&gt;pCloud&lt;/strong&gt;, &lt;strong&gt;Aliyun Drive&lt;/strong&gt;, &lt;strong&gt;Box&lt;/strong&gt;, &lt;strong&gt;FTP&lt;/strong&gt;, &lt;strong&gt;SFTP&lt;/strong&gt;, &lt;strong&gt;WebDAV&lt;/strong&gt;, &lt;strong&gt;Object Storage&lt;/strong&gt; to sync and backup your data.&lt;/li&gt; 
 &lt;li&gt;Easily import books from &lt;strong&gt;OneDrive&lt;/strong&gt;, &lt;strong&gt;Google Drive&lt;/strong&gt;, &lt;strong&gt;MEGA&lt;/strong&gt;, &lt;strong&gt;Aliyun Drive&lt;/strong&gt;, &lt;strong&gt;Box&lt;/strong&gt;, &lt;strong&gt;FTP&lt;/strong&gt;, &lt;strong&gt;SFTP&lt;/strong&gt;, &lt;strong&gt;WebDAV&lt;/strong&gt;, &lt;strong&gt;Object Storage&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;AI Translation, AI Dictionary, AI Summarization&lt;/li&gt; 
 &lt;li&gt;Single-column, two-column, or continuous scrolling layouts&lt;/li&gt; 
 &lt;li&gt;Text-to-speech, translation, dictionary, touch screen support, batch import&lt;/li&gt; 
 &lt;li&gt;Add bookmarks, notes, highlights to your books&lt;/li&gt; 
 &lt;li&gt;Adjust font size, font family, line-spacing, paragraph spacing, background color, text color, margins, and brightness&lt;/li&gt; 
 &lt;li&gt;Night mode and theme color&lt;/li&gt; 
 &lt;li&gt;Text highlight, underline, boldness, italics and shadow&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Desktop Version:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stable Version (Recommended): &lt;a href="https://koodoreader.com/en"&gt;Download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Developer version: &lt;a href="https://github.com/koodo-reader/koodo-reader/releases/latest"&gt;Download&lt;/a&gt; ( With new feature and bug fix, but may induce some unknown bugs)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Web Version：&lt;a href="https://web.koodoreader.com"&gt;Visit&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Android Version (works with developer version)：&lt;a href="https://koodoreader.com/en/download"&gt;Download&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;iOS Version (works with developer version)：&lt;a href="https://koodoreader.com/en/download"&gt;Download&lt;/a&gt;&lt;/h3&gt; 
&lt;h3&gt;Install with Scoop:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;scoop bucket add extras
scoop install extras/koodo-reader
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install with Homebrew:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;brew install --cask koodo-reader
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Install with Docker:&lt;/h3&gt; 
&lt;p&gt;If you only need to deploy the web version, simply use the command below.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d \
  --name koodo-reader \
  -p 80:80 \
  -p 8080:8080 \
  -e ENABLE_HTTP_SERVER=false \
  -e SERVER_USERNAME=admin \
  -e SERVER_PASSWORD=securePass123 \
  -v /path/to/host/uploads:/app/uploads \
  ghcr.io/koodo-reader/koodo-reader:master
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you also want to enable the &lt;strong&gt;data source feature&lt;/strong&gt;, please:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Set &lt;strong&gt;&lt;code&gt;ENABLE_HTTP_SERVER&lt;/code&gt;&lt;/strong&gt; to &lt;strong&gt;&lt;code&gt;true&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Change &lt;strong&gt;&lt;code&gt;SERVER_USERNAME&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SERVER_PASSWORD&lt;/code&gt;&lt;/strong&gt; to a secure username and password&lt;/li&gt; 
 &lt;li&gt;Replace &lt;strong&gt;&lt;code&gt;/path/to/host/uploads&lt;/code&gt;&lt;/strong&gt; with the folder where you want to store reading data&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Then, select &lt;strong&gt;Docker&lt;/strong&gt; as the data source in Koodo Reader.&lt;/p&gt; 
&lt;p&gt;Data source functionality use port 8080, and web version use port 80 by default. If you want to switch to port 8090, just change &lt;strong&gt;&lt;code&gt;-p 8080:8080&lt;/code&gt;&lt;/strong&gt; to &lt;strong&gt;&lt;code&gt;-p 8090:8080&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;If you want to use Docker Secrets to set &lt;strong&gt;&lt;code&gt;SERVER_PASSWORD&lt;/code&gt;&lt;/strong&gt;, please refer to &lt;a href="https://github.com/koodo-reader/koodo-reader/raw/master/docker-compose-secret.yml"&gt;docker-compose-secret.yml&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshot&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;b&gt;Book list&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/1.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Book display&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/5.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;List mode&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/2.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Cover mode&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/3.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Reader menu&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/6.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Dark mode&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;kbd&gt;&lt;img src="https://dl.koodoreader.com/screenshots/4.png" width="800px" /&gt;&lt;/kbd&gt; 
 &lt;br /&gt; 
&lt;/div&gt;  
&lt;h2&gt;Develop&lt;/h2&gt; 
&lt;p&gt;Make sure that you have installed yarn and git&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Download the repo&lt;/p&gt; &lt;pre&gt;&lt;code&gt;git clone https://github.com/koodo-reader/koodo-reader.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter desktop mode&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yarn
yarn dev
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Enter web mode&lt;/p&gt; &lt;pre&gt;&lt;code&gt;yarn
yarn start
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Translation&lt;/h2&gt; 
&lt;h3&gt;Edit current language&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Select your target language from the following list.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Click the view button to examine the source file. The untranslated terms are listed at the bottom of each file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Translate the terms to your target language based on the given English reference&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Sumbit the translation file or just translation snippets based on the amount of your translation to &lt;a href="https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;amp;labels=submit+translation&amp;amp;projects=&amp;amp;template=3_submit_translation.yml"&gt;this link&lt;/a&gt;. Pull request is also welcomed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Language(A-Z)&lt;/th&gt; 
   &lt;th&gt;Code&lt;/th&gt; 
   &lt;th&gt;View&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Amharic&lt;/td&gt; 
   &lt;td&gt;am&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/am/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Arabic&lt;/td&gt; 
   &lt;td&gt;ar&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ar/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Armenian&lt;/td&gt; 
   &lt;td&gt;hy&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/hy/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Bengali&lt;/td&gt; 
   &lt;td&gt;bn&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/bn/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Bulgarian&lt;/td&gt; 
   &lt;td&gt;bg&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/bg/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chinese (CN)&lt;/td&gt; 
   &lt;td&gt;zh-CN&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/zh-CN/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chinese (MO)&lt;/td&gt; 
   &lt;td&gt;zh-MO&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/zh-MO/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chinese (TW)&lt;/td&gt; 
   &lt;td&gt;zh-TW&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/zh-TW/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Czech&lt;/td&gt; 
   &lt;td&gt;cs&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/cs/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Danish&lt;/td&gt; 
   &lt;td&gt;da&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/da/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dutch&lt;/td&gt; 
   &lt;td&gt;nl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/nl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;English&lt;/td&gt; 
   &lt;td&gt;en&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/en/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Esperanto&lt;/td&gt; 
   &lt;td&gt;eo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/eo/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Finnish&lt;/td&gt; 
   &lt;td&gt;fi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/fi/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;French&lt;/td&gt; 
   &lt;td&gt;fr&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/fr/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;German&lt;/td&gt; 
   &lt;td&gt;de&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/de/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Greek&lt;/td&gt; 
   &lt;td&gt;el&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/el/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hindi&lt;/td&gt; 
   &lt;td&gt;hi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/hi/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Hungarian&lt;/td&gt; 
   &lt;td&gt;hu&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/hu/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Indonesian&lt;/td&gt; 
   &lt;td&gt;id&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/id/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Interlingue&lt;/td&gt; 
   &lt;td&gt;ie&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ie/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Irish&lt;/td&gt; 
   &lt;td&gt;ga&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ga/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Italian&lt;/td&gt; 
   &lt;td&gt;it&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/it/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Japanese&lt;/td&gt; 
   &lt;td&gt;ja&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ja/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Korean&lt;/td&gt; 
   &lt;td&gt;ko&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ko/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Persian&lt;/td&gt; 
   &lt;td&gt;fa&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/fa/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Polish&lt;/td&gt; 
   &lt;td&gt;pl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/pl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Portuguese&lt;/td&gt; 
   &lt;td&gt;pt&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/pt/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Portuguese (BR)&lt;/td&gt; 
   &lt;td&gt;pt-BR&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/pt-BR/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Romanian&lt;/td&gt; 
   &lt;td&gt;ro&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ro/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Russian&lt;/td&gt; 
   &lt;td&gt;ru&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ru/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Slovenian&lt;/td&gt; 
   &lt;td&gt;sl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/sl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Spanish&lt;/td&gt; 
   &lt;td&gt;es&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/es/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Swedish&lt;/td&gt; 
   &lt;td&gt;sv&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/sv/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tamil&lt;/td&gt; 
   &lt;td&gt;ta&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/ta/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Thai&lt;/td&gt; 
   &lt;td&gt;th&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/th/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tagalog&lt;/td&gt; 
   &lt;td&gt;tl&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/tl/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Tibetan&lt;/td&gt; 
   &lt;td&gt;bo&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/bo/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Turkish&lt;/td&gt; 
   &lt;td&gt;tr&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/tr/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ukrainian&lt;/td&gt; 
   &lt;td&gt;uk&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/uk/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Vietnamese&lt;/td&gt; 
   &lt;td&gt;vi&lt;/td&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/vi/translation.json"&gt;View&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Add new language&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;If you can't find your target language from the above list, Download the Engish source file from &lt;a href="https://raw.githubusercontent.com/koodo-reader/koodo-reader/master/src/assets/locales/en/translation.json"&gt;this link&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;When you finish translation, submit the source file to &lt;a href="https://github.com/koodo-reader/koodo-reader/issues/new?assignees=&amp;amp;labels=submit+translation&amp;amp;projects=&amp;amp;template=3_submit_translation.yml"&gt;this link&lt;/a&gt;. Pull request is also welcomed.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>givanz/VvvebJs</title>
      <link>https://github.com/givanz/VvvebJs</link>
      <description>&lt;p&gt;Drag and drop page builder library written in vanilla javascript without dependencies or build tools.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;VvvebJs&lt;/h1&gt; 
&lt;p align="center"&gt; &lt;img src="https://www.vvveb.com/admin/themes/default/img/biglogo.png" alt="Vvveb" /&gt; &lt;br /&gt;&lt;br /&gt; &lt;strong&gt;Drag and drop page builder javascript library.&lt;/strong&gt; &lt;br /&gt; &lt;span&gt;Built with Vanilla Js with no dependencies or build tools and Bootstrap 5&lt;/span&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.vvveb.com"&gt;Website&lt;/a&gt; | &lt;a href="https://github.com/givanz/VvvebJs/wiki"&gt;Documentation&lt;/a&gt; | &lt;a href="https://github.com/givanz/VvvebJs/discussions"&gt;Forum&lt;/a&gt; | &lt;a href="https://twitter.com/vvvebcms"&gt;Twitter&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://www.vvveb.com/vvvebjs/editor.html"&gt;Live Demo&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For a full featured Open Source CMS using VvvebJs page builder check &lt;a href="https://github.com/givanz/Vvveb"&gt;Vvveb CMS&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Using &lt;a href="https://github.com/givanz/landing"&gt;Vvveb landing page template&lt;/a&gt; for demo page and Bootstrap 5 sections and blocks.&lt;/p&gt; 
&lt;img src="https://www.vvveb.com/img/dark-theme.png" /&gt; 
&lt;img src="https://www.vvveb.com/img/light-theme.png" /&gt; 
&lt;h3&gt;Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Components and blocks/snippets drag and drop and in page insert.&lt;/li&gt; 
 &lt;li&gt;Undo/Redo operations.&lt;/li&gt; 
 &lt;li&gt;One or two panels interface.&lt;/li&gt; 
 &lt;li&gt;File manager and component hierarchy navigation.&lt;/li&gt; 
 &lt;li&gt;Add new page modal with template and folder options.&lt;/li&gt; 
 &lt;li&gt;Live code editor with codemirror plugin syntax highlighting.&lt;/li&gt; 
 &lt;li&gt;Image upload with example php script included.&lt;/li&gt; 
 &lt;li&gt;Page download or export html or save page on server with example php script included.&lt;/li&gt; 
 &lt;li&gt;Components/Sections/Blocks list search.&lt;/li&gt; 
 &lt;li&gt;Bootstrap 5 components.&lt;/li&gt; 
 &lt;li&gt;Media gallery with integrated CC0 image search and server upload support.&lt;/li&gt; 
 &lt;li&gt;Image, video and iframe elements resize handles.&lt;/li&gt; 
 &lt;li&gt;Elements breadcrumb for easier parent elements selection.&lt;/li&gt; 
 &lt;li&gt;Full Google fonts list support for font selection.&lt;/li&gt; 
 &lt;li&gt;Youtube, Google maps, Charts.js etc widgets.&lt;/li&gt; 
 &lt;li&gt;Optional CKEditor plugin to replace builtin text editor.&lt;/li&gt; 
 &lt;li&gt;Zip download plugin to download the page and all assets as zip file.&lt;/li&gt; 
 &lt;li&gt;SVG Icon component bundled with hundreds of free icons.&lt;/li&gt; 
 &lt;li&gt;Animate on scroll support for page elements.&lt;/li&gt; 
 &lt;li&gt;Theme global typography and color pallette editor.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;By default the editor comes with Bootstrap 5 and Widgets components and can be extended with any kind of components and inputs.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clone the repository&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;#git 2.13+ 
git clone --recurse-submodules https://github.com/givanz/VvvebJs

# older git versions 
git clone --recursive https://github.com/givanz/VvvebJs
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Pull changes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git pull --recurse-submodules
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Clone the repository or download a release then open &lt;code&gt;editor.html&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Because of browser iframe security you need to use a webserver such as apache/xampp and open &lt;code&gt;http://localhost/editor.html&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;To use the image upload or page save feature you need to have php installed.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;h3&gt;Local development&lt;/h3&gt; 
&lt;p&gt;From VvvebJs folder run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Image&lt;/h3&gt; 
&lt;p&gt;Or run image&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -p 8080:80 vvveb/vvvebjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;a href="http://localhost:8080/editor.php"&gt;http://localhost:8080/editor.php&lt;/a&gt; or &lt;a href="http://localhost:8080/editor.html"&gt;http://localhost:8080/editor.html&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Save page&lt;/h2&gt; 
&lt;p&gt;Save page function needs either php or node&lt;/p&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;p&gt;If you use docker, xampp or a shared hosting account php should work without any change.&lt;/p&gt; 
&lt;p&gt;Saving is done using &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/save.php"&gt;save.php&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Node&lt;/h3&gt; 
&lt;p&gt;For node go to VvvebJs folder and run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install express
node save.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Open &lt;a href="http://localhost:8080/editor.html"&gt;http://localhost:8080/editor.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Saving is done using &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/save.js"&gt;save.js&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://github.com/givanz/landing"&gt;Landing template&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;To make changes to template files or sections run the following commands from &lt;code&gt;demo/landing&lt;/code&gt; folder&lt;/p&gt; 
&lt;h3&gt;Install gulp&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate html files&lt;/h3&gt; 
&lt;p&gt;Template html partials are located in &lt;code&gt;demo/landing/src&lt;/code&gt; folder.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Watch for changes for development&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate sections list for page builder&lt;/h3&gt; 
&lt;p&gt;Sections html files are located in &lt;code&gt;demo/landing/src/sections&lt;/code&gt; folder grouped in folders with the section group name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp sections
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate blocks list&lt;/h3&gt; 
&lt;p&gt;Blocks html files are located in &lt;code&gt;demo/landing/src/blocks&lt;/code&gt; folder grouped in folders with the blocks group name.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp blocks
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generate screenshots for sections&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp screenshots
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;h3&gt;Initialize example&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;&amp;lt;!-- bootstrap--&amp;gt;
&amp;lt;script src="js/popper.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src="js/bootstrap.min.js"&amp;gt;&amp;lt;/script&amp;gt;

&amp;lt;!-- builder code--&amp;gt;
&amp;lt;script src="libs/builder/builder.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;!-- undo manager--&amp;gt;
&amp;lt;script src="libs/builder/undo.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;!-- inputs--&amp;gt;
&amp;lt;script src="libs/builder/inputs.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;!-- components--&amp;gt;
&amp;lt;script src="libs/builder/components-bootstrap5.js"&amp;gt;&amp;lt;/script&amp;gt;	
&amp;lt;script src="libs/builder/components-widgets.js"&amp;gt;&amp;lt;/script&amp;gt;	

&amp;lt;script&amp;gt;
let pages = [
 {
	name:"narrow-jumbotron", 
	title:"Jumbotron", 
	url: "demo/narrow-jumbotron/index.html", 
	file: "demo/narrow-jumbotron/index.html"
  },
  {name:"landing-page", title:"Landing page", url: "demo/landing/index.html", file: "demo/landing/index.html"},
];
	

let firstPage = Object.keys(pages)[0];
Vvveb.Builder.init(pages[firstPage]["url"], function() {
	//load code after page is loaded here
});

Vvveb.Gui.init();
Vvveb.FileManager.init();
Vvveb.SectionList.init();
Vvveb.Breadcrumb.init();

Vvveb.FileManager.addPages(pages);
Vvveb.FileManager.loadPage(pages[firstPage]["name"]);
Vvveb.Gui.toggleRightColumn(false);
Vvveb.Breadcrumb.init();

&amp;lt;script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For editor html and components/input javascript templates edit &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/editor.html"&gt;editor.html&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For css changes edit &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/scss/editor.scss"&gt;scss/editor.scss&lt;/a&gt; and &lt;a href="https://raw.githubusercontent.com/givanz/VvvebJs/master/scss/_builder.scss"&gt;scss/_builder.scss&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Scss&lt;/h3&gt; 
&lt;p&gt;To compile scss to css first install gulp&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can run&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;or use watch to compile on file change.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm run gulp watch
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;For documentation check the &lt;a href="https://github.com/givanz/VvvebJs/wiki"&gt;wiki&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;If you like the project you can support it with a &lt;a href="https://paypal.me/zgivan"&gt;PayPal donation&lt;/a&gt; or become a backer/sponsor via &lt;a href="https://opencollective.com/vvvebjs"&gt;Open Collective&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://opencollective.com/vvvebjs/sponsors/0/website"&gt;&lt;img src="https://opencollective.com/vvvebjs/sponsors/0/avatar" /&gt;&lt;/a&gt; &lt;a href="https://opencollective.com/vvvebjs/backers/0/website"&gt;&lt;img src="https://opencollective.com/vvvebjs/backers/0/avatar" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Apache 2.0&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>denysdovhan/wtfjs</title>
      <link>https://github.com/denysdovhan/wtfjs</link>
      <description>&lt;p&gt;🤪 A list of funny and tricky JavaScript examples&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://stand-with-ukraine.pp.ua/"&gt;&lt;img src="https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct-single.svg?sanitize=true" alt="SWUbanner" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;What the f*ck JavaScript?&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://www.wtfpl.net"&gt;&lt;img src="https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square" alt="WTFPL 2.0" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/wtfjs"&gt;&lt;img src="https://img.shields.io/npm/v/wtfjs.svg?style=flat-square" alt="NPM version" /&gt;&lt;/a&gt; &lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://img.shields.io/badge/support-patreon-F96854.svg?style=flat-square" alt="Patreon" /&gt;&lt;/a&gt; &lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://img.shields.io/badge/support-buymeacoffee-222222.svg?style=flat-square" alt="Buy Me A Coffee" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;A list of funny and tricky JavaScript examples&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;JavaScript is a great language. It has a simple syntax, large ecosystem and, what is most important, a great community.&lt;/p&gt; 
&lt;p&gt;At the same time, we all know that JavaScript is quite a funny language with tricky parts. Some of them can quickly turn our everyday job into hell, and some of them can make us laugh out loud.&lt;/p&gt; 
&lt;p&gt;The original idea for WTFJS belongs to &lt;a href="https://twitter.com/brianleroux"&gt;Brian Leroux&lt;/a&gt;. This list is highly inspired by his talk &lt;a href="https://www.youtube.com/watch?v=et8xNAc2ic8"&gt;&lt;strong&gt;“WTFJS”&lt;/strong&gt; at dotJS 2012&lt;/a&gt;:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=et8xNAc2ic8"&gt;&lt;img src="https://img.youtube.com/vi/et8xNAc2ic8/0.jpg" alt="dotJS 2012 - Brian Leroux - WTFJS" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Node Packaged Manuscript&lt;/h1&gt; 
&lt;p&gt;You can install this handbook using &lt;code&gt;npm&lt;/code&gt;. Just run:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;$ npm install -g wtfjs
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You should be able to run &lt;code&gt;wtfjs&lt;/code&gt; at the command line now. This will open the manual in your selected &lt;code&gt;$PAGER&lt;/code&gt;. Otherwise, you may continue reading on here.&lt;/p&gt; 
&lt;p&gt;The source is available here: &lt;a href="https://github.com/denysdovhan/wtfjs"&gt;https://github.com/denysdovhan/wtfjs&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Translations&lt;/h1&gt; 
&lt;p&gt;Currently, there are these translations of &lt;strong&gt;wtfjs&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-zh-cn.md"&gt;中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-hi.md"&gt;हिंदी&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-fr-fr.md"&gt;Français&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pt-br.md"&gt;Português do Brasil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-pl-pl.md"&gt;Polski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-it-it.md"&gt;Italiano&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/README-kr.md"&gt;한국어&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/raw/master/CONTRIBUTING.md#translations"&gt;&lt;strong&gt;Help translating to your language&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Translations are maintained by their translators. They may not contain every example, and existing examples may be outdated.&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;!-- START doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE --&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-motivation"&gt;💪🏻 Motivation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-notation"&gt;✍🏻 Notation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-examples"&gt;👀 Examples&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-equal-"&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-not-equal--but-not-equal--too"&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#true-is-false"&gt;true is false&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#banana"&gt;baNaNa&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-nan"&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#objectis-and--weird-cases"&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#its-a-fail"&gt;It's a fail&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true"&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#null-is-falsy-but-not-false"&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#documentall-is-an-object-but-it-is-undefined"&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#minimal-value-is-greater-than-zero"&gt;Minimal value is greater than zero&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#function-is-not-a-function"&gt;function is not a function&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#adding-arrays"&gt;Adding arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#trailing-commas-in-array"&gt;Trailing commas in array&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#array-equality-is-a-monster"&gt;Array equality is a monster&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#undefined-and-number"&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#parseint-is-a-bad-guy"&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#math-with-true-and-false"&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#html-comments-are-valid-in-javascript"&gt;HTML comments are valid in JavaScript&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nan-is-not-a-number"&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-and-null-are-objects"&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#magically-increasing-numbers"&gt;Magically increasing numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#precision-of-01--02"&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#patching-numbers"&gt;Patching numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparison-of-three-numbers"&gt;Comparison of three numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#funny-math"&gt;Funny math&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#addition-of-regexps"&gt;Addition of RegExps&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#strings-arent-instances-of-string"&gt;Strings aren't instances of &lt;code&gt;String&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#calling-functions-with-backticks"&gt;Calling functions with backticks&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#call-call-call"&gt;Call call call&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-constructor-property"&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#object-as-a-key-of-objects-property"&gt;Object as a key of object's property&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-prototypes-with-__proto__"&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-object-"&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#destructuring-with-default-values"&gt;Destructuring with default values&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#dots-and-spreading"&gt;Dots and spreading&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#labels"&gt;Labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#nested-labels"&gt;Nested labels&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#insidious-trycatch"&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#is-this-multiple-inheritance"&gt;Is this multiple inheritance?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-generator-which-yields-itself"&gt;A generator which yields itself&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-class-of-class"&gt;A class of class&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-coercible-objects"&gt;Non-coercible objects&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-arrow-functions"&gt;Tricky arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arrow-functions-can-not-be-a-constructor"&gt;Arrow functions can not be a constructor&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-and-arrow-functions"&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#tricky-return"&gt;Tricky return&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#chaining-assignments-on-object"&gt;Chaining assignments on object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#accessing-object-properties-with-arrays"&gt;Accessing object properties with arrays&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#numbertofixed-display-different-numbers"&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#mathmax-less-than-mathmin"&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#comparing-null-to-0"&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#same-variable-redeclaration"&gt;Same variable redeclaration&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#default-behavior-arrayprototypesort"&gt;Default behavior Array.prototype.sort()&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#resolve-wont-return-promise-instance"&gt;resolve() won't return Promise instance&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-undefined"&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#arguments-binding"&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-alert-from-hell"&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#an-infinite-timeout"&gt;An infinite timeout&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-settimeout-object"&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#double-dot"&gt;Double dot&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#extra-newness"&gt;Extra Newness&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#why-you-should-use-semicolons"&gt;Why you should use semicolons&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#split-a-string-by-a-space"&gt;Split a string by a space&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#a-stringified-string"&gt;A stringified string&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#non-strict-comparison-of-a-number-to-true"&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-other-resources"&gt;📚 Other resources&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting"&gt;🤝 Supporting&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-license"&gt;🎓 License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!-- END doctoc generated TOC please keep comment here to allow auto update --&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h1&gt;💪🏻 Motivation&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Just for fun&lt;/p&gt; 
 &lt;p&gt;— &lt;em&gt;&lt;a href="https://en.wikipedia.org/wiki/Just_for_Fun"&gt;&lt;strong&gt;“Just for Fun: The Story of an Accidental Revolutionary”&lt;/strong&gt;&lt;/a&gt;, Linus Torvalds&lt;/em&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;The primary goal of this list is to collect some crazy examples and explain how they work, if possible. Just because it's fun to learn something that we didn't know before.&lt;/p&gt; 
&lt;p&gt;If you are a beginner, you can use these notes to get a deeper dive into JavaScript. I hope these notes will motivate you to spend more time reading the specification.&lt;/p&gt; 
&lt;p&gt;If you are a professional developer, you can consider these examples as a great reference for all of the quirks and unexpected edges of our beloved JavaScript.&lt;/p&gt; 
&lt;p&gt;In any case, just read this. You're probably going to find something new.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Note:&lt;/strong&gt; If you enjoy reading this document, please, &lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-supporting"&gt;consider supporting the author of this collection&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;✍🏻 Notation&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// -&amp;gt;&lt;/code&gt;&lt;/strong&gt; is used to show the result of an expression. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 + 1; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;// &amp;gt;&lt;/code&gt;&lt;/strong&gt; means the result of &lt;code&gt;console.log&lt;/code&gt; or another output. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log("hello, world!"); // &amp;gt; hello, world!
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;&lt;code&gt;//&lt;/code&gt;&lt;/strong&gt; is just a comment used for explanations. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Assigning a function to foo constant
const foo = function() {};
&lt;/code&gt;&lt;/pre&gt; 
&lt;h1&gt;👀 Examples&lt;/h1&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is equal &lt;code&gt;![]&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Array is equal not array:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[] == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The abstract equality operator converts both sides to numbers to compare them, and both sides become the number &lt;code&gt;0&lt;/code&gt; for different reasons. Arrays are truthy, so on the right, the opposite of a truthy value is &lt;code&gt;false&lt;/code&gt;, which is then coerced to &lt;code&gt;0&lt;/code&gt;. On the left, however, an empty array is coerced to a number without becoming a boolean first, and empty arrays are coerced to &lt;code&gt;0&lt;/code&gt;, despite being truthy.&lt;/p&gt; 
&lt;p&gt;Here is how this expression simplifies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+[] == +![];
0 == +false;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See also &lt;a href="https://raw.githubusercontent.com/denysdovhan/wtfjs/master/#-is-truthy-but-not-true"&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-logical-not-operator"&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;true&lt;/code&gt; is not equal &lt;code&gt;![]&lt;/code&gt;, but not equal &lt;code&gt;[]&lt;/code&gt; too&lt;/h2&gt; 
&lt;p&gt;Array is not equal &lt;code&gt;true&lt;/code&gt;, but not Array is not equal &lt;code&gt;true&lt;/code&gt; too; Array is equal &lt;code&gt;false&lt;/code&gt;, not Array is equal &lt;code&gt;false&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true == []; // -&amp;gt; false
true == ![]; // -&amp;gt; false

// According to the specification

true == []; // -&amp;gt; false

toNumber(true); // -&amp;gt; 1
toNumber([]); // -&amp;gt; 0

1 == 0; // -&amp;gt; false

true == ![]; // -&amp;gt; false

![]; // -&amp;gt; false

true == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;false == []; // -&amp;gt; true
false == ![]; // -&amp;gt; true

// According to the specification

false == []; // -&amp;gt; true

toNumber(false); // -&amp;gt; 0
toNumber([]); // -&amp;gt; 0

0 == 0; // -&amp;gt; true

false == ![]; // -&amp;gt; true

![]; // -&amp;gt; false

false == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;true is false&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!!"false" == !!"true"; // -&amp;gt; true
!!"false" === !!"true"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Consider this step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// true is 'truthy' and represented by value 1 (number), 'true' in string form is NaN.
true == "true"; // -&amp;gt; false
false == "false"; // -&amp;gt; false

// 'false' is not the empty string, so it's a truthy value
!!"false"; // -&amp;gt; true
!!"true"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;baNaNa&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"b" + "a" + +"a" + "a"; // -&amp;gt; 'baNaNa'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is an old-school joke in JavaScript, but remastered. Here's the original one:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"foo" + +"bar"; // -&amp;gt; 'fooNaN'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The expression is evaluated as &lt;code&gt;'foo' + (+'bar')&lt;/code&gt;, which converts &lt;code&gt;'bar'&lt;/code&gt; to not a number.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator"&gt;12.5.6 Unary + Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is not a &lt;code&gt;NaN&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;NaN === NaN; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The specification strictly defines the logic behind this behavior:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;ol&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is different from &lt;code&gt;Type(y)&lt;/code&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number, then 
   &lt;ol&gt; 
    &lt;li&gt;If &lt;code&gt;x&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;If &lt;code&gt;y&lt;/code&gt; is &lt;strong&gt;NaN&lt;/strong&gt;, return &lt;strong&gt;false&lt;/strong&gt;.&lt;/li&gt; 
    &lt;li&gt;… … …&lt;/li&gt; 
   &lt;/ol&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;— &lt;a href="https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison"&gt;&lt;strong&gt;7.2.14&lt;/strong&gt; Strict Equality Comparison&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Following the definition of &lt;code&gt;NaN&lt;/code&gt; from the IEEE:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Four mutually exclusive relations are possible: less than, equal, greater than, and unordered. The last case arises when at least one operand is NaN. Every NaN shall compare unordered with everything, including itself.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://stackoverflow.com/questions/1565164/1573715#1573715"&gt;“What is the rationale for all comparisons returning false for IEEE754 NaN values?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;&lt;code&gt;Object.is()&lt;/code&gt; and &lt;code&gt;===&lt;/code&gt; weird cases&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Object.is()&lt;/code&gt; determines if two values have the same value or not. It works similar to the &lt;code&gt;===&lt;/code&gt; operator but there are a few weird cases:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;Object.is(NaN, NaN); // -&amp;gt; true
NaN === NaN; // -&amp;gt; false

Object.is(-0, 0); // -&amp;gt; false
-0 === 0; // -&amp;gt; true

Object.is(NaN, 0 / 0); // -&amp;gt; true
NaN === 0 / 0; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;In JavaScript lingo, &lt;code&gt;NaN&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt; are the same value but they're not strictly equal. &lt;code&gt;NaN === NaN&lt;/code&gt; being false is apparently due to historical reasons so it would probably be better to accept it as it is.&lt;/p&gt; 
&lt;p&gt;Similarly, &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are strictly equal, but they're not the same value.&lt;/p&gt; 
&lt;p&gt;For more details about &lt;code&gt;NaN === NaN&lt;/code&gt;, see the above case.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.es/ecma262/#sec-object.is"&gt;Here are the TC39 specs about Object.is&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness"&gt;Equality comparisons and sameness&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;It's a fail&lt;/h2&gt; 
&lt;p&gt;You would not believe, but …&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(![] + [])[+[]] +
  (![] + [])[+!+[]] +
  ([![]] + [][[]])[+!+[] + [+[]]] +
  (![] + [])[!+[] + !+[]];
// -&amp;gt; 'fail'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;By breaking that mass of symbols into pieces, we notice that the following pattern occurs often:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;![] + []; // -&amp;gt; 'false'
![]; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;So we try adding &lt;code&gt;[]&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. But due to a number of internal function calls (&lt;code&gt;binary + Operator&lt;/code&gt; -&amp;gt; &lt;code&gt;ToPrimitive&lt;/code&gt; -&amp;gt; &lt;code&gt;[[DefaultValue]]&lt;/code&gt;) we end up converting the right operand to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;![] + [].toString(); // 'false'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Thinking of a string as an array we can access its first character via &lt;code&gt;[0]&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"false"[0]; // -&amp;gt; 'f'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The rest is obvious, but the &lt;code&gt;i&lt;/code&gt; is tricky. The &lt;code&gt;i&lt;/code&gt; in &lt;code&gt;fail&lt;/code&gt; is grabbed by generating the string &lt;code&gt;'falseundefined'&lt;/code&gt; and grabbing the element on index &lt;code&gt;['10']&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;More examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+![]          // -&amp;gt; 0
+!![]         // -&amp;gt; 1
!![]          // -&amp;gt; true
![]           // -&amp;gt; false
[][[]]        // -&amp;gt; undefined
+!![] / +![]  // -&amp;gt; Infinity
[] + {}       // -&amp;gt; "[object Object]"
+{}           // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://patriciopalladino.com/blog/2012/08/09/non-alphanumeric-javascript.html"&gt;Brainfuck beware: JavaScript is after you!&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bluewings.github.io/en/writing-a-sentence-without-using-the-alphabet/#weird-javascript-generator"&gt;Writing a sentence without using the Alphabet&lt;/a&gt; — generate any phrase using JavaScript&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; is truthy, but not &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;An array is a truthy value, however, it's not equal to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!![]       // -&amp;gt; true
[] == true // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Here are links to the corresponding sections in the ECMA-262 specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-logical-not-operator"&gt;&lt;strong&gt;12.5.9&lt;/strong&gt; Logical NOT Operator (&lt;code&gt;!&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;null&lt;/code&gt; is falsy, but not &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;null&lt;/code&gt; is a falsy value, it's not equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;!!null; // -&amp;gt; false
null == false; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, other falsy values, like &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt; are equal to &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;0 == false; // -&amp;gt; true
"" == false; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The explanation is the same as for previous example. Here's the corresponding link:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;document.all&lt;/code&gt; is an object, but it is undefined&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ This is part of the Browser API and won't work in a Node.js environment ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Despite the fact that &lt;code&gt;document.all&lt;/code&gt; is an array-like object and it gives access to the DOM nodes in the page, it responds to the &lt;code&gt;typeof&lt;/code&gt; function as &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all instanceof Object; // -&amp;gt; true
typeof document.all; // -&amp;gt; 'undefined'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;At the same time, &lt;code&gt;document.all&lt;/code&gt; is not equal to &lt;code&gt;undefined&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all === undefined; // -&amp;gt; false
document.all === null; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But at the same time:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;document.all == null; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;document.all&lt;/code&gt; used to be a way to access DOM elements, in particular with old versions of IE. While it has never been a standard it was broadly used in the old age JS code. When the standard progressed with new APIs (such as &lt;code&gt;document.getElementById&lt;/code&gt;) this API call became obsolete and the standard committee had to decide what to do with it. Because of its broad use they decided to keep the API but introduce a willful violation of the JavaScript specification. The reason why it responds to &lt;code&gt;false&lt;/code&gt; when using the &lt;a href="https://www.ecma-international.org/ecma-262/#sec-strict-equality-comparison"&gt;Strict Equality Comparison&lt;/a&gt; with &lt;code&gt;undefined&lt;/code&gt; while &lt;code&gt;true&lt;/code&gt; when using the &lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;Abstract Equality Comparison&lt;/a&gt; is due to the willful violation of the specification that explicitly allows that.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://html.spec.whatwg.org/multipage/obsolete.html#dom-document-all"&gt;“Obsolete features - document.all”&lt;/a&gt; at WhatWG - HTML spec — &lt;a href="https://github.com/getify/You-Dont-Know-JS/raw/0d79079b61dad953bbfde817a5893a49f7e889fb/types%20%26%20grammar/ch4.md#falsy-objects"&gt;“Chapter 4 - ToBoolean - Falsy values”&lt;/a&gt; at YDKJS - Types &amp;amp; Grammar&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Minimal value is greater than zero&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is the smallest number, which is greater than zero:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number.MIN_VALUE &amp;gt; 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is &lt;code&gt;5e-324&lt;/code&gt;, i.e. the smallest positive number that can be represented within float precision, i.e. that's as close as you can get to zero. It defines the best resolution that floats can give you.&lt;/p&gt; 
 &lt;p&gt;Now the overall smallest value is &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; although it's not really numeric in a strict sense.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://stackoverflow.com/questions/26614728/why-is-0-less-than-number-min-value-in-javascript"&gt;“Why is &lt;code&gt;0&lt;/code&gt; less than &lt;code&gt;Number.MIN_VALUE&lt;/code&gt; in JavaScript?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number.min_value"&gt;&lt;strong&gt;20.1.2.9&lt;/strong&gt; Number.MIN_VALUE&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;function is not a function&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;⚠️ A bug present in V8 v5.5 or lower (Node.js &amp;lt;=7) ⚠️&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;All of you know about the annoying &lt;em&gt;undefined is not a function&lt;/em&gt;, but what about this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declare a class which extends null
class Foo extends null {}
// -&amp;gt; [Function: Foo]

new Foo() instanceof null;
// &amp;gt; TypeError: function is not a function
// &amp;gt;     at … … …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a part of the specification. It's just a bug that has now been fixed, so there shouldn't be a problem with it in the future.&lt;/p&gt; 
&lt;h3&gt;Super constructor null of Foo is not a constructor&lt;/h3&gt; 
&lt;p&gt;It's continuation of story with previous bug in modern environment (tested with Chrome 71 and Node.js v11.8.0).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {}
new Foo() instanceof null;
// &amp;gt; TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is not a bug because:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Object.getPrototypeOf(Foo.prototype); // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the class has no constructor the call from prototype chain. But in the parent has no constructor. Just in case, I’ll clarify that &lt;code&gt;null&lt;/code&gt; is an object:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof null === "object";
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Therefore, you can inherit from it (although in the world of the OOP for such terms would have beaten me). So you can't call the null constructor. If you change this code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {
  constructor() {
    console.log("something");
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You see the error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And if you add &lt;code&gt;super&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends null {
  constructor() {
    console.log(111);
    super();
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;JS throws an error:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;TypeError: Super constructor null of Foo is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/pull/102#discussion_r259143582"&gt;An explanation of this issue&lt;/a&gt; by &lt;a href="https://github.com/geekjob"&gt;@geekjob&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adding arrays&lt;/h2&gt; 
&lt;p&gt;What if you try to add two arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[1, 2, 3] + [4, 5, 6]; // -&amp;gt; '1,2,34,5,6'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The concatenation happens. Step-by-step, it looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[1, 2, 3] +
  [4, 5, 6][
    // call toString()
    (1, 2, 3)
  ].toString() +
  [4, 5, 6].toString();
// concatenation
"1,2,3" + "4,5,6";
// -&amp;gt;
("1,2,34,5,6");
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Trailing commas in array&lt;/h2&gt; 
&lt;p&gt;You've created an array with 4 empty elements. Despite all, you'll get an array with three elements, because of trailing commas:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let a = [, , ,];
a.length; // -&amp;gt; 3
a.toString(); // -&amp;gt; ',,'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Trailing commas&lt;/strong&gt; (sometimes called "final commas") can be useful when adding new elements, parameters, or properties to JavaScript code. If you want to add a new property, you can simply add a new line without modifying the previously last line if that line already uses a trailing comma. This makes version-control diffs cleaner and editing code might be less troublesome.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Trailing_commas"&gt;Trailing commas&lt;/a&gt; at MDN&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Array equality is a monster&lt;/h2&gt; 
&lt;p&gt;Array equality is a monster in JS, as you can see below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[] == ''   // -&amp;gt; true
[] == 0    // -&amp;gt; true
[''] == '' // -&amp;gt; true
[0] == 0   // -&amp;gt; true
[0] == ''  // -&amp;gt; false
[''] == 0  // -&amp;gt; true

[null] == ''      // true
[null] == 0       // true
[undefined] == '' // true
[undefined] == 0  // true

[[]] == 0  // true
[[]] == '' // true

[[[[[[]]]]]] == '' // true
[[[[[[]]]]]] == 0  // true

[[[[[[ null ]]]]]] == 0  // true
[[[[[[ null ]]]]]] == '' // true

[[[[[[ undefined ]]]]]] == 0  // true
[[[[[[ undefined ]]]]]] == '' // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You should watch very carefully for the above examples! The behaviour is described in section &lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt; of the specification.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;undefined&lt;/code&gt; and &lt;code&gt;Number&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;If we don't pass any arguments into the &lt;code&gt;Number&lt;/code&gt; constructor, we'll get &lt;code&gt;0&lt;/code&gt;. The value &lt;code&gt;undefined&lt;/code&gt; is assigned to formal arguments when there are no actual arguments, so you might expect that &lt;code&gt;Number&lt;/code&gt; without arguments takes &lt;code&gt;undefined&lt;/code&gt; as a value of its parameter. However, when we pass &lt;code&gt;undefined&lt;/code&gt;, we will get &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number(); // -&amp;gt; 0
Number(undefined); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;If no arguments were passed to this function's invocation, let &lt;code&gt;n&lt;/code&gt; be &lt;code&gt;+0&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Else, let &lt;code&gt;n&lt;/code&gt; be ? &lt;code&gt;ToNumber(value)&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;In case of &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;ToNumber(undefined)&lt;/code&gt; should return &lt;code&gt;NaN&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Here's the corresponding section:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number-constructor"&gt;&lt;strong&gt;20.1.1&lt;/strong&gt; The Number Constructor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tonumber"&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;parseInt&lt;/code&gt; is a bad guy&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; is famous by its quirks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt("f*ck"); // -&amp;gt; NaN
parseInt("f*ck", 16); // -&amp;gt; 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; This happens because &lt;code&gt;parseInt&lt;/code&gt; will continue parsing character-by-character until it hits a character it doesn't know. The &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;'f*ck'&lt;/code&gt; is the hexadecimal digit &lt;code&gt;15&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Parsing &lt;code&gt;Infinity&lt;/code&gt; to integer is something…&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;//
parseInt("Infinity", 10); // -&amp;gt; NaN
// ...
parseInt("Infinity", 18); // -&amp;gt; NaN...
parseInt("Infinity", 19); // -&amp;gt; 18
// ...
parseInt("Infinity", 23); // -&amp;gt; 18...
parseInt("Infinity", 24); // -&amp;gt; 151176378
// ...
parseInt("Infinity", 29); // -&amp;gt; 385849803
parseInt("Infinity", 30); // -&amp;gt; 13693557269
// ...
parseInt("Infinity", 34); // -&amp;gt; 28872273981
parseInt("Infinity", 35); // -&amp;gt; 1201203301724
parseInt("Infinity", 36); // -&amp;gt; 1461559270678...
parseInt("Infinity", 37); // -&amp;gt; NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful with parsing &lt;code&gt;null&lt;/code&gt; too:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt(null, 24); // -&amp;gt; 23
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;It's converting &lt;code&gt;null&lt;/code&gt; to the string &lt;code&gt;"null"&lt;/code&gt; and trying to convert it. For radixes 0 through 23, there are no numerals it can convert, so it returns NaN. At 24, &lt;code&gt;"n"&lt;/code&gt;, the 14th letter, is added to the numeral system. At 31, &lt;code&gt;"u"&lt;/code&gt;, the 21st letter, is added and the entire string can be decoded. At 37 on there is no longer any valid numeral set that can be generated and &lt;code&gt;NaN&lt;/code&gt; is returned.&lt;/p&gt; 
 &lt;p&gt;— &lt;a href="https://stackoverflow.com/questions/6459758/parseintnull-24-23-wait-what"&gt;“parseInt(null, 24) === 23… wait, what?”&lt;/a&gt; at StackOverflow&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Don't forget about octals:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt("06"); // 6
parseInt("08"); // 8 if support ECMAScript 5
parseInt("08"); // 0 if not support ECMAScript 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; If the input string begins with "0", radix is eight (octal) or 10 (decimal). Exactly which radix is chosen is implementation-dependent. ECMAScript 5 specifies that 10 (decimal) is used, but not all browsers support this yet. For this reason always specify a radix when using &lt;code&gt;parseInt&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;parseInt&lt;/code&gt; always convert input to string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 2
Number({ toString: () =&amp;gt; 2, valueOf: () =&amp;gt; 1 }); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Be careful while parsing floating point values&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;parseInt(0.000001); // -&amp;gt; 0
parseInt(0.0000001); // -&amp;gt; 1
parseInt(1 / 1999999); // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;💡 Explanation:&lt;/strong&gt; &lt;code&gt;ParseInt&lt;/code&gt; takes a string argument and returns an integer of the specified radix. &lt;code&gt;ParseInt&lt;/code&gt; also strips anything after and including the first non-digit in the string parameter. &lt;code&gt;0.000001&lt;/code&gt; is converted to a string &lt;code&gt;"0.000001"&lt;/code&gt; and the &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;0&lt;/code&gt;. When &lt;code&gt;0.0000001&lt;/code&gt; is converted to a string it is treated as &lt;code&gt;"1e-7"&lt;/code&gt; and hence &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;1&lt;/code&gt;. &lt;code&gt;1/1999999&lt;/code&gt; is interpreted as &lt;code&gt;5.00000250000125e-7&lt;/code&gt; and &lt;code&gt;parseInt&lt;/code&gt; returns &lt;code&gt;5&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Math with &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;Let's do some math:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;true + true; // -&amp;gt; 2
(true + true) * (true + true) - true; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Hmmm… 🤔&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We can coerce values to numbers with the &lt;code&gt;Number&lt;/code&gt; constructor. It's quite obvious that &lt;code&gt;true&lt;/code&gt; will be coerced to &lt;code&gt;1&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number(true); // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The unary plus operator attempts to convert its value into a number. It can convert string representations of integers and floats, as well as the non-string values &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt;. If it cannot parse a particular value, it will evaluate to &lt;code&gt;NaN&lt;/code&gt;. That means we can coerce &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;1&lt;/code&gt; easier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;+true; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When you're performing addition or multiplication, the &lt;code&gt;ToNumber&lt;/code&gt; method is invoked. According to the specification, this method returns:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;true&lt;/strong&gt;, return &lt;strong&gt;1&lt;/strong&gt;. If &lt;code&gt;argument&lt;/code&gt; is &lt;strong&gt;false&lt;/strong&gt;, return &lt;strong&gt;+0&lt;/strong&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;That's why we can add boolean values as regular numbers and get correct results.&lt;/p&gt; 
&lt;p&gt;Corresponding sections:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-unary-plus-operator"&gt;&lt;strong&gt;12.5.6&lt;/strong&gt; Unary &lt;code&gt;+&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tonumber"&gt;&lt;strong&gt;7.1.3&lt;/strong&gt; ToNumber(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;HTML comments are valid in JavaScript&lt;/h2&gt; 
&lt;p&gt;You will be impressed, but &lt;code&gt;&amp;lt;!--&lt;/code&gt; (which is known as HTML comment) is a valid comment in JavaScript.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// valid comment
&amp;lt;!-- valid comment too
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Impressed? HTML-like comments were intended to allow browsers that didn't understand the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag to degrade gracefully. These browsers, e.g. Netscape 1.x are no longer popular. So there is really no point in putting HTML comments in your script tags anymore.&lt;/p&gt; 
&lt;p&gt;Since Node.js is based on the V8 engine, HTML-like comments are supported by the Node.js runtime too. Moreover, they're a part of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-html-like-comments"&gt;&lt;strong&gt;B.1.3&lt;/strong&gt; HTML-like Comments&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;NaN&lt;/code&gt; is &lt;del&gt;not&lt;/del&gt; a number&lt;/h2&gt; 
&lt;p&gt;Type of &lt;code&gt;NaN&lt;/code&gt; is a &lt;code&gt;'number'&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof NaN; // -&amp;gt; 'number'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Explanations of how &lt;code&gt;typeof&lt;/code&gt; and &lt;code&gt;instanceof&lt;/code&gt; operators work:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-typeof-operator"&gt;&lt;strong&gt;12.5.5&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-instanceofoperator"&gt;&lt;strong&gt;12.10.4&lt;/strong&gt; Runtime Semantics: InstanceofOperator(&lt;code&gt;O&lt;/code&gt;,&lt;code&gt;C&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; are objects&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof []; // -&amp;gt; 'object'
typeof null; // -&amp;gt; 'object'

// however
null instanceof Object; // false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The behavior of &lt;code&gt;typeof&lt;/code&gt; operator is defined in this section of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/12.0/#sec-typeof-operator"&gt;&lt;strong&gt;13.5.3&lt;/strong&gt; The &lt;code&gt;typeof&lt;/code&gt; Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;According to the specification, the &lt;code&gt;typeof&lt;/code&gt; operator returns a string according to &lt;a href="https://262.ecma-international.org/12.0/#table-typeof-operator-results"&gt;Table 37: &lt;code&gt;typeof&lt;/code&gt; Operator Results&lt;/a&gt;. For &lt;code&gt;null&lt;/code&gt;, ordinary, standard exotic and non-standard exotic objects, which do not implement &lt;code&gt;[[Call]]&lt;/code&gt;, it returns the string &lt;code&gt;"object"&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;However, you can check the type of an object by using the &lt;code&gt;toString&lt;/code&gt; method.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Object.prototype.toString.call([]);
// -&amp;gt; '[object Array]'

Object.prototype.toString.call(new Date());
// -&amp;gt; '[object Date]'

Object.prototype.toString.call(null);
// -&amp;gt; '[object Null]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Magically increasing numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;999999999999999; // -&amp;gt; 999999999999999
9999999999999999; // -&amp;gt; 10000000000000000

10000000000000000; // -&amp;gt; 10000000000000000
10000000000000000 + 1; // -&amp;gt; 10000000000000000
10000000000000000 + 1.1; // -&amp;gt; 10000000000000002
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is caused by IEEE 754-2008 standard for Binary Floating-Point Arithmetic. At this scale, it rounds to the nearest even number. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-ecmascript-language-types-number-type"&gt;&lt;strong&gt;6.1.6&lt;/strong&gt; The Number Type&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/IEEE_754"&gt;IEEE 754&lt;/a&gt; on Wikipedia&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Precision of &lt;code&gt;0.1 + 0.2&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;A well-known joke. An addition of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; is deadly precise:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;0.1 + 0.2; // -&amp;gt; 0.30000000000000004
0.1 + 0.2 === 0.3; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The answer for the &lt;a href="https://stackoverflow.com/questions/588004/is-floating-point-math-broken"&gt;”Is floating point math broken?”&lt;/a&gt; question on StackOverflow:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The constants &lt;code&gt;0.2&lt;/code&gt; and &lt;code&gt;0.3&lt;/code&gt; in your program will also be approximations to their true values. It happens that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.2&lt;/code&gt; is larger than the rational number &lt;code&gt;0.2&lt;/code&gt; but that the closest &lt;code&gt;double&lt;/code&gt; to &lt;code&gt;0.3&lt;/code&gt; is smaller than the rational number &lt;code&gt;0.3&lt;/code&gt;. The sum of &lt;code&gt;0.1&lt;/code&gt; and &lt;code&gt;0.2&lt;/code&gt; winds up being larger than the rational number &lt;code&gt;0.3&lt;/code&gt; and hence disagreeing with the constant in your code.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;This problem is so known that there is even a website called &lt;a href="http://0.30000000000000004.com/"&gt;0.30000000000000004.com&lt;/a&gt;. It occurs in every language that uses floating-point math, not just JavaScript.&lt;/p&gt; 
&lt;h2&gt;Patching numbers&lt;/h2&gt; 
&lt;p&gt;You can add your own methods to wrapper objects like &lt;code&gt;Number&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Number.prototype.isOne = function() {
  return Number(this) === 1;
};

(1.0).isOne(); // -&amp;gt; true
(1).isOne(); // -&amp;gt; true
(2.0).isOne(); // -&amp;gt; false
(7).isOne(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Obviously, you can extend the &lt;code&gt;Number&lt;/code&gt; object like any other object in JavaScript. However, it's not recommended if the behavior of the defined method is not a part of the specification. Here is the list of &lt;code&gt;Number&lt;/code&gt;'s properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-number-objects"&gt;&lt;strong&gt;20.1&lt;/strong&gt; Number Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparison of three numbers&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 &amp;lt; 2 &amp;lt; 3; // -&amp;gt; true
3 &amp;gt; 2 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work that way? Well, the problem is in the first part of an expression. Here's how it works:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 &amp;lt; 2 &amp;lt; 3; // 1 &amp;lt; 2 -&amp;gt; true
true &amp;lt; 3; // true -&amp;gt; 1
1 &amp;lt; 3; // -&amp;gt; true

3 &amp;gt; 2 &amp;gt; 1; // 3 &amp;gt; 2 -&amp;gt; true
true &amp;gt; 1; // true -&amp;gt; 1
1 &amp;gt; 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We can fix this with &lt;em&gt;Greater than or equal operator (&lt;code&gt;&amp;gt;=&lt;/code&gt;)&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;3 &amp;gt; 2 &amp;gt;= 1; // true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about Relational operators in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-relational-operators"&gt;&lt;strong&gt;12.10&lt;/strong&gt; Relational Operators&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Funny math&lt;/h2&gt; 
&lt;p&gt;Often the results of arithmetic operations in JavaScript might be quite unexpected. Consider these examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt; 3  - 1  // -&amp;gt; 2
 3  + 1  // -&amp;gt; 4
'3' - 1  // -&amp;gt; 2
'3' + 1  // -&amp;gt; '31'

'' + '' // -&amp;gt; ''
[] + [] // -&amp;gt; ''
{} + [] // -&amp;gt; 0
[] + {} // -&amp;gt; '[object Object]'
{} + {} // -&amp;gt; '[object Object][object Object]'

'222' - -'111' // -&amp;gt; 333

[4] * [4]       // -&amp;gt; 16
[] * []         // -&amp;gt; 0
[4, 4] * [4, 4] // NaN
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;What's happening in the first four examples? Here's a small table to understand addition in JavaScript:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Number  + Number  -&amp;gt; addition
Boolean + Number  -&amp;gt; addition
Boolean + Boolean -&amp;gt; addition
Number  + String  -&amp;gt; concatenation
String  + Boolean -&amp;gt; concatenation
String  + String  -&amp;gt; concatenation
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about other examples? A &lt;code&gt;ToPrimitive&lt;/code&gt; and &lt;code&gt;ToString&lt;/code&gt; methods are being implicitly called for &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;{}&lt;/code&gt; before addition. Read more about evaluation process in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-addition-operator-plus"&gt;&lt;strong&gt;12.8.3&lt;/strong&gt; The Addition Operator (&lt;code&gt;+&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-toprimitive"&gt;&lt;strong&gt;7.1.1&lt;/strong&gt; ToPrimitive(&lt;code&gt;input&lt;/code&gt; [,&lt;code&gt;PreferredType&lt;/code&gt;])&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tostring"&gt;&lt;strong&gt;7.1.12&lt;/strong&gt; ToString(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Notably, &lt;code&gt;{} + []&lt;/code&gt; here is the exception. The reason why it differs from &lt;code&gt;[] + {}&lt;/code&gt; is that, without parenthesis, it is interpreted as a code block and then a unary +, converting &lt;code&gt;[]&lt;/code&gt; into a number. It sees the following:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  // a code block here
}
+[]; // -&amp;gt; 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To get the same output as &lt;code&gt;[] + {}&lt;/code&gt; we can wrap it in parenthesis.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;({} + []); // -&amp;gt; [object Object]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Addition of RegExps&lt;/h2&gt; 
&lt;p&gt;Did you know you can add numbers like this?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Patch a toString method
RegExp.prototype.toString =
  function() {
    return this.source;
  } /
  7 /
  -/5/; // -&amp;gt; 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-get-regexp.prototype.source"&gt;&lt;strong&gt;21.2.5.10&lt;/strong&gt; get RegExp.prototype.source&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Strings aren't instances of &lt;code&gt;String&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"str"; // -&amp;gt; 'str'
typeof "str"; // -&amp;gt; 'string'
"str" instanceof String; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;String&lt;/code&gt; constructor returns a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof String("str"); // -&amp;gt; 'string'
String("str"); // -&amp;gt; 'str'
String("str") == "str"; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Let's try with a &lt;code&gt;new&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new String("str") == "str"; // -&amp;gt; true
typeof new String("str"); // -&amp;gt; 'object'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Object? What's that?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new String("str"); // -&amp;gt; [String: 'str']
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More information about the String constructor in the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-string-constructor"&gt;&lt;strong&gt;21.1.1&lt;/strong&gt; The String Constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Calling functions with backticks&lt;/h2&gt; 
&lt;p&gt;Let's declare a function which logs all params into the console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function f(...args) {
  return args;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;No doubt, you know you can call this function like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;f(1, 2, 3); // -&amp;gt; [ 1, 2, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But did you know you can call any function with backticks?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;f`true is ${true}, false is ${false}, array is ${[1, 2, 3]}`;
// -&amp;gt; [ [ 'true is ', ', false is ', ', array is ', '' ],
// -&amp;gt;   true,
// -&amp;gt;   false,
// -&amp;gt;   [ 1, 2, 3 ] ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Well, this is not magic at all if you're familiar with &lt;em&gt;Tagged template literals&lt;/em&gt;. In the example above, &lt;code&gt;f&lt;/code&gt; function is a tag for template literal. Tags before template literal allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions. Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function template(strings, ...keys) {
  // do something with strings and keys…
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is the &lt;a href="http://mxstbr.blog/2016/11/styled-components-magic-explained/"&gt;magic behind&lt;/a&gt; famous library called &lt;a href="https://www.styled-components.com/"&gt;💅 styled-components&lt;/a&gt;, which is popular in the React community.&lt;/p&gt; 
&lt;p&gt;Link to the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-tagged-templates"&gt;&lt;strong&gt;12.3.7&lt;/strong&gt; Tagged Templates&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Call call call&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Found by &lt;a href="http://twitter.com/cramforce"&gt;@cramforce&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;console.log.call.call.call.call.call.apply(a =&amp;gt; a, [1, 2]);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Attention, it could break your mind! Try to reproduce this code in your head: we're applying the &lt;code&gt;call&lt;/code&gt; method using the &lt;code&gt;apply&lt;/code&gt; method. Read more:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-function.prototype.call"&gt;&lt;strong&gt;19.2.3.3&lt;/strong&gt; Function.prototype.call(&lt;code&gt;thisArg&lt;/code&gt;, ...&lt;code&gt;args&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-function.prototype.apply"&gt;**19.2.3.1 ** Function.prototype.apply(&lt;code&gt;thisArg&lt;/code&gt;, &lt;code&gt;argArray&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;constructor&lt;/code&gt; property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const c = "constructor";
c[c][c]('console.log("WTF?")')(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Let's consider this example step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Declare a new constant which is a string 'constructor'
const c = "constructor";

// c is a string
c; // -&amp;gt; 'constructor'

// Getting a constructor of string
c[c]; // -&amp;gt; [Function: String]

// Getting a constructor of constructor
c[c][c]; // -&amp;gt; [Function: Function]

// Call the Function constructor and pass
// the body of new function as an argument
c[c][c]('console.log("WTF?")'); // -&amp;gt; [Function: anonymous]

// And then call this anonymous function
// The result is console-logging a string 'WTF?'
c[c][c]('console.log("WTF?")')(); // &amp;gt; WTF?
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;An &lt;code&gt;Object.prototype.constructor&lt;/code&gt; returns a reference to the &lt;code&gt;Object&lt;/code&gt; constructor function that created the instance object. In case with strings it is &lt;code&gt;String&lt;/code&gt;, in case with numbers it is &lt;code&gt;Number&lt;/code&gt; and so on.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor"&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-object.prototype.constructor"&gt;&lt;strong&gt;19.1.3.1&lt;/strong&gt; Object.prototype.constructor&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Object as a key of object's property&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{ [{}]: {} } // -&amp;gt; { '[object Object]': {} }
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why does this work so? Here we're using a &lt;em&gt;Computed property name&lt;/em&gt;. When you pass an object between those brackets, it coerces object to a string, so we get the property key &lt;code&gt;'[object Object]'&lt;/code&gt; and the value &lt;code&gt;{}&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;We can make "brackets hell" like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;({ [{}]: { [{}]: {} } }[{}][{}]); // -&amp;gt; {}

// structure:
// {
//   '[object Object]': {
//     '[object Object]': {}
//   }
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Read more about object literals here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer"&gt;&lt;strong&gt;12.2.6&lt;/strong&gt; Object Initializer&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Accessing prototypes with &lt;code&gt;__proto__&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;As we know, primitives don't have prototypes. However, if we try to get a value of &lt;code&gt;__proto__&lt;/code&gt; for primitives, we would get this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This happens because when something doesn't have a prototype, it will be wrapped into a wrapper object using the &lt;code&gt;ToObject&lt;/code&gt; method. So, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(1).__proto__; // -&amp;gt; [Number: 0]
(1).__proto__.__proto__; // -&amp;gt; {}
(1).__proto__.__proto__.__proto__; // -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Here is more information about &lt;code&gt;__proto__&lt;/code&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-object.prototype.__proto__"&gt;&lt;strong&gt;B.2.2.1&lt;/strong&gt; Object.prototype.&lt;strong&gt;proto&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-toobject"&gt;&lt;strong&gt;7.1.13&lt;/strong&gt; ToObject(&lt;code&gt;argument&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;`${{Object}}`&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What is the result of the expression below?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;`${{ Object }}`;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// -&amp;gt; '[object Object]'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;We defined an object with a property &lt;code&gt;Object&lt;/code&gt; using &lt;em&gt;Shorthand property notation&lt;/em&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{
  Object: Object;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then we've passed this object to the template literal, so the &lt;code&gt;toString&lt;/code&gt; method calls for that object. That's why we get the string &lt;code&gt;'[object Object]'&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-template-literals"&gt;&lt;strong&gt;12.2.9&lt;/strong&gt; Template Literals&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Destructuring with default values&lt;/h2&gt; 
&lt;p&gt;Consider this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let x,
  { x: y = 1 } = { x };
y;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The example above is a great task for an interview. What the value of &lt;code&gt;y&lt;/code&gt;? The answer is:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let x,
  { x: y = 1 } = { x };
y;
//  ↑       ↑           ↑    ↑
//  1       3           2    4
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;With the example above:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;We declare &lt;code&gt;x&lt;/code&gt; with no value, so it's &lt;code&gt;undefined&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we pack the value of &lt;code&gt;x&lt;/code&gt; into the object property &lt;code&gt;x&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Then we extract the value of &lt;code&gt;x&lt;/code&gt; using destructuring and want to assign it to &lt;code&gt;y&lt;/code&gt;. If the value is not defined, then we're going to use &lt;code&gt;1&lt;/code&gt; as the default value.&lt;/li&gt; 
 &lt;li&gt;Return the value of &lt;code&gt;y&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Object_initializer"&gt;Object initializer&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Dots and spreading&lt;/h2&gt; 
&lt;p&gt;Interesting examples could be composed with spreading of arrays. Consider this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...[..."..."]].length; // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Why &lt;code&gt;3&lt;/code&gt;? When we use the &lt;a href="http://www.ecma-international.org/ecma-262/6.0/#sec-array-initializer"&gt;spread operator&lt;/a&gt;, the &lt;code&gt;@@iterator&lt;/code&gt; method is called, and the returned iterator is used to obtain the values to be iterated. The default iterator for string spreads a string into characters. After spreading, we pack these characters into an array. Then we spread this array again and pack it back to an array.&lt;/p&gt; 
&lt;p&gt;A &lt;code&gt;'...'&lt;/code&gt; string consists with three &lt;code&gt;.&lt;/code&gt; characters, so the length of resulting array is &lt;code&gt;3&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Now, step-by-step:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...'...']             // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']]        // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']].length // -&amp;gt; 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Obviously, we can spread and wrap the elements of an array as many times as we want:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[...'...']                 // -&amp;gt; [ '.', '.', '.' ]
[...[...'...']]            // -&amp;gt; [ '.', '.', '.' ]
[...[...[...'...']]]       // -&amp;gt; [ '.', '.', '.' ]
[...[...[...[...'...']]]]  // -&amp;gt; [ '.', '.', '.' ]
// and so on …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Labels&lt;/h2&gt; 
&lt;p&gt;Not many programmers know about labels in JavaScript. They are kind of interesting:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;foo: {
  console.log("first");
  break foo;
  console.log("second");
}

// &amp;gt; first
// -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The labeled statement is used with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements. You can use a label to identify a loop, and then use the &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt; statements to indicate whether a program should interrupt the loop or continue its execution.&lt;/p&gt; 
&lt;p&gt;In the example above, we identify a label &lt;code&gt;foo&lt;/code&gt;. After that &lt;code&gt;console.log('first');&lt;/code&gt; executes and then we interrupt the execution.&lt;/p&gt; 
&lt;p&gt;Read more about labels in JavaScript:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.github.io/ecma262/#sec-labelled-statements"&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label"&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Nested labels&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;a: b: c: d: e: f: g: 1, 2, 3, 4, 5; // -&amp;gt; 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Similar to previous examples, follow these links:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-comma-operator"&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://tc39.github.io/ecma262/#sec-labelled-statements"&gt;&lt;strong&gt;13.13&lt;/strong&gt; Labelled Statements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/label"&gt;Labeled statements&lt;/a&gt; at MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Insidious &lt;code&gt;try..catch&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;What will this expression return? &lt;code&gt;2&lt;/code&gt; or &lt;code&gt;3&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(() =&amp;gt; {
  try {
    return 2;
  } finally {
    return 3;
  }
})();
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The answer is &lt;code&gt;3&lt;/code&gt;. Surprised?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-try-statement"&gt;&lt;strong&gt;13.15&lt;/strong&gt; The &lt;code&gt;try&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Is this multiple inheritance?&lt;/h2&gt; 
&lt;p&gt;Take a look at the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new class F extends (String, Array) {}(); // -&amp;gt; F []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Is this a multiple inheritance? Nope.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The interesting part is the value of the &lt;code&gt;extends&lt;/code&gt; clause (&lt;code&gt;(String, Array)&lt;/code&gt;). The grouping operator always returns its last argument, so &lt;code&gt;(String, Array)&lt;/code&gt; is actually just &lt;code&gt;Array&lt;/code&gt;. That means we've just created a class which extends &lt;code&gt;Array&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-class-definitions"&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-comma-operator"&gt;&lt;strong&gt;12.16&lt;/strong&gt; Comma Operator (&lt;code&gt;,&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A generator which yields itself&lt;/h2&gt; 
&lt;p&gt;Consider this example of a generator which yields itself:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function* f() {
  yield f;
})().next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As you can see, the returned value is an object with its &lt;code&gt;value&lt;/code&gt; equal to &lt;code&gt;f&lt;/code&gt;. In that case, we can do something like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function* f() {
  yield f;
})()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()(
    // -&amp;gt; { value: [GeneratorFunction: f], done: false }

    // and again
    function* f() {
      yield f;
    }
  )()
  .next()
  .value()
  .next()
  .value()
  .next()
  .value()
  .next();
// -&amp;gt; { value: [GeneratorFunction: f], done: false }

// and so on
// …
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;To understand why this works that way, read these sections of the specification:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-control-abstraction-objects"&gt;&lt;strong&gt;25&lt;/strong&gt; Control Abstraction Objects&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-generator-objects"&gt;&lt;strong&gt;25.3&lt;/strong&gt; Generator Objects&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A class of class&lt;/h2&gt; 
&lt;p&gt;Consider this obfuscated syntax playing:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;typeof new class {
  class() {}
}(); // -&amp;gt; 'object'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It seems like we're declaring a class inside of class. Should be an error, however, we get the string &lt;code&gt;'object'&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Since ECMAScript 5 era, &lt;em&gt;keywords&lt;/em&gt; are allowed as &lt;em&gt;property names&lt;/em&gt;. So think about it as this simple object example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const foo = {
  class: function() {}
};
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;And ES6 standardized shorthand method definitions. Also, classes can be anonymous. So if we drop &lt;code&gt;: function&lt;/code&gt; part, we're going to get:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class {
  class() {}
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The result of a default class is always a simple object. And its typeof should return &lt;code&gt;'object'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;Read more here:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-method-definitions"&gt;&lt;strong&gt;14.3&lt;/strong&gt; Method Definitions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-class-definitions"&gt;&lt;strong&gt;14.5&lt;/strong&gt; Class Definitions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-coercible objects&lt;/h2&gt; 
&lt;p&gt;With well-known symbols, there's a way to get rid of type coercion. Take a look:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function nonCoercible(val) {
  if (val == null) {
    throw TypeError("nonCoercible should not be called with null or undefined");
  }

  const res = Object(val);

  res[Symbol.toPrimitive] = () =&amp;gt; {
    throw TypeError("Trying to coerce non-coercible object");
  };

  return res;
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now we can use this like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// objects
const foo = nonCoercible({ foo: "foo" });

foo * 10; // -&amp;gt; TypeError: Trying to coerce non-coercible object
foo + "evil"; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// strings
const bar = nonCoercible("bar");

bar + "1"; // -&amp;gt; TypeError: Trying to coerce non-coercible object
bar.toString() + 1; // -&amp;gt; bar1
bar === "bar"; // -&amp;gt; false
bar.toString() === "bar"; // -&amp;gt; true
bar == "bar"; // -&amp;gt; TypeError: Trying to coerce non-coercible object

// numbers
const baz = nonCoercible(1);

baz == 1; // -&amp;gt; TypeError: Trying to coerce non-coercible object
baz === 1; // -&amp;gt; false
baz.valueOf() === 1; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/chicoxyzzy/5dd24608e886adf5444499896dff1197"&gt;A gist by Sergey Rubanov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-well-known-symbols"&gt;&lt;strong&gt;6.1.5.1&lt;/strong&gt; Well-Known Symbols&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; 10;
f(); // -&amp;gt; 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Okay, fine, but what about this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; {};
f(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;You might expect &lt;code&gt;{}&lt;/code&gt; instead of &lt;code&gt;undefined&lt;/code&gt;. This is because the curly braces are part of the syntax of the arrow functions, so &lt;code&gt;f&lt;/code&gt; will return undefined. It is however possible to return the &lt;code&gt;{}&lt;/code&gt; object directly from an arrow function, by enclosing the return value with brackets.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; ({});
f(); // -&amp;gt; {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Arrow functions can not be a constructor&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = function() {
  this.a = 1;
};
new f(); // -&amp;gt; f { 'a': 1 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; {
  this.a = 1;
};
new f(); // -&amp;gt; TypeError: f is not a constructor
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions cannot be used as constructors and will throw an error when used with &lt;code&gt;new&lt;/code&gt;. Because they have a lexical &lt;code&gt;this&lt;/code&gt;, and do not have a &lt;code&gt;prototype&lt;/code&gt; property, so it would not make much sense.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; and arrow functions&lt;/h2&gt; 
&lt;p&gt;Consider the example below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = function() {
  return arguments;
};
f("a"); // -&amp;gt; { '0': 'a' }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now, try do to the same with an arrow function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = () =&amp;gt; arguments;
f("a"); // -&amp;gt; Uncaught ReferenceError: arguments is not defined
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Arrow functions are a lightweight version of regular functions with a focus on being short and lexical &lt;code&gt;this&lt;/code&gt;. At the same time arrow functions do not provide a binding for the &lt;code&gt;arguments&lt;/code&gt; object. As a valid alternative use the &lt;code&gt;rest parameters&lt;/code&gt; to achieve the same result:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let f = (...args) =&amp;gt; args;
f("a");
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions"&gt;Arrow functions&lt;/a&gt; at MDN.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Tricky return&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; statement is also tricky. Consider this:&lt;/p&gt; 
&lt;!-- prettier-ignore-start --&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function() {
  return
  {
    b: 10;
  }
})(); // -&amp;gt; undefined
&lt;/code&gt;&lt;/pre&gt; 
&lt;!-- prettier-ignore-end --&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;return&lt;/code&gt; and the returned expression must be in the same line:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(function() {
  return {
    b: 10
  };
})(); // -&amp;gt; { b: 10 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is because of a concept called Automatic Semicolon Insertion, which automagically inserts semicolons after most newlines. In the first example, there is a semicolon inserted between the &lt;code&gt;return&lt;/code&gt; statement and the object literal, so the function returns &lt;code&gt;undefined&lt;/code&gt; and the object literal is never evaluated.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-rules-of-automatic-semicolon-insertion"&gt;&lt;strong&gt;11.9.1&lt;/strong&gt; Rules of Automatic Semicolon Insertion&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-return-statement"&gt;&lt;strong&gt;13.10&lt;/strong&gt; The &lt;code&gt;return&lt;/code&gt; Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Chaining assignments on object&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var foo = { n: 1 };
var bar = foo;

foo.x = foo = { n: 2 };

foo.x; // -&amp;gt; undefined
foo; // -&amp;gt; {n: 2}
bar; // -&amp;gt; {n: 1, x: {n: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;From right to left, &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo, and the result of this assignment &lt;code&gt;{n: 2}&lt;/code&gt; is assigned to foo.x, that's why bar is &lt;code&gt;{n: 1, x: {n: 2}}&lt;/code&gt; as bar is a reference to foo. But why foo.x is undefined while bar.x is not ?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Foo and bar references the same object &lt;code&gt;{n: 1}&lt;/code&gt;, and lvalues are resolved before assignations. &lt;code&gt;foo = {n: 2}&lt;/code&gt; is creating a new object, and so foo is updated to reference that new object. The trick here is foo in &lt;code&gt;foo.x = ...&lt;/code&gt; as a lvalue was resolved beforehand and still reference the old &lt;code&gt;foo = {n: 1}&lt;/code&gt; object and update it by adding the x value. After that chain assignments, bar still reference the old foo object, but foo reference the new &lt;code&gt;{n: 2}&lt;/code&gt; object, where x is not existing.&lt;/p&gt; 
&lt;p&gt;It's equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var foo = { n: 1 };
var bar = foo;

foo = { n: 2 }; // -&amp;gt; {n: 2}
bar.x = foo; // -&amp;gt; {n: 1, x: {n: 2}}
// bar.x point to the address of the new foo object
// it's not equivalent to: bar.x = {n: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Accessing object properties with arrays&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var obj = { property: 1 };
var array = ["property"];

obj[array]; // -&amp;gt; 1

// this also works with nested arrays
var nestedArray = [[[[[[[[[["property"]]]]]]]]]];
obj[nestedArray]; // -&amp;gt; 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What about pseudo-multidimensional arrays?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var map = {};
var x = 1;
var y = 2;
var z = 3;

map[[x, y, z]] = true;
map[[x + 10, y, z]] = true;

map["1,2,3"]; // -&amp;gt; true
map["11,2,3"]; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The brackets &lt;code&gt;[]&lt;/code&gt; operator converts the passed expression using &lt;code&gt;toString&lt;/code&gt;. Converting a one-element array to a string is akin to converting the contained element to the string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;["property"].toString(); // -&amp;gt; 'property'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; display different numbers&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt; can behave a bit strange in different browsers. Check out this example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(0.7875).toFixed(3);
// Firefox: -&amp;gt; 0.787
// Chrome: -&amp;gt; 0.787
// IE11: -&amp;gt; 0.788
(0.7876).toFixed(3);
// Firefox: -&amp;gt; 0.788
// Chrome: -&amp;gt; 0.788
// IE11: -&amp;gt; 0.788
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;While your first instinct may be that IE11 is correct and Firefox/Chrome are wrong, the reality is that Firefox/Chrome are more directly obeying standards for numbers (IEEE-754 Floating Point), while IE11 is minutely disobeying them in (what is probably) an effort to give clearer results.&lt;/p&gt; 
&lt;p&gt;You can see why this occurs with a few quick tests:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// Confirm the odd result of rounding a 5 down
(0.7875).toFixed(3); // -&amp;gt; 0.787
// It looks like it's just a 5 when you expand to the
// limits of 64-bit (double-precision) float accuracy
(0.7875).toFixed(14); // -&amp;gt; 0.78750000000000
// But what if you go beyond the limit?
(0.7875).toFixed(20); // -&amp;gt; 0.78749999999999997780
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Floating point numbers are not stored as a list of decimal digits internally, but through a more complicated methodology that produces tiny inaccuracies that are usually rounded away by toString and similar calls, but are actually present internally.&lt;/p&gt; 
&lt;p&gt;In this case, that "5" on the end was actually an extremely tiny fraction below a true 5. Rounding it at any reasonable length will render it as a 5... but it is actually not a 5 internally.&lt;/p&gt; 
&lt;p&gt;IE11, however, will report the value input with only zeros appended to the end even in the toFixed(20) case, as it seems to be forcibly rounding the value to reduce the troubles from hardware limits.&lt;/p&gt; 
&lt;p&gt;See for reference &lt;code&gt;NOTE 2&lt;/code&gt; on the ECMA-262 definition for &lt;code&gt;toFixed&lt;/code&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262//#sec-number.prototype.tofixed"&gt;&lt;strong&gt;20.1.3.3&lt;/strong&gt; Number.prototype.toFixed (&lt;code&gt;fractionDigits&lt;/code&gt;)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;I find this example hilarious:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Math.min() &amp;gt; Math.max(); // -&amp;gt; true
Math.min() &amp;lt; Math.max(); // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is a simple one. Let's consider each part of this expression separately:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;Math.min(); // -&amp;gt; Infinity
Math.max(); // -&amp;gt; -Infinity
Infinity &amp;gt; -Infinity; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Why so? Well, &lt;code&gt;Math.max()&lt;/code&gt; is not the same thing as &lt;code&gt;Number.MAX_VALUE&lt;/code&gt;. It does not return the largest possible number.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Math.max&lt;/code&gt; takes arguments, tries to convert the to numbers, compares each one and then returns the largest remaining. If no arguments are given, the result is −∞. If any value is &lt;code&gt;NaN&lt;/code&gt;, the result is &lt;code&gt;NaN&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;The opposite is happening for &lt;code&gt;Math.min&lt;/code&gt;. &lt;code&gt;Math.min&lt;/code&gt; returns ∞, if no arguments are given.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/5.1/#sec-15.8.2.11"&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.max&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/5.1/#sec-15.8.2.12"&gt;&lt;strong&gt;15.8.2.11&lt;/strong&gt; Math.min&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://charlieharvey.org.uk/page/why_math_max_is_less_than_math_min"&gt;Why is &lt;code&gt;Math.max()&lt;/code&gt; less than &lt;code&gt;Math.min()&lt;/code&gt;?&lt;/a&gt; by Charlie Harvey&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Comparing &lt;code&gt;null&lt;/code&gt; to &lt;code&gt;0&lt;/code&gt;&lt;/h2&gt; 
&lt;p&gt;The following expressions seem to introduce a contradiction:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null == 0; // -&amp;gt; false
null &amp;gt; 0; // -&amp;gt; false
null &amp;gt;= 0; // -&amp;gt; true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;How can &lt;code&gt;null&lt;/code&gt; be neither equal to nor greater than &lt;code&gt;0&lt;/code&gt;, if &lt;code&gt;null &amp;gt;= 0&lt;/code&gt; is actually &lt;code&gt;true&lt;/code&gt;? (This also works with less than in the same way.)&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The way these three expressions are evaluated are all different and are responsible for producing this unexpected behavior.&lt;/p&gt; 
&lt;p&gt;First, the abstract equality comparison &lt;code&gt;null == 0&lt;/code&gt;. Normally, if this operator can't compare the values on either side properly, it converts both to numbers and compares the numbers. Then, you might expect the following behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;// This is not what happens
(null == 0 + null) == +0;
0 == 0;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;However, according to a close reading of the spec, the number conversion doesn't actually happen on a side that is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Therefore, if you have &lt;code&gt;null&lt;/code&gt; on one side of the equal sign, the other side must be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; for the expression to return &lt;code&gt;true&lt;/code&gt;. Since this is not the case, &lt;code&gt;false&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;p&gt;Next, the relational comparison &lt;code&gt;null &amp;gt; 0&lt;/code&gt;. The algorithm here, unlike that of the abstract equality operator, &lt;em&gt;will&lt;/em&gt; convert &lt;code&gt;null&lt;/code&gt; to a number. Therefore, we get this behavior:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null &amp;gt; 0
+null = +0
0 &amp;gt; 0
false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Finally, the relational comparison &lt;code&gt;null &amp;gt;= 0&lt;/code&gt;. You could argue that this expression should be the result of &lt;code&gt;null &amp;gt; 0 || null == 0&lt;/code&gt;; if this were the case, then the above results would mean that this would also be &lt;code&gt;false&lt;/code&gt;. However, the &lt;code&gt;&amp;gt;=&lt;/code&gt; operator in fact works in a very different way, which is basically to take the opposite of the &lt;code&gt;&amp;lt;&lt;/code&gt; operator. Because our example with the greater than operator above also holds for the less than operator, that means this expression is actually evaluated like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;null &amp;gt;= 0;
!(null &amp;lt; 0);
!(+null &amp;lt; +0);
!(0 &amp;lt; 0);
!false;
true;
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-abstract-relational-comparison"&gt;&lt;strong&gt;7.2.12&lt;/strong&gt; Abstract Relational Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blog.campvanilla.com/javascript-the-curious-case-of-null-0-7b131644e274"&gt;An in-depth explanation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Same variable redeclaration&lt;/h2&gt; 
&lt;p&gt;JS allows to redeclare variables:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;a;
a;
// This is also valid
a, a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Works also in strict mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;var a, a, a;
var a;
var a;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;All definitions are merged into one definition.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-variable-statement"&gt;&lt;strong&gt;13.3.2&lt;/strong&gt; Variable Statement&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Default behavior Array.prototype.sort()&lt;/h2&gt; 
&lt;p&gt;Imagine that you need to sort an array of numbers.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[10, 1, 3].sort(); // -&amp;gt; [ 1, 10, 3 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;The default sort order is built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.ecma-international.org/ecma-262/#sec-array.prototype.sort"&gt;&lt;strong&gt;22.1.3.25&lt;/strong&gt; Array.prototype.sort ( comparefn )&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Hint&lt;/h3&gt; 
&lt;p&gt;Pass &lt;code&gt;compareFn&lt;/code&gt; if you try to sort anything but string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[10, 1, 3].sort((a, b) =&amp;gt; a - b); // -&amp;gt; [ 1, 3, 10 ]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;resolve() won't return Promise instance&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const theObject = {
  a: 7
};
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; true
  console.log(value); // &amp;gt; { a: 7 }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The &lt;code&gt;value&lt;/code&gt; which is resolved from &lt;code&gt;thePromise&lt;/code&gt; is exactly &lt;code&gt;theObject&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;How about input another &lt;code&gt;Promise&lt;/code&gt; into the &lt;code&gt;resolve&lt;/code&gt; function?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;const theObject = new Promise((resolve, reject) =&amp;gt; {
  resolve(7);
}); // Promise instance object
const thePromise = new Promise((resolve, reject) =&amp;gt; {
  resolve(theObject);
}); // Promise instance object

thePromise.then(value =&amp;gt; {
  console.log(value === theObject); // &amp;gt; false
  console.log(value); // &amp;gt; 7
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve"&gt;Promise.resolve() on MDN&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The specification is &lt;a href="https://tc39.es/ecma262/#sec-promise-resolve-functions"&gt;ECMAScript 25.6.1.3.2 Promise Resolve Functions&lt;/a&gt;. But it is not quite human-friendly.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;{}{}&lt;/code&gt; is undefined&lt;/h2&gt; 
&lt;p&gt;Write them in the console. They will return the value defined in the last object.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;{}{}; // -&amp;gt; undefined
{}{}{}; // -&amp;gt; undefined
{}{}{}{}; // -&amp;gt; undefined
{foo: 'bar'}{}; // -&amp;gt; 'bar'
{}{foo: 'bar'}; // -&amp;gt; 'bar'
{}{foo: 'bar'}{}; // -&amp;gt; 'bar'
{a: 'b'}{c:' d'}{}; // -&amp;gt; 'd'
{a: 'b', c: 'd'}{}; // &amp;gt; SyntaxError: Unexpected token ':'
({}{}); // &amp;gt; SyntaxError: Unexpected token '{'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;When inspecting each &lt;code&gt;{}&lt;/code&gt;, they returns undefined. If you inspect &lt;code&gt;{foo: 'bar'}{}&lt;/code&gt;, you will find &lt;code&gt;{foo: 'bar'}&lt;/code&gt; is &lt;code&gt;'bar'&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;There are two meanings for &lt;code&gt;{}&lt;/code&gt;: an object or a block. For example, the &lt;code&gt;{}&lt;/code&gt; in &lt;code&gt;() =&amp;gt; {}&lt;/code&gt; means block. So we need to use &lt;code&gt;() =&amp;gt; ({})&lt;/code&gt; to return an object.&lt;/p&gt; 
&lt;p&gt;Let's use &lt;code&gt;{foo: 'bar'}&lt;/code&gt; as a block. Write this snippet in your console:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;if (true) {
  foo: "bar";
} // -&amp;gt; 'bar'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Surprisingly, it behaviors the same! You can guess here that &lt;code&gt;{foo: 'bar'}{}&lt;/code&gt; is a block.&lt;/p&gt; 
&lt;h2&gt;&lt;code&gt;arguments&lt;/code&gt; binding&lt;/h2&gt; 
&lt;p&gt;Consider this function:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;function a(x) {
  arguments[0] = "hello";
  console.log(x);
}

a(); // &amp;gt; undefined
a(1); // &amp;gt; "hello"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;arguments&lt;/code&gt; is an Array-like object that contains the values of the arguments passed to that function. When no arguments are passed, then there's no &lt;code&gt;x&lt;/code&gt; to override.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments"&gt;The arguments object&lt;/a&gt; on MDN&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An &lt;code&gt;alert&lt;/code&gt; from hell&lt;/h2&gt; 
&lt;p&gt;This on is literally from hell:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;[666]["\155\141\160"]["\143\157\156\163\164\162\165\143\164\157\162"](
  "\141\154\145\162\164(666)"
)(666); // alert(666)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This one is based on octal escape sequences and multiple strings.&lt;/p&gt; 
&lt;p&gt;Any character with a character code lower than 256 (i.e. any character in the extended ASCII range) can be escaped using its octal-encoded character code, prefixed with &lt;code&gt;\&lt;/code&gt;. An example above is basically and &lt;code&gt;alert&lt;/code&gt; ecoded by octal escape sequances.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/aemkei/status/897172907222237185"&gt;Martin Kleppe tweet about it&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mathiasbynens.be/notes/javascript-escapes#octal"&gt;JavaScript character escape sequences&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://davidwalsh.name/multiline-javascript-strings"&gt;Multi-Line JavaScript Strings&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;An infinite timeout&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an infinite timeout?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(() =&amp;gt; console.log("called"), Infinity); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It will executed immediately instead of infinity delay.&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Usually, runtime stores the delay as a 32-bit signed integer internally. This causes an integer overflow, resulting in the timeout being executed immediately.&lt;/p&gt; 
&lt;p&gt;For example, in Node.js we will get this warning:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;(node:1731) TimeoutOverflowWarning: Infinity does not fit into a 32-bit signed integer.
Timeout duration was set to 1.
(Use `node --trace-warnings ...` to show where the warning was created)
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/api/timers.html#timers_settimeout_callback_delay_args"&gt;Node.js Documentation on Timers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3.org/TR/2011/WD-html5-20110525/timers.html"&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A &lt;code&gt;setTimeout&lt;/code&gt; object&lt;/h2&gt; 
&lt;p&gt;Guess what would happen if we set an callback that's not a function to &lt;code&gt;setTimeout&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout('{a: 1}', 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'called'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This is also fine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout({a: 1}, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; 'Uncaught SyntaxError: Unexpected identifier               setTimeout (async) (anonymous) @ VM__:1'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This throws an &lt;strong&gt;SyntaxError&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Note that this can easily happen if your function returns an object and you call it here instead of passing it! What if the content - policy is set to &lt;code&gt;self&lt;/code&gt;?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;setTimeout(123, 100); // -&amp;gt; &amp;lt;timeoutId&amp;gt;
// &amp;gt; console.error("[Report Only] Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: "script-src 'report-sample' 'self' ")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The console refuses to run it at all!&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; can be called with &lt;code&gt;code&lt;/code&gt; as first argument, which will be passed on to &lt;code&gt;eval&lt;/code&gt;, which is bad. Eval will coerce her input to String, and evaluate what is produced, so Objects becomes &lt;code&gt;'[object Object]'&lt;/code&gt; which has hmmm ... an &lt;code&gt;'Unexpected identifier'&lt;/code&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval"&gt;eval()&lt;/a&gt; on MDN (don't use this)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout"&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/a&gt; on MDN&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"&gt;Content Security Policy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.w3.org/TR/2011/WD-html5-20110525/timers.html"&gt;Timers&lt;/a&gt; on W3C&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Double dot&lt;/h2&gt; 
&lt;p&gt;Let's try to coerce a number to a string:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;27.toString() // &amp;gt; Uncaught SyntaxError: Invalid or unexpected token
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Maybe we should try with two dots?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;27..toString(); // -&amp;gt; '27'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;But why doesn't first example work?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;It's just a language grammar limitation.&lt;/p&gt; 
&lt;p&gt;The &lt;code&gt;.&lt;/code&gt; character presents an ambiguity. It can be understood to be the member operator, or a decimal, depending on its placement.&lt;/p&gt; 
&lt;p&gt;The specification's interpretation of the &lt;code&gt;.&lt;/code&gt; character in that particular position is that it will be a decimal. This is defined by the numeric literal syntax of ECMAScript.&lt;/p&gt; 
&lt;p&gt;You must always use parenthesis or an addition dot to make such expression valid.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;(27).toString(); // -&amp;gt; '27'
// or
27..toString(); // -&amp;gt; '27'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/6853865/usage-of-tostring-in-javascript/6853910#6853910"&gt;Usage of toString in JavaScript&lt;/a&gt; on StackOverflow&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/13149282/why-does-10-tostring-work-but-10-tostring-does-not/13149301#13149301"&gt;Why does 10..toString() work, but 10.toString() does not?&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Extra Newness&lt;/h2&gt; 
&lt;p&gt;I present this as an oddity for your amusement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends Function {
  constructor(val) {
    super();
    this.prototype.val = val;
  }
}

new new Foo(":D")().val; // -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Constructors in JavaScript are just functions with some special treatment. By extending Function using the class syntax you create a class that, when instantiated, is now a function, which you can then additionally instantiate.&lt;/p&gt; 
&lt;p&gt;While not exhaustively tested, I believe the last statement can be analyzed thus:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;new new Foo(":D")().val(new newFooInstance()).val;
veryNewFooInstance.val;
// -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;As a tiny addendum, doing &lt;code&gt;new Function('return "bar";')&lt;/code&gt; of course creates a function with the body &lt;code&gt;return "bar";&lt;/code&gt;. Since &lt;code&gt;super()&lt;/code&gt; in the constructor of our &lt;code&gt;Foo&lt;/code&gt; class is calling &lt;code&gt;Function&lt;/code&gt;'s constructor, it should come as no surprise now to see that we can additionally manipulate things in there.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class Foo extends Function {
  constructor(val) {
    super(`
      this.val = arguments[0];
    `);
    this.prototype.val = val;
  }
}

var foo = new new Foo(":D")("D:");
foo.val; // -&amp;gt; 'D:'
delete foo.val; // remove the instance prop 'val', deferring back to the prototype's 'val'.
foo.val; // -&amp;gt; ':D'
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/denysdovhan/wtfjs/issues/78"&gt;Class Extends Function: Extra Newness&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why you should use semicolons&lt;/h2&gt; 
&lt;p&gt;Writing some standard JavaScript… and then BOOM!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class SomeClass {
  ["array"] = []
  ["string"] = "str"
}

new SomeClass().array; // -&amp;gt; 'str'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;What the …?&lt;/p&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Once again, this is all thanks to the Automatic Semicolon Insertion.&lt;/p&gt; 
&lt;p&gt;An example above is basically the same as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;class SomeClass {
  ["array"] = ([]["string"] = "str");
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You basically assign a string &lt;code&gt;str&lt;/code&gt; into an &lt;code&gt;array&lt;/code&gt; property.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/SeaRyanC/status/1148726605222535168"&gt;An original tweet with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tc39/notes/raw/master/meetings/2017-09/sept-26.md"&gt;TC39 meeting when they debated about it&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Split a string by a space&lt;/h2&gt; 
&lt;p&gt;Have you ever tried to split a string by a space?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;"".split(""); // -&amp;gt; []
// but…
"".split(" "); // -&amp;gt; [""]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;This is expected behaviour. Its responsibility is to divide the input string every time a separator occurs in that input string. When you pass in an empty string it'll never find a separator and thus return that string.&lt;/p&gt; 
&lt;p&gt;Let's quote the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The substrings are determined by searching from left to right for occurrences of &lt;code&gt;separator&lt;/code&gt;; these occurrences are not part of any String in the returned array, but serve to divide up the String value.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://tc39.es/ecma262/#sec-string.prototype.split"&gt;&lt;strong&gt;22.1.3.21&lt;/strong&gt; String.prototype.split&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/SeaRyanC/status/1331656278104440833"&gt;An original tween with an example&lt;/a&gt; by Ryan Cavanaugh&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/kl13nt/status/1331742810932916227?s=20"&gt;A tween with an explanation&lt;/a&gt; by Nabil Tharwat&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;A stringified string&lt;/h2&gt; 
&lt;p&gt;This caused a bug that I've been solving for a few days:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;JSON.stringify("production") === "production"; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;Let's see what &lt;code&gt;JSON.stringify&lt;/code&gt; is returning:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;JSON.stringify("production"); // -&amp;gt; '"production"'
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is actually a stringified string, so it's true:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;'"production"' === "production"; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.json.org/json-en.html"&gt;ECMA-404 The JSON Data Interchange Standard.&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Non-strict comparison of a number to &lt;code&gt;true&lt;/code&gt;&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 == true; // -&amp;gt; true
// but…
Boolean(1.1); // -&amp;gt; true
1.1 == true; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;💡 Explanation:&lt;/h3&gt; 
&lt;p&gt;According to the specification:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;The comparison x == y, where x and y are values, produces true or false. Such a comparison is performed as follows:&lt;/p&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;If &lt;code&gt;Type(x)&lt;/code&gt; is Number and &lt;code&gt;Type(y)&lt;/code&gt; is String, return the result of the comparison &lt;code&gt;x == ! ToNumber(y)&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;So this comparison is performed like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;1 == true;
1 == Number(true);
1 == 1; // -&amp;gt; true
// but…
1.1 == true;
1.1 == Number(true);
1.1 == 1; // -&amp;gt; false
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://262.ecma-international.org/11.0/index.html#sec-abstract-equality-comparison"&gt;&lt;strong&gt;7.2.15&lt;/strong&gt; Abstract Equality Comparison&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;📚 Other resources&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="http://wtfjs.com/"&gt;wtfjs.com&lt;/a&gt; — a collection of those very special irregularities, inconsistencies and just plain painfully unintuitive moments for the language of the web.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.destroyallsoftware.com/talks/wat"&gt;Wat&lt;/a&gt; — A lightning talk by Gary Bernhardt from CodeMash 2012&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2pL28CcEijU"&gt;What the... JavaScript?&lt;/a&gt; — Kyle Simpsons talk for Forward 2 attempts to “pull out the crazy” from JavaScript. He wants to help you produce cleaner, more elegant, more readable code, then inspire people to contribute to the open source community.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://zero.milosz.ca/"&gt;Zeros in JavaScript&lt;/a&gt; — a comparison table of &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; in JavaScript.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;🤝 Supporting&lt;/h1&gt; 
&lt;p&gt;Hi! I work on this project in my spare time, in addition to my primary job. I hope you enjoy reading it. If you do, please, consider supporting me 🙏.&lt;/p&gt; 
&lt;p&gt;Every single donation is important. Your donation is gonna make a clear statement: My work is valued.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;🙏 Thank you for your support! 🙏&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service&lt;/th&gt; 
   &lt;th align="center"&gt;Link&lt;/th&gt; 
   &lt;th align="center"&gt;Action&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Patreon&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;Become a patron&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;&lt;img src="https://c5.patreon.com/external/logo/become_a_patron_button@2x.png" width="120px" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;BuyMeACoffee&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://patreon.com/denysdovhan"&gt;Buy me a cup of ☕️ or 🥤&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;a href="https://buymeacoffee.com/denysdovhan"&gt;&lt;img src="https://cdn.buymeacoffee.com/buttons/default-black.png" width="120px" /&gt;&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Bitcoin&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;code&gt;1EJsKs6rPsqa7QLoVLpe3wgcdL9Q8WmDxE&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/3459374/107130426-0ae4f800-68d6-11eb-9b86-15bf33467615.png" width="120px" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Ethereum&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;code&gt;0x6aF39C917359897ae6969Ad682C14110afe1a0a1&lt;/code&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;img src="https://user-images.githubusercontent.com/3459374/107130370-55b24000-68d5-11eb-93f5-075355c7fcd4.png" width="120px" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;⚠️ Note:&lt;/strong&gt; I live in Ukraine and services like PayPal and Stripe don't work with Ukrainian bank accounts. This means there's no way for me to set up GitHub Sponsors, OpenCollective, or services relied on them. Sorry, those are the only ways you can support me for now.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;🎓 License&lt;/h1&gt; 
&lt;p&gt;&lt;a href="http://www.wtfpl.net"&gt;&lt;img src="https://img.shields.io/badge/License-WTFPL%202.0-lightgrey.svg?style=flat-square" alt="CC 4.0" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;© &lt;a href="http://denysdovhan.com"&gt;Denys Dovhan&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-webui/open-webui</title>
      <link>https://github.com/open-webui/open-webui</link>
      <description>&lt;p&gt;User-friendly AI Interface (Supports Ollama, OpenAI API, ...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Open WebUI 👋&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/stars/open-webui/open-webui?style=social" alt="GitHub stars" /&gt; &lt;img src="https://img.shields.io/github/forks/open-webui/open-webui?style=social" alt="GitHub forks" /&gt; &lt;img src="https://img.shields.io/github/watchers/open-webui/open-webui?style=social" alt="GitHub watchers" /&gt; &lt;img src="https://img.shields.io/github/repo-size/open-webui/open-webui" alt="GitHub repo size" /&gt; &lt;img src="https://img.shields.io/github/languages/count/open-webui/open-webui" alt="GitHub language count" /&gt; &lt;img src="https://img.shields.io/github/languages/top/open-webui/open-webui" alt="GitHub top language" /&gt; &lt;img src="https://img.shields.io/github/last-commit/open-webui/open-webui?color=red" alt="GitHub last commit" /&gt; &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;&lt;img src="https://img.shields.io/badge/Discord-Open_WebUI-blue?logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sponsors/tjbck"&gt;&lt;img src="https://img.shields.io/static/v1?label=Sponsor&amp;amp;message=%E2%9D%A4&amp;amp;logo=GitHub&amp;amp;color=%23fe8e86" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Open WebUI is an &lt;a href="https://docs.openwebui.com/features/plugin/"&gt;extensible&lt;/a&gt;, feature-rich, and user-friendly self-hosted AI platform designed to operate entirely offline.&lt;/strong&gt; It supports various LLM runners like &lt;strong&gt;Ollama&lt;/strong&gt; and &lt;strong&gt;OpenAI-compatible APIs&lt;/strong&gt;, with &lt;strong&gt;built-in inference engine&lt;/strong&gt; for RAG, making it a &lt;strong&gt;powerful AI deployment solution&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Passionate about open-source AI? &lt;a href="https://careers.openwebui.com/"&gt;Join our team →&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/open-webui/open-webui/main/demo.gif" alt="Open WebUI Demo" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; &lt;strong&gt;Looking for an &lt;a href="https://docs.openwebui.com/enterprise"&gt;Enterprise Plan&lt;/a&gt;?&lt;/strong&gt; – &lt;strong&gt;&lt;a href="mailto:sales@openwebui.com"&gt;Speak with Our Sales Team Today!&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;Get &lt;strong&gt;enhanced capabilities&lt;/strong&gt;, including &lt;strong&gt;custom theming and branding&lt;/strong&gt;, &lt;strong&gt;Service Level Agreement (SLA) support&lt;/strong&gt;, &lt;strong&gt;Long-Term Support (LTS) versions&lt;/strong&gt;, and &lt;strong&gt;more!&lt;/strong&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For more information, be sure to check out our &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Key Features of Open WebUI ⭐&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;🚀 &lt;strong&gt;Effortless Setup&lt;/strong&gt;: Install seamlessly using Docker or Kubernetes (kubectl, kustomize or helm) for a hassle-free experience with support for both &lt;code&gt;:ollama&lt;/code&gt; and &lt;code&gt;:cuda&lt;/code&gt; tagged images.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🤝 &lt;strong&gt;Ollama/OpenAI API Integration&lt;/strong&gt;: Effortlessly integrate OpenAI-compatible APIs for versatile conversations alongside Ollama models. Customize the OpenAI API URL to link with &lt;strong&gt;LMStudio, GroqCloud, Mistral, OpenRouter, and more&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛡️ &lt;strong&gt;Granular Permissions and User Groups&lt;/strong&gt;: By allowing administrators to create detailed user roles and permissions, we ensure a secure user environment. This granularity not only enhances security but also allows for customized user experiences, fostering a sense of ownership and responsibility amongst users.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔄 &lt;strong&gt;SCIM 2.0 Support&lt;/strong&gt;: Enterprise-grade user and group provisioning through SCIM 2.0 protocol, enabling seamless integration with identity providers like Okta, Azure AD, and Google Workspace for automated user lifecycle management.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Responsive Design&lt;/strong&gt;: Enjoy a seamless experience across Desktop PC, Laptop, and Mobile devices.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📱 &lt;strong&gt;Progressive Web App (PWA) for Mobile&lt;/strong&gt;: Enjoy a native app-like experience on your mobile device with our PWA, providing offline access on localhost and a seamless user interface.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;✒️🔢 &lt;strong&gt;Full Markdown and LaTeX Support&lt;/strong&gt;: Elevate your LLM experience with comprehensive Markdown and LaTeX capabilities for enriched interaction.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎤📹 &lt;strong&gt;Hands-Free Voice/Video Call&lt;/strong&gt;: Experience seamless communication with integrated hands-free voice and video call features, allowing for a more dynamic and interactive chat environment.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🛠️ &lt;strong&gt;Model Builder&lt;/strong&gt;: Easily create Ollama models via the Web UI. Create and add custom characters/agents, customize chat elements, and import models effortlessly through &lt;a href="https://openwebui.com/"&gt;Open WebUI Community&lt;/a&gt; integration.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🐍 &lt;strong&gt;Native Python Function Calling Tool&lt;/strong&gt;: Enhance your LLMs with built-in code editor support in the tools workspace. Bring Your Own Function (BYOF) by simply adding your pure Python functions, enabling seamless integration with LLMs.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;📚 &lt;strong&gt;Local RAG Integration&lt;/strong&gt;: Dive into the future of chat interactions with groundbreaking Retrieval Augmented Generation (RAG) support. This feature seamlessly integrates document interactions into your chat experience. You can load documents directly into the chat or add files to your document library, effortlessly accessing them using the &lt;code&gt;#&lt;/code&gt; command before a query.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔍 &lt;strong&gt;Web Search for RAG&lt;/strong&gt;: Perform web searches using providers like &lt;code&gt;SearXNG&lt;/code&gt;, &lt;code&gt;Google PSE&lt;/code&gt;, &lt;code&gt;Brave Search&lt;/code&gt;, &lt;code&gt;serpstack&lt;/code&gt;, &lt;code&gt;serper&lt;/code&gt;, &lt;code&gt;Serply&lt;/code&gt;, &lt;code&gt;DuckDuckGo&lt;/code&gt;, &lt;code&gt;TavilySearch&lt;/code&gt;, &lt;code&gt;SearchApi&lt;/code&gt; and &lt;code&gt;Bing&lt;/code&gt; and inject the results directly into your chat experience.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐 &lt;strong&gt;Web Browsing Capability&lt;/strong&gt;: Seamlessly integrate websites into your chat experience using the &lt;code&gt;#&lt;/code&gt; command followed by a URL. This feature allows you to incorporate web content directly into your conversations, enhancing the richness and depth of your interactions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🎨 &lt;strong&gt;Image Generation Integration&lt;/strong&gt;: Seamlessly incorporate image generation capabilities using options such as AUTOMATIC1111 API or ComfyUI (local), and OpenAI's DALL-E (external), enriching your chat experience with dynamic visual content.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;⚙️ &lt;strong&gt;Many Models Conversations&lt;/strong&gt;: Effortlessly engage with various models simultaneously, harnessing their unique strengths for optimal responses. Enhance your experience by leveraging a diverse set of models in parallel.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🔐 &lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: Ensure secure access with restricted permissions; only authorized individuals can access your Ollama, and exclusive model creation/pulling rights are reserved for administrators.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌐🌍 &lt;strong&gt;Multilingual Support&lt;/strong&gt;: Experience Open WebUI in your preferred language with our internationalization (i18n) support. Join us in expanding our supported languages! We're actively seeking contributors!&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🧩 &lt;strong&gt;Pipelines, Open WebUI Plugin Support&lt;/strong&gt;: Seamlessly integrate custom logic and Python libraries into Open WebUI using &lt;a href="https://github.com/open-webui/pipelines"&gt;Pipelines Plugin Framework&lt;/a&gt;. Launch your Pipelines instance, set the OpenAI URL to the Pipelines URL, and explore endless possibilities. &lt;a href="https://github.com/open-webui/pipelines/tree/main/examples"&gt;Examples&lt;/a&gt; include &lt;strong&gt;Function Calling&lt;/strong&gt;, User &lt;strong&gt;Rate Limiting&lt;/strong&gt; to control access, &lt;strong&gt;Usage Monitoring&lt;/strong&gt; with tools like Langfuse, &lt;strong&gt;Live Translation with LibreTranslate&lt;/strong&gt; for multilingual support, &lt;strong&gt;Toxic Message Filtering&lt;/strong&gt; and much more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;🌟 &lt;strong&gt;Continuous Updates&lt;/strong&gt;: We are committed to improving Open WebUI with regular updates, fixes, and new features.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Want to learn more about Open WebUI's features? Check out our &lt;a href="https://docs.openwebui.com/features"&gt;Open WebUI documentation&lt;/a&gt; for a comprehensive overview!&lt;/p&gt; 
&lt;h2&gt;Sponsors 🙌&lt;/h2&gt; 
&lt;h4&gt;Emerald&lt;/h4&gt; 
&lt;table&gt; 
 &lt;!-- &lt;tr&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/" target="_blank"&gt;
        &lt;img src="https://docs.openwebui.com/sponsors/logos/n8n.png" alt="n8n" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt;
      &lt;/a&gt;
    &lt;/td&gt;
    &lt;td&gt;
      &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt; • Does your interface have a backend yet?&lt;br&gt;Try &lt;a href="https://n8n.io/"&gt;n8n&lt;/a&gt;
    &lt;/td&gt;
  &lt;/tr&gt; --&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/tailscale.png" alt="Tailscale" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://tailscale.com/blog/self-host-a-local-ai-stack/?utm_source=OpenWebUI&amp;amp;utm_medium=paid-ad-placement&amp;amp;utm_campaign=OpenWebUI-Docs"&gt;Tailscale&lt;/a&gt; • Connect self-hosted AI to any device with Tailscale &lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui" target="_blank"&gt; &lt;img src="https://docs.openwebui.com/sponsors/logos/warp.png" alt="Warp" style="width: 8rem; height: 8rem; border-radius: .75rem;" /&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;td&gt; &lt;a href="https://warp.dev/open-webui"&gt;Warp&lt;/a&gt; • The intelligent terminal for developers &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;hr /&gt; 
&lt;p&gt;We are incredibly grateful for the generous support of our sponsors. Their contributions help us to maintain and improve our project, ensuring we can continue to deliver quality work to our community. Thank you!&lt;/p&gt; 
&lt;h2&gt;How to Install 🚀&lt;/h2&gt; 
&lt;h3&gt;Installation via Python pip 🐍&lt;/h3&gt; 
&lt;p&gt;Open WebUI can be installed using pip, the Python package installer. Before proceeding, ensure you're using &lt;strong&gt;Python 3.11&lt;/strong&gt; to avoid compatibility issues.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Open WebUI&lt;/strong&gt;: Open your terminal and run the following command to install Open WebUI:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pip install open-webui
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Running Open WebUI&lt;/strong&gt;: After installation, you can start Open WebUI by executing:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;open-webui serve
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;This will start the Open WebUI server, which you can access at &lt;a href="http://localhost:8080"&gt;http://localhost:8080&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Quick Start with Docker 🐳&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE]&lt;br /&gt; Please note that for certain Docker environments, additional configurations might be needed. If you encounter any connection issues, our detailed guide on &lt;a href="https://docs.openwebui.com/"&gt;Open WebUI Documentation&lt;/a&gt; is ready to assist you.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] When using Docker to install Open WebUI, make sure to include the &lt;code&gt;-v open-webui:/app/backend/data&lt;/code&gt; in your Docker command. This step is crucial as it ensures your database is properly mounted and prevents any loss of data.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP]&lt;br /&gt; If you wish to utilize Open WebUI with Ollama included or CUDA acceleration, we recommend utilizing our official images tagged with either &lt;code&gt;:cuda&lt;/code&gt; or &lt;code&gt;:ollama&lt;/code&gt;. To enable CUDA, you must install the &lt;a href="https://docs.nvidia.com/dgx/nvidia-container-runtime-upgrade/"&gt;Nvidia CUDA container toolkit&lt;/a&gt; on your Linux/WSL system.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Installation with Default Configuration&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on your computer&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If Ollama is on a Different Server&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;p&gt;To connect to Ollama on another server, change the &lt;code&gt;OLLAMA_BASE_URL&lt;/code&gt; to the server's URL:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OLLAMA_BASE_URL=https://example.com -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;To run Open WebUI with Nvidia GPU support&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installation for OpenAI API Usage Only&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;If you're only using OpenAI API&lt;/strong&gt;, use this command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -e OPENAI_API_KEY=your_secret_key -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Installing Open WebUI with Bundled Ollama Support&lt;/h3&gt; 
&lt;p&gt;This installation method uses a single container image that bundles Open WebUI with Ollama, allowing for a streamlined setup via a single command. Choose the appropriate command based on your hardware setup:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;With GPU Support&lt;/strong&gt;: Utilize GPU resources by running the following command:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 --gpus=all -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For CPU Only&lt;/strong&gt;: If you're not using a GPU, use this command instead:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v ollama:/root/.ollama -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:ollama
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Both commands facilitate a built-in, hassle-free installation of both Open WebUI and Ollama, ensuring that you can get everything up and running swiftly.&lt;/p&gt; 
&lt;p&gt;After installation, you can access Open WebUI at &lt;a href="http://localhost:3000"&gt;http://localhost:3000&lt;/a&gt;. Enjoy! 😄&lt;/p&gt; 
&lt;h3&gt;Other Installation Methods&lt;/h3&gt; 
&lt;p&gt;We offer various installation alternatives, including non-Docker native installation methods, Docker Compose, Kustomize, and Helm. Visit our &lt;a href="https://docs.openwebui.com/getting-started/"&gt;Open WebUI Documentation&lt;/a&gt; or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Discord community&lt;/a&gt; for comprehensive guidance.&lt;/p&gt; 
&lt;p&gt;Look at the &lt;a href="https://docs.openwebui.com/getting-started/advanced-topics/development"&gt;Local Development Guide&lt;/a&gt; for instructions on setting up a local development environment.&lt;/p&gt; 
&lt;h3&gt;Troubleshooting&lt;/h3&gt; 
&lt;p&gt;Encountering connection issues? Our &lt;a href="https://docs.openwebui.com/troubleshooting/"&gt;Open WebUI Documentation&lt;/a&gt; has got you covered. For further assistance and to join our vibrant community, visit the &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Open WebUI: Server Connection Error&lt;/h4&gt; 
&lt;p&gt;If you're experiencing connection issues, it’s often due to the WebUI docker container not being able to reach the Ollama server at 127.0.0.1:11434 (host.docker.internal:11434) inside the container . Use the &lt;code&gt;--network=host&lt;/code&gt; flag in your docker command to resolve this. Note that the port changes from 3000 to 8080, resulting in the link: &lt;code&gt;http://localhost:8080&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Example Docker Command&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d --network=host -v open-webui:/app/backend/data -e OLLAMA_BASE_URL=http://127.0.0.1:11434 --name open-webui --restart always ghcr.io/open-webui/open-webui:main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Keeping Your Docker Installation Up-to-Date&lt;/h3&gt; 
&lt;p&gt;In case you want to update your local Docker installation to the latest version, you can do it with &lt;a href="https://containrrr.dev/watchtower/"&gt;Watchtower&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm --volume /var/run/docker.sock:/var/run/docker.sock containrrr/watchtower --run-once open-webui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;In the last part of the command, replace &lt;code&gt;open-webui&lt;/code&gt; with your container name if it is different.&lt;/p&gt; 
&lt;p&gt;Check our Updating Guide available in our &lt;a href="https://docs.openwebui.com/getting-started/updating"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Using the Dev Branch 🌙&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] The &lt;code&gt;:dev&lt;/code&gt; branch contains the latest unstable features and changes. Use it at your own risk as it may have bugs or incomplete features.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;If you want to try out the latest bleeding-edge features and are okay with occasional instability, you can use the &lt;code&gt;:dev&lt;/code&gt; tag like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run -d -p 3000:8080 -v open-webui:/app/backend/data --name open-webui --add-host=host.docker.internal:host-gateway --restart always ghcr.io/open-webui/open-webui:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Offline Mode&lt;/h3&gt; 
&lt;p&gt;If you are running Open WebUI in an offline environment, you can set the &lt;code&gt;HF_HUB_OFFLINE&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt; to prevent attempts to download models from the internet.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export HF_HUB_OFFLINE=1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;What's Next? 🌟&lt;/h2&gt; 
&lt;p&gt;Discover upcoming features on our roadmap in the &lt;a href="https://docs.openwebui.com/roadmap/"&gt;Open WebUI Documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License 📜&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;Open WebUI License&lt;/a&gt;, a revised BSD-3-Clause license. You receive all the same rights as the classic BSD-3 license: you can use, modify, and distribute the software, including in proprietary and commercial products, with minimal restrictions. The only additional requirement is to preserve the "Open WebUI" branding, as detailed in the LICENSE file. For full terms, see the &lt;a href="https://raw.githubusercontent.com/open-webui/open-webui/main/LICENSE"&gt;LICENSE&lt;/a&gt; document. 📄&lt;/p&gt; 
&lt;h2&gt;Support 💬&lt;/h2&gt; 
&lt;p&gt;If you have any questions, suggestions, or need assistance, please open an issue or join our &lt;a href="https://discord.gg/5rJgQTnV4s"&gt;Open WebUI Discord community&lt;/a&gt; to connect with us! 🤝&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;a href="https://star-history.com/#open-webui/open-webui&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=open-webui/open-webui&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;hr /&gt; 
&lt;p&gt;Created by &lt;a href="https://github.com/tjbck"&gt;Timothy Jaeryang Baek&lt;/a&gt; - Let's make Open WebUI even more amazing together! 💪&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>frappe/gantt</title>
      <link>https://github.com/frappe/gantt</link>
      <description>&lt;p&gt;Open Source Javascript Gantt&lt;/p&gt;&lt;hr&gt;&lt;div align="center" markdown="1"&gt; 
 &lt;img src="https://raw.githubusercontent.com/frappe/gantt/master/.github/gantt-logo.jpg" width="80" /&gt; 
 &lt;h1&gt;Frappe Gantt&lt;/h1&gt; 
 &lt;p&gt;&lt;strong&gt;A modern, configurable, Gantt library for the web.&lt;/strong&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/frappe/gantt/master/.github/hero-image.png" alt="Hero Image" /&gt;&lt;/p&gt; 
&lt;h2&gt;Frappe Gantt&lt;/h2&gt; 
&lt;p&gt;Gantt charts are bar charts that visually illustrate a project's tasks, schedule, and dependencies. With Frappe Gantt, you can build beautiful, customizable, Gantt charts with ease.&lt;/p&gt; 
&lt;p&gt;You can use it anywhere from hobby projects to tracking the goals of your team at the worksplace.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://erpnext.com/"&gt;ERPNext&lt;/a&gt; uses Frappe Gantt.&lt;/p&gt; 
&lt;h3&gt;Motivation&lt;/h3&gt; 
&lt;p&gt;We needed a Gantt View for ERPNext. Surprisingly, we couldn't find a visually appealing Gantt library that was open source - so we decided to build it. Initially, the design was heavily inspired by Google Gantt and DHTMLX.&lt;/p&gt; 
&lt;h3&gt;Key Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Customizable Views&lt;/strong&gt;: customize the timeline based on various time periods - day, hour, or year, you have it. You can also create your own views.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Ignore Periods&lt;/strong&gt;: exclude weekends and other holidays from your tasks' progress calculation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configure Anything&lt;/strong&gt;: spacing, edit access, labels, you can control it all. Change both the style and functionality to meet your needs.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multi-lingual Support&lt;/strong&gt;: suitable for companies with an international base.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Install with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm install frappe-gantt
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Include it in your HTML:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="frappe-gantt.umd.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel="stylesheet" href="frappe-gantt.css"&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or from the CDN:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="https://cdn.jsdelivr.net/npm/frappe-gantt/dist/frappe-gantt.umd.js"&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/frappe-gantt/dist/frappe-gantt.css"&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start using Gantt:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;let tasks = [
  {
    id: '1',
    name: 'Redesign website',
    start: '2016-12-28',
    end: '2016-12-31',
    progress: 20
  },
  ...
]
let gantt = new Gantt("#gantt", tasks);
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Frappe Gantt offers a wide range of options to customize your chart.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Option&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Possible Values&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Default&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;arrow_curve&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Curve radius of arrows connecting dependencies.&lt;/td&gt; 
   &lt;td&gt;Any positive integer.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;5&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;auto_move_label&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Move task labels when user scrolls horizontally.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bar_corner_radius&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Radius of the task bar corners (in pixels).&lt;/td&gt; 
   &lt;td&gt;Any positive integer.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;3&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;bar_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Height of task bars (in pixels).&lt;/td&gt; 
   &lt;td&gt;Any positive integer.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;container_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Height of the container.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;auto&lt;/code&gt; - dynamic container height to fit all tasks - &lt;em&gt;or&lt;/em&gt; any positive integer (for pixels).&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;auto&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;column_width&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Width of each column in the timeline.&lt;/td&gt; 
   &lt;td&gt;Any positive integer.&lt;/td&gt; 
   &lt;td&gt;45&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;date_format&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Format for displaying dates.&lt;/td&gt; 
   &lt;td&gt;Any valid JS date format string.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;YYYY-MM-DD&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;upper_header_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Height of the upper header in the timeline (in pixels).&lt;/td&gt; 
   &lt;td&gt;Any positive integer.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;45&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;lower_header_height&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Height of the lower header in the timeline (in pixels).&lt;/td&gt; 
   &lt;td&gt;Any positive integer.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;30&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;snap_at&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Snap tasks at particular intervel while resizing or dragging.&lt;/td&gt; 
   &lt;td&gt;Any &lt;em&gt;interval&lt;/em&gt; (see below)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;1d&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;infinite_padding&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Whether to extend timeline infinitely when user scrolls.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;holidays&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Highlighted holidays on the timeline.&lt;/td&gt; 
   &lt;td&gt;Object mapping CSS colors to holiday types. Types can either be a) 'weekend', or b) array of &lt;em&gt;strings&lt;/em&gt; or &lt;em&gt;date objects&lt;/em&gt; or &lt;em&gt;objects&lt;/em&gt; in the format &lt;code&gt;{date: ..., label: ...}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;{ 'var(--g-weekend-highlight-color)': 'weekend' }&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;ignore&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Ignored areas in the rendering&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;weekend&lt;/code&gt; &lt;em&gt;or&lt;/em&gt; Array of strings or date objects (&lt;code&gt;weekend&lt;/code&gt; can be present to the array also).&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;[]&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;language&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Language for localization.&lt;/td&gt; 
   &lt;td&gt;ISO 639-1 codes like &lt;code&gt;en&lt;/code&gt;, &lt;code&gt;fr&lt;/code&gt;, &lt;code&gt;es&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;en&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;lines&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Determines which grid lines to display.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;none&lt;/code&gt; for no lines, &lt;code&gt;vertical&lt;/code&gt; for only vertical lines, &lt;code&gt;horizontal&lt;/code&gt; for only horizontal lines, &lt;code&gt;both&lt;/code&gt; for complete grid.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;both&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;move_dependencies&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Whether moving a task automatically moves its dependencies.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;padding&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Padding around task bars (in pixels).&lt;/td&gt; 
   &lt;td&gt;Any positive integer.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;18&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;popup_on&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Event to trigger the popup display.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;click&lt;/code&gt; &lt;em&gt;or&lt;/em&gt; &lt;code&gt;hover&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;click&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;readonly_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables editing task progress.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;readonly_dates&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables editing task dates.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;readonly&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Disables all editing features.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;scroll_to&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Determines the starting point when chart is rendered.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;today&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;, or a date string.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;today&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;show_expected_progress&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Shows expected progress for tasks.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;today_button&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Adds a button to navigate to today’s date.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;view_mode&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;The initial view mode of the Gantt chart.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Day&lt;/code&gt;, &lt;code&gt;Week&lt;/code&gt;, &lt;code&gt;Month&lt;/code&gt;, &lt;code&gt;Year&lt;/code&gt;.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;Day&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;view_mode_select&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Allows selecting the view mode from a dropdown.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Apart from these ones, two options - &lt;code&gt;popup&lt;/code&gt; and &lt;code&gt;view_modes&lt;/code&gt; (plural, not singular) - are available. They have "sub"-APIs, and thus are listed separately.&lt;/p&gt; 
&lt;h4&gt;View Mode Configuration&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;view_modes&lt;/code&gt; option determines all the available view modes for the chart. It should be an array of objects.&lt;/p&gt; 
&lt;p&gt;Each object can have the following properties:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;name&lt;/code&gt; (string) - the name of view mode.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;padding&lt;/code&gt; (interval) - the time above.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;step&lt;/code&gt; - the interval of each column&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lower_text&lt;/code&gt; (date format string &lt;em&gt;or&lt;/em&gt; function) - the format for text in lower header. Blank string for none. The function takes in &lt;code&gt;currentDate&lt;/code&gt;, &lt;code&gt;previousDate&lt;/code&gt;, and &lt;code&gt;lang&lt;/code&gt;, and should return a string.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;upper_text&lt;/code&gt; (date format string &lt;em&gt;or&lt;/em&gt; function) - the format for text in upper header. Blank string for none. The function takes in &lt;code&gt;currentDate&lt;/code&gt;, &lt;code&gt;previousDate&lt;/code&gt;, and &lt;code&gt;lang&lt;/code&gt;, and should return a string.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;upper_text_frequency&lt;/code&gt; (number) - how often the upper text has a value. Utilized in internal calculation to improve performance.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;thick_line&lt;/code&gt; (function) - takes in &lt;code&gt;currentDate&lt;/code&gt;, returns Boolean determining whether the line for that date should be thicker than the others.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Three other options allow you to override general configuration for this view mode alone:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;date_format&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;column_width&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;snap_at&lt;/code&gt; For details, see the above table.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Popup Configuration&lt;/h4&gt; 
&lt;p&gt;&lt;code&gt;popup&lt;/code&gt; is a function. If it returns&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;false&lt;/code&gt;, there will be no popup.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;undefined&lt;/code&gt;, the popup will be rendered based on manipulation within the function&lt;/li&gt; 
 &lt;li&gt;a HTML string, the popup will be that string.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The function receives one object as an argument, containing:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;task&lt;/code&gt; - the task as an object&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;chart&lt;/code&gt; - the entire Gantt chart&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;get_title&lt;/code&gt;, &lt;code&gt;get_subtitle&lt;/code&gt;, &lt;code&gt;get_details&lt;/code&gt; (functions) - get the relevant section as a HTML node.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;set_title&lt;/code&gt;, &lt;code&gt;set_subtitle&lt;/code&gt;, &lt;code&gt;set_details&lt;/code&gt; (functions) - take in the HTML of the relevant section&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;add_action&lt;/code&gt; (function) - accepts two parameters, &lt;code&gt;html&lt;/code&gt; and &lt;code&gt;func&lt;/code&gt; - respectively determining the HTML of the action and the callback when the action is pressed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;API&lt;/h3&gt; 
&lt;p&gt;Frappe Gantt exposes a few helpful methods for you to interact with the chart:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt; 
   &lt;th&gt;&lt;strong&gt;Parameters&lt;/strong&gt;&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;.update_options&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Re-renders the chart after updating specific options.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;new_options&lt;/code&gt; - object containing new options.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;.change_view_mode&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Updates the view mode.&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;view_mode&lt;/code&gt; - Name of view mode &lt;em&gt;or&lt;/em&gt; view mode object (see above) and &lt;code&gt;maintain_pos&lt;/code&gt; - whether to go back to current scroll position after rerendering, defaults to &lt;code&gt;false&lt;/code&gt;.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;.scroll_current&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Scrolls to the current date&lt;/td&gt; 
   &lt;td&gt;No parameters.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;.update_task&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Re-renders a specific task bar alone&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;task_id&lt;/code&gt; - id of task and &lt;code&gt;new_details&lt;/code&gt; - object containing the task properties to be updated.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Development Setup&lt;/h2&gt; 
&lt;p&gt;If you want to contribute enhancements or fixes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone this repo.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;cd&lt;/code&gt; into project directory.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm i&lt;/code&gt; to install dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;pnpm run build&lt;/code&gt; to build files - or &lt;code&gt;pnpm run build-dev&lt;/code&gt; to build and watch for changes.&lt;/li&gt; 
 &lt;li&gt;Open &lt;code&gt;index.html&lt;/code&gt; in your browser.&lt;/li&gt; 
 &lt;li&gt;Make your code changes and test them.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;div align="center" style="padding-top: 0.75rem;"&gt; 
 &lt;a href="https://frappe.io" target="_blank"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://frappe.io/files/Frappe-white.png" /&gt; 
   &lt;img src="https://frappe.io/files/Frappe-black.png" alt="Frappe Technologies" height="28" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>copy/v86</title>
      <link>https://github.com/copy/v86</link>
      <description>&lt;p&gt;x86 PC emulator and x86-to-wasm JIT, running in the browser&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://gitter.im/copy/v86"&gt;&lt;img src="https://badges.gitter.im/Join%20Chat.svg?sanitize=true" alt="Join the chat at https://gitter.im/copy/v86" /&gt;&lt;/a&gt; or #v86 on &lt;a href="https://libera.chat/"&gt;irc.libera.chat&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;v86 emulates an x86-compatible CPU and hardware. Machine code is translated to WebAssembly modules at runtime in order to achieve decent performance. Here's a list of emulated hardware:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;An x86-compatible CPU. The instruction set is around Pentium 4 level, including full SSE3 support. Some features are missing, in particular: 
  &lt;ul&gt; 
   &lt;li&gt;Task gates, far calls in protected mode&lt;/li&gt; 
   &lt;li&gt;Some 16 bit protected mode features&lt;/li&gt; 
   &lt;li&gt;Single stepping (trap flag, debug registers)&lt;/li&gt; 
   &lt;li&gt;Some exceptions, especially floating point and SSE&lt;/li&gt; 
   &lt;li&gt;Multicore&lt;/li&gt; 
   &lt;li&gt;64-bit extensions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;A floating point unit (FPU). Calculations are done using the Berkeley SoftFloat library and therefore should be precise (but slow). Trigonometric and log functions are emulated using 64-bit floats and may be less precise. Not all FPU exceptions are supported.&lt;/li&gt; 
 &lt;li&gt;A floppy disk controller (8272A).&lt;/li&gt; 
 &lt;li&gt;An 8042 Keyboard Controller, PS2. With mouse support.&lt;/li&gt; 
 &lt;li&gt;An 8254 Programmable Interval Timer (PIT).&lt;/li&gt; 
 &lt;li&gt;An 8259 Programmable Interrupt Controller (PIC).&lt;/li&gt; 
 &lt;li&gt;Partial APIC support.&lt;/li&gt; 
 &lt;li&gt;A CMOS Real Time Clock (RTC).&lt;/li&gt; 
 &lt;li&gt;A generic VGA card with SVGA support and Bochs VBE Extensions.&lt;/li&gt; 
 &lt;li&gt;A PCI bus. This one is partly incomplete and not used by every device.&lt;/li&gt; 
 &lt;li&gt;An IDE disk controller. 
  &lt;ul&gt; 
   &lt;li&gt;A built-in ISO 9660 CD-ROM generator.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;An NE2000 (RTL8390) PCI network card.&lt;/li&gt; 
 &lt;li&gt;Various virtio devices: Filesystem, network and balloon.&lt;/li&gt; 
 &lt;li&gt;A SoundBlaster 16 sound card.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Demos&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://copy.sh/v86/?profile=9front"&gt;9front&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=archlinux"&gt;Arch Linux&lt;/a&gt; — &lt;a href="https://copy.sh/v86?profile=android"&gt;Android-x86 1.6-r2&lt;/a&gt; — &lt;a href="https://copy.sh/v86?profile=android4"&gt;Android-x86 4.4-r2&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=basiclinux"&gt;BasicLinux&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=buildroot"&gt;Buildroot Linux&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=dsl"&gt;Damn Small Linux&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=elks"&gt;ELKS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=freedos"&gt;FreeDOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=freebsd"&gt;FreeBSD&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=fiwix"&gt;FiwixOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=haiku"&gt;Haiku&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=copy/skiffos"&gt;SkiffOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=reactos"&gt;ReactOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows2000"&gt;Windows 2000&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows98"&gt;Windows 98&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows95"&gt;Windows 95&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=windows1"&gt;Windows 1.01&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=msdos"&gt;MS-DOS 6.22&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=openbsd"&gt;OpenBSD&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=oberon"&gt;Oberon&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=kolibrios"&gt;KolibriOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86?profile=skift"&gt;SkiftOS&lt;/a&gt; — &lt;a href="https://copy.sh/v86/?profile=qnx"&gt;QNX&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/how-it-works.md"&gt;How it works&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/networking.md"&gt;Networking&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tools/docker/alpine/"&gt;Alpine Linux guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/archlinux.md"&gt;Arch Linux guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-nt.md"&gt;Windows NT guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-9x.md"&gt;Windows 9x guest setup&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/filesystem.md"&gt;9p filesystem&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/linux-9p-image.md"&gt;Linux rootfs on 9p&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/profiling.md"&gt;Profiling&lt;/a&gt; — &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/cpu-idling.md"&gt;CPU Idling&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;Here's an overview of the operating systems supported in v86:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux works pretty well. 64-bit kernels are not supported. 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://buildroot.uclibc.org"&gt;Buildroot&lt;/a&gt; can be used to build a minimal image. &lt;a href="https://github.com/humphd/browser-vm"&gt;humphd/browser-vm&lt;/a&gt; and &lt;a href="https://github.com/Darin755/browser-buildroot"&gt;darin755/browser-buildroot&lt;/a&gt; have some useful scripts for building one.&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/skiffos/SkiffOS/tree/master/configs/browser/v86"&gt;SkiffOS&lt;/a&gt; (based on Buildroot) can cross-compile a custom image.&lt;/li&gt; 
   &lt;li&gt;Ubuntu and other Debian derivatives works up to the latest version that supported i386 (16.04 LTS or 18.04 LTS for some variants).&lt;/li&gt; 
   &lt;li&gt;Alpine Linux works. An image can be built from a Dockerfile, see &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tools/docker/alpine/"&gt;tools/docker/alpine/&lt;/a&gt;.&lt;/li&gt; 
   &lt;li&gt;Arch Linux 32 works. See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/archlinux.md"&gt;archlinux.md&lt;/a&gt; for building an image.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;ReactOS works.&lt;/li&gt; 
 &lt;li&gt;FreeDOS, Windows 1.01 and MS-DOS run very well.&lt;/li&gt; 
 &lt;li&gt;KolibriOS works.&lt;/li&gt; 
 &lt;li&gt;Haiku works.&lt;/li&gt; 
 &lt;li&gt;Android-x86 has been tested up to 4.4-r2.&lt;/li&gt; 
 &lt;li&gt;Windows 1, 3.x, 95, 98, ME, NT and 2000 work reasonably well. 
  &lt;ul&gt; 
   &lt;li&gt;In Windows 2000 and higher the PC type has to be changed from ACPI PC to Standard PC&lt;/li&gt; 
   &lt;li&gt;There are some known boot issues (&lt;a href="https://github.com/copy/v86/issues/250"&gt;#250&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/433"&gt;#433&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/507"&gt;#507&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/555"&gt;#555&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/620"&gt;#620&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/645"&gt;#645&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-9x.md"&gt;Windows 9x guest setup&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows XP, Vista and 8 work under certain conditions (see &lt;a href="https://github.com/copy/v86/issues/86"&gt;#86&lt;/a&gt;, &lt;a href="https://github.com/copy/v86/issues/208"&gt;#208&lt;/a&gt;) 
  &lt;ul&gt; 
   &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/docs/windows-nt.md"&gt;Windows NT guest setup&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Many hobby operating systems work.&lt;/li&gt; 
 &lt;li&gt;9front works.&lt;/li&gt; 
 &lt;li&gt;Plan 9 doesn't work.&lt;/li&gt; 
 &lt;li&gt;QNX works.&lt;/li&gt; 
 &lt;li&gt;OS/2 doesn't work.&lt;/li&gt; 
 &lt;li&gt;FreeBSD works.&lt;/li&gt; 
 &lt;li&gt;OpenBSD works with a specific boot configuration. At the &lt;code&gt;boot&amp;gt;&lt;/code&gt; prompt type &lt;code&gt;boot -c&lt;/code&gt;, then at the &lt;code&gt;UKC&amp;gt;&lt;/code&gt; prompt &lt;code&gt;disable mpbios&lt;/code&gt; and &lt;code&gt;exit&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;NetBSD works only with a custom kernel, see &lt;a href="https://github.com/copy/v86/issues/350"&gt;#350&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;SerenityOS works (only 32-bit versions).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://skiftos.org/"&gt;SkiftOS&lt;/a&gt; works.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can get some information on the disk images here: &lt;a href="https://github.com/copy/images"&gt;https://github.com/copy/images&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How to build, run and embed?&lt;/h2&gt; 
&lt;p&gt;You need:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;make&lt;/li&gt; 
 &lt;li&gt;Rust with the wasm32-unknown-unknown target&lt;/li&gt; 
 &lt;li&gt;A version of clang compatible with Rust&lt;/li&gt; 
 &lt;li&gt;java (for Closure Compiler, not necessary when using &lt;code&gt;debug.html&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;nodejs (a recent version is required, v16.11.1 is known to be working)&lt;/li&gt; 
 &lt;li&gt;To run tests: nasm, gdb, qemu-system, gcc, libc-i386 and rustfmt&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tools/docker/test-image/Dockerfile"&gt;tools/docker/test-image/Dockerfile&lt;/a&gt; for a full setup on Debian or &lt;a href="https://docs.microsoft.com/en-us/windows/wsl/install"&gt;WSL&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Run &lt;code&gt;make&lt;/code&gt; to build the debug build (at &lt;code&gt;debug.html&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;make all&lt;/code&gt; to build the optimized build (at &lt;code&gt;index.html&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;ROM and disk images are loaded via XHR, so if you want to try out &lt;code&gt;index.html&lt;/code&gt; locally, make sure to serve it from a local webserver. You can use &lt;code&gt;make run&lt;/code&gt; to serve the files using Python's http module.&lt;/li&gt; 
 &lt;li&gt;If you only want to embed v86 in a webpage you can use libv86.js. For usage, check out the &lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/"&gt;examples&lt;/a&gt;. You can download it from the release section.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Alternatively, to build using Docker&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you have Docker installed, you can run the whole system inside a container.&lt;/li&gt; 
 &lt;li&gt;See &lt;code&gt;tools/docker/exec&lt;/code&gt; to find the Dockerfile required for this.&lt;/li&gt; 
 &lt;li&gt;You can run &lt;code&gt;docker build -f tools/docker/exec/Dockerfile -t v86:alpine-3.19 .&lt;/code&gt; from the root directory to generate docker image.&lt;/li&gt; 
 &lt;li&gt;Then you can simply run &lt;code&gt;docker run -it -p 8000:8000 v86:alpine-3.19&lt;/code&gt; to start the server.&lt;/li&gt; 
 &lt;li&gt;Check &lt;code&gt;localhost:8000&lt;/code&gt; for hosted server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Running via Dev Container&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;If you are using an IDE that supports Dev Containers, such as GitHub Codespaces, the Visual Studio Code Remote Container extension, or possibly others such as Jetbrains' IntelliJ IDEA, you can setup the development environment in a Dev Container.&lt;/li&gt; 
 &lt;li&gt;Follow the instructions from your development environment to setup the container.&lt;/li&gt; 
 &lt;li&gt;Run the Task "Fetch images" in order to download images for testing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Testing&lt;/h2&gt; 
&lt;p&gt;The disk images for testing are not included in this repository. You can download them directly from the website using:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;curl --compressed --output-dir images/ --remote-name-all https://i.copy.sh/{linux.iso,linux3.iso,linux4.iso,buildroot-bzimage68.bin,TinyCore-11.0.iso,oberon.img,msdos.img,openbsd-floppy.img,kolibri.img,windows101.img,os8.img,freedos722.img,mobius-fd-release5.img,msdos622.img}&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Run integration tests: &lt;code&gt;make tests&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Run all tests: &lt;code&gt;make jshint rustfmt kvm-unit-test nasmtests nasmtests-force-jit expect-tests jitpagingtests qemutests rust-test tests&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/tests/Readme.md"&gt;tests/Readme.md&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;API examples&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/basic.html"&gt;Basic&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/serial.html"&gt;Programatically using the serial terminal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/lua.html"&gt;A Lua interpreter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/two_instances.html"&gt;Two instances in one window&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/broadcast-network.html"&gt;Networking between browser windows/tabs using the Broadcast Channel API&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/tcp_terminal.html"&gt;TCP Terminal (fetch-based networking)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/examples/save_restore.html"&gt;Saving and restoring emulator state&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Using v86 for your own purposes is as easy as:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;var emulator = new V86({
    screen_container: document.getElementById("screen_container"),
    bios: {
        url: "../../bios/seabios.bin",
    },
    vga_bios: {
        url: "../../bios/vgabios.bin",
    },
    cdrom: {
        url: "../../images/linux.iso",
    },
    autostart: true,
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/copy/v86/master/src/browser/starter.js"&gt;starter.js&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;v86 is distributed under the terms of the Simplified BSD License, see &lt;a href="https://raw.githubusercontent.com/copy/v86/master/LICENSE"&gt;LICENSE&lt;/a&gt;. The following third-party dependencies are included in the repository under their own licenses:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/lib/softfloat/softfloat.c"&gt;&lt;code&gt;lib/softfloat/softfloat.c&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/lib/zstd/zstddeclib.c"&gt;&lt;code&gt;lib/zstd/zstddeclib.c&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/tests/kvm-unit-tests"&gt;&lt;code&gt;tests/kvm-unit-tests/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/copy/v86/master/tests/qemutests"&gt;&lt;code&gt;tests/qemutests/&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU test cases via &lt;a href="https://wiki.qemu.org/Main_Page"&gt;QEMU&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;More tests via &lt;a href="https://www.linux-kvm.org/page/KVM-unit-tests"&gt;kvm-unit-tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/facebook/zstd"&gt;zstd&lt;/a&gt; support is included for better compression of state images&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://www.jhauser.us/arithmetic/SoftFloat.html"&gt;Berkeley SoftFloat&lt;/a&gt; is included to precisely emulate 80-bit floating point numbers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s-macke/jor1k"&gt;The jor1k project&lt;/a&gt; for 9p, filesystem and uart drivers&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://winworldpc.com/"&gt;WinWorld&lt;/a&gt; sources of some old operating systems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.os2museum.com/"&gt;OS/2 Museum&lt;/a&gt; sources of some old operating systems&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://archiveos.org/"&gt;ArchiveOS&lt;/a&gt; sources of several operating systems&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;More questions?&lt;/h2&gt; 
&lt;p&gt;Shoot me an email to &lt;code&gt;copy@copy.sh&lt;/code&gt;. Please report bugs on GitHub.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>