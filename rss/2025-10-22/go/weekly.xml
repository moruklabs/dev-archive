<rss version="2.0">
  <channel>
    <title>GitHub Go Weekly Trending</title>
    <description>Weekly Trending of Go in GitHub</description>
    <pubDate>Tue, 21 Oct 2025 01:45:23 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>DataDog/datadog-agent</title>
      <link>https://github.com/DataDog/datadog-agent</link>
      <description>&lt;p&gt;Main repository for Datadog Agent&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Datadog Agent&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/v/release/DataDog/datadog-agent?style=flat&amp;amp;logo=datadog&amp;amp;logoColor=%23632CA6&amp;amp;labelColor=%23FFF&amp;amp;color=%23632CA6" alt="GitHub Release" /&gt; &lt;a href="https://codecov.io/github/DataDog/datadog-agent?branch=main"&gt;&lt;img src="https://codecov.io/github/DataDog/datadog-agent/coverage.svg?branch=main" alt="Coverage status" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/DataDog/datadog-agent"&gt;&lt;img src="https://godoc.org/github.com/DataDog/datadog-agent?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This repository contains the source code of the Datadog Agent version 7 and version 6. Please refer to the &lt;a href="https://docs.datadoghq.com/agent/"&gt;Agent user documentation&lt;/a&gt; for information about differences between Agent v5, Agent v6 and Agent v7. Additionally, we provide a list of prepackaged binaries for an easy install process &lt;a href="https://app.datadoghq.com/fleet/install-agent/latest?platform=overview"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://datadoghq.dev/datadog-agent/setup/"&gt;developer docs site&lt;/a&gt; contains information about how to develop the Datadog Agent itself.&lt;/p&gt; 
&lt;p&gt;The source of the content is located under &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/docs"&gt;the docs directory&lt;/a&gt; and may contain pages that are not yet published.&lt;/p&gt; 
&lt;h2&gt;Contributing code&lt;/h2&gt; 
&lt;p&gt;You'll find information and help on how to contribute code to this project under &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/docs/dev"&gt;the &lt;code&gt;docs/dev&lt;/code&gt; directory&lt;/a&gt; of the present repo.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The Datadog Agent user space components are licensed under the &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/LICENSE"&gt;Apache License, Version 2.0&lt;/a&gt;. The BPF code is licensed under the &lt;a href="https://raw.githubusercontent.com/DataDog/datadog-agent/main/pkg/ebpf/c/COPYING"&gt;General Public License, Version 2.0&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sjzar/chatlog</title>
      <link>https://github.com/sjzar/chatlog</link>
      <description>&lt;p&gt;chat log tool, easily use your own chat data. 聊天记录工具，轻松使用自己的聊天数据&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;项目移除通知&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;更新日期:&lt;/strong&gt; 2025年10月20日&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;发生了什么？&lt;/h2&gt; 
&lt;p&gt;您好，感谢您关注 chatlog。&lt;/p&gt; 
&lt;p&gt;我收到了来自微信官方的函件 ，明确项目的核心功能存在合规风险。&lt;/p&gt; 
&lt;p&gt;为了彻底规避法律问题，并本着对开源社区负责任的态度，我决定 &lt;strong&gt;移除本项目的全部代码与提交历史记录。&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;此代码仓库现在仅保留这份说明文件。&lt;/p&gt; 
&lt;h2&gt;这对您意味着什么？&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;项目不再可用：&lt;/strong&gt; 您无法再从此仓库下载代码及预编译程序。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;无任何支持：&lt;/strong&gt; 我不再提供任何形式的支持、更新或安全修复。&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;自行承担风险：&lt;/strong&gt; 如果您在本地保留了该项目的旧版本副本，恳请您及时删除相关内容，并提醒您必须自行承担所有潜在风险。我强烈建议您评估继续使用可能带来的合规问题。&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;我深知这一决定非常突然，并对给您带来的极大不便深表歉意。&lt;/p&gt; 
&lt;h2&gt;致社区&lt;/h2&gt; 
&lt;p&gt;我想对所有曾经为这个项目贡献过代码、提交过问题、提供过建议以及使用过项目的用户，致以最诚挚的感谢。是你们的热情让这个项目变得有意义。&lt;/p&gt; 
&lt;p&gt;虽然这个项目的故事到此结束，但我从中学到的经验、建立的连接将永远珍贵。&lt;/p&gt; 
&lt;p&gt;再次感谢您的理解。&lt;/p&gt; 
&lt;p&gt;后会有期。&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Sarv&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>XTLS/Xray-core</title>
      <link>https://github.com/XTLS/Xray-core</link>
      <description>&lt;p&gt;Xray, Penetrates Everything. Also the best v2ray-core. Where the magic happens. An open platform for various uses.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Project X&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS"&gt;Project X&lt;/a&gt; originates from XTLS protocol, providing a set of network tools such as &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt; and &lt;a href="https://github.com/XTLS/REALITY"&gt;REALITY&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core#readme"&gt;README&lt;/a&gt; is open, so feel free to submit your project &lt;a href="https://github.com/XTLS/Xray-core/pulls"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Donation &amp;amp; NFTs&lt;/h2&gt; 
&lt;h3&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;Collect a Project X NFT to support the development of Project X!&lt;/a&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;&lt;img alt="Project X NFT" width="150px" src="https://raw2.seadn.io/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/7fa9ce900fb39b44226348db330e32/8b7fa9ce900fb39b44226348db330e32.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;ETH/USDT/USDC: &lt;code&gt;0xDc3Fe44F0f25D13CACb1C4896CD0D321df3146Ee&lt;/code&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Project X NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/1&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;VLESS NFT: &lt;a href="https://opensea.io/collection/vless"&gt;https://opensea.io/collection/vless&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REALITY NFT: &lt;a href="https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2"&gt;https://opensea.io/item/ethereum/0x5ee362866001613093361eb8569d59c4141b76d1/2&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Related links: &lt;a href="https://github.com/XTLS/Xray-core/pull/5067"&gt;VLESS Post-Quantum Encryption&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/4113"&gt;XHTTP: Beyond REALITY&lt;/a&gt;, &lt;a href="https://github.com/XTLS/Xray-core/discussions/3633"&gt;Announcement of NFTs by Project X&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/LICENSE"&gt;Mozilla Public License Version 2.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://xtls.github.io"&gt;Project X Official Website&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Telegram&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXray"&gt;Project X&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXtls"&gt;Project X Channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectVless"&gt;Project VLESS&lt;/a&gt; (Русский)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://t.me/projectXhttp"&gt;Project XHTTP&lt;/a&gt; (Persian)&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux Script 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-install"&gt;XTLS/Xray-install&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/team-cloudchaser/tempest"&gt;tempest&lt;/a&gt; (supports &lt;a href="https://systemd.io"&gt;&lt;code&gt;systemd&lt;/code&gt;&lt;/a&gt; and &lt;a href="https://github.com/OpenRC/openrc"&gt;OpenRC&lt;/a&gt;; Linux-only)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Docker 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://ghcr.io/xtls/xray-core"&gt;ghcr.io/xtls/xray-core&lt;/a&gt; (&lt;strong&gt;Official&lt;/strong&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://hub.docker.com/r/teddysun/xray"&gt;teddysun/xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/wulabing/xray_docker"&gt;wulabing/xray_docker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Web Panel - &lt;strong&gt;WARNING: Please DO NOT USE plain HTTP panels like 3X-UI&lt;/strong&gt;, as they are believed to be bribed by Iran GFW for supporting plain HTTP by default and refused to change (&lt;a href="https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331"&gt;https://github.com/XTLS/Xray-core/pull/3884#issuecomment-2439595331&lt;/a&gt;), which has already put many users' data security in danger in the past few years. &lt;strong&gt;If you are already using 3X-UI, please switch to the following panels, which are verified to support HTTPS and SSH port forwarding only:&lt;/strong&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/xeefei/X-Panel"&gt;X-Panel&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/PasarGuard/panel"&gt;PasarGuard&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/panel"&gt;Remnawave&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Gozargah/Marzban"&gt;Marzban&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/qist/xray-ui"&gt;Xray-UI&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/Hiddify-Manager"&gt;Hiddify&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;One Click 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/zxcvos/Xray-script"&gt;Xray-REALITY&lt;/a&gt;, &lt;a href="https://github.com/sajjaddg/xray-reality"&gt;xray-reality&lt;/a&gt;, &lt;a href="https://github.com/aleskxyz/reality-ezpz"&gt;reality-ezpz&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hello-yunshu/Xray_bash_onekey"&gt;Xray_bash_onekey&lt;/a&gt;, &lt;a href="https://github.com/LordPenguin666/XTool"&gt;XTool&lt;/a&gt;, &lt;a href="https://github.com/vpainless/vpainless"&gt;VPainLess&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/mack-a/v2ray-agent"&gt;v2ray-agent&lt;/a&gt;, &lt;a href="https://github.com/wulabing/Xray_onekey"&gt;Xray_onekey&lt;/a&gt;, &lt;a href="https://github.com/proxysu/ProxySU"&gt;ProxySU&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Magisk 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/Asterisk4Magisk/Xray4Magisk"&gt;Xray4Magisk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/E7KMbb/Xray_For_Magisk"&gt;Xray_For_Magisk&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Homebrew 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;brew install xray&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Example 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/REALITY#readme"&gt;VLESS-XTLS-uTLS-REALITY&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/VLESS-TCP-XTLS-Vision"&gt;VLESS-TCP-XTLS-Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples/tree/main/All-in-One-fallbacks-Nginx"&gt;All-in-One-fallbacks-Nginx&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray-examples 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-examples"&gt;XTLS/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-examples"&gt;chika0801/Xray-examples&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lxhao61/integrated-examples"&gt;lxhao61/integrated-examples&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Tutorial 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/chika0801/Xray-install"&gt;XTLS Vision&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://cscot.pages.dev/2023/03/02/Xray-REALITY-tutorial/"&gt;REALITY (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SasukeFreestyle/XTLS-Iran-Reality"&gt;XTLS-Iran-Reality (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://computerscot.github.io/vless-xtls-utls-reality-steal-oneself.html"&gt;Xray REALITY with 'steal oneself' (English)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://g800.pages.dev/wireguard"&gt;Xray with WireGuard inbound (English)&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;GUI Clients&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenWrt 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/xiaorouji/openwrt-passwall"&gt;PassWall&lt;/a&gt;, &lt;a href="https://github.com/xiaorouji/openwrt-passwall2"&gt;PassWall 2&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/fw876/helloworld"&gt;ShadowSocksR Plus+&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yichya/luci-app-xray"&gt;luci-app-xray&lt;/a&gt; (&lt;a href="https://github.com/yichya/openwrt-xray"&gt;openwrt-xray&lt;/a&gt;)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Asuswrt-Merlin 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/DanielLavrushin/asuswrt-merlin-xrayui"&gt;XRAYUI&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Windows 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayN"&gt;v2rayN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/InvisibleManVPN/InvisibleMan-XRayClient"&gt;Invisible Man - Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Android 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/v2rayNG"&gt;v2rayNG&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/X-flutter"&gt;X-flutter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SaeedDev94/Xray"&gt;SaeedDev94/Xray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lhear/SimpleXray"&gt;SimpleXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt; (&lt;a href="https://apps.apple.com/us/app/happ-proxy-utility-for-tv/id6748297274"&gt;tvOS&lt;/a&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/streisand/id6450534064"&gt;Streisand&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;macOS arm64 &amp;amp; x64 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/happ-proxy-utility/id6504287215"&gt;Happ&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/yanue/V2rayU"&gt;V2rayU&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/tzmax/V2RayXS"&gt;V2RayXS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/OneXray/OneXray"&gt;OneXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Linux 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/v2rayA/v2rayA"&gt;v2rayA&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Furious"&gt;Furious&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/ketetefid/GorzRay"&gt;GorzRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/goxray/desktop"&gt;GoXRay&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/AnyPortal/AnyPortal"&gt;AnyPortal&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Others that support VLESS, XTLS, REALITY, XUDP, PLUX...&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;iOS &amp;amp; macOS arm64 &amp;amp; tvOS 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/app/shadowrocket/id932747118"&gt;Shadowrocket&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://apps.apple.com/us/app/loon/id1373567447"&gt;Loon&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Tools 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/lilendian0x00/xray-knife"&gt;xray-knife&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/kutovoys/xray-checker"&gt;xray-checker&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Xray Wrapper 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XTLS/libXray"&gt;XTLS/libXray&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/remnawave/xtls-sdk"&gt;xtls-sdk&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/hiddify/xtlsapi"&gt;xtlsapi&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/2dust/AndroidLibXrayLite"&gt;AndroidLibXrayLite&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/LorenEteval/Xray-core-python"&gt;Xray-core-python&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XVGuardian/xray-api"&gt;xray-api&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR"&gt;XrayR&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/XrayR-project/XrayR-release"&gt;XrayR-release&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/missuo/XrayR-V2Board"&gt;XrayR-V2Board&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Cores 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://github.com/amnezia-vpn"&gt;Amnezia VPN&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/MetaCubeX/mihomo"&gt;mihomo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://github.com/SagerNet/sing-box"&gt;sing-box&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/XTLS/Xray-core/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://deepwiki.com/XTLS/Xray-core"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Credits&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XTLS/Xray-core/releases/tag/v1.0.0"&gt;Xray-core v1.0.0&lt;/a&gt; was forked from &lt;a href="https://github.com/v2fly/v2ray-core/commit/9a03cc5c98d04cc28320fcee26dbc236b3291256"&gt;v2fly-core 9a03cc5&lt;/a&gt;, and we have made &amp;amp; accumulated a huge number of enhancements over time, check &lt;a href="https://github.com/XTLS/Xray-core/releases"&gt;the release notes for each version&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;For third-party projects used in &lt;a href="https://github.com/XTLS/Xray-core"&gt;Xray-core&lt;/a&gt;, check your local or &lt;a href="https://github.com/XTLS/Xray-core/raw/main/go.mod"&gt;the latest go.mod&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;One-line Compilation&lt;/h2&gt; 
&lt;h3&gt;Windows (PowerShell)&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$env:CGO_ENABLED=0
go build -o xray.exe -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Linux / macOS&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -ldflags="-s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Reproducible Releases&lt;/h3&gt; 
&lt;p&gt;Make sure that you are using the same Go version, and remember to set the git commit id (7 bytes):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -gcflags="all=-l=4" -ldflags="-X github.com/xtls/xray-core/core.build=REPLACE -s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you are compiling a 32-bit MIPS/MIPSLE target, use this command instead:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;CGO_ENABLED=0 go build -o xray -trimpath -buildvcs=false -gcflags="-l=4" -ldflags="-X github.com/xtls/xray-core/core.build=REPLACE -s -w -buildid=" -v ./main
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/XTLS/Xray-core"&gt;&lt;img src="https://starchart.cc/XTLS/Xray-core.svg?sanitize=true" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>jesseduffield/lazydocker</title>
      <link>https://github.com/jesseduffield/lazydocker</link>
      <description>&lt;p&gt;The lazier way to manage everything docker&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=lazydocker_20231023"&gt; 
  &lt;div&gt; 
   &lt;img src="https://github.com/warpdotdev/brand-assets/raw/main/Github/Sponsor/Warp-Github-LG-02.png?raw=true" width="400" alt="Warp" /&gt; 
  &lt;/div&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;b&gt;Available for MacOS and Linux&lt;/b&gt; &lt;br /&gt; 
  &lt;div&gt; 
   &lt;sup&gt;Visit&amp;nbsp;warp.dev&amp;nbsp;to learn more.&lt;/sup&gt; 
  &lt;/div&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://tuple.app/lazydocker"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/assets/tuple.png" width="400" alt="Tuple" /&gt; 
  &lt;/div&gt; &lt;b&gt;Tuple, the premier screen sharing app for developers on macOS and Windows.&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.subble.com"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/assets/subble.webp" width="400" alt="Subble" /&gt; 
  &lt;/div&gt; &lt;b&gt;I (Jesse) co-founded Subble to save your company time and money by finding unused and over-provisioned SaaS licences. Check it out!&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;img src="https://user-images.githubusercontent.com/8456633/59972109-8e9c8480-95cc-11e9-8350-38f7f86ba76d.png" /&gt; &lt;/p&gt; 
&lt;p&gt;A simple terminal UI for both docker and docker-compose, written in Go with the &lt;a href="https://github.com/jroimartin/gocui" title="gocui"&gt;gocui&lt;/a&gt; library.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://github.com/jesseduffield/lazygit/workflows/Continuous%20Integration/badge.svg?sanitize=true" alt="CI" /&gt; &lt;a href="https://goreportcard.com/report/github.com/jesseduffield/lazydocker"&gt;&lt;img src="https://goreportcard.com/badge/github.com/jesseduffield/lazydocker" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://golangci.com"&gt;&lt;img src="https://golangci.com/badges/github.com/jesseduffield/lazydocker.svg?sanitize=true" alt="GolangCI" /&gt;&lt;/a&gt; &lt;a href="http://godoc.org/github.com/jesseduffield/lazydocker"&gt;&lt;img src="https://godoc.org/github.com/jesseduffield/lazydocker?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/repo-size/jesseduffield/lazydocker" alt="GitHub repo size" /&gt; &lt;a href="https://github.com/jesseduffield/lazydocker/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/jesseduffield/lazydocker/total" alt="GitHub Releases" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jesseduffield/lazydocker/releases/latest"&gt;&lt;img src="https://img.shields.io/github/tag/jesseduffield/lazydocker.svg?sanitize=true" alt="GitHub tag" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Homebrew/homebrew-core/raw/master/Formula/lazydocker.rb"&gt;&lt;img src="https://img.shields.io/homebrew/v/lazydocker" alt="homebrew" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/resources/demo3.gif" alt="Gif" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/NICqQPxwJWw"&gt;Demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt; Maintenance of this project is made possible by all the &lt;a href="https://github.com/jesseduffield/lazydocker/graphs/contributors"&gt;contributors&lt;/a&gt; and &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsors&lt;/a&gt;. If you'd like to sponsor this project and have your avatar or company logo appear below &lt;a href="https://github.com/sponsors/jesseduffield"&gt;click here&lt;/a&gt;. 💙 &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors --&gt;&lt;a href="https://github.com/intabulas"&gt;&lt;img src="https://github.com/intabulas.png" width="60px" alt="Mark Lussier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/peppy"&gt;&lt;img src="https://github.com/peppy.png" width="60px" alt="Dean Herbert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/piot"&gt;&lt;img src="https://github.com/piot.png" width="60px" alt="Peter Bjorklund" /&gt;&lt;/a&gt;&lt;a href="https://github.com/rgwood"&gt;&lt;img src="https://github.com/rgwood.png" width="60px" alt="Reilly Wood" /&gt;&lt;/a&gt;&lt;a href="https://github.com/oliverguenther"&gt;&lt;img src="https://github.com/oliverguenther.png" width="60px" alt="Oliver Günther" /&gt;&lt;/a&gt;&lt;a href="https://github.com/pawanjay176"&gt;&lt;img src="https://github.com/pawanjay176.png" width="60px" alt="Pawan Dhananjay" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bdach"&gt;&lt;img src="https://github.com/bdach.png" width="60px" alt="Bartłomiej Dach" /&gt;&lt;/a&gt;&lt;a href="https://github.com/davidklsn"&gt;&lt;img src="https://github.com/davidklsn.png" width="60px" alt="David Karlsson" /&gt;&lt;/a&gt;&lt;a href="https://github.com/carstengehling"&gt;&lt;img src="https://github.com/carstengehling.png" width="60px" alt="Carsten Gehling" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ceuk"&gt;&lt;img src="https://github.com/ceuk.png" width="60px" alt="CEUK" /&gt;&lt;/a&gt;&lt;a href="https://github.com/akospwc"&gt;&lt;img src="https://github.com/akospwc.png" width="60px" alt="Akos Putz" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Xetera"&gt;&lt;img src="https://github.com/Xetera.png" width="60px" alt="Xetera" /&gt;&lt;/a&gt;&lt;a href="https://github.com/HoldenLucas"&gt;&lt;img src="https://github.com/HoldenLucas.png" width="60px" alt="Holden Lucas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nartc"&gt;&lt;img src="https://github.com/nartc.png" width="60px" alt="Chau Tran" /&gt;&lt;/a&gt;&lt;a href="https://github.com/matejcik"&gt;&lt;img src="https://github.com/matejcik.png" width="60px" alt="matejcik" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lucatume"&gt;&lt;img src="https://github.com/lucatume.png" width="60px" alt="theAverageDev (Luca Tumedei)" /&gt;&lt;/a&gt;&lt;a href="https://github.com/IvanZuy"&gt;&lt;img src="https://github.com/IvanZuy.png" width="60px" alt="Ivan Zaitsev" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nicholascloud"&gt;&lt;img src="https://github.com/nicholascloud.png" width="60px" alt="Nicholas Cloud" /&gt;&lt;/a&gt;&lt;a href="https://github.com/PhotonQuantum"&gt;&lt;img src="https://github.com/PhotonQuantum.png" width="60px" alt="LightQuantum" /&gt;&lt;/a&gt;&lt;a href="https://github.com/GitSquared"&gt;&lt;img src="https://github.com/GitSquared.png" width="60px" alt="Gabriel Saillard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ava1ar"&gt;&lt;img src="https://github.com/ava1ar.png" width="60px" alt="Aliaksandr Stelmachonak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/minidfx"&gt;&lt;img src="https://github.com/minidfx.png" width="60px" alt="Burgy Benjamin" /&gt;&lt;/a&gt;&lt;a href="https://github.com/JoeKlemmer"&gt;&lt;img src="https://github.com/JoeKlemmer.png" width="60px" alt="Joe Klemmer" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tobi"&gt;&lt;img src="https://github.com/tobi.png" width="60px" alt="Tobias Lütke" /&gt;&lt;/a&gt;&lt;a href="https://github.com/benbfortis"&gt;&lt;img src="https://github.com/benbfortis.png" width="60px" alt="Ben Beaumont" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jakewarren"&gt;&lt;img src="https://github.com/jakewarren.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tgpholly"&gt;&lt;img src="https://github.com/tgpholly.png" width="60px" alt="Holly" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jisantuc"&gt;&lt;img src="https://github.com/jisantuc.png" width="60px" alt="James Santucci" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bitprophet"&gt;&lt;img src="https://github.com/bitprophet.png" width="60px" alt="Jeff Forcier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tayleighr"&gt;&lt;img src="https://github.com/tayleighr.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Novakov"&gt;&lt;img src="https://github.com/Novakov.png" width="60px" alt="Maciej T. Nowak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/farzadmf"&gt;&lt;img src="https://github.com/farzadmf.png" width="60px" alt="Farzad Majidfayyaz" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nekhaevskiy"&gt;&lt;img src="https://github.com/nekhaevskiy.png" width="60px" alt="Yury" /&gt;&lt;/a&gt;&lt;a href="https://github.com/reivilibre"&gt;&lt;img src="https://github.com/reivilibre.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/andreaskurth"&gt;&lt;img src="https://github.com/andreaskurth.png" width="60px" alt="Andreas Kurth" /&gt;&lt;/a&gt;&lt;a href="https://github.com/BSteffaniak"&gt;&lt;img src="https://github.com/BSteffaniak.png" width="60px" alt="Braden Steffaniak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jordan-gillard"&gt;&lt;img src="https://github.com/jordan-gillard.png" width="60px" alt="Jordan Gillard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/smangels"&gt;&lt;img src="https://github.com/smangels.png" width="60px" alt="Sebastian" /&gt;&lt;/a&gt;&lt;a href="https://github.com/George-Spanos"&gt;&lt;img src="https://github.com/George-Spanos.png" width="60px" alt="George Spanos" /&gt;&lt;/a&gt;&lt;a href="https://github.com/frantisekstanko"&gt;&lt;img src="https://github.com/frantisekstanko.png" width="60px" alt="Frantisek Stanko" /&gt;&lt;/a&gt;&lt;a href="https://github.com/amslezak"&gt;&lt;img src="https://github.com/amslezak.png" width="60px" alt="Andy Slezak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mkock"&gt;&lt;img src="https://github.com/mkock.png" width="60px" alt="Martin Kock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/illarionvk"&gt;&lt;img src="https://github.com/illarionvk.png" width="60px" alt="Illarion Koperski" /&gt;&lt;/a&gt;&lt;a href="https://github.com/WhiteBlackGoose"&gt;&lt;img src="https://github.com/WhiteBlackGoose.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jessealama"&gt;&lt;img src="https://github.com/jessealama.png" width="60px" alt="Jesse Alama" /&gt;&lt;/a&gt;&lt;a href="https://github.com/codacy"&gt;&lt;img src="https://github.com/codacy.png" width="60px" alt="Codacy" /&gt;&lt;/a&gt;&lt;a href="https://github.com/colbr"&gt;&lt;img src="https://github.com/colbr.png" width="60px" alt="Brett" /&gt;&lt;/a&gt;&lt;a href="https://github.com/heijmans"&gt;&lt;img src="https://github.com/heijmans.png" width="60px" alt="Jan Heijmans" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Vesther"&gt;&lt;img src="https://github.com/Vesther.png" width="60px" alt="Kevin Nowald" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sempruijs"&gt;&lt;img src="https://github.com/sempruijs.png" width="60px" alt="sem pruijs" /&gt;&lt;/a&gt;&lt;a href="https://github.com/omarluq"&gt;&lt;img src="https://github.com/omarluq.png" width="60px" alt="Omar Luq " /&gt;&lt;/a&gt;&lt;a href="https://github.com/ethanjli"&gt;&lt;img src="https://github.com/ethanjli.png" width="60px" alt="Ethan Li" /&gt;&lt;/a&gt;&lt;a href="https://github.com/phubaba"&gt;&lt;img src="https://github.com/phubaba.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/fomrat"&gt;&lt;img src="https://github.com/fomrat.png" width="60px" alt="Brian MacAskill" /&gt;&lt;/a&gt;&lt;a href="https://github.com/canhazcodez"&gt;&lt;img src="https://github.com/canhazcodez.png" width="60px" alt="Maxi" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nikbrunner"&gt;&lt;img src="https://github.com/nikbrunner.png" width="60px" alt="nbr" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neunkasulle"&gt;&lt;img src="https://github.com/neunkasulle.png" width="60px" alt="Jan Zenkner" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ahkohd"&gt;&lt;img src="https://github.com/ahkohd.png" width="60px" alt="Victor Aremu" /&gt;&lt;/a&gt;&lt;a href="https://github.com/RVxLab"&gt;&lt;img src="https://github.com/RVxLab.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/igor-ramazanov"&gt;&lt;img src="https://github.com/igor-ramazanov.png" width="60px" alt="Igor Ramazanov" /&gt;&lt;/a&gt;&lt;a href="https://github.com/glotchimo"&gt;&lt;img src="https://github.com/glotchimo.png" width="60px" alt="Elliott Maguire" /&gt;&lt;/a&gt;&lt;a href="https://github.com/n8nio"&gt;&lt;img src="https://github.com/n8nio.png" width="60px" alt="n8n - Workflow Automation" /&gt;&lt;/a&gt;&lt;a href="https://github.com/kaleballmon"&gt;&lt;img src="https://github.com/kaleballmon.png" width="60px" alt="kaleb allmon" /&gt;&lt;/a&gt;&lt;a href="https://github.com/joshuadavidthomas"&gt;&lt;img src="https://github.com/joshuadavidthomas.png" width="60px" alt="Josh Thomas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/josephjacks"&gt;&lt;img src="https://github.com/josephjacks.png" width="60px" alt="JJ" /&gt;&lt;/a&gt;&lt;a href="https://github.com/FrederickGeek8"&gt;&lt;img src="https://github.com/FrederickGeek8.png" width="60px" alt="Frederick Morlock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/agrippanux"&gt;&lt;img src="https://github.com/agrippanux.png" width="60px" alt="Darren Craine" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ezdac"&gt;&lt;img src="https://github.com/ezdac.png" width="60px" alt="Maximilian Langenfeld" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sarzhann"&gt;&lt;img src="https://github.com/sarzhann.png" width="60px" alt="Nurzhan" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dbuls"&gt;&lt;img src="https://github.com/dbuls.png" width="60px" alt="Davis Buls" /&gt;&lt;/a&gt;&lt;a href="https://github.com/MGreek"&gt;&lt;img src="https://github.com/MGreek.png" width="60px" alt="Grec Marc" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sainu"&gt;&lt;img src="https://github.com/sainu.png" width="60px" alt="sainu" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mguellsegarra"&gt;&lt;img src="https://github.com/mguellsegarra.png" width="60px" alt="Marc Güell Segarra" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lppassos"&gt;&lt;img src="https://github.com/lppassos.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/chrisolsen"&gt;&lt;img src="https://github.com/chrisolsen.png" width="60px" alt="Chris Olsen" /&gt;&lt;/a&gt;&lt;a href="https://github.com/vladimir-popov"&gt;&lt;img src="https://github.com/vladimir-popov.png" width="60px" alt="Vladimir Popov" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neilcode"&gt;&lt;img src="https://github.com/neilcode.png" width="60px" alt="Neil Lambert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/shaungarwood"&gt;&lt;img src="https://github.com/shaungarwood.png" width="60px" alt="Shaun Garwood" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dhh"&gt;&lt;img src="https://github.com/dhh.png" width="60px" alt="David Heinemeier Hansson" /&gt;&lt;/a&gt;&lt;a href="https://github.com/wayanjimmy"&gt;&lt;img src="https://github.com/wayanjimmy.png" width="60px" alt="Wayan jimmy" /&gt;&lt;/a&gt;
 &lt;!-- sponsors --&gt; &lt;/p&gt; 
&lt;h2&gt;Elevator Pitch&lt;/h2&gt; 
&lt;p&gt;Minor rant incoming: Something's not working? Maybe a service is down. &lt;code&gt;docker-compose ps&lt;/code&gt;. Yep, it's that microservice that's still buggy. No issue, I'll just restart it: &lt;code&gt;docker-compose restart&lt;/code&gt;. Okay now let's try again. Oh wait the issue is still there. Hmm. &lt;code&gt;docker-compose ps&lt;/code&gt;. Right so the service must have just stopped immediately after starting. I probably would have known that if I was reading the log stream, but there is a lot of clutter in there from other services. I could get the logs for just that one service with &lt;code&gt;docker compose logs --follow myservice&lt;/code&gt; but that dies everytime the service dies so I'd need to run that command every time I restart the service. I could alternatively run &lt;code&gt;docker-compose up myservice&lt;/code&gt; and in that terminal window if the service is down I could just &lt;code&gt;up&lt;/code&gt; it again, but now I've got one service hogging a terminal window even after I no longer care about its logs. I guess when I want to reclaim the terminal realestate I can do &lt;code&gt;ctrl+P,Q&lt;/code&gt;, but... wait, that's not working for some reason. Should I use ctrl+C instead? I can't remember if that closes the foreground process or kills the actual service.&lt;/p&gt; 
&lt;p&gt;What a headache!&lt;/p&gt; 
&lt;p&gt;Memorising docker commands is hard. Memorising aliases is slightly less hard. Keeping track of your containers across multiple terminal windows is near impossible. What if you had all the information you needed in one terminal window with every common command living one keypress away (and the ability to add custom commands as well). Lazydocker's goal is to make that dream a reality.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#requirements"&gt;Requirements&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/keybindings"&gt;Keybindings&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#cool-features"&gt;Cool Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/NICqQPxwJWw"&gt;Video Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/Config.md"&gt;Config Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.twitch.tv/jesseduffield"&gt;Twitch Stream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jesseduffield/lazydocker#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker &amp;gt;= &lt;strong&gt;1.13&lt;/strong&gt; (API &amp;gt;= &lt;strong&gt;1.25&lt;/strong&gt;)&lt;/li&gt; 
 &lt;li&gt;Docker-Compose &amp;gt;= &lt;strong&gt;1.23.2&lt;/strong&gt; (optional)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;Normally &lt;code&gt;lazydocker&lt;/code&gt; formula can be found in the Homebrew core but we suggest you to tap our formula to get frequently updated one. It works with Linux, too.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Tap&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install jesseduffield/lazydocker/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Core&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazydocker&lt;/code&gt; using &lt;a href="https://scoop.sh/"&gt;scoop&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;scoop install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazydocker&lt;/code&gt; using &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;choco install lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;asdf-vm&lt;/h3&gt; 
&lt;p&gt;You can install &lt;a href="https://github.com/comdotlinux/asdf-lazydocker"&gt;asdf-lazydocker plugin&lt;/a&gt; using &lt;a href="https://asdf-vm.com/"&gt;asdf-vm&lt;/a&gt;:&lt;/p&gt; 
&lt;h4&gt;Setup (Once)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;asdf plugin add lazydocker https://github.com/comdotlinux/asdf-lazydocker.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;For Install / Upgrade&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;asdf list all lazydocker
asdf install lazydocker latest
asdf global lazydocker latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Binary Release (Linux/OSX/Windows)&lt;/h3&gt; 
&lt;p&gt;You can manually download a binary release from &lt;a href="https://github.com/jesseduffield/lazydocker/releases"&gt;the release page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Automated install/update, don't forget to always verify what you're piping into bash:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The script installs downloaded binary to &lt;code&gt;$HOME/.local/bin&lt;/code&gt; directory by default, but it can be changed by setting &lt;code&gt;DIR&lt;/code&gt; environment variable.&lt;/p&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;p&gt;Required Go Version &amp;gt;= &lt;strong&gt;1.19&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/jesseduffield/lazydocker@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Required Go version &amp;gt;= &lt;strong&gt;1.8&lt;/strong&gt;, &amp;lt;= &lt;strong&gt;1.17&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go get github.com/jesseduffield/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch Linux AUR&lt;/h3&gt; 
&lt;p&gt;You can install lazydocker using the &lt;a href="https://aur.archlinux.org/packages/lazydocker"&gt;AUR&lt;/a&gt; by running:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;yay -S lazydocker
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/pulls/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/stars/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Stars" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/lazyteam/lazydocker"&gt;&lt;img src="https://img.shields.io/docker/cloud/automated/lazyteam/lazydocker.svg?sanitize=true" alt="Docker Automated" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; 
  &lt;details&gt;
   &lt;summary&gt;Click if you have an ARM device&lt;/summary&gt;
   &lt;p&gt; &lt;/p&gt;
   &lt;ul&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 32 bit v6 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm32v6/golang \
--build-arg GOARCH=arm \
--build-arg GOARM=6 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 32 bit v7 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm32v7/golang \
--build-arg GOARCH=arm \
--build-arg GOARM=7 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
    &lt;li&gt; &lt;p&gt;If you have a ARM 64 bit v8 architecture&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t lazyteam/lazydocker \
--build-arg BASE_IMAGE_BUILDER=arm64v8/golang \
--build-arg GOARCH=arm64 \
https://github.com/jesseduffield/lazydocker.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;p&gt;&lt;/p&gt;
  &lt;/details&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Run the container&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;docker run --rm -it -v \
/var/run/docker.sock:/var/run/docker.sock \
-v /yourpath:/.config/jesseduffield/lazydocker \
lazyteam/lazydocker
&lt;/code&gt;&lt;/pre&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;Don't forget to change &lt;code&gt;/yourpath&lt;/code&gt; to an actual path you created to store lazydocker's config&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You can also use this &lt;a href="https://github.com/jesseduffield/lazydocker/raw/master/docker-compose.yml"&gt;docker-compose.yml&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;You might want to create an alias, for example:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-sh"&gt;echo "alias lzd='docker run --rm -it -v /var/run/docker.sock:/var/run/docker.sock -v /yourpath/config:/.config/jesseduffield/lazydocker lazyteam/lazydocker'" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For development, you can build the image using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;git clone https://github.com/jesseduffield/lazydocker.git
cd lazydocker
docker build -t lazyteam/lazydocker \
    --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` \
    --build-arg VCS_REF=`git rev-parse --short HEAD` \
    --build-arg VERSION=`git describe --abbrev=0 --tag` \
    .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you encounter a compatibility issue with Docker bundled binary, try rebuilding the image with the build argument &lt;code&gt;--build-arg DOCKER_VERSION="v$(docker -v | cut -d" " -f3 | rev | cut -c 2- | rev)"&lt;/code&gt; so that the bundled docker binary matches your host docker binary version.&lt;/p&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;You'll need to &lt;a href="https://golang.org/doc/install"&gt;install Go&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazydocker.git
cd lazydocker
go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Call &lt;code&gt;lazydocker&lt;/code&gt; in your terminal. I personally use this a lot so I've made an alias for it like so:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;echo "alias lzd='lazydocker'" &amp;gt;&amp;gt; ~/.zshrc
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;(you can substitute .zshrc for whatever rc file you're using)&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Basic video tutorial &lt;a href="https://youtu.be/NICqQPxwJWw"&gt;here&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;List of keybindings &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/keybindings"&gt;here&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Cool features&lt;/h2&gt; 
&lt;p&gt;everything is one keypress away (or one click away! Mouse support FTW):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;viewing the state of your docker or docker-compose container environment at a glance&lt;/li&gt; 
 &lt;li&gt;viewing logs for a container/service&lt;/li&gt; 
 &lt;li&gt;viewing ascii graphs of your containers' metrics so that you can not only feel but also look like a developer&lt;/li&gt; 
 &lt;li&gt;customising those graphs to measure nearly any metric you want&lt;/li&gt; 
 &lt;li&gt;attaching to a container/service&lt;/li&gt; 
 &lt;li&gt;restarting/removing/rebuilding containers/services&lt;/li&gt; 
 &lt;li&gt;viewing the ancestor layers of a given image&lt;/li&gt; 
 &lt;li&gt;pruning containers, images, or volumes that are hogging up disk space&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;There is still a lot of work to go! Please check out the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the discord channel&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/ehwFt2t4wt"&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/resources/discord.png" width="75" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you would like to support the development of lazydocker, consider &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; 
&lt;h2&gt;Social&lt;/h2&gt; 
&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href="https://twitter.com/DuffieldJesse"&gt;twitter&lt;/a&gt; or watch me program on &lt;a href="https://www.twitch.tv/jesseduffield"&gt;twitch&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How do I edit my config?&lt;/h3&gt; 
&lt;p&gt;By opening lazydocker, clicking on the 'project' panel in the top left, and pressing 'o' (or 'e' if your editor is vim). See &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazydocker/master/docs/Config.md"&gt;Config Docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;How do I get text to wrap in my main panel?&lt;/h3&gt; 
&lt;p&gt;In the future I want to make this the default, but for now there are some CPU issues that arise with wrapping. If you want to enable wrapping, use &lt;code&gt;gui.wrapMainPanel: true&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;How do you select text?&lt;/h3&gt; 
&lt;p&gt;Because we support mouse events, you will need to hold option while dragging the mouse to indicate you're trying to select text rather than click on something. Alternatively you can disable mouse events via the &lt;code&gt;gui.ignoreMouseEvents&lt;/code&gt; config value.&lt;/p&gt; 
&lt;p&gt;Mac Users: See &lt;a href="https://github.com/jesseduffield/lazydocker/issues/190"&gt;Issue #190&lt;/a&gt; for other options.&lt;/p&gt; 
&lt;h3&gt;Why can't I see my container's logs?&lt;/h3&gt; 
&lt;p&gt;By default we only show logs from the last hour, so that we're not putting too much strain on the machine. This may be why you can't see logs when you first start lazydocker. This can be overwritten in the config's &lt;code&gt;commandTemplates&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;If you are running lazydocker in Docker container, it is a know bug, that you can't see logs or CPU usage.&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skanehira/docui"&gt;docui&lt;/a&gt; - Skanehira beat me to the punch on making a docker terminal UI, so definitely check out that repo as well! I think the two repos can live in harmony though: lazydocker is more about managing existing containers/services, and docui is more about creating and configuring them.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/portainer/portainer"&gt;Portainer&lt;/a&gt; - Portainer tries to solve the same problem but it's accessed via your browser rather than your terminal. It also supports docker swarm.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://github.com/veggiemonk/awesome-docker/raw/master/README.md#terminal"&gt;Awesome Docker list&lt;/a&gt; for similar tools to work with Docker.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>quic-go/quic-go</title>
      <link>https://github.com/quic-go/quic-go</link>
      <description>&lt;p&gt;A production-ready QUIC implementation in pure Go&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;A QUIC implementation in pure Go&lt;/h1&gt; 
&lt;img src="https://raw.githubusercontent.com/quic-go/quic-go/master/docs/quic.png" width="303" height="124" /&gt; 
&lt;p&gt;&lt;a href="https://quic-go.net/docs/"&gt;&lt;img src="https://img.shields.io/badge/docs-quic--go.net-red?style=flat" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/quic-go/quic-go"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/quic-go/quic-go" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/quic-go/quic-go/"&gt;&lt;img src="https://img.shields.io/codecov/c/github/quic-go/quic-go/master.svg?style=flat-square" alt="Code Coverage" /&gt;&lt;/a&gt; &lt;a href="https://issues.oss-fuzz.com/issues?q=quic-go"&gt;&lt;img src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/quic-go.svg?sanitize=true" alt="Fuzzing Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;quic-go is an implementation of the QUIC protocol (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9000"&gt;RFC 9000&lt;/a&gt;, &lt;a href="https://datatracker.ietf.org/doc/html/rfc9001"&gt;RFC 9001&lt;/a&gt;, &lt;a href="https://datatracker.ietf.org/doc/html/rfc9002"&gt;RFC 9002&lt;/a&gt;) in Go. It has support for HTTP/3 (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9114"&gt;RFC 9114&lt;/a&gt;), including QPACK (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9204"&gt;RFC 9204&lt;/a&gt;) and HTTP Datagrams (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9297"&gt;RFC 9297&lt;/a&gt;).&lt;/p&gt; 
&lt;p&gt;In addition to these base RFCs, it also implements the following RFCs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Unreliable Datagram Extension (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9221"&gt;RFC 9221&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Datagram Packetization Layer Path MTU Discovery (DPLPMTUD, &lt;a href="https://datatracker.ietf.org/doc/html/rfc8899"&gt;RFC 8899&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;QUIC Version 2 (&lt;a href="https://datatracker.ietf.org/doc/html/rfc9369"&gt;RFC 9369&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;QUIC Event Logging using qlog (&lt;a href="https://datatracker.ietf.org/doc/draft-ietf-quic-qlog-main-schema/"&gt;draft-ietf-quic-qlog-main-schema&lt;/a&gt; and &lt;a href="https://datatracker.ietf.org/doc/draft-ietf-quic-qlog-quic-events/"&gt;draft-ietf-quic-qlog-quic-events&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;QUIC Stream Resets with Partial Delivery (&lt;a href="https://datatracker.ietf.org/doc/html/draft-ietf-quic-reliable-stream-reset-07"&gt;draft-ietf-quic-reliable-stream-reset&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Support for WebTransport over HTTP/3 (&lt;a href="https://datatracker.ietf.org/doc/draft-ietf-webtrans-http3/"&gt;draft-ietf-webtrans-http3&lt;/a&gt;) is implemented in &lt;a href="https://github.com/quic-go/webtransport-go"&gt;webtransport-go&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Detailed documentation can be found on &lt;a href="https://quic-go.net/docs/"&gt;quic-go.net&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Projects using quic-go&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Stars&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/AdguardTeam/AdGuardHome"&gt;AdGuardHome&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Free and open source, powerful network-wide ads &amp;amp; trackers blocking DNS server.&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/AdguardTeam/AdGuardHome?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/xyproto/algernon"&gt;algernon&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Small self-contained pure-Go web server with Lua, Markdown, HTTP/2, QUIC, Redis and PostgreSQL support&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/xyproto/algernon?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/caddyserver/caddy/"&gt;caddy&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Fast, multi-platform web server with automatic HTTPS&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/caddyserver/caddy?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/cloudflare/cloudflared"&gt;cloudflared&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A tunneling daemon that proxies traffic from the Cloudflare network to your origins&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/cloudflare/cloudflared?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/fatedier/frp"&gt;frp&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A fast reverse proxy to help you expose a local server behind a NAT or firewall to the internet&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/fatedier/frp?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/libp2p/go-libp2p"&gt;go-libp2p&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;libp2p implementation in Go, powering &lt;a href="https://github.com/ipfs/kubo"&gt;Kubo&lt;/a&gt; (IPFS) and &lt;a href="https://github.com/filecoin-project/lotus"&gt;Lotus&lt;/a&gt; (Filecoin), among others&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/libp2p/go-libp2p?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/go-gost/gost"&gt;gost&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A simple security tunnel written in Go&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/go-gost/gost?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/apernet/hysteria"&gt;Hysteria&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A powerful, lightning fast and censorship resistant proxy&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/apernet/hysteria?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/dunglas/mercure"&gt;Mercure&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;An open, easy, fast, reliable and battery-efficient solution for real-time communications&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/dunglas/mercure?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/ooni/probe-cli"&gt;OONI Probe&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Next generation OONI Probe. Library and CLI tool.&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/ooni/probe-cli?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/flipt-io/reverst"&gt;reverst&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Reverse Tunnels in Go over HTTP/3 and QUIC&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/flipt-io/reverst?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/roadrunner-server/roadrunner"&gt;RoadRunner&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;High-performance PHP application server, process manager written in Go and powered with plugins&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/roadrunner-server/roadrunner?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/syncthing/syncthing/"&gt;syncthing&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Open Source Continuous File Synchronization&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/syncthing/syncthing?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/traefik/traefik"&gt;traefik&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The Cloud Native Application Proxy&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/traefik/traefik?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/v2fly/v2ray-core"&gt;v2ray-core&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;A platform for building proxies to bypass network restrictions&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/v2fly/v2ray-core?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/yomorun/yomo"&gt;YoMo&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Streaming Serverless Framework for Geo-distributed System&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://img.shields.io/github/stars/yomorun/yomo?style=flat-square" alt="GitHub Repo stars" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;If you'd like to see your project added to this list, please send us a PR.&lt;/p&gt; 
&lt;h2&gt;Release Policy&lt;/h2&gt; 
&lt;p&gt;quic-go always aims to support the latest two Go releases.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We are always happy to welcome new contributors! We have a number of self-contained issues that are suitable for first-time contributors, they are tagged with &lt;a href="https://github.com/quic-go/quic-go/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22"&gt;help wanted&lt;/a&gt;. If you have any questions, please feel free to reach out by opening an issue or leaving a comment.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wailsapp/wails</title>
      <link>https://github.com/wailsapp/wails</link>
      <description>&lt;p&gt;Create beautiful applications using Go&lt;/p&gt;&lt;hr&gt;&lt;p align="center" style="text-align: center"&gt; &lt;img src="https://raw.githubusercontent.com/wailsapp/wails/master/assets/images/logo-universal.png" width="55%" /&gt;&lt;br /&gt; &lt;/p&gt; 
&lt;p align="center"&gt; Build desktop applications using Go &amp;amp; Web Technologies. &lt;br /&gt; &lt;br /&gt; &lt;a href="https://github.com/wailsapp/wails/raw/master/LICENSE"&gt; &lt;img alt="GitHub" src="https://img.shields.io/github/license/wailsapp/wails" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/wailsapp/wails"&gt; &lt;img src="https://goreportcard.com/badge/github.com/wailsapp/wails" /&gt; &lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/wailsapp/wails"&gt; &lt;img src="https://pkg.go.dev/badge/github.com/wailsapp/wails.svg?sanitize=true" alt="Go Reference" /&gt; &lt;/a&gt; &lt;a href="https://github.com/wailsapp/wails/issues"&gt; &lt;img src="https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat" alt="CodeFactor" /&gt; &lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_shield" alt="FOSSA Status"&gt; &lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=shield" /&gt; &lt;/a&gt; &lt;a href="https://github.com/avelino/awesome-go" rel="nofollow"&gt; &lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome" /&gt; &lt;/a&gt; &lt;a href="https://discord.gg/BrRSWTaxVK"&gt; &lt;img alt="Discord" src="https://dcbadge.vercel.app/api/server/BrRSWTaxVK?style=flat" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://github.com/wailsapp/wails/actions/workflows/build-and-test.yml" rel="nofollow"&gt; &lt;img src="https://img.shields.io/github/actions/workflow/status/wailsapp/wails/build-and-test.yml?branch=master&amp;amp;logo=Github" alt="Build" /&gt; &lt;/a&gt; &lt;a href="https://github.com/wailsapp/wails/tags" rel="nofollow"&gt; &lt;img alt="GitHub tag (latest SemVer pre-release)" src="https://img.shields.io/github/v/tag/wailsapp/wails?include_prereleases&amp;amp;label=version" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;strong&gt; &lt;samp&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.md"&gt;English&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.zh-Hans.md"&gt;简体中文&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ja.md"&gt;日本語&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ko.md"&gt;한국어&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.es.md"&gt;Español&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.pt-br.md"&gt;Português&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.ru.md"&gt;Русский&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.fr.md"&gt;Francais&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.uz.md"&gt;Uzbek&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.de.md"&gt;Deutsch&lt;/a&gt; · &lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/README.tr.md"&gt;Türkçe&lt;/a&gt;&lt;/p&gt; &lt;/samp&gt; &lt;/strong&gt; 
&lt;/div&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#table-of-contents"&gt;Table of Contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#getting-started"&gt;Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#stargazers-over-time"&gt;Stargazers over time&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#contributors"&gt;Contributors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wailsapp/wails/master/#inspiration"&gt;Inspiration&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;The traditional method of providing web interfaces to Go programs is via a built-in web server. Wails offers a different approach: it provides the ability to wrap both Go code and a web frontend into a single binary. Tools are provided to make this easy for you by handling project creation, compilation and bundling. All you have to do is get creative!&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use standard Go for the backend&lt;/li&gt; 
 &lt;li&gt;Use any frontend technology you are already familiar with to build your UI&lt;/li&gt; 
 &lt;li&gt;Quickly create rich frontends for your Go programs using pre-built templates&lt;/li&gt; 
 &lt;li&gt;Easily call Go methods from Javascript&lt;/li&gt; 
 &lt;li&gt;Auto-generated Typescript definitions for your Go structs and methods&lt;/li&gt; 
 &lt;li&gt;Native Dialogs &amp;amp; Menus&lt;/li&gt; 
 &lt;li&gt;Native Dark / Light mode support&lt;/li&gt; 
 &lt;li&gt;Supports modern translucency and "frosted window" effects&lt;/li&gt; 
 &lt;li&gt;Unified eventing system between Go and Javascript&lt;/li&gt; 
 &lt;li&gt;Powerful cli tool to quickly generate and build your projects&lt;/li&gt; 
 &lt;li&gt;Multiplatform&lt;/li&gt; 
 &lt;li&gt;Uses native rendering engines - &lt;em&gt;no embedded browser&lt;/em&gt;!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Roadmap&lt;/h3&gt; 
&lt;p&gt;The project roadmap may be found &lt;a href="https://github.com/wailsapp/wails/discussions/1484"&gt;here&lt;/a&gt;. Please consult it before creating an enhancement request.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The installation instructions are on the &lt;a href="https://wails.io/docs/gettingstarted/installation"&gt;official website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;This project is supported by these kind people / companies: &lt;img src="https://raw.githubusercontent.com/wailsapp/wails/master/website/static/img/sponsors.svg?sanitize=true" style="width:100%;max-width:800px;" /&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img src="https://wails.io/img/sponsor/jetbrains-grayscale.webp" style="width: 100px" /&gt; &lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Is this an alternative to Electron?&lt;/p&gt; &lt;p&gt;Depends on your requirements. It's designed to make it easy for Go programmers to make lightweight desktop applications or add a frontend to their existing applications. Wails does offer native elements such as menus and dialogs, so it could be considered a lightweight electron alternative.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Who is this project aimed at?&lt;/p&gt; &lt;p&gt;Go programmers who want to bundle an HTML/JS/CSS frontend with their applications, without resorting to creating a server and opening a browser to view it.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;What's with the name?&lt;/p&gt; &lt;p&gt;When I saw WebView, I thought "What I really want is tooling around building a WebView app, a bit like Rails is to Ruby". So initially it was a play on words (Webview on Rails). It just so happened to also be a homophone of the English name for the &lt;a href="https://en.wikipedia.org/wiki/Wales"&gt;Country&lt;/a&gt; I am from. So it stuck.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;a href="https://star-history.com/#wailsapp/wails&amp;amp;Date"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date&amp;amp;theme=dark" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date" /&gt; 
  &lt;img alt="Star History Chart" src="https://api.star-history.com/svg?repos=wailsapp/wails&amp;amp;type=Date" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;The contributors list is getting too big for the readme! All the amazing people who have contributed to this project have their own page &lt;a href="https://wails.io/credits#contributors"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwailsapp%2Fwails?ref=badge_large"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwailsapp%2Fwails.svg?type=large" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Inspiration&lt;/h2&gt; 
&lt;p&gt;This project was mainly coded to the following albums:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/1R2rsEUqXjIvAbzM0yHrxA"&gt;Manic Street Preachers - Resistance Is Futile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/4VzCL9kjhgGQeKCiojK1YN"&gt;Manic Street Preachers - This Is My Truth, Tell Me Yours&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/4Krg8zvprquh7TVn9OxZn8"&gt;The Midnight - Endless Summer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3kMfsD07Q32HRWKRrpcexr"&gt;Gary Newman - Savage (Songs from a Broken World)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/0oL0OhrE2rYVns4IGj8h2m"&gt;Steve Vai - Passion &amp;amp; Warfare&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/1nJsbWm3Yy2DW1KIc1OKle"&gt;Ben Howard - Every Kingdom&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/6astw05cTiXEc2OvyByaPs"&gt;Ben Howard - Noonday Dream&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/2vBE40Rp60tl7rNqIZjaXM"&gt;Adwaith - Melyn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3v2hrfNGINPLuDP0YDTOjm"&gt;Gwidaith Hen Fran - Cedors Hen Wrach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/2Kh43m04B1UkVcpcRa1Zug"&gt;Metallica - Metallica&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/6SsIdN05HQg2GwYLfXuzLB"&gt;Bloc Party - Silent Alarm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/3tklE2Fgw1hCIUstIwPBJF"&gt;Maxthor - Another World&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://open.spotify.com/album/0c32OywcLpdJCWWMC6vB8v"&gt;Alun Tan Lan - Y Distawrwydd&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>wavetermdev/waveterm</title>
      <link>https://github.com/wavetermdev/waveterm</link>
      <description>&lt;p&gt;An open-source, cross-platform terminal for seamless workflows&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.waveterm.dev"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="./assets/wave-dark.png" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="./assets/wave-light.png" /&gt; 
   &lt;img alt="Wave Terminal Logo" src="https://raw.githubusercontent.com/wavetermdev/waveterm/main/assets/wave-light.png" width="240" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;h1&gt;Wave Terminal&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fwavetermdev%2Fwaveterm?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fwavetermdev%2Fwaveterm.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Wave is an open-source terminal that combines traditional terminal features with graphical capabilities like file previews, web browsing, and AI assistance. It runs on MacOS, Linux, and Windows.&lt;/p&gt; 
&lt;p&gt;Modern development involves constantly switching between terminals and browsers - checking documentation, previewing files, monitoring systems, and using AI tools. Wave brings these graphical tools directly into the terminal, letting you control them from the command line. This means you can stay in your terminal workflow while still having access to the visual interfaces you need.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/wavetermdev/waveterm/main/assets/wave-screenshot.webp" alt="WaveTerm Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Key Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Flexible drag &amp;amp; drop interface to organize terminal blocks, editors, web browsers, and AI assistants&lt;/li&gt; 
 &lt;li&gt;Built-in editor for seamlessly editing remote files with syntax highlighting and modern editor features&lt;/li&gt; 
 &lt;li&gt;Rich file preview system for remote files (markdown, images, video, PDFs, CSVs, directories)&lt;/li&gt; 
 &lt;li&gt;Integrated AI chat with support for multiple models (OpenAI, Claude, Azure, Perplexity, Ollama)&lt;/li&gt; 
 &lt;li&gt;Command Blocks for isolating and monitoring individual commands with auto-close options&lt;/li&gt; 
 &lt;li&gt;One-click remote connections with full terminal and file system access&lt;/li&gt; 
 &lt;li&gt;Rich customization including tab themes, terminal styles, and background images&lt;/li&gt; 
 &lt;li&gt;Powerful &lt;code&gt;wsh&lt;/code&gt; command system for managing your workspace from the CLI and sharing data between terminal sessions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Wave Terminal works on macOS, Linux, and Windows.&lt;/p&gt; 
&lt;p&gt;Platform-specific installation instructions can be found &lt;a href="https://docs.waveterm.dev/gettingstarted"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also install Wave Terminal directly from: &lt;a href="https://www.waveterm.dev/download"&gt;www.waveterm.dev/download&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Minimum requirements&lt;/h3&gt; 
&lt;p&gt;Wave Terminal runs on the following platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 11 or later (arm64, x64)&lt;/li&gt; 
 &lt;li&gt;Windows 10 1809 or later (x64)&lt;/li&gt; 
 &lt;li&gt;Linux based on glibc-2.28 or later (Debian 10, RHEL 8, Ubuntu 20.04, etc.) (arm64, x64)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The WSH helper runs on the following platforms:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;macOS 11 or later (arm64, x64)&lt;/li&gt; 
 &lt;li&gt;Windows 10 or later (arm64, x64)&lt;/li&gt; 
 &lt;li&gt;Linux Kernel 2.6.32 or later (x64), Linux Kernel 3.1 or later (arm64)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Wave is constantly improving! Our roadmap will be continuously updated with our goals for each release. You can find it &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/ROADMAP.md"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Want to provide input to our future releases? Connect with us on &lt;a href="https://discord.gg/XfvZ334gwU"&gt;Discord&lt;/a&gt; or open a &lt;a href="https://github.com/wavetermdev/waveterm/issues/new/choose"&gt;Feature Request&lt;/a&gt;!&lt;/p&gt; 
&lt;h2&gt;Links&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Homepage — &lt;a href="https://www.waveterm.dev"&gt;https://www.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Download Page — &lt;a href="https://www.waveterm.dev/download"&gt;https://www.waveterm.dev/download&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Documentation — &lt;a href="https://docs.waveterm.dev"&gt;https://docs.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Legacy Documentation — &lt;a href="https://legacydocs.waveterm.dev"&gt;https://legacydocs.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blog — &lt;a href="https://blog.waveterm.dev"&gt;https://blog.waveterm.dev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;X — &lt;a href="https://x.com/wavetermdev"&gt;https://x.com/wavetermdev&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Discord Community — &lt;a href="https://discord.gg/XfvZ334gwU"&gt;https://discord.gg/XfvZ334gwU&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Building from Source&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/BUILD.md"&gt;Building Wave Terminal&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Wave uses GitHub Issues for issue tracking.&lt;/p&gt; 
&lt;p&gt;Find more information in our &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/CONTRIBUTING.md"&gt;Contributions Guide&lt;/a&gt;, which includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/CONTRIBUTING.md#contributing-to-wave-terminal"&gt;Ways to contribute&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/CONTRIBUTING.md#before-you-start"&gt;Contribution guidelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.waveterm.dev/storybook"&gt;Storybook&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Wave Terminal is licensed under the Apache-2.0 License. For more information on our dependencies, see &lt;a href="https://raw.githubusercontent.com/wavetermdev/waveterm/main/ACKNOWLEDGEMENTS.md"&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>netbirdio/netbird</title>
      <link>https://github.com/netbirdio/netbird</link>
      <description>&lt;p&gt;Connect your devices into a secure WireGuard®-based overlay network with SSO, MFA and granular access controls.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;p align="center"&gt; &lt;img width="234" src="https://raw.githubusercontent.com/netbirdio/netbird/main/docs/media/logo-full.png" /&gt; &lt;/p&gt; 
 &lt;p&gt; &lt;a href="https://img.shields.io/badge/license-BSD--3-blue)"&gt; &lt;img src="https://sonarcloud.io/api/project_badges/measure?project=netbirdio_netbird&amp;amp;metric=alert_status" /&gt; &lt;/a&gt; &lt;a href="https://github.com/netbirdio/netbird/raw/main/LICENSE"&gt; &lt;img src="https://img.shields.io/badge/license-BSD--3-blue" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://docs.netbird.io/slack-url"&gt; &lt;img src="https://img.shields.io/badge/slack-@netbird-red.svg?logo=slack" /&gt; &lt;/a&gt; &lt;a href="https://forum.netbird.io"&gt; &lt;img src="https://img.shields.io/badge/community forum-@netbird-red.svg?logo=discourse" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://gurubase.io/g/netbird"&gt; &lt;img src="https://img.shields.io/badge/Gurubase-Ask%20NetBird%20Guru-006BFF" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;strong&gt; Start using NetBird at &lt;a href="https://netbird.io/pricing"&gt;netbird.io&lt;/a&gt; &lt;br /&gt; See &lt;a href="https://netbird.io/docs/"&gt;Documentation&lt;/a&gt; &lt;br /&gt; Join our &lt;a href="https://docs.netbird.io/slack-url"&gt;Slack channel&lt;/a&gt; or our &lt;a href="https://forum.netbird.io"&gt;Community forum&lt;/a&gt; &lt;br /&gt; &lt;/strong&gt; &lt;br /&gt; &lt;a href="https://registry.terraform.io/providers/netbirdio/netbird/latest"&gt; New: NetBird terraform provider &lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;NetBird combines a configuration-free peer-to-peer private network and a centralized access control system in a single platform, making it easy to create secure private networks for your organization or home.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Connect.&lt;/strong&gt; NetBird creates a WireGuard-based overlay network that automatically connects your machines over an encrypted tunnel, leaving behind the hassle of opening ports, complex firewall rules, VPN gateways, and so forth.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Secure.&lt;/strong&gt; NetBird enables secure remote access by applying granular access policies while allowing you to manage them intuitively from a single place. Works universally on any infrastructure.&lt;/p&gt; 
&lt;h3&gt;Open Source Network Security in a Single Platform&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2"&gt;https://github.com/user-attachments/assets/10cec749-bb56-4ab3-97af-4e38850108d2&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;NetBird on Lawrence Systems (Video)&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Kwrff6h0rEw"&gt;&lt;img src="https://img.youtube.com/vi/Kwrff6h0rEw/0.jpg" alt="Watch the video" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Key features&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Connectivity&lt;/th&gt; 
   &lt;th&gt;Management&lt;/th&gt; 
   &lt;th&gt;Security&lt;/th&gt; 
   &lt;th&gt;Automation&lt;/th&gt; 
   &lt;th&gt;Platforms&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Kernel WireGuard&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://github.com/netbirdio/dashboard"&gt;Admin Web UI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/installation#running-net-bird-with-sso-login"&gt;SSO &amp;amp; MFA support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/api"&gt;Public API&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Linux&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer connections&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Auto peer discovery and configuration&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-network-access"&gt;Access control - groups &amp;amp; rules&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/register-machines-using-setup-keys"&gt;Setup keys for bulk network provisioning&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Mac&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Connection relay fallback&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/identity-providers"&gt;IdP integrations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/audit-events-logging"&gt;Activity logging&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-quickstart"&gt;Self-hosting quickstart script&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Windows&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/routing-traffic-to-private-networks"&gt;Routes to external networks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-dns-in-your-network"&gt;Private DNS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/manage-posture-checks"&gt;Device posture checks&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] IdP groups sync with JWT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Android&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] NAT traversal with BPF&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/add-users-to-your-network"&gt;Multiuser support&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Peer-to-peer encryption&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] iOS&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://netbird.io/knowledge-hub/the-first-quantum-resistant-mesh-vpn"&gt;Quantum-resistance with Rosenpass&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] OpenWRT&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/enforce-periodic-user-authentication"&gt;Periodic re-authentication&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] &lt;a href="https://docs.netbird.io/how-to/netbird-on-faas"&gt;Serverless&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;
    &lt;ul&gt;
     &lt;li&gt;- [x] Docker&lt;/li&gt;
    &lt;/ul&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quickstart with NetBird Cloud&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and install NetBird at &lt;a href="https://app.netbird.io/install"&gt;https://app.netbird.io/install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Follow the steps to sign-up with Google, Microsoft, GitHub or your email address.&lt;/li&gt; 
 &lt;li&gt;Check NetBird &lt;a href="https://app.netbird.io/"&gt;admin UI&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Add more machines.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Quickstart with self-hosted NetBird&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;This is the quickest way to try self-hosted NetBird. It should take around 5 minutes to get started if you already have a public domain and a VM. Follow the &lt;a href="https://docs.netbird.io/selfhosted/selfhosted-guide#advanced-guide-with-a-custom-identity-provider"&gt;Advanced guide with a custom identity provider&lt;/a&gt; for installations with different IDPs.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Infrastructure requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A Linux VM with at least &lt;strong&gt;1CPU&lt;/strong&gt; and &lt;strong&gt;2GB&lt;/strong&gt; of memory.&lt;/li&gt; 
 &lt;li&gt;The VM should be publicly accessible on TCP ports &lt;strong&gt;80&lt;/strong&gt; and &lt;strong&gt;443&lt;/strong&gt; and UDP ports: &lt;strong&gt;3478&lt;/strong&gt;, &lt;strong&gt;49152-65535&lt;/strong&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Public domain&lt;/strong&gt; name pointing to the VM.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Software requirements:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Docker installed on the VM with the docker-compose plugin (&lt;a href="https://docs.docker.com/engine/install/"&gt;Docker installation guide&lt;/a&gt;) or docker with docker-compose in version 2 or higher.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://jqlang.github.io/jq/"&gt;jq&lt;/a&gt; installed. In most distributions Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install jq&lt;/code&gt; or &lt;code&gt;sudo yum install jq&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://curl.se/"&gt;curl&lt;/a&gt; installed. Usually available in the official repositories and can be installed with &lt;code&gt;sudo apt install curl&lt;/code&gt; or &lt;code&gt;sudo yum install curl&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Steps&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download and run the installation script:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export NETBIRD_DOMAIN=netbird.example.com; curl -fsSL https://github.com/netbirdio/netbird/releases/latest/download/getting-started-with-zitadel.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;Once finished, you can manage the resources via &lt;code&gt;docker-compose&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;A bit on NetBird internals&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every machine in the network runs &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/client/"&gt;NetBird Agent (or Client)&lt;/a&gt; that manages WireGuard.&lt;/li&gt; 
 &lt;li&gt;Every agent connects to &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/management/"&gt;Management Service&lt;/a&gt; that holds network state, manages peer IPs, and distributes network updates to agents (peers).&lt;/li&gt; 
 &lt;li&gt;NetBird agent uses WebRTC ICE implemented in &lt;a href="https://github.com/pion/ice"&gt;pion/ice library&lt;/a&gt; to discover connection candidates when establishing a peer-to-peer connection between machines.&lt;/li&gt; 
 &lt;li&gt;Connection candidates are discovered with the help of &lt;a href="https://en.wikipedia.org/wiki/STUN"&gt;STUN&lt;/a&gt; servers.&lt;/li&gt; 
 &lt;li&gt;Agents negotiate a connection through &lt;a href="https://raw.githubusercontent.com/netbirdio/netbird/main/signal/"&gt;Signal Service&lt;/a&gt; passing p2p encrypted messages with candidates.&lt;/li&gt; 
 &lt;li&gt;Sometimes the NAT traversal is unsuccessful due to strict NATs (e.g. mobile carrier-grade NAT) and a p2p connection isn't possible. When this occurs the system falls back to a relay server called &lt;a href="https://en.wikipedia.org/wiki/Traversal_Using_Relays_around_NAT"&gt;TURN&lt;/a&gt;, and a secure WireGuard tunnel is established via the TURN server.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt; is the one that has been successfully used for STUN and TURN in NetBird setups.&lt;/p&gt; 
&lt;p float="left" align="middle"&gt; &lt;img src="https://docs.netbird.io/docs-static/img/architecture/high-level-dia.png" width="700" /&gt; &lt;/p&gt; 
&lt;p&gt;See a complete &lt;a href="https://docs.netbird.io/about-netbird/how-netbird-works#architecture"&gt;architecture overview&lt;/a&gt; for details.&lt;/p&gt; 
&lt;h3&gt;Community projects&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/physk/netbird-installer"&gt;NetBird installer script&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://galaxy.ansible.com/ui/repo/published/dominion_solutions/netbird/"&gt;NetBird ansible collection by Dominion Solutions&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;main&lt;/code&gt; branch may be in an &lt;em&gt;unstable or even broken state&lt;/em&gt; during development. For stable versions, see &lt;a href="https://github.com/netbirdio/netbird/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Support acknowledgement&lt;/h3&gt; 
&lt;p&gt;In November 2022, NetBird joined the &lt;a href="https://www.forschung-it-sicherheit-kommunikationssysteme.de/foerderung/bekanntmachungen/startup-secure"&gt;StartUpSecure program&lt;/a&gt; sponsored by The Federal Ministry of Education and Research of The Federal Republic of Germany. Together with &lt;a href="https://cispa.de/en"&gt;CISPA Helmholtz Center for Information Security&lt;/a&gt; NetBird brings the security best practices and simplicity to private networking.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/700848/203091324-c6d311a0-22b5-4b05-a288-91cbc6cdcc46.png" alt="CISPA_Logo_BLACK_EN_RZ_RGB (1)" /&gt;&lt;/p&gt; 
&lt;h3&gt;Testimonials&lt;/h3&gt; 
&lt;p&gt;We use open-source technologies like &lt;a href="https://www.wireguard.com/"&gt;WireGuard®&lt;/a&gt;, &lt;a href="https://github.com/pion/ice"&gt;Pion ICE (WebRTC)&lt;/a&gt;, &lt;a href="https://github.com/coturn/coturn"&gt;Coturn&lt;/a&gt;, and &lt;a href="https://rosenpass.eu"&gt;Rosenpass&lt;/a&gt;. We very much appreciate the work these guys are doing and we'd greatly appreciate if you could support them in any way (e.g., by giving a star or a contribution).&lt;/p&gt; 
&lt;h3&gt;Legal&lt;/h3&gt; 
&lt;p&gt;This repository is licensed under BSD-3-Clause license that applies to all parts of the repository except for the directories management/, signal/ and relay/. Those directories are licensed under the GNU Affero General Public License version 3.0 (AGPLv3). See the respective LICENSE files inside each directory.&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;WireGuard&lt;/em&gt; and the &lt;em&gt;WireGuard&lt;/em&gt; logo are &lt;a href="https://www.wireguard.com/trademark-policy/"&gt;registered trademarks&lt;/a&gt; of Jason A. Donenfeld.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/terraform-provider-aws</title>
      <link>https://github.com/hashicorp/terraform-provider-aws</link>
      <description>&lt;p&gt;The AWS Provider enables Terraform to manage AWS resources.&lt;/p&gt;&lt;hr&gt;&lt;a href="https://terraform.io"&gt; 
 &lt;picture&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset=".github/terraform_logo_dark.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset=".github/terraform_logo_light.svg" /&gt; 
  &lt;img src="https://raw.githubusercontent.com/hashicorp/terraform-provider-aws/main/.github/terraform_logo_light.svg?sanitize=true" alt="Terraform logo" title="Terraform" align="right" height="50" /&gt; 
 &lt;/picture&gt; &lt;/a&gt; 
&lt;h1&gt;Terraform AWS Provider&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://discuss.hashicorp.com/c/terraform-providers/tf-aws/"&gt;&lt;img src="https://img.shields.io/badge/discuss-terraform--aws-623CE4.svg?style=flat" alt="Forums" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs"&gt;AWS Provider&lt;/a&gt; enables &lt;a href="https://terraform.io"&gt;Terraform&lt;/a&gt; to manage &lt;a href="https://aws.amazon.com"&gt;AWS&lt;/a&gt; resources.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://hashicorp.github.io/terraform-provider-aws/"&gt;Contributing guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/hashicorp/terraform-provider-aws/main/ROADMAP.md"&gt;Quarterly development roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://hashicorp.github.io/terraform-provider-aws/faq/"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.hashicorp.com/collections/terraform/aws-get-started"&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://discuss.hashicorp.com/c/terraform-providers/tf-aws/"&gt;discuss.hashicorp.com&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Please note:&lt;/strong&gt; We take Terraform's security and our users' trust very seriously. If you believe you have found a security issue in the Terraform AWS Provider, please responsibly disclose it by contacting us at &lt;a href="mailto:security@hashicorp.com"&gt;security@hashicorp.com&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>binwiederhier/ntfy</title>
      <link>https://github.com/binwiederhier/ntfy</link>
      <description>&lt;p&gt;Send push notifications to your phone or desktop using PUT/POST&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/web/public/static/images/ntfy.png" alt="ntfy" /&gt;&lt;/p&gt; 
&lt;h1&gt;ntfy.sh | Send push notifications to your phone or desktop via PUT/POST&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/binwiederhier/ntfy/releases/latest"&gt;&lt;img src="https://img.shields.io/github/release/binwiederhier/ntfy.svg?color=success&amp;amp;style=flat-square" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/heckel.io/ntfy/v2"&gt;&lt;img src="https://pkg.go.dev/badge/heckel.io/ntfy.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://github.com/binwiederhier/ntfy/actions"&gt;&lt;img src="https://github.com/binwiederhier/ntfy/workflows/test/badge.svg?sanitize=true" alt="Tests" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/binwiederhier/ntfy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/binwiederhier/ntfy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/binwiederhier/ntfy"&gt;&lt;img src="https://codecov.io/gh/binwiederhier/ntfy/branch/main/graph/badge.svg?token=A597KQ463G" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://discord.gg/cT7ECsZj9w"&gt;&lt;img src="https://img.shields.io/discord/874398661709295626?label=Discord" alt="Discord" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#ntfy:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/ntfy:matrix.org?label=Matrix" alt="Matrix" /&gt;&lt;/a&gt; &lt;a href="https://matrix.to/#/#ntfy-space:matrix.org"&gt;&lt;img src="https://img.shields.io/matrix/ntfy-space:matrix.org?label=Matrix+space" alt="Matrix space" /&gt;&lt;/a&gt; &lt;a href="https://ntfy.statuspage.io/"&gt;&lt;img src="https://healthchecks.io/badge/68b65976-b3b0-4102-aec9-980921/kcoEgrLY.svg?sanitize=true" alt="Healthcheck" /&gt;&lt;/a&gt; &lt;a href="https://gitpod.io/#https://github.com/binwiederhier/ntfy"&gt;&lt;img src="https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod" alt="Gitpod" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;ntfy&lt;/strong&gt; (pronounced "&lt;em&gt;notify&lt;/em&gt;") is a simple HTTP-based &lt;a href="https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern"&gt;pub-sub&lt;/a&gt; notification service. With ntfy, you can &lt;strong&gt;send notifications to your phone or desktop via scripts&lt;/strong&gt; from any computer, &lt;strong&gt;without having to sign up or pay any fees&lt;/strong&gt;. If you'd like to run your own instance of the service, you can easily do so since ntfy is open source.&lt;/p&gt; 
&lt;p&gt;You can access the free version of ntfy at &lt;strong&gt;&lt;a href="https://ntfy.sh"&gt;ntfy.sh&lt;/a&gt;&lt;/strong&gt;. There is also an &lt;a href="https://github.com/binwiederhier/ntfy-android"&gt;open-source Android app&lt;/a&gt; available on &lt;a href="https://play.google.com/store/apps/details?id=io.heckel.ntfy"&gt;Google Play&lt;/a&gt; or &lt;a href="https://f-droid.org/en/packages/io.heckel.ntfy/"&gt;F-Droid&lt;/a&gt;, as well as an &lt;a href="https://github.com/binwiederhier/ntfy-ios"&gt;open source iOS app&lt;/a&gt; available on the &lt;a href="https://apps.apple.com/us/app/ntfy/id1625396347"&gt;App Store&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-curl.png" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-web-detail.png" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-phone-main.jpg" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-phone-detail.jpg" height="180" /&gt; &lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/.github/images/screenshot-phone-notification.jpg" height="180" /&gt; &lt;/p&gt; 
&lt;h2&gt;&lt;a href="https://ntfy.sh/app"&gt;ntfy Pro&lt;/a&gt; 💸 🎉&lt;/h2&gt; 
&lt;p&gt;I now offer paid plans for &lt;a href="https://ntfy.sh/"&gt;ntfy.sh&lt;/a&gt; if you don't want to self-host, or you want to support the development of ntfy (→ &lt;a href="https://ntfy.sh/app"&gt;Purchase via web app&lt;/a&gt;). You can &lt;strong&gt;buy a plan for as low as $5/month&lt;/strong&gt;. You can also donate via &lt;a href="https://github.com/sponsors/binwiederhier"&gt;GitHub Sponsors&lt;/a&gt;, and &lt;a href="https://liberapay.com/ntfy"&gt;Liberapay&lt;/a&gt;. I would be very humbled by your sponsorship. ❤️&lt;/p&gt; 
&lt;h2&gt;&lt;strong&gt;&lt;a href="https://ntfy.sh/docs/"&gt;Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://ntfy.sh/docs/"&gt;Getting started&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/subscribe/phone/"&gt;Android/iOS&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/publish/"&gt;API&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/install/"&gt;Install / Self-hosting&lt;/a&gt; | &lt;a href="https://ntfy.sh/docs/develop/"&gt;Building&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Chat/forum&lt;/h2&gt; 
&lt;p&gt;There are a few ways to get in touch with me and/or the rest of the community. Feel free to use any of these methods. Whatever works best for you:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://discord.gg/cT7ECsZj9w"&gt;Discord server&lt;/a&gt; - direct chat with the community&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://matrix.to/#/#ntfy:matrix.org"&gt;Matrix room #ntfy&lt;/a&gt; (+ &lt;a href="https://matrix.to/#/#ntfy-space:matrix.org"&gt;Matrix space&lt;/a&gt;) - same chat, bridged from Discord&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/binwiederhier/ntfy/issues"&gt;GitHub issues&lt;/a&gt; - questions, features, bugs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Announcements/beta testers&lt;/h2&gt; 
&lt;p&gt;For announcements of new releases and cutting-edge beta versions, please subscribe to the &lt;a href="https://ntfy.sh/announcements"&gt;ntfy.sh/announcements&lt;/a&gt; topic. If you'd like to test the iOS app, join &lt;a href="https://testflight.apple.com/join/P1fFnAm9"&gt;TestFlight&lt;/a&gt;. For Android betas, join Discord/Matrix (I'll eventually make a testing channel in Google Play).&lt;/p&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p&gt;If you'd like to support the ntfy maintainers, please consider donating to &lt;a href="https://github.com/sponsors/binwiederhier"&gt;GitHub Sponsors&lt;/a&gt; or and &lt;a href="https://liberapay.com/ntfy"&gt;Liberapay&lt;/a&gt;. We would be humbled if you helped carry the server and developer account costs. Even small donations are very much appreciated.&lt;/p&gt; 
&lt;p&gt;Thank you to our commercial sponsors, who help keep the service running and the development going:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://m.do.co/c/442b929528db"&gt;&lt;img src="https://opensource.nyc3.cdn.digitaloceanspaces.com/attribution/assets/SVG/DO_Logo_horizontal_blue.svg?sanitize=true" width="201px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.magicbell.com/?utm_source=ntfy"&gt;&lt;img src="https://raw.githubusercontent.com/binwiederhier/ntfy/main/assets/sponsors/magicbell.png" width="180px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;And a big fat &lt;strong&gt;Thank You&lt;/strong&gt; to the individuals who have sponsored ntfy in the past, or are still sponsoring ntfy:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/neutralinsomniac"&gt;&lt;img src="https://github.com/neutralinsomniac.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aspyct"&gt;&lt;img src="https://github.com/aspyct.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nickexyz"&gt;&lt;img src="https://github.com/nickexyz.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/qcasey"&gt;&lt;img src="https://github.com/qcasey.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mckay115"&gt;&lt;img src="https://github.com/mckay115.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Salamafet"&gt;&lt;img src="https://github.com/Salamafet.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/codinghipster"&gt;&lt;img src="https://github.com/codinghipster.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/HinFort"&gt;&lt;img src="https://github.com/HinFort.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Lexevolution"&gt;&lt;img src="https://github.com/Lexevolution.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/johnnyip"&gt;&lt;img src="https://github.com/johnnyip.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JonDerThan"&gt;&lt;img src="https://github.com/JonDerThan.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/12nick12"&gt;&lt;img src="https://github.com/12nick12.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eanplatter"&gt;&lt;img src="https://github.com/eanplatter.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/fnoelscher"&gt;&lt;img src="https://github.com/fnoelscher.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bnorick"&gt;&lt;img src="https://github.com/bnorick.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/snh"&gt;&lt;img src="https://github.com/snh.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hen-x"&gt;&lt;img src="https://github.com/hen-x.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/JamieGoodson"&gt;&lt;img src="https://github.com/JamieGoodson.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cremesk"&gt;&lt;img src="https://github.com/cremesk.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dangowans"&gt;&lt;img src="https://github.com/dangowans.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mnault"&gt;&lt;img src="https://github.com/mnault.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nwithan8"&gt;&lt;img src="https://github.com/nwithan8.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/peterleiser"&gt;&lt;img src="https://github.com/peterleiser.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/portothree"&gt;&lt;img src="https://github.com/portothree.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/finngreig"&gt;&lt;img src="https://github.com/finngreig.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/skrollme"&gt;&lt;img src="https://github.com/skrollme.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gergepalfi"&gt;&lt;img src="https://github.com/gergepalfi.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tonyakwei"&gt;&lt;img src="https://github.com/tonyakwei.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/crosbyh"&gt;&lt;img src="https://github.com/crosbyh.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mdlnr"&gt;&lt;img src="https://github.com/mdlnr.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/p-samuel"&gt;&lt;img src="https://github.com/p-samuel.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zugaldia"&gt;&lt;img src="https://github.com/zugaldia.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/NathanSweet"&gt;&lt;img src="https://github.com/NathanSweet.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/msdeibel"&gt;&lt;img src="https://github.com/msdeibel.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ksurl"&gt;&lt;img src="https://github.com/ksurl.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CodingTimeDEV"&gt;&lt;img src="https://github.com/CodingTimeDEV.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Terrormixer3000"&gt;&lt;img src="https://github.com/Terrormixer3000.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/voroskoi"&gt;&lt;img src="https://github.com/voroskoi.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Nickwasused"&gt;&lt;img src="https://github.com/Nickwasused.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bahur142"&gt;&lt;img src="https://github.com/bahur142.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vinhdizzo"&gt;&lt;img src="https://github.com/vinhdizzo.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Ge0rg3"&gt;&lt;img src="https://github.com/Ge0rg3.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/biopsin"&gt;&lt;img src="https://github.com/biopsin.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/thebino"&gt;&lt;img src="https://github.com/thebino.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sky4055"&gt;&lt;img src="https://github.com/sky4055.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/julianlam"&gt;&lt;img src="https://github.com/julianlam.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/andreapx"&gt;&lt;img src="https://github.com/andreapx.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/billycao"&gt;&lt;img src="https://github.com/billycao.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zoic21"&gt;&lt;img src="https://github.com/zoic21.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/IanKulin"&gt;&lt;img src="https://github.com/IanKulin.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Joachim256"&gt;&lt;img src="https://github.com/Joachim256.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/overtone1000"&gt;&lt;img src="https://github.com/overtone1000.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/oakd"&gt;&lt;img src="https://github.com/oakd.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/KucharczykL"&gt;&lt;img src="https://github.com/KucharczykL.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hansbickhofe"&gt;&lt;img src="https://github.com/hansbickhofe.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/caseodilla"&gt;&lt;img src="https://github.com/caseodilla.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/0xAF"&gt;&lt;img src="https://github.com/0xAF.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/soonoo"&gt;&lt;img src="https://github.com/soonoo.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/nichu42"&gt;&lt;img src="https://github.com/nichu42.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/samliebow"&gt;&lt;img src="https://github.com/samliebow.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/johman10"&gt;&lt;img src="https://github.com/johman10.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/R-Gld"&gt;&lt;img src="https://github.com/R-Gld.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FingerlessGlov3s"&gt;&lt;img src="https://github.com/FingerlessGlov3s.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Twisterado"&gt;&lt;img src="https://github.com/Twisterado.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ScrumpyJack"&gt;&lt;img src="https://github.com/ScrumpyJack.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/andrejarrell"&gt;&lt;img src="https://github.com/andrejarrell.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/oaustegard"&gt;&lt;img src="https://github.com/oaustegard.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CreativeWarlock"&gt;&lt;img src="https://github.com/CreativeWarlock.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/darkdragon-001"&gt;&lt;img src="https://github.com/darkdragon-001.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jonathan-kosgei"&gt;&lt;img src="https://github.com/jonathan-kosgei.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/KevinWang15"&gt;&lt;img src="https://github.com/KevinWang15.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/darkmattercoder"&gt;&lt;img src="https://github.com/darkmattercoder.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bmcgonag"&gt;&lt;img src="https://github.com/bmcgonag.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/skorokithakis"&gt;&lt;img src="https://github.com/skorokithakis.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/eenturk"&gt;&lt;img src="https://github.com/eenturk.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/spirossi"&gt;&lt;img src="https://github.com/spirossi.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/teomarcdhio"&gt;&lt;img src="https://github.com/teomarcdhio.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/MarcMichalsky"&gt;&lt;img src="https://github.com/MarcMichalsky.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/LuckVintage"&gt;&lt;img src="https://github.com/LuckVintage.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/spartan"&gt;&lt;img src="https://github.com/spartan.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/alexandzors"&gt;&lt;img src="https://github.com/alexandzors.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dkramer95"&gt;&lt;img src="https://github.com/dkramer95.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/YezGotIt"&gt;&lt;img src="https://github.com/YezGotIt.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/thomasskou"&gt;&lt;img src="https://github.com/thomasskou.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/surfernv"&gt;&lt;img src="https://github.com/surfernv.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/richardleach"&gt;&lt;img src="https://github.com/richardleach.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bear"&gt;&lt;img src="https://github.com/bear.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cminter"&gt;&lt;img src="https://github.com/cminter.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/bahur142"&gt;&lt;img src="https://github.com/bahur142.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/pgwiebes"&gt;&lt;img src="https://github.com/pgwiebes.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ralhei"&gt;&lt;img src="https://github.com/ralhei.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TechMDW"&gt;&lt;img src="https://github.com/TechMDW.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ubipo"&gt;&lt;img src="https://github.com/ubipo.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tka85"&gt;&lt;img src="https://github.com/tka85.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/beekeeb"&gt;&lt;img src="https://github.com/beekeeb.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Emiliaaah"&gt;&lt;img src="https://github.com/Emiliaaah.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/zark0s"&gt;&lt;img src="https://github.com/zark0s.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tomershvueli"&gt;&lt;img src="https://github.com/tomershvueli.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/CataIana"&gt;&lt;img src="https://github.com/CataIana.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/ajay-actuary"&gt;&lt;img src="https://github.com/ajay-actuary.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mursec"&gt;&lt;img src="https://github.com/mursec.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/FrameXX"&gt;&lt;img src="https://github.com/FrameXX.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vovayartsev"&gt;&lt;img src="https://github.com/vovayartsev.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dwain-lab"&gt;&lt;img src="https://github.com/dwain-lab.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/brookmg"&gt;&lt;img src="https://github.com/brookmg.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/siebej"&gt;&lt;img src="https://github.com/siebej.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rxsantos"&gt;&lt;img src="https://github.com/rxsantos.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/hermannx5"&gt;&lt;img src="https://github.com/hermannx5.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rwxd"&gt;&lt;img src="https://github.com/rwxd.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Integral-Tech"&gt;&lt;img src="https://github.com/Integral-Tech.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TheTomik1"&gt;&lt;img src="https://github.com/TheTomik1.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dav23r"&gt;&lt;img src="https://github.com/dav23r.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/stannynuytkens"&gt;&lt;img src="https://github.com/stannynuytkens.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/danbartram"&gt;&lt;img src="https://github.com/danbartram.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/arthurgleckler"&gt;&lt;img src="https://github.com/arthurgleckler.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/tomroth04"&gt;&lt;img src="https://github.com/tomroth04.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Circenn5130"&gt;&lt;img src="https://github.com/Circenn5130.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jceloria"&gt;&lt;img src="https://github.com/jceloria.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/afunworm"&gt;&lt;img src="https://github.com/afunworm.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/PTR-inc"&gt;&lt;img src="https://github.com/PTR-inc.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/spudooli"&gt;&lt;img src="https://github.com/spudooli.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/IMarkoMC"&gt;&lt;img src="https://github.com/IMarkoMC.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/rubund"&gt;&lt;img src="https://github.com/rubund.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Riolku"&gt;&lt;img src="https://github.com/Riolku.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/arnbrhm"&gt;&lt;img src="https://github.com/arnbrhm.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/herzkerl"&gt;&lt;img src="https://github.com/herzkerl.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/0x45796164"&gt;&lt;img src="https://github.com/0x45796164.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/madchr1st"&gt;&lt;img src="https://github.com/madchr1st.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/avalentic"&gt;&lt;img src="https://github.com/avalentic.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/TheCraiggers"&gt;&lt;img src="https://github.com/TheCraiggers.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/sheetd"&gt;&lt;img src="https://github.com/sheetd.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dlt-green"&gt;&lt;img src="https://github.com/dlt-green.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/suhlig"&gt;&lt;img src="https://github.com/suhlig.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/Proximus888"&gt;&lt;img src="https://github.com/Proximus888.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/wielandp"&gt;&lt;img src="https://github.com/wielandp.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/chxseh"&gt;&lt;img src="https://github.com/chxseh.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/user8446"&gt;&lt;img src="https://github.com/user8446.png" width="40px" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cdf-eagles"&gt;&lt;img src="https://github.com/cdf-eagles.png" width="40px" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;I welcome any contributions. Just create a PR or an issue. For larger features/ideas, please reach out on Discord/Matrix first to see if I'd accept them. To contribute code, check out the &lt;a href="https://ntfy.sh/docs/develop/"&gt;build instructions&lt;/a&gt; for the server and the Android app. Or, if you'd like to help translate 🇩🇪 🇺🇸 🇧🇬, you can start immediately in &lt;a href="https://hosted.weblate.org/projects/ntfy/"&gt;Hosted Weblate&lt;/a&gt;.&lt;/p&gt; 
&lt;a href="https://hosted.weblate.org/engage/ntfy/"&gt; &lt;img src="https://hosted.weblate.org/widgets/ntfy/-/multi-blue.svg?sanitize=true" alt="Translation status" /&gt; &lt;/a&gt; 
&lt;h2&gt;Code of Conduct&lt;/h2&gt; 
&lt;p&gt;We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;We pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Please be sure to read the complete &lt;a href="https://raw.githubusercontent.com/binwiederhier/ntfy/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Made with ❤️ by &lt;a href="https://heckel.io"&gt;Philipp C. Heckel&lt;/a&gt;.&lt;br /&gt; The project is dual licensed under the &lt;a href="https://raw.githubusercontent.com/binwiederhier/ntfy/main/LICENSE"&gt;Apache License 2.0&lt;/a&gt; and the &lt;a href="https://raw.githubusercontent.com/binwiederhier/ntfy/main/LICENSE.GPLv2"&gt;GPLv2 License&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Third-party libraries and resources:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/urfave/cli"&gt;github.com/urfave/cli&lt;/a&gt; (MIT) is used to drive the CLI&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mixkit.co/free-sound-effects/notification/"&gt;Mixkit sounds&lt;/a&gt; (Mixkit Free License) are used as notification sounds&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://notificationsounds.com"&gt;Sounds from notificationsounds.com&lt;/a&gt; (Creative Commons Attribution) are used as notification sounds&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://fonts.google.com/specimen/Roboto"&gt;Roboto Font&lt;/a&gt; (Apache 2.0) is used as a font in everything web&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://reactjs.org/"&gt;React&lt;/a&gt; (MIT) is used for the web app&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mui.com/"&gt;Material UI components&lt;/a&gt; (MIT) are used in the web app&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mui/material-ui/tree/master/docs/data/material/getting-started/templates/dashboard"&gt;MUI dashboard template&lt;/a&gt; (MIT) was used as a basis for the web app&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dexie/Dexie.js"&gt;Dexie.js&lt;/a&gt; (Apache 2.0) is used for web app persistence in IndexedDB&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goreleaser.com/"&gt;GoReleaser&lt;/a&gt; (MIT) is used to create releases&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emersion/go-smtp"&gt;go-smtp&lt;/a&gt; (MIT) is used to receive e-mails&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stretchr/testify"&gt;stretchr/testify&lt;/a&gt; (MIT) is used for unit and integration tests&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mattn/go-sqlite3"&gt;github.com/mattn/go-sqlite3&lt;/a&gt; (MIT) is used to provide the persistent message cache&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/firebase/firebase-admin-go"&gt;Firebase Admin SDK&lt;/a&gt; (Apache 2.0) is used to send FCM messages&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/github/gemoji"&gt;github/gemoji&lt;/a&gt; (MIT) is used for emoji support (specifically the &lt;a href="https://raw.githubusercontent.com/github/gemoji/master/db/emoji.json"&gt;emoji.json&lt;/a&gt; file)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://yossiabramov.com/blog/vanilla-js-lightbox"&gt;Lightbox with vanilla JS&lt;/a&gt; as a lightbox on the landing page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gist.github.com/CJEnright/bc2d8b8dc0c1389a9feeddb110f822d7"&gt;HTTP middleware for gzip compression&lt;/a&gt; (MIT) is used for serving static files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bryanwoods/autolink-js"&gt;Regex for auto-linking&lt;/a&gt; (MIT) is used to highlight links (the library is not used)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.arp242.net/static-go.html"&gt;Statically linking go-sqlite3&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://facelessuser.github.io/pymdown-extensions/extensions/tabbed/#linked-tabs"&gt;Linked tabs in mkdocs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SherClockHolmes/webpush-go"&gt;webpush-go&lt;/a&gt; (MIT) is used to send web push notifications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Masterminds/sprig"&gt;Sprig&lt;/a&gt; (MIT) is used to add template parsing functions&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>tulir/whatsmeow</title>
      <link>https://github.com/tulir/whatsmeow</link>
      <description>&lt;p&gt;Go library for the WhatsApp web multidevice API&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;whatsmeow&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/go.mau.fi/whatsmeow"&gt;&lt;img src="https://pkg.go.dev/badge/go.mau.fi/whatsmeow.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;whatsmeow is a Go library for the WhatsApp web multidevice API.&lt;/p&gt; 
&lt;h2&gt;Discussion&lt;/h2&gt; 
&lt;p&gt;Matrix room: &lt;a href="https://matrix.to/#/#whatsmeow:maunium.net"&gt;#whatsmeow:maunium.net&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;For questions about the WhatsApp protocol (like how to send a specific type of message), you can also use the &lt;a href="https://github.com/tulir/whatsmeow/discussions/categories/whatsapp-protocol-q-a"&gt;WhatsApp protocol Q&amp;amp;A&lt;/a&gt; section on GitHub discussions.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://pkg.go.dev/go.mau.fi/whatsmeow"&gt;godoc&lt;/a&gt; includes docs for all methods and event types. There's also a &lt;a href="https://pkg.go.dev/go.mau.fi/whatsmeow#example-package"&gt;simple example&lt;/a&gt; at the top.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;Most core features are already present:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sending messages to private chats and groups (both text and media)&lt;/li&gt; 
 &lt;li&gt;Receiving all messages&lt;/li&gt; 
 &lt;li&gt;Managing groups and receiving group change events&lt;/li&gt; 
 &lt;li&gt;Joining via invite messages, using and creating invite links&lt;/li&gt; 
 &lt;li&gt;Sending and receiving typing notifications&lt;/li&gt; 
 &lt;li&gt;Sending and receiving delivery and read receipts&lt;/li&gt; 
 &lt;li&gt;Reading and writing app state (contact list, chat pin/mute status, etc)&lt;/li&gt; 
 &lt;li&gt;Sending and handling retry receipts if message decryption fails&lt;/li&gt; 
 &lt;li&gt;Sending status messages (experimental, may not work for large contact lists)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Things that are not yet implemented:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Sending broadcast list messages (this is not supported on WhatsApp web either)&lt;/li&gt; 
 &lt;li&gt;Calls&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>go-gorm/gorm</title>
      <link>https://github.com/go-gorm/gorm</link>
      <description>&lt;p&gt;The fantastic ORM library for Golang, aims to be developer friendly&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;GORM&lt;/h1&gt; 
&lt;p&gt;The fantastic ORM library for Golang, aims to be developer friendly.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/go-gorm/gorm"&gt;&lt;img src="https://goreportcard.com/badge/github.com/go-gorm/gorm" alt="go report card" title="go report card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/go-gorm/gorm/actions"&gt;&lt;img src="https://github.com/go-gorm/gorm/workflows/tests/badge.svg?branch=master" alt="test status" title="test status" /&gt;&lt;/a&gt; &lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-brightgreen.svg?sanitize=true" alt="MIT license" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/gorm.io/gorm?tab=doc"&gt;&lt;img src="https://img.shields.io/badge/go.dev-reference-blue?logo=go&amp;amp;logoColor=white" alt="Go.Dev reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Overview&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Full-Featured ORM&lt;/li&gt; 
 &lt;li&gt;Associations (Has One, Has Many, Belongs To, Many To Many, Polymorphism, Single-table inheritance)&lt;/li&gt; 
 &lt;li&gt;Hooks (Before/After Create/Save/Update/Delete/Find)&lt;/li&gt; 
 &lt;li&gt;Eager loading with &lt;code&gt;Preload&lt;/code&gt;, &lt;code&gt;Joins&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Transactions, Nested Transactions, Save Point, RollbackTo to Saved Point&lt;/li&gt; 
 &lt;li&gt;Context, Prepared Statement Mode, DryRun Mode&lt;/li&gt; 
 &lt;li&gt;Batch Insert, FindInBatches, Find To Map&lt;/li&gt; 
 &lt;li&gt;SQL Builder, Upsert, Locking, Optimizer/Index/Comment Hints, NamedArg, Search/Update/Create with SQL Expr&lt;/li&gt; 
 &lt;li&gt;Composite Primary Key&lt;/li&gt; 
 &lt;li&gt;Auto Migrations&lt;/li&gt; 
 &lt;li&gt;Logger&lt;/li&gt; 
 &lt;li&gt;Extendable, flexible plugin API: Database Resolver (Multiple Databases, Read/Write Splitting) / Prometheus…&lt;/li&gt; 
 &lt;li&gt;Every feature comes with tests&lt;/li&gt; 
 &lt;li&gt;Developer Friendly&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;GORM Guides &lt;a href="https://gorm.io"&gt;https://gorm.io&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Gen Guides &lt;a href="https://gorm.io/gen/index.html"&gt;https://gorm.io/gen/index.html&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://gorm.io/contribute.html"&gt;You can help to deliver a better GORM, check out things you can do&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/go-gorm/gorm/graphs/contributors"&gt;Thank you&lt;/a&gt; for contributing to the GORM framework!&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;© Jinzhu, 2013~time.Now&lt;/p&gt; 
&lt;p&gt;Released under the &lt;a href="https://github.com/go-gorm/gorm/raw/master/LICENSE"&gt;MIT License&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cert-manager/cert-manager</title>
      <link>https://github.com/cert-manager/cert-manager</link>
      <description>&lt;p&gt;Automatically provision and manage TLS certificates in Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/cert-manager/cert-manager/master/logo/logo-small.png" height="256" width="256" alt="cert-manager project logo" /&gt; &lt;/p&gt; 
&lt;!-- note that the cert-manager logo in this repo is referred to in other README files in the cert-manager org
     as well as in Helm charts, etc.
     if you change its location or name, you'll need to update several other repos too! --&gt; 
&lt;p align="center"&gt;&lt;a href="https://prow.infra.cert-manager.io/?job=ci-cert-manager-master-make-test"&gt; 
  &lt;!-- prow build badge, godoc, and go report card--&gt; &lt;img alt="Build Status" src="https://prow.infra.cert-manager.io/badge.svg?jobs=ci-cert-manager-master-make-test" /&gt; &lt;/a&gt; &lt;a href="https://godoc.org/github.com/cert-manager/cert-manager"&gt;&lt;img src="https://godoc.org/github.com/cert-manager/cert-manager?status.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/cert-manager/cert-manager"&gt;&lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/cert-manager/cert-manager" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://artifacthub.io/packages/search?repo=cert-manager"&gt;&lt;img alt="Artifact Hub" src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cert-manager" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/cert-manager/cert-manager"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/cert-manager/cert-manager/badge" alt="Scorecard score" /&gt;&lt;/a&gt; &lt;a href="https://clomonitor.io/projects/cncf/cert-manager"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cert-manager/badge" alt="CLOMonitor" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8079"&gt;&lt;img src="https://www.bestpractices.dev/projects/8079/badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;cert-manager&lt;/h1&gt; 
&lt;p&gt;cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.&lt;/p&gt; 
&lt;p&gt;It supports issuing certificates from a variety of sources, including Let's Encrypt (ACME), HashiCorp Vault, and Venafi TPP / TLS Protect Cloud, as well as local in-cluster issuance.&lt;/p&gt; 
&lt;p&gt;cert-manager also ensures certificates remain valid and up to date, attempting to renew certificates at an appropriate time before expiry to reduce the risk of outages and remove toil.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cert-manager.io/images/high-level-overview.svg?sanitize=true" alt="cert-manager high level overview diagram" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation for cert-manager can be found at &lt;a href="https://cert-manager.io/docs/"&gt;cert-manager.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For the common use-case of automatically issuing TLS certificates for Ingress resources, see the &lt;a href="https://cert-manager.io/docs/tutorials/acme/nginx-ingress/"&gt;cert-manager nginx-ingress quick start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a more comprehensive guide to issuing your first certificate, see our &lt;a href="https://cert-manager.io/docs/getting-started/"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://cert-manager.io/docs/installation/"&gt;Installation&lt;/a&gt; is documented on the website, with a variety of supported methods.&lt;/p&gt; 
&lt;h2&gt;Developing cert-manager&lt;/h2&gt; 
&lt;p&gt;We actively welcome contributions and we support both Linux and macOS environments for development.&lt;/p&gt; 
&lt;p&gt;Different platforms have different requirements; we document everything on our &lt;a href="https://cert-manager.io/docs/contributing/building/"&gt;Building cert-manager&lt;/a&gt; website page.&lt;/p&gt; 
&lt;p&gt;Note in particular that macOS has several extra requirements, to ensure that modern tools are installed and available. Read the page before getting started!&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues whilst using cert-manager, we have a number of ways to get help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://cert-manager.io/docs/faq/troubleshooting/"&gt;troubleshooting guide&lt;/a&gt; on our website.&lt;/li&gt; 
 &lt;li&gt;Our official &lt;a href="https://cert-manager.io/docs/contributing/#slack"&gt;Kubernetes Slack channel&lt;/a&gt; - the quickest way to ask! (&lt;a href="https://kubernetes.slack.com/messages/cert-manager"&gt;#cert-manager&lt;/a&gt; and &lt;a href="https://kubernetes.slack.com/messages/cert-manager-dev"&gt;#cert-manager-dev&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;Searching for an existing issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you believe you've found a bug and cannot find an existing issue, feel free to &lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;open a new issue&lt;/a&gt;! Be sure to include as much information as you can about your environment.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://groups.google.com/forum/#!forum/cert-manager-dev"&gt;&lt;code&gt;cert-manager-dev&lt;/code&gt; Google Group&lt;/a&gt; is used for project wide announcements and development coordination. Anybody with a Google account can join the group by visiting the group and clicking "Join Group".&lt;/p&gt; 
&lt;h3&gt;Meetings&lt;/h3&gt; 
&lt;p&gt;We have several public meetings which any member of our Google Group is more than welcome to join!&lt;/p&gt; 
&lt;p&gt;Check out the details on &lt;a href="https://cert-manager.io/docs/contributing/#meetings"&gt;our website&lt;/a&gt;. Feel free to drop in and ask questions, chat with us or just to say hi!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome pull requests with open arms! There's a lot of work to do here, and we're especially concerned with ensuring the longevity and reliability of the project. The &lt;a href="https://cert-manager.io/docs/contributing/"&gt;contributing guide&lt;/a&gt; will help you get started.&lt;/p&gt; 
&lt;h2&gt;Coding Conventions&lt;/h2&gt; 
&lt;p&gt;Code style guidelines are documented on the &lt;a href="https://cert-manager.io/docs/contributing/coding-conventions/"&gt;coding conventions&lt;/a&gt; page of the cert-manager website. Please try to follow those guidelines if you're submitting a pull request for cert-manager.&lt;/p&gt; 
&lt;h2&gt;Importing cert-manager as a Module&lt;/h2&gt; 
&lt;p&gt;⚠️ Please note that cert-manager &lt;strong&gt;does not&lt;/strong&gt; currently provide a Go module compatibility guarantee. That means that &lt;strong&gt;most code under &lt;code&gt;pkg/&lt;/code&gt; is subject to change in a breaking way&lt;/strong&gt;, even between minor or patch releases and even if the code is currently publicly exported.&lt;/p&gt; 
&lt;p&gt;The lack of a Go module compatibility guarantee does not affect API version guarantees under the &lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-policy/"&gt;Kubernetes Deprecation Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more details see &lt;a href="https://cert-manager.io/docs/contributing/importing/"&gt;Importing cert-manager in Go&lt;/a&gt; on the cert-manager website.&lt;/p&gt; 
&lt;p&gt;The import path for cert-manager versions 1.8 and later is &lt;code&gt;github.com/cert-manager/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For all versions of cert-manager before 1.8, including minor and patch releases, the import path is &lt;code&gt;github.com/jetstack/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Reporting&lt;/h2&gt; 
&lt;p&gt;Security is the number one priority for cert-manager. If you think you've found a security vulnerability, we'd love to hear from you.&lt;/p&gt; 
&lt;p&gt;Follow the instructions in &lt;a href="https://raw.githubusercontent.com/cert-manager/cert-manager/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt; to make a report.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/cert-manager/cert-manager/releases"&gt;Every release&lt;/a&gt; on GitHub has a changelog, and we also publish release notes on &lt;a href="https://cert-manager.io/docs/release-notes/"&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;cert-manager is loosely based upon the work of &lt;a href="https://github.com/jetstack/kube-lego"&gt;kube-lego&lt;/a&gt; and has borrowed some wisdom from other similar projects such as &lt;a href="https://github.com/PalmStoneGames/kube-cert-manager"&gt;kube-cert-manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;Logo design by &lt;a href="https://zoepatersonmedia.com"&gt;Zoe Paterson&lt;/a&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>grafana/k6</title>
      <link>https://github.com/grafana/k6</link>
      <description>&lt;p&gt;A modern load testing tool, using Go and JavaScript&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://grafana.com/oss/k6/"&gt; 
  &lt;picture&gt; 
   &lt;img src="https://raw.githubusercontent.com/grafana/k6/master/assets/logo.svg?sanitize=true" alt="Grafana k6" width="210" height="210" /&gt;
   &lt;br /&gt; 
  &lt;/picture&gt; &lt;br /&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="assets/grafana-labs-dark-theme.svg" /&gt; 
   &lt;source media="(prefers-color-scheme: light)" srcset="assets/grafana-labs.svg" /&gt; 
   &lt;img src="https://raw.githubusercontent.com/grafana/k6/master/assets/grafana-labs.svg?sanitize=true" alt="Grafana Labs" width="210" /&gt; 
  &lt;/picture&gt; &lt;br /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;h3 align="center"&gt;Like unit testing, for performance&lt;/h3&gt; 
&lt;p align="center"&gt;Modern load testing for developers and testers in the DevOps era.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/grafana/k6/releases"&gt;&lt;img src="https://img.shields.io/github/release/grafana/k6.svg?sanitize=true" alt="Github release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/grafana/k6/actions/workflows/all.yml"&gt;&lt;img src="https://github.com/grafana/k6/actions/workflows/build.yml/badge.svg?sanitize=true" alt="Build status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/grafana/k6"&gt;&lt;img src="https://goreportcard.com/badge/github.com/grafana/k6" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/grafana/k6"&gt;&lt;img src="https://img.shields.io/codecov/c/github/grafana/k6/master.svg?sanitize=true" alt="Codecov branch" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://twitter.com/k6_io"&gt;&lt;img src="https://img.shields.io/badge/twitter-@k6_io-55acee.svg?sanitize=true" alt="@k6_io on Twitter" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/grafana/k6/releases"&gt;Download&lt;/a&gt; · &lt;a href="https://grafana.com/docs/k6/latest/"&gt;Documentation&lt;/a&gt; · &lt;a href="https://community.grafana.com/c/grafana-k6/70"&gt;Community Forum&lt;/a&gt; · &lt;a href="https://github.com/orgs/grafana/projects/443/views/1"&gt;Public Roadmap&lt;/a&gt; &lt;/p&gt; 
&lt;br /&gt; 
&lt;img src="https://raw.githubusercontent.com/grafana/k6/master/assets/github-hr.png" alt="---" /&gt; 
&lt;br /&gt; 
&lt;p&gt;&lt;strong&gt;k6&lt;/strong&gt; is a modern load-testing tool, built on &lt;a href="https://k6.io/about"&gt;our years of experience&lt;/a&gt; in the performance and testing industries. It's built to be powerful, extensible, and full-featured. The key design goal is to provide &lt;strong&gt;the best developer experience&lt;/strong&gt;.&lt;/p&gt; 
&lt;p&gt;Its core features are:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable load generation.&lt;/strong&gt; Even lower-end machines can simulate lots of traffic.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Tests as code.&lt;/strong&gt; Reuse scripts, modularize logic, version control, and integrate tests with your CI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;A full-featured API.&lt;/strong&gt; The scripting API is packed with features that help you simulate real application traffic.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;An embedded JavaScript engine.&lt;/strong&gt; The performance of Go, the scripting familiarity of JavaScript.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Protocol support&lt;/strong&gt;. HTTP, WebSockets, gRPC, Browser, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Large extension ecosystem.&lt;/strong&gt; You can extend k6 to support your needs. And many people have already shared their extensions with the community!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Flexible metrics storage and visualization&lt;/strong&gt;. Summary statistics or granular metrics, exported to the service of your choice.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Native integration with Grafana cloud&lt;/strong&gt;. &lt;a href="https://grafana.com/products/cloud/k6/"&gt;SaaS solution&lt;/a&gt; for test execution, metrics correlation, data analysis, and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is what load testing looks like in the 21st century.&lt;/p&gt; 
&lt;h2&gt;Example script&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;import http from "k6/http";
import { check, sleep } from "k6";

// Test configuration
export const options = {
  thresholds: {
    // Assert that 99% of requests finish within 3000ms.
    http_req_duration: ["p(99) &amp;lt; 3000"],
  },
  // Ramp the number of virtual users up and down
  stages: [
    { duration: "30s", target: 15 },
    { duration: "1m", target: 15 },
    { duration: "20s", target: 0 },
  ],
};

// Simulated user behavior
export default function () {
  let res = http.get("https://quickpizza.grafana.com");
  // Validate response status
  check(res, { "status was 200": (r) =&amp;gt; r.status == 200 });
  sleep(1);
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can run scripts like this on the CLI, or in your CI, or across a Kubernetes cluster.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Don't want to write code ?&lt;/p&gt; 
 &lt;p&gt;We got you! Meet &lt;a href="https://github.com/grafana/k6-studio"&gt;k6 Studio&lt;/a&gt;, a desktop application made to help you generate k6 scripts without having to touch code!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;The docs cover all aspects of using k6. Some highlights include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/"&gt;Get Started&lt;/a&gt;. Install, run a test, inspect results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/using-k6/http-requests/"&gt;HTTP requests&lt;/a&gt;. Have your virtual users use HTTP methods. Or, check the other &lt;a href="https://grafana.com/docs/k6/latest/using-k6/protocols/"&gt;Protocols&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/using-k6/thresholds/"&gt;Thresholds&lt;/a&gt;. Set goals for your test, and codify your SLOs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/using-k6/k6-options/"&gt;Options&lt;/a&gt;. Configure your load, duration, TLS certificates, and much, much more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/using-k6/scenarios/"&gt;Scenarios&lt;/a&gt;. Choose how to model your workload: open models, closed models, constant RPS, fixed iterations, and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/results-output/"&gt;Results output&lt;/a&gt;. Study, filter, and export your test results.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/javascript-api/"&gt;JavaScript API&lt;/a&gt;. Reference and examples of all k6 modules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://grafana.com/docs/k6/latest/extensions/"&gt;Extensions&lt;/a&gt;. Extend k6 for new protocols and use cases.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These links barely scratch the surface! If you're looking for conceptual information, you can read about &lt;a href="https://grafana.com/docs/k6/latest/testing-guides/test-types/"&gt;Test types&lt;/a&gt;, &lt;a href="https://grafana.com/docs/k6/latest/testing-guides/"&gt;Test strategies&lt;/a&gt;, or one of the many informative &lt;a href="https://k6.io/blog"&gt;Blog posts&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;Our team is dedicated to continuously improving and providing the best user experience possible. The &lt;a href="https://github.com/orgs/grafana/projects/443/views/1"&gt;public roadmap&lt;/a&gt; covers user-oriented features, UX improvements and JavaScript support that our team will focus on. Remember that timeframes and priorities may shift, but we believe it's important to share our vision.&lt;/p&gt; 
&lt;p&gt;We hope it provides a clear overview of our plans for future development. We welcome feedback, corrections, and suggestions via GitHub to make it more comprehensive, accessible, and valuable for the community.&lt;/p&gt; 
&lt;p&gt;It's worth mentioning that we consider &lt;a href="https://github.com/grafana/k6/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc"&gt;upvotes (thumbs-up)&lt;/a&gt; to be one of the essential metrics for determining community needs. If you want to show us the importance of a feature, please give it a thumbs-up.&lt;/p&gt; 
&lt;h2&gt;Contribute&lt;/h2&gt; 
&lt;p&gt;If you want to contribute or help with the development of k6, start by reading &lt;a href="https://raw.githubusercontent.com/grafana/k6/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt;. Before you start coding, it might be a good idea to first discuss your plans and implementation details with the k6 maintainers—especially when it comes to big changes and features. You can do this in the &lt;a href="https://github.com/grafana/k6/issues"&gt;GitHub issue&lt;/a&gt; for the problem you're solving (create one if it doesn't exist).&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To disclose security issues, refer to &lt;a href="https://raw.githubusercontent.com/grafana/k6/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;To get help, report bugs, suggest features, and discuss k6 with others, refer to &lt;a href="https://raw.githubusercontent.com/grafana/k6/master/SUPPORT.md"&gt;SUPPORT.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;k6 is distributed under the &lt;a href="https://github.com/grafana/k6/raw/master/LICENSE.md"&gt;AGPL-3.0 license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cloudnative-pg/cloudnative-pg</title>
      <link>https://github.com/cloudnative-pg/cloudnative-pg</link>
      <description>&lt;p&gt;CloudNativePG is a comprehensive platform designed to seamlessly manage PostgreSQL databases within Kubernetes environments, covering the entire operational lifecycle from initial deployment to ongoing maintenance&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://landscape.cncf.io/?item=app-definition-and-development--database--cloudnativepg"&gt;&lt;img src="https://img.shields.io/badge/CNCF%20Landscape-5699C6" alt="CNCF Landscape" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudnative-pg/cloudnative-pg/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/cloudnative-pg/cloudnative-pg.svg?sanitize=true" alt="Latest Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/cloudnative-pg/cloudnative-pg?tab=Apache-2.0-1-ov-file#readme"&gt;&lt;img src="https://img.shields.io/github/license/cloudnative-pg/cloudnative-pg" alt="GitHub License" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/9933"&gt;&lt;img src="https://www.bestpractices.dev/projects/9933/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/cloudnative-pg/cloudnative-pg"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/cloudnative-pg/cloudnative-pg/badge" alt="OpenSSF Scorecard Badge" /&gt;&lt;/a&gt; &lt;a href="https://cloudnative-pg.io/documentation/current/"&gt;&lt;img src="https://img.shields.io/badge/Documentation-white?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAGN0lEQVR4nJRXXWwcVxU%2B8%2F%2BzP%2BPZtR2v7dqy07jUJUALNaiK6lZyUVVKWgGKaIv8QCMekBAVQlQICcEzVZFQVYFKQhASEBHlISJPCRJEshTFChgrIYHEiYMh69jetffHM7Mzc%2B9Bs7vjnTs7yZpZWbt37s%2F5zne%2Bc861CD0eXRkbHc3NfjeffvxNAGEAgULD2756v35%2B3qe1Nc4fnQVEXlA2LnOcXlCF8S%2B6vvVgq%2FL3M65X3e51PvfQCU4WJgZe%2B8GQ8fS7AKgjBB8KEHwjDXZSjkf0CREAaXM2eI9c65siqWxWl360Xl74ANHz%2Fy8AitxnTBfmz%2BhyYS4wGhwObQCIHSA0AigOMBzvOsXzd4pnjyL6NMmWEH8hi2b28Og3%2FqRJA0ewfQy0v1vGO2NovwPo%2FEU%2FwVgSU1PI%2BSu79v3lJAB8HM%2BTI%2FO%2FUUXzM4xHIe0xI4DdRqOAwnF%2F38ePPyzaDIDh%2FMxcWh462m08aojuGY97C0nrAEHg9BlF0fmeAPr0J15vbaKsp0BZQzEDEAlP9B209UIIVXUta%2FQEQHwxgxFjTc%2BRskAwrgVWmHtg22vMPJwLDqGUNJIAMHVAkGu3WdpZz6NAkgSXpINSycluV28er1a3rJ4M3F2%2F9AtCvXKycRrTQttrjINjxxxIL9jevxdaDHU%2FTBr6pL5ruzuLZubgUQBOY2hPij3GBUe7tBCMBRE2KrXVSz0BBI%2FtPVgtV%2F%2FxkZ5WSjI%2F%2BFIXC3sHJwgT4yFqrZFFTSlVrp3sGYLwcfxSmXCbS00j2Ms4K7qkOsFx6qdTuiHtG4AimfmM8NyvOvR2G48qXtZ2fsfrN7%2BqpcRyUp0glKiimDm4TwAcHBp%2B9WeA4ki0GMWNR9OVF8BZvn7xtI%2FF09H8jzLEgz6yLwCDuelnFXHkTZZOytCOEdqDOtGwsm%2BNj00fXt%2B6%2Bj4vcA7bwNrZwENmXwAKuZnvsNRThs5ozMPfPiHyoDF7xiduHcXb70A8dRFheHjiySQATBZk0nl9MHPkBEWUoEtYjyrPFNwGzfdlD37Zdu98KCv%2BMmD2BYpUCvcST39e0%2BS1Wr249FAAg7mPzWrS5NstEbE0xrsiA6QN1PfRFLnhr%2BspxVJTlY8Mw1DqNXeyCQFREEXz9cHB0QOev73QaNhOF4B%2B45PHFHFgDhJTqjuubJFqX1KQco7NTTuW8kq95k2G4eLEGzM7lfItnjNeTKcOfV%2FT8hOuV77A9IK0XjgMpCO0ZiuV3L%2F6njCFAOmucGB3OII5XgCXEJTDdZLElVbu3Vz0fWexvL30k0B6ggBACOmIUBAEUKX0dDTvW7RCYcdZPq6n%2FSsQnUO2RuyBRgQ9Rc5mMvJ6CNIj1nXfd9qWAsCkaZzJAk1L8UjVqY737dSjfCGrPHWqXL32Q0mB%2F2BXnke00WaEYv2aTzAbnuV5pcWkDGAAGJmhSafh6hjr%2BW2SVYHrP7bb%2BOdPW%2FUgflGlTM2gaK%2Ft7tp6%2BN6yixdN89DcIwGktIFPABfNbwoQqQWEUnDJzg1g0jDeK5p7Kp7nensXFI7uyAr%2FLyM7fYLnpa6LYScE8vDnot5hrKlslm%2BfE3nVxJgO4o3KcYu%2FF8XM8yFQ27n%2F65Te%2FzKl3Jhpjj6TCIDneRD5%2FItxr1vdkALw7p1qfeWPpjHxMtsXaPxu6FLc%2BrnbSB1r7fcrlr36nqwMzQfnplJDryQCGOh%2FbLjhcM%2FEvQ4Pdund9xRV5m1LfTXaF%2BK9gsLGB9nsgddcz8thM%2FarPzYM8%2FFazf9sMFaU%2Fi%2FwvNANwEhPvUGR8ozn7d%2BiDKXixtKpbHp81nV9E7puRy31ixKUbOe%2Fv3Ud891ghhDrL5Z975eaOvV%2BCNRp0Gfz%2BcJjDABdTwlpdfKbId0t5XYAcHz5D5ZVtWUp9%2Flog2L7PgVJqZx0HOE5Cqghemv1%2Bt%2FeGBmZ%2BdB2yNN72UEpnzXG32YADA186i3bIpPxMhuKrFK%2Fd77JUnbkKbYvRJlC8DzKSZK76Lq1he2dKy%2BZuSfesSz5a2xHDbLJ%2BJaqdv5H4EUY%2BzbG2m9HgN7mg81bfw4W1uu7AjvHaqDhqF%2FZ3Fq5XFy%2FcESSDsx5fvZ7wLEsNfXk%2BjlVHfpSCOB%2FAQAA%2F%2F8zd8orZc2N9AAAAABJRU5ErkJggg%3D%3D" alt="Documentation" /&gt;&lt;/a&gt; &lt;a href="https://stackoverflow.com/questions/tagged/cloudnative-pg"&gt;&lt;img src="https://img.shields.io/badge/stackoverflow-cloudnative--pg-blue?logo=stackoverflow&amp;amp;logoColor=%23F48024&amp;amp;link=https%3A%2F%2Fstackoverflow.com%2Fquestions%2Ftagged%2Fcloudnative-pg" alt="Stack Overflow" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fcloudnative-pg%2Fcloudnative-pg?ref=badge_small"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fcloudnative-pg%2Fcloudnative-pg.svg?type=small" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Welcome to the CloudNativePG Project!&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;CloudNativePG (CNPG)&lt;/strong&gt; is an open-source platform designed to seamlessly manage &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; databases in Kubernetes environments. It covers the entire operational lifecycle—from deployment to ongoing maintenance—through its core component, the CloudNativePG operator.&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudnative-pg/governance/raw/main/GOVERNANCE.md"&gt;Governance Policies&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/ADOPTERS.md"&gt;Adopters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudnative-pg.io/support/"&gt;Commercial Support&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/LICENSE"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;The best way to get started is the &lt;a href="https://cloudnative-pg.io/documentation/current/quickstart/"&gt;Quickstart Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Scope&lt;/h2&gt; 
&lt;h3&gt;Mission&lt;/h3&gt; 
&lt;p&gt;CloudNativePG aims to increase PostgreSQL adoption within Kubernetes by making it an integral part of the development process and GitOps-driven CI/CD automation.&lt;/p&gt; 
&lt;h3&gt;Core Principles &amp;amp; Features&lt;/h3&gt; 
&lt;p&gt;Designed by PostgreSQL experts for Kubernetes administrators, CloudNativePG follows a Kubernetes-native approach to PostgreSQL primary/standby cluster management. Instead of relying on external high-availability tools (like Patroni, repmgr, or Stolon), it integrates directly with the Kubernetes API to automate database operations that a skilled DBA would perform manually.&lt;/p&gt; 
&lt;p&gt;Key design decisions include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Direct integration with Kubernetes API: The PostgreSQL cluster’s status is available directly in the &lt;code&gt;Cluster&lt;/code&gt; resource, allowing users to inspect it via the Kubernetes API.&lt;/li&gt; 
 &lt;li&gt;Operator pattern: The operator ensures that the desired PostgreSQL state is reconciled automatically, following Kubernetes best practices.&lt;/li&gt; 
 &lt;li&gt;Immutable application containers: Updates follow an immutable infrastructure model, as explained in &lt;a href="https://www.enterprisedb.com/blog/why-edb-chose-immutable-application-containers"&gt;"Why EDB Chose Immutable Application Containers"&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;How CloudNativePG Works&lt;/h3&gt; 
&lt;p&gt;The operator continuously monitors and updates the PostgreSQL cluster state. Examples of automated actions include:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Failover management: If the primary instance fails, the operator elects a new primary, updates the cluster status, and orchestrates the transition.&lt;/li&gt; 
 &lt;li&gt;Scaling read replicas: When the number of desired replicas changes, the operator provisions or removes resources such as persistent volumes, secrets, and config maps while managing streaming replication.&lt;/li&gt; 
 &lt;li&gt;Service updates: Kubernetes remains the single source of truth, ensuring that PostgreSQL service endpoints are always up to date.&lt;/li&gt; 
 &lt;li&gt;Rolling updates: When an image is updated, the operator follows a rolling strategy—first updating replica pods before performing a controlled switchover for the primary.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CloudNativePG manages additional Kubernetes resources to enhance PostgreSQL management, including: &lt;code&gt;Backup&lt;/code&gt;, &lt;code&gt;ClusterImageCatalog&lt;/code&gt;, &lt;code&gt;Database&lt;/code&gt;, &lt;code&gt;ImageCatalog&lt;/code&gt;, &lt;code&gt;Pooler&lt;/code&gt;, &lt;code&gt;Publication&lt;/code&gt;, &lt;code&gt;ScheduledBackup&lt;/code&gt;, and &lt;code&gt;Subscription&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Out of Scope&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Kubernetes only:&lt;/strong&gt; CloudNativePG is dedicated to vanilla Kubernetes maintained by the &lt;a href="https://kubernetes.io/"&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;PostgreSQL only:&lt;/strong&gt; CloudNativePG is dedicated to vanilla PostgreSQL maintained by the &lt;a href="https://www.postgresql.org/about/"&gt;PostgreSQL Global Development Group (PGDG)&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;No support for forks:&lt;/strong&gt; Features from PostgreSQL forks will only be considered if they can be integrated as extensions or pluggable frameworks.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Not a general-purpose database operator:&lt;/strong&gt; CloudNativePG does not support other databases (e.g., MariaDB).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;CloudNativePG can be extended via the &lt;a href="https://github.com/cloudnative-pg/cnpg-i"&gt;CNPG-I plugin interface&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Communications&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudnative-pg/cloudnative-pg/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloud-native.slack.com/archives/C08MAUJ7NPM"&gt;Slack&lt;/a&gt; (join the &lt;a href="https://communityinviter.com/apps/cloud-native/cncf"&gt;CNCF Slack Workspace&lt;/a&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/CloudNativePg"&gt;Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mastodon.social/@CloudNativePG"&gt;Mastodon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bsky.app/profile/cloudnativepg.bsky.social"&gt;Bluesky&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orgs/cloudnative-pg/projects/1"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudnative-pg.io"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/faq.md"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudnative-pg.io/blog/"&gt;Blog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cloudnative-pg/cnpg-i"&gt;CloudNativePG plugin Interface (CNPG-I)&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Adopters&lt;/h2&gt; 
&lt;p&gt;A list of publicly known users of the CloudNativePG operator is in &lt;a href="https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/ADOPTERS.md"&gt;ADOPTERS.md&lt;/a&gt;. Help us grow our community and CloudNativePG by adding yourself and your organization to this list!&lt;/p&gt; 
&lt;h3&gt;CloudNativePG at KubeCon&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;April 4 2025, KubeCon Europe in London: &lt;a href="https://sched.co/1tx8g"&gt;"Consistent Volume Group Snapshots, Unraveling the Magic"&lt;/a&gt; - Leonardo Cecchi (EDB) and Xing Yang (VMware)&lt;/li&gt; 
 &lt;li&gt;November 11 2024, Cloud Native Rejekts NA 2024: &lt;a href="https://www.youtube.com/watch?v=uBzl_stoxoc&amp;amp;ab_channel=CloudNativeRejekts"&gt;"Maximising Microservice Databases with Kubernetes, Postgres, and CloudNativePG"&lt;/a&gt; - Gabriele Bartolini (EDB) and Leonardo Cecchi (EDB)&lt;/li&gt; 
 &lt;li&gt;March 21 2024, KubeCon Europe 2024 in Paris: &lt;a href="https://kccnceu2024.sched.com/event/1YeM4/scaling-heights-mastering-postgres-database-vertical-scalability-with-kubernetes-storage-magic-gabriele-bartolini-edb-gari-singh-google"&gt;"Scaling Heights: Mastering Postgres Database Vertical Scalability with Kubernetes Storage Magic"&lt;/a&gt; - Gari Singh, Google &amp;amp; Gabriele Bartolini, EDB&lt;/li&gt; 
 &lt;li&gt;March 19 2024, Data on Kubernetes Day at KubeCon Europe 2024 in Paris: &lt;a href="https://colocatedeventseu2024.sched.com/event/1YFha/from-zero-to-hero-scaling-postgres-in-kubernetes-using-the-power-of-cloudnativepg-gabriele-bartolini-edb"&gt;"From Zero to Hero: Scaling Postgres in Kubernetes Using the Power of CloudNativePG"&lt;/a&gt; - Gabriele Bartolini, EDB&lt;/li&gt; 
 &lt;li&gt;7 November 2023, KubeCon North America 2023 in Chicago: &lt;a href="https://kccncna2023.sched.com/event/1R2ml/disaster-recovery-with-very-large-postgres-databases-gabriele-bartolini-edb-michelle-au-google"&gt;"Disaster Recovery with Very Large Postgres Databases (in Kubernetes)"&lt;/a&gt; - Michelle Au, Google &amp;amp; Gabriele Bartolini, EDB&lt;/li&gt; 
 &lt;li&gt;27 October 2022, KubeCon North America 2022 in Detroit: &lt;a href="https://kccncna2022.sched.com/event/182GB/data-on-kubernetes-deploying-and-running-postgresql-and-patterns-for-databases-in-a-kubernetes-cluster-chris-milsted-ondat-gabriele-bartolini-edb"&gt;"Data On Kubernetes, Deploying And Running PostgreSQL And Patterns For Databases In a Kubernetes Cluster"&lt;/a&gt; - Chris Milsted, Ondat &amp;amp; Gabriele Bartolini, EDB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Useful links&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dok.community/"&gt;Data on Kubernetes (DoK) Community&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2024/11/20/cloud-neutral-postgres-databases-with-kubernetes-and-cloudnativepg/"&gt;"Cloud Neutral Postgres Databases with Kubernetes and CloudNativePG" by Gabriele Bartolini&lt;/a&gt; (November 2024)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gabrielebartolini.it/articles/2024/03/cloudnativepg-recipe-5-how-to-migrate-your-postgresql-database-in-kubernetes-with-~0-downtime-from-anywhere/"&gt;"How to migrate your PostgreSQL database in Kubernetes with ~0 downtime from anywhere" by Gabriele Bartolini&lt;/a&gt; (March 2024)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gabrielebartolini.it/articles/2024/02/maximizing-microservice-databases-with-kubernetes-postgres-and-cloudnativepg/"&gt;"Maximizing Microservice Databases with Kubernetes, Postgres, and CloudNativePG" by Gabriele Bartolini&lt;/a&gt; (February 2024)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2023/09/29/recommended-architectures-for-postgresql-in-kubernetes/"&gt;"Recommended Architectures for PostgreSQL in Kubernetes" by Gabriele Bartolini&lt;/a&gt; (September 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.enterprisedb.com/blog/current-state-major-postgresql-upgrades-cloudnativepg-kubernetes"&gt;"The Current State of Major PostgreSQL Upgrades with CloudNativePG" by Gabriele Bartolini&lt;/a&gt; (August 2023)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/the-rise-of-the-kubernetes-native-database/"&gt;"The Rise of the Kubernetes Native Database" by Jeff Carpenter&lt;/a&gt; (December 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://cloudnativenow.com/kubecon-cnc-eu-2022/why-run-postgres-in-kubernetes/"&gt;"Why Run Postgres in Kubernetes?" by Gabriele Bartolini&lt;/a&gt; (May 2022)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.tfir.io/shift-left-security-the-path-to-postgresql-on-kubernetes/"&gt;"Shift-Left Security: The Path To PostgreSQL On Kubernetes" by Gabriele Bartolini&lt;/a&gt; (April 2021)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.2ndquadrant.com/en/blog/local-persistent-volumes-and-postgresql-usage-in-kubernetes/"&gt;"Local Persistent Volumes and PostgreSQL usage in Kubernetes" by Gabriele Bartolini&lt;/a&gt; (June 2020)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; We are a &lt;a href="https://www.cncf.io/sandbox-projects/"&gt;Cloud Native Computing Foundation Sandbox project&lt;/a&gt;. &lt;/p&gt; 
&lt;p style="text-align:center;" align="center"&gt; 
 &lt;picture align="center"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://github.com/cncf/artwork/blob/main/other/cncf/horizontal/white/cncf-white.svg?raw=true" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://github.com/cncf/artwork/blob/main/other/cncf/horizontal/color/cncf-color.svg?raw=true" /&gt; 
  &lt;img align="center" src="https://github.com/cncf/artwork/raw/main/other/cncf/horizontal/color/cncf-color.svg?raw=true" alt="CNCF logo" width="50%" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; CloudNativePG was originally built and sponsored by &lt;a href="https://www.enterprisedb.com"&gt;EDB&lt;/a&gt;. &lt;/p&gt; 
&lt;p style="text-align:center;" align="center"&gt; 
 &lt;picture align="center"&gt; 
  &lt;source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/cloudnative-pg/.github/main/logo/edb_landscape_color_white.svg" /&gt; 
  &lt;source media="(prefers-color-scheme: light)" srcset="https://raw.githubusercontent.com/cloudnative-pg/.github/main/logo/edb_landscape_color_grey.svg" /&gt; 
  &lt;img align="center" src="https://raw.githubusercontent.com/cloudnative-pg/.github/main/logo/edb_landscape_color_grey.svg?sanitize=true" alt="EDB logo" width="25%" /&gt; 
 &lt;/picture&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.postgresql.org/about/policies/trademarks/"&gt;Postgres, PostgreSQL, and the Slonik Logo&lt;/a&gt; are trademarks or registered trademarks of the PostgreSQL Community Association of Canada, and used with their permission. &lt;/p&gt; 
&lt;hr /&gt;</description>
    </item>
    
    <item>
      <title>gravitational/teleport</title>
      <link>https://github.com/gravitational/teleport</link>
      <description>&lt;p&gt;The easiest, and most secure way to access and protect all of your infrastructure.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;Teleport provides connectivity, authentication, access controls and audit for infrastructure.&lt;/p&gt; 
&lt;p&gt;Here is why you might use Teleport:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Set up SSO for all of your cloud infrastructure [1].&lt;/li&gt; 
 &lt;li&gt;Protect access to cloud and on-prem services using mTLS endpoints and short-lived certificates.&lt;/li&gt; 
 &lt;li&gt;Establish tunnels to access services behind NATs and firewalls.&lt;/li&gt; 
 &lt;li&gt;Provide an audit log with session recording and replay for various protocols.&lt;/li&gt; 
 &lt;li&gt;Unify Role-Based Access Control (RBAC) and enforce the principle of least privilege with &lt;a href="https://goteleport.com/features/access-requests/"&gt;access requests&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;[1] The open source version supports only GitHub SSO.&lt;/p&gt; 
&lt;p&gt;Teleport works with SSH, Kubernetes, databases, RDP, and web services.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Architecture: &lt;a href="https://goteleport.com/docs/reference/architecture/"&gt;https://goteleport.com/docs/reference/architecture/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Getting Started: &lt;a href="https://goteleport.com/docs/get-started/"&gt;https://goteleport.com/docs/get-started/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://goteleport.com/download"&gt; &lt;img src="https://raw.githubusercontent.com/gravitational/teleport/master/assets/img/hero-teleport-platform.png" width="750/" /&gt; &lt;/a&gt; 
 &lt;div align="center" style="padding: 25px"&gt; 
  &lt;a href="https://goteleport.com/download"&gt; &lt;img src="https://img.shields.io/github/v/release/gravitational/teleport?sort=semver&amp;amp;label=Release&amp;amp;color=651FFF" /&gt; &lt;/a&gt; 
  &lt;a href="https://golang.org/"&gt; &lt;img src="https://img.shields.io/github/go-mod/go-version/gravitational/teleport?color=7fd5ea" /&gt; &lt;/a&gt; 
  &lt;a href="https://github.com/gravitational/teleport/raw/master/CODE_OF_CONDUCT.md"&gt; &lt;img src="https://img.shields.io/badge/Contribute-🙌-green.svg" /&gt; &lt;/a&gt; 
  &lt;a href="https://www.gnu.org/licenses/agpl-3.0.en.html"&gt; &lt;img src="https://img.shields.io/badge/AGPL-3.0-red.svg?sanitize=true" /&gt; &lt;/a&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;br /&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#installing-and-running"&gt;Installing and Running&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#docker"&gt;Docker&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#building-teleport"&gt;Building Teleport&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#why-did-we-build-teleport"&gt;Why Did We Build Teleport?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#more-information"&gt;More Information&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#support-and-contributing"&gt;Support and Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#is-teleport-secure-and-production-ready"&gt;Is Teleport Secure and Production Ready?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#who-built-teleport"&gt;Who Built Teleport?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Introduction&lt;/h2&gt; 
&lt;p&gt;Teleport includes an identity-aware access proxy, a CA that issues short-lived certificates, a unified access control system and a tunneling system to access resources behind the firewall.&lt;/p&gt; 
&lt;p&gt;We have implemented Teleport as a single Go binary that integrates with multiple protocols and cloud services:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/enroll-resources/server-access/introduction/"&gt;SSH nodes&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/enroll-resources/kubernetes-access/introduction/"&gt;Kubernetes clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/enroll-resources/database-access/"&gt;PostgreSQL, MongoDB, CockroachDB and MySQL databases&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/enroll-resources/application-access/introduction/"&gt;Internal Web apps&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/enroll-resources/desktop-access/introduction/"&gt;Windows Hosts&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/enroll-resources/server-access/introduction/"&gt;Networked servers&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can set up Teleport as a &lt;a href="https://goteleport.com/docs/admin-guides/deploy-a-cluster/linux-demo"&gt;Linux daemon&lt;/a&gt; or a &lt;a href="https://goteleport.com/docs/admin-guides/deploy-a-cluster/helm-deployments/"&gt;Kubernetes deployment&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Teleport focuses on best practices for infrastructure security:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;No need to manage shared secrets such as SSH keys or Kubernetes tokens: it uses certificate-based auth with certificate expiration for all protocols.&lt;/li&gt; 
 &lt;li&gt;Two-factor authentication (2FA) for everything.&lt;/li&gt; 
 &lt;li&gt;Collaboratively troubleshoot issues through session sharing.&lt;/li&gt; 
 &lt;li&gt;Single sign-on (SSO) for everything via GitHub Auth, OpenID Connect, or SAML with endpoints like Okta or Microsoft Entra ID.&lt;/li&gt; 
 &lt;li&gt;Infrastructure introspection: Use Teleport via the CLI or Web UI to view the status of every SSH node, database instance, Kubernetes cluster, or internal web app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Teleport uses &lt;a href="https://godoc.org/golang.org/x/crypto"&gt;Go crypto&lt;/a&gt;. It is &lt;em&gt;fully compatible with OpenSSH&lt;/em&gt;, &lt;code&gt;sshd&lt;/code&gt; servers, and &lt;code&gt;ssh&lt;/code&gt; clients, Kubernetes clusters and more.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Project Links&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://goteleport.com/"&gt;Teleport Website&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;The official website of the project.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://goteleport.com/docs/"&gt;Documentation&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Admin guide, user manual and more.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://goteleport.com/blog/"&gt;Blog&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Our blog where we publish Teleport news.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://github.com/gravitational/teleport/discussions"&gt;Forum&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Ask us a setup question, post your tutorial, feedback, or idea on our forum.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://goteleport.com/slack"&gt;Slack&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Need help with your setup? Ping us in our Slack channel.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://goteleport.com/pricing"&gt;Cloud-hosted&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;We offer Enterprise with a Cloud-hosted option. For teams that require easy and secure access to their computing environments.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Installing and Running&lt;/h2&gt; 
&lt;p&gt;To set up a single-instance Teleport cluster, follow our &lt;a href="https://goteleport.com/docs/admin-guides/deploy-a-cluster/linux-demo/"&gt;getting started guide&lt;/a&gt;. You can then register your servers, Kubernetes clusters, and other infrastructure with your Teleport cluster.&lt;/p&gt; 
&lt;p&gt;You can also get started with Teleport Enterprise Cloud, a managed Teleport deployment that makes it easier to enable secure access to your infrastructure.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://goteleport.com/signup"&gt;Sign up for a free trial&lt;/a&gt; of Teleport Enterprise Cloud.&lt;/p&gt; 
&lt;p&gt;Follow our guide to &lt;a href="https://goteleport.com/docs/get-started/"&gt;registering your first server&lt;/a&gt; with Teleport Enterprise Cloud.&lt;/p&gt; 
&lt;h2&gt;Docker&lt;/h2&gt; 
&lt;h3&gt;Deploy Teleport&lt;/h3&gt; 
&lt;p&gt;If you wish to deploy Teleport inside a Docker container see the &lt;a href="https://goteleport.com/docs/installation/#running-teleport-on-docker"&gt;installation guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;For Local Testing and Development&lt;/h3&gt; 
&lt;p&gt;To run a full test suite locally, see &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/BUILD_macos.md#local-tests-dependencies"&gt;the test dependencies list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Building Teleport&lt;/h2&gt; 
&lt;p&gt;The &lt;code&gt;teleport&lt;/code&gt; repository contains the Teleport daemon binary (written in Go) and a web UI written in TypeScript.&lt;/p&gt; 
&lt;p&gt;If your intention is to build and deploy for use in a production infrastructure a released tag should be used. The default branch, &lt;code&gt;master&lt;/code&gt;, is the current development branch for an upcoming major version. Get the latest release tags listed at &lt;a href="https://goteleport.com/download/"&gt;https://goteleport.com/download/&lt;/a&gt; and then use that tag in the &lt;code&gt;git clone&lt;/code&gt;. For example &lt;code&gt;git clone https://github.com/gravitational/teleport.git -b v16.0.0&lt;/code&gt; gets release v16.0.0.&lt;/p&gt; 
&lt;h3&gt;Dockerized Build&lt;/h3&gt; 
&lt;p&gt;It is often easiest to build with Docker, which ensures that all required tooling is available for the build. To execute a dockerized build, ensure that docker is installed and running, and execute:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;make -C build.assets build-binaries
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Local Build&lt;/h3&gt; 
&lt;h4&gt;Dependencies&lt;/h4&gt; 
&lt;p&gt;The following dependencies are required to build Teleport from source. For maximum compatibility, install the versions of these dependencies using the versions listed in &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/build.assets/versions.mk"&gt;&lt;code&gt;build.assets/versions.mk&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://golang.org/dl/"&gt;&lt;code&gt;Go&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.rust-lang.org/tools/install"&gt;&lt;code&gt;Rust&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://nodejs.org/en/download/"&gt;&lt;code&gt;Node.js&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Yubico/libfido2"&gt;&lt;code&gt;libfido2&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.freedesktop.org/wiki/Software/pkg-config/"&gt;&lt;code&gt;pkg-config&lt;/code&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;For an example of Dev Environment setup on a Mac, see &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/BUILD_macos.md"&gt;these instructions&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Perform a build&lt;/h4&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The Go compiler is somewhat sensitive to the amount of memory: you will need &lt;strong&gt;at least&lt;/strong&gt; 1GB of virtual memory to compile Teleport. A 512MB instance without swap will &lt;strong&gt;not&lt;/strong&gt; work.&lt;/li&gt; 
  &lt;li&gt;This will build the latest version of Teleport, &lt;strong&gt;regardless&lt;/strong&gt; of whether it is stable. If you want to build the latest stable release, run &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git submodule update --recursive&lt;/code&gt; to the corresponding tag (for example,&lt;/li&gt; 
  &lt;li&gt;run &lt;code&gt;git checkout v8.0.0&lt;/code&gt;) &lt;strong&gt;before&lt;/strong&gt; performing a build.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Get the source&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;git clone https://github.com/gravitational/teleport.git
cd teleport
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To perform a build&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make full
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;tsh&lt;/code&gt; dynamically links against libfido2 by default, to support development environments, as long as the library itself can be found:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ brew install libfido2 pkg-config  # Replace with your package manager of choice

$ make build/tsh
&amp;gt; libfido2 found, setting FIDO2=dynamic
&amp;gt; (...)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Release binaries are linked statically against libfido2. You may switch the linking mode using the FIDO2 variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;make build/tsh FIDO2=dynamic # dynamic linking
make build/tsh FIDO2=static  # static linking, for an easy setup use `make enter`
                             # or `build.assets/macos/build-fido2-macos.sh`.
make build/tsh FIDO2=off     # doesn't link libfido2 in any way
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;tsh&lt;/code&gt; builds with Touch ID support require access to an Apple Developer account. If you are a Teleport maintainer, ask the team for access.&lt;/p&gt; 
&lt;h4&gt;Build output and run locally&lt;/h4&gt; 
&lt;p&gt;If the build succeeds, the installer will place the binaries in the &lt;code&gt;build&lt;/code&gt; directory.&lt;/p&gt; 
&lt;p&gt;Before starting, create default data directories:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;sudo mkdir -p -m0700 /var/lib/teleport
sudo chown $USER /var/lib/teleport
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Running Teleport in a hot reload mode&lt;/h4&gt; 
&lt;p&gt;To speed up your development process, you can run Teleport using &lt;a href="https://github.com/githubnemo/CompileDaemon"&gt;&lt;code&gt;CompileDaemon&lt;/code&gt;&lt;/a&gt;. This will build and run the Teleport binary, and then rebuild and restart it whenever any Go source files change.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Install CompileDaemon:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;go install github.com/githubnemo/CompileDaemon@latest
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;Note that we use &lt;code&gt;go install&lt;/code&gt; instead of the suggested &lt;code&gt;go get&lt;/code&gt;, because we don't want CompileDaemon to become a dependency of the project.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Build and run the Teleport binary:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;make teleport-hot-reload
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;By default, this runs a &lt;code&gt;teleport start&lt;/code&gt; command. If you want to customize the command, for example by providing a custom config file location, you can use the &lt;code&gt;TELEPORT_ARGS&lt;/code&gt; parameter:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-shell"&gt;make teleport-hot-reload TELEPORT_ARGS='start --config=/path/to/config.yaml'
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Note that you still need to run &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/api/proto/README.md"&gt;&lt;code&gt;make grpc&lt;/code&gt;&lt;/a&gt; if you modify any Protocol Buffers files to regenerate the generated Go sources; regenerating these sources should in turn cause the CompileDaemon to rebuild and restart Teleport.&lt;/p&gt; 
&lt;h3&gt;Web UI&lt;/h3&gt; 
&lt;p&gt;The Teleport Web UI resides in the &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/web"&gt;web&lt;/a&gt; directory.&lt;/p&gt; 
&lt;h4&gt;Rebuilding Web UI for development&lt;/h4&gt; 
&lt;p&gt;To rebuild the Teleport UI package, run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make docker-ui
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then you can replace Teleport Web UI files with the files from the newly-generated &lt;code&gt;/dist&lt;/code&gt; folder.&lt;/p&gt; 
&lt;p&gt;To enable speedy iterations on the Web UI, you can run a &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/web#web-ui"&gt;local web-dev server&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also tell Teleport to load the Web UI assets from the source directory. To enable this behavior, set the environment variable &lt;code&gt;DEBUG=1&lt;/code&gt; and rebuild with the default target:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run Teleport as a single-node cluster in development mode:
DEBUG=1 ./build/teleport start -d
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Keep the server running in this mode, and make your UI changes in &lt;code&gt;/dist&lt;/code&gt; directory. For instructions about how to update the Web UI, read &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/web#readme"&gt;the &lt;code&gt;web&lt;/code&gt; README&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Managing dependencies&lt;/h3&gt; 
&lt;p&gt;All dependencies are managed using &lt;a href="https://blog.golang.org/using-go-modules"&gt;Go modules&lt;/a&gt;. Here are the instructions for some common tasks:&lt;/p&gt; 
&lt;h4&gt;Add a new dependency&lt;/h4&gt; 
&lt;p&gt;Latest version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/new/dependency
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;and update the source to use this dependency.&lt;/p&gt; 
&lt;p&gt;To get a specific version, use &lt;code&gt;go get github.com/new/dependency@version&lt;/code&gt; instead.&lt;/p&gt; 
&lt;h4&gt;Set dependency to a specific version&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get github.com/new/dependency@version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Update dependency to the latest version&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get -u github.com/new/dependency
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Update all dependencies&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;go get -u all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Debugging dependencies&lt;/h4&gt; 
&lt;p&gt;Why is a specific package imported?&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;go mod why $pkgname&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Why is a specific module imported?&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;go mod why -m $modname&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Why is a specific version of a module imported?&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;go mod graph | grep $modname&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Why did We Build Teleport?&lt;/h2&gt; 
&lt;p&gt;The Teleport creators used to work together at Rackspace. We noticed that most cloud computing users struggle with setting up and configuring infrastructure security because popular tools, while flexible, are complex to understand and expensive to maintain. Additionally, most organizations use multiple infrastructure form factors such as several cloud providers, multiple cloud accounts, servers in colocation, and even smart devices. Some of those devices run on untrusted networks, behind third-party firewalls. This only magnifies complexity and increases operational overhead.&lt;/p&gt; 
&lt;p&gt;We had a choice, either start a security consulting business or build a solution that's dead-easy to use and understand. A real-time representation of all of your servers in the same room as you, as if they were magically &lt;em&gt;teleported&lt;/em&gt;. Thus, Teleport was born!&lt;/p&gt; 
&lt;h2&gt;More Information&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/get-started/"&gt;Teleport Getting Started&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/reference/architecture/"&gt;Teleport Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/reference/"&gt;Reference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://goteleport.com/docs/faq"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support and Contributing&lt;/h2&gt; 
&lt;p&gt;We offer a few different options for support. First of all, we try to provide clear and comprehensive documentation. The docs are also in GitHub, so feel free to create a PR or file an issue if you have ideas for improvements. If you still have questions after reviewing our docs, you can also:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join &lt;a href="https://github.com/gravitational/teleport/discussions"&gt;Teleport Discussions&lt;/a&gt; to ask questions. Our engineers are available there to help you.&lt;/li&gt; 
 &lt;li&gt;If you want to contribute to Teleport or file a bug report/issue, you can create an issue here in GitHub.&lt;/li&gt; 
 &lt;li&gt;If you are interested in Teleport Enterprise or more responsive support during a POC, we can also create a dedicated Slack channel for you during your POC. You can &lt;a href="https://goteleport.com/pricing/"&gt;reach out to us through our website&lt;/a&gt; to arrange for a POC.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Is Teleport Secure and Production-Ready?&lt;/h2&gt; 
&lt;p&gt;Yes -- Teleport is production-ready and designed to protect and facilitate access to the most precious and mission-critical applications.&lt;/p&gt; 
&lt;p&gt;Teleport has completed several security audits from nationally and internationally recognized technology security companies.&lt;/p&gt; 
&lt;p&gt;We publicize some of our audit results, security philosophy and related information on our &lt;a href="https://trust.goteleport.com/"&gt;trust page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can see the list of companies that use Teleport in production on the Teleport &lt;a href="https://goteleport.com/case-study/"&gt;product page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Who Built Teleport?&lt;/h2&gt; 
&lt;p&gt;Teleport was created by &lt;a href="https://goteleport.com"&gt;Gravitational, Inc.&lt;/a&gt;. We have built Teleport by borrowing from our previous experiences at Rackspace. &lt;a href="https://goteleport.com/about/"&gt;Learn more about Teleport and our history&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Teleport is distributed in multiple forms with different licensing implications.&lt;/p&gt; 
&lt;p&gt;The Teleport API module (all code in this repository under &lt;code&gt;/api&lt;/code&gt;) is available under the &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/api/LICENSE"&gt;Apache 2.0 license&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The remainder of the source code in this repository is available under the &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/LICENSE"&gt;GNU Affero General Public License&lt;/a&gt;. Users compiling Teleport from source must comply with the terms of this license.&lt;/p&gt; 
&lt;p&gt;Teleport Community Edition builds distributed on &lt;a href="http://goteleport.com/download"&gt;http://goteleport.com/download&lt;/a&gt; are available under a &lt;a href="https://raw.githubusercontent.com/gravitational/teleport/master/build.assets/LICENSE-community"&gt;modified Apache 2.0 license&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>docker/compose</title>
      <link>https://github.com/docker/compose</link>
      <description>&lt;p&gt;Define and run multi-container applications with Docker&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#docker-compose-v2"&gt;Docker Compose v2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#where-to-get-docker-compose"&gt;Where to get Docker Compose&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#windows-and-macos"&gt;Windows and macOS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#linux"&gt;Linux&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#quick-start"&gt;Quick Start&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/docker/compose/main/#legacy"&gt;Legacy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Docker Compose v2&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/docker/compose/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/docker/compose.svg?style=flat-square" alt="GitHub release" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/docker/compose/v2"&gt;&lt;img src="https://img.shields.io/badge/go.dev-docs-007d9c?style=flat-square&amp;amp;logo=go&amp;amp;logoColor=white" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://github.com/docker/compose/actions?query=workflow%3Aci"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/docker/compose/ci.yml?label=ci&amp;amp;logo=github&amp;amp;style=flat-square" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/docker/compose/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/docker/compose/v2?style=flat-square" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/docker/compose"&gt;&lt;img src="https://codecov.io/gh/docker/compose/branch/main/graph/badge.svg?token=HP3K4Y4ctu" alt="Codecov" /&gt;&lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/docker/compose"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/docker/compose/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;img src="https://raw.githubusercontent.com/docker/compose/main/logo.png?raw=true" alt="Docker Compose" title="Docker Compose Logo" /&gt;&lt;/p&gt; 
&lt;p&gt;Docker Compose is a tool for running multi-container applications on Docker defined using the &lt;a href="https://compose-spec.io"&gt;Compose file format&lt;/a&gt;. A Compose file is used to define how one or more containers that make up your application are configured. Once you have a Compose file, you can create and start your application with a single command: &lt;code&gt;docker compose up&lt;/code&gt;.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: About Docker Swarm Docker Swarm used to rely on the legacy compose file format but did not adopted the compose specification so is missing some of the recent enhancements in the compose syntax. After &lt;a href="https://www.mirantis.com/software/swarm/"&gt;acquisition by Mirantis&lt;/a&gt; swarm isn't maintained by Docker Inc, and as such some Docker Compose features aren't accessible to swarm users.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Where to get Docker Compose&lt;/h1&gt; 
&lt;h3&gt;Windows and macOS&lt;/h3&gt; 
&lt;p&gt;Docker Compose is included in &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker Desktop&lt;/a&gt; for Windows and macOS.&lt;/p&gt; 
&lt;h3&gt;Linux&lt;/h3&gt; 
&lt;p&gt;You can download Docker Compose binaries from the &lt;a href="https://github.com/docker/compose/releases"&gt;release page&lt;/a&gt; on this repository.&lt;/p&gt; 
&lt;p&gt;Rename the relevant binary for your OS to &lt;code&gt;docker-compose&lt;/code&gt; and copy it to &lt;code&gt;$HOME/.docker/cli-plugins&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Or copy it into one of these folders to install it system-wide:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;/usr/local/lib/docker/cli-plugins&lt;/code&gt; OR &lt;code&gt;/usr/local/libexec/docker/cli-plugins&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;/usr/lib/docker/cli-plugins&lt;/code&gt; OR &lt;code&gt;/usr/libexec/docker/cli-plugins&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(might require making the downloaded file executable with &lt;code&gt;chmod +x&lt;/code&gt;)&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;Using Docker Compose is a three-step process:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Define your app's environment with a &lt;code&gt;Dockerfile&lt;/code&gt; so it can be reproduced anywhere.&lt;/li&gt; 
 &lt;li&gt;Define the services that make up your app in &lt;code&gt;compose.yaml&lt;/code&gt; so they can be run together in an isolated environment.&lt;/li&gt; 
 &lt;li&gt;Lastly, run &lt;code&gt;docker compose up&lt;/code&gt; and Compose will start and run your entire app.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;A Compose file looks like this:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/code
  redis:
    image: redis
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Want to help develop Docker Compose? Check out our &lt;a href="https://raw.githubusercontent.com/docker/compose/main/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you find an issue, please report it on the &lt;a href="https://github.com/docker/compose/issues/new/choose"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Legacy&lt;/h2&gt; 
&lt;p&gt;The Python version of Compose is available under the &lt;code&gt;v1&lt;/code&gt; &lt;a href="https://github.com/docker/compose/tree/v1"&gt;branch&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>seaweedfs/seaweedfs</title>
      <link>https://github.com/seaweedfs/seaweedfs</link>
      <description>&lt;p&gt;SeaweedFS is a fast distributed storage system for blobs, objects, files, and data lake, for billions of files! Blob store has O(1) disk seek, cloud tiering. Filer supports Cloud Drive, xDC replication, Kubernetes, POSIX FUSE mount, S3 API, S3 Gateway, Hadoop, WebDAV, encryption, Erasure Coding. Enterprise version is at seaweedfs.com.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;SeaweedFS&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://join.slack.com/t/seaweedfs/shared_invite/enQtMzI4MTMwMjU2MzA3LTEyYzZmZWYzOGQ3MDJlZWMzYmI0OTE4OTJiZjJjODBmMzUxNmYwODg0YjY3MTNlMjBmZDQ1NzQ5NDJhZWI2ZmY"&gt;&lt;img src="https://img.shields.io/badge/slack-purple" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=seaweedfs"&gt;&lt;img src="https://img.shields.io/twitter/follow/seaweedfs.svg?style=social&amp;amp;label=Follow" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://github.com/seaweedfs/seaweedfs/actions/workflows/go.yml"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/seaweedfs/seaweedfs/go.yml" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/seaweedfs/seaweedfs/weed"&gt;&lt;img src="https://godoc.org/github.com/seaweedfs/seaweedfs/weed?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://github.com/seaweedfs/seaweedfs/wiki"&gt;&lt;img src="https://img.shields.io/badge/docs-wiki-blue.svg?sanitize=true" alt="Wiki" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/chrislusf/seaweedfs/"&gt;&lt;img src="https://img.shields.io/docker/pulls/chrislusf/seaweedfs?maxAge=4800" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://search.maven.org/search?q=g:com.github.chrislusf"&gt;&lt;img src="https://img.shields.io/maven-central/v/com.github.chrislusf/seaweedfs-client" alt="SeaweedFS on Maven Central" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/search?repo=seaweedfs"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/seaweedfs" alt="Artifact Hub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/note/seaweedfs.png" alt="SeaweedFS Logo" /&gt;&lt;/p&gt; 
&lt;h2 align="center"&gt;&lt;a href="https://www.patreon.com/seaweedfs"&gt;Sponsor SeaweedFS via Patreon&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;SeaweedFS is an independent Apache-licensed open source project with its ongoing development made possible entirely thanks to the support of these awesome &lt;a href="https://github.com/seaweedfs/seaweedfs/raw/master/backers.md"&gt;backers&lt;/a&gt;. If you'd like to grow SeaweedFS even stronger, please consider joining our &lt;a href="https://www.patreon.com/seaweedfs"&gt;sponsors on Patreon&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Your support will be really appreciated by me and other supporters!&lt;/p&gt; 
&lt;!--
&lt;h4 align="center"&gt;Platinum&lt;/h4&gt;

&lt;p align="center"&gt;
  &lt;a href="" target="_blank"&gt;
    Add your name or icon here
  &lt;/a&gt;
&lt;/p&gt;
--&gt; 
&lt;h3&gt;Gold Sponsors&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.nodion.com"&gt;&lt;img src="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/note/sponsor_nodion.png" alt="nodion" /&gt;&lt;/a&gt; &lt;a href="https://www.piknik.com"&gt;&lt;img src="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/note/piknik.png" alt="piknik" /&gt;&lt;/a&gt; &lt;a href="https://www.keepsec.ca"&gt;&lt;img src="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/note/keepsec.png" alt="keepsec" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/releases/latest"&gt;Download Binaries for different platforms&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://join.slack.com/t/seaweedfs/shared_invite/enQtMzI4MTMwMjU2MzA3LTEyYzZmZWYzOGQ3MDJlZWMzYmI0OTE4OTJiZjJjODBmMzUxNmYwODg0YjY3MTNlMjBmZDQ1NzQ5NDJhZWI2ZmY"&gt;SeaweedFS on Slack&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://twitter.com/SeaweedFS"&gt;SeaweedFS on Twitter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://t.me/Seaweedfs"&gt;SeaweedFS on Telegram&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.reddit.com/r/SeaweedFS/"&gt;SeaweedFS on Reddit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://groups.google.com/d/forum/seaweedfs"&gt;SeaweedFS Mailing List&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki"&gt;Wiki Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/SeaweedFS_Architecture.pdf"&gt;SeaweedFS White Paper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1tdkp45J01oRV68dIm4yoTXKJDof-EhainlA0LMXexQE/edit?usp=sharing"&gt;SeaweedFS Introduction Slides 2025.5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.google.com/presentation/d/1DcxKWlINc-HNCjhYeERkpGXXm6nTCES8mi2W5G0Z4Ts/edit?usp=sharing"&gt;SeaweedFS Introduction Slides 2021.5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.slideshare.net/chrislusf/seaweedfs-introduction"&gt;SeaweedFS Introduction Slides 2019.3&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Table of Contents&lt;/h1&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#quick-start"&gt;Quick Start&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#quick-start-for-s3-api-on-docker"&gt;Quick Start for S3 API on Docker&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#quick-start-with-single-binary"&gt;Quick Start with Single Binary&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#quick-start-seaweedfs-s3-on-aws"&gt;Quick Start SeaweedFS S3 on AWS&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#introduction"&gt;Introduction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#additional-features"&gt;Additional Features&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#filer-features"&gt;Filer Features&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#example-using-seaweed-object-store"&gt;Example: Using Seaweed Object Store&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#object-store-architecture"&gt;Architecture&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#compared-to-other-file-systems"&gt;Compared to Other File Systems&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#compared-to-hdfs"&gt;Compared to HDFS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#compared-to-glusterfs-ceph"&gt;Compared to GlusterFS, Ceph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#compared-to-glusterfs"&gt;Compared to GlusterFS&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#compared-to-ceph"&gt;Compared to Ceph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#compared-to-minio"&gt;Compared to Minio&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#dev-plan"&gt;Dev Plan&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#installation-guide"&gt;Installation Guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#disk-related-topics"&gt;Disk Related Topics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#benchmark"&gt;Benchmark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#enterprise"&gt;Enterprise&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Quick Start&lt;/h1&gt; 
&lt;h2&gt;Quick Start for S3 API on Docker&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;docker run -p 8333:8333 chrislusf/seaweedfs server -s3&lt;/code&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start with Single Binary&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Download the latest binary from &lt;a href="https://github.com/seaweedfs/seaweedfs/releases"&gt;https://github.com/seaweedfs/seaweedfs/releases&lt;/a&gt; and unzip a single binary file &lt;code&gt;weed&lt;/code&gt; or &lt;code&gt;weed.exe&lt;/code&gt;. Or run &lt;code&gt;go install github.com/seaweedfs/seaweedfs/weed@latest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;export AWS_ACCESS_KEY_ID=admin ; export AWS_SECRET_ACCESS_KEY=key&lt;/code&gt; as the admin credentials to access the object store.&lt;/li&gt; 
 &lt;li&gt;Run &lt;code&gt;weed server -dir=/some/data/dir -s3&lt;/code&gt; to start one master, one volume server, one filer, and one S3 gateway.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Also, to increase capacity, just add more volume servers by running &lt;code&gt;weed volume -dir="/some/data/dir2" -mserver="&amp;lt;master_host&amp;gt;:9333" -port=8081&lt;/code&gt; locally, or on a different machine, or on thousands of machines. That is it!&lt;/p&gt; 
&lt;h2&gt;Quick Start SeaweedFS S3 on AWS&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Setup fast production-ready &lt;a href="https://aws.amazon.com/marketplace/pp/prodview-nzelz5gprlrjc"&gt;SeaweedFS S3 on AWS with cloudformation&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h1&gt;Introduction&lt;/h1&gt; 
&lt;p&gt;SeaweedFS is a simple and highly scalable distributed file system. There are two objectives:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;to store billions of files!&lt;/li&gt; 
 &lt;li&gt;to serve the files fast!&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;SeaweedFS started as an Object Store to handle small files efficiently. Instead of managing all file metadata in a central master, the central master only manages volumes on volume servers, and these volume servers manage files and their metadata. This relieves concurrency pressure from the central master and spreads file metadata into volume servers, allowing faster file access (O(1), usually just one disk read operation).&lt;/p&gt; 
&lt;p&gt;There is only 40 bytes of disk storage overhead for each file's metadata. It is so simple with O(1) disk reads that you are welcome to challenge the performance with your actual use cases.&lt;/p&gt; 
&lt;p&gt;SeaweedFS started by implementing &lt;a href="http://www.usenix.org/event/osdi10/tech/full_papers/Beaver.pdf"&gt;Facebook's Haystack design paper&lt;/a&gt;. Also, SeaweedFS implements erasure coding with ideas from &lt;a href="https://www.usenix.org/system/files/conference/osdi14/osdi14-paper-muralidhar.pdf"&gt;f4: Facebook’s Warm BLOB Storage System&lt;/a&gt;, and has a lot of similarities with &lt;a href="https://www.usenix.org/system/files/fast21-pan.pdf"&gt;Facebook’s Tectonic Filesystem&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;On top of the object store, optional &lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Directories-and-Files"&gt;Filer&lt;/a&gt; can support directories and POSIX attributes. Filer is a separate linearly-scalable stateless server with customizable metadata stores, e.g., MySql, Postgres, Redis, Cassandra, HBase, Mongodb, Elastic Search, LevelDB, RocksDB, Sqlite, MemSql, TiDB, Etcd, CockroachDB, YDB, etc.&lt;/p&gt; 
&lt;p&gt;For any distributed key value stores, the large values can be offloaded to SeaweedFS. With the fast access speed and linearly scalable capacity, SeaweedFS can work as a distributed &lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Filer-as-a-Key-Large-Value-Store"&gt;Key-Large-Value store&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;SeaweedFS can transparently integrate with the cloud. With hot data on local cluster, and warm data on the cloud with O(1) access time, SeaweedFS can achieve both fast local access time and elastic cloud storage capacity. What's more, the cloud storage access API cost is minimized. Faster and cheaper than direct cloud storage!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Features&lt;/h1&gt; 
&lt;h2&gt;Additional Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Can choose no replication or different replication levels, rack and data center aware.&lt;/li&gt; 
 &lt;li&gt;Automatic master servers failover - no single point of failure (SPOF).&lt;/li&gt; 
 &lt;li&gt;Automatic Gzip compression depending on file MIME type.&lt;/li&gt; 
 &lt;li&gt;Automatic compaction to reclaim disk space after deletion or update.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Store-file-with-a-Time-To-Live"&gt;Automatic entry TTL expiration&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Any server with some disk space can add to the total storage space.&lt;/li&gt; 
 &lt;li&gt;Adding/Removing servers does &lt;strong&gt;not&lt;/strong&gt; cause any data re-balancing unless triggered by admin commands.&lt;/li&gt; 
 &lt;li&gt;Optional picture resizing.&lt;/li&gt; 
 &lt;li&gt;Support ETag, Accept-Range, Last-Modified, etc.&lt;/li&gt; 
 &lt;li&gt;Support in-memory/leveldb/readonly mode tuning for memory/performance balance.&lt;/li&gt; 
 &lt;li&gt;Support rebalancing the writable and readonly volumes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Tiered-Storage"&gt;Customizable Multiple Storage Tiers&lt;/a&gt;: Customizable storage disk types to balance performance and cost.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Cloud-Tier"&gt;Transparent cloud integration&lt;/a&gt;: unlimited capacity via tiered cloud storage for warm data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Erasure-coding-for-warm-storage"&gt;Erasure Coding for warm storage&lt;/a&gt; Rack-Aware 10.4 erasure coding reduces storage cost and increases availability.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Filer Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Directories-and-Files"&gt;Filer server&lt;/a&gt; provides "normal" directories and files via HTTP.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Filer-Stores"&gt;File TTL&lt;/a&gt; automatically expires file metadata and actual file data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/FUSE-Mount"&gt;Mount filer&lt;/a&gt; reads and writes files directly as a local directory via FUSE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Filer-Store-Replication"&gt;Filer Store Replication&lt;/a&gt; enables HA for filer meta data stores.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Filer-Active-Active-cross-cluster-continuous-synchronization"&gt;Active-Active Replication&lt;/a&gt; enables asynchronous one-way or two-way cross cluster continuous replication.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Amazon-S3-API"&gt;Amazon S3 compatible API&lt;/a&gt; accesses files with S3 tooling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Hadoop-Compatible-File-System"&gt;Hadoop Compatible File System&lt;/a&gt; accesses files from Hadoop/Spark/Flink/etc or even runs HBase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Async-Replication-to-Cloud"&gt;Async Replication To Cloud&lt;/a&gt; has extremely fast local access and backups to Amazon S3, Google Cloud Storage, Azure, BackBlaze.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/WebDAV"&gt;WebDAV&lt;/a&gt; accesses as a mapped drive on Mac and Windows, or from mobile devices.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Filer-Data-Encryption"&gt;AES256-GCM Encrypted Storage&lt;/a&gt; safely stores the encrypted data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Data-Structure-for-Large-Files"&gt;Super Large Files&lt;/a&gt; stores large or super large files in tens of TB.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Cloud-Drive-Architecture"&gt;Cloud Drive&lt;/a&gt; mounts cloud storage to local cluster, cached for fast read and write with asynchronous write back.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Gateway-to-Remote-Object-Storage"&gt;Gateway to Remote Object Store&lt;/a&gt; mirrors bucket operations to remote object storage, in addition to &lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Cloud-Drive-Architecture"&gt;Cloud Drive&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Kubernetes&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs-csi-driver"&gt;Kubernetes CSI Driver&lt;/a&gt; A Container Storage Interface (CSI) Driver. &lt;a href="https://hub.docker.com/r/chrislusf/seaweedfs-csi-driver/"&gt;&lt;img src="https://img.shields.io/docker/pulls/chrislusf/seaweedfs-csi-driver.svg?maxAge=4800" alt="Docker Pulls" /&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs-operator"&gt;SeaweedFS Operator&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Example: Using Seaweed Object Store&lt;/h2&gt; 
&lt;p&gt;By default, the master node runs on port 9333, and the volume nodes run on port 8080. Let's start one master node, and two volume nodes on port 8080 and 8081. Ideally, they should be started from different machines. We'll use localhost as an example.&lt;/p&gt; 
&lt;p&gt;SeaweedFS uses HTTP REST operations to read, write, and delete. The responses are in JSON or JSONP format.&lt;/p&gt; 
&lt;h3&gt;Start Master Server&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; ./weed master
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Start Volume Servers&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; weed volume -dir="/tmp/data1" -max=5  -mserver="localhost:9333" -port=8080 &amp;amp;
&amp;gt; weed volume -dir="/tmp/data2" -max=10 -mserver="localhost:9333" -port=8081 &amp;amp;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Write File&lt;/h3&gt; 
&lt;p&gt;To upload a file: first, send a HTTP POST, PUT, or GET request to &lt;code&gt;/dir/assign&lt;/code&gt; to get an &lt;code&gt;fid&lt;/code&gt; and a volume server URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; curl http://localhost:9333/dir/assign
{"count":1,"fid":"3,01637037d6","url":"127.0.0.1:8080","publicUrl":"localhost:8080"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Second, to store the file content, send a HTTP multi-part POST request to &lt;code&gt;url + '/' + fid&lt;/code&gt; from the response:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; curl -F file=@/home/chris/myphoto.jpg http://127.0.0.1:8080/3,01637037d6
{"name":"myphoto.jpg","size":43234,"eTag":"1cc0118e"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To update, send another POST request with updated file content.&lt;/p&gt; 
&lt;p&gt;For deletion, send an HTTP DELETE request to the same &lt;code&gt;url + '/' + fid&lt;/code&gt; URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; curl -X DELETE http://127.0.0.1:8080/3,01637037d6
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Save File Id&lt;/h3&gt; 
&lt;p&gt;Now, you can save the &lt;code&gt;fid&lt;/code&gt;, 3,01637037d6 in this case, to a database field.&lt;/p&gt; 
&lt;p&gt;The number 3 at the start represents a volume id. After the comma, it's one file key, 01, and a file cookie, 637037d6.&lt;/p&gt; 
&lt;p&gt;The volume id is an unsigned 32-bit integer. The file key is an unsigned 64-bit integer. The file cookie is an unsigned 32-bit integer, used to prevent URL guessing.&lt;/p&gt; 
&lt;p&gt;The file key and file cookie are both coded in hex. You can store the &amp;lt;volume id, file key, file cookie&amp;gt; tuple in your own format, or simply store the &lt;code&gt;fid&lt;/code&gt; as a string.&lt;/p&gt; 
&lt;p&gt;If stored as a string, in theory, you would need 8+1+16+8=33 bytes. A char(33) would be enough, if not more than enough, since most uses will not need 2^32 volumes.&lt;/p&gt; 
&lt;p&gt;If space is really a concern, you can store the file id in your own format. You would need one 4-byte integer for volume id, 8-byte long number for file key, and a 4-byte integer for the file cookie. So 16 bytes are more than enough.&lt;/p&gt; 
&lt;h3&gt;Read File&lt;/h3&gt; 
&lt;p&gt;Here is an example of how to render the URL.&lt;/p&gt; 
&lt;p&gt;First look up the volume server's URLs by the file's volumeId:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;&amp;gt; curl http://localhost:9333/dir/lookup?volumeId=3
{"volumeId":"3","locations":[{"publicUrl":"localhost:8080","url":"localhost:8080"}]}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Since (usually) there are not too many volume servers, and volumes don't move often, you can cache the results most of the time. Depending on the replication type, one volume can have multiple replica locations. Just randomly pick one location to read.&lt;/p&gt; 
&lt;p&gt;Now you can take the public URL, render the URL or directly read from the volume server via URL:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; http://localhost:8080/3,01637037d6.jpg
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Notice we add a file extension ".jpg" here. It's optional and just one way for the client to specify the file content type.&lt;/p&gt; 
&lt;p&gt;If you want a nicer URL, you can use one of these alternative URL formats:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; http://localhost:8080/3/01637037d6/my_preferred_name.jpg
 http://localhost:8080/3/01637037d6.jpg
 http://localhost:8080/3,01637037d6.jpg
 http://localhost:8080/3/01637037d6
 http://localhost:8080/3,01637037d6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want to get a scaled version of an image, you can add some params:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://localhost:8080/3/01637037d6.jpg?height=200&amp;amp;width=200
http://localhost:8080/3/01637037d6.jpg?height=200&amp;amp;width=200&amp;amp;mode=fit
http://localhost:8080/3/01637037d6.jpg?height=200&amp;amp;width=200&amp;amp;mode=fill
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Rack-Aware and Data Center-Aware Replication&lt;/h3&gt; 
&lt;p&gt;SeaweedFS applies the replication strategy at a volume level. So, when you are getting a file id, you can specify the replication strategy. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl http://localhost:9333/dir/assign?replication=001
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The replication parameter options are:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;000: no replication
001: replicate once on the same rack
010: replicate once on a different rack, but same data center
100: replicate once on a different data center
200: replicate twice on two different data center
110: replicate once on a different rack, and once on a different data center
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More details about replication can be found &lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Replication"&gt;on the wiki&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;You can also set the default replication strategy when starting the master server.&lt;/p&gt; 
&lt;h3&gt;Allocate File Key on Specific Data Center&lt;/h3&gt; 
&lt;p&gt;Volume servers can be started with a specific data center name:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; weed volume -dir=/tmp/1 -port=8080 -dataCenter=dc1
 weed volume -dir=/tmp/2 -port=8081 -dataCenter=dc2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;When requesting a file key, an optional "dataCenter" parameter can limit the assigned volume to the specific data center. For example, this specifies that the assigned volume should be limited to 'dc1':&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt; http://localhost:9333/dir/assign?dataCenter=dc1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Other Features&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Failover-Master-Server"&gt;No Single Point of Failure&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Optimization#insert-with-your-own-keys"&gt;Insert with your own keys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Optimization#upload-large-files"&gt;Chunking large files&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/seaweedfs/seaweedfs/wiki/Optimization#collection-as-a-simple-name-space"&gt;Collection as a Simple Name Space&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Object Store Architecture&lt;/h2&gt; 
&lt;p&gt;Usually distributed file systems split each file into chunks, a central master keeps a mapping of filenames, chunk indices to chunk handles, and also which chunks each chunk server has.&lt;/p&gt; 
&lt;p&gt;The main drawback is that the central master can't handle many small files efficiently, and since all read requests need to go through the chunk master, so it might not scale well for many concurrent users.&lt;/p&gt; 
&lt;p&gt;Instead of managing chunks, SeaweedFS manages data volumes in the master server. Each data volume is 32GB in size, and can hold a lot of files. And each storage node can have many data volumes. So the master node only needs to store the metadata about the volumes, which is a fairly small amount of data and is generally stable.&lt;/p&gt; 
&lt;p&gt;The actual file metadata is stored in each volume on volume servers. Since each volume server only manages metadata of files on its own disk, with only 16 bytes for each file, all file access can read file metadata just from memory and only needs one disk operation to actually read file data.&lt;/p&gt; 
&lt;p&gt;For comparison, consider that an xfs inode structure in Linux is 536 bytes.&lt;/p&gt; 
&lt;h3&gt;Master Server and Volume Server&lt;/h3&gt; 
&lt;p&gt;The architecture is fairly simple. The actual data is stored in volumes on storage nodes. One volume server can have multiple volumes, and can both support read and write access with basic authentication.&lt;/p&gt; 
&lt;p&gt;All volumes are managed by a master server. The master server contains the volume id to volume server mapping. This is fairly static information, and can be easily cached.&lt;/p&gt; 
&lt;p&gt;On each write request, the master server also generates a file key, which is a growing 64-bit unsigned integer. Since write requests are not generally as frequent as read requests, one master server should be able to handle the concurrency well.&lt;/p&gt; 
&lt;h3&gt;Write and Read files&lt;/h3&gt; 
&lt;p&gt;When a client sends a write request, the master server returns (volume id, file key, file cookie, volume node URL) for the file. The client then contacts the volume node and POSTs the file content.&lt;/p&gt; 
&lt;p&gt;When a client needs to read a file based on (volume id, file key, file cookie), it asks the master server by the volume id for the (volume node URL, volume node public URL), or retrieves this from a cache. Then the client can GET the content, or just render the URL on web pages and let browsers fetch the content.&lt;/p&gt; 
&lt;p&gt;Please see the example for details on the write-read process.&lt;/p&gt; 
&lt;h3&gt;Storage Size&lt;/h3&gt; 
&lt;p&gt;In the current implementation, each volume can hold 32 gibibytes (32GiB or 8x2^32 bytes). This is because we align content to 8 bytes. We can easily increase this to 64GiB, or 128GiB, or more, by changing 2 lines of code, at the cost of some wasted padding space due to alignment.&lt;/p&gt; 
&lt;p&gt;There can be 4 gibibytes (4GiB or 2^32 bytes) of volumes. So the total system size is 8 x 4GiB x 4GiB which is 128 exbibytes (128EiB or 2^67 bytes).&lt;/p&gt; 
&lt;p&gt;Each individual file size is limited to the volume size.&lt;/p&gt; 
&lt;h3&gt;Saving memory&lt;/h3&gt; 
&lt;p&gt;All file meta information stored on a volume server is readable from memory without disk access. Each file takes just a 16-byte map entry of &amp;lt;64bit key, 32bit offset, 32bit size&amp;gt;. Of course, each map entry has its own space cost for the map. But usually the disk space runs out before the memory does.&lt;/p&gt; 
&lt;h3&gt;Tiered Storage to the cloud&lt;/h3&gt; 
&lt;p&gt;The local volume servers are much faster, while cloud storages have elastic capacity and are actually more cost-efficient if not accessed often (usually free to upload, but relatively costly to access). With the append-only structure and O(1) access time, SeaweedFS can take advantage of both local and cloud storage by offloading the warm data to the cloud.&lt;/p&gt; 
&lt;p&gt;Usually hot data are fresh and warm data are old. SeaweedFS puts the newly created volumes on local servers, and optionally upload the older volumes on the cloud. If the older data are accessed less often, this literally gives you unlimited capacity with limited local servers, and still fast for new data.&lt;/p&gt; 
&lt;p&gt;With the O(1) access time, the network latency cost is kept at minimum.&lt;/p&gt; 
&lt;p&gt;If the hot/warm data is split as 20/80, with 20 servers, you can achieve storage capacity of 100 servers. That's a cost saving of 80%! Or you can repurpose the 80 servers to store new data also, and get 5X storage throughput.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Compared to Other File Systems&lt;/h2&gt; 
&lt;p&gt;Most other distributed file systems seem more complicated than necessary.&lt;/p&gt; 
&lt;p&gt;SeaweedFS is meant to be fast and simple, in both setup and operation. If you do not understand how it works when you reach here, we've failed! Please raise an issue with any questions or update this file with clarifications.&lt;/p&gt; 
&lt;p&gt;SeaweedFS is constantly moving forward. Same with other systems. These comparisons can be outdated quickly. Please help to keep them updated.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Compared to HDFS&lt;/h3&gt; 
&lt;p&gt;HDFS uses the chunk approach for each file, and is ideal for storing large files.&lt;/p&gt; 
&lt;p&gt;SeaweedFS is ideal for serving relatively smaller files quickly and concurrently.&lt;/p&gt; 
&lt;p&gt;SeaweedFS can also store extra large files by splitting them into manageable data chunks, and store the file ids of the data chunks into a meta chunk. This is managed by "weed upload/download" tool, and the weed master or volume servers are agnostic about it.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Compared to GlusterFS, Ceph&lt;/h3&gt; 
&lt;p&gt;The architectures are mostly the same. SeaweedFS aims to store and read files fast, with a simple and flat architecture. The main differences are&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;SeaweedFS optimizes for small files, ensuring O(1) disk seek operation, and can also handle large files.&lt;/li&gt; 
 &lt;li&gt;SeaweedFS statically assigns a volume id for a file. Locating file content becomes just a lookup of the volume id, which can be easily cached.&lt;/li&gt; 
 &lt;li&gt;SeaweedFS Filer metadata store can be any well-known and proven data store, e.g., Redis, Cassandra, HBase, Mongodb, Elastic Search, MySql, Postgres, Sqlite, MemSql, TiDB, CockroachDB, Etcd, YDB etc, and is easy to customize.&lt;/li&gt; 
 &lt;li&gt;SeaweedFS Volume server also communicates directly with clients via HTTP, supporting range queries, direct uploads, etc.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;System&lt;/th&gt; 
   &lt;th&gt;File Metadata&lt;/th&gt; 
   &lt;th&gt;File Content Read&lt;/th&gt; 
   &lt;th&gt;POSIX&lt;/th&gt; 
   &lt;th&gt;REST API&lt;/th&gt; 
   &lt;th&gt;Optimized for large number of small files&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SeaweedFS&lt;/td&gt; 
   &lt;td&gt;lookup volume id, cacheable&lt;/td&gt; 
   &lt;td&gt;O(1) disk seek&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SeaweedFS Filer&lt;/td&gt; 
   &lt;td&gt;Linearly Scalable, Customizable&lt;/td&gt; 
   &lt;td&gt;O(1) disk seek&lt;/td&gt; 
   &lt;td&gt;FUSE&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;GlusterFS&lt;/td&gt; 
   &lt;td&gt;hashing&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;FUSE, NFS&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ceph&lt;/td&gt; 
   &lt;td&gt;hashing + rules&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;FUSE&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MooseFS&lt;/td&gt; 
   &lt;td&gt;in memory&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;FUSE&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;MinIO&lt;/td&gt; 
   &lt;td&gt;separate meta file for each file&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;Yes&lt;/td&gt; 
   &lt;td&gt;No&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Compared to GlusterFS&lt;/h3&gt; 
&lt;p&gt;GlusterFS stores files, both directories and content, in configurable volumes called "bricks".&lt;/p&gt; 
&lt;p&gt;GlusterFS hashes the path and filename into ids, and assigned to virtual volumes, and then mapped to "bricks".&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Compared to MooseFS&lt;/h3&gt; 
&lt;p&gt;MooseFS chooses to neglect small file issue. From moosefs 3.0 manual, "even a small file will occupy 64KiB plus additionally 4KiB of checksums and 1KiB for the header", because it "was initially designed for keeping large amounts (like several thousands) of very big files"&lt;/p&gt; 
&lt;p&gt;MooseFS Master Server keeps all meta data in memory. Same issue as HDFS namenode.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Compared to Ceph&lt;/h3&gt; 
&lt;p&gt;Ceph can be setup similar to SeaweedFS as a key-&amp;gt;blob store. It is much more complicated, with the need to support layers on top of it. &lt;a href="https://github.com/seaweedfs/seaweedfs/issues/120"&gt;Here is a more detailed comparison&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;SeaweedFS has a centralized master group to look up free volumes, while Ceph uses hashing and metadata servers to locate its objects. Having a centralized master makes it easy to code and manage.&lt;/p&gt; 
&lt;p&gt;Ceph, like SeaweedFS, is based on the object store RADOS. Ceph is rather complicated with mixed reviews.&lt;/p&gt; 
&lt;p&gt;Ceph uses CRUSH hashing to automatically manage data placement, which is efficient to locate the data. But the data has to be placed according to the CRUSH algorithm. Any wrong configuration would cause data loss. Topology changes, such as adding new servers to increase capacity, will cause data migration with high IO cost to fit the CRUSH algorithm. SeaweedFS places data by assigning them to any writable volumes. If writes to one volume failed, just pick another volume to write. Adding more volumes is also as simple as it can be.&lt;/p&gt; 
&lt;p&gt;SeaweedFS is optimized for small files. Small files are stored as one continuous block of content, with at most 8 unused bytes between files. Small file access is O(1) disk read.&lt;/p&gt; 
&lt;p&gt;SeaweedFS Filer uses off-the-shelf stores, such as MySql, Postgres, Sqlite, Mongodb, Redis, Elastic Search, Cassandra, HBase, MemSql, TiDB, CockroachCB, Etcd, YDB, to manage file directories. These stores are proven, scalable, and easier to manage.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;SeaweedFS&lt;/th&gt; 
   &lt;th&gt;comparable to Ceph&lt;/th&gt; 
   &lt;th&gt;advantage&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Master&lt;/td&gt; 
   &lt;td&gt;MDS&lt;/td&gt; 
   &lt;td&gt;simpler&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Volume&lt;/td&gt; 
   &lt;td&gt;OSD&lt;/td&gt; 
   &lt;td&gt;optimized for small files&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Filer&lt;/td&gt; 
   &lt;td&gt;Ceph FS&lt;/td&gt; 
   &lt;td&gt;linearly scalable, Customizable, O(1) or O(logN)&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Compared to MinIO&lt;/h3&gt; 
&lt;p&gt;MinIO follows AWS S3 closely and is ideal for testing for S3 API. It has good UI, policies, versionings, etc. SeaweedFS is trying to catch up here. It is also possible to put MinIO as a gateway in front of SeaweedFS later.&lt;/p&gt; 
&lt;p&gt;MinIO metadata are in simple files. Each file write will incur extra writes to corresponding meta file.&lt;/p&gt; 
&lt;p&gt;MinIO does not have optimization for lots of small files. The files are simply stored as is to local disks. Plus the extra meta file and shards for erasure coding, it only amplifies the LOSF problem.&lt;/p&gt; 
&lt;p&gt;MinIO has multiple disk IO to read one file. SeaweedFS has O(1) disk reads, even for erasure coded files.&lt;/p&gt; 
&lt;p&gt;MinIO has full-time erasure coding. SeaweedFS uses replication on hot data for faster speed and optionally applies erasure coding on warm data.&lt;/p&gt; 
&lt;p&gt;MinIO does not have POSIX-like API support.&lt;/p&gt; 
&lt;p&gt;MinIO has specific requirements on storage layout. It is not flexible to adjust capacity. In SeaweedFS, just start one volume server pointing to the master. That's all.&lt;/p&gt; 
&lt;h2&gt;Dev Plan&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;More tools and documentation, on how to manage and scale the system.&lt;/li&gt; 
 &lt;li&gt;Read and write stream data.&lt;/li&gt; 
 &lt;li&gt;Support structured data.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This is a super exciting project! And we need helpers and &lt;a href="https://www.patreon.com/seaweedfs"&gt;support&lt;/a&gt;!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Installation Guide&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Installation guide for users who are not familiar with golang&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Step 1: install go on your machine and setup the environment by following the instructions at:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://golang.org/doc/install"&gt;https://golang.org/doc/install&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;make sure to define your $GOPATH&lt;/p&gt; 
&lt;p&gt;Step 2: checkout this repo:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/seaweedfs/seaweedfs.git
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Step 3: download, compile, and install the project by executing the following command&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd seaweedfs/weed &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Once this is done, you will find the executable "weed" in your &lt;code&gt;$GOPATH/bin&lt;/code&gt; directory&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Disk Related Topics&lt;/h2&gt; 
&lt;h3&gt;Hard Drive Performance&lt;/h3&gt; 
&lt;p&gt;When testing read performance on SeaweedFS, it basically becomes a performance test of your hard drive's random read speed. Hard drives usually get 100MB/s~200MB/s.&lt;/p&gt; 
&lt;h3&gt;Solid State Disk&lt;/h3&gt; 
&lt;p&gt;To modify or delete small files, SSD must delete a whole block at a time, and move content in existing blocks to a new block. SSD is fast when brand new, but will get fragmented over time and you have to garbage collect, compacting blocks. SeaweedFS is friendly to SSD since it is append-only. Deletion and compaction are done on volume level in the background, not slowing reading and not causing fragmentation.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Benchmark&lt;/h2&gt; 
&lt;p&gt;My Own Unscientific Single Machine Results on Mac Book with Solid State Disk, CPU: 1 Intel Core i7 2.6GHz.&lt;/p&gt; 
&lt;p&gt;Write 1 million 1KB file:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Concurrency Level:      16
Time taken for tests:   66.753 seconds
Completed requests:      1048576
Failed requests:        0
Total transferred:      1106789009 bytes
Requests per second:    15708.23 [#/sec]
Transfer rate:          16191.69 [Kbytes/sec]

Connection Times (ms)
              min      avg        max      std
Total:        0.3      1.0       84.3      0.9

Percentage of the requests served within a certain time (ms)
   50%      0.8 ms
   66%      1.0 ms
   75%      1.1 ms
   80%      1.2 ms
   90%      1.4 ms
   95%      1.7 ms
   98%      2.1 ms
   99%      2.6 ms
  100%     84.3 ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Randomly read 1 million files:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Concurrency Level:      16
Time taken for tests:   22.301 seconds
Completed requests:      1048576
Failed requests:        0
Total transferred:      1106812873 bytes
Requests per second:    47019.38 [#/sec]
Transfer rate:          48467.57 [Kbytes/sec]

Connection Times (ms)
              min      avg        max      std
Total:        0.0      0.3       54.1      0.2

Percentage of the requests served within a certain time (ms)
   50%      0.3 ms
   90%      0.4 ms
   98%      0.6 ms
   99%      0.7 ms
  100%     54.1 ms
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run WARP and launch a mixed benchmark.&lt;/h3&gt; 
&lt;pre&gt;&lt;code&gt;make benchmark
warp: Benchmark data written to "warp-mixed-2023-10-16[102354]-l70a.csv.zst"                                                                                                                                                                                               
Mixed operations.
Operation: DELETE, 10%, Concurrency: 20, Ran 4m59s.
 * Throughput: 6.19 obj/s

Operation: GET, 45%, Concurrency: 20, Ran 5m0s.
 * Throughput: 279.85 MiB/s, 27.99 obj/s

Operation: PUT, 15%, Concurrency: 20, Ran 5m0s.
 * Throughput: 89.86 MiB/s, 8.99 obj/s

Operation: STAT, 30%, Concurrency: 20, Ran 5m0s.
 * Throughput: 18.63 obj/s

Cluster Total: 369.74 MiB/s, 61.79 obj/s, 0 errors over 5m0s.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To see segmented request statistics, use the --analyze.v parameter.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;warp analyze --analyze.v warp-mixed-2023-10-16[102354]-l70a.csv.zst
18642 operations loaded... Done!
Mixed operations.
----------------------------------------
Operation: DELETE - total: 1854, 10.0%, Concurrency: 20, Ran 5m0s, starting 2023-10-16 10:23:57.115 +0500 +05
 * Throughput: 6.19 obj/s

Requests considered: 1855:
 * Avg: 104ms, 50%: 30ms, 90%: 207ms, 99%: 1.355s, Fastest: 1ms, Slowest: 4.613s, StdDev: 320ms

----------------------------------------
Operation: GET - total: 8388, 45.3%, Size: 10485760 bytes. Concurrency: 20, Ran 5m0s, starting 2023-10-16 10:23:57.12 +0500 +05
 * Throughput: 279.77 MiB/s, 27.98 obj/s

Requests considered: 8389:
 * Avg: 221ms, 50%: 106ms, 90%: 492ms, 99%: 1.739s, Fastest: 8ms, Slowest: 8.633s, StdDev: 383ms
 * TTFB: Avg: 81ms, Best: 2ms, 25th: 24ms, Median: 39ms, 75th: 65ms, 90th: 171ms, 99th: 669ms, Worst: 4.783s StdDev: 163ms
 * First Access: Avg: 240ms, 50%: 105ms, 90%: 511ms, 99%: 2.08s, Fastest: 12ms, Slowest: 8.633s, StdDev: 480ms
 * First Access TTFB: Avg: 88ms, Best: 2ms, 25th: 24ms, Median: 38ms, 75th: 64ms, 90th: 179ms, 99th: 919ms, Worst: 4.783s StdDev: 199ms
 * Last Access: Avg: 219ms, 50%: 106ms, 90%: 463ms, 99%: 1.782s, Fastest: 9ms, Slowest: 8.633s, StdDev: 416ms
 * Last Access TTFB: Avg: 81ms, Best: 2ms, 25th: 24ms, Median: 39ms, 75th: 65ms, 90th: 161ms, 99th: 657ms, Worst: 4.783s StdDev: 176ms

----------------------------------------
Operation: PUT - total: 2688, 14.5%, Size: 10485760 bytes. Concurrency: 20, Ran 5m0s, starting 2023-10-16 10:23:57.115 +0500 +05
 * Throughput: 89.83 MiB/s, 8.98 obj/s

Requests considered: 2689:
 * Avg: 1.165s, 50%: 878ms, 90%: 2.015s, 99%: 5.74s, Fastest: 99ms, Slowest: 8.264s, StdDev: 968ms

----------------------------------------
Operation: STAT - total: 5586, 30.2%, Concurrency: 20, Ran 5m0s, starting 2023-10-16 10:23:57.113 +0500 +05
 * Throughput: 18.63 obj/s

Requests considered: 5587:
 * Avg: 15ms, 50%: 11ms, 90%: 34ms, 99%: 80ms, Fastest: 0s, Slowest: 245ms, StdDev: 17ms
 * First Access: Avg: 14ms, 50%: 10ms, 90%: 33ms, 99%: 69ms, Fastest: 0s, Slowest: 203ms, StdDev: 16ms
 * Last Access: Avg: 15ms, 50%: 11ms, 90%: 34ms, 99%: 74ms, Fastest: 0s, Slowest: 203ms, StdDev: 17ms

Cluster Total: 369.64 MiB/s, 61.77 obj/s, 0 errors over 5m0s.
Total Errors:0.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Enterprise&lt;/h2&gt; 
&lt;p&gt;For enterprise users, please visit &lt;a href="https://seaweedfs.com"&gt;seaweedfs.com&lt;/a&gt; for the SeaweedFS Enterprise Edition, which has a self-healing storage format with better data protection.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt; 
&lt;p&gt;The text of this page is available for modification and reuse under the terms of the Creative Commons Attribution-Sharealike 3.0 Unported License and the GNU Free Documentation License (unversioned, with no invariant sections, front-cover texts, or back-cover texts).&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/seaweedfs/seaweedfs/master/#table-of-contents"&gt;Back to TOC&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stargazers over time&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://starchart.cc/chrislusf/seaweedfs"&gt;&lt;img src="https://starchart.cc/chrislusf/seaweedfs.svg?sanitize=true" alt="Stargazers over time" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>minio/minio</title>
      <link>https://github.com/minio/minio</link>
      <description>&lt;p&gt;MinIO is a high-performance, S3 compatible object store, open sourced under GNU AGPLv3 license.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MinIO Quickstart Guide&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://slack.min.io"&gt;&lt;img src="https://slack.min.io/slack?type=svg" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/minio/minio/"&gt;&lt;img src="https://img.shields.io/docker/pulls/minio/minio.svg?maxAge=604800" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;a href="https://github.com/minio/minio/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-AGPL%20V3-blue" alt="license" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://min.io"&gt;&lt;img src="https://raw.githubusercontent.com/minio/minio/master/.github/logo.svg?sanitize=true" alt="MinIO" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MinIO is a high-performance, S3-compatible object storage solution released under the GNU AGPL v3.0 license. Designed for speed and scalability, it powers AI/ML, analytics, and data-intensive workloads with industry-leading performance.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;S3 API Compatible – Seamless integration with existing S3 tools&lt;/li&gt; 
 &lt;li&gt;Built for AI &amp;amp; Analytics – Optimized for large-scale data pipelines&lt;/li&gt; 
 &lt;li&gt;High Performance – Ideal for demanding storage workloads.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This README provides instructions for building MinIO from source and deploying onto baremetal hardware. Use the &lt;a href="https://github.com/minio/docs"&gt;MinIO Documentation&lt;/a&gt; project to build and host a local copy of the documentation.&lt;/p&gt; 
&lt;h2&gt;MinIO is Open Source Software&lt;/h2&gt; 
&lt;p&gt;We designed MinIO as Open Source software for the Open Source software community. We encourage the community to remix, redesign, and reshare MinIO under the terms of the AGPLv3 license.&lt;/p&gt; 
&lt;p&gt;All usage of MinIO in your application stack requires validation against AGPLv3 obligations, which include but are not limited to the release of modified code to the community from which you have benefited. Any commercial/proprietary usage of the AGPLv3 software, including repackaging or reselling services/features, is done at your own risk.&lt;/p&gt; 
&lt;p&gt;The AGPLv3 provides no obligation by any party to support, maintain, or warranty the original or any modified work. All support is provided on a best-effort basis through Github and our &lt;a href="https://raw.githubusercontent.com/minio/minio/master/https//slack.min.io"&gt;Slack&lt;/a&gt; channel, and any member of the community is welcome to contribute and assist others in their usage of the software.&lt;/p&gt; 
&lt;p&gt;MinIO &lt;a href="https://www.min.io/product/aistor"&gt;AIStor&lt;/a&gt; includes enterprise-grade support and licensing for workloads which require commercial or proprietary usage and production-level SLA/SLO-backed support. For more information, &lt;a href="https://min.io/pricing"&gt;reach out for a quote&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Source-Only Distribution&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; The MinIO community edition is now distributed as source code only. We will no longer provide pre-compiled binary releases for the community version.&lt;/p&gt; 
&lt;h3&gt;Installing Latest MinIO Community Edition&lt;/h3&gt; 
&lt;p&gt;To use MinIO community edition, you have two options:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Install from source&lt;/strong&gt; using &lt;code&gt;go install github.com/minio/minio@latest&lt;/code&gt; (recommended)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a Docker image&lt;/strong&gt; from the provided Dockerfile&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;See the sections below for detailed instructions on each method.&lt;/p&gt; 
&lt;h3&gt;Legacy Binary Releases&lt;/h3&gt; 
&lt;p&gt;Historical pre-compiled binary releases remain available for reference but are no longer maintained:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;GitHub Releases: &lt;a href="https://github.com/minio/minio/releases"&gt;https://github.com/minio/minio/releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Direct downloads: &lt;a href="https://dl.min.io/server/minio/release/"&gt;https://dl.min.io/server/minio/release/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;These legacy binaries will not receive updates.&lt;/strong&gt; We strongly recommend using source builds for access to the latest features, bug fixes, and security updates.&lt;/p&gt; 
&lt;h2&gt;Install from Source&lt;/h2&gt; 
&lt;p&gt;Use the following commands to compile and run a standalone MinIO server from source. If you do not have a working Golang environment, please follow &lt;a href="https://golang.org/doc/install"&gt;How to install Golang&lt;/a&gt;. Minimum version required is &lt;a href="https://golang.org/dl/#stable"&gt;go1.24&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/minio/minio@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can alternatively run &lt;code&gt;go build&lt;/code&gt; and use the &lt;code&gt;GOOS&lt;/code&gt; and &lt;code&gt;GOARCH&lt;/code&gt; environment variables to control the OS and architecture target. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;env GOOS=linux GOARCh=arm64 go build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Start MinIO by running &lt;code&gt;minio server PATH&lt;/code&gt; where &lt;code&gt;PATH&lt;/code&gt; is any empty folder on your local filesystem.&lt;/p&gt; 
&lt;p&gt;The MinIO deployment starts using default root credentials &lt;code&gt;minioadmin:minioadmin&lt;/code&gt;. You can test the deployment using the MinIO Console, an embedded web-based object browser built into MinIO Server. Point a web browser running on the host machine to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; and log in with the root credentials. You can use the Browser to create buckets, upload objects, and browse the contents of the MinIO server.&lt;/p&gt; 
&lt;p&gt;You can also connect using any S3-compatible tool, such as the MinIO Client &lt;code&gt;mc&lt;/code&gt; commandline tool:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mc alias set local http://localhost:9000 minioadmin minioadmin
mc admin info local
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#test-using-minio-client-mc"&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/a&gt; for more information on using the &lt;code&gt;mc&lt;/code&gt; commandline tool. For application developers, see &lt;a href="https://docs.min.io/community/minio-object-store/developers/minio-drivers.html"&gt;https://docs.min.io/community/minio-object-store/developers/minio-drivers.html&lt;/a&gt; to view MinIO SDKs for supported languages.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Production environments using compiled-from-source MinIO binaries do so at their own risk. The AGPLv3 license provides no warranties nor liabilites for any such usage.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Build Docker Image&lt;/h2&gt; 
&lt;p&gt;You can use the &lt;code&gt;docker build .&lt;/code&gt; command to build a Docker image on your local host machine. You must first &lt;a href="https://raw.githubusercontent.com/minio/minio/master/#install-from-source"&gt;build MinIO&lt;/a&gt; and ensure the &lt;code&gt;minio&lt;/code&gt; binary exists in the project root.&lt;/p&gt; 
&lt;p&gt;The following command builds the Docker image using the default &lt;code&gt;Dockerfile&lt;/code&gt; in the root project directory with the repository and image tag &lt;code&gt;myminio:minio&lt;/code&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker build -t myminio:minio .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use &lt;code&gt;docker image ls&lt;/code&gt; to confirm the image exists in your local repository. You can run the server using standard Docker invocation:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;docker run -p 9000:9000 -p 9001:9001 myminio:minio server /tmp/minio --console-address :9001
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Complete documentation for building Docker containers, managing custom images, or loading images into orchestration platforms is out of scope for this documentation. You can modify the &lt;code&gt;Dockerfile&lt;/code&gt; and &lt;code&gt;dockerscripts/socker-entrypoint.sh&lt;/code&gt; as-needed to reflect your specific image requirements.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://docs.min.io/community/minio-object-store/operations/deployments/baremetal-deploy-minio-as-a-container.html#deploy-minio-container"&gt;MinIO Container&lt;/a&gt; documentation for more guidance on running MinIO within a Container image.&lt;/p&gt; 
&lt;h2&gt;Install using Helm Charts&lt;/h2&gt; 
&lt;p&gt;There are two paths for installing MinIO onto Kubernetes infrastructure:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the &lt;a href="https://github.com/minio/operator"&gt;MinIO Operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Use the community-maintained &lt;a href="https://github.com/minio/minio/tree/master/helm/minio"&gt;Helm charts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;See the &lt;a href="https://docs.min.io/community/minio-object-store/operations/deployments/kubernetes.html"&gt;MinIO Documentation&lt;/a&gt; for guidance on deploying using the Operator. The Community Helm chart has instructions in the folder-level README.&lt;/p&gt; 
&lt;h2&gt;Test MinIO Connectivity&lt;/h2&gt; 
&lt;h3&gt;Test using MinIO Console&lt;/h3&gt; 
&lt;p&gt;MinIO Server comes with an embedded web based object browser. Point your web browser to &lt;a href="http://127.0.0.1:9000"&gt;http://127.0.0.1:9000&lt;/a&gt; to ensure your server has started successfully.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] MinIO runs console on random port by default, if you wish to choose a specific port use &lt;code&gt;--console-address&lt;/code&gt; to pick a specific interface and port.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Test using MinIO Client &lt;code&gt;mc&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;mc&lt;/code&gt; provides a modern alternative to UNIX commands like ls, cat, cp, mirror, diff etc. It supports filesystems and Amazon S3 compatible cloud storage services.&lt;/p&gt; 
&lt;p&gt;The following commands set a local alias, validate the server information, create a bucket, copy data to that bucket, and list the contents of the bucket.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;mc alias set local http://localhost:9000 minioadmin minioadmin
mc admin info
mc mb data
mc cp ~/Downloads/mydata data/
mc ls data/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the MinIO Client &lt;a href="https://docs.min.io/community/minio-object-store/reference/minio-mc.html#quickstart"&gt;Quickstart Guide&lt;/a&gt; for further instructions.&lt;/p&gt; 
&lt;h2&gt;Explore Further&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.min.io/community/minio-object-store/index.html"&gt;The MinIO documentation website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.min.io/community/minio-object-store/operations/concepts/erasure-coding.html"&gt;MinIO Erasure Code Overview&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.min.io/community/minio-object-store/reference/minio-mc.html"&gt;Use &lt;code&gt;mc&lt;/code&gt; with MinIO Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.min.io/community/minio-object-store/developers/go/minio-go.html"&gt;Use &lt;code&gt;minio-go&lt;/code&gt; SDK with MinIO Server&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contribute to MinIO Project&lt;/h2&gt; 
&lt;p&gt;Please follow MinIO &lt;a href="https://github.com/minio/minio/raw/master/CONTRIBUTING.md"&gt;Contributor's Guide&lt;/a&gt; for guidance on making new contributions to the repository.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MinIO source is licensed under the &lt;a href="https://github.com/minio/minio/raw/master/LICENSE"&gt;GNU AGPLv3&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;MinIO &lt;a href="https://github.com/minio/minio/tree/master/docs"&gt;documentation&lt;/a&gt; is licensed under &lt;a href="https://creativecommons.org/licenses/by/4.0/"&gt;CC BY 4.0&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/minio/minio/raw/master/COMPLIANCE.md"&gt;License Compliance&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>rclone/rclone</title>
      <link>https://github.com/rclone/rclone</link>
      <description>&lt;p&gt;"rsync for cloud storage" - Google Drive, S3, Dropbox, Backblaze B2, One Drive, Swift, Hubic, Wasabi, Google Cloud Storage, Azure Blob, Azure Files, Yandex Files&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://rclone.org/#gh-light-mode-only"&gt;&lt;img src="https://rclone.org/img/logo_on_light__horizontal_color.svg?sanitize=true" width="50%" alt="rclone logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;!-- markdownlint-disable-next-line no-inline-html --&gt; 
&lt;p&gt;&lt;a href="https://rclone.org/#gh-dark-mode-only"&gt;&lt;img src="https://rclone.org/img/logo_on_dark__horizontal_color.svg?sanitize=true" width="50%" alt="rclone logo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://rclone.org"&gt;Website&lt;/a&gt; | &lt;a href="https://rclone.org/docs/"&gt;Documentation&lt;/a&gt; | &lt;a href="https://rclone.org/downloads/"&gt;Download&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/rclone/rclone/master/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; | &lt;a href="https://rclone.org/changelog/"&gt;Changelog&lt;/a&gt; | &lt;a href="https://rclone.org/install/"&gt;Installation&lt;/a&gt; | &lt;a href="https://forum.rclone.org/"&gt;Forum&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/rclone/rclone/actions?query=workflow%3Abuild"&gt;&lt;img src="https://github.com/rclone/rclone/workflows/build/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/rclone/rclone"&gt;&lt;img src="https://goreportcard.com/badge/github.com/rclone/rclone" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://godoc.org/github.com/rclone/rclone"&gt;&lt;img src="https://godoc.org/github.com/rclone/rclone?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/rclone/rclone"&gt;&lt;img src="https://img.shields.io/docker/pulls/rclone/rclone" alt="Docker Pulls" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Rclone&lt;/h1&gt; 
&lt;p&gt;Rclone &lt;em&gt;("rsync for cloud storage")&lt;/em&gt; is a command-line program to sync files and directories to and from different cloud storage providers.&lt;/p&gt; 
&lt;h2&gt;Storage providers&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;1Fichier &lt;a href="https://rclone.org/fichier/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Akamai Netstorage &lt;a href="https://rclone.org/netstorage/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Alibaba Cloud (Aliyun) Object Storage System (OSS) &lt;a href="https://rclone.org/s3/#alibaba-oss"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Amazon S3 &lt;a href="https://rclone.org/s3/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ArvanCloud Object Storage (AOS) &lt;a href="https://rclone.org/s3/#arvan-cloud-object-storage-aos"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Backblaze B2 &lt;a href="https://rclone.org/b2/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Box &lt;a href="https://rclone.org/box/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Ceph &lt;a href="https://rclone.org/s3/#ceph"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;China Mobile Ecloud Elastic Object Storage (EOS) &lt;a href="https://rclone.org/s3/#china-mobile-ecloud-eos"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cloudflare R2 &lt;a href="https://rclone.org/s3/#cloudflare-r2"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Citrix ShareFile &lt;a href="https://rclone.org/sharefile/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cubbit DS3 &lt;a href="https://rclone.org/s3/#Cubbit"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;DigitalOcean Spaces &lt;a href="https://rclone.org/s3/#digitalocean-spaces"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Digi Storage &lt;a href="https://rclone.org/koofr/#digi-storage"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dreamhost &lt;a href="https://rclone.org/s3/#dreamhost"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Dropbox &lt;a href="https://rclone.org/dropbox/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Enterprise File Fabric &lt;a href="https://rclone.org/filefabric/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Exaba &lt;a href="https://rclone.org/s3/#exaba"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fastmail Files &lt;a href="https://rclone.org/webdav/#fastmail-files"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FileLu &lt;a href="https://rclone.org/filelu/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Files.com &lt;a href="https://rclone.org/filescom/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FlashBlade &lt;a href="https://rclone.org/s3/#pure-storage-flashblade"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;FTP &lt;a href="https://rclone.org/ftp/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;GoFile &lt;a href="https://rclone.org/gofile/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Cloud Storage &lt;a href="https://rclone.org/googlecloudstorage/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Drive &lt;a href="https://rclone.org/drive/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Google Photos &lt;a href="https://rclone.org/googlephotos/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HDFS (Hadoop Distributed Filesystem) &lt;a href="https://rclone.org/hdfs/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hetzner Object Storage &lt;a href="https://rclone.org/s3/#hetzner"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hetzner Storage Box &lt;a href="https://rclone.org/sftp/#hetzner-storage-box"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HiDrive &lt;a href="https://rclone.org/hidrive/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;HTTP &lt;a href="https://rclone.org/http/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Huawei Cloud Object Storage Service(OBS) &lt;a href="https://rclone.org/s3/#huawei-obs"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;iCloud Drive &lt;a href="https://rclone.org/iclouddrive/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ImageKit &lt;a href="https://rclone.org/imagekit/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Internet Archive &lt;a href="https://rclone.org/internetarchive/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Jottacloud &lt;a href="https://rclone.org/jottacloud/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;IBM COS S3 &lt;a href="https://rclone.org/s3/#ibm-cos-s3"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Intercolo Object Storage &lt;a href="https://rclone.org/s3/#intercolo"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;IONOS Cloud &lt;a href="https://rclone.org/s3/#ionos"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Koofr &lt;a href="https://rclone.org/koofr/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Leviia Object Storage &lt;a href="https://rclone.org/s3/#leviia"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Liara Object Storage &lt;a href="https://rclone.org/s3/#liara-object-storage"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Linkbox &lt;a href="https://rclone.org/linkbox"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Linode Object Storage &lt;a href="https://rclone.org/s3/#linode"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Magalu Object Storage &lt;a href="https://rclone.org/s3/#magalu"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Mail.ru Cloud &lt;a href="https://rclone.org/mailru/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Memset Memstore &lt;a href="https://rclone.org/swift/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MEGA &lt;a href="https://rclone.org/mega/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;MEGA S4 Object Storage &lt;a href="https://rclone.org/s3/#mega"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Memory &lt;a href="https://rclone.org/memory/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Azure Blob Storage &lt;a href="https://rclone.org/azureblob/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft Azure Files Storage &lt;a href="https://rclone.org/azurefiles/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Microsoft OneDrive &lt;a href="https://rclone.org/onedrive/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Minio &lt;a href="https://rclone.org/s3/#minio"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Nextcloud &lt;a href="https://rclone.org/webdav/#nextcloud"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Blomp Cloud Storage &lt;a href="https://rclone.org/swift/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OpenDrive &lt;a href="https://rclone.org/opendrive/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OpenStack Swift &lt;a href="https://rclone.org/swift/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Oracle Cloud Storage &lt;a href="https://rclone.org/swift/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Oracle Object Storage &lt;a href="https://rclone.org/oracleobjectstorage/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Outscale &lt;a href="https://rclone.org/s3/#outscale"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OVHcloud Object Storage (Swift) &lt;a href="https://rclone.org/swift/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;OVHcloud Object Storage (S3-compatible) &lt;a href="https://rclone.org/s3/#ovhcloud"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ownCloud &lt;a href="https://rclone.org/webdav/#owncloud"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;pCloud &lt;a href="https://rclone.org/pcloud/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Petabox &lt;a href="https://rclone.org/s3/#petabox"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;PikPak &lt;a href="https://rclone.org/pikpak/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Pixeldrain &lt;a href="https://rclone.org/pixeldrain/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;premiumize.me &lt;a href="https://rclone.org/premiumizeme/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;put.io &lt;a href="https://rclone.org/putio/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Proton Drive &lt;a href="https://rclone.org/protondrive/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;QingStor &lt;a href="https://rclone.org/qingstor/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Qiniu Cloud Object Storage (Kodo) &lt;a href="https://rclone.org/s3/#qiniu"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rabata Cloud Storage &lt;a href="https://rclone.org/s3/#Rabata"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Quatrix &lt;a href="https://rclone.org/quatrix/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Rackspace Cloud Files &lt;a href="https://rclone.org/swift/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;RackCorp Object Storage &lt;a href="https://rclone.org/s3/#RackCorp"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;rsync.net &lt;a href="https://rclone.org/sftp/#rsync-net"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Scaleway &lt;a href="https://rclone.org/s3/#scaleway"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Seafile &lt;a href="https://rclone.org/seafile/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Seagate Lyve Cloud &lt;a href="https://rclone.org/s3/#lyve"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SeaweedFS &lt;a href="https://rclone.org/s3/#seaweedfs"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Selectel Object Storage &lt;a href="https://rclone.org/s3/#selectel"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Servercore Object Storage &lt;a href="https://rclone.org/s3/#servercore"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SFTP &lt;a href="https://rclone.org/sftp/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SMB / CIFS &lt;a href="https://rclone.org/smb/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Spectra Logic &lt;a href="https://rclone.org/s3/#spectralogic"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;StackPath &lt;a href="https://rclone.org/s3/#stackpath"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Storj &lt;a href="https://rclone.org/storj/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;SugarSync &lt;a href="https://rclone.org/sugarsync/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Synology C2 Object Storage &lt;a href="https://rclone.org/s3/#synology-c2"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Tencent Cloud Object Storage (COS) &lt;a href="https://rclone.org/s3/#tencent-cos"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Uloz.to &lt;a href="https://rclone.org/ulozto/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Wasabi &lt;a href="https://rclone.org/s3/#wasabi"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;WebDAV &lt;a href="https://rclone.org/webdav/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Yandex Disk &lt;a href="https://rclone.org/yandex/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Zoho WorkDrive &lt;a href="https://rclone.org/zoho/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Zata.ai &lt;a href="https://rclone.org/s3/#Zata"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;The local filesystem &lt;a href="https://rclone.org/local/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Please see &lt;a href="https://rclone.org/overview/"&gt;the full list of all storage providers and their features&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Virtual storage providers&lt;/h3&gt; 
&lt;p&gt;These backends adapt or modify other storage providers&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alias: rename existing remotes &lt;a href="https://rclone.org/alias/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Cache: cache remotes (DEPRECATED) &lt;a href="https://rclone.org/cache/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chunker: split large files &lt;a href="https://rclone.org/chunker/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Combine: combine multiple remotes into a directory tree &lt;a href="https://rclone.org/combine/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Compress: compress files &lt;a href="https://rclone.org/compress/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Crypt: encrypt files &lt;a href="https://rclone.org/crypt/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Hasher: hash files &lt;a href="https://rclone.org/hasher/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Union: join multiple remotes to work together &lt;a href="https://rclone.org/union/"&gt;&lt;span&gt;📄&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;MD5/SHA-1 hashes checked at all times for file integrity&lt;/li&gt; 
 &lt;li&gt;Timestamps preserved on files&lt;/li&gt; 
 &lt;li&gt;Partial syncs supported on a whole file basis&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/commands/rclone_copy/"&gt;Copy&lt;/a&gt; mode to just copy new/changed files&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/commands/rclone_sync/"&gt;Sync&lt;/a&gt; (one way) mode to make a directory identical&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/bisync/"&gt;Bisync&lt;/a&gt; (two way) to keep two directories in sync bidirectionally&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/commands/rclone_check/"&gt;Check&lt;/a&gt; mode to check for file hash equality&lt;/li&gt; 
 &lt;li&gt;Can sync to and from network, e.g. two different cloud accounts&lt;/li&gt; 
 &lt;li&gt;Optional large file chunking (&lt;a href="https://rclone.org/chunker/"&gt;Chunker&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Optional transparent compression (&lt;a href="https://rclone.org/compress/"&gt;Compress&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Optional encryption (&lt;a href="https://rclone.org/crypt/"&gt;Crypt&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Optional FUSE mount (&lt;a href="https://rclone.org/commands/rclone_mount/"&gt;rclone mount&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;Multi-threaded downloads to local disk&lt;/li&gt; 
 &lt;li&gt;Can &lt;a href="https://rclone.org/commands/rclone_serve/"&gt;serve&lt;/a&gt; local or remote files over HTTP/WebDAV/FTP/SFTP/DLNA&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation &amp;amp; documentation&lt;/h2&gt; 
&lt;p&gt;Please see the &lt;a href="https://rclone.org/"&gt;rclone website&lt;/a&gt; for:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/install/"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/docs/"&gt;Documentation &amp;amp; configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/changelog/"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/faq/"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/overview/"&gt;Storage providers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://forum.rclone.org/"&gt;Forum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;...and more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Downloads&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://rclone.org/downloads/"&gt;https://rclone.org/downloads/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This is free software under the terms of the MIT license (check the &lt;a href="https://raw.githubusercontent.com/rclone/rclone/master/COPYING"&gt;COPYING file&lt;/a&gt; included in this package).&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gtsteffaniak/filebrowser</title>
      <link>https://github.com/gtsteffaniak/filebrowser</link>
      <description>&lt;p&gt;📂 Web File Browser&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/gtsteffaniak/filebrowser/backend"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gtsteffaniak/filebrowser/backend" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://www.codacy.com/gh/gtsteffaniak/filebrowser/dashboard"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/1c48cfb7646d4009aa8c6f71287670b8" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gtsteffaniak/filebrowser/releases"&gt;&lt;img src="https://img.shields.io/github/release/gtsteffaniak/filebrowser/all.svg?sanitize=true" alt="latest version" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/gtstef/filebrowser"&gt;&lt;img src="https://img.shields.io/docker/pulls/gtstef/filebrowser?label=latest%20Docker%20pulls" alt="DockerHub Pulls" /&gt;&lt;/a&gt; &lt;a href="https://www.apache.org/licenses/LICENSE-2.0"&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="Apache-2.0 License" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Q&amp;amp;A#is-there-a-way-to-donate-or-support-this-project"&gt;&lt;img src="https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif" alt="Donate" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;img width="150" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" title="Logo" /&gt; 
 &lt;h3&gt;FileBrowser Quantum&lt;/h3&gt; The best free self-hosted web-based file manager. 
 &lt;br /&gt;
 &lt;br /&gt; 
 &lt;img width="800" src="https://github.com/user-attachments/assets/162d7a95-33b7-49bd-976c-dd6822c0d22b" /&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] There is no stable version -- &lt;span&gt;🚧&lt;/span&gt; coming very soon!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Pinned&lt;/h2&gt; 
&lt;p&gt;&lt;span&gt;📢&lt;/span&gt; &lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/1293"&gt;Stable Release &amp;amp; 0.9.0 Update&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;📌&lt;/span&gt; &lt;a href="https://filebrowserquantum.com/"&gt;Read The Official Docs&lt;/a&gt; (currently english-only)&lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum provides an easy way to access and manage your files from the web. It has a modern responsive interface that has many advanced features to manage users, access, sharing, and file preview and editing.&lt;/p&gt; 
&lt;p&gt;This version is called "Quantum" because it packs tons of advanced features into a tiny easy to run file. Unlike the majority of alternative options, FileBrowser Quantum is simple to install and easy to configure.&lt;/p&gt; 
&lt;p&gt;The goal for this repo is to become the best open-source self-hosted file browsing application that exists -- &lt;strong&gt;all for free&lt;/strong&gt;. This repo will always be free and open-source.&lt;/p&gt; 
&lt;p&gt;Ready to try it out? See &lt;a href="https://filebrowserquantum.com/en/docs/getting-started/"&gt;Getting Started Docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;How its different&lt;/h2&gt; 
&lt;p&gt;FileBrowser Quantum is a massive fork of the file browser open-source project with the following changes:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;✅ Multiple sources support&lt;/li&gt; 
 &lt;li&gt;✅ Login support for OIDC, password + 2FA, and proxy.&lt;/li&gt; 
 &lt;li&gt;✅ Beautiful, Responsive, and Customizable user interface.&lt;/li&gt; 
 &lt;li&gt;✅ Simplified configuration via &lt;code&gt;config.yaml&lt;/code&gt; config file.&lt;/li&gt; 
 &lt;li&gt;✅ Ultra-efficient &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;indexing&lt;/a&gt; and real-time updates 
  &lt;ul&gt; 
   &lt;li&gt;Real-time search results as you type.&lt;/li&gt; 
   &lt;li&gt;Real-time monitoring and updates in the UI.&lt;/li&gt; 
   &lt;li&gt;Search supports file and folder sizes, along with various filters.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ Better listing browsing 
  &lt;ul&gt; 
   &lt;li&gt;More file type previews, such as &lt;strong&gt;office&lt;/strong&gt; and &lt;strong&gt;video&lt;/strong&gt; file previews&lt;/li&gt; 
   &lt;li&gt;Instantly switches view modes and sort order without reloading data.&lt;/li&gt; 
   &lt;li&gt;Folder sizes are displayed.&lt;/li&gt; 
   &lt;li&gt;Navigating remembers the last scroll position.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ Highly configurable and customizable sharing options, incuding: 
  &lt;ul&gt; 
   &lt;li&gt;share expiration time&lt;/li&gt; 
   &lt;li&gt;users who can access share (including anonymous)&lt;/li&gt; 
   &lt;li&gt;styling and themes&lt;/li&gt; 
   &lt;li&gt;file viewing, editing, and uploading permissions&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;✅ Directory-level access control that can be scoped to user or group.&lt;/li&gt; 
 &lt;li&gt;✅ Developer API support 
  &lt;ul&gt; 
   &lt;li&gt;Ability to create long-lived API Tokens.&lt;/li&gt; 
   &lt;li&gt;A helpful Swagger page is available at &lt;code&gt;/swagger&lt;/code&gt; endpoint for API enabled users.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Notable features that this fork &lt;em&gt;does not&lt;/em&gt; have (removed):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;span&gt;🚧&lt;/span&gt; jobs are not supported yet.&lt;/li&gt; 
 &lt;li&gt;❌ shell commands are completely removed and will not be returned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;FileBrowser Quantum differs significantly from the original version. Many of these changes required a significant overhaul. Creating a fork was a necessary process to make the program better. There have been many growing pains, but a stable release is planned and coming soon.&lt;/p&gt; 
&lt;h2&gt;System Requirements&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Every file and directory in the source gets indexed (by default). This enables powerful features such as instant search, but large source filesystems can increase your system requirements. &lt;a href="https://github.com/gtsteffaniak/filebrowser/wiki/Indexing"&gt;See indexing wiki&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Memory&lt;/strong&gt;: depends on configured source complexity. See &lt;a href="https://github.com/gtsteffaniak/filebrowser/discussions/787"&gt;how much RAM does it require?&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;GPU&lt;/strong&gt;: Not currently used (planned)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;The UI&lt;/h2&gt; 
&lt;p&gt;The UI has a simple three-component navigation system:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;(Left) Multi-action button with slide-out panel.&lt;/li&gt; 
 &lt;li&gt;(Middle) The powerful search bar.&lt;/li&gt; 
 &lt;li&gt;(Right) The view change toggle.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;All other functions are moved either into the action menu or pop-up menus. If the action does not depend on context, it will exist in the slide-out action panel. If the action is available based on context, it will show up as a pop-up menu.&lt;/p&gt; 
&lt;p align="center"&gt; &lt;img width="1000" src="https://github.com/user-attachments/assets/aa32b05c-f917-47bb-b07f-857edc5e47f7" title="Search GIF" /&gt; &lt;/p&gt; 
&lt;h2&gt;Official Docs&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://filebrowserquantum.com/"&gt;Official Docs&lt;/a&gt;. Contributions are welcome and encouraged! See &lt;a href="https://github.com/quantumx-apps/filebrowserDocs"&gt;FilebrowserDocs Github&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Comparison Chart&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Application Name&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/user-attachments/assets/59986a2a-f960-4536-aa35-4a9a7c98ad48" /&gt; Quantum&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/filebrowser/filebrowser/raw/master/frontend/public/img/logo.svg?sanitize=true" /&gt; Filebrowser&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://github.com/mickael-kerjean/filestash/raw/master/public/assets/logo/app_icon.png?raw=true" /&gt; Filestash&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/19211038?s=200&amp;amp;v=4" /&gt; Nextcloud&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Google_Drive_logo.png/480px-Google_Drive_logo.png" /&gt; Google_Drive&lt;/th&gt; 
   &lt;th&gt;&lt;img width="48" src="https://avatars.githubusercontent.com/u/6422152?v=4" /&gt; FileRun&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Filesystem support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Linux&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mac&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Self hostable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Has Stable Release?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;S3 support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;webdav support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;FTP support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Dedicated docs site?&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple sources at once&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Docker image size&lt;/td&gt; 
   &lt;td&gt;180 MB (with ffmpeg)&lt;/td&gt; 
   &lt;td&gt;31 MB&lt;/td&gt; 
   &lt;td&gt;240 MB (main image)&lt;/td&gt; 
   &lt;td&gt;250 MB&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;&amp;gt; 2 GB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Min. Memory Requirements&lt;/td&gt; 
   &lt;td&gt;256 MB&lt;/td&gt; 
   &lt;td&gt;128 MB&lt;/td&gt; 
   &lt;td&gt;128 MB (main image)&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;512 MB&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;has standalone binary&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;price&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;free tier&lt;/td&gt; 
   &lt;td&gt;$99+&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rich media preview&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Upload files from the web?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Advanced Search?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Indexed Search?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Content-aware search?&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;configurable&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Custom job support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Multiple users&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Single sign-on support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;LDAP sign-on support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Long-live API key support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;API documentation page&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Mobile App&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;open source?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;tags support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;shareable web links?&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Event-based notifications&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Metrics&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;file space quotas&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;text-based files editor&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Office file previews&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Themes&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Branding support&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;activity log&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Comments support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;trash support&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Starred/pinned files&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Chromecast support&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Share collections of files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can archive selected files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can browse archive files&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert documents&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;✅&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert videos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Can convert photos&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;🚧&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
   &lt;td&gt;❌&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt;</description>
    </item>
    
    <item>
      <title>jesseduffield/lazygit</title>
      <link>https://github.com/jesseduffield/lazygit</link>
      <description>&lt;p&gt;simple terminal UI for git commands&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;sup&gt;Special thanks to:&lt;/sup&gt; 
 &lt;br /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.warp.dev/?utm_source=github&amp;amp;utm_medium=referral&amp;amp;utm_campaign=lazygit_20231023"&gt; 
  &lt;div&gt; 
   &lt;img src="https://github.com/warpdotdev/brand-assets/raw/main/Github/Sponsor/Warp-Github-LG-02.png?raw=true" width="400" alt="Warp" /&gt; 
  &lt;/div&gt; &lt;b&gt;Warp, the intelligent terminal&lt;/b&gt; &lt;br /&gt; &lt;b&gt;Available for MacOS and Linux&lt;/b&gt; &lt;br /&gt; 
  &lt;div&gt; 
   &lt;sup&gt;Visit&amp;nbsp;warp.dev&amp;nbsp;to learn more.&lt;/sup&gt; 
  &lt;/div&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;a href="https://tuple.app/lazygit"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/tuple.png" width="400" alt="Tuple" /&gt; 
  &lt;/div&gt; &lt;b&gt;Tuple, the premier screen sharing app for developers on macOS and Windows.&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
 &lt;br /&gt; 
 &lt;a href="https://www.subble.com"&gt; 
  &lt;div&gt; 
   &lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/subble.webp" width="400" alt="Subble" /&gt; 
  &lt;/div&gt; &lt;b&gt;I (Jesse) co-founded Subble to save your company time and money by finding unused and over-provisioned SaaS licences. Check it out!&lt;/b&gt; &lt;/a&gt; 
 &lt;br /&gt; 
 &lt;hr /&gt; 
&lt;/div&gt; 
&lt;p align="center"&gt; &lt;img width="536" src="https://user-images.githubusercontent.com/8456633/174470852-339b5011-5800-4bb9-a628-ff230aa8cd4e.png" /&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;p&gt;A simple terminal UI for git commands &lt;br /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://github.com/jesseduffield/lazygit/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/jesseduffield/lazygit/total" alt="GitHub Releases" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/jesseduffield/lazygit"&gt;&lt;img src="https://goreportcard.com/badge/github.com/jesseduffield/lazygit" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://app.codacy.com/gh/jesseduffield/lazygit/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_grade"&gt;&lt;img src="https://app.codacy.com/project/badge/Grade/f46416b715d74622895657935fcada21" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="https://app.codacy.com/gh/jesseduffield/lazygit/dashboard?utm_source=gh&amp;amp;utm_medium=referral&amp;amp;utm_content=&amp;amp;utm_campaign=Badge_coverage"&gt;&lt;img src="https://app.codacy.com/project/badge/Coverage/f46416b715d74622895657935fcada21" alt="Codacy Badge" /&gt;&lt;/a&gt; &lt;a href="https://golangci-lint.run/"&gt;&lt;img src="https://img.shields.io/badge/linted%20by-golangci--lint-brightgreen" alt="golangci-lint" /&gt;&lt;/a&gt; &lt;a href="https://github.com/jesseduffield/lazygit/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/tag/jesseduffield/lazygit?color=blue" alt="GitHub tag" /&gt;&lt;/a&gt; &lt;a href="https://formulae.brew.sh/formula/lazygit"&gt;&lt;img src="https://img.shields.io/homebrew/v/lazygit?color=blue" alt="homebrew" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/commit_and_push-compressed.gif" alt="commit_and_push" /&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Sponsors&lt;/h2&gt; 
&lt;p align="center"&gt; Maintenance of this project is made possible by all the &lt;a href="https://github.com/jesseduffield/lazygit/graphs/contributors"&gt;contributors&lt;/a&gt; and &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsors&lt;/a&gt;. If you'd like to sponsor this project and have your avatar or company logo appear below &lt;a href="https://github.com/sponsors/jesseduffield"&gt;click here&lt;/a&gt;. 💙 &lt;/p&gt; 
&lt;p align="center"&gt; 
 &lt;!-- sponsors --&gt;&lt;a href="https://github.com/intabulas"&gt;&lt;img src="https://github.com/intabulas.png" width="60px" alt="Mark Lussier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/peppy"&gt;&lt;img src="https://github.com/peppy.png" width="60px" alt="Dean Herbert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/piot"&gt;&lt;img src="https://github.com/piot.png" width="60px" alt="Peter Bjorklund" /&gt;&lt;/a&gt;&lt;a href="https://github.com/rgwood"&gt;&lt;img src="https://github.com/rgwood.png" width="60px" alt="Reilly Wood" /&gt;&lt;/a&gt;&lt;a href="https://github.com/oliverguenther"&gt;&lt;img src="https://github.com/oliverguenther.png" width="60px" alt="Oliver Günther" /&gt;&lt;/a&gt;&lt;a href="https://github.com/pawanjay176"&gt;&lt;img src="https://github.com/pawanjay176.png" width="60px" alt="Pawan Dhananjay" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bdach"&gt;&lt;img src="https://github.com/bdach.png" width="60px" alt="Bartłomiej Dach" /&gt;&lt;/a&gt;&lt;a href="https://github.com/naoey"&gt;&lt;img src="https://github.com/naoey.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/carstengehling"&gt;&lt;img src="https://github.com/carstengehling.png" width="60px" alt="Carsten Gehling" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ceuk"&gt;&lt;img src="https://github.com/ceuk.png" width="60px" alt="CEUK" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Xetera"&gt;&lt;img src="https://github.com/Xetera.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/HoldenLucas"&gt;&lt;img src="https://github.com/HoldenLucas.png" width="60px" alt="Holden Lucas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nartc"&gt;&lt;img src="https://github.com/nartc.png" width="60px" alt="Chau Tran" /&gt;&lt;/a&gt;&lt;a href="https://github.com/matejcik"&gt;&lt;img src="https://github.com/matejcik.png" width="60px" alt="matejcik" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lucatume"&gt;&lt;img src="https://github.com/lucatume.png" width="60px" alt="theAverageDev (Luca Tumedei)" /&gt;&lt;/a&gt;&lt;a href="https://github.com/IvanZuy"&gt;&lt;img src="https://github.com/IvanZuy.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nicholascloud"&gt;&lt;img src="https://github.com/nicholascloud.png" width="60px" alt="Nicholas Cloud" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ava1ar"&gt;&lt;img src="https://github.com/ava1ar.png" width="60px" alt="Aliaksandr Stelmachonak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/minidfx"&gt;&lt;img src="https://github.com/minidfx.png" width="60px" alt="Burgy Benjamin" /&gt;&lt;/a&gt;&lt;a href="https://github.com/JoeKlemmer"&gt;&lt;img src="https://github.com/JoeKlemmer.png" width="60px" alt="Joe Klemmer" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tobi"&gt;&lt;img src="https://github.com/tobi.png" width="60px" alt="Tobias Lütke" /&gt;&lt;/a&gt;&lt;a href="https://github.com/benbfortis"&gt;&lt;img src="https://github.com/benbfortis.png" width="60px" alt="Ben Beaumont" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jakewarren"&gt;&lt;img src="https://github.com/jakewarren.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tgpholly"&gt;&lt;img src="https://github.com/tgpholly.png" width="60px" alt="Holly" /&gt;&lt;/a&gt;&lt;a href="https://github.com/socketbox"&gt;&lt;img src="https://github.com/socketbox.png" width="60px" alt="Casey Boettcher" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bitprophet"&gt;&lt;img src="https://github.com/bitprophet.png" width="60px" alt="Jeff Forcier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/tayleighr"&gt;&lt;img src="https://github.com/tayleighr.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Novakov"&gt;&lt;img src="https://github.com/Novakov.png" width="60px" alt="Maciej T. Nowak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/nekhaevskiy"&gt;&lt;img src="https://github.com/nekhaevskiy.png" width="60px" alt="Yury" /&gt;&lt;/a&gt;&lt;a href="https://github.com/reivilibre"&gt;&lt;img src="https://github.com/reivilibre.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/andreaskurth"&gt;&lt;img src="https://github.com/andreaskurth.png" width="60px" alt="Andreas Kurth" /&gt;&lt;/a&gt;&lt;a href="https://github.com/BSteffaniak"&gt;&lt;img src="https://github.com/BSteffaniak.png" width="60px" alt="Braden Steffaniak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ameddin73"&gt;&lt;img src="https://github.com/ameddin73.png" width="60px" alt="Alex Meddin" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jordan-gillard"&gt;&lt;img src="https://github.com/jordan-gillard.png" width="60px" alt="Jordan Gillard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/smangels"&gt;&lt;img src="https://github.com/smangels.png" width="60px" alt="Sebastian" /&gt;&lt;/a&gt;&lt;a href="https://github.com/amslezak"&gt;&lt;img src="https://github.com/amslezak.png" width="60px" alt="Andy Slezak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mkock"&gt;&lt;img src="https://github.com/mkock.png" width="60px" alt="Martin Kock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/jessealama"&gt;&lt;img src="https://github.com/jessealama.png" width="60px" alt="Jesse Alama" /&gt;&lt;/a&gt;&lt;a href="https://github.com/danielkokott"&gt;&lt;img src="https://github.com/danielkokott.png" width="60px" alt="Daniel Kokott" /&gt;&lt;/a&gt;&lt;a href="https://github.com/heijmans"&gt;&lt;img src="https://github.com/heijmans.png" width="60px" alt="Jan Heijmans" /&gt;&lt;/a&gt;&lt;a href="https://github.com/knowald"&gt;&lt;img src="https://github.com/knowald.png" width="60px" alt="Kevin Nowald" /&gt;&lt;/a&gt;&lt;a href="https://github.com/omarluq"&gt;&lt;img src="https://github.com/omarluq.png" width="60px" alt="Omar Luq" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ethanjli"&gt;&lt;img src="https://github.com/ethanjli.png" width="60px" alt="Ethan Li" /&gt;&lt;/a&gt;&lt;a href="https://github.com/phubaba"&gt;&lt;img src="https://github.com/phubaba.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/logichaos"&gt;&lt;img src="https://github.com/logichaos.png" width="60px" alt="Maxi" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neunkasulle"&gt;&lt;img src="https://github.com/neunkasulle.png" width="60px" alt="Jan Zenkner" /&gt;&lt;/a&gt;&lt;a href="https://github.com/RVxLab"&gt;&lt;img src="https://github.com/RVxLab.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/FrederickGeek8"&gt;&lt;img src="https://github.com/FrederickGeek8.png" width="60px" alt="Frederick Morlock" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ezdac"&gt;&lt;img src="https://github.com/ezdac.png" width="60px" alt="Maximilian Langenfeld" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dbuls"&gt;&lt;img src="https://github.com/dbuls.png" width="60px" alt="Davis Buls" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lppassos"&gt;&lt;img src="https://github.com/lppassos.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/neilcode"&gt;&lt;img src="https://github.com/neilcode.png" width="60px" alt="Neil Lambert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dhh"&gt;&lt;img src="https://github.com/dhh.png" width="60px" alt="David Heinemeier Hansson" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ethanfischer"&gt;&lt;img src="https://github.com/ethanfischer.png" width="60px" alt="Ethan Fischer" /&gt;&lt;/a&gt;&lt;a href="https://github.com/poshboytl"&gt;&lt;img src="https://github.com/poshboytl.png" width="60px" alt="Terry Tai" /&gt;&lt;/a&gt;&lt;a href="https://github.com/roesnera"&gt;&lt;img src="https://github.com/roesnera.png" width="60px" alt="Adam Roesner" /&gt;&lt;/a&gt;&lt;a href="https://github.com/seven1m"&gt;&lt;img src="https://github.com/seven1m.png" width="60px" alt="Tim Morgan" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sgoridotla1"&gt;&lt;img src="https://github.com/sgoridotla1.png" width="60px" alt="Max Shypulniak" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ADIX7"&gt;&lt;img src="https://github.com/ADIX7.png" width="60px" alt="Kovács Ádám" /&gt;&lt;/a&gt;&lt;a href="https://github.com/slowdub"&gt;&lt;img src="https://github.com/slowdub.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/serranomorante"&gt;&lt;img src="https://github.com/serranomorante.png" width="60px" alt="Patricio Serrano" /&gt;&lt;/a&gt;&lt;a href="https://github.com/kiriDevs"&gt;&lt;img src="https://github.com/kiriDevs.png" width="60px" alt="Kiri" /&gt;&lt;/a&gt;&lt;a href="https://github.com/bjornevik"&gt;&lt;img src="https://github.com/bjornevik.png" width="60px" alt="John Even Bjørnevik" /&gt;&lt;/a&gt;&lt;a href="https://github.com/moberst"&gt;&lt;img src="https://github.com/moberst.png" width="60px" alt="Michael Oberst" /&gt;&lt;/a&gt;&lt;a href="https://github.com/stianh"&gt;&lt;img src="https://github.com/stianh.png" width="60px" alt="Stian Hegglund" /&gt;&lt;/a&gt;&lt;a href="https://github.com/adam-e-trepanier"&gt;&lt;img src="https://github.com/adam-e-trepanier.png" width="60px" alt="Adam Trepanier" /&gt;&lt;/a&gt;&lt;a href="https://github.com/arkalon76"&gt;&lt;img src="https://github.com/arkalon76.png" width="60px" alt="Kenth Fagerlund" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Djuuu"&gt;&lt;img src="https://github.com/Djuuu.png" width="60px" alt="Julien Tardot" /&gt;&lt;/a&gt;&lt;a href="https://github.com/antikytheraton"&gt;&lt;img src="https://github.com/antikytheraton.png" width="60px" alt="Aaron Arredondo" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ellord"&gt;&lt;img src="https://github.com/ellord.png" width="60px" alt="Ellord Tayag" /&gt;&lt;/a&gt;&lt;a href="https://github.com/EdgarPost"&gt;&lt;img src="https://github.com/EdgarPost.png" width="60px" alt="Edgar Post-Buijs" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sbc64"&gt;&lt;img src="https://github.com/sbc64.png" width="60px" alt="sbc64" /&gt;&lt;/a&gt;&lt;a href="https://github.com/caillou"&gt;&lt;img src="https://github.com/caillou.png" width="60px" alt="Pierre Spring" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mebezac"&gt;&lt;img src="https://github.com/mebezac.png" width="60px" alt="Zac Clay" /&gt;&lt;/a&gt;&lt;a href="https://github.com/Tom94"&gt;&lt;img src="https://github.com/Tom94.png" width="60px" alt="Thomas Müller" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ccssmnn"&gt;&lt;img src="https://github.com/ccssmnn.png" width="60px" alt="Carl Assmann" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ognevsd"&gt;&lt;img src="https://github.com/ognevsd.png" width="60px" alt="Sergey Ognev" /&gt;&lt;/a&gt;&lt;a href="https://github.com/moodyhunter"&gt;&lt;img src="https://github.com/moodyhunter.png" width="60px" alt="Moody Liu" /&gt;&lt;/a&gt;&lt;a href="https://github.com/code-hunger"&gt;&lt;img src="https://github.com/code-hunger.png" width="60px" alt="Alex G" /&gt;&lt;/a&gt;&lt;a href="https://github.com/elithper"&gt;&lt;img src="https://github.com/elithper.png" width="60px" alt="Michael Howard" /&gt;&lt;/a&gt;&lt;a href="https://github.com/LasseBloch"&gt;&lt;img src="https://github.com/LasseBloch.png" width="60px" alt="Lasse Bloch Lauritsen" /&gt;&lt;/a&gt;&lt;a href="https://github.com/lmarburger"&gt;&lt;img src="https://github.com/lmarburger.png" width="60px" alt="Larry Marburger" /&gt;&lt;/a&gt;&lt;a href="https://github.com/dbrockman"&gt;&lt;img src="https://github.com/dbrockman.png" width="60px" alt="David Brockman" /&gt;&lt;/a&gt;&lt;a href="https://github.com/slavshik"&gt;&lt;img src="https://github.com/slavshik.png" width="60px" alt="Alexander Slavschik" /&gt;&lt;/a&gt;&lt;a href="https://github.com/aidalgol"&gt;&lt;img src="https://github.com/aidalgol.png" width="60px" alt="Aidan Gauland" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mbienkowsk"&gt;&lt;img src="https://github.com/mbienkowsk.png" width="60px" alt="Maksym Bieńkowski" /&gt;&lt;/a&gt;&lt;a href="https://github.com/joshuawootonn"&gt;&lt;img src="https://github.com/joshuawootonn.png" width="60px" alt="Joshua Wootonn" /&gt;&lt;/a&gt;&lt;a href="https://github.com/I4nJ"&gt;&lt;img src="https://github.com/I4nJ.png" width="60px" alt="" /&gt;&lt;/a&gt;&lt;a href="https://github.com/gurbindersingh"&gt;&lt;img src="https://github.com/gurbindersingh.png" width="60px" alt="Gurbinder Singh" /&gt;&lt;/a&gt;&lt;a href="https://github.com/sandviklee"&gt;&lt;img src="https://github.com/sandviklee.png" width="60px" alt="Simon Sandvik Lee" /&gt;&lt;/a&gt;&lt;a href="https://github.com/glagnar"&gt;&lt;img src="https://github.com/glagnar.png" width="60px" alt="Thomas Gilbert" /&gt;&lt;/a&gt;&lt;a href="https://github.com/skrzepto"&gt;&lt;img src="https://github.com/skrzepto.png" width="60px" alt="Szymon Mucha" /&gt;&lt;/a&gt;&lt;a href="https://github.com/TimShilov"&gt;&lt;img src="https://github.com/TimShilov.png" width="60px" alt="Tim Shilov" /&gt;&lt;/a&gt;&lt;a href="https://github.com/unnawut"&gt;&lt;img src="https://github.com/unnawut.png" width="60px" alt="Unnawut Leepaisalsuwanna" /&gt;&lt;/a&gt;&lt;a href="https://github.com/wortmanb"&gt;&lt;img src="https://github.com/wortmanb.png" width="60px" alt="Bret Wortman" /&gt;&lt;/a&gt;&lt;a href="https://github.com/andre-lameirinhas"&gt;&lt;img src="https://github.com/andre-lameirinhas.png" width="60px" alt="André Lameirinhas" /&gt;&lt;/a&gt;&lt;a href="https://github.com/SVappsLAB"&gt;&lt;img src="https://github.com/SVappsLAB.png" width="60px" alt="Scott Velez" /&gt;&lt;/a&gt;&lt;a href="https://github.com/ooojustin"&gt;&lt;img src="https://github.com/ooojustin.png" width="60px" alt="justin" /&gt;&lt;/a&gt;&lt;a href="https://github.com/mayfieldiv"&gt;&lt;img src="https://github.com/mayfieldiv.png" width="60px" alt="Mayfield" /&gt;&lt;/a&gt;&lt;a href="https://github.com/somaholiday"&gt;&lt;img src="https://github.com/somaholiday.png" width="60px" alt="Soma Holiday" /&gt;&lt;/a&gt;
 &lt;!-- sponsors --&gt; &lt;/p&gt; 
&lt;h2&gt;Elevator Pitch&lt;/h2&gt; 
&lt;p&gt;Rant time: You've heard it before, git is &lt;em&gt;powerful&lt;/em&gt;, but what good is that power when everything is so damn hard to do? Interactive rebasing requires you to edit a goddamn TODO file in your editor? &lt;em&gt;Are you kidding me?&lt;/em&gt; To stage part of a file you need to use a command line program to step through each hunk and if a hunk can't be split down any further but contains code you don't want to stage, you have to edit an arcane patch file &lt;em&gt;by hand&lt;/em&gt;? &lt;em&gt;Are you KIDDING me?!&lt;/em&gt; Sometimes you get asked to stash your changes when switching branches only to realise that after you switch and unstash that there weren't even any conflicts and it would have been fine to just checkout the branch directly? &lt;em&gt;YOU HAVE GOT TO BE KIDDING ME!&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;If you're a mere mortal like me and you're tired of hearing how powerful git is when in your daily life it's a powerful pain in your ass, lazygit might be for you.&lt;/p&gt; 
&lt;h2&gt;Table of contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#sponsors"&gt;Sponsors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#elevator-pitch"&gt;Elevator Pitch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#table-of-contents"&gt;Table of contents&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#stage-individual-lines"&gt;Stage individual lines&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#interactive-rebase"&gt;Interactive Rebase&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#cherry-pick"&gt;Cherry-pick&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#bisect"&gt;Bisect&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#nuke-the-working-tree"&gt;Nuke the working tree&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#amend-an-old-commit"&gt;Amend an old commit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#filter"&gt;Filter&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#invoke-a-custom-command"&gt;Invoke a custom command&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#worktrees"&gt;Worktrees&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#rebase-magic-custom-patches"&gt;Rebase magic (custom patches)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#rebase-from-marked-base-commit"&gt;Rebase from marked base commit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undo"&gt;Undo&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#commit-graph"&gt;Commit graph&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#compare-two-commits"&gt;Compare two commits&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#tutorials"&gt;Tutorials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#installation"&gt;Installation&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#binary-releases"&gt;Binary Releases&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#dev-container-feature"&gt;Dev container&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#homebrew"&gt;Homebrew&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#macports"&gt;MacPorts&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#void-linux"&gt;Void Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#scoop-windows"&gt;Scoop (Windows)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#arch-linux"&gt;Arch Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#fedora-and-rhel"&gt;Fedora and RHEL&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#solus-linux"&gt;Solus Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#debian-and-ubuntu"&gt;Debian and Ubuntu&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#funtoo-linux"&gt;Funtoo Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#gentoo-linux"&gt;Gentoo Linux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#freebsd"&gt;FreeBSD&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#termux"&gt;Termux&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#conda"&gt;Conda&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#go"&gt;Go&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#chocolatey-windows"&gt;Chocolatey (Windows)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#winget-windows-10-1709-or-later"&gt;Winget (Windows 10 1709 or later)&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#manual"&gt;Manual&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#usage"&gt;Usage&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#keybindings"&gt;Keybindings&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#changing-directory-on-exit"&gt;Changing Directory On Exit&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#undoredo"&gt;Undo/Redo&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#configuration"&gt;Configuration&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#custom-pagers"&gt;Custom Pagers&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#custom-commands"&gt;Custom Commands&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#git-flow-support"&gt;Git flow support&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#contributing"&gt;Contributing&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#debugging-locally"&gt;Debugging Locally&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#donate"&gt;Donate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#faq"&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#what-do-the-commit-colors-represent"&gt;What do the commit colors represent?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#shameless-plug"&gt;Shameless Plug&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/#alternatives"&gt;Alternatives&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Lazygit is not my fulltime job but it is a hefty part time job so if you want to support the project please consider &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsoring me&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Stage individual lines&lt;/h3&gt; 
&lt;p&gt;Press space on the selected line to stage it, or press &lt;code&gt;v&lt;/code&gt; to start selecting a range of lines. You can also press &lt;code&gt;a&lt;/code&gt; to select the entirety of the current hunk.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/stage_lines-compressed.gif" alt="stage_lines" /&gt;&lt;/p&gt; 
&lt;h3&gt;Interactive Rebase&lt;/h3&gt; 
&lt;p&gt;Press &lt;code&gt;i&lt;/code&gt; to start an interactive rebase. Then squash (&lt;code&gt;s&lt;/code&gt;), fixup (&lt;code&gt;f&lt;/code&gt;), drop (&lt;code&gt;d&lt;/code&gt;), edit (&lt;code&gt;e&lt;/code&gt;), move up (&lt;code&gt;ctrl+k&lt;/code&gt;) or move down (&lt;code&gt;ctrl+j&lt;/code&gt;) any of TODO commits, before continuing the rebase by bringing up the rebase options menu with &lt;code&gt;m&lt;/code&gt; and then selecting &lt;code&gt;continue&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also perform any these actions as a once-off (e.g. pressing &lt;code&gt;s&lt;/code&gt; on a commit to squash it) without explicitly starting a rebase.&lt;/p&gt; 
&lt;p&gt;This demo also uses shift+down to select a range of commits to move and fixup.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/interactive_rebase-compressed.gif" alt="interactive_rebase" /&gt;&lt;/p&gt; 
&lt;h3&gt;Cherry-pick&lt;/h3&gt; 
&lt;p&gt;Press &lt;code&gt;shift+c&lt;/code&gt; on a commit to copy it and press &lt;code&gt;shift+v&lt;/code&gt; to paste (cherry-pick) it.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/cherry_pick-compressed.gif" alt="cherry_pick" /&gt;&lt;/p&gt; 
&lt;h3&gt;Bisect&lt;/h3&gt; 
&lt;p&gt;Press &lt;code&gt;b&lt;/code&gt; in the commits view to mark a commit as good/bad in order to begin a git bisect.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/bisect-compressed.gif" alt="bisect" /&gt;&lt;/p&gt; 
&lt;h3&gt;Nuke the working tree&lt;/h3&gt; 
&lt;p&gt;For when you really want to just get rid of anything that shows up when you run &lt;code&gt;git status&lt;/code&gt; (and yes that includes dirty submodules) &lt;a href="https://www.youtube.com/watch?v=N4E2B_k2Bss"&gt;kidpix style&lt;/a&gt;, press &lt;code&gt;shift+d&lt;/code&gt; to bring up the reset options menu and then select the 'nuke' option.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/nuke_working_tree-compressed.gif" alt="Nuke working tree" /&gt;&lt;/p&gt; 
&lt;h3&gt;Amend an old commit&lt;/h3&gt; 
&lt;p&gt;Pressing &lt;code&gt;shift+a&lt;/code&gt; on any commit will amend that commit with the currently staged changes (running an interactive rebase in the background).&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/amend_old_commit-compressed.gif" alt="amend_old_commit" /&gt;&lt;/p&gt; 
&lt;h3&gt;Filter&lt;/h3&gt; 
&lt;p&gt;You can filter a view with &lt;code&gt;/&lt;/code&gt;. Here we filter down our branches view and then hit &lt;code&gt;enter&lt;/code&gt; to view its commits.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/filter-compressed.gif" alt="filter" /&gt;&lt;/p&gt; 
&lt;h3&gt;Invoke a custom command&lt;/h3&gt; 
&lt;p&gt;Lazygit has a very flexible &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md"&gt;custom command system&lt;/a&gt;. In this example a custom command is defined which emulates the built-in branch checkout action.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/custom_command-compressed.gif" alt="custom_command" /&gt;&lt;/p&gt; 
&lt;h3&gt;Worktrees&lt;/h3&gt; 
&lt;p&gt;You can create worktrees to have multiple branches going at once without the need for stashing or creating WIP commits when switching between them. Press &lt;code&gt;w&lt;/code&gt; in the branches view to create a worktree from the selected branch and switch to it.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/worktree_create_from_branches-compressed.gif" alt="worktree_create_from_branches" /&gt;&lt;/p&gt; 
&lt;h3&gt;Rebase magic (custom patches)&lt;/h3&gt; 
&lt;p&gt;You can build a custom patch from an old commit and then remove the patch from the commit, split out a new commit, apply the patch in reverse to the index, and more.&lt;/p&gt; 
&lt;p&gt;In this example we have a redundant comment that we want to remove from an old commit. We hit &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; on the commit to view its files, then &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; on a file to focus the patch, then &lt;code&gt;&amp;lt;space&amp;gt;&lt;/code&gt; to add the comment line to our custom patch, and then &lt;code&gt;ctrl+p&lt;/code&gt; to view the custom patch options; selecting to remove the patch from the current commit.&lt;/p&gt; 
&lt;p&gt;Learn more in the &lt;a href="https://youtu.be/4XaToVut_hs"&gt;Rebase magic Youtube tutorial&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/custom_patch-compressed.gif" alt="custom_patch" /&gt;&lt;/p&gt; 
&lt;h3&gt;Rebase from marked base commit&lt;/h3&gt; 
&lt;p&gt;Say you're on a feature branch that was itself branched off of the develop branch, and you've decided you'd rather be branching off the master branch. You need a way to rebase only the commits from your feature branch. In this demo we check to see which was the last commit on the develop branch, then press &lt;code&gt;shift+b&lt;/code&gt; to mark that commit as our base commit, then press &lt;code&gt;r&lt;/code&gt; on the master branch to rebase onto it, only bringing across the commits from our feature branch. Then we push our changes with &lt;code&gt;shift+p&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/rebase_onto-compressed.gif" alt="rebase_onto" /&gt;&lt;/p&gt; 
&lt;h3&gt;Undo&lt;/h3&gt; 
&lt;p&gt;You can undo the last action by pressing &lt;code&gt;z&lt;/code&gt; and redo with &lt;code&gt;ctrl+z&lt;/code&gt;. Here we drop a couple of commits and then undo the actions. Undo uses the reflog which is specific to commits and branches so we can't undo changes to the working tree or stash.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md"&gt;More info&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/undo-compressed.gif" alt="undo" /&gt;&lt;/p&gt; 
&lt;h3&gt;Commit graph&lt;/h3&gt; 
&lt;p&gt;When viewing the commit graph in an enlarged window (use &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;_&lt;/code&gt; to cycle screen modes), the commit graph is shown. Colours correspond to the commit authors, and as you navigate down the graph, the parent commits of the selected commit are highlighted.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/commit_graph-compressed.gif" alt="commit_graph" /&gt;&lt;/p&gt; 
&lt;h3&gt;Compare two commits&lt;/h3&gt; 
&lt;p&gt;If you press &lt;code&gt;shift+w&lt;/code&gt; on a commit (or branch/ref) a menu will open that allows you to mark that commit so that any other commit you select will be diffed against it. Once you've selected the second commit, you'll see the diff in the main view and if you press &lt;code&gt;&amp;lt;enter&amp;gt;&lt;/code&gt; you'll see the files of the diff. You can press &lt;code&gt;shift+w&lt;/code&gt; to view the diff menu again to see options like reversing the diff direction or exiting diff mode. You can also exit diff mode by pressing &lt;code&gt;&amp;lt;escape&amp;gt;&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/demo/diff_commits-compressed.gif" alt="diff_commits" /&gt;&lt;/p&gt; 
&lt;h2&gt;Tutorials&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/CPLdltN7wgE"&gt;&lt;img src="https://i.imgur.com/sVEktDn.png" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/CPLdltN7wgE"&gt;15 Lazygit Features in 15 Minutes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/VDXvbHZYeKY"&gt;Basics Tutorial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/4XaToVut_hs"&gt;Rebase Magic Tutorial&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://repology.org/project/lazygit/versions"&gt;&lt;img src="https://repology.org/badge/vertical-allrepos/lazygit.svg?columns=3" alt="Packaging status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Most of the above packages are maintained by third parties so be sure to vet them yourself and confirm that the maintainer is a trustworthy looking person who attends local sports games and gives back to their communities with barbeque fundraisers etc&lt;/em&gt;&lt;/p&gt; 
&lt;h3&gt;Binary Releases&lt;/h3&gt; 
&lt;p&gt;For Windows, Mac OS(10.12+) or Linux, you can download a binary release &lt;a href="https://raw.githubusercontent.com/jesseduffield/releases"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Dev container feature&lt;/h3&gt; 
&lt;p&gt;If you want to use lazygit in e.g. one of your GitHub Codespaces, there is a third-party &lt;a href="https://github.com/GeorgOfenbeck/features/tree/main/src/lazygit-linuxbinary"&gt;dev container feature&lt;/a&gt; based on the binary releases mentioned above.&lt;/p&gt; 
&lt;h3&gt;Homebrew&lt;/h3&gt; 
&lt;p&gt;It works with Linux, too.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;brew install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MacPorts&lt;/h3&gt; 
&lt;p&gt;Latest version built from github releases. Tap:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;sudo port install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Void Linux&lt;/h3&gt; 
&lt;p&gt;Packages for Void Linux are available in the distro repo&lt;/p&gt; 
&lt;p&gt;They follow upstream latest releases&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo xbps-install -S lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Scoop (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href="https://scoop.sh/"&gt;scoop&lt;/a&gt;. It's in the &lt;code&gt;extras&lt;/code&gt; bucket:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Add the extras bucket
scoop bucket add extras

# Install lazygit
scoop install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;gah (Linux and Mac OS)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href="https://github.com/marverix/gah/"&gt;gah&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;gah install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Arch Linux&lt;/h3&gt; 
&lt;p&gt;Packages for Arch Linux are available via pacman and AUR (Arch User Repository).&lt;/p&gt; 
&lt;p&gt;There are two packages. The stable one which is built with the latest release and the git version which builds from the most recent commit.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Stable: &lt;code&gt;sudo pacman -S lazygit&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Development: &lt;a href="https://aur.archlinux.org/packages/lazygit-git/"&gt;https://aur.archlinux.org/packages/lazygit-git/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Instruction of how to install AUR content can be found here: &lt;a href="https://wiki.archlinux.org/index.php/Arch_User_Repository"&gt;https://wiki.archlinux.org/index.php/Arch_User_Repository&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Fedora / Amazon Linux 2023 / CentOS Stream&lt;/h3&gt; 
&lt;p&gt;Packages for Fedora, Amazon Linux 2023 and CentOS Stream are available via &lt;a href="https://copr.fedorainfracloud.org/coprs/dejan/lazygit/"&gt;Copr&lt;/a&gt; (Cool Other Package Repo).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo dnf copr enable dejan/lazygit
sudo dnf install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;These packages are built using the RPM spec file located here: &lt;a href="https://codeberg.org/dejan/rpm-lazygit"&gt;https://codeberg.org/dejan/rpm-lazygit&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You should be able to build RPMs for Fedora 41 or older, and other Fedora derivatives using the SRPM (Source RPM) file that you can grab from the latest COPR build.&lt;/p&gt; 
&lt;h3&gt;Solus Linux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo eopkg install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Debian and Ubuntu&lt;/h3&gt; 
&lt;p&gt;For &lt;strong&gt;Debian 13 "Trixie", Sid&lt;/strong&gt;, and later, or &lt;strong&gt;Ubuntu 25.10 "Questing Quokka"&lt;/strong&gt; and later:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo apt install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For &lt;strong&gt;Debian 12 "Bookworm", Ubuntu 25.04 "Plucky Puffin"&lt;/strong&gt; and earlier:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | \grep -Po '"tag_name": *"v\K[^"]*')
curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz"
tar xf lazygit.tar.gz lazygit
sudo install lazygit -D -t /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Verify the correct installation of lazygit:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;lazygit --version
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Funtoo Linux&lt;/h3&gt; 
&lt;p&gt;Funtoo Linux has an autogenerated lazygit package in &lt;a href="https://github.com/funtoo/dev-kit/tree/1.4-release/dev-vcs/lazygit"&gt;dev-kit&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo emerge dev-vcs/lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Gentoo Linux&lt;/h3&gt; 
&lt;p&gt;Lazygit is not (yet) in main Gentoo portage, however an ebuild is available in &lt;a href="https://github.com/gentoo-mirror/guru/tree/master/dev-vcs/lazygit"&gt;GURU overlay&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can either add the overlay to your system and install lazygit as usual:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo eselect repository enable guru
sudo emaint sync -r guru
sudo emerge dev-vcs/lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;openSUSE&lt;/h3&gt; 
&lt;p&gt;The lazygit package is currently built in &lt;a href="https://build.opensuse.org/package/show/devel:languages:go/lazygit"&gt;devel:languages:go/lazygit&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To install lazygit on openSUSE Tumbleweed run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;sudo zypper ar https://download.opensuse.org/repositories/devel:/languages:/go/openSUSE_Factory/devel:languages:go.repo
sudo zypper ref &amp;amp;&amp;amp; sudo zypper in lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To install lazygit on openSUSE Leap run:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;source /etc/os-release
sudo zypper ar https://download.opensuse.org/repositories/devel:/languages:/go/$VERSION_ID/devel:languages:go.repo
sudo zypper ref &amp;amp;&amp;amp; sudo zypper in lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NixOS&lt;/h3&gt; 
&lt;h4&gt;Using lazygit from nixpkgs&lt;/h4&gt; 
&lt;p&gt;On NixOS, lazygit is packaged with nix and distributed via nixpkgs. You can try lazygit without installing it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nix-shell -p lazygit
# or with flakes enabled
nix run nixpkgs#lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Or you can add lazygit to your &lt;code&gt;configuration.nix&lt;/code&gt; using the &lt;code&gt;environment.systemPackages&lt;/code&gt; option. More details can be found via NixOS search &lt;a href="https://search.nixos.org/"&gt;page&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Using the official lazygit flake&lt;/h4&gt; 
&lt;p&gt;This repository includes a nix flake that provides the latest development version and additional development tools:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run lazygit directly from the repository:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nix run github:jesseduffield/lazygit
# or from a local clone
nix run .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Build lazygit from source:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nix build github:jesseduffield/lazygit
# or from a local clone
nix build .
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Development environment:&lt;/strong&gt; For contributors, the flake provides a development shell with Go toolchain, development tools, and dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;nix develop github:jesseduffield/lazygit
# or from a local clone
nix develop
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The development shell includes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go toolchain&lt;/li&gt; 
 &lt;li&gt;git and make&lt;/li&gt; 
 &lt;li&gt;Proper environment variables for development&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Using in other flakes:&lt;/strong&gt; The flake also provides an overlay for easy integration into other flake-based projects:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-nix"&gt;{
  inputs.lazygit.url = "github:jesseduffield/lazygit";

  outputs = { self, nixpkgs, lazygit }: {
    # Use the overlay
    nixpkgs.overlays = [ lazygit.overlays.default ];
  };
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flox&lt;/h3&gt; 
&lt;p&gt;Lazygit can be installed into a Flox environment as follows.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;flox install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;More details about Flox can be found on &lt;a href="https://flox.dev/"&gt;their website&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;FreeBSD&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;pkg install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Termux&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;apt install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Conda&lt;/h3&gt; 
&lt;p&gt;Released versions are available for different platforms, see &lt;a href="https://anaconda.org/conda-forge/lazygit"&gt;https://anaconda.org/conda-forge/lazygit&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;conda install -c conda-forge lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go install github.com/jesseduffield/lazygit@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Please note: If you get an error claiming that lazygit cannot be found or is not defined, you may need to add &lt;code&gt;~/go/bin&lt;/code&gt; to your $PATH (MacOS/Linux), or &lt;code&gt;%HOME%\go\bin&lt;/code&gt; (Windows). Not to be mistaken for &lt;code&gt;C:\Go\bin&lt;/code&gt; (which is for Go's own binaries, not apps like lazygit).&lt;/p&gt; 
&lt;h3&gt;Chocolatey (Windows)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using &lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;choco install lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Winget (Windows 10 1709 or later)&lt;/h3&gt; 
&lt;p&gt;You can install &lt;code&gt;lazygit&lt;/code&gt; using the &lt;code&gt;winget&lt;/code&gt; command in the Windows Terminal with the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install -e --id=JesseDuffield.lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Manual&lt;/h3&gt; 
&lt;p&gt;You'll need to &lt;a href="https://golang.org/doc/install"&gt;install Go&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;git clone https://github.com/jesseduffield/lazygit.git
cd lazygit
go install
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can also use &lt;code&gt;go run main.go&lt;/code&gt; to compile and run in one go (pun definitely intended)&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;Call &lt;code&gt;lazygit&lt;/code&gt; in your terminal inside a git repository.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;$ lazygit
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If you want, you can also add an alias for this with &lt;code&gt;echo "alias lg='lazygit'" &amp;gt;&amp;gt; ~/.zshrc&lt;/code&gt; (or whichever rc file you're using).&lt;/p&gt; 
&lt;h3&gt;Keybindings&lt;/h3&gt; 
&lt;p&gt;You can check out the list of keybindings &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/keybindings"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Changing Directory On Exit&lt;/h3&gt; 
&lt;p&gt;If you change repos in lazygit and want your shell to change directory into that repo on exiting lazygit, add this to your &lt;code&gt;~/.zshrc&lt;/code&gt; (or other rc file):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;lg()
{
    export LAZYGIT_NEW_DIR_FILE=~/.lazygit/newdir

    lazygit "$@"

    if [ -f $LAZYGIT_NEW_DIR_FILE ]; then
            cd "$(cat $LAZYGIT_NEW_DIR_FILE)"
            rm -f $LAZYGIT_NEW_DIR_FILE &amp;gt; /dev/null
    fi
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then &lt;code&gt;source ~/.zshrc&lt;/code&gt; and from now on when you call &lt;code&gt;lg&lt;/code&gt; and exit you'll switch directories to whatever you were in inside lazygit. To override this behaviour you can exit using &lt;code&gt;shift+Q&lt;/code&gt; rather than just &lt;code&gt;q&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Undo/Redo&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Undoing.md"&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;Check out the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Config.md"&gt;configuration docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Custom Pagers&lt;/h3&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Pagers.md"&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Custom Commands&lt;/h3&gt; 
&lt;p&gt;If lazygit is missing a feature, there's a good chance you can implement it yourself with a custom command!&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/docs/Custom_Command_Keybindings.md"&gt;docs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Git flow support&lt;/h3&gt; 
&lt;p&gt;Lazygit supports &lt;a href="https://github.com/nvie/gitflow"&gt;Gitflow&lt;/a&gt; if you have it installed. To understand how the Gitflow model works check out Vincent Driessen's original &lt;a href="https://nvie.com/posts/a-successful-git-branching-model/"&gt;post&lt;/a&gt; explaining it. To view Gitflow options from within Lazygit, press &lt;code&gt;i&lt;/code&gt; from within the branches view.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We love your input! Please check out the &lt;a href="https://raw.githubusercontent.com/jesseduffield/lazygit/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt;. For contributor discussion about things not better discussed here in the repo, join the &lt;a href="https://discord.gg/ehwFt2t4wt"&gt;discord channel&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/ehwFt2t4wt"&gt;&lt;img src="https://raw.githubusercontent.com/jesseduffield/lazygit/assets/discord.png" width="75" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Check out this &lt;a href="https://www.youtube.com/watch?v=kNavnhzZHtk"&gt;video&lt;/a&gt; walking through the creation of a small feature in lazygit if you want an idea of where to get started.&lt;/p&gt; 
&lt;h3&gt;Debugging Locally&lt;/h3&gt; 
&lt;p&gt;Run &lt;code&gt;lazygit --debug&lt;/code&gt; in one terminal tab and &lt;code&gt;lazygit --logs&lt;/code&gt; in another to view the program and its log output side by side&lt;/p&gt; 
&lt;h2&gt;Donate&lt;/h2&gt; 
&lt;p&gt;If you would like to support the development of lazygit, consider &lt;a href="https://github.com/sponsors/jesseduffield"&gt;sponsoring me&lt;/a&gt; (github is matching all donations dollar-for-dollar for 12 months)&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;What do the commit colors represent?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Green: the commit is included in the master branch&lt;/li&gt; 
 &lt;li&gt;Yellow: the commit is not included in the master branch&lt;/li&gt; 
 &lt;li&gt;Red: the commit has not been pushed to the upstream branch&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Shameless Plug&lt;/h2&gt; 
&lt;p&gt;If you want to see what I (Jesse) am up to in terms of development, follow me on &lt;a href="https://twitter.com/DuffieldJesse"&gt;twitter&lt;/a&gt; or check out my &lt;a href="https://jesseduffield.com/"&gt;blog&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Alternatives&lt;/h2&gt; 
&lt;p&gt;If you find that lazygit doesn't quite satisfy your requirements, these may be a better fit:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Extrawurst/gitui"&gt;GitUI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jonas/tig"&gt;tig&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>samber/lo</title>
      <link>https://github.com/samber/lo</link>
      <description>&lt;p&gt;💥 A Lodash-style Go library based on Go 1.18+ Generics (map, filter, contains, find...)&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;lo - Iterate over slices, maps, channels...&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/samber/lo/releases"&gt;&lt;img src="https://img.shields.io/github/tag/samber/lo.svg?sanitize=true" alt="tag" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Go-%3E%3D%201.18-%23007d9c" alt="Go Version" /&gt; &lt;a href="https://pkg.go.dev/github.com/samber/lo"&gt;&lt;img src="https://godoc.org/github.com/samber/lo?status.svg?sanitize=true" alt="GoDoc" /&gt;&lt;/a&gt; &lt;img src="https://github.com/samber/lo/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Build Status" /&gt; &lt;a href="https://goreportcard.com/report/github.com/samber/lo"&gt;&lt;img src="https://goreportcard.com/badge/github.com/samber/lo" alt="Go report" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/samber/lo"&gt;&lt;img src="https://img.shields.io/codecov/c/github/samber/lo" alt="Coverage" /&gt;&lt;/a&gt; &lt;a href="https://github.com/samber/lo/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/samber/lo" alt="Contributors" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/samber/lo/master/LICENSE"&gt;&lt;img src="https://img.shields.io/github/license/samber/lo" alt="License" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;✨ &lt;strong&gt;&lt;code&gt;samber/lo&lt;/code&gt; is a Lodash-style Go library based on Go 1.18+ Generics.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A utility library based on Go 1.18+ generics that makes it easier to work with slices, maps, strings, channels, and functions. It provides dozens of handy methods to simplify common coding tasks and improve code readability. It may look like &lt;a href="https://github.com/lodash/lodash"&gt;Lodash&lt;/a&gt; in some aspects.&lt;/p&gt; 
&lt;p&gt;5 to 10 helpers may overlap with those from the Go standard library, in packages &lt;code&gt;slices&lt;/code&gt; and &lt;code&gt;maps&lt;/code&gt;. I feel this library is legitimate and offers many more valuable abstractions.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;See also:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/ro"&gt;samber/ro&lt;/a&gt;: Reactive Programming for Go: declarative and composable API for event-driven applications&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/do"&gt;samber/do&lt;/a&gt;: A dependency injection toolkit based on Go 1.18+ Generics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/samber/mo"&gt;samber/mo&lt;/a&gt;: Monads based on Go 1.18+ Generics (Option, Result, Either...)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;What makes it different from &lt;strong&gt;samber/ro&lt;/strong&gt;?&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;lo: synchronous helpers across finite sequences (maps, slices...)&lt;/li&gt; 
 &lt;li&gt;ro: processing of infinite data streams for event-driven scenarios&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3 align="center"&gt;💖 Support This Project&lt;/h3&gt; 
&lt;p align="center"&gt; I’m going all-in on open-source for the coming months. &lt;br /&gt; Help sustain development: Become an &lt;a href="http://github.com/sponsors/samber"&gt;individual sponsor&lt;/a&gt; or join as a &lt;a href="mailto:hey@samuel-berthe.fr"&gt;corporate sponsor&lt;/a&gt;. &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;strong&gt;Why this name?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;I wanted a &lt;strong&gt;short name&lt;/strong&gt;, similar to "Lodash", and no Go package uses this name.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/samber/lo/master/img/logo-full.png" alt="lo" /&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Install&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go get github.com/samber/lo@v1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This library is v1 and follows SemVer strictly.&lt;/p&gt; 
&lt;p&gt;No breaking changes will be made to exported APIs before v2.0.0.&lt;/p&gt; 
&lt;p&gt;This library has no dependencies outside the Go standard library.&lt;/p&gt; 
&lt;h2&gt;💡 Usage&lt;/h2&gt; 
&lt;p&gt;You can import &lt;code&gt;lo&lt;/code&gt; using:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "github.com/samber/lo"
    lop "github.com/samber/lo/parallel"
    lom "github.com/samber/lo/mutable"
    loi "github.com/samber/lo/it"
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then use one of the helpers below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;names := lo.Uniq([]string{"Samuel", "John", "Samuel"})
// []string{"Samuel", "John"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tips for lazy developers&lt;/h3&gt; 
&lt;p&gt;I cannot recommend it, but in case you are too lazy for repeating &lt;code&gt;lo.&lt;/code&gt; everywhere, you can import the entire library into the namespace.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    . "github.com/samber/lo"
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;I take no responsibility for this junk. 😁 💩&lt;/p&gt; 
&lt;h2&gt;🤠 Spec&lt;/h2&gt; 
&lt;p&gt;GoDoc: &lt;a href="https://godoc.org/github.com/samber/lo"&gt;godoc.org/github.com/samber/lo&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Documentation: &lt;a href="https://lo.samber.dev/docs/about"&gt;lo.samber.dev&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Supported helpers for slices:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filter"&gt;Filter&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#map"&gt;Map&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqmap"&gt;UniqMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filtermap"&gt;FilterMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#flatmap"&gt;FlatMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reduce"&gt;Reduce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reduceright"&gt;ReduceRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#foreach"&gt;ForEach&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#foreachwhile"&gt;ForEachWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#times"&gt;Times&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniq"&gt;Uniq&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqby"&gt;UniqBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#groupby"&gt;GroupBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#groupbymap"&gt;GroupByMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#chunk"&gt;Chunk&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#partitionby"&gt;PartitionBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#flatten"&gt;Flatten&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#interleave"&gt;Interleave&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#shuffle"&gt;Shuffle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reverse"&gt;Reverse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fill"&gt;Fill&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#repeat"&gt;Repeat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#repeatby"&gt;RepeatBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#keyby"&gt;KeyBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#slicetomap-alias-associate"&gt;SliceToMap / Associate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filterslicetomap"&gt;FilterSliceToMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#keyify"&gt;Keyify&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#drop"&gt;Drop&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#dropright"&gt;DropRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#dropwhile"&gt;DropWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#droprightwhile"&gt;DropRightWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#DropByIndex"&gt;DropByIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#reject"&gt;Reject&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#rejectmap"&gt;RejectMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#filterreject"&gt;FilterReject&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#count"&gt;Count&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#countby"&gt;CountBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#countvalues"&gt;CountValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#countvaluesby"&gt;CountValuesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#subset"&gt;Subset&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#slice"&gt;Slice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#replace"&gt;Replace&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#replaceall"&gt;ReplaceAll&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#compact"&gt;Compact&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#issorted"&gt;IsSorted&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#issortedbykey"&gt;IsSortedByKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#Splice"&gt;Splice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#Cut"&gt;Cut&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#CutPrefix"&gt;CutPrefix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#CutSuffix"&gt;CutSuffix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#Trim"&gt;Trim&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimLeft"&gt;TrimLeft&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimPrefix"&gt;TrimPrefix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimRight"&gt;TrimRight&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#TrimSuffix"&gt;TrimSuffix&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for maps:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#keys"&gt;Keys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqkeys"&gt;UniqKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#haskey"&gt;HasKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#valueor"&gt;ValueOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#values"&gt;Values&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#uniqvalues"&gt;UniqValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pickby"&gt;PickBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pickbykeys"&gt;PickByKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pickbyvalues"&gt;PickByValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#omitby"&gt;OmitBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#omitbykeys"&gt;OmitByKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#omitbyvalues"&gt;OmitByValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#entries-alias-topairs"&gt;Entries / ToPairs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromentries-alias-frompairs"&gt;FromEntries / FromPairs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#invert"&gt;Invert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#assign"&gt;Assign (merge of maps)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#chunkentries"&gt;ChunkEntries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mapkeys"&gt;MapKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mapvalues"&gt;MapValues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mapentries"&gt;MapEntries&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maptoslice"&gt;MapToSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FilterMapToSlice"&gt;FilterMapToSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FilterKeys"&gt;FilterKeys&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FilterValues"&gt;FilterValues&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported math helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#range--rangefrom--rangewithsteps"&gt;Range / RangeFrom / RangeWithSteps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#clamp"&gt;Clamp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sum"&gt;Sum&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sumby"&gt;SumBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#product"&gt;Product&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#productby"&gt;ProductBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mean"&gt;Mean&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#meanby"&gt;MeanBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#mode"&gt;Mode&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for strings:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#randomstring"&gt;RandomString&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#substring"&gt;Substring&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#chunkstring"&gt;ChunkString&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#runelength"&gt;RuneLength&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#pascalcase"&gt;PascalCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#camelcase"&gt;CamelCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#kebabcase"&gt;KebabCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#snakecase"&gt;SnakeCase&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#words"&gt;Words&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#capitalize"&gt;Capitalize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ellipsis"&gt;Ellipsis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for tuples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#t2---t9"&gt;T2 -&amp;gt; T9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#unpack2---unpack9"&gt;Unpack2 -&amp;gt; Unpack9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#zip2---zip9"&gt;Zip2 -&amp;gt; Zip9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#zipby2---zipby9"&gt;ZipBy2 -&amp;gt; ZipBy9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#unzip2---unzip9"&gt;Unzip2 -&amp;gt; Unzip9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#unzipby2---unzipby9"&gt;UnzipBy2 -&amp;gt; UnzipBy9&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#crossjoin2---crossjoin9"&gt;CrossJoin2 -&amp;gt; CrossJoin2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#crossjoinby2---crossjoinby9"&gt;CrossJoinBy2 -&amp;gt; CrossJoinBy2&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for time and duration:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#duration"&gt;Duration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#duration0---duration10"&gt;Duration0 -&amp;gt; Duration10&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported helpers for channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#channeldispatcher"&gt;ChannelDispatcher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#slicetochannel"&gt;SliceToChannel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#channeltoslice"&gt;ChannelToSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#generator"&gt;Generator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#buffer"&gt;Buffer&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#bufferwithcontext"&gt;BufferWithContext&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#bufferwithtimeout"&gt;BufferWithTimeout&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fanin"&gt;FanIn&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fanout"&gt;FanOut&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported intersection helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#contains"&gt;Contains&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#containsby"&gt;ContainsBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#every"&gt;Every&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#everyby"&gt;EveryBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#some"&gt;Some&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#someby"&gt;SomeBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#none"&gt;None&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#noneby"&gt;NoneBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#intersect"&gt;Intersect&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#difference"&gt;Difference&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#union"&gt;Union&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#without"&gt;Without&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#withoutby"&gt;WithoutBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#withoutempty"&gt;WithoutEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#withoutnth"&gt;WithoutNth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ElementsMatch"&gt;ElementsMatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ElementsMatchBy"&gt;ElementsMatchBy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Supported search helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#indexof"&gt;IndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#lastindexof"&gt;LastIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#hasprefix"&gt;HasPrefix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#hassuffix"&gt;HasSuffix&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#find"&gt;Find&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findindexof"&gt;FindIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findlastindexof"&gt;FindLastIndexOf&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findorelse"&gt;FindOrElse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findkey"&gt;FindKey&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findkeyby"&gt;FindKeyBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#finduniques"&gt;FindUniques&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#finduniquesby"&gt;FindUniquesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findduplicates"&gt;FindDuplicates&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#findduplicatesby"&gt;FindDuplicatesBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#min"&gt;Min&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#minindex"&gt;MinIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#minby"&gt;MinBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#minindexby"&gt;MinIndexBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#earliest"&gt;Earliest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#earliestby"&gt;EarliestBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#max"&gt;Max&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maxindex"&gt;MaxIndex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maxby"&gt;MaxBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#maxindexby"&gt;MaxIndexBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#latest"&gt;Latest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#latestby"&gt;LatestBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#first"&gt;First&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FirstOrEmpty"&gt;FirstOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#FirstOr"&gt;FirstOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#last"&gt;Last&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#LastOrEmpty"&gt;LastOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#LastOr"&gt;LastOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nth"&gt;Nth&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nthor"&gt;NthOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nthorempty"&gt;NthOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sample"&gt;Sample&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#sampleby"&gt;SampleBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#samples"&gt;Samples&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#samplesby"&gt;SamplesBy&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Conditional helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ternary"&gt;Ternary&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#ternaryf"&gt;TernaryF&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#if--elseif--else"&gt;If / ElseIf / Else&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#switch--case--default"&gt;Switch / Case / Default&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Type manipulation helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isnil"&gt;IsNil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isnotnil"&gt;IsNotNil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#toptr"&gt;ToPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#nil"&gt;Nil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#emptyabletoptr"&gt;EmptyableToPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromptr"&gt;FromPtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromptror"&gt;FromPtrOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#tosliceptr"&gt;ToSlicePtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromsliceptr"&gt;FromSlicePtr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromsliceptror"&gt;FromSlicePtrOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#toanyslice"&gt;ToAnySlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#fromanyslice"&gt;FromAnySlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#empty"&gt;Empty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isempty"&gt;IsEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#isnotempty"&gt;IsNotEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalesce"&gt;Coalesce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalesceorempty"&gt;CoalesceOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalesceslice"&gt;CoalesceSlice&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalescesliceorempty"&gt;CoalesceSliceOrEmpty&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalescemap"&gt;CoalesceMap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#coalescemaporempty"&gt;CoalesceMapOrEmpty&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Function helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#partial"&gt;Partial&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#partial2---partial5"&gt;Partial2 -&amp;gt; Partial5&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Concurrency helpers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attempt"&gt;Attempt&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attemptwhile"&gt;AttemptWhile&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attemptwithdelay"&gt;AttemptWithDelay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#attemptwhilewithdelay"&gt;AttemptWhileWithDelay&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#debounce"&gt;Debounce&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#debounceby"&gt;DebounceBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;Throttle&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;ThrottleWithCount&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;ThrottleBy&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#throttle"&gt;ThrottleByWithCount&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#synchronize"&gt;Synchronize&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#async"&gt;Async&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#async0-6"&gt;Async{0-&amp;gt;6}&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#transaction"&gt;Transaction&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#waitfor"&gt;WaitFor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#waitforwithcontext"&gt;WaitForWithContext&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Error handling:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#validate"&gt;Validate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#must"&gt;Must&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#try"&gt;Try&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#try0-6"&gt;Try1 -&amp;gt; Try6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#tryor"&gt;TryOr&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#tryor0-6"&gt;TryOr1 -&amp;gt; TryOr6&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#trycatch"&gt;TryCatch&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#trywitherrorvalue"&gt;TryWithErrorValue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#trycatchwitherrorvalue"&gt;TryCatchWithErrorValue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#errorsas"&gt;ErrorsAs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#assert"&gt;Assert&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/#assertf"&gt;Assertf&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Constraints:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Clonable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Filter&lt;/h3&gt; 
&lt;p&gt;Iterates over a collection and returns a slice of all the elements the predicate function returns &lt;code&gt;true&lt;/code&gt; for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;even := lo.Filter([]int{1, 2, 3, 4}, func(x int, index int) bool {
    return x%2 == 0
})
// []int{2, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Apjg3WeSi7K"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Mutable: like &lt;code&gt;lo.Filter()&lt;/code&gt;, but the slice is updated in place.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{1, 2, 3, 4}
newList := lom.Filter(list, func(x int) bool {
    return x%2 == 0
})

list
// []int{2, 4, 3, 4}

newList
// []int{2, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Map&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice of one type and transforms it into a slice of another type:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/samber/lo"

lo.Map([]int64{1, 2, 3, 4}, func(x int64, index int) string {
    return strconv.FormatInt(x, 10)
})
// []string{"1", "2", "3", "4"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/OkPcYAhBo0D"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.Map()&lt;/code&gt;, but the mapper function is called in a goroutine. Results are returned in the same order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.Map([]int64{1, 2, 3, 4}, func(x int64, _ int) string {
    return strconv.FormatInt(x, 10)
})
// []string{"1", "2", "3", "4"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/sCJaB3quRMC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Mutable: like &lt;code&gt;lo.Map()&lt;/code&gt;, but the slice is updated in place.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{1, 2, 3, 4}
lom.Map(list, func(x int) int {
    return x*2
})
// []int{2, 4, 6, 8}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/0jY3Z0B7O_5"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqMap&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice and transforms it to a slice of another type with unique values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type User struct {
    Name string
    Age  int
}
users := []User{{Name: "Alex", Age: 10}, {Name: "Alex", Age: 12}, {Name: "Bob", Age: 11}, {Name: "Alice", Age: 20}}

names := lo.UniqMap(users, func(u User, index int) string {
    return u.Name
})
// []string{"Alex", "Bob", "Alice"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/fygzLBhvUdB"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterMap&lt;/h3&gt; 
&lt;p&gt;Returns a slice obtained after both filtering and mapping using the given callback function.&lt;/p&gt; 
&lt;p&gt;The callback function should return two values: the result of the mapping operation and whether the result element should be included or not.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;matching := lo.FilterMap([]string{"cpu", "gpu", "mouse", "keyboard"}, func(x string, _ int) (string, bool) {
    if strings.HasSuffix(x, "pu") {
        return "xpu", true
    }
    return "", false
})
// []string{"xpu", "xpu"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-AuYXfy7opz"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FlatMap&lt;/h3&gt; 
&lt;p&gt;Manipulates a slice and transforms and flattens it to a slice of another type. The transform function can either return a slice or a &lt;code&gt;nil&lt;/code&gt;, and in the &lt;code&gt;nil&lt;/code&gt; case no value is added to the final slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.FlatMap([]int64{0, 1, 2}, func(x int64, _ int) []string {
    return []string{
        strconv.FormatInt(x, 10),
        strconv.FormatInt(x, 10),
    }
})
// []string{"0", "0", "1", "1", "2", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/YSoYmQTA8-U"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reduce&lt;/h3&gt; 
&lt;p&gt;Reduces a collection to a single value. The value is calculated by accumulating the result of running each element in the collection through an accumulator function. Each successive invocation is supplied with the return value returned by the previous call.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;sum := lo.Reduce([]int{1, 2, 3, 4}, func(agg int, item int, _ int) int {
    return agg + item
}, 0)
// 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/R4UHXZNaaUG"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ReduceRight&lt;/h3&gt; 
&lt;p&gt;Like &lt;code&gt;lo.Reduce&lt;/code&gt; except that it iterates over elements of collection from right to left.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.ReduceRight([][]int{{0, 1}, {2, 3}, {4, 5}}, func(agg []int, item []int, _ int) []int {
    return append(agg, item...)
}, []int{})
// []int{4, 5, 2, 3, 0, 1}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Fq3W70l7wXF"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ForEach&lt;/h3&gt; 
&lt;p&gt;Iterates over elements of a collection and invokes the function over each element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/samber/lo"

lo.ForEach([]string{"hello", "world"}, func(x string, _ int) {
    println(x)
})
// prints "hello\nworld\n"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/oofyiUPRf8t"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.ForEach()&lt;/code&gt;, but the callback is called as a goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.ForEach([]string{"hello", "world"}, func(x string, _ int) {
    println(x)
})
// prints "hello\nworld\n" or "world\nhello\n"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ForEachWhile&lt;/h3&gt; 
&lt;p&gt;Iterates over collection elements and invokes iteratee for each element collection return value decide to continue or break, like do while().&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int64{1, 2, -42, 4}

lo.ForEachWhile(list, func(x int64, _ int) bool {
	if x &amp;lt; 0 {
		return false
	}
	fmt.Println(x)
	return true
})
// 1
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/QnLGt35tnow"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Times&lt;/h3&gt; 
&lt;p&gt;Times invokes the iteratee n times, returning a slice of the results of each invocation. The iteratee is invoked with index as argument.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "github.com/samber/lo"

lo.Times(3, func(i int) string {
    return strconv.FormatInt(int64(i), 10)
})
// []string{"0", "1", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/vgQj3Glr6lT"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.Times()&lt;/code&gt;, but callback is called in goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.Times(3, func(i int) string {
    return strconv.FormatInt(int64(i), 10)
})
// []string{"0", "1", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Uniq&lt;/h3&gt; 
&lt;p&gt;Returns a duplicate-free version of a slice, in which only the first occurrence of each element is kept. The order of result values is determined by the order they occur in the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqValues := lo.Uniq([]int{1, 2, 2, 1})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/DTzbeXZ6iEN"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqBy&lt;/h3&gt; 
&lt;p&gt;Returns a duplicate-free version of a slice, in which only the first occurrence of each element is kept. The order of result values is determined by the order they occur in the slice. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in the slice to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqValues := lo.UniqBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// []int{0, 1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/g42Z3QSb53u"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;GroupBy&lt;/h3&gt; 
&lt;p&gt;Returns an object composed of keys generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lo "github.com/samber/lo"

groups := lo.GroupBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// map[int][]int{0: []int{0, 3}, 1: []int{1, 4}, 2: []int{2, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/XnQBd_v6brd"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.GroupBy()&lt;/code&gt;, but callback is called in goroutine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

lop.GroupBy([]int{0, 1, 2, 3, 4, 5}, func(i int) int {
    return i%3
})
// map[int][]int{0: []int{0, 3}, 1: []int{1, 4}, 2: []int{2, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;GroupByMap&lt;/h3&gt; 
&lt;p&gt;Returns an object composed of keys generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lo "github.com/samber/lo"

groups := lo.GroupByMap([]int{0, 1, 2, 3, 4, 5}, func(i int) (int, int) {
    return i%3, i*2
})
// map[int][]int{0: []int{0, 6}, 1: []int{2, 8}, 2: []int{4, 10}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/iMeruQ3_W80"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Chunk&lt;/h3&gt; 
&lt;p&gt;Returns a slice of elements split into groups of length size. If the slice can't be split evenly, the final chunk will be the remaining elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Chunk([]int{0, 1, 2, 3, 4, 5}, 2)
// [][]int{{0, 1}, {2, 3}, {4, 5}}

lo.Chunk([]int{0, 1, 2, 3, 4, 5, 6}, 2)
// [][]int{{0, 1}, {2, 3}, {4, 5}, {6}}

lo.Chunk([]int{}, 2)
// [][]int{}

lo.Chunk([]int{0}, 2)
// [][]int{{0}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/kEMkFbdu85g"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PartitionBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice of elements split into groups. The order of grouped values is determined by the order they occur in collection. The grouping is generated from the results of running each element of collection through iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lo "github.com/samber/lo"

partitions := lo.PartitionBy([]int{-2, -1, 0, 1, 2, 3, 4, 5}, func(x int) string {
    if x &amp;lt; 0 {
        return "negative"
    } else if x%2 == 0 {
        return "even"
    }
    return "odd"
})
// [][]int{{-2, -1}, {0, 2, 4}, {1, 3, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/NfQ_nGjkgXW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Parallel processing: like &lt;code&gt;lo.PartitionBy()&lt;/code&gt;, but callback is called in goroutine. Results are returned in the same order.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lop "github.com/samber/lo/parallel"

partitions := lop.PartitionBy([]int{-2, -1, 0, 1, 2, 3, 4, 5}, func(x int) string {
    if x &amp;lt; 0 {
        return "negative"
    } else if x%2 == 0 {
        return "even"
    }
    return "odd"
})
// [][]int{{-2, -1}, {0, 2, 4}, {1, 3, 5}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flatten&lt;/h3&gt; 
&lt;p&gt;Returns a slice a single level deep.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;flat := lo.Flatten([][]int{{0, 1}, {2, 3, 4, 5}})
// []int{0, 1, 2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/rbp9ORaMpjw"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Interleave&lt;/h3&gt; 
&lt;p&gt;Round-robin alternating input slices and sequentially appending value at index into result.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;interleaved := lo.Interleave([]int{1, 4, 7}, []int{2, 5, 8}, []int{3, 6, 9})
// []int{1, 2, 3, 4, 5, 6, 7, 8, 9}

interleaved := lo.Interleave([]int{1}, []int{2, 5, 8}, []int{3, 6}, []int{4, 7, 9, 10})
// []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-RJkTLQEDVt"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Shuffle&lt;/h3&gt; 
&lt;p&gt;Returns a slice of shuffled values. Uses the Fisher-Yates shuffle algorithm.&lt;/p&gt; 
&lt;p&gt;⚠️ This helper is &lt;strong&gt;mutable&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{0, 1, 2, 3, 4, 5}
lom.Shuffle(list)

list
// []int{1, 4, 0, 3, 5, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2xb3WdLjeSJ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reverse&lt;/h3&gt; 
&lt;p&gt;Reverses a slice so that the first element becomes the last, the second element becomes the second to last, and so on.&lt;/p&gt; 
&lt;p&gt;⚠️ This helper is &lt;strong&gt;mutable&lt;/strong&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import lom "github.com/samber/lo/mutable"

list := []int{0, 1, 2, 3, 4, 5}
lom.Reverse(list)

list
// []int{5, 4, 3, 2, 1, 0}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/O-M5pmCRgzV"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Fill&lt;/h3&gt; 
&lt;p&gt;Fills elements of a slice with &lt;code&gt;initial&lt;/code&gt; value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
  bar string
}

func (f foo) Clone() foo {
  return foo{f.bar}
}

initializedSlice := lo.Fill([]foo{foo{"a"}, foo{"a"}}, foo{"b"})
// []foo{foo{"b"}, foo{"b"}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/VwR34GzqEub"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Repeat&lt;/h3&gt; 
&lt;p&gt;Builds a slice with N copies of initial value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
  bar string
}

func (f foo) Clone() foo {
  return foo{f.bar}
}

slice := lo.Repeat(2, foo{"a"})
// []foo{foo{"a"}, foo{"a"}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/g3uHXbmc3b6"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RepeatBy&lt;/h3&gt; 
&lt;p&gt;Builds a slice with values returned by N calls of callback.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := lo.RepeatBy(0, func (i int) string {
    return strconv.FormatInt(int64(math.Pow(float64(i), 2)), 10)
})
// []string{}

slice := lo.RepeatBy(5, func(i int) string {
    return strconv.FormatInt(int64(math.Pow(float64(i), 2)), 10)
})
// []string{"0", "1", "4", "9", "16"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ozZLCtX_hNU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;KeyBy&lt;/h3&gt; 
&lt;p&gt;Transforms a slice or a slice of structs to a map based on a pivot callback.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.KeyBy([]string{"a", "aa", "aaa"}, func(str string) int {
    return len(str)
})
// map[int]string{1: "a", 2: "aa", 3: "aaa"}

type Character struct {
  dir  string
  code int
}
characters := []Character{
    {dir: "left", code: 97},
    {dir: "right", code: 100},
}
result := lo.KeyBy(characters, func(char Character) string {
    return string(rune(char.code))
})
//map[a:{dir:left code:97} d:{dir:right code:100}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mdaClUAT-zZ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SliceToMap (alias: Associate)&lt;/h3&gt; 
&lt;p&gt;Returns a map containing key-value pairs provided by transform function applied to elements of the given slice. If any of two pairs have the same key the last one gets added to the map.&lt;/p&gt; 
&lt;p&gt;The order of keys in returned map is not specified and is not guaranteed to be the same from the original slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []*foo{{baz: "apple", bar: 1}, {baz: "banana", bar: 2}}

aMap := lo.SliceToMap(in, func (f *foo) (string, int) {
    return f.baz, f.bar
})
// map[string][int]{ "apple":1, "banana":2 }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/WHa2CfMO3Lr"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterSliceToMap&lt;/h3&gt; 
&lt;p&gt;Returns a map containing key-value pairs provided by transform function applied to elements of the given slice.&lt;/p&gt; 
&lt;p&gt;If any of two pairs have the same key the last one gets added to the map.&lt;/p&gt; 
&lt;p&gt;The order of keys in returned map is not specified and is not guaranteed to be the same from the original slice.&lt;/p&gt; 
&lt;p&gt;The third return value of the transform function is a boolean that indicates whether the key-value pair should be included in the map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []string{"a", "aa", "aaa"}

result := lo.FilterSliceToMap(list, func(str string) (string, int, bool) {
    return str, len(str), len(str) &amp;gt; 1
})
// map[string][int]{"aa":2 "aaa":3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2z0rDz2ZSGU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Keyify&lt;/h3&gt; 
&lt;p&gt;Returns a map with each unique element of the slice as a key.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;set := lo.Keyify([]int{1, 1, 2, 3, 4})
// map[int]struct{}{1:{}, 2:{}, 3:{}, 4:{}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/RYhhM_csqIG"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Drop&lt;/h3&gt; 
&lt;p&gt;Drops n elements from the beginning of a slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.Drop([]int{0, 1, 2, 3, 4, 5}, 2)
// []int{2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/JswS7vXRJP2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropRight&lt;/h3&gt; 
&lt;p&gt;Drops n elements from the end of a slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropRight([]int{0, 1, 2, 3, 4, 5}, 2)
// []int{0, 1, 2, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/GG0nXkSJJa3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropWhile&lt;/h3&gt; 
&lt;p&gt;Drop elements from the beginning of a slice while the predicate returns true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropWhile([]string{"a", "aa", "aaa", "aa", "aa"}, func(val string) bool {
    return len(val) &amp;lt;= 2
})
// []string{"aaa", "aa", "aa"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/7gBPYw2IK16"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropRightWhile&lt;/h3&gt; 
&lt;p&gt;Drop elements from the end of a slice while the predicate returns true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropRightWhile([]string{"a", "aa", "aaa", "aa", "aa"}, func(val string) bool {
    return len(val) &amp;lt;= 2
})
// []string{"a", "aa", "aaa"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/3-n71oEC0Hz"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DropByIndex&lt;/h3&gt; 
&lt;p&gt;Drops elements from a slice by the index. A negative index will drop elements from the end of the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;l := lo.DropByIndex([]int{0, 1, 2, 3, 4, 5}, 2, 4, -1)
// []int{0, 1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/JswS7vXRJP2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Reject&lt;/h3&gt; 
&lt;p&gt;The opposite of Filter, this method returns the elements of collection that predicate does not return true for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;odd := lo.Reject([]int{1, 2, 3, 4}, func(x int, _ int) bool {
    return x%2 == 0
})
// []int{1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/YkLMODy1WEL"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RejectMap&lt;/h3&gt; 
&lt;p&gt;The opposite of FilterMap, this method returns a slice obtained after both filtering and mapping using the given callback function.&lt;/p&gt; 
&lt;p&gt;The callback function should return two values:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;the result of the mapping operation and&lt;/li&gt; 
 &lt;li&gt;whether the result element should be included or not.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;items := lo.RejectMap([]int{1, 2, 3, 4}, func(x int, _ int) (int, bool) {
    return x*10, x%2 == 0
})
// []int{10, 30}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FilterReject&lt;/h3&gt; 
&lt;p&gt;Mixes Filter and Reject, this method returns two slices, one for the elements of collection that predicate returns true for and one for the elements that predicate does not return true for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kept, rejected := lo.FilterReject([]int{1, 2, 3, 4}, func(x int, _ int) bool {
    return x%2 == 0
})
// []int{2, 4}
// []int{1, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Count&lt;/h3&gt; 
&lt;p&gt;Counts the number of elements in the collection that equal value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count := lo.Count([]int{1, 5, 1}, 1)
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Y3FlK54yveC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountBy&lt;/h3&gt; 
&lt;p&gt;Counts the number of elements in the collection for which predicate is true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count := lo.CountBy([]int{1, 5, 1}, func(i int) bool {
    return i &amp;lt; 4
})
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ByQbNYQQi4X"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountValues&lt;/h3&gt; 
&lt;p&gt;Counts the number of each element in the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.CountValues([]int{})
// map[int]int{}

lo.CountValues([]int{1, 2})
// map[int]int{1: 1, 2: 1}

lo.CountValues([]int{1, 2, 2})
// map[int]int{1: 1, 2: 2}

lo.CountValues([]string{"foo", "bar", ""})
// map[string]int{"": 1, "foo": 1, "bar": 1}

lo.CountValues([]string{"foo", "bar", "bar"})
// map[string]int{"foo": 1, "bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-p-PyLT4dfy"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CountValuesBy&lt;/h3&gt; 
&lt;p&gt;Counts the number of each element in the collection. It is equivalent to chaining lo.Map and lo.CountValues.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;isEven := func(v int) bool {
    return v%2==0
}

lo.CountValuesBy([]int{}, isEven)
// map[bool]int{}

lo.CountValuesBy([]int{1, 2}, isEven)
// map[bool]int{false: 1, true: 1}

lo.CountValuesBy([]int{1, 2, 2}, isEven)
// map[bool]int{false: 1, true: 2}

length := func(v string) int {
    return len(v)
}

lo.CountValuesBy([]string{"foo", "bar", ""}, length)
// map[int]int{0: 1, 3: 2}

lo.CountValuesBy([]string{"foo", "bar", "bar"}, length)
// map[int]int{3: 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2U0dG1SnOmS"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Subset&lt;/h3&gt; 
&lt;p&gt;Returns a copy of a slice from &lt;code&gt;offset&lt;/code&gt; up to &lt;code&gt;length&lt;/code&gt; elements. Like &lt;code&gt;slice[start:start+length]&lt;/code&gt;, but does not panic on overflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 2, 3, 4}

sub := lo.Subset(in, 2, 3)
// []int{2, 3, 4}

sub := lo.Subset(in, -4, 3)
// []int{1, 2, 3}

sub := lo.Subset(in, -2, math.MaxUint)
// []int{3, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tOQu1GhFcog"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Slice&lt;/h3&gt; 
&lt;p&gt;Returns a copy of a slice from &lt;code&gt;start&lt;/code&gt; up to, but not including &lt;code&gt;end&lt;/code&gt;. Like &lt;code&gt;slice[start:end]&lt;/code&gt;, but does not panic on overflow.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 2, 3, 4}

slice := lo.Slice(in, 0, 5)
// []int{0, 1, 2, 3, 4}

slice := lo.Slice(in, 2, 3)
// []int{2}

slice := lo.Slice(in, 2, 6)
// []int{2, 3, 4}

slice := lo.Slice(in, 4, 3)
// []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/8XWYhfMMA1h"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Replace&lt;/h3&gt; 
&lt;p&gt;Returns a copy of the slice with the first n non-overlapping instances of old replaced by new.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, 1)
// []int{42, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, -1, 42, 1)
// []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, 2)
// []int{42, 1, 42, 1, 2, 3, 0}

slice := lo.Replace(in, 0, 42, -1)
// []int{42, 1, 42, 1, 2, 3, 42}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/XfPzmf9gql6"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ReplaceAll&lt;/h3&gt; 
&lt;p&gt;Returns a copy of the slice with all non-overlapping instances of old replaced by new.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []int{0, 1, 0, 1, 2, 3, 0}

slice := lo.ReplaceAll(in, 0, 42)
// []int{42, 1, 42, 1, 2, 3, 42}

slice := lo.ReplaceAll(in, -1, 42)
// []int{0, 1, 0, 1, 2, 3, 0}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/a9xZFUHfYcV"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Compact&lt;/h3&gt; 
&lt;p&gt;Returns a slice of all non-zero elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := []string{"", "foo", "", "bar", ""}

slice := lo.Compact(in)
// []string{"foo", "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tXiy-iK6PAc"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsSorted&lt;/h3&gt; 
&lt;p&gt;Checks if a slice is sorted.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := lo.IsSorted([]int{0, 1, 2, 3, 4, 5, 6, 7, 8, 9})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mc3qR-t4mcx"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsSortedByKey&lt;/h3&gt; 
&lt;p&gt;Checks if a slice is sorted by iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := lo.IsSortedByKey([]string{"a", "bb", "ccc"}, func(s string) int {
    return len(s)
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/wiG6XyBBu49"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Splice&lt;/h3&gt; 
&lt;p&gt;Splice inserts multiple elements at index i. A negative index counts back from the end of the slice. The helper is protected against overflow errors.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Splice([]string{"a", "b"}, 1, "1", "2")
// []string{"a", "1", "2", "b"}

// negative
result = lo.Splice([]string{"a", "b"}, -1, "1", "2")
// []string{"a", "1", "2", "b"}

// overflow
result = lo.Splice([]string{"a", "b"}, 42, "1", "2")
// []string{"a", "b", "1", "2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/G5_GhkeSUBA"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Cut&lt;/h3&gt; 
&lt;p&gt;Slices collection around the first instance of separator, returning the part of collection before and after separator. The found result reports whether separator appears in collection. If separator does not appear in s, cut returns collection, empty slice of []T, false.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;actualLeft, actualRight, result = lo.Cut([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"b", "c", "d"})
// actualLeft: []string{"a"}
// actualRight: []string{"e", "f", "g"}
// result: true

result = lo.Cut([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"z"})
// actualLeft: []string{"a", "b", "c", "d", "e", "f", "g"}
// actualRight: []string{}
// result: false

result = lo.Cut([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"a", "b"})
// actualLeft: []string{}
// actualRight: []string{"c", "d", "e", "f", "g"}
// result: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/GiL3qhpIP3f"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CutPrefix&lt;/h3&gt; 
&lt;p&gt;Returns collection without the provided leading prefix []T and reports whether it found the prefix. If s doesn't start with prefix, CutPrefix returns collection, false. If prefix is the empty []T, CutPrefix returns collection, true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;actualRight, result = lo.CutPrefix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"a", "b", "c"})
// actualRight: []string{"d", "e", "f", "g"}
// result: true

result = lo.CutPrefix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"b"})
// actualRight: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: false

result = lo.CutPrefix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{})
// actualRight: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/7Plak4a1ICl"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CutSuffix&lt;/h3&gt; 
&lt;p&gt;Returns collection without the provided ending suffix []T and reports whether it found the suffix. If it doesn't end with suffix, CutSuffix returns collection, false. If suffix is the empty []T, CutSuffix returns collection, true.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;actualLeft, result = lo.CutSuffix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"f", "g"})
// actualLeft: []string{"a", "b", "c", "d", "e"}
// result: true

actualLeft, result = lo.CutSuffix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{"b"})
// actualLeft: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: false

actualLeft, result = lo.CutSuffix([]string{"a", "b", "c", "d", "e", "f", "g"}, []string{})
// actualLeft: []string{"a", "b", "c", "d", "e", "f", "g"}
// result: true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/7FKfBFvPTaT"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Trim&lt;/h3&gt; 
&lt;p&gt;Removes all the leading and trailing cutset from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Trim([]int{0, 1, 2, 0, 3, 0}, []int{1, 0})
// []int{2, 0, 3}

result := lo.Trim([]string{"hello", "world", " "}, []string{" ", ""})
// []string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/1an9mxLdRG5"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimLeft&lt;/h3&gt; 
&lt;p&gt;Removes all the leading cutset from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimLeft([]int{0, 1, 2, 0, 3, 0}, []int{1, 0})
// []int{2, 0, 3, 0}

result := lo.TrimLeft([]string{"hello", "world", " "}, []string{" ", ""})
// []string{"hello", "world", " "}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/74aqfAYLmyi"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimPrefix&lt;/h3&gt; 
&lt;p&gt;Removes all the leading prefix from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimPrefix([]int{1, 2, 1, 2, 3, 1, 2, 4}, []int{1, 2})
// []int{3, 1, 2, 4}

result := lo.TrimPrefix([]string{"hello", "world", "hello", "test"}, []string{"hello"})
// []string{"world", "hello", "test"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/SHO6X-YegPg"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimRight&lt;/h3&gt; 
&lt;p&gt;Removes all the trailing cutset from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimRight([]int{0, 1, 2, 0, 3, 0}, []int{0, 3})
// []int{0, 1, 2}

result := lo.TrimRight([]string{"hello", "world", "  "}, []string{" ", ""})
// []string{"hello", "world", ""}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/MRpAfR6sf0g"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TrimSuffix&lt;/h3&gt; 
&lt;p&gt;Removes all the trailing suffix from the collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TrimSuffix([]int{1, 2, 3, 1, 2, 4, 2, 4, 2, 4}, []int{2, 4})
// []int{1, 2, 3, 1}

result := lo.TrimSuffix([]string{"hello", "world", "hello", "test"}, []string{"test"})
// []string{"hello", "world", "hello"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/IjEUrV0iofq"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Keys&lt;/h3&gt; 
&lt;p&gt;Creates a slice of the map keys.&lt;/p&gt; 
&lt;p&gt;Use the UniqKeys variant to deduplicate common keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;keys := lo.Keys(map[string]int{"foo": 1, "bar": 2})
// []string{"foo", "bar"}

keys := lo.Keys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []string{"foo", "bar", "baz"}

keys := lo.Keys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 3})
// []string{"foo", "bar", "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Uu11fHASqrU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqKeys&lt;/h3&gt; 
&lt;p&gt;Creates a slice of unique map keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;keys := lo.UniqKeys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []string{"foo", "bar", "baz"}

keys := lo.UniqKeys(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 3})
// []string{"foo", "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TPKAb6ILdHk"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;HasKey&lt;/h3&gt; 
&lt;p&gt;Returns whether the given key exists.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;exists := lo.HasKey(map[string]int{"foo": 1, "bar": 2}, "foo")
// true

exists := lo.HasKey(map[string]int{"foo": 1, "bar": 2}, "baz")
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/aVwubIvECqS"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Values&lt;/h3&gt; 
&lt;p&gt;Creates a slice of the map values.&lt;/p&gt; 
&lt;p&gt;Use the UniqValues variant to deduplicate common values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;values := lo.Values(map[string]int{"foo": 1, "bar": 2})
// []int{1, 2}

values := lo.Values(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []int{1, 2, 3}

values := lo.Values(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 2})
// []int{1, 2, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/nnRTQkzQfF6"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UniqValues&lt;/h3&gt; 
&lt;p&gt;Creates a slice of unique map values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;values := lo.UniqValues(map[string]int{"foo": 1, "bar": 2})
// []int{1, 2}

values := lo.UniqValues(map[string]int{"foo": 1, "bar": 2}, map[string]int{"baz": 3})
// []int{1, 2, 3}

values := lo.UniqValues(map[string]int{"foo": 1, "bar": 2}, map[string]int{"bar": 2})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/nf6bXMh7rM3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ValueOr&lt;/h3&gt; 
&lt;p&gt;Returns the value of the given key or the fallback value if the key is not present.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;value := lo.ValueOr(map[string]int{"foo": 1, "bar": 2}, "foo", 42)
// 1

value := lo.ValueOr(map[string]int{"foo": 1, "bar": 2}, "baz", 42)
// 42
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/bAq9mHErB4V"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickBy&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given predicate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.PickBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(key string, value int) bool {
    return value%2 == 1
})
// map[string]int{"foo": 1, "baz": 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/kdg8GR_QMmf"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickByKeys&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.PickByKeys(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []string{"foo", "baz"})
// map[string]int{"foo": 1, "baz": 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/R1imbuci9qU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PickByValues&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.PickByValues(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []int{1, 3})
// map[string]int{"foo": 1, "baz": 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/1zdzSvbfsJc"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitBy&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given predicate.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.OmitBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(key string, value int) bool {
    return value%2 == 1
})
// map[string]int{"bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/EtBsR43bdsd"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitByKeys&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given keys.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.OmitByKeys(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []string{"foo", "baz"})
// map[string]int{"bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t1QjCrs-ysk"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;OmitByValues&lt;/h3&gt; 
&lt;p&gt;Returns same map type filtered by given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.OmitByValues(map[string]int{"foo": 1, "bar": 2, "baz": 3}, []int{1, 3})
// map[string]int{"bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/9UYZi-hrs8j"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Entries (alias: ToPairs)&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice of key/value pairs.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;entries := lo.Entries(map[string]int{"foo": 1, "bar": 2})
// []lo.Entry[string, int]{
//     {
//         Key: "foo",
//         Value: 1,
//     },
//     {
//         Key: "bar",
//         Value: 2,
//     },
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/_t4Xe34-Nl5"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FromEntries (alias: FromPairs)&lt;/h3&gt; 
&lt;p&gt;Transforms a slice of key/value pairs into a map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := lo.FromEntries([]lo.Entry[string, int]{
    {
        Key: "foo",
        Value: 1,
    },
    {
        Key: "bar",
        Value: 2,
    },
})
// map[string]int{"foo": 1, "bar": 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/oIr5KHFGCEN"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Invert&lt;/h3&gt; 
&lt;p&gt;Creates a map composed of the inverted keys and values. If map contains duplicate values, subsequent values overwrite property assignments of previous values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m1 := lo.Invert(map[string]int{"a": 1, "b": 2})
// map[int]string{1: "a", 2: "b"}

m2 := lo.Invert(map[string]int{"a": 1, "b": 2, "c": 1})
// map[int]string{1: "c", 2: "b"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/rFQ4rak6iA1"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assign&lt;/h3&gt; 
&lt;p&gt;Merges multiple maps from left to right.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mergedMaps := lo.Assign(
    map[string]int{"a": 1, "b": 2},
    map[string]int{"b": 3, "c": 4},
)
// map[string]int{"a": 1, "b": 3, "c": 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/VhwfJOyxf5o"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChunkEntries&lt;/h3&gt; 
&lt;p&gt;Splits a map into a slice of elements in groups of length equal to its size. If the map cannot be split evenly, the final chunk will contain the remaining elements.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;maps := lo.ChunkEntries(
    map[string]int{
        "a": 1,
        "b": 2,
        "c": 3,
        "d": 4,
        "e": 5,
    },
    3,
)
// []map[string]int{
//    {"a": 1, "b": 2, "c": 3},
//    {"d": 4, "e": 5},
// }
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/X_YQL6mmoD-"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapKeys&lt;/h3&gt; 
&lt;p&gt;Manipulates map keys and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m2 := lo.MapKeys(map[int]int{1: 1, 2: 2, 3: 3, 4: 4}, func(_ int, v int) string {
    return strconv.FormatInt(int64(v), 10)
})
// map[string]int{"1": 1, "2": 2, "3": 3, "4": 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/9_4WPIqOetJ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapValues&lt;/h3&gt; 
&lt;p&gt;Manipulates map values and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m1 := map[int]int64{1: 1, 2: 2, 3: 3}

m2 := lo.MapValues(m1, func(x int64, _ int) string {
    return strconv.FormatInt(x, 10)
})
// map[int]string{1: "1", 2: "2", 3: "3"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/T_8xAfvcf0W"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapEntries&lt;/h3&gt; 
&lt;p&gt;Manipulates map entries and transforms it to a map of another type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;in := map[string]int{"foo": 1, "bar": 2}

out := lo.MapEntries(in, func(k string, v int) (int, string) {
    return v,k
})
// map[int]string{1: "foo", 2: "bar"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/VuvNQzxKimT"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MapToSlice&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on specified iteratee.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;m := map[int]int64{1: 4, 2: 5, 3: 6}

s := lo.MapToSlice(m, func(k int, v int64) string {
    return fmt.Sprintf("%d_%d", k, v)
})
// []string{"1_4", "2_5", "3_6"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ZuiCZpDt6LD"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterMapToSlice&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on specified iteratee. The iteratee returns a value and a boolean. If the boolean is true, the value is added to the result slice.&lt;/p&gt; 
&lt;p&gt;If the boolean is false, the value is not added to the result slice. The order of the keys in the input map is not specified and the order of the keys in the output slice is not guaranteed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kv := map[int]int64{1: 1, 2: 2, 3: 3, 4: 4}

result := lo.FilterMapToSlice(kv, func(k int, v int64) (string, bool) {
    return fmt.Sprintf("%d_%d", k, v), k%2 == 0
})
// []{"2_2", "4_4"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FilterKeys&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on predicate returns true for specific elements. It is a mix of &lt;code&gt;lo.Filter()&lt;/code&gt; and &lt;code&gt;lo.Keys()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kv := map[int]string{1: "foo", 2: "bar", 3: "baz"}

result := FilterKeys(kv, func(k int, v string) bool {
    return v == "foo"
})
// [1]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/OFlKXlPrBAe"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FilterValues&lt;/h3&gt; 
&lt;p&gt;Transforms a map into a slice based on predicate returns true for specific elements. It is a mix of &lt;code&gt;lo.Filter()&lt;/code&gt; and &lt;code&gt;lo.Values()&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;kv := map[int]string{1: "foo", 2: "bar", 3: "baz"}

result := FilterValues(kv, func(k int, v string) bool {
    return v == "foo"
})
// ["foo"]
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/YVD5r_h-LX-"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Range / RangeFrom / RangeWithSteps&lt;/h3&gt; 
&lt;p&gt;Creates a slice of numbers (positive and/or negative) progressing from start up to, but not including end.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Range(4)
// [0, 1, 2, 3]

result := lo.Range(-4)
// [0, -1, -2, -3]

result := lo.RangeFrom(1, 5)
// [1, 2, 3, 4, 5]

result := lo.RangeFrom[float64](1.0, 5)
// [1.0, 2.0, 3.0, 4.0, 5.0]

result := lo.RangeWithSteps(0, 20, 5)
// [0, 5, 10, 15]

result := lo.RangeWithSteps[float32](-1.0, -4.0, -1.0)
// [-1.0, -2.0, -3.0]

result := lo.RangeWithSteps(1, 4, -1)
// []

result := lo.Range(0)
// []
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/0r6VimXAi9H"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Clamp&lt;/h3&gt; 
&lt;p&gt;Clamps number within the inclusive lower and upper bounds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;r1 := lo.Clamp(0, -10, 10)
// 0

r2 := lo.Clamp(-42, -10, 10)
// -10

r3 := lo.Clamp(42, -10, 10)
// 10
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/RU4lJNC2hlI"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Sum&lt;/h3&gt; 
&lt;p&gt;Sums the values in a collection.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}
sum := lo.Sum(list)
// 15
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/upfeJVqs4Bt"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SumBy&lt;/h3&gt; 
&lt;p&gt;Summarizes the values in a collection using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;strings := []string{"foo", "bar"}
sum := lo.SumBy(strings, func(item string) int {
    return len(item)
})
// 6
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Product&lt;/h3&gt; 
&lt;p&gt;Calculates the product of the values in a collection.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}
product := lo.Product(list)
// 120
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/2_kjM_smtAH"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ProductBy&lt;/h3&gt; 
&lt;p&gt;Calculates the product of the values in a collection using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;strings := []string{"foo", "bar"}
product := lo.ProductBy(strings, func(item string) int {
    return len(item)
})
// 9
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/wadzrWr9Aer"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Mean&lt;/h3&gt; 
&lt;p&gt;Calculates the mean of a collection of numbers.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mean := lo.Mean([]int{2, 3, 4, 5})
// 3

mean := lo.Mean([]float64{2, 3, 4, 5})
// 3.5

mean := lo.Mean([]float64{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MeanBy&lt;/h3&gt; 
&lt;p&gt;Calculates the mean of a collection of numbers using the given return value from the iteration function.&lt;/p&gt; 
&lt;p&gt;If collection is empty 0 is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []string{"aa", "bbb", "cccc", "ddddd"}
mapper := func(item string) float64 {
    return float64(len(item))
}

mean := lo.MeanBy(list, mapper)
// 3.5

mean := lo.MeanBy([]float64{}, mapper)
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/j7TsVwBOZ7P"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Mode&lt;/h3&gt; 
&lt;p&gt;Calculates the mode (most frequent value) of a collection of numbers.&lt;/p&gt; 
&lt;p&gt;If multiple values have the same highest frequency, then multiple values are returned.&lt;/p&gt; 
&lt;p&gt;If the collection is empty, the zero value of &lt;code&gt;T[]&lt;/code&gt; is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mode := lo.Mode([]int{2, 2, 3, 4})
// [2]

mode := lo.Mode([]float64{2, 2, 3, 3})
// [2, 3]

mode := lo.Mode([]float64{})
// []

mode := lo.Mode([]int{1, 2, 3, 4, 5, 6, 7, 8, 9})
// [1, 2, 3, 4, 5, 6, 7, 8, 9]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;RandomString&lt;/h3&gt; 
&lt;p&gt;Returns a random string of the specified length and made of the specified charset.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.RandomString(5, lo.LettersCharset)
// example: "eIGbt"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/rRseOQVVum4"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Substring&lt;/h3&gt; 
&lt;p&gt;Return part of a string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;sub := lo.Substring("hello", 2, 3)
// "llo"

sub := lo.Substring("hello", -4, 3)
// "ell"

sub := lo.Substring("hello", -2, math.MaxUint)
// "lo"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TQlxQi82Lu1"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChunkString&lt;/h3&gt; 
&lt;p&gt;Returns a slice of strings split into groups of length size. If the string can't be split evenly, the final chunk will be the remaining characters.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.ChunkString("123456", 2)
// []string{"12", "34", "56"}

lo.ChunkString("1234567", 2)
// []string{"12", "34", "56", "7"}

lo.ChunkString("", 2)
// []string{""}

lo.ChunkString("1", 2)
// []string{"1"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/__FLTuJVz54"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;RuneLength&lt;/h3&gt; 
&lt;p&gt;An alias to utf8.RuneCountInString which returns the number of runes in string.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;sub := lo.RuneLength("hellô")
// 5

sub := len("hellô")
// 6
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tuhgW_lWY8l"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;PascalCase&lt;/h3&gt; 
&lt;p&gt;Converts string to pascal case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.PascalCase("hello_world")
// HelloWorld
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Dy_V_6DUYhe"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;CamelCase&lt;/h3&gt; 
&lt;p&gt;Converts string to camel case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.CamelCase("hello_world")
// helloWorld
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Go6aKwUiq59"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;KebabCase&lt;/h3&gt; 
&lt;p&gt;Converts string to kebab case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.KebabCase("helloWorld")
// hello-world
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/96gT_WZnTVP"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SnakeCase&lt;/h3&gt; 
&lt;p&gt;Converts string to snake case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.SnakeCase("HelloWorld")
// hello_world
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ziB0V89IeVH"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Words&lt;/h3&gt; 
&lt;p&gt;Splits string into a slice of its words.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.Words("helloWorld")
// []string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-f3VIQqiaVw"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Capitalize&lt;/h3&gt; 
&lt;p&gt;Converts the first character of string to upper case and the remaining to lower case.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.Capitalize("heLLO")
// Hello
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/uLTZZQXqnsa"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Ellipsis&lt;/h3&gt; 
&lt;p&gt;Trims and truncates a string to a specified length in &lt;code&gt;bytes&lt;/code&gt; and appends an ellipsis if truncated. If the string contains non-ASCII characters (which may occupy multiple bytes in UTF-8), truncating by byte length may split a character in the middle, potentially resulting in garbled output.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.Ellipsis("  Lorem Ipsum  ", 5)
// Lo...

str := lo.Ellipsis("Lorem Ipsum", 100)
// Lorem Ipsum

str := lo.Ellipsis("Lorem Ipsum", 3)
// ...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/qE93rgqe1TW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;T2 -&amp;gt; T9&lt;/h3&gt; 
&lt;p&gt;Creates a tuple from a list of values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;tuple1 := lo.T2("x", 1)
// Tuple2[string, int]{A: "x", B: 1}

func example() (string, int) { return "y", 2 }
tuple2 := lo.T2(example())
// Tuple2[string, int]{A: "y", B: 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/IllL3ZO4BQm"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Unpack2 -&amp;gt; Unpack9&lt;/h3&gt; 
&lt;p&gt;Returns values contained in a tuple.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;r1, r2 := lo.Unpack2(lo.Tuple2[string, int]{"a", 1})
// "a", 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Unpack is also available as a method of TupleX.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;tuple2 := lo.T2("a", 1)
a, b := tuple2.Unpack()
// "a", 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/xVP_k0kJ96W"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Zip2 -&amp;gt; Zip9&lt;/h3&gt; 
&lt;p&gt;Zip creates a slice of grouped elements, the first of which contains the first elements of the given slices, the second of which contains the second elements of the given slices, and so on.&lt;/p&gt; 
&lt;p&gt;When collections are different sizes, the Tuple attributes are filled with zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;tuples := lo.Zip2([]string{"a", "b"}, []int{1, 2})
// []Tuple2[string, int]{{A: "a", B: 1}, {A: "b", B: 2}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/jujaA6GaJTp"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ZipBy2 -&amp;gt; ZipBy9&lt;/h3&gt; 
&lt;p&gt;ZipBy creates a slice of transformed elements, the first of which contains the first elements of the given slices, the second of which contains the second elements of the given slices, and so on.&lt;/p&gt; 
&lt;p&gt;When collections are different sizes, the Tuple attributes are filled with zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;items := lo.ZipBy2([]string{"a", "b"}, []int{1, 2}, func(a string, b int) string {
    return fmt.Sprintf("%s-%d", a, b)
})
// []string{"a-1", "b-2"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Unzip2 -&amp;gt; Unzip9&lt;/h3&gt; 
&lt;p&gt;Unzip accepts a slice of grouped elements and creates a slice regrouping the elements to their pre-zip configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;a, b := lo.Unzip2([]Tuple2[string, int]{{A: "a", B: 1}, {A: "b", B: 2}})
// []string{"a", "b"}
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/ciHugugvaAW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;UnzipBy2 -&amp;gt; UnzipBy9&lt;/h3&gt; 
&lt;p&gt;UnzipBy2 iterates over a collection and creates a slice regrouping the elements to their pre-zip configuration.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;a, b := lo.UnzipBy2([]string{"hello", "john", "doe"}, func(str string) (string, int) {
    return str, len(str)
})
// []string{"hello", "john", "doe"}
// []int{5, 4, 3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CrossJoin2 -&amp;gt; CrossJoin9&lt;/h3&gt; 
&lt;p&gt;Combines every item from one list with every item from others. It is the cartesian product of lists received as arguments. Returns an empty list if a list is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CrossJoin2([]string{"hello", "john", "doe"}, []int{1, 2})
// lo.Tuple2{"hello", 1}
// lo.Tuple2{"hello", 2}
// lo.Tuple2{"john", 1}
// lo.Tuple2{"john", 2}
// lo.Tuple2{"doe", 1}
// lo.Tuple2{"doe", 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CrossJoinBy2 -&amp;gt; CrossJoinBy9&lt;/h3&gt; 
&lt;p&gt;Combines every item from one list with every item from others. It is the cartesian product of lists received as arguments. The project function is used to create the output values. Returns an empty list if a list is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CrossJoinBy2([]string{"hello", "john", "doe"}, []int{1, 2}, func(a A, b B) string {
    return fmt.Sprintf("%s - %d", a, b)
})
// "hello - 1"
// "hello - 2"
// "john - 1"
// "john - 2"
// "doe - 1"
// "doe - 2"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Duration&lt;/h3&gt; 
&lt;p&gt;Returns the time taken to execute a function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duration := lo.Duration(func() {
    // very long job
})
// 3s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/HQfbBbAXaFP"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Duration0 -&amp;gt; Duration10&lt;/h3&gt; 
&lt;p&gt;Returns the time taken to execute a function.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duration := lo.Duration0(func() {
    // very long job
})
// 3s

err, duration := lo.Duration1(func() error {
    // very long job
    return errors.New("an error")
})
// an error
// 3s

str, nbr, err, duration := lo.Duration3(func() (string, int, error) {
    // very long job
    return "hello", 42, nil
})
// hello
// 42
// nil
// 3s
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ChannelDispatcher&lt;/h3&gt; 
&lt;p&gt;Distributes messages from input channels into N child channels. Close events are propagated to children.&lt;/p&gt; 
&lt;p&gt;Underlying channels can have a fixed buffer capacity or be unbuffered when cap is 0.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := make(chan int, 42)
for i := 0; i &amp;lt;= 10; i++ {
    ch &amp;lt;- i
}

children := lo.ChannelDispatcher(ch, 5, 10, DispatchingStrategyRoundRobin[int])
// []&amp;lt;-chan int{...}

consumer := func(c &amp;lt;-chan int) {
    for {
        msg, ok := &amp;lt;-c
        if !ok {
            println("closed")

            break
        }

        println(msg)
    }
}

for i := range children {
    go consumer(children[i])
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/UZGu2wVg3J2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;Many distributions strategies are available:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyRoundRobin&lt;/a&gt;: Distributes messages in a rotating sequential manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyRandom&lt;/a&gt;: Distributes messages in a random manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyWeightedRandom&lt;/a&gt;: Distributes messages in a weighted manner.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyFirst&lt;/a&gt;: Distributes messages in the first non-full channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyLeast&lt;/a&gt;: Distributes messages in the emptiest channel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/samber/lo/master/channel.go"&gt;lo.DispatchingStrategyMost&lt;/a&gt;: Distributes to the fullest channel.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some strategies bring fallback, in order to favor non-blocking behaviors. See implementations.&lt;/p&gt; 
&lt;p&gt;For custom strategies, just implement the &lt;code&gt;lo.DispatchingStrategy&lt;/code&gt; prototype:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type DispatchingStrategy[T any] func(message T, messageIndex uint64, channels []&amp;lt;-chan T) int
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Eg:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type Message struct {
    TenantID uuid.UUID
}

func hash(id uuid.UUID) int {
    h := fnv.New32a()
    h.Write([]byte(id.String()))
    return int(h.Sum32())
}

// Routes messages per TenantID.
customStrategy := func(message string, messageIndex uint64, channels []&amp;lt;-chan string) int {
    destination := hash(message) % len(channels)

    // check if channel is full
    if len(channels[destination]) &amp;lt; cap(channels[destination]) {
        return destination
    }

    // fallback when child channel is full
    return utils.DispatchingStrategyRoundRobin(message, uint64(destination), channels)
}

children := lo.ChannelDispatcher(ch, 5, 10, customStrategy)
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SliceToChannel&lt;/h3&gt; 
&lt;p&gt;Returns a read-only channel of collection elements. Channel is closed after last element. Channel capacity can be customized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}

for v := range lo.SliceToChannel(2, list) {
    println(v)
}
// prints 1, then 2, then 3, then 4, then 5
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/lIbSY3QmiEg"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ChannelToSlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice built from channel items. Blocks until channel closes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;list := []int{1, 2, 3, 4, 5}
ch := lo.SliceToChannel(2, list)

items := ChannelToSlice(ch)
// []int{1, 2, 3, 4, 5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Generator&lt;/h3&gt; 
&lt;p&gt;Implements the generator design pattern. Channel is closed after last element. Channel capacity can be customized.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;generator := func(yield func(int)) {
    yield(1)
    yield(2)
    yield(3)
}

for v := range lo.Generator(2, generator) {
    println(v)
}
// prints 1, then 2, then 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Buffer&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := lo.SliceToChannel(2, []int{1, 2, 3, 4, 5})

items1, length1, duration1, ok1 := lo.Buffer(ch, 3)
// []int{1, 2, 3}, 3, 0s, true
items2, length2, duration2, ok2 := lo.Buffer(ch, 3)
// []int{4, 5}, 2, 0s, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: RabbitMQ consumer 👇&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := readFromQueue()

for {
    // read 1k items
    items, length, _, ok := lo.Buffer(ch, 1000)

    // do batching stuff

    if !ok {
        break
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;BufferWithContext&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel, with timeout. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ctx, cancel := context.WithCancel(context.TODO())
go func() {
    ch &amp;lt;- 0
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 1
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 2
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 3
    time.Sleep(10*time.Millisecond)
    ch &amp;lt;- 4
    time.Sleep(10*time.Millisecond)
    cancel()
}()

items1, length1, duration1, ok1 := lo.BufferWithContext(ctx, ch, 3)
// []int{0, 1, 2}, 3, 20ms, true
items2, length2, duration2, ok2 := lo.BufferWithContext(ctx, ch, 3)
// []int{3, 4}, 2, 30ms, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;BufferWithTimeout&lt;/h3&gt; 
&lt;p&gt;Creates a slice of n elements from a channel, with timeout. Returns the slice, the slice length, the read time and the channel status (opened/closed).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;generator := func(yield func(int)) {
    for i := 0; i &amp;lt; 5; i++ {
        yield(i)
        time.Sleep(35*time.Millisecond)
    }
}

ch := lo.Generator(0, generator)

items1, length1, duration1, ok1 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{1, 2}, 2, 100ms, true
items2, length2, duration2, ok2 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{3, 4, 5}, 3, 75ms, true
items3, length3, duration2, ok3 := lo.BufferWithTimeout(ch, 3, 100*time.Millisecond)
// []int{}, 0, 10ms, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: RabbitMQ consumer 👇&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := readFromQueue()

for {
    // read 1k items
    // wait up to 1 second
    items, length, _, ok := lo.BufferWithTimeout(ch, 1000, 1*time.Second)

    // do batching stuff

    if !ok {
        break
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example: Multithreaded RabbitMQ consumer 👇&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := readFromQueue()

// 5 workers
// prefetch 1k messages per worker
children := lo.ChannelDispatcher(ch, 5, 1000, lo.DispatchingStrategyFirst[int])

consumer := func(c &amp;lt;-chan int) {
    for {
        // read 1k items
        // wait up to 1 second
        items, length, _, ok := lo.BufferWithTimeout(ch, 1000, 1*time.Second)

        // do batching stuff

        if !ok {
            break
        }
    }
}

for i := range children {
    go consumer(children[i])
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FanIn&lt;/h3&gt; 
&lt;p&gt;Merge messages from multiple input channels into a single buffered channel. Output messages have no priority. When all upstream channels reach EOF, downstream channel closes.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;stream1 := make(chan int, 42)
stream2 := make(chan int, 42)
stream3 := make(chan int, 42)

all := lo.FanIn(100, stream1, stream2, stream3)
// &amp;lt;-chan int
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FanOut&lt;/h3&gt; 
&lt;p&gt;Broadcasts all the upstream messages to multiple downstream channels. When upstream channel reaches EOF, downstream channels close. If any downstream channels is full, broadcasting is paused.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;stream := make(chan int, 42)

all := lo.FanOut(5, 100, stream)
// [5]&amp;lt;-chan int
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Contains&lt;/h3&gt; 
&lt;p&gt;Returns true if an element is present in a collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;present := lo.Contains([]int{0, 1, 2, 3, 4, 5}, 5)
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/W1EvyqY6t9j"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ContainsBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate function returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;present := lo.ContainsBy([]int{0, 1, 2, 3, 4, 5}, func(x int) bool {
    return x == 3
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Every&lt;/h3&gt; 
&lt;p&gt;Returns true if all elements of a subset are contained in a collection or if the subset is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Every([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// true

ok := lo.Every([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EveryBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate returns true for all elements in the collection or if the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := EveryBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 5
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/dn1-vhHsq9x"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Some&lt;/h3&gt; 
&lt;p&gt;Returns true if at least 1 element of a subset is contained in a collection. If the subset is empty Some returns false.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Some([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Lj4ceFkeT9V"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;p&gt;ok := lo.Some([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6}) // false&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;
### SomeBy

Returns true if the predicate returns true for any of the elements in the collection.
If the collection is empty SomeBy returns false.

```go
b := SomeBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 3
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;None&lt;/h3&gt; 
&lt;p&gt;Returns true if no element of a subset is contained in a collection or if the subset is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := None([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// false
b := None([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/fye7JsmxzPV"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;NoneBy&lt;/h3&gt; 
&lt;p&gt;Returns true if the predicate returns true for none of the elements in the collection or if the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := NoneBy([]int{1, 2, 3, 4}, func(x int) bool {
    return x &amp;lt; 0
})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/O64WZ32H58S"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Intersect&lt;/h3&gt; 
&lt;p&gt;Returns the intersection between two collections.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result1 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{0, 2})
// []int{0, 2}

result2 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{0, 6})
// []int{0}

result3 := lo.Intersect([]int{0, 1, 2, 3, 4, 5}, []int{-1, 6})
// []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Difference&lt;/h3&gt; 
&lt;p&gt;Returns the difference between two collections.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The first value is the collection of elements absent from list2.&lt;/li&gt; 
 &lt;li&gt;The second value is the collection of elements absent from list1.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;left, right := lo.Difference([]int{0, 1, 2, 3, 4, 5}, []int{0, 2, 6})
// []int{1, 3, 4, 5}, []int{6}

left, right := lo.Difference([]int{0, 1, 2, 3, 4, 5}, []int{0, 1, 2, 3, 4, 5})
// []int{}, []int{}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/pKE-JgzqRpz"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Union&lt;/h3&gt; 
&lt;p&gt;Returns all distinct elements from given collections. Result will not change the order of elements relatively.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;union := lo.Union([]int{0, 1, 2, 3, 4, 5}, []int{0, 2}, []int{0, 10})
// []int{0, 1, 2, 3, 4, 5, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Without&lt;/h3&gt; 
&lt;p&gt;Returns a slice excluding all given values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;subset := lo.Without([]int{0, 2, 10}, 2)
// []int{0, 10}

subset := lo.Without([]int{0, 2, 10}, 0, 1, 2, 3, 4, 5)
// []int{10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutBy&lt;/h3&gt; 
&lt;p&gt;Filters a slice by excluding elements whose extracted keys match any in the exclude list.&lt;/p&gt; 
&lt;p&gt;Returns a new slice containing only the elements whose keys are not in the exclude list.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type struct User {
    ID int
    Name string
}

// original users
users := []User{
    {ID: 1, Name: "Alice"},
    {ID: 2, Name: "Bob"},
    {ID: 3, Name: "Charlie"},
}

// extract function to get the user ID
getID := func(user User) int {
    return user.ID
}

// exclude users with IDs 2 and 3
excludedIDs := []int{2, 3}

// filtering users
filteredUsers := lo.WithoutBy(users, getID, excludedIDs...)
// []User[{ID: 1, Name: "Alice"}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutEmpty&lt;/h3&gt; 
&lt;p&gt;Returns a slice excluding zero values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;subset := lo.WithoutEmpty([]int{0, 2, 10})
// []int{2, 10}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WithoutNth&lt;/h3&gt; 
&lt;p&gt;Returns a slice excluding the nth value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;subset := lo.WithoutNth([]int{-2, -1, 0, 1, 2}, 3, -42, 1)
// []int{-2, 0, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ElementsMatch&lt;/h3&gt; 
&lt;p&gt;Returns true if lists contain the same set of elements (including empty set).&lt;/p&gt; 
&lt;p&gt;If there are duplicate elements, the number of occurrences in each list should match.&lt;/p&gt; 
&lt;p&gt;The order of elements is not checked.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := lo.ElementsMatch([]int{1, 1, 2}, []int{2, 1, 1})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ElementsMatchBy&lt;/h3&gt; 
&lt;p&gt;Returns true if lists contain the same set of elements' keys (including empty set).&lt;/p&gt; 
&lt;p&gt;If there are duplicate keys, the number of occurrences in each list should match.&lt;/p&gt; 
&lt;p&gt;The order of elements is not checked.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;b := lo.ElementsMatchBy(
    []someType{a, b},
    []someType{b, a},
    func(item someType) string { return item.ID() },
)
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IndexOf&lt;/h3&gt; 
&lt;p&gt;Returns the index at which the first occurrence of a value is found in a slice or -1 if the value cannot be found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;found := lo.IndexOf([]int{0, 1, 2, 1, 2, 3}, 2)
// 2

notFound := lo.IndexOf([]int{0, 1, 2, 1, 2, 3}, 6)
// -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Eo7W0lvKTky"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;LastIndexOf&lt;/h3&gt; 
&lt;p&gt;Returns the index at which the last occurrence of a value is found in a slice or -1 if the value cannot be found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;found := lo.LastIndexOf([]int{0, 1, 2, 1, 2, 3}, 2)
// 4

notFound := lo.LastIndexOf([]int{0, 1, 2, 1, 2, 3}, 6)
// -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;HasPrefix&lt;/h3&gt; 
&lt;p&gt;Returns true if the collection has the prefix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.HasPrefix([]int{1, 2, 3, 4}, []int{42})
// false

ok := lo.HasPrefix([]int{1, 2, 3, 4}, []int{1, 2})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/SrljzVDpMQM"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;HasSuffix&lt;/h3&gt; 
&lt;p&gt;Returns true if the collection has the suffix.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.HasSuffix([]int{1, 2, 3, 4}, []int{42})
// false

ok := lo.HasSuffix([]int{1, 2, 3, 4}, []int{3, 4})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/bJeLetQNAON"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Find&lt;/h3&gt; 
&lt;p&gt;Searches for an element in a slice based on a predicate. Returns element and true if element was found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, ok := lo.Find([]string{"a", "b", "c", "d"}, func(i string) bool {
    return i == "b"
})
// "b", true

str, ok := lo.Find([]string{"foobar"}, func(i string) bool {
    return i == "b"
})
// "", false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Eo7W0lvKTky"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FindIndexOf&lt;/h3&gt; 
&lt;p&gt;FindIndexOf searches for an element in a slice based on a predicate and returns the index and true. Returns -1 and false if the element is not found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, index, ok := lo.FindIndexOf([]string{"a", "b", "a", "b"}, func(i string) bool {
    return i == "b"
})
// "b", 1, true

str, index, ok := lo.FindIndexOf([]string{"foobar"}, func(i string) bool {
    return i == "b"
})
// "", -1, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/XWSEM4Ic_t0"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FindLastIndexOf&lt;/h3&gt; 
&lt;p&gt;FindLastIndexOf searches for the last element in a slice based on a predicate and returns the index and true. Returns -1 and false if the element is not found.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, index, ok := lo.FindLastIndexOf([]string{"a", "b", "a", "b"}, func(i string) bool {
    return i == "b"
})
// "b", 4, true

str, index, ok := lo.FindLastIndexOf([]string{"foobar"}, func(i string) bool {
    return i == "b"
})
// "", -1, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/dPiMRtJ6cUx"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;FindOrElse&lt;/h3&gt; 
&lt;p&gt;Searches for an element in a slice based on a predicate. Returns the element if found or a given fallback value otherwise.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := lo.FindOrElse([]string{"a", "b", "c", "d"}, "x", func(i string) bool {
    return i == "b"
})
// "b"

str := lo.FindOrElse([]string{"foobar"}, "x", func(i string) bool {
    return i == "b"
})
// "x"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindKey&lt;/h3&gt; 
&lt;p&gt;Returns the key of the first value matching.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result1, ok1 := lo.FindKey(map[string]int{"foo": 1, "bar": 2, "baz": 3}, 2)
// "bar", true

result2, ok2 := lo.FindKey(map[string]int{"foo": 1, "bar": 2, "baz": 3}, 42)
// "", false

type test struct {
    foobar string
}
result3, ok3 := lo.FindKey(map[string]test{"foo": test{"foo"}, "bar": test{"bar"}, "baz": test{"baz"}}, test{"foo"})
// "foo", true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindKeyBy&lt;/h3&gt; 
&lt;p&gt;Returns the key of the first element predicate returns true for.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result1, ok1 := lo.FindKeyBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(k string, v int) bool {
    return k == "foo"
})
// "foo", true

result2, ok2 := lo.FindKeyBy(map[string]int{"foo": 1, "bar": 2, "baz": 3}, func(k string, v int) bool {
    return false
})
// "", false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindUniques&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all the elements that appear in the collection only once. The order of result values is determined by the order they occur in the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqueValues := lo.FindUniques([]int{1, 2, 2, 1, 2, 3})
// []int{3}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindUniquesBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all the elements that appear in the collection only once. The order of result values is determined by the order they occur in the slice. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in the slice to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;uniqueValues := lo.FindUniquesBy([]int{3, 4, 5, 6, 7}, func(i int) int {
    return i%3
})
// []int{5}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindDuplicates&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the first occurrence of each duplicated element in the collection. The order of result values is determined by the order they occur in the slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duplicatedValues := lo.FindDuplicates([]int{1, 2, 2, 1, 2, 3})
// []int{1, 2}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FindDuplicatesBy&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the first occurrence of each duplicated element in the collection. The order of result values is determined by the order they occur in the slice. It accepts &lt;code&gt;iteratee&lt;/code&gt; which is invoked for each element in the slice to generate the criterion by which uniqueness is computed.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;duplicatedValues := lo.FindDuplicatesBy([]int{3, 4, 5, 6, 7}, func(i int) int {
    return i%3
})
// []int{3, 4}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Min&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min := lo.Min([]int{1, 2, 3})
// 1

min := lo.Min([]int{})
// 0

min := lo.Min([]time.Duration{time.Second, time.Hour})
// 1s
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/r6e-Z8JozS8"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;MinIndex&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection and the index of the minimum value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min, index := lo.MinIndex([]int{1, 2, 3})
// 1, 0

min, index := lo.MinIndex([]int{})
// 0, -1

min, index := lo.MinIndex([]time.Duration{time.Second, time.Hour})
// 1s, 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MinBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection using the given comparison function.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the smallest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min := lo.MinBy([]string{"s1", "string2", "s3"}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// "s1"

min := lo.MinBy([]string{}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MinIndexBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum value of a collection using the given comparison function and the index of the minimum value.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the smallest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;min, index := lo.MinIndexBy([]string{"s1", "string2", "s3"}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// "s1", 0

min, index := lo.MinIndexBy([]string{}, func(item string, min string) bool {
    return len(item) &amp;lt; len(min)
})
// "", -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Earliest&lt;/h3&gt; 
&lt;p&gt;Search the minimum time.Time of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;earliest := lo.Earliest(time.Now(), time.Time{})
// 0001-01-01 00:00:00 +0000 UTC
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EarliestBy&lt;/h3&gt; 
&lt;p&gt;Search the minimum time.Time of a collection using the given iteratee function.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
    bar time.Time
}

earliest := lo.EarliestBy([]foo{{time.Now()}, {}}, func(i foo) time.Time {
    return i.bar
})
// {bar:{2023-04-01 01:02:03 +0000 UTC}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Max&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max := lo.Max([]int{1, 2, 3})
// 3

max := lo.Max([]int{})
// 0

max := lo.Max([]time.Duration{time.Second, time.Hour})
// 1h
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxIndex&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection and the index of the maximum value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max, index := lo.MaxIndex([]int{1, 2, 3})
// 3, 2

max, index := lo.MaxIndex([]int{})
// 0, -1

max, index := lo.MaxIndex([]time.Duration{time.Second, time.Hour})
// 1h, 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection using the given comparison function.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the greatest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max := lo.MaxBy([]string{"string1", "s2", "string3"}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// "string1"

max := lo.MaxBy([]string{}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;MaxIndexBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum value of a collection using the given comparison function and the index of the maximum value.&lt;/p&gt; 
&lt;p&gt;If several values of the collection are equal to the greatest value, returns the first such value.&lt;/p&gt; 
&lt;p&gt;Returns (zero value, -1) when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;max, index := lo.MaxIndexBy([]string{"string1", "s2", "string3"}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// "string1", 0

max, index := lo.MaxIndexBy([]string{}, func(item string, max string) bool {
    return len(item) &amp;gt; len(max)
})
// "", -1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Latest&lt;/h3&gt; 
&lt;p&gt;Search the maximum time.Time of a collection.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;latest := lo.Latest(time.Now(), time.Time{})
// 2023-04-01 01:02:03 +0000 UTC
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LatestBy&lt;/h3&gt; 
&lt;p&gt;Search the maximum time.Time of a collection using the given iteratee function.&lt;/p&gt; 
&lt;p&gt;Returns zero value when the collection is empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type foo struct {
    bar time.Time
}

latest := lo.LatestBy([]foo{{time.Now()}, {}}, func(i foo) time.Time {
    return i.bar
})
// {bar:{2023-04-01 01:02:03 +0000 UTC}}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;First&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection and check for availability of the first element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;first, ok := lo.First([]int{1, 2, 3})
// 1, true

first, ok := lo.First([]int{})
// 0, false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FirstOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection or zero value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;first := lo.FirstOrEmpty([]int{1, 2, 3})
// 1

first := lo.FirstOrEmpty([]int{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FirstOr&lt;/h3&gt; 
&lt;p&gt;Returns the first element of a collection or the fallback value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;first := lo.FirstOr([]int{1, 2, 3}, 245)
// 1

first := lo.FirstOr([]int{}, 31)
// 31
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Last&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or error if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;last, ok := lo.Last([]int{1, 2, 3})
// 3
// true

last, ok := lo.Last([]int{})
// 0
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LastOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or zero value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;last := lo.LastOrEmpty([]int{1, 2, 3})
// 3

last := lo.LastOrEmpty([]int{})
// 0
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;LastOr&lt;/h3&gt; 
&lt;p&gt;Returns the last element of a collection or the fallback value if empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;last := lo.LastOr([]int{1, 2, 3}, 245)
// 3

last := lo.LastOr([]int{}, 31)
// 31
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Nth&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of collection. If &lt;code&gt;nth&lt;/code&gt; is negative, the nth element from the end is returned. An error is returned when nth is out of slice bounds.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;nth, err := lo.Nth([]int{0, 1, 2, 3}, 2)
// 2

nth, err := lo.Nth([]int{0, 1, 2, 3}, -2)
// 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NthOr&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of the collection. If &lt;code&gt;nth&lt;/code&gt; is negative, it returns the &lt;code&gt;nth&lt;/code&gt; element from the end. If &lt;code&gt;nth&lt;/code&gt; is out of slice bounds, it returns the provided fallback value&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;nth := lo.NthOr([]int{10, 20, 30, 40, 50}, 2, -1)
// 30

nth := lo.NthOr([]int{10, 20, 30, 40, 50}, -1, -1)
// 50

nth := lo.NthOr([]int{10, 20, 30, 40, 50}, 5, -1)
// -1 (fallback value)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;NthOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the element at index &lt;code&gt;nth&lt;/code&gt; of the collection. If &lt;code&gt;nth&lt;/code&gt; is negative, it returns the &lt;code&gt;nth&lt;/code&gt; element from the end. If &lt;code&gt;nth&lt;/code&gt; is out of slice bounds, it returns the zero value for the element type (e.g., 0 for integers, "" for strings, etc).&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, 2)
// 30

nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, -1)
// 50

nth := lo.NthOrEmpty([]int{10, 20, 30, 40, 50}, 5)
// 0 (zero value for int)

nth := lo.NthOrEmpty([]string{"apple", "banana", "cherry"}, 2)
// "cherry"

nth := lo.NthOrEmpty([]string{"apple", "banana", "cherry"}, 5)
// "" (zero value for string)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Sample&lt;/h3&gt; 
&lt;p&gt;Returns a random item from collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Sample([]string{"a", "b", "c"})
// a random string from []string{"a", "b", "c"}

lo.Sample([]string{})
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/FYA45LcpfM2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;SampleBy&lt;/h3&gt; 
&lt;p&gt;Returns a random item from collection, using a given random integer generator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import "math/rand"

r := rand.New(rand.NewSource(42))
lo.SampleBy([]string{"a", "b", "c"}, r.Intn)
// a random string from []string{"a", "b", "c"}, using a seeded random generator

lo.SampleBy([]string{}, r.Intn)
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Samples&lt;/h3&gt; 
&lt;p&gt;Returns N random unique items from collection.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Samples([]string{"a", "b", "c"}, 3)
// []string{"a", "b", "c"} in random order
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;SamplesBy&lt;/h3&gt; 
&lt;p&gt;Returns N random unique items from collection, using a given random integer generator.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;r := rand.New(rand.NewSource(42))
lo.SamplesBy([]string{"a", "b", "c"}, 3, r.Intn)
// []string{"a", "b", "c"} in random order, using a seeded random generator
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Ternary&lt;/h3&gt; 
&lt;p&gt;A single line if/else statement.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Ternary(true, "a", "b")
// "a"

result := lo.Ternary(false, "a", "b")
// "b"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Take care to avoid dereferencing potentially nil pointers in your A/B expressions, because they are both evaluated. See TernaryF to avoid this problem.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t-D7WBL44h2"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TernaryF&lt;/h3&gt; 
&lt;p&gt;A single line if/else statement whose options are functions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.TernaryF(true, func() string { return "a" }, func() string { return "b" })
// "a"

result := lo.TernaryF(false, func() string { return "a" }, func() string { return "b" })
// "b"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Useful to avoid nil-pointer dereferencing in initializations, or avoid running unnecessary code&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;var s *string

someStr := TernaryF(s == nil, func() string { return uuid.New().String() }, func() string { return *s })
// ef782193-c30c-4e2e-a7ae-f8ab5e125e02
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/AO4VW20JoqM"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;If / ElseIf / Else&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.If(true, 1).
    ElseIf(false, 2).
    Else(3)
// 1

result := lo.If(false, 1).
    ElseIf(true, 2).
    Else(3)
// 2

result := lo.If(false, 1).
    ElseIf(false, 2).
    Else(3)
// 3
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.IfF(true, func () int {
        return 1
    }).
    ElseIfF(false, func () int {
        return 2
    }).
    ElseF(func () int {
        return 3
    })
// 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mixed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.IfF(true, func () int {
        return 1
    }).
    Else(42)
// 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/WSw3ApMxhyW"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Switch / Case / Default&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Switch(1).
    Case(1, "1").
    Case(2, "2").
    Default("3")
// "1"

result := lo.Switch(2).
    Case(1, "1").
    Case(2, "2").
    Default("3")
// "2"

result := lo.Switch(42).
    Case(1, "1").
    Case(2, "2").
    Default("3")
// "3"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Using callbacks:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Switch(1).
    CaseF(1, func() string {
        return "1"
    }).
    CaseF(2, func() string {
        return "2"
    }).
    DefaultF(func() string {
        return "3"
    })
// "1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Mixed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.Switch(1).
    CaseF(1, func() string {
        return "1"
    }).
    Default("42")
// "1"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TGbKUMAeRUd"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;IsNil&lt;/h3&gt; 
&lt;p&gt;Checks if a value is nil or if it's a reference type with a nil underlying value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;var x int
lo.IsNil(x)
// false

var k struct{}
lo.IsNil(k)
// false

var i *int
lo.IsNil(i)
// true

var ifaceWithNilValue any = (*string)(nil)
lo.IsNil(ifaceWithNilValue)
// true
ifaceWithNilValue == nil
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsNotNil&lt;/h3&gt; 
&lt;p&gt;Checks if a value is not nil or if it's not a reference type with a nil underlying value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;var x int
lo.IsNotNil(x)
// true

var k struct{}
lo.IsNotNil(k)
// true

var i *int
lo.IsNotNil(i)
// false

var ifaceWithNilValue any = (*string)(nil)
lo.IsNotNil(ifaceWithNilValue)
// false
ifaceWithNilValue == nil
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ToPtr&lt;/h3&gt; 
&lt;p&gt;Returns a pointer copy of the value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.ToPtr("hello world")
// *string{"hello world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/P2sD0PMXw4F"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Nil&lt;/h3&gt; 
&lt;p&gt;Returns a nil pointer of type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.Nil[float64]()
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;EmptyableToPtr&lt;/h3&gt; 
&lt;p&gt;Returns a pointer copy of value if it's nonzero. Otherwise, returns nil pointer.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.EmptyableToPtr(nil)
// nil

ptr := lo.EmptyableToPtr("")
// nil

ptr := lo.EmptyableToPtr([]int{})
// *[]int{}

ptr := lo.EmptyableToPtr("hello world")
// *string{"hello world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromPtr&lt;/h3&gt; 
&lt;p&gt;Returns the pointer value or empty.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := "hello world"
value := lo.FromPtr(&amp;amp;str)
// "hello world"

value := lo.FromPtr(nil)
// ""
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromPtrOr&lt;/h3&gt; 
&lt;p&gt;Returns the pointer value or the fallback value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str := "hello world"
value := lo.FromPtrOr(&amp;amp;str, "empty")
// "hello world"

value := lo.FromPtrOr(nil, "empty")
// "empty"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;ToSlicePtr&lt;/h3&gt; 
&lt;p&gt;Returns a slice of pointers to each value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ptr := lo.ToSlicePtr([]string{"hello", "world"})
// []*string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromSlicePtr&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the pointer values. Returns a zero value in case of a nil pointer element.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str1 := "hello"
str2 := "world"

ptr := lo.FromSlicePtr[string]([]*string{&amp;amp;str1, &amp;amp;str2, nil})
// []string{"hello", "world", ""}

ptr := lo.Compact(
    lo.FromSlicePtr[string]([]*string{&amp;amp;str1, &amp;amp;str2, nil}),
)
// []string{"hello", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromSlicePtrOr&lt;/h3&gt; 
&lt;p&gt;Returns a slice with the pointer values or the fallback value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str1 := "hello"
str2 := "world"

ptr := lo.FromSlicePtrOr([]*string{&amp;amp;str1, nil, &amp;amp;str2}, "fallback value")
// []string{"hello", "fallback value", "world"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/CuXGVzo9G65"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ToAnySlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all elements mapped to &lt;code&gt;any&lt;/code&gt; type.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;elements := lo.ToAnySlice([]int{1, 5, 1})
// []any{1, 5, 1}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;FromAnySlice&lt;/h3&gt; 
&lt;p&gt;Returns a slice with all elements mapped to a type. Returns false in case of type conversion failure.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;elements, ok := lo.FromAnySlice([]any{"foobar", 42})
// []string{}, false

elements, ok := lo.FromAnySlice([]any{"foobar", "42"})
// []string{"foobar", "42"}, true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Empty&lt;/h3&gt; 
&lt;p&gt;Returns the &lt;a href="https://go.dev/ref/spec#The_zero_value"&gt;zero value&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.Empty[int]()
// 0
lo.Empty[string]()
// ""
lo.Empty[bool]()
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsEmpty&lt;/h3&gt; 
&lt;p&gt;Returns true if argument is a zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.IsEmpty(0)
// true
lo.IsEmpty(42)
// false

lo.IsEmpty("")
// true
lo.IsEmpty("foobar")
// false

type test struct {
    foobar string
}

lo.IsEmpty(test{foobar: ""})
// true
lo.IsEmpty(test{foobar: "foobar"})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;IsNotEmpty&lt;/h3&gt; 
&lt;p&gt;Returns true if argument is a zero value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;lo.IsNotEmpty(0)
// false
lo.IsNotEmpty(42)
// true

lo.IsNotEmpty("")
// false
lo.IsNotEmpty("foobar")
// true

type test struct {
    foobar string
}

lo.IsNotEmpty(test{foobar: ""})
// false
lo.IsNotEmpty(test{foobar: "foobar"})
// true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Coalesce&lt;/h3&gt; 
&lt;p&gt;Returns the first non-empty arguments. Arguments must be comparable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result, ok := lo.Coalesce(0, 1, 2, 3)
// 1 true

result, ok := lo.Coalesce("")
// "" false

var nilStr *string
str := "foobar"
result, ok := lo.Coalesce(nil, nilStr, &amp;amp;str)
// &amp;amp;"foobar" true
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-empty arguments. Arguments must be comparable.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CoalesceOrEmpty(0, 1, 2, 3)
// 1

result := lo.CoalesceOrEmpty("")
// ""

var nilStr *string
str := "foobar"
result := lo.CoalesceOrEmpty(nil, nilStr, &amp;amp;str)
// &amp;amp;"foobar"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceSlice&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result, ok := lo.CoalesceSlice([]int{1, 2, 3}, []int{4, 5, 6})
// [1, 2, 3]
// true

result, ok := lo.CoalesceSlice(nil, []int{})
// []
// true

result, ok := lo.CoalesceSlice([]int(nil))
// []
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceSliceOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero slice.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CoalesceSliceOrEmpty([]int{1, 2, 3}, []int{4, 5, 6})
// [1, 2, 3]

result := lo.CoalesceSliceOrEmpty(nil, []int{})
// []
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceMap&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result, ok := lo.CoalesceMap(map[string]int{"1": 1, "2": 2, "3": 3}, map[string]int{"4": 4, "5": 5, "6": 6})
// {"1": 1, "2": 2, "3": 3}
// true

result, ok := lo.CoalesceMap(nil, map[string]int{})
// {}
// true

result, ok := lo.CoalesceMap(map[string]int(nil))
// {}
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CoalesceMapOrEmpty&lt;/h3&gt; 
&lt;p&gt;Returns the first non-zero map.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;result := lo.CoalesceMapOrEmpty(map[string]int{"1": 1, "2": 2, "3": 3}, map[string]int{"4": 4, "5": 5, "6": 6})
// {"1": 1, "2": 2, "3": 3}

result := lo.CoalesceMapOrEmpty(nil, map[string]int{})
// {}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Partial&lt;/h3&gt; 
&lt;p&gt;Returns new function that, when called, has its first argument set to the provided value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;add := func(x, y int) int { return x + y }
f := lo.Partial(add, 5)

f(10)
// 15

f(42)
// 47
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Sy1gAQiQZ3v"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Partial2 -&amp;gt; Partial5&lt;/h3&gt; 
&lt;p&gt;Returns new function that, when called, has its first argument set to the provided value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;add := func(x, y, z int) int { return x + y + z }
f := lo.Partial2(add, 42)

f(10, 5)
// 57

f(42, -4)
// 80
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/-xiPjy4JChJ"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Attempt&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output. Returns either the caught error or nil.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;iter, err := lo.Attempt(42, func(i int) error {
    if i == 5 {
        return nil
    }

    return errors.New("failed")
})
// 6
// nil

iter, err := lo.Attempt(2, func(i int) error {
    if i == 5 {
        return nil
    }

    return errors.New("failed")
})
// 2
// error "failed"

iter, err := lo.Attempt(0, func(i int) error {
    if i &amp;lt; 42 {
        return errors.New("failed")
    }

    return nil
})
// 43
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/3ggJZ2ZKcMj"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWithDelay&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output, with a pause between each call. Returns either the caught error or nil.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;iter, duration, err := lo.AttemptWithDelay(5, 2*time.Second, func(i int, duration time.Duration) error {
    if i == 2 {
        return nil
    }

    return errors.New("failed")
})
// 3
// ~ 4 seconds
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/tVs6CygC7m1"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWhile&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output. Returns either the caught error or nil, along with a bool value to determine whether the function should be invoked again. It will terminate the invoke immediately if the second return value is false.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count1, err1 := lo.AttemptWhile(5, func(i int) (error, bool) {
    err := doMockedHTTPRequest(i)
    if err != nil {
        if errors.Is(err, ErrBadRequest) { // let's assume ErrBadRequest is a critical error that needs to terminate the invoke
            return err, false // flag the second return value as false to terminate the invoke
        }

        return err, true
    }

    return nil, false
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/1VS7HxlYMOG"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;AttemptWhileWithDelay&lt;/h3&gt; 
&lt;p&gt;Invokes a function N times until it returns valid output, with a pause between each call. Returns either the caught error or nil, along with a bool value to determine whether the function should be invoked again. It will terminate the invoke immediately if the second return value is false.&lt;/p&gt; 
&lt;p&gt;When the first argument is less than &lt;code&gt;1&lt;/code&gt;, the function runs until a successful response is returned.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;count1, time1, err1 := lo.AttemptWhileWithDelay(5, time.Millisecond, func(i int, d time.Duration) (error, bool) {
    err := doMockedHTTPRequest(i)
    if err != nil {
        if errors.Is(err, ErrBadRequest) { // let's assume ErrBadRequest is a critical error that needs to terminate the invoke
            return err, false // flag the second return value as false to terminate the invoke
        }

        return err, true
    }

    return nil, false
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more advanced retry strategies (delay, exponential backoff...), please take a look at &lt;a href="https://github.com/cenkalti/backoff"&gt;cenkalti/backoff&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mhufUjJfLEF"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Debounce&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;NewDebounce&lt;/code&gt; creates a debounced instance that delays invoking functions given until after wait milliseconds have elapsed, until &lt;code&gt;cancel&lt;/code&gt; is called.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func() {
    println("Called once after 100ms when debounce stopped invoking!")
}

debounce, cancel := lo.NewDebounce(100 * time.Millisecond, f)
for j := 0; j &amp;lt; 10; j++ {
    debounce()
}

time.Sleep(1 * time.Second)
cancel()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mz32VMK2nqe"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;DebounceBy&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;NewDebounceBy&lt;/code&gt; creates a debounced instance for each distinct key, that delays invoking functions given until after wait milliseconds have elapsed, until &lt;code&gt;cancel&lt;/code&gt; is called.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func(key string, count int) {
    println(key + ": Called once after 100ms when debounce stopped invoking!")
}

debounce, cancel := lo.NewDebounceBy(100 * time.Millisecond, f)
for j := 0; j &amp;lt; 10; j++ {
    debounce("first key")
    debounce("second key")
}

time.Sleep(1 * time.Second)
cancel("first key")
cancel("second key")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/d3Vpt6pxhY8"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Throttle&lt;/h3&gt; 
&lt;p&gt;Creates a throttled instance that invokes given functions only once in every interval.&lt;/p&gt; 
&lt;p&gt;This returns 2 functions, First one is throttled function and Second one is a function to reset interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func() {
	println("Called once in every 100ms")
}

throttle, reset := lo.NewThrottle(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle()
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;NewThrottleWithCount&lt;/code&gt; is NewThrottle with count limit, throttled function will be invoked count times in every interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func() {
	println("Called three times in every 100ms")
}

throttle, reset := lo.NewThrottleWithCount(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle()
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;code&gt;NewThrottleBy&lt;/code&gt; and &lt;code&gt;NewThrottleByWithCount&lt;/code&gt; are NewThrottle with sharding key, throttled function will be invoked count times in every interval.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;f := func(key string) {
	println(key, "Called three times in every 100ms")
}

throttle, reset := lo.NewThrottleByWithCount(100 * time.Millisecond, f)

for j := 0; j &amp;lt; 10; j++ {
	throttle("foo")
	time.Sleep(30 * time.Millisecond)
}

reset()
throttle()
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Synchronize&lt;/h3&gt; 
&lt;p&gt;Wraps the underlying callback in a mutex. It receives an optional mutex.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;s := lo.Synchronize()

for i := 0; i &amp;lt; 10; i++ {
    go s.Do(func () {
        println("will be called sequentially")
    })
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;It is equivalent to:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;mu := sync.Mutex{}

func foobar() {
    mu.Lock()
    defer mu.Unlock()

    // ...
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Async&lt;/h3&gt; 
&lt;p&gt;Executes a function in a goroutine and returns the result in a channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := lo.Async(func() error { time.Sleep(10 * time.Second); return nil })
// chan error (nil)
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Async{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;Executes a function in a goroutine and returns the result in a channel. For functions with multiple return values, the results will be returned as a tuple inside the channel. For functions without return, struct{} will be returned in the channel.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ch := lo.Async0(func() { time.Sleep(10 * time.Second) })
// chan struct{}

ch := lo.Async1(func() int {
  time.Sleep(10 * time.Second);
  return 42
})
// chan int (42)

ch := lo.Async2(func() (int, string) {
  time.Sleep(10 * time.Second);
  return 42, "Hello"
})
// chan lo.Tuple2[int, string] ({42, "Hello"})
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Transaction&lt;/h3&gt; 
&lt;p&gt;Implements a Saga pattern.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;transaction := NewTransaction().
    Then(
        func(state int) (int, error) {
            fmt.Println("step 1")
            return state + 10, nil
        },
        func(state int) int {
            fmt.Println("rollback 1")
            return state - 10
        },
    ).
    Then(
        func(state int) (int, error) {
            fmt.Println("step 2")
            return state + 15, nil
        },
        func(state int) int {
            fmt.Println("rollback 2")
            return state - 15
        },
    ).
    Then(
        func(state int) (int, error) {
            fmt.Println("step 3")

            if true {
                return state, errors.New("error")
            }

            return state + 42, nil
        },
        func(state int) int {
            fmt.Println("rollback 3")
            return state - 42
        },
    )

_, _ = transaction.Process(-5)

// Output:
// step 1
// step 2
// step 3
// rollback 2
// rollback 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;WaitFor&lt;/h3&gt; 
&lt;p&gt;Runs periodically until a condition is validated.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;alwaysTrue := func(i int) bool { return true }
alwaysFalse := func(i int) bool { return false }
laterTrue := func(i int) bool {
    return i &amp;gt; 5
}

iterations, duration, ok := lo.WaitFor(alwaysTrue, 10*time.Millisecond, 2 * time.Millisecond)
// 1
// 1ms
// true

iterations, duration, ok := lo.WaitFor(alwaysFalse, 10*time.Millisecond, time.Millisecond)
// 10
// 10ms
// false

iterations, duration, ok := lo.WaitFor(laterTrue, 10*time.Millisecond, time.Millisecond)
// 7
// 7ms
// true

iterations, duration, ok := lo.WaitFor(laterTrue, 10*time.Millisecond, 5*time.Millisecond)
// 2
// 10ms
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t_wTDmubbK3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;WaitForWithContext&lt;/h3&gt; 
&lt;p&gt;Runs periodically until a condition is validated or context is invalid.&lt;/p&gt; 
&lt;p&gt;The condition receives also the context, so it can invalidate the process in the condition checker&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ctx := context.Background()

alwaysTrue := func(_ context.Context, i int) bool { return true }
alwaysFalse := func(_ context.Context, i int) bool { return false }
laterTrue := func(_ context.Context, i int) bool {
    return i &amp;gt;= 5
}

iterations, duration, ok := lo.WaitForWithContext(ctx, alwaysTrue, 10*time.Millisecond, 2 * time.Millisecond)
// 1
// 1ms
// true

iterations, duration, ok := lo.WaitForWithContext(ctx, alwaysFalse, 10*time.Millisecond, time.Millisecond)
// 10
// 10ms
// false

iterations, duration, ok := lo.WaitForWithContext(ctx, laterTrue, 10*time.Millisecond, time.Millisecond)
// 5
// 5ms
// true

iterations, duration, ok := lo.WaitForWithContext(ctx, laterTrue, 10*time.Millisecond, 5*time.Millisecond)
// 2
// 10ms
// false

expiringCtx, cancel := context.WithTimeout(ctx, 5*time.Millisecond)
iterations, duration, ok := lo.WaitForWithContext(expiringCtx, alwaysFalse, 100*time.Millisecond, time.Millisecond)
// 5
// 5.1ms
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/t_wTDmubbK3"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Validate&lt;/h3&gt; 
&lt;p&gt;Helper function that creates an error when a condition is not met.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;slice := []string{"a"}
val := lo.Validate(len(slice) == 0, "Slice should be empty but contains %v", slice)
// error("Slice should be empty but contains [a]")

slice := []string{}
val := lo.Validate(len(slice) == 0, "Slice should be empty but contains %v", slice)
// nil
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/vPyh51XpCBt"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Must&lt;/h3&gt; 
&lt;p&gt;Wraps a function call and panics if second argument is &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, returns the value otherwise.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;val := lo.Must(time.Parse("2006-01-02", "2022-01-15"))
// 2022-01-15

val := lo.Must(time.Parse("2006-01-02", "bad-value"))
// panics
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TMoWrRp3DyC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Must{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;Must* has the same behavior as Must but returns multiple values.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func example0() (error)
func example1() (int, error)
func example2() (int, string, error)
func example3() (int, string, time.Date, error)
func example4() (int, string, time.Date, bool, error)
func example5() (int, string, time.Date, bool, float64, error)
func example6() (int, string, time.Date, bool, float64, byte, error)

lo.Must0(example0())
val1 := lo.Must1(example1())    // alias to Must
val1, val2 := lo.Must2(example2())
val1, val2, val3 := lo.Must3(example3())
val1, val2, val3, val4 := lo.Must4(example4())
val1, val2, val3, val4, val5 := lo.Must5(example5())
val1, val2, val3, val4, val5, val6 := lo.Must6(example6())
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can wrap functions like &lt;code&gt;func (...) (..., ok bool)&lt;/code&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;// math.Signbit(float64) bool
lo.Must0(math.Signbit(v))

// bytes.Cut([]byte,[]byte) ([]byte, []byte, bool)
before, after := lo.Must2(bytes.Cut(s, sep))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can give context to the panic message by adding some printf-like arguments.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;val, ok := lo.Find(myString, func(i string) bool {
    return i == requiredChar
})
lo.Must0(ok, "'%s' must always contain '%s'", myString, requiredChar)

list := []int{0, 1, 2}
item := 5
lo.Must0(lo.Contains(list, item), "'%s' must always contain '%s'", list, item)
...
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TMoWrRp3DyC"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Try&lt;/h3&gt; 
&lt;p&gt;Calls the function and returns false in case of error and panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Try(func() error {
    panic("error")
    return nil
})
// false

ok := lo.Try(func() error {
    return nil
})
// true

ok := lo.Try(func() error {
    return errors.New("error")
})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mTyyWUvn9u4"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Try{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but the callback returns 2 variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;ok := lo.Try2(func() (string, error) {
    panic("error")
    return "", nil
})
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/mTyyWUvn9u4"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryOr&lt;/h3&gt; 
&lt;p&gt;Calls the function and return a default value in case of error and on panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, ok := lo.TryOr(func() (string, error) {
    panic("error")
    return "hello", nil
}, "world")
// world
// false

str, ok := lo.TryOr(func() error {
    return "hello", nil
}, "world")
// hello
// true

str, ok := lo.TryOr(func() error {
    return "hello", errors.New("error")
}, "world")
// world
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/B4F7Wg2Zh9X"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryOr{0-&amp;gt;6}&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;TryOr&lt;/code&gt;, but the callback returns &lt;code&gt;X&lt;/code&gt; variables.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;str, nbr, ok := lo.TryOr2(func() (string, int, error) {
    panic("error")
    return "hello", 42, nil
}, "world", 21)
// world
// 21
// false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/B4F7Wg2Zh9X"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryWithErrorValue&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but also returns the value passed to panic.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;err, ok := lo.TryWithErrorValue(func() error {
    panic("error")
    return nil
})
// "error", false
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Kc7afQIT2Fs"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryCatch&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;Try&lt;/code&gt;, but calls the catch function in case of error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;caught := false

ok := lo.TryCatch(func() error {
    panic("error")
    return nil
}, func() {
    caught = true
})
// false
// caught == true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/PnOON-EqBiU"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;TryCatchWithErrorValue&lt;/h3&gt; 
&lt;p&gt;The same behavior as &lt;code&gt;TryWithErrorValue&lt;/code&gt;, but calls the catch function in case of error.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;caught := false

ok := lo.TryCatchWithErrorValue(func() error {
    panic("error")
    return nil
}, func(val any) {
    caught = val == "error"
})
// false
// caught == true
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/8Pc9gwX_GZO"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;ErrorsAs&lt;/h3&gt; 
&lt;p&gt;A shortcut for:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;err := doSomething()

var rateLimitErr *RateLimitError
if ok := errors.As(err, &amp;amp;rateLimitErr); ok {
    // retry later
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;single line &lt;code&gt;lo&lt;/code&gt; helper:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;err := doSomething()

if rateLimitErr, ok := lo.ErrorsAs[*RateLimitError](err); ok {
    // retry later
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/8wk5rH8UfrE"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assert&lt;/h3&gt; 
&lt;p&gt;Does nothing when the condition is &lt;code&gt;true&lt;/code&gt;, otherwise it panics with an optional message.&lt;/p&gt; 
&lt;p&gt;Think twice before using it, given that &lt;a href="https://go.dev/doc/faq#assertions"&gt;Go intentionally omits assertions from its standard library&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;age := getUserAge()

lo.Assert(age &amp;gt;= 15)
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;age := getUserAge()

lo.Assert(age &amp;gt;= 15, "user age must be &amp;gt;= 15")
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/Xv8LLKBMNwI"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h3&gt;Assertf&lt;/h3&gt; 
&lt;p&gt;Like &lt;code&gt;Assert&lt;/code&gt;, but with &lt;code&gt;fmt.Printf&lt;/code&gt;-like formatting.&lt;/p&gt; 
&lt;p&gt;Think twice before using it, given that &lt;a href="https://go.dev/doc/faq#assertions"&gt;Go intentionally omits assertions from its standard library&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;age := getUserAge()

lo.Assertf(age &amp;gt;= 15, "user age must be &amp;gt;= 15, got %d", age)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;[&lt;a href="https://go.dev/play/p/TVPEmVcyrdY"&gt;play&lt;/a&gt;]&lt;/p&gt; 
&lt;h2&gt;🛩 Benchmark&lt;/h2&gt; 
&lt;p&gt;We executed a simple benchmark with a dead-simple &lt;code&gt;lo.Map&lt;/code&gt; loop:&lt;/p&gt; 
&lt;p&gt;See the full implementation &lt;a href="https://raw.githubusercontent.com/samber/lo/master/map_benchmark_test.go"&gt;here&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;_ = lo.Map[int64](arr, func(x int64, i int) string {
    return strconv.FormatInt(x, 10)
})
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Result:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Here is a comparison between &lt;code&gt;lo.Map&lt;/code&gt;, &lt;code&gt;lop.Map&lt;/code&gt;, &lt;code&gt;go-funk&lt;/code&gt; library and a simple Go &lt;code&gt;for&lt;/code&gt; loop.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;$ go test -benchmem -bench ./...
goos: linux
goarch: amd64
pkg: github.com/samber/lo
cpu: Intel(R) Core(TM) i5-7267U CPU @ 3.10GHz
cpu: Intel(R) Core(TM) i7 CPU         920  @ 2.67GHz
BenchmarkMap/lo.Map-8         	       8	 132728237 ns/op	39998945 B/op	 1000002 allocs/op
BenchmarkMap/lop.Map-8        	       2	 503947830 ns/op	119999956 B/op	 3000007 allocs/op
BenchmarkMap/reflect-8        	       2	 826400560 ns/op	170326512 B/op	 4000042 allocs/op
BenchmarkMap/for-8            	       9	 126252954 ns/op	39998674 B/op	 1000001 allocs/op
PASS
ok  	github.com/samber/lo	6.657s
&lt;/code&gt;&lt;/pre&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; is way faster (x7) than &lt;code&gt;go-funk&lt;/code&gt;, a reflection-based Map implementation.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; has the same allocation profile as &lt;code&gt;for&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lo.Map&lt;/code&gt; is 4% slower than &lt;code&gt;for&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;lop.Map&lt;/code&gt; is slower than &lt;code&gt;lo.Map&lt;/code&gt; because it implies more memory allocation and locks. &lt;code&gt;lop.Map&lt;/code&gt; is useful for long-running callbacks, such as i/o bound processing.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;for&lt;/code&gt; beats other implementations for memory and CPU.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🤝 Contributing&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ping me on Twitter &lt;a href="https://twitter.com/samuelberthe"&gt;@samuelberthe&lt;/a&gt; (DMs, mentions, whatever :))&lt;/li&gt; 
 &lt;li&gt;Fork the &lt;a href="https://github.com/samber/lo"&gt;project&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Fix &lt;a href="https://github.com/samber/lo/issues"&gt;open issues&lt;/a&gt; or request new features&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Don't hesitate ;)&lt;/p&gt; 
&lt;p&gt;Helper naming: helpers must be self-explanatory and respect standards (other languages, libraries...). Feel free to suggest many names in your contributions.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Install some dev dependencies
make tools

# Run tests
make test
# or
make watch-test
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;👤 Contributors&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://contrib.rocks/image?repo=samber/lo" alt="Contributors" /&gt;&lt;/p&gt; 
&lt;h2&gt;💫 Show your support&lt;/h2&gt; 
&lt;p&gt;Give a ⭐️ if this project helped you!&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/sponsors/samber"&gt;&lt;img src="https://img.shields.io/github/sponsors/samber?style=for-the-badge" alt="GitHub Sponsors" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📝 License&lt;/h2&gt; 
&lt;p&gt;Copyright © 2022 &lt;a href="https://github.com/samber"&gt;Samuel Berthe&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;This project is under &lt;a href="https://raw.githubusercontent.com/samber/lo/master/LICENSE"&gt;MIT&lt;/a&gt; license.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>