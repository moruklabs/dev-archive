<rss version="2.0">
  <channel>
    <title>GitHub Go Daily Trending</title>
    <description>Daily Trending of Go in GitHub</description>
    <pubDate>Sat, 20 Sep 2025 01:32:57 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>GoogleCloudPlatform/kubectl-ai</title>
      <link>https://github.com/GoogleCloudPlatform/kubectl-ai</link>
      <description>&lt;p&gt;AI powered Kubernetes Assistant&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;kubectl-ai&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://goreportcard.com/report/github.com/GoogleCloudPlatform/kubectl-ai"&gt;&lt;img src="https://goreportcard.com/badge/github.com/GoogleCloudPlatform/kubectl-ai" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/GoogleCloudPlatform/kubectl-ai" alt="GitHub License" /&gt; &lt;a href="https://deepwiki.com/GoogleCloudPlatform/kubectl-ai"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GoogleCloudPlatform/kubectl-ai/stargazers"&gt;&lt;img src="https://img.shields.io/github/stars/GoogleCloudPlatform/kubectl-ai.svg?sanitize=true" alt="GitHub stars" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; acts as an intelligent interface, translating user intent into precise Kubernetes operations, making Kubernetes management more accessible and efficient.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/.github/kubectl-ai.gif" alt="kubectl-ai demo GIF using: kubectl-ai &amp;quot;how's nginx app doing in my cluster&amp;quot;" /&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;p&gt;First, ensure that kubectl is installed and configured.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;h4&gt;Quick Install (Linux &amp;amp; MacOS only)&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;curl -sSL https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Other Installation Methods&lt;/summary&gt; 
 &lt;h4&gt;Manual Installation (Linux, MacOS and Windows)&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Download the latest release from the &lt;a href="https://github.com/GoogleCloudPlatform/kubectl-ai/releases/latest"&gt;releases page&lt;/a&gt; for your target machine.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Untar the release, make the binary executable and move it to a directory in your $PATH (as shown below).&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;tar -zxvf kubectl-ai_Darwin_arm64.tar.gz
chmod a+x kubectl-ai
sudo mv kubectl-ai /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Install with Krew (Linux/macOS/Windows)&lt;/h4&gt; 
 &lt;p&gt;First of all, you need to have krew insatlled, refer to &lt;a href="https://krew.sigs.k8s.io/docs/user-guide/setup/install/"&gt;krew document&lt;/a&gt; for more details Then you can install with krew&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;kubectl krew install ai
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Now you can invoke &lt;code&gt;kubectl-ai&lt;/code&gt; as a kubectl plugin like this: &lt;code&gt;kubectl ai&lt;/code&gt;.&lt;/p&gt; 
 &lt;h4&gt;Install on NixOS&lt;/h4&gt; 
 &lt;p&gt;There are multiple ways to install &lt;code&gt;kubectl-ai&lt;/code&gt; on NixOS. For a permantent installation add the following to your NixOS-Configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-nix"&gt;  environment.systemPackages = with pkgs; [
    kubectl-ai
  ];
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For a temporary installation, you can use the following command:&lt;/p&gt; 
 &lt;pre&gt;&lt;code&gt;nix-shell -p kubectl-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h3&gt;Usage&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; supports AI models from &lt;code&gt;gemini&lt;/code&gt;, &lt;code&gt;vertexai&lt;/code&gt;, &lt;code&gt;azopenai&lt;/code&gt;, &lt;code&gt;openai&lt;/code&gt;, &lt;code&gt;grok&lt;/code&gt;, &lt;code&gt;bedrock&lt;/code&gt; and local LLM providers such as &lt;code&gt;ollama&lt;/code&gt; and &lt;code&gt;llama.cpp&lt;/code&gt;.&lt;/p&gt; 
&lt;h4&gt;Using Gemini (Default)&lt;/h4&gt; 
&lt;p&gt;Set your Gemini API key as an environment variable. If you don't have a key, get one from &lt;a href="https://aistudio.google.com"&gt;Google AI Studio&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export GEMINI_API_KEY=your_api_key_here
kubectl-ai

# Use different gemini model
kubectl-ai --model gemini-2.5-pro-exp-03-25

# Use 2.5 flash (faster) model
kubectl-ai --quiet --model gemini-2.5-flash-preview-04-17 "check logs for nginx app in hello namespace"
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Use other AI models&lt;/summary&gt; 
 &lt;h4&gt;Using AI models running locally (ollama or llama.cpp)&lt;/h4&gt; 
 &lt;p&gt;You can use &lt;code&gt;kubectl-ai&lt;/code&gt; with AI models running locally. &lt;code&gt;kubectl-ai&lt;/code&gt; supports &lt;a href="https://ollama.com/"&gt;ollama&lt;/a&gt; and &lt;a href="https://github.com/ggml-org/llama.cpp"&gt;llama.cpp&lt;/a&gt; to use the AI models running locally.&lt;/p&gt; 
 &lt;p&gt;Additionally, the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/modelserving/"&gt;&lt;code&gt;modelserving&lt;/code&gt;&lt;/a&gt; directory provides tools and instructions for deploying your own &lt;code&gt;llama.cpp&lt;/code&gt;-based LLM serving endpoints locally or on a Kubernetes cluster. This allows you to host models like Gemma directly in your environment.&lt;/p&gt; 
 &lt;p&gt;An example of using Google's &lt;code&gt;gemma3&lt;/code&gt; model with &lt;code&gt;ollama&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-shell"&gt;# assuming ollama is already running and you have pulled one of the gemma models
# ollama pull gemma3:12b-it-qat

# if your ollama server is at remote, use OLLAMA_HOST variable to specify the host
# export OLLAMA_HOST=http://192.168.1.3:11434/

# enable-tool-use-shim because models require special prompting to enable tool calling
kubectl-ai --llm-provider ollama --model gemma3:12b-it-qat --enable-tool-use-shim

# you can use `models` command to discover the locally available models
&amp;gt;&amp;gt; models
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using Grok&lt;/h4&gt; 
 &lt;p&gt;You can use X.AI's Grok model by setting your X.AI API key:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export GROK_API_KEY=your_xai_api_key_here
kubectl-ai --llm-provider=grok --model=grok-3-beta
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using AWS Bedrock&lt;/h4&gt; 
 &lt;p&gt;You can use AWS Bedrock Claude models with your AWS credentials:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;# Configure AWS credentials using AWS SSO
aws sso login --profile your-profile-name
# Or use other AWS credential methods (IAM roles, environment variables, etc.)

# Use Claude 4 Sonnet (default)
kubectl-ai --llm-provider=bedrock --model=us.anthropic.claude-sonnet-4-20250514-v1:0

# Use Claude 3.7 Sonnet
kubectl-ai --llm-provider=bedrock --model=us.anthropic.claude-3-7-sonnet-20250219-v1:0

# Override model via environment variable
export BEDROCK_MODEL=us.anthropic.claude-sonnet-4-20250514-v1:0
kubectl-ai --llm-provider=bedrock
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;AWS Bedrock uses the standard AWS SDK credential chain, supporting:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;AWS SSO profiles&lt;/li&gt; 
  &lt;li&gt;IAM roles (for EC2/ECS/Lambda)&lt;/li&gt; 
  &lt;li&gt;Environment variables (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY)&lt;/li&gt; 
  &lt;li&gt;AWS CLI configuration files&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;h4&gt;Using Azure OpenAI&lt;/h4&gt; 
 &lt;p&gt;You can also use Azure OpenAI deployment by setting your OpenAI API key and specifying the provider:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export AZURE_OPENAI_API_KEY=your_azure_openai_api_key_here
export AZURE_OPENAI_ENDPOINT=https://your_azure_openai_endpoint_here
kubectl-ai --llm-provider=azopenai --model=your_azure_openai_deployment_name_here
# or
az login
kubectl-ai --llm-provider=openai://your_azure_openai_endpoint_here --model=your_azure_openai_deployment_name_here
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using OpenAI&lt;/h4&gt; 
 &lt;p&gt;You can also use OpenAI models by setting your OpenAI API key and specifying the provider:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY=your_openai_api_key_here
kubectl-ai --llm-provider=openai --model=gpt-4.1
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Using OpenAI Compatible API&lt;/h4&gt; 
 &lt;p&gt;For example, you can use aliyun qwen-xxx models as follows&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;export OPENAI_API_KEY=your_openai_api_key_here
export OPENAI_ENDPOINT=https://dashscope.aliyuncs.com/compatible-mode/v1
kubectl-ai --llm-provider=openai --model=qwen-plus
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;Run interactively:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The interactive mode allows you to have a chat with &lt;code&gt;kubectl-ai&lt;/code&gt;, asking multiple questions in sequence while maintaining context from previous interactions. Simply type your queries and press Enter to receive responses. To exit the interactive shell, type &lt;code&gt;exit&lt;/code&gt; or press Ctrl+C.&lt;/p&gt; 
&lt;p&gt;Or, run with a task as input:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai --quiet "fetch logs for nginx app in hello namespace"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Combine it with other unix commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai &amp;lt; query.txt
# OR
echo "list pods in the default namespace" | kubectl-ai
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can even combine a positional argument with stdin input. The positional argument will be used as a prefix to the stdin content:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;cat error.log | kubectl-ai "explain the error"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;We also support persistence between runs with an opt-in. This lets you save a session to the local filesystem, and resume it to maintain previous context. It even works between different interfaces!&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai --new-session # start a new session
kubectl-ai --list-sessions # list all saved sessions
kubectl-ai --resume-session 20250807-510872 # resume session 20250807-510872
kubectl-ai --delete-session 20250807-510872 # delete session 20250807-510872
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Configuration&lt;/h2&gt; 
&lt;p&gt;You can also configure &lt;code&gt;kubectl-ai&lt;/code&gt; using a YAML configuration file at &lt;code&gt;~/.config/kubectl-ai/config.yaml&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;mkdir -p ~/.config/kubectl-ai/
cat &amp;lt;&amp;lt;EOF &amp;gt; ~/.config/kubectl-ai/config.yaml
model: gemini-2.5-flash-preview-04-17
llmProvider: gemini
toolConfigPaths: ~/.config/kubectl-ai/tools.yaml
EOF
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Verify your configuration:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;kubectl-ai --quiet model
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;More configuration Options&lt;/summary&gt; 
 &lt;p&gt;Here's a complete configuration file with all available options and their default values:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-yaml"&gt;# LLM provider configuration
llmProvider: "gemini"               # Default LLM provider
model: "gemini-2.5-pro-preview-06-05" # Default model
skipVerifySSL: false              # Skip SSL verification for LLM API calls

# Tool and permission settings
toolConfigPaths: ["~/.config/kubectl-ai/tools.yaml"]  # Custom tools configuration paths
skipPermissions: false             # Skip confirmation for resource-modifying commands
enableToolUseShim: false        # Enable tool use shim for certain models

# MCP configuration
mcpServer: false                  # Run in MCP server mode
mcpClient: false                  # Enable MCP client mode
externalTools: false             # Discover external MCP tools (requires mcp-server)

# Runtime settings
maxIterations: 20                 # Maximum iterations for the agent
quiet: false                       # Run in non-interactive mode
removeWorkdir: false             # Remove temporary working directory after execution

# Kubernetes configuration
kubeconfig: "~/.kube/config"      # Path to kubeconfig file

# UI configuration
uiType: "terminal"                # UI mode: "terminal" or "web"
uiListenAddress: "localhost:8888" # Address for HTML UI server

# Prompt configuration
promptTemplateFilePath: ""      # Custom prompt template file
extraPromptPaths: []            # Additional prompt template paths

# Debug and trace settings
tracePath: "/tmp/kubectl-ai-trace.txt" # Path to trace file
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;p&gt;All these settings can be configured through either:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Command line flags (e.g., &lt;code&gt;--model=gemini-2.5-pro&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Configuration file (&lt;code&gt;~/.config/kubectl-ai/config.yaml&lt;/code&gt;)&lt;/li&gt; 
 &lt;li&gt;Environment variables (e.g., &lt;code&gt;GEMINI_API_KEY&lt;/code&gt;)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Command line flags take precedence over configuration file settings.&lt;/p&gt; 
&lt;h2&gt;Tools&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; leverages LLMs to suggest and execute Kubernetes operations using a set of powerful tools. It comes with built-in tools like &lt;code&gt;kubectl&lt;/code&gt; and &lt;code&gt;bash&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;You can also extend its capabilities by defining your own custom tools. By default, &lt;code&gt;kubectl-ai&lt;/code&gt; looks for your tool configurations in &lt;code&gt;~/.config/kubectl-ai/tools.yaml&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To specify tools configuration files or directories containing tools configuration files, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;./kubectl-ai --custom-tools-config=&amp;lt;path-to-tools-directory&amp;gt; "your prompt here"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For further details on how to configure your own tools, &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/docs/tools.md"&gt;go here&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Docker Quick Start&lt;/h2&gt; 
&lt;p&gt;This project provides a Docker image that gives you a standalone environment for running kubectl-ai, including against a GKE cluster.&lt;/p&gt; 
&lt;h3&gt;Running the container against GKE&lt;/h3&gt; 
&lt;h4&gt;Step 1: Build the Image&lt;/h4&gt; 
&lt;p&gt;Clone the repository and build the image with the following command&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/GoogleCloudPlatform/kubectl-ai.git
cd kubectl-ai
docker build -t kubectl-ai:latest -f images/kubectl-ai/Dockerfile .
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Step 2: Connect to Your GKE Cluster&lt;/h4&gt; 
&lt;p&gt;Set up application default credentials and connect to your GKE cluster.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;gcloud auth application-default login # If in a gcloud shell this is not necessary
gcloud container clusters get-credentials &amp;lt;cluster-name&amp;gt; --zone &amp;lt;zone&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Step 3: Run the kubectl-ai container&lt;/h4&gt; 
&lt;p&gt;Below is a sample command that can be used to launch the container with a locally hosted web-ui. Be sure to replace the placeholder values with your specific Google Cloud project ID and location. Note you do not need to mount the gcloud config directory if you're on a cloudshell machine.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;docker run --rm -it -p 8080:8080 -v ~/.kube:/root/.kube -v ~/.config/gcloud:/root/.config/gcloud -e GOOGLE_CLOUD_LOCATION=us-central1 -e GOOGLE_CLOUD_PROJECT=my-gcp-project kubectl-ai:latest --llm-provider vertexai --ui-listen-address 0.0.0.0:8080 --ui-type web
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For more info about running from the container image see &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/CONTAINER.md"&gt;CONTAINER.md&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;MCP Client Mode&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; MCP Client Mode is available in &lt;code&gt;kubectl-ai&lt;/code&gt; version v0.0.12 and onwards.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; can connect to external &lt;a href="https://modelcontextprotocol.io/examples"&gt;MCP&lt;/a&gt; Servers to access additional tools in addition to built-in tools.&lt;/p&gt; 
&lt;h3&gt;Quick Start&lt;/h3&gt; 
&lt;p&gt;Enable MCP client mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl-ai --mcp-client
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Configuration&lt;/h3&gt; 
&lt;p&gt;Create or edit &lt;code&gt;~/.config/kubectl-ai/mcp.yaml&lt;/code&gt; to customize MCP servers:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-yaml"&gt;servers:
  # Local MCP server (stdio-based)
  # sequential-thinking: Advanced reasoning and step-by-step analysis
  - name: sequential-thinking
    command: npx
    args:
      - -y
      - "@modelcontextprotocol/server-sequential-thinking"
  
  # Remote MCP server (HTTP-based)
  - name: cloudflare-documentation
    url: https://docs.mcp.cloudflare.com/mcp
    
  # Optional: Remote MCP server with authentication
  - name: custom-api
    url: https://api.example.com/mcp
    auth:
      type: "bearer"
      token: "${MCP_TOKEN}"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The system automatically:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Converts parameter names (snake_case → camelCase)&lt;/li&gt; 
 &lt;li&gt;Handles type conversion (strings → numbers/booleans when appropriate)&lt;/li&gt; 
 &lt;li&gt;Provides fallback behavior for unknown servers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No additional setup required - just use the &lt;code&gt;--mcp-client&lt;/code&gt; flag and the AI will have access to all configured MCP tools.&lt;/p&gt; 
&lt;p&gt;📖 &lt;strong&gt;For detailed configuration options, troubleshooting, and advanced features for MCP Client mode, see the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/pkg/mcp/README.md"&gt;MCP Client Documentation&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;📖 &lt;strong&gt;For multi-server orchestration and security automation examples, see the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/docs/mcp-client.md"&gt;MCP Client Integration Guide&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Extras&lt;/h2&gt; 
&lt;p&gt;You can use the following special keywords for specific actions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;model&lt;/code&gt;: Display the currently selected model.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;models&lt;/code&gt;: List all available models.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;tools&lt;/code&gt;: List all available tools.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;version&lt;/code&gt;: Display the &lt;code&gt;kubectl-ai&lt;/code&gt; version.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;reset&lt;/code&gt;: Clear the conversational context.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;clear&lt;/code&gt;: Clear the terminal screen.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;exit&lt;/code&gt; or &lt;code&gt;quit&lt;/code&gt;: Terminate the interactive shell (Ctrl+C also works).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Invoking as kubectl plugin&lt;/h3&gt; 
&lt;p&gt;You can also run &lt;code&gt;kubectl ai&lt;/code&gt;. &lt;code&gt;kubectl&lt;/code&gt; finds any executable file in your &lt;code&gt;PATH&lt;/code&gt; whose name begins with &lt;code&gt;kubectl-&lt;/code&gt; as a &lt;a href="https://kubernetes.io/docs/tasks/extend-kubectl/kubectl-plugins/"&gt;plugin&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;MCP Server Mode&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;kubectl-ai&lt;/code&gt; can act as an MCP server that exposes kubectl tools to other MCP clients (like Claude, Cursor, or VS Code). The server can run in two modes:&lt;/p&gt; 
&lt;h3&gt;Basic MCP Server (Built-in tools only)&lt;/h3&gt; 
&lt;p&gt;Expose only kubectl-ai's native Kubernetes tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl-ai --mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Enhanced MCP Server (With external tool discovery)&lt;/h3&gt; 
&lt;p&gt;Additionally discover and expose tools from other MCP servers as a unified interface:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl-ai --mcp-server --external-tools
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This creates a powerful &lt;strong&gt;tool aggregation hub&lt;/strong&gt; where kubectl-ai acts as both:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Server&lt;/strong&gt;: Exposing kubectl tools to clients&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;MCP Client&lt;/strong&gt;: Consuming tools from other MCP servers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;The enhanced mode provides AI clients with access to both Kubernetes operations and general-purpose tools (filesystem, web search, databases, etc.) through a single MCP endpoint.&lt;/p&gt; 
&lt;p&gt;📖 &lt;strong&gt;For detailed configuration, examples, and troubleshooting, see the &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/docs/mcp-server.md"&gt;MCP Server Documentation&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;k8s-bench&lt;/h2&gt; 
&lt;p&gt;kubectl-ai project includes &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/k8s-bench/README.md"&gt;k8s-bench&lt;/a&gt; - a benchmark to evaluate performance of different LLM models on kubernetes related tasks.&lt;/p&gt; 
&lt;h3&gt;Latest Benchmark Results (August 2025)&lt;/h3&gt; 
&lt;p&gt;Comprehensive evaluation on identical 10-task Kubernetes benchmark with proper CNI environment:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Model&lt;/th&gt; 
   &lt;th&gt;Success&lt;/th&gt; 
   &lt;th&gt;Fail&lt;/th&gt; 
   &lt;th&gt;Success Rate&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gemini-2.5-flash-preview-04-17&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;0&lt;/td&gt; 
   &lt;td&gt;100%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gemini-2.5-pro-preview-03-25&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;0&lt;/td&gt; 
   &lt;td&gt;100%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AWS Bedrock Claude 3.7 Sonnet&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;0&lt;/td&gt; 
   &lt;td&gt;100%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;AWS Bedrock Claude Sonnet 4&lt;/td&gt; 
   &lt;td&gt;10&lt;/td&gt; 
   &lt;td&gt;0&lt;/td&gt; 
   &lt;td&gt;100%&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gemma-3-27b-it&lt;/td&gt; 
   &lt;td&gt;8&lt;/td&gt; 
   &lt;td&gt;2&lt;/td&gt; 
   &lt;td&gt;80%&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;strong&gt;Test Environment&lt;/strong&gt;: Kind cluster v1.27.3 with Calico CNI (full NetworkPolicy support)&lt;br /&gt; &lt;strong&gt;Tasks&lt;/strong&gt;: create-pod, create-pod-mount-configmaps, create-pod-resources-limits, create-network-policy, fix-crashloop, fix-image-pull, fix-service-routing, list-images-for-pods, scale-deployment, scale-down-deployment&lt;/p&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/k8s-bench.md"&gt;full report&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Start Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome contributions to &lt;code&gt;kubectl-ai&lt;/code&gt; from the community. Take a look at our &lt;a href="https://raw.githubusercontent.com/GoogleCloudPlatform/kubectl-ai/main/contributing.md"&gt;contribution guide&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;em&gt;Note: This is not an officially supported Google product. This project is not eligible for the &lt;a href="https://bughunters.google.com/open-source-security"&gt;Google Open Source Software Vulnerability Rewards Program&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-cd</title>
      <link>https://github.com/argoproj/argo-cd</link>
      <description>&lt;p&gt;Declarative Continuous Deployment for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;strong&gt;Releases:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/argoproj/argo-cd?label=argo-cd" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-cd"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-cd" alt="Artifact HUB" /&gt;&lt;/a&gt; &lt;a href="https://slsa.dev"&gt;&lt;img src="https://slsa.dev/images/gh-badge-level3.svg?sanitize=true" alt="SLSA 3" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Code:&lt;/strong&gt; &lt;a href="https://github.com/argoproj/argo-cd/actions?query=workflow%3A%22Integration+tests%22"&gt;&lt;img src="https://github.com/argoproj/argo-cd/workflows/Integration%20tests/badge.svg?branch=master" alt="Integration tests" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/argoproj/argo-cd"&gt;&lt;img src="https://codecov.io/gh/argoproj/argo-cd/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/4486"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/4486/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/argoproj/argo-cd"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-cd/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Social:&lt;/strong&gt; &lt;a href="https://twitter.com/argoproj"&gt;&lt;img src="https://img.shields.io/twitter/follow/argoproj?style=social" alt="Twitter Follow" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/argoproj/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-argoproj-blue.svg?logo=linkedin" alt="LinkedIn" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Argo CD - Declarative Continuous Delivery for Kubernetes&lt;/h1&gt; 
&lt;h2&gt;What is Argo CD?&lt;/h2&gt; 
&lt;p&gt;Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/argoproj/argo-cd/master/docs/assets/argocd-ui.gif" alt="Argo CD UI" /&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/0WAm0y2vLIo"&gt;&lt;img src="https://img.youtube.com/vi/0WAm0y2vLIo/0.jpg" alt="Argo CD Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Why Argo CD?&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Application definitions, configurations, and environments should be declarative and version controlled.&lt;/li&gt; 
 &lt;li&gt;Application deployment and lifecycle management should be automated, auditable, and easy to understand.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Who uses Argo CD?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/argoproj/argo-cd/master/USERS.md"&gt;Official Argo CD user list&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo CD &lt;a href="https://argo-cd.readthedocs.io/"&gt;go to the complete documentation&lt;/a&gt;. Check live demo at &lt;a href="https://cd.apps.argoproj.io/"&gt;https://cd.apps.argoproj.io/&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;h3&gt;Contribution, Discussion and Support&lt;/h3&gt; 
&lt;p&gt;You can reach the Argo CD community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A : &lt;a href="https://github.com/argoproj/argo-cd/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat : &lt;a href="https://argoproj.github.io/community/join-slack"&gt;The #argo-cd Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;First Wednesday of the month&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Participation in the Argo CD project is governed by the &lt;a href="https://github.com/cncf/foundation/raw/master/code-of-conduct.md"&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Blogs and Presentations&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://akuity.io/blog/secret-ingredients-of-continuous-delivery-at-enterprise-scale-with-argocd/"&gt;Unveil the Secret Ingredients of Continuous Delivery at Enterprise Scale with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/avPUQin9kzU"&gt;GitOps Without Pipelines With ArgoCD Image Updater&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/eEcgn_gU3SM"&gt;Combining Argo CD (GitOps), Crossplane (Control Plane), And KubeVela (OAM)&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/yrj4lmScKHQ"&gt;How to Apply GitOps to Everything - Combining Argo CD and Crossplane&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/nkPoPaVzExY"&gt;Couchbase - How To Run a Database Cluster in Kubernetes Using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/cpAaI8p4R60"&gt;Environments Based On Pull Requests (PRs): Using Argo CD To Apply GitOps Principles On Previews&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/vpWQeoaiRM4"&gt;Argo CD: Applying GitOps Principles To Manage Production Environment In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/creating-temporary-preview-environments-based-pull-requests-argo-cd-codefresh/"&gt;Creating Temporary Preview Environments Based On Pull Requests With Argo CD And Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=r50tRQjisxw"&gt;Tutorial: Everything You Need To Become A GitOps Ninja&lt;/a&gt; 90m tutorial on GitOps and Argo CD.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.inovex.de/blog/spinnaker-vs-argo-cd-vs-tekton-vs-jenkins-x/"&gt;Comparison of Argo CD, Spinnaker, Jenkins X, and Tekton&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.ibm.com/cloud/blog/simplify-and-automate-deployments-using-gitops-with-ibm-multicloud-manager-3-1-2"&gt;Simplify and Automate Deployments Using GitOps with IBM Multicloud Manager 3.1.2&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://v0-6.kubeflow.org/docs/use-cases/gitops-for-kubeflow/"&gt;GitOps for Kubeflow using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/webinar-series-gitops-tool-sets-on-kubernetes-with-circleci-and-argo-cd"&gt;GitOps Toolsets on Kubernetes with CircleCI and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OdzH82VpMwI&amp;amp;feature=youtu.be"&gt;CI/CD in Light Speed with K8s and Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=VXrGp5er1ZE&amp;amp;t=0s&amp;amp;index=135&amp;amp;list=PLj6h78yzYM2PZf9eA7bhWnIh_mK1vyOfU"&gt;Machine Learning as Code&lt;/a&gt;. Among other things, describes how Kubeflow uses Argo CD to implement GitOPs for ML&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aWDIQMbp1cc&amp;amp;feature=youtu.be&amp;amp;t=1m4s"&gt;Argo CD - GitOps Continuous Delivery for Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=2WSJF7d8dUg&amp;amp;feature=youtu.be"&gt;Introduction to Argo CD : Kubernetes DevOps CI/CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/riskified-technology/gitops-deployment-and-kubernetes-f1ab289efa4b"&gt;GitOps Deployment and Kubernetes - using Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://itnext.io/deploy-argo-cd-with-ingress-and-tls-in-three-steps-no-yaml-yak-shaving-required-bc536d401491"&gt;Deploy Argo CD with Ingress and TLS in Three Steps: No YAML Yak Shaving Required&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/events/cncf-member-webinar-gitops-continuous-delivery-argo-codefresh/"&gt;GitOps Continuous Delivery with Argo and Codefresh&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://mjpitz.com/blog/2020/12/03/renovate-your-gitops/"&gt;Stay up to date with Argo CD and Renovate&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.arthurkoziel.com/setting-up-argocd-with-helm/"&gt;Setting up Argo CD with Helm&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://thenewstack.io/applied-gitops-with-argocd/"&gt;Applied GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2020/12/17/solving-configuration-drift-using-gitops-with-argo-cd/"&gt;Solving configuration drift using GitOps with Argo CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://blogs.sap.com/2021/05/06/decentralized-gitops-over-environments/"&gt;Decentralized GitOps over environments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/AvLuplh1skA"&gt;Getting Started with ArgoCD for GitOps Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/17894DTru2Y"&gt;Using Argo CD &amp;amp; Datree for Stable Kubernetes CI/CD Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://amralaayassen.medium.com/how-to-create-argocd-applications-automatically-using-applicationset-automation-of-the-gitops-59455eaf4f72"&gt;How to create Argo CD Applications Automatically using ApplicationSet? "Automation of GitOps"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.cncf.io/blog/2022/12/16/progressive-delivery-with-service-mesh-argo-rollouts-with-istio/"&gt;Progressive Delivery with Service Mesh – Argo Rollouts with Istio&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>helm/helm</title>
      <link>https://github.com/helm/helm</link>
      <description>&lt;p&gt;The Kubernetes Package Manager&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Helm&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/helm/helm/actions?workflow=release"&gt;&lt;img src="https://github.com/helm/helm/workflows/release/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/helm.sh/helm/v4"&gt;&lt;img src="https://goreportcard.com/badge/helm.sh/helm/v4" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/helm.sh/helm/v4"&gt;&lt;img src="https://img.shields.io/static/v1?label=godoc&amp;amp;message=reference&amp;amp;color=blue" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3131"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3131/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/helm/helm"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/helm/helm/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://insights.linuxfoundation.org/project/helm"&gt;&lt;img src="https://insights.production.lfx.dev/api/badge/health-score?project=helm" alt="LFX Health Score" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources.&lt;/p&gt; 
&lt;p&gt;Use Helm to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Find and use &lt;a href="https://artifacthub.io/packages/search?kind=0"&gt;popular software packaged as Helm Charts&lt;/a&gt; to run in Kubernetes&lt;/li&gt; 
 &lt;li&gt;Share your own applications as Helm Charts&lt;/li&gt; 
 &lt;li&gt;Create reproducible builds of your Kubernetes applications&lt;/li&gt; 
 &lt;li&gt;Intelligently manage your Kubernetes manifest files&lt;/li&gt; 
 &lt;li&gt;Manage releases of Helm packages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm in a Handbasket&lt;/h2&gt; 
&lt;p&gt;Helm is a tool that streamlines installing and managing Kubernetes applications. Think of it like apt/yum/homebrew for Kubernetes.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Helm renders your templates and communicates with the Kubernetes API&lt;/li&gt; 
 &lt;li&gt;Helm runs on your laptop, CI/CD, or wherever you want it to run.&lt;/li&gt; 
 &lt;li&gt;Charts are Helm packages that contain at least two things: 
  &lt;ul&gt; 
   &lt;li&gt;A description of the package (&lt;code&gt;Chart.yaml&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;One or more templates, which contain Kubernetes manifest files&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Charts can be stored on disk, or fetched from remote chart repositories (like Debian or RedHat packages)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Helm Development and Stable Versions&lt;/h2&gt; 
&lt;p&gt;Helm v4 is currently under development on the &lt;code&gt;main&lt;/code&gt; branch. This is unstable and the APIs within the Go SDK and at the command line are changing. Helm v3 (current stable) is maintained on the &lt;code&gt;dev-v3&lt;/code&gt; branch. APIs there follow semantic versioning.&lt;/p&gt; 
&lt;h2&gt;Install&lt;/h2&gt; 
&lt;p&gt;Binary downloads of the Helm client can be found on &lt;a href="https://github.com/helm/helm/releases/latest"&gt;the Releases page&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Unpack the &lt;code&gt;helm&lt;/code&gt; binary and add it to your PATH and you are good to go!&lt;/p&gt; 
&lt;p&gt;If you want to use a package manager:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://brew.sh/"&gt;Homebrew&lt;/a&gt; users can use &lt;code&gt;brew install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://chocolatey.org/"&gt;Chocolatey&lt;/a&gt; users can use &lt;code&gt;choco install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://learn.microsoft.com/en-us/windows/package-manager/"&gt;Winget&lt;/a&gt; users can use &lt;code&gt;winget install Helm.Helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://scoop.sh/"&gt;Scoop&lt;/a&gt; users can use &lt;code&gt;scoop install helm&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://snapcraft.io/"&gt;Snapcraft&lt;/a&gt; users can use &lt;code&gt;snap install helm --classic&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://flox.dev"&gt;Flox&lt;/a&gt; users can use &lt;code&gt;flox install kubernetes-helm&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To rapidly get Helm up and running, start with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start Guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://helm.sh/docs/intro/install/"&gt;installation guide&lt;/a&gt; for more options, including installing pre-releases.&lt;/p&gt; 
&lt;h2&gt;Docs&lt;/h2&gt; 
&lt;p&gt;Get started with the &lt;a href="https://helm.sh/docs/intro/quickstart/"&gt;Quick Start guide&lt;/a&gt; or plunge into the &lt;a href="https://helm.sh/docs"&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/helm/helm/milestones"&gt;Helm roadmap uses GitHub milestones&lt;/a&gt; to track the progress of the project.&lt;/p&gt; 
&lt;p&gt;The development of Helm v4 is currently happening on the &lt;code&gt;main&lt;/code&gt; branch while the development of Helm v3, the stable branch, is happening on the &lt;code&gt;dev-v3&lt;/code&gt; branch. Changes should be made to the &lt;code&gt;main&lt;/code&gt; branch prior to being added to the &lt;code&gt;dev-v3&lt;/code&gt; branch so that all changes are carried along to Helm v4.&lt;/p&gt; 
&lt;h2&gt;Community, discussion, contribution, and support&lt;/h2&gt; 
&lt;p&gt;You can reach the Helm community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://kubernetes.slack.com"&gt;Kubernetes Slack&lt;/a&gt;: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-users"&gt;#helm-users&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/helm-dev"&gt;#helm-dev&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://kubernetes.slack.com/messages/charts"&gt;#charts&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Mailing List: 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://lists.cncf.io/g/cncf-helm"&gt;Helm Mailing List&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Developer Call: Thursdays at 9:30-10:00 Pacific (&lt;a href="https://github.com/helm/community/raw/master/communication.md#meetings"&gt;meeting details&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Contribution&lt;/h3&gt; 
&lt;p&gt;If you're interested in contributing, please refer to the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; &lt;strong&gt;before submitting a pull request&lt;/strong&gt;.&lt;/p&gt; 
&lt;h3&gt;Code of conduct&lt;/h3&gt; 
&lt;p&gt;Participation in the Helm community is governed by the &lt;a href="https://raw.githubusercontent.com/helm/helm/main/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-rollouts</title>
      <link>https://github.com/argoproj/argo-rollouts</link>
      <description>&lt;p&gt;Progressive Delivery for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Argo Rollouts - Progressive Delivery for Kubernetes&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://codecov.io/gh/argoproj/argo-rollouts"&gt;&lt;img src="https://codecov.io/gh/argoproj/argo-rollouts/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="slack" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3834"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3834/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-rollouts"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-rollouts/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-rollouts"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-rollouts" alt="Artifact HUB" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;Argo Rollouts is a Kubernetes controller and set of CRDs which provide advanced deployment capabilities such as blue-green, canary, canary analysis, experimentation, and progressive delivery features to Kubernetes.&lt;/p&gt; 
&lt;p&gt;Argo Rollouts (optionally) integrates with ingress controllers and service meshes, leveraging their traffic shaping abilities to gradually shift traffic to the new version during an update. Additionally, Rollouts can query and interpret metrics from various providers to verify key KPIs and drive automated promotion or rollback during an update.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://youtu.be/hIL0E2gLkf8"&gt;&lt;img src="https://img.youtube.com/vi/hIL0E2gLkf8/0.jpg" alt="Argo Rollotus Demo" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;kubectl create namespace argo-rollouts
kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Follow the full &lt;a href="https://raw.githubusercontent.com/argoproj/argo-rollouts/master/docs/getting-started.md"&gt;getting started guide&lt;/a&gt; to walk through creating and then updating a rollout object.&lt;/p&gt; 
&lt;h2&gt;Why Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;Kubernetes Deployments provides the &lt;code&gt;RollingUpdate&lt;/code&gt; strategy which provide a basic set of safety guarantees (readiness probes) during an update. However the rolling update strategy faces many limitations:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Few controls over the speed of the rollout&lt;/li&gt; 
 &lt;li&gt;Inability to control traffic flow to the new version&lt;/li&gt; 
 &lt;li&gt;Readiness probes are unsuitable for deeper, stress, or one-time checks&lt;/li&gt; 
 &lt;li&gt;No ability to query external metrics to verify an update&lt;/li&gt; 
 &lt;li&gt;Can halt the progression, but unable to automatically abort and rollback the update&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For these reasons, in large scale high-volume production environments, a rolling update is often considered too risky of an update procedure since it provides no control over the blast radius, may rollout too aggressively, and provides no automated rollback upon failures.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Blue-Green update strategy&lt;/li&gt; 
 &lt;li&gt;Canary update strategy&lt;/li&gt; 
 &lt;li&gt;Fine-grained, weighted traffic shifting&lt;/li&gt; 
 &lt;li&gt;Automated rollbacks and promotions&lt;/li&gt; 
 &lt;li&gt;Manual judgement&lt;/li&gt; 
 &lt;li&gt;Customizable metric queries and analysis of business KPIs&lt;/li&gt; 
 &lt;li&gt;Ingress controller integration: NGINX, ALB, Apache APISIX&lt;/li&gt; 
 &lt;li&gt;Service Mesh integration: Istio, Linkerd, SMI&lt;/li&gt; 
 &lt;li&gt;Metric provider integration: Prometheus, Wavefront, Kayenta, Web, Kubernetes Jobs, Datadog, New Relic, InfluxDB&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Traffic Shaping Integrations&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Traffic Shaping Integration&lt;/th&gt; 
   &lt;th&gt;SetWeight&lt;/th&gt; 
   &lt;th&gt;SetWeightExperiments&lt;/th&gt; 
   &lt;th&gt;SetMirror&lt;/th&gt; 
   &lt;th&gt;SetHeader&lt;/th&gt; 
   &lt;th&gt;Implemented As Plugin&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ALB Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ambassador&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Apache APISIX Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Istio&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Nginx Ingress Controller&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;SMI&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (stable)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Traefik&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (beta)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Contour&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (beta)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Gateway API&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt; (alpha)&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✔&lt;/span&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;&lt;span&gt;✅&lt;/span&gt; = Supported&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;❌&lt;/span&gt; = Not Supported&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;✔&lt;/span&gt; = Yes&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;To learn more about Argo Rollouts go to the &lt;a href="https://argo-rollouts.readthedocs.io/en/stable/"&gt;complete documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;You can reach the Argo Rollouts community and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Q &amp;amp; A: &lt;a href="https://github.com/argoproj/argo-rollouts/discussions"&gt;Github Discussions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Chat: &lt;a href="https://argoproj.github.io/community/join-slack"&gt;The #argo-rollouts Slack channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Contributors Office Hours: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;Every Thursday&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1xkoFkVviB70YBzSEa4bDnu-rUZ1sIFtwKKG1Uw8XsY8"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;User Community meeting: &lt;a href="https://calendar.google.com/calendar/u/0/embed?src=argoproj@gmail.com"&gt;First Wednesday of each month&lt;/a&gt; | &lt;a href="https://docs.google.com/document/d/1ttgw98MO45Dq7ZUHpIiOIEfbyeitKHNfMjbY5dLLMKQ"&gt;Agenda&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Who uses Argo Rollouts?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/argoproj/argo-rollouts/raw/master/USERS.md"&gt;Official Argo Rollouts User List&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community Blogs and Presentations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/84Ky0aPbHvY"&gt;Argo Rollouts - Canary Deployments Made Easy In Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=yeVkTTO9nOA"&gt;How Intuit Does Canary and Blue Green Deployments&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Nv0PPwbIEkY"&gt;Leveling Up Your CD: Unlocking Progressive Delivery on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/minimize-failed-deployments-argo-rollouts-smoke-tests/"&gt;Minimize failed deployments with Argo Rollouts and Smoke tests&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/continuous-deployment/recover-automatically-from-failed-deployments/"&gt;Recover automatically from failed deployments with Argo Rollouts and Prometheus metrics&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=krDxDz4V4Tg"&gt;Kubernetes Blue-Green deployments with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=fviYWA2mcF8"&gt;Kubernetes canary deployments with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=35Qimb_AZ8U"&gt;GitOps with Argo CD and an Argo Rollouts canary release&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w-E8FzTbN3g&amp;amp;t=1s"&gt;Multi-Stage Delivery with Keptn and Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://doordash.engineering/2021/04/14/gradual-code-releases-using-an-in-house-kubernetes-canary-controller/"&gt;Gradual Code Releases Using an In-House Kubernetes Canary Controller on top of Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rCEhxJ2NSTI"&gt;How Scalable is Argo-Rollouts: A Cloud Operator’s Perspective&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@arielsimhon/minimize-impact-in-kubernetes-using-argo-rollouts-992fb9519969"&gt;Minimize Impact in Kubernetes Using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=DfeL7cdTx4c"&gt;Progressive Application Delivery with GitOps on Red Hat OpenShift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/blog/progressive-delivery-for-kubernetes-config-maps-using-argo-rollouts/"&gt;Progressive delivery for Kubernetes Config Maps using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/blog/multi-service-progressive-delivery-with-argo-rollouts/"&gt;Multi-Service Progressive Delivery with Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://codefresh.io/blog/progressive-delivery-for-stateful-services-using-argo-rollouts/"&gt;Progressive Delivery for Stateful Services Using Argo Rollouts&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>cert-manager/cert-manager</title>
      <link>https://github.com/cert-manager/cert-manager</link>
      <description>&lt;p&gt;Automatically provision and manage TLS certificates in Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/cert-manager/cert-manager/master/logo/logo-small.png" height="256" width="256" alt="cert-manager project logo" /&gt; &lt;/p&gt; 
&lt;!-- note that the cert-manager logo in this repo is referred to in other README files in the cert-manager org
     as well as in Helm charts, etc.
     if you change its location or name, you'll need to update several other repos too! --&gt; 
&lt;p align="center"&gt;&lt;a href="https://prow.infra.cert-manager.io/?job=ci-cert-manager-master-make-test"&gt; 
  &lt;!-- prow build badge, godoc, and go report card--&gt; &lt;img alt="Build Status" src="https://prow.infra.cert-manager.io/badge.svg?jobs=ci-cert-manager-master-make-test" /&gt; &lt;/a&gt; &lt;a href="https://godoc.org/github.com/cert-manager/cert-manager"&gt;&lt;img src="https://godoc.org/github.com/cert-manager/cert-manager?status.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/cert-manager/cert-manager"&gt;&lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/cert-manager/cert-manager" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://artifacthub.io/packages/search?repo=cert-manager"&gt;&lt;img alt="Artifact Hub" src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/cert-manager" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/cert-manager/cert-manager"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/cert-manager/cert-manager/badge" alt="Scorecard score" /&gt;&lt;/a&gt; &lt;a href="https://clomonitor.io/projects/cncf/cert-manager"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://clomonitor.io/api/projects/cncf/cert-manager/badge" alt="CLOMonitor" /&gt;&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8079"&gt;&lt;img src="https://www.bestpractices.dev/projects/8079/badge" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h1&gt;cert-manager&lt;/h1&gt; 
&lt;p&gt;cert-manager adds certificates and certificate issuers as resource types in Kubernetes clusters, and simplifies the process of obtaining, renewing and using those certificates.&lt;/p&gt; 
&lt;p&gt;It supports issuing certificates from a variety of sources, including Let's Encrypt (ACME), HashiCorp Vault, and Venafi TPP / TLS Protect Cloud, as well as local in-cluster issuance.&lt;/p&gt; 
&lt;p&gt;cert-manager also ensures certificates remain valid and up to date, attempting to renew certificates at an appropriate time before expiry to reduce the risk of outages and remove toil.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://cert-manager.io/images/high-level-overview.svg?sanitize=true" alt="cert-manager high level overview diagram" /&gt;&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Documentation for cert-manager can be found at &lt;a href="https://cert-manager.io/docs/"&gt;cert-manager.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For the common use-case of automatically issuing TLS certificates for Ingress resources, see the &lt;a href="https://cert-manager.io/docs/tutorials/acme/nginx-ingress/"&gt;cert-manager nginx-ingress quick start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For a more comprehensive guide to issuing your first certificate, see our &lt;a href="https://cert-manager.io/docs/getting-started/"&gt;getting started guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Installation&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://cert-manager.io/docs/installation/"&gt;Installation&lt;/a&gt; is documented on the website, with a variety of supported methods.&lt;/p&gt; 
&lt;h2&gt;Developing cert-manager&lt;/h2&gt; 
&lt;p&gt;We actively welcome contributions and we support both Linux and macOS environments for development.&lt;/p&gt; 
&lt;p&gt;Different platforms have different requirements; we document everything on our &lt;a href="https://cert-manager.io/docs/contributing/building/"&gt;Building cert-manager&lt;/a&gt; website page.&lt;/p&gt; 
&lt;p&gt;Note in particular that macOS has several extra requirements, to ensure that modern tools are installed and available. Read the page before getting started!&lt;/p&gt; 
&lt;h2&gt;Troubleshooting&lt;/h2&gt; 
&lt;p&gt;If you encounter any issues whilst using cert-manager, we have a number of ways to get help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A &lt;a href="https://cert-manager.io/docs/faq/troubleshooting/"&gt;troubleshooting guide&lt;/a&gt; on our website.&lt;/li&gt; 
 &lt;li&gt;Our official &lt;a href="https://cert-manager.io/docs/contributing/#slack"&gt;Kubernetes Slack channel&lt;/a&gt; - the quickest way to ask! (&lt;a href="https://kubernetes.slack.com/messages/cert-manager"&gt;#cert-manager&lt;/a&gt; and &lt;a href="https://kubernetes.slack.com/messages/cert-manager-dev"&gt;#cert-manager-dev&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;Searching for an existing issue&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If you believe you've found a bug and cannot find an existing issue, feel free to &lt;a href="https://github.com/cert-manager/cert-manager/issues"&gt;open a new issue&lt;/a&gt;! Be sure to include as much information as you can about your environment.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://groups.google.com/forum/#!forum/cert-manager-dev"&gt;&lt;code&gt;cert-manager-dev&lt;/code&gt; Google Group&lt;/a&gt; is used for project wide announcements and development coordination. Anybody with a Google account can join the group by visiting the group and clicking "Join Group".&lt;/p&gt; 
&lt;h3&gt;Meetings&lt;/h3&gt; 
&lt;p&gt;We have several public meetings which any member of our Google Group is more than welcome to join!&lt;/p&gt; 
&lt;p&gt;Check out the details on &lt;a href="https://cert-manager.io/docs/contributing/#meetings"&gt;our website&lt;/a&gt;. Feel free to drop in and ask questions, chat with us or just to say hi!&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;We welcome pull requests with open arms! There's a lot of work to do here, and we're especially concerned with ensuring the longevity and reliability of the project. The &lt;a href="https://cert-manager.io/docs/contributing/"&gt;contributing guide&lt;/a&gt; will help you get started.&lt;/p&gt; 
&lt;h2&gt;Coding Conventions&lt;/h2&gt; 
&lt;p&gt;Code style guidelines are documented on the &lt;a href="https://cert-manager.io/docs/contributing/coding-conventions/"&gt;coding conventions&lt;/a&gt; page of the cert-manager website. Please try to follow those guidelines if you're submitting a pull request for cert-manager.&lt;/p&gt; 
&lt;h2&gt;Importing cert-manager as a Module&lt;/h2&gt; 
&lt;p&gt;⚠️ Please note that cert-manager &lt;strong&gt;does not&lt;/strong&gt; currently provide a Go module compatibility guarantee. That means that &lt;strong&gt;most code under &lt;code&gt;pkg/&lt;/code&gt; is subject to change in a breaking way&lt;/strong&gt;, even between minor or patch releases and even if the code is currently publicly exported.&lt;/p&gt; 
&lt;p&gt;The lack of a Go module compatibility guarantee does not affect API version guarantees under the &lt;a href="https://kubernetes.io/docs/reference/using-api/deprecation-policy/"&gt;Kubernetes Deprecation Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For more details see &lt;a href="https://cert-manager.io/docs/contributing/importing/"&gt;Importing cert-manager in Go&lt;/a&gt; on the cert-manager website.&lt;/p&gt; 
&lt;p&gt;The import path for cert-manager versions 1.8 and later is &lt;code&gt;github.com/cert-manager/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;For all versions of cert-manager before 1.8, including minor and patch releases, the import path is &lt;code&gt;github.com/jetstack/cert-manager&lt;/code&gt;.&lt;/p&gt; 
&lt;h2&gt;Security Reporting&lt;/h2&gt; 
&lt;p&gt;Security is the number one priority for cert-manager. If you think you've found a security vulnerability, we'd love to hear from you.&lt;/p&gt; 
&lt;p&gt;Follow the instructions in &lt;a href="https://raw.githubusercontent.com/cert-manager/cert-manager/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt; to make a report.&lt;/p&gt; 
&lt;h2&gt;Changelog&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/cert-manager/cert-manager/releases"&gt;Every release&lt;/a&gt; on GitHub has a changelog, and we also publish release notes on &lt;a href="https://cert-manager.io/docs/release-notes/"&gt;the website&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;History&lt;/h2&gt; 
&lt;p&gt;cert-manager is loosely based upon the work of &lt;a href="https://github.com/jetstack/kube-lego"&gt;kube-lego&lt;/a&gt; and has borrowed some wisdom from other similar projects such as &lt;a href="https://github.com/PalmStoneGames/kube-cert-manager"&gt;kube-cert-manager&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;sub&gt;&lt;sup&gt;Logo design by &lt;a href="https://zoepatersonmedia.com"&gt;Zoe Paterson&lt;/a&gt;&lt;/sup&gt;&lt;/sub&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>shirou/gopsutil</title>
      <link>https://github.com/shirou/gopsutil</link>
      <description>&lt;p&gt;psutil for golang&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gopsutil: psutil for golang&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/shirou/gopsutil/actions/workflows/test.yml"&gt;&lt;img src="https://github.com/shirou/gopsutil/actions/workflows/test.yml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/shirou/gopsutil/v4"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/shirou/gopsutil/v4.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://calver.org/"&gt;&lt;img src="https://img.shields.io/badge/calver-vMAJOR.YY.MM-22bfda.svg?sanitize=true" alt="Calendar Versioning" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This is a port of psutil (&lt;a href="https://github.com/giampaolo/psutil"&gt;https://github.com/giampaolo/psutil&lt;/a&gt;). The challenge is porting all psutil functions on some architectures.&lt;/p&gt; 
&lt;h2&gt;migration&lt;/h2&gt; 
&lt;h3&gt;v4 migration&lt;/h3&gt; 
&lt;p&gt;There are some breaking changes. Please see &lt;a href="https://github.com/shirou/gopsutil/releases/tag/v4.24.5"&gt;v4 release note&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Tag semantics&lt;/h2&gt; 
&lt;p&gt;gopsutil tag policy is almost same as Semantic Versioning, but automatically increases like &lt;a href="https://calver.org/"&gt;Ubuntu versioning&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;For example, v4.24.04 means&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;v4: major version&lt;/li&gt; 
 &lt;li&gt;24: release year, 2024&lt;/li&gt; 
 &lt;li&gt;04: release month&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;gopsutil aims to keep backwards compatibility until major version change.&lt;/p&gt; 
&lt;p&gt;Tagged at every end of month, but if there are only a few commits, it can be skipped.&lt;/p&gt; 
&lt;h2&gt;Available Architectures&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;FreeBSD i386/amd64/arm&lt;/li&gt; 
 &lt;li&gt;Linux i386/amd64/arm(raspberry pi)&lt;/li&gt; 
 &lt;li&gt;Windows i386/amd64/arm/arm64&lt;/li&gt; 
 &lt;li&gt;Darwin amd64/arm64&lt;/li&gt; 
 &lt;li&gt;OpenBSD i386/amd64/armv7/arm64/riscv64 (Thank you @mpfz0r!)&lt;/li&gt; 
 &lt;li&gt;Solaris amd64 (developed and tested on SmartOS/Illumos, Thank you @jen20!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;These have partial support:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;CPU on DragonFly BSD (#893, Thank you @gballet!)&lt;/li&gt; 
 &lt;li&gt;host on Linux RISC-V (#896, Thank you @tklauser!)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All works are implemented without cgo by porting C structs to golang structs.&lt;/p&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
    "fmt"

    "github.com/shirou/gopsutil/v4/mem"
)

func main() {
    v, _ := mem.VirtualMemory()

    // almost every return value is a struct
    fmt.Printf("Total: %v, Free:%v, UsedPercent:%f%%\n", v.Total, v.Free, v.UsedPercent)

    // convert to JSON. String() is also implemented
    fmt.Println(v)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The output is below.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;Total: 3179569152, Free:284233728, UsedPercent:84.508194%
{"total":3179569152,"available":492572672,"used":2895335424,"usedPercent":84.50819439828305, (snip...)}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;You can set alternative locations for various system directories by using the following environment variables:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;/proc: &lt;code&gt;HOST_PROC&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;/sys: &lt;code&gt;HOST_SYS&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;/etc: &lt;code&gt;HOST_ETC&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;/var: &lt;code&gt;HOST_VAR&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;/run: &lt;code&gt;HOST_RUN&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;/dev: &lt;code&gt;HOST_DEV&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;/: &lt;code&gt;HOST_ROOT&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;/proc/N/mountinfo: &lt;code&gt;HOST_PROC_MOUNTINFO&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Adding settings using &lt;code&gt;context&lt;/code&gt; (from v3.23.6)&lt;/h3&gt; 
&lt;p&gt;As of v3.23.6, it is now possible to pass a path location using &lt;code&gt;context&lt;/code&gt;: import &lt;code&gt;"github.com/shirou/gopsutil/v3/common"&lt;/code&gt; and pass a context with &lt;code&gt;common.EnvMap&lt;/code&gt; set to &lt;code&gt;common.EnvKey&lt;/code&gt;, and the location will be used within each function.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;	ctx := context.WithValue(context.Background(), 
		common.EnvKey, common.EnvMap{common.HostProcEnvKey: "/myproc"},
	)
	v, err := mem.VirtualMemoryWithContext(ctx)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;First priority is given to the value set in &lt;code&gt;context&lt;/code&gt;, then the value from the environment variable, and finally the default location.&lt;/p&gt; 
&lt;h3&gt;Caching&lt;/h3&gt; 
&lt;p&gt;As of v3.24.1, it is now possible to cached some values. These values default to false, not cached.&lt;/p&gt; 
&lt;p&gt;Be very careful that enabling the cache may cause inconsistencies. For example, if you enable caching of boottime on Linux, be aware that unintended values may be returned if &lt;a href="https://github.com/shirou/gopsutil/issues/1070#issuecomment-842512782"&gt;the boottime is changed by NTP after booted&lt;/a&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;host&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;EnableBootTimeCache&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;process&lt;/code&gt; 
  &lt;ul&gt; 
   &lt;li&gt;EnableBootTimeCache&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;&lt;code&gt;Ex&lt;/code&gt; struct (from v4.24.5)&lt;/h3&gt; 
&lt;p&gt;gopsutil is designed to work across multiple platforms. However, there are differences in the information available on different platforms, such as memory information that exists on Linux but not on Windows.&lt;/p&gt; 
&lt;p&gt;As of v4.24.5, to access this platform-specific information, gopsutil provides functions named &lt;code&gt;Ex&lt;/code&gt; within the package. Currently, these functions are available in the mem and sensor packages.&lt;/p&gt; 
&lt;p&gt;The Ex structs are specific to each platform. For example, on Linux, there is an &lt;code&gt;ExLinux&lt;/code&gt; struct, which can be obtained using the &lt;code&gt;mem.NewExLinux()&lt;/code&gt; function. On Windows, it's &lt;code&gt;mem.ExWindows()&lt;/code&gt;. These Ex structs provide platform-specific information.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;ex := NewExWindows()
v, err := ex.VirtualMemory()
if err != nil {
    panic(err)
}

fmt.Println(v.VirtualAvail)
fmt.Println(v.VirtualTotal)

// Output:
// 140731958648832
// 140737488224256
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;gopsutil aims to minimize platform differences by offering common functions. However, there are many requests to obtain unique information for each platform. The Ex structs are designed to meet those requests. Additional functionalities might be added in the future. The use of these structures makes it clear that the information they provide is specific to each platform, which is why they have been designed in this way.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://pkg.go.dev/github.com/shirou/gopsutil/v4"&gt;https://pkg.go.dev/github.com/shirou/gopsutil/v4&lt;/a&gt; or &lt;a href="https://godocs.io/github.com/shirou/gopsutil/v4"&gt;https://godocs.io/github.com/shirou/gopsutil/v4&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Requirements&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;go1.18 or above is required.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;More Info&lt;/h2&gt; 
&lt;p&gt;Several methods have been added which are not present in psutil, but will provide useful information.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;host/HostInfo() (linux) 
  &lt;ul&gt; 
   &lt;li&gt;Hostname&lt;/li&gt; 
   &lt;li&gt;Uptime&lt;/li&gt; 
   &lt;li&gt;Procs&lt;/li&gt; 
   &lt;li&gt;OS (ex: "linux")&lt;/li&gt; 
   &lt;li&gt;Platform (ex: "ubuntu", "arch")&lt;/li&gt; 
   &lt;li&gt;PlatformFamily (ex: "debian")&lt;/li&gt; 
   &lt;li&gt;PlatformVersion (ex: "Ubuntu 13.10")&lt;/li&gt; 
   &lt;li&gt;VirtualizationSystem (ex: "LXC")&lt;/li&gt; 
   &lt;li&gt;VirtualizationRole (ex: "guest"/"host")&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;IOCounters 
  &lt;ul&gt; 
   &lt;li&gt;Label (linux only) The registered &lt;a href="https://www.kernel.org/doc/Documentation/ABI/testing/sysfs-block-dm"&gt;device mapper name&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;cpu/CPUInfo() (linux, freebsd) 
  &lt;ul&gt; 
   &lt;li&gt;CPU (ex: 0, 1, ...)&lt;/li&gt; 
   &lt;li&gt;VendorID (ex: "GenuineIntel")&lt;/li&gt; 
   &lt;li&gt;Family&lt;/li&gt; 
   &lt;li&gt;Model&lt;/li&gt; 
   &lt;li&gt;Stepping&lt;/li&gt; 
   &lt;li&gt;PhysicalID&lt;/li&gt; 
   &lt;li&gt;CoreID&lt;/li&gt; 
   &lt;li&gt;Cores (ex: 2)&lt;/li&gt; 
   &lt;li&gt;ModelName (ex: "Intel(R) Core(TM) i7-2640M CPU @ 2.80GHz")&lt;/li&gt; 
   &lt;li&gt;Mhz&lt;/li&gt; 
   &lt;li&gt;CacheSize&lt;/li&gt; 
   &lt;li&gt;Flags (ex: "fpu vme de pse tsc msr pae mce cx8 ...")&lt;/li&gt; 
   &lt;li&gt;Microcode&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;load/Avg() (linux, freebsd, solaris) 
  &lt;ul&gt; 
   &lt;li&gt;Load1&lt;/li&gt; 
   &lt;li&gt;Load5&lt;/li&gt; 
   &lt;li&gt;Load15&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;docker/GetDockerIDList() (linux only) 
  &lt;ul&gt; 
   &lt;li&gt;container id list ([]string)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;docker/CgroupCPU() (linux only) 
  &lt;ul&gt; 
   &lt;li&gt;user&lt;/li&gt; 
   &lt;li&gt;system&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;docker/CgroupMem() (linux only) 
  &lt;ul&gt; 
   &lt;li&gt;various status&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;net_protocols (linux only) 
  &lt;ul&gt; 
   &lt;li&gt;system wide stats on network protocols (i.e IP, TCP, UDP, etc.)&lt;/li&gt; 
   &lt;li&gt;sourced from /proc/net/snmp&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;iptables nf_conntrack (linux only) 
  &lt;ul&gt; 
   &lt;li&gt;system wide stats on netfilter conntrack module&lt;/li&gt; 
   &lt;li&gt;sourced from /proc/sys/net/netfilter/nf_conntrack_count&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Some code is ported from Ohai. Many thanks.&lt;/p&gt; 
&lt;h2&gt;Current Status&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;x: works&lt;/li&gt; 
 &lt;li&gt;b: almost works, but something is broken&lt;/li&gt; 
&lt;/ul&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;name&lt;/th&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;FreeBSD&lt;/th&gt; 
   &lt;th&gt;OpenBSD&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;Solaris&lt;/th&gt; 
   &lt;th&gt;Plan 9&lt;/th&gt; 
   &lt;th&gt;AIX&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_times&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;b&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_count&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_percent&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_times_percent&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;virtual_memory&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;b&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;swap_memory&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;X&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;disk_partitions&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;disk_io_counters&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;disk_usage&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;net_io_counters&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;b&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;boot_time&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;X&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;users&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pids&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pid_exists&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;net_connections&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;net_protocols&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;net_if_addrs&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;net_if_stats&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;netfilter_conntrack&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;sensors_temperature&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Process class&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;name&lt;/th&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;FreeBSD&lt;/th&gt; 
   &lt;th&gt;OpenBSD&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;pid&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ppid&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;name&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cmdline&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;create_time&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;status&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cwd&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;exe&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uids&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;gids&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;terminal&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;io_counters&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;nice&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;num_fds&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;num_ctx_switches&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;num_threads&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_times&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;memory_info&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;memory_maps&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;open_files&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;send_signal&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;suspend&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;resume&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;terminate&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;kill&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;username&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ionice&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;rlimit&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;num_handlers&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;threads&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_percent&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;cpu_affinity&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;memory_percent&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;parent&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;children&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;connections&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;is_running&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;page_faults&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;gopsutil Original Metrics&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;item&lt;/th&gt; 
   &lt;th&gt;Linux&lt;/th&gt; 
   &lt;th&gt;FreeBSD&lt;/th&gt; 
   &lt;th&gt;OpenBSD&lt;/th&gt; 
   &lt;th&gt;macOS&lt;/th&gt; 
   &lt;th&gt;Windows&lt;/th&gt; 
   &lt;th&gt;Solaris&lt;/th&gt; 
   &lt;th&gt;AIX&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;HostInfo&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;hostname&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;X&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;uptime&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;process&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;os&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;platform&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;platformfamily&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;virtualization&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;CPU&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;VendorID&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Family&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Model&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Stepping&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;PhysicalID&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;CoreID&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Cores&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;ModelName&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Microcode&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;LoadAvg&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Load1&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Load5&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Load15&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Docker GetDockerID&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;container id&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Docker CgroupsCPU&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;user&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;system&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Docker CgroupsMem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;various&lt;/td&gt; 
   &lt;td&gt;x&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
   &lt;td&gt;no&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;future work 
  &lt;ul&gt; 
   &lt;li&gt;process_iter&lt;/li&gt; 
   &lt;li&gt;wait_procs&lt;/li&gt; 
   &lt;li&gt;Process class 
    &lt;ul&gt; 
     &lt;li&gt;as_dict&lt;/li&gt; 
     &lt;li&gt;wait&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;AIX processes&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;New BSD License (same as psutil)&lt;/p&gt; 
&lt;h2&gt;Related Works&lt;/h2&gt; 
&lt;p&gt;I have been influenced by the following great works:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;psutil: &lt;a href="https://github.com/giampaolo/psutil"&gt;https://github.com/giampaolo/psutil&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;dstat: &lt;a href="https://github.com/dagwieers/dstat"&gt;https://github.com/dagwieers/dstat&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;gosigar: &lt;a href="https://github.com/cloudfoundry/gosigar/"&gt;https://github.com/cloudfoundry/gosigar/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;goprocinfo: &lt;a href="https://github.com/c9s/goprocinfo"&gt;https://github.com/c9s/goprocinfo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;go-ps: &lt;a href="https://github.com/mitchellh/go-ps"&gt;https://github.com/mitchellh/go-ps&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;ohai: &lt;a href="https://github.com/opscode/ohai/"&gt;https://github.com/opscode/ohai/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;bosun: &lt;a href="https://github.com/bosun-monitor/bosun/tree/master/cmd/scollector/collectors"&gt;https://github.com/bosun-monitor/bosun/tree/master/cmd/scollector/collectors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;mackerel: &lt;a href="https://github.com/mackerelio/mackerel-agent/tree/master/metrics"&gt;https://github.com/mackerelio/mackerel-agent/tree/master/metrics&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to Contribute&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork it&lt;/li&gt; 
 &lt;li&gt;Create your feature branch (git checkout -b my-new-feature)&lt;/li&gt; 
 &lt;li&gt;Commit your changes (git commit -am 'Add some feature')&lt;/li&gt; 
 &lt;li&gt;Push to the branch (git push origin my-new-feature)&lt;/li&gt; 
 &lt;li&gt;Create new Pull Request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;English is not my native language, so PRs correcting grammar or spelling are welcome and appreciated.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>moby/moby</title>
      <link>https://github.com/moby/moby</link>
      <description>&lt;p&gt;The Moby Project - a collaborative project for the container ecosystem to assemble container-based systems&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;The Moby Project&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://pkg.go.dev/github.com/moby/moby/v2"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/moby/moby/v2" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/github/license/moby/moby" alt="GitHub License" /&gt; &lt;a href="https://goreportcard.com/report/github.com/moby/moby/v2"&gt;&lt;img src="https://goreportcard.com/badge/github.com/moby/moby/v2" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/moby/moby"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/moby/moby/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/10989"&gt;&lt;img src="https://www.bestpractices.dev/projects/10989/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/moby/moby/master/docs/static_files/moby-project-logo.png" alt="Moby Project logo" title="The Moby Project" /&gt;&lt;/p&gt; 
&lt;p&gt;Moby is an open-source project created by Docker to enable and accelerate software containerization.&lt;/p&gt; 
&lt;p&gt;It provides a "Lego set" of toolkit components, the framework for assembling them into custom container-based systems, and a place for all container enthusiasts and professionals to experiment and exchange ideas. Components include container build tools, a container registry, orchestration tools, a runtime and more, and these can be used as building blocks in conjunction with other tools and projects.&lt;/p&gt; 
&lt;h2&gt;Principles&lt;/h2&gt; 
&lt;p&gt;Moby is an open project guided by strong principles, aiming to be modular, flexible and without too strong an opinion on user experience. It is open to the community to help set its direction.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modular: the project includes lots of components that have well-defined functions and APIs that work together.&lt;/li&gt; 
 &lt;li&gt;Batteries included but swappable: Moby includes enough components to build fully featured container systems, but its modular architecture ensures that most of the components can be swapped by different implementations.&lt;/li&gt; 
 &lt;li&gt;Usable security: Moby provides secure defaults without compromising usability.&lt;/li&gt; 
 &lt;li&gt;Developer focused: The APIs are intended to be functional and useful to build powerful tools. They are not necessarily intended as end user tools but as components aimed at developers. Documentation and UX is aimed at developers not end users.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Audience&lt;/h2&gt; 
&lt;p&gt;The Moby Project is intended for engineers, integrators and enthusiasts looking to modify, hack, fix, experiment, invent and build systems based on containers. It is not for people looking for a commercially supported system, but for people who want to work and learn with open source code.&lt;/p&gt; 
&lt;h2&gt;Relationship with Docker&lt;/h2&gt; 
&lt;p&gt;The components and tools in the Moby Project are initially the open source components that Docker and the community have built for the Docker Project. New projects can be added if they fit with the community goals. Docker is committed to using Moby as the upstream for the Docker Product. However, other projects are also encouraged to use Moby as an upstream, and to reuse the components in diverse ways, and all these uses will be treated in the same way. External maintainers and contributors are welcomed.&lt;/p&gt; 
&lt;p&gt;The Moby project is not intended as a location for support or feature requests for Docker products, but as a place for contributors to work on open source code, fix bugs, and make the code more useful. The releases are supported by the maintainers, community and users, on a best efforts basis only. For customers who want enterprise or commercial support, &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker Desktop&lt;/a&gt; and &lt;a href="https://www.mirantis.com/software/mirantis-container-runtime/"&gt;Mirantis Container Runtime&lt;/a&gt; are the appropriate products for these use cases.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;Legal&lt;/h1&gt; 
&lt;p&gt;&lt;em&gt;Brought to you courtesy of our legal counsel. For more context, please see the &lt;a href="https://github.com/moby/moby/raw/master/NOTICE"&gt;NOTICE&lt;/a&gt; document in this repo.&lt;/em&gt;&lt;/p&gt; 
&lt;p&gt;Use and transfer of Moby may be subject to certain restrictions by the United States and other governments.&lt;/p&gt; 
&lt;p&gt;It is your responsibility to ensure that your use and/or transfer does not violate applicable laws.&lt;/p&gt; 
&lt;p&gt;For more information, please see &lt;a href="https://www.bis.doc.gov"&gt;https://www.bis.doc.gov&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;Licensing&lt;/h1&gt; 
&lt;p&gt;Moby is licensed under the Apache License, Version 2.0. See &lt;a href="https://github.com/moby/moby/raw/master/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-telemetry/opentelemetry-go</title>
      <link>https://github.com/open-telemetry/opentelemetry-go</link>
      <description>&lt;p&gt;OpenTelemetry Go API and SDK&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OpenTelemetry-Go&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/open-telemetry/opentelemetry-go/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/open-telemetry/opentelemetry-go/actions/workflows/ci.yml/badge.svg?branch=main" alt="ci" /&gt;&lt;/a&gt; &lt;a href="https://app.codecov.io/gh/open-telemetry/opentelemetry-go?branch=main"&gt;&lt;img src="https://codecov.io/gh/open-telemetry/opentelemetry-go/coverage.svg?branch=main" alt="codecov.io" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/go.opentelemetry.io/otel"&gt;&lt;img src="https://pkg.go.dev/badge/go.opentelemetry.io/otel" alt="PkgGoDev" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/go.opentelemetry.io/otel"&gt;&lt;img src="https://goreportcard.com/badge/go.opentelemetry.io/otel" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://scorecard.dev/viewer/?uri=github.com/open-telemetry/opentelemetry-go"&gt;&lt;img src="https://api.scorecard.dev/projects/github.com/open-telemetry/opentelemetry-go/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/9996"&gt;&lt;img src="https://www.bestpractices.dev/projects/9996/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://issues.oss-fuzz.com/issues?q=project:opentelemetry-go"&gt;&lt;img src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/opentelemetry-go.svg?sanitize=true" alt="Fuzzing Status" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/custom%2B162%2Fgithub.com%2Fopen-telemetry%2Fopentelemetry-go?ref=badge_shield&amp;amp;issueType=license"&gt;&lt;img src="https://app.fossa.com/api/projects/custom%2B162%2Fgithub.com%2Fopen-telemetry%2Fopentelemetry-go.svg?type=shield&amp;amp;issueType=license" alt="FOSSA Status" /&gt;&lt;/a&gt; &lt;a href="https://cloud-native.slack.com/archives/C01NPAXACKT"&gt;&lt;img src="https://img.shields.io/badge/slack-@cncf/otel--go-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;OpenTelemetry-Go is the &lt;a href="https://golang.org/"&gt;Go&lt;/a&gt; implementation of &lt;a href="https://opentelemetry.io/"&gt;OpenTelemetry&lt;/a&gt;. It provides a set of APIs to directly measure performance and behavior of your software and send this data to observability platforms.&lt;/p&gt; 
&lt;h2&gt;Project Status&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Signal&lt;/th&gt; 
   &lt;th&gt;Status&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Traces&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Metrics&lt;/td&gt; 
   &lt;td&gt;Stable&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Logs&lt;/td&gt; 
   &lt;td&gt;Beta&lt;a href="https://github.com/orgs/open-telemetry/projects/43"&gt;^1&lt;/a&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;Progress and status specific to this repository is tracked in our &lt;a href="https://github.com/open-telemetry/opentelemetry-go/projects"&gt;project boards&lt;/a&gt; and &lt;a href="https://github.com/open-telemetry/opentelemetry-go/milestones"&gt;milestones&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Project versioning information and stability guarantees can be found in the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/VERSIONING.md"&gt;versioning documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Compatibility&lt;/h3&gt; 
&lt;p&gt;OpenTelemetry-Go ensures compatibility with the current supported versions of the &lt;a href="https://golang.org/doc/devel/release#policy"&gt;Go language&lt;/a&gt;:&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Each major Go release is supported until there are two newer major releases. For example, Go 1.5 was supported until the Go 1.7 release, and Go 1.6 was supported until the Go 1.8 release.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;For versions of Go that are no longer supported upstream, opentelemetry-go will stop ensuring compatibility with these versions in the following manner:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;A minor release of opentelemetry-go will be made to add support for the new supported release of Go.&lt;/li&gt; 
 &lt;li&gt;The following minor release of opentelemetry-go will remove compatibility testing for the oldest (now archived upstream) version of Go. This, and future, releases of opentelemetry-go may include features only supported by the currently supported versions of Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Currently, this project supports the following environments.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;OS&lt;/th&gt; 
   &lt;th&gt;Go Version&lt;/th&gt; 
   &lt;th&gt;Architecture&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Ubuntu&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS 13&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;macOS&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;arm64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;amd64&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.25&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;Windows&lt;/td&gt; 
   &lt;td&gt;1.24&lt;/td&gt; 
   &lt;td&gt;386&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;While this project should work for other systems, no compatibility guarantees are made for those systems currently.&lt;/p&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;You can find a getting started guide on &lt;a href="https://opentelemetry.io/docs/languages/go/getting-started/"&gt;opentelemetry.io&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;OpenTelemetry's goal is to provide a single set of APIs to capture distributed traces and metrics from your application and send them to an observability platform. This project allows you to do just that for applications written in Go. There are two steps to this process: instrument your application, and configure an exporter.&lt;/p&gt; 
&lt;h3&gt;Instrumentation&lt;/h3&gt; 
&lt;p&gt;To start capturing distributed traces and metric events from your application it first needs to be instrumented. The easiest way to do this is by using an instrumentation library for your code. Be sure to check out &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/instrumentation"&gt;the officially supported instrumentation libraries&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;If you need to extend the telemetry an instrumentation library provides or want to build your own instrumentation for your application directly you will need to use the &lt;a href="https://pkg.go.dev/go.opentelemetry.io/otel"&gt;Go otel&lt;/a&gt; package. The &lt;a href="https://github.com/open-telemetry/opentelemetry-go-contrib/tree/main/examples"&gt;examples&lt;/a&gt; are a good way to see some practical uses of this process.&lt;/p&gt; 
&lt;h3&gt;Export&lt;/h3&gt; 
&lt;p&gt;Now that your application is instrumented to collect telemetry, it needs an export pipeline to send that telemetry to an observability platform.&lt;/p&gt; 
&lt;p&gt;All officially supported exporters for the OpenTelemetry project are contained in the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters"&gt;exporters directory&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Exporter&lt;/th&gt; 
   &lt;th align="center"&gt;Logs&lt;/th&gt; 
   &lt;th align="center"&gt;Metrics&lt;/th&gt; 
   &lt;th align="center"&gt;Traces&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/otlp/"&gt;OTLP&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/prometheus/"&gt;Prometheus&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/stdout/"&gt;stdout&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/exporters/zipkin/"&gt;Zipkin&lt;/a&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;&lt;/td&gt; 
   &lt;td align="center"&gt;✓&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-go/main/CONTRIBUTING.md"&gt;contributing documentation&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>open-telemetry/opentelemetry-collector</title>
      <link>https://github.com/open-telemetry/opentelemetry-collector</link>
      <description>&lt;p&gt;OpenTelemetry Collector&lt;/p&gt;&lt;hr&gt;&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://opentelemetry.io/docs/collector/getting-started/"&gt;Getting Started&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Getting Involved&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;Getting In Touch&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/actions/workflows/build-and-test.yml?query=branch%3Amain"&gt; &lt;img alt="Build Status" src="https://img.shields.io/github/actions/workflow/status/open-telemetry/opentelemetry-collector/build-and-test.yml?branch=main&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/open-telemetry/opentelemetry-collector"&gt; &lt;img alt="Go Report Card" src="https://goreportcard.com/badge/github.com/open-telemetry/opentelemetry-collector?style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://codecov.io/gh/open-telemetry/opentelemetry-collector/branch/main/"&gt; &lt;img alt="Codecov Status" src="https://img.shields.io/codecov/c/github/open-telemetry/opentelemetry-collector?style=for-the-badge" /&gt; &lt;/a&gt; &lt;a href="https://github.com/open-telemetry/opentelemetry-collector/releases"&gt; &lt;img alt="GitHub release (latest by date including pre-releases)" src="https://img.shields.io/github/v/release/open-telemetry/opentelemetry-collector?include_prereleases&amp;amp;style=for-the-badge" /&gt; &lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.bestpractices.dev/projects/8404"&gt;&lt;img src="https://www.bestpractices.dev/projects/8404/badge" /&gt; &lt;/a&gt; &lt;a href="https://bugs.chromium.org/p/oss-fuzz/issues/list?sort=-opened&amp;amp;can=1&amp;amp;q=proj:opentelemetry"&gt; &lt;img alt="Fuzzing Status" src="https://oss-fuzz-build-logs.storage.googleapis.com/badges/opentelemetry.svg?sanitize=true" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;strong&gt; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/vision.md"&gt;Vision&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/configuration/"&gt;Configuration&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://opentelemetry.io/docs/collector/internal-telemetry/#use-internal-telemetry-to-monitor-the-collector"&gt;Monitoring&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/security-best-practices.md"&gt;Security&lt;/a&gt; &amp;nbsp;&amp;nbsp;•&amp;nbsp;&amp;nbsp; &lt;a href="https://pkg.go.dev/go.opentelemetry.io/collector"&gt;Package&lt;/a&gt; &lt;/strong&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h1&gt;&lt;img src="https://opentelemetry.io/img/logos/opentelemetry-logo-nav.png" alt="OpenTelemetry Icon" width="45" height="" /&gt; OpenTelemetry Collector&lt;/h1&gt; 
&lt;p&gt;The OpenTelemetry Collector offers a vendor-agnostic implementation on how to receive, process and export telemetry data. In addition, it removes the need to run, operate and maintain multiple agents/collectors in order to support open-source telemetry data formats (e.g. Jaeger, Prometheus, etc.) to multiple open-source or commercial back-ends.&lt;/p&gt; 
&lt;p&gt;Objectives:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Usable: Reasonable default configuration, supports popular protocols, runs and collects out of the box.&lt;/li&gt; 
 &lt;li&gt;Performant: Highly stable and performant under varying loads and configurations.&lt;/li&gt; 
 &lt;li&gt;Observable: An exemplar of an observable service.&lt;/li&gt; 
 &lt;li&gt;Extensible: Customizable without touching the core code.&lt;/li&gt; 
 &lt;li&gt;Unified: Single codebase, deployable as an agent or collector with support for traces, metrics and logs.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The OpenTelemetry Collector SIG is present at the &lt;a href="https://cloud-native.slack.com/archives/C01N6P7KR6W"&gt;#otel-collector&lt;/a&gt; channel on the CNCF Slack and &lt;a href="https://github.com/open-telemetry/community#implementation-sigs"&gt;meets once a week&lt;/a&gt; via video calls. Everyone is invited to join those calls, which typically serves the following purposes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;meet the humans behind the project&lt;/li&gt; 
 &lt;li&gt;get an opinion about specific proposals&lt;/li&gt; 
 &lt;li&gt;look for a sponsor for a proposed component after trying already via GitHub and Slack&lt;/li&gt; 
 &lt;li&gt;get attention to a specific pull-request that got stuck and is difficult to discuss asynchronously&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;We rotate our video calls between three time slots, in order to allow everyone to join at least once every three meetings. The rotation order is as follows:&lt;/p&gt; 
&lt;p&gt;Tuesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=1700"&gt;17:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Wednesday:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0900"&gt;09:00 PT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dateful.com/convert/pst-pdt-pacific-time?t=0500"&gt;05:00 PT&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Contributors to the project are also welcome to have ad-hoc meetings for synchronous discussions about specific points. Post a note in #otel-collector-dev on Slack inviting others, specifying the topic to be discussed. Unless there are strong reasons to keep the meeting private, please make it an open invitation for other contributors to join. Try also to identify who would be the other contributors interested on that topic and in which timezones they are.&lt;/p&gt; 
&lt;p&gt;Remember that our source of truth is GitHub: every decision made via Slack or video calls has to be recorded in the relevant GitHub issue. Ideally, the agenda items from the meeting notes would include a link to the issue or pull request where a discussion is happening already. We acknowledge that not everyone can join Slack or the synchronous calls and don't want them to feel excluded.&lt;/p&gt; 
&lt;h2&gt;Supported OTLP version&lt;/h2&gt; 
&lt;p&gt;This code base is currently built against using OTLP protocol v1.5.0, considered Stable. &lt;a href="https://github.com/open-telemetry/opentelemetry-proto?tab=readme-ov-file#stability-definition"&gt;See the OpenTelemetry Protocol Stability definition here.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Stability levels&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/component-stability.md"&gt;Stability Levels and versioning&lt;/a&gt; for more details.&lt;/p&gt; 
&lt;h2&gt;Compatibility&lt;/h2&gt; 
&lt;p&gt;When used as a library, the OpenTelemetry Collector attempts to track the currently supported versions of Go, as &lt;a href="https://go.dev/doc/devel/release#policy"&gt;defined by the Go team&lt;/a&gt;. Removing support for an unsupported Go version is not considered a breaking change.&lt;/p&gt; 
&lt;p&gt;Support for Go versions on the OpenTelemetry Collector is updated as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will add build and tests steps for the new Go minor version.&lt;/li&gt; 
 &lt;li&gt;The first release after the release of a new Go minor version &lt;code&gt;N&lt;/code&gt; will remove support for Go version &lt;code&gt;N-2&lt;/code&gt;.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;Official OpenTelemetry Collector distro binaries will be built with a release in the latest Go minor version series.&lt;/p&gt; 
&lt;h2&gt;Verifying the images signatures&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] To verify a signed artifact or blob, first &lt;a href="https://docs.sigstore.dev/cosign/system_config/installation/"&gt;install Cosign&lt;/a&gt;, then follow the instructions below.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;We are signing the images &lt;code&gt;otel/opentelemetry-collector&lt;/code&gt; and &lt;code&gt;otel/opentelemetry-collector-contrib&lt;/code&gt; using &lt;a href="https://github.com/sigstore/cosign"&gt;sigstore cosign&lt;/a&gt; tool and to verify the signatures you can run the following command:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify \
  --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/&amp;lt;RELEASE_TAG&amp;gt; \
  --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
  &amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;where:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;RELEASE_TAG&amp;gt;&lt;/code&gt;: is the release that you want to validate&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;&amp;lt;OTEL_COLLECTOR_IMAGE&amp;gt;&lt;/code&gt;: is the image that you want to check&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ cosign verify --certificate-identity=https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0 --certificate-oidc-issuer=https://token.actions.githubusercontent.com ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0

Verification for ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.98.0 --
The following checks were performed on each of these signatures:
  - The cosign claims were validated
  - Existence of the claims in the transparency log was verified offline
  - The code-signing certificate was verified using trusted certificate authority certificates

[{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQDdlmNeKXQrHnonwWiHLhLLwFDVDNoOBCn2sv85J9P8mgIgDQFssWJImo1hn38VlojvSCL7Qq5FMmtnGu0oLsNdOm8=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FVUNJUURFbDV6N0diMWRVYkM5KzR4c1VvbDhMcWZNV2hiTzhkdEpwdExyMXhUNWZnSWdTdEwwN1I0ZDA5R2x0ZkV0azJVbmlJSlJhQVdrVDJNWDVtRXJNSlplc2pRPSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaG9ha05EUW5jeVowRjNTVUpCWjBsVlNETkNjRFZTYlVSU1VpOXphMWg0YVdWUFlrcFhSbmRrUjNNNGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJOTlZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkUwMVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVZyWlRsSE1ubHNjMjkzYVZZMmRFOVZSazlRVVhNd2NXY3hTSEV5WmpsVUx6UTJZbEFLU1ZSNE0ybFRkVXBhV0hGc1dEUldWV2Q1VlZndmNVazJhblZ2WlZSVEswaG5XVUoyYjBseVNERTFUeTltZEd0VmVtRlBRMEpwZDNkbloxbHZUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZHTkRrMUNrdDFNRWhqTm5rek1rNUNTVTFFU21ReVpuWkxNMHBCZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwWjFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpoQ1NHOUJaVUZDTWtGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUlVOUlFVRkJVVVJCUldOM1VsRkpaMWg2Y2xaME0xQjRkU3ROWVZKRkswUkdORzlGUldNMGVucHphSGR1VDJ4bGMwZGlla2xwYnpNS0wxWmpRMGxSUkZNelJ6QmlNemRhYUhRNGFITjJUSEozYkc1UFFXYzJWRXh1U1ZSS09HTjNkMVEzTW5sMVRVdFlUbFJCUzBKblozRm9hMnBQVUZGUlJBcEJkMDV1UVVSQ2EwRnFRWGxFUkZSYVFqQlRPVXBGYkZsSGJuTnZWVmhLYm04MU5Fc3ZUVUZUTlN0RFFVMU9lbWRqUWpWQ2JrRk5OMWhNUjBoV01HRnhDbVpaY21weFkyOXFia3RaUTAxSFRWRnFjalpUVGt0Q2NVaEtZVGwxTDBSTlQySlpNa0pKTVV0ME4yTnhOemhFT0VOcVMzQmFVblJoYnpadFVVMUVZMk1LUms5M2VYWnhWalJPVld0dlpsRTlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809120,"logIndex":84797936,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}},{"critical":{"identity":{"docker-reference":"ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib"},"image":{"docker-manifest-digest":"sha256:5cea85bcbc734a3c0a641368e5a4ea9d31b472997e9f2feca57eeb4a147fcf1a"},"type":"cosign container image signature"},"optional":{"1.3.6.1.4.1.57264.1.1":"https://token.actions.githubusercontent.com","1.3.6.1.4.1.57264.1.2":"push","1.3.6.1.4.1.57264.1.3":"9e20bf5c142e53070ccb8320a20315fffb41469e","1.3.6.1.4.1.57264.1.4":"Release Contrib","1.3.6.1.4.1.57264.1.5":"open-telemetry/opentelemetry-collector-releases","1.3.6.1.4.1.57264.1.6":"refs/tags/v0.98.0","Bundle":{"SignedEntryTimestamp":"MEUCIQD1ehDnPO6fzoPIpeQ3KFuYHHBiX7RcEbpo9B2r7JAlzwIgZ1bsuQz7gAXbNU1IEdsTQgfAnRk3xVXO16GnKXM2sAQ=","Payload":{"body":"eyJhcGlWZXJzaW9uIjoiMC4wLjEiLCJraW5kIjoiaGFzaGVkcmVrb3JkIiwic3BlYyI6eyJkYXRhIjp7Imhhc2giOnsiYWxnb3JpdGhtIjoic2hhMjU2IiwidmFsdWUiOiIxMzVjY2RlN2YzZTNhYjU2NmFmYzJhYWU3MDljYmJlNmFhMDZlZWMzNDA2MWNkZjMyNmRhYzM2MmY0NWM4Yjg4In19LCJzaWduYXR1cmUiOnsiY29udGVudCI6Ik1FUUNJRU92QXl0aE5RVGNvNHFMdG9GZUVOV0toNCtEK2I5SUxyYWhoa09WMmVBM0FpQjNEL2FpUGd1T05zUlB5alhaWk1hdnlCam0vMkVxNFNUMkZJWHozTnpyYWc9PSIsInB1YmxpY0tleSI6eyJjb250ZW50IjoiTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVaHBSRU5EUW5jMlowRjNTVUpCWjBsVlZuRlRLMnd4WXpoMWVFUktOWEppZDAxMlVuaDBSR3hXVW1nMGQwTm5XVWxMYjFwSmVtb3dSVUYzVFhjS1RucEZWazFDVFVkQk1WVkZRMmhOVFdNeWJHNWpNMUoyWTIxVmRWcEhWakpOVWpSM1NFRlpSRlpSVVVSRmVGWjZZVmRrZW1SSE9YbGFVekZ3WW01U2JBcGpiVEZzV2tkc2FHUkhWWGRJYUdOT1RXcFJkMDVFUlhoTlJGRjRUMFJSZVZkb1kwNU5hbEYzVGtSRmVFMUVVWGxQUkZGNVYycEJRVTFHYTNkRmQxbElDa3R2V2tsNmFqQkRRVkZaU1V0dldrbDZhakJFUVZGalJGRm5RVVYyWlRCdGJrRkdRVzl1TVZoUGRIVlRMMXBNT0djeE5YUlJkVmxPTmtRemVUUlBWM0FLT1ZSTFMwUlVkRkJHU2xST1ZrWlJkVTlKUWs1bVJqWk1ORTlGYkd4dlZuUndaSE5uYjB0NVZGTnlPR3hTV1c1S1JIRlBRMEpwTUhkbloxbHdUVUUwUndwQk1WVmtSSGRGUWk5M1VVVkJkMGxJWjBSQlZFSm5UbFpJVTFWRlJFUkJTMEpuWjNKQ1owVkdRbEZqUkVGNlFXUkNaMDVXU0ZFMFJVWm5VVlZDSzFkSENuVmtlRE5IZUcxS1RWUkpUVVJyYW13clJtdzFXRzkzZDBoM1dVUldVakJxUWtKbmQwWnZRVlV6T1ZCd2VqRlphMFZhWWpWeFRtcHdTMFpYYVhocE5Ga0tXa1E0ZDJkWldVZEJNVlZrUlZGRlFpOTNVamhOU0hGSFpVZG9NR1JJUW5wUGFUaDJXakpzTUdGSVZtbE1iVTUyWWxNNWRtTkhWblZNV0ZKc1lrZFdkQXBhV0ZKNVpWTTVkbU5IVm5Wa1IxWnpXbGN4YkdSSVNqVk1WMDUyWWtkNGJGa3pVblpqYVRGNVdsZDRiRmxZVG14amVUaDFXakpzTUdGSVZtbE1NMlIyQ21OdGRHMWlSemt6WTNrNWFWbFlUbXhNV0Vwc1lrZFdhR015VlhWbFYwWjBZa1ZDZVZwWFducE1NMUpvV2pOTmRtUnFRWFZQVkdkMVRVUkJOVUpuYjNJS1FtZEZSVUZaVHk5TlFVVkNRa04wYjJSSVVuZGplbTkyVEROU2RtRXlWblZNYlVacVpFZHNkbUp1VFhWYU1td3dZVWhXYVdSWVRteGpiVTUyWW01U2JBcGlibEYxV1RJNWRFMUNTVWREYVhOSFFWRlJRbWMzT0hkQlVVbEZRa2hDTVdNeVozZE9aMWxMUzNkWlFrSkJSMFIyZWtGQ1FYZFJiMDlYVlhsTlIwcHRDazVYVFhoT1JFcHNUbFJOZDA1NlFtcFpNa2swVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCWkVKbmIzSkNaMFZGUVZsUEwwMUJSVVVLUWtFNVUxcFhlR3haV0U1c1NVVk9kbUp1VW5saFYwbDNVRkZaUzB0M1dVSkNRVWRFZG5wQlFrSlJVWFppTTBKc1lta3hNRnBYZUd4aVYxWXdZMjVyZGdwaU0wSnNZbTVTYkdKSFZuUmFXRko1WlZNeGFtSXllSE5hVjA0d1lqTkpkR050Vm5OYVYwWjZXbGhOZDBoM1dVdExkMWxDUWtGSFJIWjZRVUpDWjFGU0NtTnRWbTFqZVRrd1dWZGtla3d6V1hkTWFtczBUR3BCZDA5M1dVdExkMWxDUWtGSFJIWjZRVUpEUVZGMFJFTjBiMlJJVW5kamVtOTJURE5TZG1FeVZuVUtURzFHYW1SSGJIWmliazExV2pKc01HRklWbWxrV0U1c1kyMU9kbUp1VW14aWJsRjFXVEk1ZEUxSlIwbENaMjl5UW1kRlJVRlpUeTlOUVVWS1FraHZUUXBsUjJnd1pFaENlazlwT0haYU1td3dZVWhXYVV4dFRuWmlVemwyWTBkV2RVeFlVbXhpUjFaMFdsaFNlV1ZUT1haalIxWjFaRWRXYzFwWE1XeGtTRW8xQ2t4WFRuWmlSM2hzV1ROU2RtTnBNWGxhVjNoc1dWaE9iR041T0hWYU1td3dZVWhXYVV3elpIWmpiWFJ0WWtjNU0yTjVPV2xaV0U1c1RGaEtiR0pIVm1nS1l6SlZkV1ZYUm5SaVJVSjVXbGRhZWt3elVtaGFNMDEyWkdwQmRVOVVaM1ZOUkVFMFFtZHZja0puUlVWQldVOHZUVUZGUzBKRGIwMUxSR3hzVFdwQ2FRcGFhbFpxVFZSUmVWcFVWWHBOUkdOM1dUSk9hVTlFVFhsTlIwVjVUVVJOZUU1WFdtMWFiVWt3VFZSUk1rOVhWWGRJVVZsTFMzZFpRa0pCUjBSMmVrRkNDa04zVVZCRVFURnVZVmhTYjJSWFNYUmhSemw2WkVkV2EwMUdTVWREYVhOSFFWRlJRbWMzT0hkQlVYZEZVa0Y0UTJGSVVqQmpTRTAyVEhrNWJtRllVbThLWkZkSmRWa3lPWFJNTWpsM1dsYzBkR1JIVm5OYVZ6RnNaRWhLTlV3eU9YZGFWelV3V2xkNGJHSlhWakJqYm10MFdUSTVjMkpIVm1wa1J6bDVURmhLYkFwaVIxWm9ZekpXZWsxRVowZERhWE5IUVZGUlFtYzNPSGRCVVRCRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFJOZWtsM0NsbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCYUVKbmIzSkNaMFZGUVZsUEwwMUJSVTlDUWsxTlJWaEtiRnB1VFhaa1IwWnVZM2s1TWsxRE5EVUtUME0wZDAxQ2EwZERhWE5IUVZGUlFtYzNPSGRCVVRoRlEzZDNTazVFUVhkTmFsVjZUbXBqTWsxRVJVZERhWE5IUVZGUlFtYzNPSGRCVWtGRlNYZDNhQXBoU0ZJd1kwaE5Oa3g1T1c1aFdGSnZaRmRKZFZreU9YUk1NamwzV2xjMGRHUkhWbk5hVnpGc1pFaEtOVTFDWjBkRGFYTkhRVkZSUW1jM09IZEJVa1ZGQ2tObmQwbE9SR3MxVDFSbmQwMUVTWGRuV1hOSFEybHpSMEZSVVVKbk56aDNRVkpKUldaUmVEZGhTRkl3WTBoTk5reDVPVzVoV0ZKdlpGZEpkVmt5T1hRS1RESTVkMXBYTkhSa1IxWnpXbGN4YkdSSVNqVk1NamwzV2xjMU1GcFhlR3hpVjFZd1kyNXJkRmt5T1hOaVIxWnFaRWM1ZVV4WVNteGlSMVpvWXpKV2VncE1lVFZ1WVZoU2IyUlhTWFprTWpsNVlUSmFjMkl6WkhwTU0wcHNZa2RXYUdNeVZYUlpNamwxWkVoS2NGbHBOVFZaVnpGelVVaEtiRnB1VFhaa1IwWnVDbU41T1RKTlF6UTFUME0wZDAxRVowZERhWE5IUVZGUlFtYzNPSGRCVWsxRlMyZDNiMDlYVlhsTlIwcHRUbGROZUU1RVNteE9WRTEzVG5wQ2Fsa3lTVFFLVFhwSmQxbFVTWGROZWtVeFdtMWFiVmxxVVhoT1JGazFXbFJCVlVKbmIzSkNaMFZGUVZsUEwwMUJSVlZDUVZsTlFraENNV015WjNka1VWbExTM2RaUWdwQ1FVZEVkbnBCUWtaUlVtNUVSMVp2WkVoU2QyTjZiM1pNTW1Sd1pFZG9NVmxwTldwaU1qQjJZak5DYkdKcE1UQmFWM2hzWWxkV01HTnVhM1ppTTBKc0NtSnVVbXhpUjFaMFdsaFNlV1ZUTVdwaU1uaHpXbGRPTUdJelNYUmpiVlp6V2xkR2VscFlUWFpaVjA0d1lWYzVkV041T1hsa1Z6VjZUSHBuTWs1RVJYZ0tUbnBGTVU1cVkzWlpXRkl3V2xjeGQyUklUWFpOYWtGWFFtZHZja0puUlVWQldVOHZUVUZGVjBKQlowMUNia0l4V1cxNGNGbDZRMEpwZDFsTFMzZFpRZ3BDUVVoWFpWRkpSVUZuVWpsQ1NITkJaVkZDTTBGT01EbE5SM0pIZUhoRmVWbDRhMlZJU214dVRuZExhVk5zTmpRemFubDBMelJsUzJOdlFYWkxaVFpQQ2tGQlFVSnFjM1JvUjJKSlFVRkJVVVJCUldkM1VtZEphRUZQZUZNM2RteDRjVzVGYTBKVVRtSlZVRUpsUkZSbk0waGtlRlkyY0cxWk9FdGliREV6TjNBS1lWUnViMEZwUlVFelMyMUxVbU5uYWxBeVQzSmxORVpyVm5vNU4xaENNWGRsUzBOeWFXazFTMWx2UTB0bVkxRktSREJSZDBObldVbExiMXBKZW1vd1JRcEJkMDFFWVVGQmQxcFJTWGhCUzNwcVpHMUZTV2gzV21Kb1lVSlNlalk1Y1N0MWVrNVZSMmxhYlRWVk4xcE5aWFJMUTFSM1VFTkljRkZQVldvdlVERkJDa2R0YWt3elJucFFObTVpYkRGblNYZFNUbXN6UkhkNWMwOUJUMHhoUVVoR09IaHhZV0ZzT0U5WGNGRmFhRGh4TTJVMVNVSmFXR0ZWVkhocFlWbGFTM29LUXpWS1RGVlNWbnBMTURsd04wVjBUd290TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09In19fX0=","integratedTime":1712809122,"logIndex":84797940,"logID":"c0d23d6ad406973f9559f3ba2d1ca01f84147d8ffc5b8445c224f98b9591801d"}},"Issuer":"https://token.actions.githubusercontent.com","Subject":"https://github.com/open-telemetry/opentelemetry-collector-releases/.github/workflows/base-release.yaml@refs/tags/v0.98.0","githubWorkflowName":"Release Contrib","githubWorkflowRef":"refs/tags/v0.98.0","githubWorkflowRepository":"open-telemetry/opentelemetry-collector-releases","githubWorkflowSha":"9e20bf5c142e53070ccb8320a20315fffb41469e","githubWorkflowTrigger":"push"}}]
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We started signing the images with release &lt;code&gt;v0.95.0&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/CONTRIBUTING.md"&gt;Contributing Guide&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;Here is a list of community roles with current and previous members:&lt;/p&gt; 
&lt;h3&gt;Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/codeboten"&gt;Alex Boten&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bogdandrutu"&gt;Bogdan Drutu&lt;/a&gt;, Snowflake&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmitryax"&gt;Dmitrii Anoshin&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mx-psi"&gt;Pablo Baeyens&lt;/a&gt;, DataDog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the maintainer role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#maintainer"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/atoulme"&gt;Antoine Toulme&lt;/a&gt;, Splunk&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dmathieu"&gt;Damien Mathieu&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/evan-bradley"&gt;Evan Bradley&lt;/a&gt;, Dynatrace&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jade-guiton-dd"&gt;Jade Guiton&lt;/a&gt;, Datadog&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jmacd"&gt;Joshua MacDonald&lt;/a&gt;, Microsoft&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TylerHelmuth"&gt;Tyler Helmuth&lt;/a&gt;, Honeycomb&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/songy23"&gt;Yang Song&lt;/a&gt;, Datadog&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the approver role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#approver"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In addition to what is described at the organization-level, the SIG Collector requires all core approvers to take part in rotating the role of the &lt;a href="https://raw.githubusercontent.com/open-telemetry/opentelemetry-collector/main/docs/release.md#release-manager"&gt;release manager&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrzej-stencel"&gt;Andrzej Stencel&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sincejune"&gt;Chao Weng&lt;/a&gt;, AppDynamics&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/VihasMakwana"&gt;Vihas Makwana&lt;/a&gt;, Elastic&lt;/li&gt; 
 &lt;li&gt;Actively seeking contributors to triage issues&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the triager role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#triager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Maintainers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pjanotti"&gt;Paulo Janotti&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tigrannajaryan"&gt;Tigran Najaryan&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Approvers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aneurysm9"&gt;Anthony Mirabella&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/djaglowski"&gt;Daniel Jaglowski&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/james-bebbington"&gt;James Bebbington&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jrcamp"&gt;Jay Camp&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jpkrohling"&gt;Juraci Paixão Kröhling&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nilebox"&gt;Nail Islamov&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owais"&gt;Owais Lone&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rghetia"&gt;Rahul Patel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sjkaris"&gt;Steven Karis&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Emeritus Triagers&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alolita"&gt;Alolita Sharma&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/andrewhsu"&gt;Andrew Hsu&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/punya"&gt;Punya Biswal&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/flands"&gt;Steve Flanders&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For more information about the emeritus role, see the &lt;a href="https://github.com/open-telemetry/community/raw/main/guides/contributor/membership.md#emeritus-maintainerapprovertriager"&gt;community repository&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Thanks to all of our contributors!&lt;/h3&gt; 
&lt;a href="https://github.com/open-telemetry/opentelemetry-collector/graphs/contributors"&gt; &lt;img alt="Repo contributors" src="https://contrib.rocks/image?repo=open-telemetry/opentelemetry-collector" /&gt; &lt;/a&gt;</description>
    </item>
    
    <item>
      <title>containers/skopeo</title>
      <link>https://github.com/containers/skopeo</link>
      <description>&lt;p&gt;Work with remote images registries - retrieving information, images, signing content&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://cdn.rawgit.com/containers/skopeo/main/docs/skopeo.svg?sanitize=true" width="250" alt="Skopeo" /&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/License-Apache_2.0-blue.svg?sanitize=true" alt="License" /&gt; &lt;img src="https://img.shields.io/github/v/release/containers/skopeo" alt="GitHub release (latest SemVer)" /&gt; &lt;a href="https://goreportcard.com/report/github.com/containers/skopeo"&gt;&lt;img src="https://goreportcard.com/badge/github.com/containers/skopeo" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://www.bestpractices.dev/projects/10516"&gt;&lt;img src="https://www.bestpractices.dev/projects/10516/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; is a command line utility that performs various operations on container images and image repositories.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; does not require the user to be running as root to do most of its operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; does not require a daemon to be running to perform its operations.&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; can work with &lt;a href="https://github.com/opencontainers/image-spec"&gt;OCI images&lt;/a&gt; as well as the original Docker v2 images.&lt;/p&gt; 
&lt;p&gt;Skopeo works with API V2 container image registries such as &lt;a href="https://docker.io"&gt;docker.io&lt;/a&gt; and &lt;a href="https://quay.io"&gt;quay.io&lt;/a&gt; registries, private registries, local directories and local OCI-layout directories. Skopeo can perform operations which consist of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Copying an image from and to various storage mechanisms. For example you can copy images from one registry to another, without requiring privilege.&lt;/li&gt; 
 &lt;li&gt;Inspecting a remote image showing its properties including its layers, without requiring you to pull the image to the host.&lt;/li&gt; 
 &lt;li&gt;Deleting an image from an image repository.&lt;/li&gt; 
 &lt;li&gt;Syncing an external image repository to an internal registry for air-gapped deployments.&lt;/li&gt; 
 &lt;li&gt;When required by the repository, skopeo can pass the appropriate credentials and certificates for authentication.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Skopeo operates on the following image and repository types:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;containers-storage:docker-reference An image located in a local containers/storage image store. Both the location and image store are specified in /etc/containers/storage.conf. (This is the backend for &lt;a href="https://podman.io"&gt;Podman&lt;/a&gt;, &lt;a href="https://cri-o.io"&gt;CRI-O&lt;/a&gt;, &lt;a href="https://buildah.io"&gt;Buildah&lt;/a&gt; and friends)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;dir:path An existing local directory path storing the manifest, layer tarballs and signatures as individual files. This is a non-standardized format, primarily useful for debugging or noninvasive container inspection.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;docker://docker-reference An image in a registry implementing the "Docker Registry HTTP API V2". By default, uses the authorization state in &lt;code&gt;$XDG_RUNTIME_DIR/containers/auth.json&lt;/code&gt;, which is set using &lt;code&gt;skopeo login&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;docker-archive:path[:docker-reference] An image is stored in a &lt;code&gt;docker save&lt;/code&gt;-formatted file. docker-reference is only used when creating such a file, and it must not contain a digest.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;docker-daemon:docker-reference An image docker-reference stored in the docker daemon internal storage. docker-reference must contain either a tag or a digest. Alternatively, when reading images, the format can also be docker-daemon:algo:digest (an image ID).&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;oci:path:tag An image tag in a directory compliant with "Open Container Image Layout Specification" at path.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/install.md"&gt;Obtaining skopeo&lt;/a&gt;&lt;/h2&gt; 
&lt;p&gt;For a detailed description how to install or build skopeo, see &lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/install.md"&gt;install.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Skopeo is also available as a Container Image on &lt;a href="https://quay.io/skopeo/stable"&gt;quay.io&lt;/a&gt;. For more information, see the &lt;a href="https://github.com/containers/image_build/raw/main/skopeo/README.md"&gt;Skopeo Image&lt;/a&gt; page.&lt;/p&gt; 
&lt;h2&gt;Inspecting a repository&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; is able to &lt;em&gt;inspect&lt;/em&gt; a repository on a container registry and fetch images layers. The &lt;em&gt;inspect&lt;/em&gt; command fetches the repository's manifest and it is able to show you a &lt;code&gt;docker inspect&lt;/code&gt;-like json output about a whole repository or a tag. This tool, in contrast to &lt;code&gt;docker inspect&lt;/code&gt;, helps you gather useful information about a repository or a tag before pulling it (using disk space). The inspect command can show you which tags are available for the given repository, the labels the image has, the creation date and operating system of the image and more.&lt;/p&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;h4&gt;Show properties of fedora:latest&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo inspect docker://registry.fedoraproject.org/fedora:latest
{
    "Name": "registry.fedoraproject.org/fedora",
    "Digest": "sha256:0f65bee641e821f8118acafb44c2f8fe30c2fc6b9a2b3729c0660376391aa117",
    "RepoTags": [
        "34-aarch64",
        "34",
        "latest",
        ...
    ],
    "Created": "2022-11-24T13:54:18Z",
    "DockerVersion": "1.10.1",
    "Labels": {
        "license": "MIT",
        "name": "fedora",
        "vendor": "Fedora Project",
        "version": "37"
    },
    "Architecture": "amd64",
    "Os": "linux",
    "Layers": [
        "sha256:2a0fc6bf62e155737f0ace6142ee686f3c471c1aab4241dc3128904db46288f0"
    ],
    "LayersData": [
        {
            "MIMEType": "application/vnd.docker.image.rootfs.diff.tar.gzip",
            "Digest": "sha256:2a0fc6bf62e155737f0ace6142ee686f3c471c1aab4241dc3128904db46288f0",
            "Size": 71355009,
            "Annotations": null
        }
    ],
    "Env": [
        "DISTTAG=f37container",
        "FGC=f37",
        "container=oci"
    ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Show container configuration from &lt;code&gt;fedora:latest&lt;/code&gt;&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo inspect --config docker://registry.fedoraproject.org/fedora:latest  | jq
{
  "created": "2020-04-29T06:48:16Z",
  "architecture": "amd64",
  "os": "linux",
  "config": {
    "Env": [
      "DISTTAG=f32container",
      "FGC=f32",
      "container=oci"
    ],
    "Cmd": [
      "/bin/bash"
    ],
    "Labels": {
      "license": "MIT",
      "name": "fedora",
      "vendor": "Fedora Project",
      "version": "32"
    }
  },
  "rootfs": {
    "type": "layers",
    "diff_ids": [
      "sha256:a4c0fa2b217d3fd63d51e55a6fd59432e543d499c0df2b1acd48fbe424f2ddd1"
    ]
  },
  "history": [
    {
      "created": "2020-04-29T06:48:16Z",
      "comment": "Created by Image Factory"
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Show unverified image's digest&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo inspect docker://registry.fedoraproject.org/fedora:latest | jq '.Digest'
"sha256:655721ff613ee766a4126cb5e0d5ae81598e1b0c3bcf7017c36c4d72cb092fe9"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Copying images&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;skopeo&lt;/code&gt; can copy container images between various storage mechanisms, including:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;Container registries&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The Quay, Docker Hub, OpenShift, GCR, Artifactory ...&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Container Storage backends&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; &lt;p&gt;&lt;a href="https://github.com/containers/storage"&gt;github.com/containers/storage&lt;/a&gt; (Backend for &lt;a href="https://podman.io"&gt;Podman&lt;/a&gt;, &lt;a href="https://cri-o.io"&gt;CRI-O&lt;/a&gt;, &lt;a href="https://buildah.io"&gt;Buildah&lt;/a&gt; and friends)&lt;/p&gt; &lt;/li&gt; 
   &lt;li&gt; &lt;p&gt;Docker daemon storage&lt;/p&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Local directories&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Local OCI-layout directories&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo copy docker://quay.io/buildah/stable docker://registry.internal.company.com/buildah
$ skopeo copy oci:busybox_ocilayout:latest dir:existingemptydirectory
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Deleting images&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo delete docker://localhost:5000/imagename:latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Syncing registries&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo sync --src docker --dest dir registry.example.com/busybox /media/usb
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Authenticating to a registry&lt;/h2&gt; 
&lt;h4&gt;Private registries with authentication&lt;/h4&gt; 
&lt;p&gt;skopeo uses credentials from the --creds (for skopeo inspect|delete) or --src-creds|--dest-creds (for skopeo copy) flags, if set; otherwise it uses configuration set by skopeo login, podman login, buildah login, or docker login.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo login --username USER myregistrydomain.com:5000
Password:
$ skopeo inspect docker://myregistrydomain.com:5000/busybox
{"Tag":"latest","Digest":"sha256:473bb2189d7b913ed7187a33d11e743fdc2f88931122a44d91a301b64419f092","RepoTags":["latest"],"Comment":"","Created":"2016-01-15T18:06:41.282540103Z","ContainerConfig":{"Hostname":"aded96b43f48","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":null,"Cmd":["/bin/sh","-c","#(nop) CMD [\"sh\"]"],"Image":"9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":null},"DockerVersion":"1.8.3","Author":"","Config":{"Hostname":"aded96b43f48","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":null,"Cmd":["sh"],"Image":"9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":null},"Architecture":"amd64","Os":"linux"}
$ skopeo logout myregistrydomain.com:5000
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Using --creds directly&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo inspect --creds=testuser:testpassword docker://myregistrydomain.com:5000/busybox
{"Tag":"latest","Digest":"sha256:473bb2189d7b913ed7187a33d11e743fdc2f88931122a44d91a301b64419f092","RepoTags":["latest"],"Comment":"","Created":"2016-01-15T18:06:41.282540103Z","ContainerConfig":{"Hostname":"aded96b43f48","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":null,"Cmd":["/bin/sh","-c","#(nop) CMD [\"sh\"]"],"Image":"9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":null},"DockerVersion":"1.8.3","Author":"","Config":{"Hostname":"aded96b43f48","Domainname":"","User":"","AttachStdin":false,"AttachStdout":false,"AttachStderr":false,"Tty":false,"OpenStdin":false,"StdinOnce":false,"Env":null,"Cmd":["sh"],"Image":"9e77fef7a1c9f989988c06620dabc4020c607885b959a2cbd7c2283c91da3e33","Volumes":null,"WorkingDir":"","Entrypoint":null,"OnBuild":null,"Labels":null},"Architecture":"amd64","Os":"linux"}
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;$ skopeo copy --src-creds=testuser:testpassword docker://myregistrydomain.com:5000/private oci:local_oci_image
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read the &lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/CONTRIBUTING.md"&gt;contribution guide&lt;/a&gt; if you want to collaborate in the project.&lt;/p&gt; 
&lt;h2&gt;Commands&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-copy.1.md"&gt;skopeo-copy(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Copy an image (manifest, filesystem layers, signatures) from one location to another.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-delete.1.md"&gt;skopeo-delete(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Mark the image-name for later deletion by the registry's garbage collector.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-generate-sigstore-key.1.md"&gt;skopeo-generate-sigstore-key(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Generate a sigstore public/private key pair.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-inspect.1.md"&gt;skopeo-inspect(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Return low-level information about image-name in a registry.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-list-tags.1.md"&gt;skopeo-list-tags(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Return a list of tags for the transport-specific image repository.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-login.1.md"&gt;skopeo-login(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Login to a container registry.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-logout.1.md"&gt;skopeo-logout(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Logout of a container registry.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-manifest-digest.1.md"&gt;skopeo-manifest-digest(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Compute a manifest digest for a manifest-file and write it to standard output.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-standalone-sign.1.md"&gt;skopeo-standalone-sign(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Debugging tool - Sign an image locally without uploading.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-standalone-verify.1.md"&gt;skopeo-standalone-verify(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Debugging tool - Verify an image signature from local files.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/docs/skopeo-sync.1.md"&gt;skopeo-sync(1)&lt;/a&gt;&lt;/td&gt; 
   &lt;td&gt;Synchronize images between registry repositories and local directories.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;skopeo is licensed under the Apache License, Version 2.0. See &lt;a href="https://raw.githubusercontent.com/containers/skopeo/main/LICENSE"&gt;LICENSE&lt;/a&gt; for the full license text.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>uber-go/mock</title>
      <link>https://github.com/uber-go/mock</link>
      <description>&lt;p&gt;GoMock is a mocking framework for the Go programming language.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;gomock&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://github.com/uber-go/mock/actions"&gt;&lt;img src="https://github.com/uber-go/mock/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/go.uber.org/mock"&gt;&lt;img src="https://pkg.go.dev/badge/go.uber.org/mock.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;gomock is a mocking framework for the &lt;a href="http://go.dev/"&gt;Go programming language&lt;/a&gt;. It integrates well with Go's built-in &lt;code&gt;testing&lt;/code&gt; package, but can be used in other contexts too.&lt;/p&gt; 
&lt;p&gt;This project originates from Google's &lt;code&gt;golang/mock&lt;/code&gt; repo. Unfortunately, Google no longer maintains this project, and given the heavy usage of gomock project within Uber, we've decided to fork and maintain this going forward at Uber.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/uber-go/mock/main/CONTRIBUTING.md"&gt;Contributions&lt;/a&gt; are welcome in the form of GitHub issue or PR!&lt;/p&gt; 
&lt;h2&gt;Supported Go Versions&lt;/h2&gt; 
&lt;p&gt;go.uber.org/mock supports all Go versions supported by the official &lt;a href="https://go.dev/doc/devel/release#policy"&gt;Go Release Policy&lt;/a&gt;. That is, the two most recent releases of Go.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Install the &lt;code&gt;mockgen&lt;/code&gt; tool.&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;go install go.uber.org/mock/mockgen@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To ensure it was installed correctly, use:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;mockgen -version
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If that fails, make sure your GOPATH/bin is in your PATH. You can add it with:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;export PATH=$PATH:$(go env GOPATH)/bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Running mockgen&lt;/h2&gt; 
&lt;p&gt;&lt;code&gt;mockgen&lt;/code&gt; has three modes of operation: archive, source and package.&lt;/p&gt; 
&lt;h3&gt;Archive mode&lt;/h3&gt; 
&lt;p&gt;Archive mode generates mock interfaces from a package archive file (.a). It is enabled by using the -archive flag. An import path and a comma-separated list of symbols should be provided as a non-flag argument to the command.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Build the package to a archive.
go build -o pkg.a database/sql/driver

mockgen -archive=pkg.a database/sql/driver Conn,Driver
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Source mode&lt;/h3&gt; 
&lt;p&gt;Source mode generates mock interfaces from a source file. It is enabled by using the -source flag. Other flags that may be useful in this mode are -imports and -aux_files.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mockgen -source=foo.go [other options]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Package mode&lt;/h3&gt; 
&lt;p&gt;Package mode works by specifying the package and interface names. It is enabled by passing two non-flag arguments: an import path, and a comma-separated list of symbols.&lt;/p&gt; 
&lt;p&gt;You can use "." to refer to the current path's package.&lt;/p&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;mockgen database/sql/driver Conn,Driver

# Convenient for `go:generate`.
mockgen . Conn,Driver
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flags&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;mockgen&lt;/code&gt; command is used to generate source code for a mock class given a Go source file containing interfaces to be mocked. It supports the following flags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-archive&lt;/code&gt;: A package archive file containing interfaces to be mocked.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-source&lt;/code&gt;: A file containing interfaces to be mocked.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-destination&lt;/code&gt;: A file to which to write the resulting source code. If you don't set this, the code is printed to standard output.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-package&lt;/code&gt;: The package to use for the resulting mock class source code. If you don't set this, the package name is &lt;code&gt;mock_&lt;/code&gt; concatenated with the package of the input file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-imports&lt;/code&gt;: A list of explicit imports that should be used in the resulting source code, specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz&lt;/code&gt;, where &lt;code&gt;bar/baz&lt;/code&gt; is the package being imported and &lt;code&gt;foo&lt;/code&gt; is the identifier to use for the package in the generated source code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-aux_files&lt;/code&gt;: A list of additional files that should be consulted to resolve e.g. embedded interfaces defined in a different file. This is specified as a comma-separated list of elements of the form &lt;code&gt;foo=bar/baz.go&lt;/code&gt;, where &lt;code&gt;bar/baz.go&lt;/code&gt; is the source file and &lt;code&gt;foo&lt;/code&gt; is the package name of that file used by the -source file.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-build_flags&lt;/code&gt;: (package mode only) Flags passed verbatim to &lt;code&gt;go list&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-mock_names&lt;/code&gt;: A list of custom names for generated mocks. This is specified as a comma-separated list of elements of the form &lt;code&gt;Repository=MockSensorRepository,Endpoint=MockSensorEndpoint&lt;/code&gt;, where &lt;code&gt;Repository&lt;/code&gt; is the interface name and &lt;code&gt;MockSensorRepository&lt;/code&gt; is the desired mock name (mock factory method and mock recorder will be named after the mock). If one of the interfaces has no custom name specified, then default naming convention will be used.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-self_package&lt;/code&gt;: The full package import path for the generated code. The purpose of this flag is to prevent import cycles in the generated code by trying to include its own package. This can happen if the mock's package is set to one of its inputs (usually the main one) and the output is stdio so mockgen cannot detect the final output package. Setting this flag will then tell mockgen which import to exclude.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-copyright_file&lt;/code&gt;: Copyright file used to add copyright header to the resulting source code.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-debug_parser&lt;/code&gt;: Print out parser results only.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_package_comment&lt;/code&gt;: Writes package documentation comment (godoc) if true. (default true)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_generate_directive&lt;/code&gt;: Add //go:generate directive to regenerate the mock. (default false)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-write_source_comment&lt;/code&gt;: Writes original file (source mode) or interface names (package mode) comment if true. (default true)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-typed&lt;/code&gt;: Generate Type-safe 'Return', 'Do', 'DoAndReturn' function. (default false)&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;-exclude_interfaces&lt;/code&gt;: Comma-separated names of interfaces to be excluded&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;For an example of the use of &lt;code&gt;mockgen&lt;/code&gt;, see the &lt;code&gt;sample/&lt;/code&gt; directory. In simple cases, you will need only the &lt;code&gt;-source&lt;/code&gt; flag.&lt;/p&gt; 
&lt;h2&gt;Building Mocks&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type Foo interface {
  Bar(x int) int
}

func SUT(f Foo) {
 // ...
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func TestFoo(t *testing.T) {
  ctrl := gomock.NewController(t)

  m := NewMockFoo(ctrl)

  // Asserts that the first and only call to Bar() is passed 99.
  // Anything else will fail.
  m.
    EXPECT().
    Bar(gomock.Eq(99)).
    Return(101)

  SUT(m)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building Stubs&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;type Foo interface {
  Bar(x int) int
}

func SUT(f Foo) {
 // ...
}

&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;func TestFoo(t *testing.T) {
  ctrl := gomock.NewController(t)

  m := NewMockFoo(ctrl)

  // Does not make any assertions. Executes the anonymous functions and returns
  // its result when Bar is invoked with 99.
  m.
    EXPECT().
    Bar(gomock.Eq(99)).
    DoAndReturn(func(_ int) int {
      time.Sleep(1*time.Second)
      return 101
    }).
    AnyTimes()

  // Does not make any assertions. Returns 103 when Bar is invoked with 101.
  m.
    EXPECT().
    Bar(gomock.Eq(101)).
    Return(103).
    AnyTimes()

  SUT(m)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Modifying Failure Messages&lt;/h2&gt; 
&lt;p&gt;When a matcher reports a failure, it prints the received (&lt;code&gt;Got&lt;/code&gt;) vs the expected (&lt;code&gt;Want&lt;/code&gt;) value.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-shell"&gt;Got: [3]
Want: is equal to 2
Expected call at user_test.go:33 doesn't match the argument at index 1.
Got: [0 1 1 2 3]
Want: is equal to 1
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Modifying &lt;code&gt;Want&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;Want&lt;/code&gt; value comes from the matcher's &lt;code&gt;String()&lt;/code&gt; method. If the matcher's default output doesn't meet your needs, then it can be modified as follows:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;gomock.WantFormatter(
  gomock.StringerFunc(func() string { return "is equal to fifteen" }),
  gomock.Eq(15),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This modifies the &lt;code&gt;gomock.Eq(15)&lt;/code&gt; matcher's output for &lt;code&gt;Want:&lt;/code&gt; from &lt;code&gt;is equal to 15&lt;/code&gt; to &lt;code&gt;is equal to fifteen&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Modifying &lt;code&gt;Got&lt;/code&gt;&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;Got&lt;/code&gt; value comes from the object's &lt;code&gt;String()&lt;/code&gt; method if it is available. In some cases the output of an object is difficult to read (e.g., &lt;code&gt;[]byte&lt;/code&gt;) and it would be helpful for the test to print it differently. The following modifies how the &lt;code&gt;Got&lt;/code&gt; value is formatted:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;gomock.GotFormatterAdapter(
  gomock.GotFormatterFunc(func(i any) string {
    // Leading 0s
    return fmt.Sprintf("%02d", i)
  }),
  gomock.Eq(15),
)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;If the received value is &lt;code&gt;3&lt;/code&gt;, then it will be printed as &lt;code&gt;03&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>opencontainers/image-spec</title>
      <link>https://github.com/opencontainers/image-spec</link>
      <description>&lt;p&gt;OCI Image Format&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;OCI Image Format Specification&lt;/h1&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/license/opencontainers/image-spec" alt="License" /&gt; &lt;a href="https://pkg.go.dev/github.com/opencontainers/image-spec"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/opencontainers/image-spec.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The OCI Image Format project creates and maintains the software shipping container image format spec (OCI Image Format).&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/spec.md"&gt;The specification can be found here&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;This repository also provides &lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/specs-go"&gt;Go types&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/schema"&gt;intra-blob validation tooling, and JSON Schema&lt;/a&gt;. The Go types and validation should be compatible with the current Go release; earlier Go releases are not supported.&lt;/p&gt; 
&lt;p&gt;Additional documentation about how this group operates:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/opencontainers/org/raw/master/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/#roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/RELEASES.md"&gt;Releases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Running an OCI Image&lt;/h2&gt; 
&lt;p&gt;The OCI Image Format partner project is the &lt;a href="https://github.com/opencontainers/runtime-spec"&gt;OCI Runtime Spec project&lt;/a&gt;. The Runtime Specification outlines how to run a "&lt;a href="https://github.com/opencontainers/runtime-spec/raw/main/bundle.md"&gt;filesystem bundle&lt;/a&gt;" that is unpacked on disk. At a high-level an OCI implementation would download an OCI Image then unpack that image into an OCI Runtime filesystem bundle. At this point the OCI Runtime Bundle would be run by an OCI Runtime.&lt;/p&gt; 
&lt;p&gt;This entire workflow supports the UX that users have come to expect from container engines like Docker and rkt: primarily, the ability to run an image with no additional arguments:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;docker run example.com/org/app:v1.0.0&lt;/li&gt; 
 &lt;li&gt;rkt run example.com/org/app,version=v1.0.0&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To support this UX the OCI Image Format contains sufficient information to launch the application on the target platform (e.g. command, arguments, environment variables, etc).&lt;/p&gt; 
&lt;h2&gt;Distributing an OCI Image&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/opencontainers/distribution-spec/"&gt;OCI Distribution Spec Project&lt;/a&gt; defines an API protocol to facilitate and standardize the distribution of content. This API includes support for pushing and pulling OCI images to an OCI conformant registry.&lt;/p&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Q: What happens to AppC or Docker Image Formats?&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;A: Existing formats can continue to be a proving ground for technologies, as needed. The OCI Image Format project strives to provide a dependable open specification that can be shared between different tools and be evolved for years or decades of compatibility; as the deb and rpm format have.&lt;/p&gt; 
&lt;p&gt;Find more &lt;a href="https://www.opencontainers.org/faq"&gt;FAQ on the OCI site&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://github.com/opencontainers/image-spec/milestones"&gt;GitHub milestones&lt;/a&gt; lay out the path to the future improvements.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Development happens on GitHub for the spec. Issues are used for bugs and actionable items and longer discussions can happen on the &lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/#mailing-list"&gt;mailing list&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The specification and code is licensed under the Apache 2.0 license found in the &lt;code&gt;LICENSE&lt;/code&gt; file of this repository.&lt;/p&gt; 
&lt;h3&gt;Discuss your design&lt;/h3&gt; 
&lt;p&gt;The project welcomes submissions, but please let everyone know what you are working on.&lt;/p&gt; 
&lt;p&gt;Before undertaking a nontrivial change to this specification, send mail to the &lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/#mailing-list"&gt;mailing list&lt;/a&gt; to discuss what you plan to do. This gives everyone a chance to validate the design, helps prevent duplication of effort, and ensures that the idea fits. It also guarantees that the design is sound before code is written; a GitHub pull-request is not the place for high-level discussions.&lt;/p&gt; 
&lt;p&gt;Typos and grammatical errors can go straight to a pull-request. When in doubt, start on the &lt;a href="https://raw.githubusercontent.com/opencontainers/image-spec/main/#mailing-list"&gt;mailing-list&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Meetings&lt;/h3&gt; 
&lt;p&gt;Please see the &lt;a href="https://github.com/opencontainers/org#meetings"&gt;OCI org repository README&lt;/a&gt; for the most up-to-date information on OCI contributor and maintainer meeting schedules. You can also find links to meeting agendas and minutes for all prior meetings.&lt;/p&gt; 
&lt;h3&gt;Mailing List&lt;/h3&gt; 
&lt;p&gt;You can subscribe and join the mailing list on &lt;a href="https://groups.google.com/a/opencontainers.org/forum/#!forum/dev"&gt;Google Groups&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Markdown style&lt;/h3&gt; 
&lt;p&gt;To keep consistency throughout the Markdown files in the Open Container spec all files should be formatted one sentence per line. This fixes two things: it makes diffing easier with git and it resolves fights about line wrapping length. For example, this paragraph will span three lines in the Markdown source.&lt;/p&gt; 
&lt;h3&gt;Git commit&lt;/h3&gt; 
&lt;h4&gt;Sign your work&lt;/h4&gt; 
&lt;p&gt;The sign-off is a simple line at the end of the explanation for the patch, which certifies that you wrote it or otherwise have the right to pass it on as an open-source patch. The rules are pretty simple: if you can certify the below (from &lt;a href="https://developercertificate.org/"&gt;developercertificate.org&lt;/a&gt;):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;Developer Certificate of Origin
Version 1.1

Copyright (C) 2004, 2006 The Linux Foundation and its contributors.
660 York Street, Suite 102,
San Francisco, CA 94110 USA

Everyone is permitted to copy and distribute verbatim copies of this
license document, but changing it is not allowed.


Developer's Certificate of Origin 1.1

By making a contribution to this project, I certify that:

(a) The contribution was created in whole or in part by me and I
    have the right to submit it under the open source license
    indicated in the file; or

(b) The contribution is based upon previous work that, to the best
    of my knowledge, is covered under an appropriate open source
    license and I have the right under that license to submit that
    work with modifications, whether created in whole or in part
    by me, under the same open source license (unless I am
    permitted to submit under a different license), as indicated
    in the file; or

(c) The contribution was provided directly to me by some other
    person who certified (a), (b) or (c) and I have not modified
    it.

(d) I understand and agree that this project and the contribution
    are public and that a record of the contribution (including all
    personal information I submit with it, including my sign-off) is
    maintained indefinitely and may be redistributed consistent with
    this project or the open source license(s) involved.
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;then you just add a line to every git commit message:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-text"&gt;Signed-off-by: Joe Smith &amp;lt;joe@gmail.com&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;using your real name (sorry, no pseudonyms or anonymous contributions.)&lt;/p&gt; 
&lt;p&gt;You can add the sign off when creating the git commit via &lt;code&gt;git commit -s&lt;/code&gt;.&lt;/p&gt; 
&lt;h3&gt;Commit Style&lt;/h3&gt; 
&lt;p&gt;Simple house-keeping for clean git history. Read more on &lt;a href="https://chris.beams.io/posts/git-commit/"&gt;How to Write a Git Commit Message&lt;/a&gt; or the Discussion section of &lt;a href="https://git-scm.com/docs/git-commit"&gt;&lt;code&gt;git-commit(1)&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Separate the subject from body with a blank line&lt;/li&gt; 
 &lt;li&gt;Limit the subject line to 50 characters&lt;/li&gt; 
 &lt;li&gt;Capitalize the subject line&lt;/li&gt; 
 &lt;li&gt;Do not end the subject line with a period&lt;/li&gt; 
 &lt;li&gt;Use the imperative mood in the subject line&lt;/li&gt; 
 &lt;li&gt;Wrap the body at 72 characters&lt;/li&gt; 
 &lt;li&gt;Use the body to explain what and why vs. how 
  &lt;ul&gt; 
   &lt;li&gt;If there was important/useful/essential conversation or information, copy or include a reference&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;When possible, one keyword to scope the change in the subject (i.e. "README: ...", "runtime: ...")&lt;/li&gt; 
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>infracost/infracost</title>
      <link>https://github.com/infracost/infracost</link>
      <description>&lt;p&gt;Cloud cost estimates for Terraform in pull requests💰📉 Shift FinOps Left!&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://www.infracost.io"&gt;&lt;img src="https://raw.githubusercontent.com/infracost/infracost/master/.github/assets/logo.svg?sanitize=true" alt="Infracost breakdown command" width="300" /&gt;&lt;/a&gt; &lt;/p&gt;
&lt;p align="center"&gt;Infracost shows cloud cost estimates and FinOps best practices for Terraform. It lets engineers see a cost breakdown and understand costs &lt;b&gt;before making changes&lt;/b&gt;, either in the terminal, VS Code or pull requests.&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://www.infracost.io/docs/"&gt;&lt;img alt="Docs" src="https://img.shields.io/badge/docs-get%20started-brightgreen" /&gt;&lt;/a&gt; &lt;img alt="Docker pulls" src="https://img.shields.io/docker/pulls/infracost/infracost?style=plastic" /&gt; &lt;a href="https://www.infracost.io/community-chat"&gt;&lt;img alt="Community Slack channel" src="https://img.shields.io/badge/chat-slack-%234a154b" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/tweet?text=Get%20cost%20estimates%20for%20Terraform%20in%20pull%20requests!&amp;amp;url=https://www.infracost.io&amp;amp;hashtags=cloud,cost,terraform"&gt;&lt;img alt="tweet" src="https://img.shields.io/twitter/url/http/shields.io.svg?style=social" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;Get started&lt;/h2&gt; 
&lt;p&gt;Follow our &lt;a href="https://www.infracost.io/docs/#quick-start"&gt;&lt;strong&gt;quick start guide&lt;/strong&gt;&lt;/a&gt; to get started 🚀&lt;/p&gt; 
&lt;p&gt;Infracost also has many CI/CD integrations so you can easily post cost estimates in pull requests. This provides your team with a safety net as people can discuss costs as part of the workflow.&lt;/p&gt; 
&lt;h4&gt;Post cost estimates in pull requests&lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/infracost/infracost/master/.github/assets/github_actions_screenshot.png" alt="Infracost in GitHub Actions" width="700" /&gt; 
&lt;h4&gt;Output of &lt;code&gt;infracost breakdown&lt;/code&gt;&lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/infracost/infracost/master/.github/assets/breakdown_screenshot.png" alt="Infracost breakdown command" width="600" /&gt; 
&lt;h4&gt;&lt;code&gt;infracost diff&lt;/code&gt; shows diff of monthly costs between current and planned state&lt;/h4&gt; 
&lt;img src="https://raw.githubusercontent.com/infracost/infracost/master/.github/assets/diff_screenshot.png" alt="Infracost diff command" width="600" /&gt; 
&lt;h4&gt;Infracost Cloud&lt;/h4&gt; 
&lt;p&gt;&lt;a href="https://www.infracost.io/docs/infracost_cloud/get_started/"&gt;Infracost Cloud&lt;/a&gt; is our SaaS product that builds on top of Infracost open source and works with CI/CD integrations. It enables you to check for best practices such as using latest generation instance types or block storage, e.g. consider switching AWS gp2 volumes to gp3 as they are more performant and cheaper. Team leads, managers and FinOps practitioners can also setup &lt;a href="https://www.infracost.io/docs/infracost_cloud/tagging_policies/"&gt;tagging policies&lt;/a&gt; and &lt;a href="https://www.infracost.io/docs/infracost_cloud/guardrails/"&gt;guardrails&lt;/a&gt; to help guide the team.&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/infracost/infracost/master/.github/assets/infracost_cloud_dashboard_chart.png" alt="Infracost Cloud" width="600" /&gt; 
&lt;h2&gt;Supported clouds and resources&lt;/h2&gt; 
&lt;p&gt;Infracost supports over &lt;strong&gt;1,100&lt;/strong&gt; Terraform resources across &lt;a href="https://www.infracost.io/docs/supported_resources/aws"&gt;AWS&lt;/a&gt;, &lt;a href="https://www.infracost.io/docs/supported_resources/azure"&gt;Azure&lt;/a&gt; and &lt;a href="https://www.infracost.io/docs/supported_resources/google"&gt;Google&lt;/a&gt;. Other IaC tools, such as &lt;a href="https://github.com/infracost/infracost/issues/187"&gt;Pulumi&lt;/a&gt;, &lt;a href="https://github.com/infracost/infracost/issues/190"&gt;AWS CloudFormation/CDK&lt;/a&gt; and &lt;a href="https://github.com/infracost/infracost/issues/812"&gt;Azure ARM/Bicep&lt;/a&gt; are on our roadmap.&lt;/p&gt; 
&lt;p&gt;Infracost can also estimate &lt;a href="https://www.infracost.io/docs/usage_based_resources"&gt;usage-based resources&lt;/a&gt; such as AWS S3 or Lambda!&lt;/p&gt; 
&lt;h2&gt;Community and contributing&lt;/h2&gt; 
&lt;p&gt;Join our &lt;a href="https://www.infracost.io/community-chat"&gt;community Slack channel&lt;/a&gt; to learn more about cost estimation, Infracost, and to connect with other users and contributors. Checkout the &lt;a href="https://github.com/infracost/infracost/issues"&gt;pinned issues&lt;/a&gt; for our next community call or &lt;a href="https://www.youtube.com/playlist?list=PLZHI9QofNPJQS9Hz0P5zfsl0AC03llbMY"&gt;our YouTube&lt;/a&gt; for previous calls.&lt;/p&gt; 
&lt;p&gt;We ❤️ contributions big or small. For development details, see the &lt;a href="https://raw.githubusercontent.com/infracost/infracost/master/CONTRIBUTING.md"&gt;contributing&lt;/a&gt; guide. For major changes, including CLI interface changes, please open an issue first to discuss what you would like to change.&lt;/p&gt; 
&lt;p&gt;Thanks to all the people who have contributed, including bug reports, code, feedback and suggestions!&lt;/p&gt; 
&lt;a href="https://github.com/infracost/infracost/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=infracost/infracost" /&gt; &lt;/a&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://choosealicense.com/licenses/apache-2.0/"&gt;Apache License 2.0&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>sundowndev/phoneinfoga</title>
      <link>https://github.com/sundowndev/phoneinfoga</link>
      <description>&lt;p&gt;Information gathering framework for phone numbers&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/docs/images/banner.png" width="500" alt="project logo" /&gt; &lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/sundowndev/phoneinfoga/actions"&gt; &lt;img src="https://github.com/sundowndev/phoneinfoga/workflows/Build/badge.svg?sanitize=true" alt="build status" /&gt; &lt;/a&gt; 
 &lt;a href="https://goreportcard.com/report/github.com/sundowndev/phoneinfoga/v2"&gt; &lt;img src="https://goreportcard.com/badge/github.com/sundowndev/phoneinfoga/v2" alt="go report" /&gt; &lt;/a&gt; 
 &lt;a href="https://codeclimate.com/github/sundowndev/phoneinfoga/maintainability"&gt; &lt;img src="https://api.codeclimate.com/v1/badges/3259feb1c68df1cd4f71/maintainability" alt="code climate badge" /&gt; &lt;/a&gt; 
 &lt;a href="https://coveralls.io/github/sundowndev/phoneinfoga"&gt; &lt;img src="https://coveralls.io/repos/github/sundowndev/phoneinfoga/badge.svg?sanitize=true" alt="Coverage Status" /&gt; &lt;/a&gt; 
 &lt;a href="https://github.com/sundowndev/phoneinfoga/releases"&gt; &lt;img src="https://img.shields.io/github/release/SundownDEV/phoneinfoga.svg?sanitize=true" alt="Latest version" /&gt; &lt;/a&gt; 
 &lt;a href="https://hub.docker.com/r/sundowndev/phoneinfoga"&gt; &lt;img src="https://img.shields.io/docker/pulls/sundowndev/phoneinfoga.svg?sanitize=true" alt="Docker pulls" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h4 align="center"&gt;Information gathering framework for phone numbers&lt;/h4&gt; 
&lt;p align="center"&gt; &lt;a href="https://sundowndev.github.io/phoneinfoga/"&gt;Documentation&lt;/a&gt; • &lt;a href="https://petstore.swagger.io/?url=https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/web/docs/swagger.yaml"&gt;API documentation&lt;/a&gt; • &lt;a href="https://medium.com/@SundownDEV/phone-number-scanning-osint-recon-tool-6ad8f0cac27b"&gt;Related blog post&lt;/a&gt; &lt;/p&gt; 
&lt;h2&gt;About&lt;/h2&gt; 
&lt;p&gt;PhoneInfoga is one of the most advanced tools to scan international phone numbers. It allows you to first gather basic information such as country, area, carrier and line type, then use various techniques to try to find the VoIP provider or identify the owner. It works with a collection of scanners that must be configured in order for the tool to be effective. PhoneInfoga doesn't automate everything, it's just there to help investigating on phone numbers.&lt;/p&gt; 
&lt;h2&gt;Current status&lt;/h2&gt; 
&lt;p&gt;This project is stable and production-ready.&lt;/p&gt; 
&lt;h4&gt;Demo instance termination&lt;/h4&gt; 
&lt;p&gt;The demo instance has been terminated on December 21th, 2023. It's been expensive to maintain this instance throughout the years given the number of requests it received (~20K/month), without bringing much value to users compared to using it locally. Use it locally with your own API keys for a better experience.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check if phone number exists&lt;/li&gt; 
 &lt;li&gt;Gather basic information such as country, line type and carrier&lt;/li&gt; 
 &lt;li&gt;OSINT footprinting using external APIs, phone books &amp;amp; search engines&lt;/li&gt; 
 &lt;li&gt;Check for reputation reports, social media, disposable numbers and more&lt;/li&gt; 
 &lt;li&gt;Use the graphical user interface to run scans from the browser&lt;/li&gt; 
 &lt;li&gt;Programmatic usage with the &lt;a href="https://petstore.swagger.io/?url=https://raw.githubusercontent.com/sundowndev/phoneinfoga/master/web/docs/swagger.yaml"&gt;REST API&lt;/a&gt; and &lt;a href="https://pkg.go.dev/github.com/sundowndev/phoneinfoga/v2"&gt;Go modules&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Anti-features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Does not claim to provide relevant or verified data, it's just a tool !&lt;/li&gt; 
 &lt;li&gt;Does not allow to "track" a phone or its owner in real time&lt;/li&gt; 
 &lt;li&gt;Does not allow to get the precise phone location&lt;/li&gt; 
 &lt;li&gt;Does not allow to hack a phone&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fsundowndev%2FPhoneInfoga?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fsundowndev%2FPhoneInfoga.svg?type=shield" alt="FOSSA Status" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;This tool is licensed under the GNU General Public License v3.0.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.flaticon.com/free-icon/fingerprint-search-symbol-of-secret-service-investigation_48838"&gt;Icon&lt;/a&gt; made by &lt;a href="https://www.freepik.com/" title="Freepik"&gt;Freepik&lt;/a&gt; from &lt;a href="https://www.flaticon.com/" title="Flaticon"&gt;flaticon.com&lt;/a&gt; is licensed by &lt;a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons BY 3.0" target="_blank"&gt;CC 3.0 BY&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;Support me by signing up to DigitalOcean using my link ($200 free credits)&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.digitalocean.com/?refcode=31f5ef768eb3&amp;amp;utm_campaign=Referral_Invite&amp;amp;utm_medium=Referral_Program&amp;amp;utm_source=badge"&gt;&lt;img src="https://web-platforms.sfo2.cdn.digitaloceanspaces.com/WWW/Badge%203.svg?sanitize=true" alt="DigitalOcean Referral Badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;img src="https://github.com/sundowndev/static/raw/main/sponsors.svg?v=c68eba9" width="100%" heigh="auto" /&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>argoproj/argo-workflows</title>
      <link>https://github.com/argoproj/argo-workflows</link>
      <description>&lt;p&gt;Workflow Engine for Kubernetes&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/argoproj/argo-workflows/actions/workflows/snyk.yml?query=branch%3Amain"&gt;&lt;img src="https://github.com/argoproj/argo-workflows/actions/workflows/snyk.yml/badge.svg?branch=main" alt="Security Status" /&gt;&lt;/a&gt; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/3830"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/3830/badge" alt="OpenSSF Best Practices" /&gt;&lt;/a&gt; &lt;a href="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-workflows"&gt;&lt;img src="https://api.securityscorecards.dev/projects/github.com/argoproj/argo-workflows/badge" alt="OpenSSF Scorecard" /&gt;&lt;/a&gt; &lt;a href="https://app.fossa.com/projects/git%2Bgithub.com%2Fargoproj%2Fargo-workflows?ref=badge_shield"&gt;&lt;img src="https://app.fossa.com/api/projects/git%2Bgithub.com%2Fargoproj%2Fargo-workflows.svg?type=shield" alt="FOSSA License Status" /&gt;&lt;/a&gt; &lt;a href="https://argoproj.github.io/community/join-slack"&gt;&lt;img src="https://img.shields.io/badge/slack-argoproj-brightgreen.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://x.com/argoproj"&gt;&lt;img src="https://img.shields.io/twitter/follow/argoproj?style=social" alt="X Follow" /&gt;&lt;/a&gt; &lt;a href="https://www.linkedin.com/company/argoproj/"&gt;&lt;img src="https://img.shields.io/badge/LinkedIn-argoproj-blue.svg?logo=linkedin" alt="LinkedIn" /&gt;&lt;/a&gt; &lt;a href="https://github.com/argoproj/argo-workflows/releases/latest"&gt;&lt;img src="https://img.shields.io/github/v/release/argoproj/argo-workflows?label=argo-workflows" alt="Release Version" /&gt;&lt;/a&gt; &lt;a href="https://artifacthub.io/packages/helm/argo/argo-workflows"&gt;&lt;img src="https://img.shields.io/endpoint?url=https://artifacthub.io/badge/repository/argo-workflows" alt="Artifact HUB" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What is Argo Workflows?&lt;/h2&gt; 
&lt;p&gt;Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. Argo Workflows is implemented as a Kubernetes CRD (Custom Resource Definition).&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define workflows where each step is a container.&lt;/li&gt; 
 &lt;li&gt;Model multi-step workflows as a sequence of tasks or capture the dependencies between tasks using a directed acyclic graph (DAG).&lt;/li&gt; 
 &lt;li&gt;Easily run compute intensive jobs for machine learning or data processing in a fraction of the time using Argo Workflows on Kubernetes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Argo is a &lt;a href="https://cncf.io/"&gt;Cloud Native Computing Foundation (CNCF)&lt;/a&gt; graduated project.&lt;/p&gt; 
&lt;h2&gt;Use Cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/use-cases/machine-learning/"&gt;Machine Learning pipelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/use-cases/data-processing/"&gt;Data and batch processing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/use-cases/infrastructure-automation/"&gt;Infrastructure automation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/use-cases/ci-cd/"&gt;CI/CD&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/use-cases/other/"&gt;Other use cases&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Why Argo Workflows?&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Argo Workflows is the most popular workflow execution engine for Kubernetes.&lt;/li&gt; 
 &lt;li&gt;Light-weight, scalable, and easier to use. 
  &lt;ul&gt; 
   &lt;li&gt;Including for Python users through &lt;a href="https://hera.readthedocs.io/en/stable/"&gt;the Hera Python SDK for Argo Workflows&lt;/a&gt;.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Designed from the ground up for containers without the overhead and limitations of legacy VM and server-based environments.&lt;/li&gt; 
 &lt;li&gt;Cloud agnostic and can run on any Kubernetes cluster.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://blog.argoproj.io/argo-workflows-events-2023-user-survey-results-82c53bc30543"&gt;Read what people said in our latest survey&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Try Argo Workflows&lt;/h2&gt; 
&lt;p&gt;You can try Argo Workflows via one of the following:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;a href="https://killercoda.com/argoproj/course/argo-workflows/"&gt;Interactive Training Material&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://workflows.apps.argoproj.io/workflows/argo"&gt;Access the demo environment&lt;/a&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/argoproj/argo-workflows/main/docs/assets/screenshot.png" alt="Screenshot" /&gt;&lt;/p&gt; 
&lt;h2&gt;Who uses Argo Workflows?&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/argoproj/argo-workflows/main/USERS.md"&gt;About 200+ organizations are officially using Argo Workflows&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Ecosystem&lt;/h2&gt; 
&lt;p&gt;Just some of the projects that use or rely on Argo Workflows (complete list &lt;a href="https://github.com/akuity/awesome-argo#ecosystem-projects"&gt;here&lt;/a&gt;):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/argoproj/argo-events"&gt;Argo Events&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/couler-proj/couler"&gt;Couler&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/argoproj-labs/hera-workflows"&gt;Hera&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubeflow/katib"&gt;Katib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://kedro.readthedocs.io/en/stable/"&gt;Kedro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubeflow/pipelines"&gt;Kubeflow Pipelines&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://metaflow.org"&gt;Netflix Metaflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/onepanelio/onepanel"&gt;Onepanel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/orchest/orchest/"&gt;Orchest&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quickube/piper"&gt;Piper&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ploomber/ploomber"&gt;Ploomber&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SeldonIO/seldon-core"&gt;Seldon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sql-machine-learning/sqlflow"&gt;SQLFlow&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Client Libraries&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href="https://raw.githubusercontent.com/argoproj/argo-workflows/main/docs/client-libraries.md"&gt;Java, Golang and Python clients&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Quickstart&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/quick-start/"&gt;Get started here&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/walk-through/"&gt;Walk-through examples&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://argo-workflows.readthedocs.io/en/latest/"&gt;View the docs&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;p&gt;An incomplete list of features Argo Workflows provide:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;UI to visualize and manage Workflows&lt;/li&gt; 
 &lt;li&gt;Artifact support (S3, Artifactory, Alibaba Cloud OSS, Azure Blob Storage, HTTP, Git, GCS, raw)&lt;/li&gt; 
 &lt;li&gt;Workflow templating to store commonly used Workflows in the cluster&lt;/li&gt; 
 &lt;li&gt;Archiving Workflows after executing for later access&lt;/li&gt; 
 &lt;li&gt;Scheduled workflows using cron&lt;/li&gt; 
 &lt;li&gt;Server interface with REST API (HTTP and GRPC)&lt;/li&gt; 
 &lt;li&gt;DAG or Steps based declaration of workflows&lt;/li&gt; 
 &lt;li&gt;Step level input &amp;amp; outputs (artifacts/parameters)&lt;/li&gt; 
 &lt;li&gt;Loops&lt;/li&gt; 
 &lt;li&gt;Parameterization&lt;/li&gt; 
 &lt;li&gt;Conditionals&lt;/li&gt; 
 &lt;li&gt;Timeouts (step &amp;amp; workflow level)&lt;/li&gt; 
 &lt;li&gt;Retry (step &amp;amp; workflow level)&lt;/li&gt; 
 &lt;li&gt;Resubmit (memoized)&lt;/li&gt; 
 &lt;li&gt;Suspend &amp;amp; Resume&lt;/li&gt; 
 &lt;li&gt;Cancellation&lt;/li&gt; 
 &lt;li&gt;K8s resource orchestration&lt;/li&gt; 
 &lt;li&gt;Exit Hooks (notifications, cleanup)&lt;/li&gt; 
 &lt;li&gt;Garbage collection of completed workflow&lt;/li&gt; 
 &lt;li&gt;Scheduling (affinity/tolerations/node selectors)&lt;/li&gt; 
 &lt;li&gt;Volumes (ephemeral/existing)&lt;/li&gt; 
 &lt;li&gt;Parallelism limits&lt;/li&gt; 
 &lt;li&gt;Daemoned steps&lt;/li&gt; 
 &lt;li&gt;DinD (docker-in-docker)&lt;/li&gt; 
 &lt;li&gt;Script steps&lt;/li&gt; 
 &lt;li&gt;Event emission&lt;/li&gt; 
 &lt;li&gt;Prometheus metrics&lt;/li&gt; 
 &lt;li&gt;Multiple executors&lt;/li&gt; 
 &lt;li&gt;Multiple pod and workflow garbage collection strategies&lt;/li&gt; 
 &lt;li&gt;Automatically calculated resource usage per step&lt;/li&gt; 
 &lt;li&gt;Java/Golang/Python SDKs&lt;/li&gt; 
 &lt;li&gt;Pod Disruption Budget support&lt;/li&gt; 
 &lt;li&gt;Single-sign on (OAuth2/OIDC)&lt;/li&gt; 
 &lt;li&gt;Webhook triggering&lt;/li&gt; 
 &lt;li&gt;CLI&lt;/li&gt; 
 &lt;li&gt;Out-of-the box and custom Prometheus metrics&lt;/li&gt; 
 &lt;li&gt;Windows container support&lt;/li&gt; 
 &lt;li&gt;Embedded widgets&lt;/li&gt; 
 &lt;li&gt;Multiplex log viewer&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Community Meetings&lt;/h2&gt; 
&lt;p&gt;We host monthly community meetings where we and the community showcase demos and discuss the current and future state of the project. Feel free to join us! For Community Meeting information, minutes and recordings, please &lt;a href="https://bit.ly/argo-wf-cmty-mtng"&gt;see here&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Participation in Argo Workflows is governed by the &lt;a href="https://github.com/cncf/foundation/raw/master/code-of-conduct.md"&gt;CNCF Code of Conduct&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community Blogs and Presentations&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/awesome-argo"&gt;Awesome-Argo: A Curated List of Awesome Projects and Resources Related to Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/XNXJtxkUKeY"&gt;Automation of Everything - How To Combine Argo Events, Workflows &amp;amp; Pipelines, CD, and Rollouts&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/UMaivwrAyTA"&gt;Argo Workflows and Pipelines - CI/CD, Machine Learning, and Other Kubernetes Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@marekermk/provisioning-argo-on-openshift-with-ansible-and-kustomize-340a1fda8b50"&gt;Argo Ansible role: Provisioning Argo Workflows on OpenShift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://bit.ly/30YNIvT"&gt;Argo Workflows vs Apache Airflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/public-talks/tree/main/talks/kubecon-na-2023-metaflow-argo"&gt;Beyond Prototypes: Production-Ready ML Systems with Metaflow and Argo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://medium.com/@bouwe.ceunen/ci-cd-with-argo-on-kubernetes-28c1a99616a9"&gt;CI/CD with Argo on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://haque-zubair.medium.com/define-your-ci-cd-pipeline-with-argo-workflows-25aefb02fa63"&gt;Define Your CI/CD Pipeline with Argo Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/distributed-ml-patterns"&gt;Distributed Machine Learning Patterns from Manning Publication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/public-talks/tree/main/talks/platform-con-2024-engineering-cloud-native-ai-platform"&gt;Engineering Cloud Native AI Platform&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/public-talks/raw/main/talks/argocon-automl-experiments-2022"&gt;Managing Thousands of Automatic Machine Learning Experiments with Argo and Katib&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BYVf7GhfiRg"&gt;Revolutionizing Scientific Simulations with Argo Workflows&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://admiralty.io/blog/running-argo-workflows-across-multiple-kubernetes-clusters/"&gt;Running Argo Workflows Across Multiple Kubernetes Clusters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=KqEKRPjy4aE"&gt;Scaling Kubernetes: Best Practices for Managing Large-Scale Batch Jobs with Spark and Argo Workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.anaconda.com/blog/developer-blog/open-source-model-management-roundup-polyaxon-argo-and-seldon/"&gt;Open Source Model Management Roundup: Polyaxon, Argo, and Seldon&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.interline.io/blog/scaling-openstreetmap-data-workflows/"&gt;Producing 200 OpenStreetMap extracts in 35 minutes using a scalable data workflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/terrytangyuan/public-talks/tree/main/talks/kubecon-europe-2024-production-ai-platform-on-k8s"&gt;Production-Ready AI Platform on Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="http://dev.matt.hillsdon.net/2018/03/24/argo-integration-review.html"&gt;Argo integration review&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;TGI Kubernetes with Joe Beda: &lt;a href="https://www.youtube.com/watch?v=M_rxPPLG8pU&amp;amp;start=859"&gt;Argo workflow system&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Project Resources&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/argoproj"&gt;Argo Project GitHub organization&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://argoproj.github.io/"&gt;Argo Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://argoproj.github.io/community/join-slack"&gt;Argo Slack&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/argoproj/argo-workflows/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>kubesphere/kubesphere</title>
      <link>https://github.com/kubesphere/kubesphere</link>
      <description>&lt;p&gt;The container platform tailored for Kubernetes multi-cloud, datacenter, and edge management ⎈ 🖥 ☁️&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;a href="https://kubesphere.io/"&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/kubesphere-icon.gif" alt="banner" width="200px" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;b&gt;The container platform tailored for &lt;i&gt;Kubernetes multi-cloud, datacenter, and edge&lt;/i&gt; management&lt;/b&gt; &lt;/p&gt; 
&lt;p align="center"&gt; &lt;a href="https://goreportcard.com/report/github.com/kubesphere/kubesphere"&gt;&lt;img src="https://goreportcard.com/badge/github.com/kubesphere/kubesphere" alt="A+" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/kubesphere/ks-installer"&gt;&lt;img src="https://img.shields.io/docker/pulls/kubesphere/ks-installer" /&gt;&lt;/a&gt; &lt;a href="https://github.com/kubesphere/kubesphere/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated-desc+label%3A%22good+first+issue%22"&gt;&lt;img src="https://img.shields.io/github/issues/kubesphere/kubesphere/good%20first%20issue?logo=github" alt="good first issue" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/intent/follow?screen_name=KubeSphere"&gt;&lt;img src="https://img.shields.io/twitter/follow/KubeSphere?style=social" alt="follow on Twitter" /&gt;&lt;/a&gt; &lt;a href="https://join.slack.com/t/kubesphere/shared_invite/zt-2b4t6rdb4-ico_4UJzCln_S2c1pcrIpQ"&gt;&lt;img src="https://img.shields.io/badge/Slack-2000%2B-blueviolet?logo=slack&amp;amp;logoColor=white" /&gt;&lt;/a&gt; &lt;a href="https://www.youtube.com/channel/UCyTdUQUYjf7XLjxECx63Hpw"&gt;&lt;img src="https://img.shields.io/youtube/channel/subscribers/UCyTdUQUYjf7XLjxECx63Hpw?style=social" /&gt;&lt;/a&gt; &lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;What is KubeSphere&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;English | &lt;a href="https://raw.githubusercontent.com/kubesphere/kubesphere/master/README_zh.md"&gt;中文&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;a href="https://kubesphere.io/"&gt;KubeSphere&lt;/a&gt; is a &lt;strong&gt;distributed operating system for cloud-native application management&lt;/strong&gt;, using &lt;a href="https://kubernetes.io"&gt;Kubernetes&lt;/a&gt; as its kernel. It provides a plug-and-play architecture, allowing third-party applications to be seamlessly integrated into its ecosystem. KubeSphere is also a multi-tenant container platform with full-stack automated IT operation and streamlined DevOps workflows. It provides developer-friendly wizard web UI, helping enterprises to build out a more robust and feature-rich platform, which includes most common functionalities needed for enterprise Kubernetes strategy, see &lt;a href="https://raw.githubusercontent.com/kubesphere/kubesphere/master/#features"&gt;Feature List&lt;/a&gt; for details.&lt;/p&gt; 
&lt;p&gt;The following screenshots give a close insight into KubeSphere. Please check &lt;a href="https://kubesphere.io/docs/introduction/what-is-kubesphere/"&gt;What is KubeSphere&lt;/a&gt; for further information.&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;Workbench&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;Project Resources&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/console.png" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/project.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;CI/CD Pipeline&lt;/b&gt;&lt;/td&gt; 
   &lt;td width="50%" align="center"&gt;&lt;b&gt;App Store&lt;/b&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/cicd.png" /&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/app-store.png" /&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;Demo environment&lt;/h2&gt; 
&lt;p&gt;🎮 &lt;a href="https://kubesphere.cloud/en/console/managed-cluster/"&gt;KubeSphere Lite&lt;/a&gt; provides you with free, stable, and out-of-the-box managed cluster service. After registration and login, you can easily create a K8s cluster with KubeSphere installed in only 5 seconds and experience feature-rich KubeSphere.&lt;/p&gt; 
&lt;p&gt;🖥 You can view the &lt;a href="https://youtu.be/YxZ1YUv0CYs"&gt;Demo Video&lt;/a&gt; to get started with KubeSphere.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🧩 Extensible Architecture&lt;/b&gt;&lt;/summary&gt; Designed for flexibility, supporting plugin-based extensions and seamless integrations. Easily customize and expand functionalities to meet evolving needs. 
 &lt;a href="https://kubesphere.io/docs/v4.1/01-intro/02-architecture/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🕸 Provisioning Kubernetes Cluster&lt;/b&gt;&lt;/summary&gt; Support deploy Kubernetes on any infrastructure, support online and air-gapped installation. 
 &lt;a href="https://kubesphere.io/docs/v4.1/03-installation-and-upgrade/02-install-kubesphere/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🔗 Kubernetes Multi-cluster Management&lt;/b&gt;&lt;/summary&gt; Provide a centralized control plane to manage multiple Kubernetes clusters, and support the ability to propagate an app to multiple K8s clusters across different cloud providers. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🤖 Kubernetes DevOps&lt;/b&gt;&lt;/summary&gt; Provide GitOps-based CD solutions and use Argo CD to provide the underlying support, collecting CD status information in real time. With the mainstream CI engine Jenkins integrated, DevOps has never been easier. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/01-devops/01-overview/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🔎 Cloud Native Observability&lt;/b&gt;&lt;/summary&gt; Multi-dimensional monitoring, events and auditing logs are supported; multi-tenant log query and collection, alerting and notification are built-in. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/05-observability-platform/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🌐 Service Mesh (Istio-based)&lt;/b&gt;&lt;/summary&gt; Provide fine-grained traffic management, observability and tracing for distributed microservice applications, provides visualization for traffic topology. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/03-service-mesh/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;💻 App Store&lt;/b&gt;&lt;/summary&gt; Provide an App Store for Helm-based applications, and offer application lifecycle management on Kubernetes platform. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/02-app-store/02-app-management/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;💡 Edge Computing Platform&lt;/b&gt;&lt;/summary&gt; KubeSphere integrates 
 &lt;a href="https://kubeedge.io/en/"&gt;KubeEdge&lt;/a&gt; to enable users to deploy applications on the edge devices and view logs and monitoring metrics of them on the console. 
 &lt;a href="https://kubesphere.io/docs/v4.1/11-use-extensions/17-kubeedge/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🗃 Support Multiple Storage and Networking Solutions&lt;/b&gt;&lt;/summary&gt; 
 &lt;li&gt;Support GlusterFS, CephRBD, NFS, LocalPV solutions, and provide CSI plugins to consume storage from multiple cloud providers.&lt;/li&gt;
 &lt;li&gt;Provide Load Balancer Implementation &lt;a href="https://github.com/kubesphere/openelb"&gt;OpenELB&lt;/a&gt; for Kubernetes in bare-metal, edge, and virtualization.&lt;/li&gt;
 &lt;li&gt; Provides network policy and Pod IP pools management, support Calico, Flannel, Kube-OVN&lt;/li&gt;.. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🏢 Multi-Tenancy&lt;/b&gt;&lt;/summary&gt; Isolated workspaces with role-based access control ensure secure resource sharing across multiple tenants. Supports fine-grained permissions and quota management. 
 &lt;a href="https://kubesphere.io/docs/v4.1/08-workspace-management/"&gt;Learn more&lt;/a&gt;. 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;🧠 GPU Workloads Scheduling and Monitoring&lt;/b&gt;&lt;/summary&gt; Create GPU workloads on the GUI, schedule GPU resources, and manage GPU resource quotas by tenant. 
&lt;/details&gt; 
&lt;h2&gt;Architecture&lt;/h2&gt; 
&lt;p&gt;KubeSphere 4.x adopts a microkernel + extension components architecture (&lt;a href="https://kubesphere.io/docs/v4.1/01-intro/01-introduction/"&gt;codename LuBan&lt;/a&gt;). The core part (KubeSphere Core) only includes the essential basic functions required for system operation, with independent functional modules split and provided in the form of extension components. Users can dynamically manage the extension components during system operation. With the extension capabilities, KubeSphere can support more application scenarios and meet the needs of different users.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/kubesphere/kubesphere/master/docs/images/architecture.png" alt="Architecture" /&gt;&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Latest release&lt;/h2&gt; 
&lt;p&gt;🎉 KubeSphere v4.1.2 was released! It brings enhancements and better user experience, see the &lt;a href="https://kubesphere.io/docs/v4.1/20-release-notes/release-v412/"&gt;Release Notes For 4.1.2&lt;/a&gt; for the updates.&lt;/p&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;KubeSphere can run anywhere from on-premise datacenter to any cloud to edge. In addition, it can be deployed on any version-compatible Kubernetes cluster. KubeSphere consumes very few resources, and you can optionally &lt;a href="https://kubesphere.io/docs/v4.1/02-quickstart/03-install-an-extension/"&gt;install additional extensions after installation&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Quick start&lt;/h3&gt; 
&lt;h4&gt;Installing on K8s&lt;/h4&gt; 
&lt;p&gt;Run the following commands to install KubeSphere on an existing Kubernetes cluster:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;helm upgrade --install -n kubesphere-system --create-namespace ks-core https://charts.kubesphere.io/main/ks-core-1.1.3.tgz --debug --wait
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;KubeSphere for hosted Kubernetes services&lt;/h3&gt; 
&lt;p&gt;KubeSphere is hosted on the following cloud providers, and you can try KubeSphere by one-click installation on their hosted Kubernetes services.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://aws.amazon.com/quickstart/architecture/qingcloud-kubesphere/"&gt;KubeSphere for Amazon EKS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://market.azure.cn/marketplace/apps/qingcloud.kubesphere"&gt;KubeSphere for Azure AKS&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://marketplace.digitalocean.com/apps/kubesphere"&gt;KubeSphere for DigitalOcean Kubernetes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.qingcloud.com/products/kubesphereqke"&gt;KubeSphere on QingCloud AppCenter(QKE)&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;You can also install KubeSphere on other hosted Kubernetes services within minutes, see the &lt;a href="https://kubesphere.io/docs/v4.1/02-quickstart/01-install-kubesphere/"&gt;step-by-step guides&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;👨‍💻 No internet access? Refer to the &lt;a href="https://kubesphere.io/docs/v4.1/03-installation-and-upgrade/02-install-kubesphere/04-offline-installation/"&gt;Air-gapped Installation&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Guidance, discussion, contribution, and support&lt;/h2&gt; 
&lt;p&gt;You can reach the KubeSphere &lt;a href="https://github.com/kubesphere/community"&gt;community&lt;/a&gt; and developers via the following channels:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://join.slack.com/t/kubesphere/shared_invite/zt-2b4t6rdb4-ico_4UJzCln_S2c1pcrIpQ"&gt;Slack Channel&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCyTdUQUYjf7XLjxECx63Hpw"&gt;Youtube&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://x.com/KubeSphere"&gt;X/Twitter&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span&gt;🤗&lt;/span&gt; Please submit any KubeSphere bugs, issues, and feature requests to &lt;a href="https://github.com/kubesphere/kubesphere/issues"&gt;KubeSphere GitHub Issue&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;span&gt;💟&lt;/span&gt; The KubeSphere team also provides efficient official ticket support to respond in hours. For more information, click &lt;a href="https://kubesphere.cloud/en/ticket/"&gt;KubeSphere Online Support&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contribution&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kubesphere/community/tree/master/developer-guide/development"&gt;KubeSphere Development Guide&lt;/a&gt; explains how to build and develop KubeSphere.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://dev-guide.kubesphere.io/extension-dev-guide/en/"&gt;KubeSphere Extension Development Guide&lt;/a&gt; explains how to develop KubeSphere extensions.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;Participation in the KubeSphere community is governed by the &lt;a href="https://github.com/kubesphere/community/raw/master/code-of-conduct.md"&gt;Code of Conduct&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;The security process for reporting vulnerabilities is described in &lt;a href="https://raw.githubusercontent.com/kubesphere/kubesphere/master/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Who are using KubeSphere&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://kubesphere.io/case/"&gt;user case studies&lt;/a&gt; page includes the user list of the project. You can &lt;a href="https://github.com/kubesphere/kubesphere/issues/4123"&gt;leave a comment&lt;/a&gt; to let us know your use case.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;br /&gt;&lt;br /&gt; &lt;img src="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf-landscape/horizontal/color/cncf-landscape-horizontal-color.svg?sanitize=true" width="150" /&gt;&amp;nbsp;&amp;nbsp;&lt;img src="https://raw.githubusercontent.com/cncf/artwork/refs/heads/main/other/cncf/horizontal/color/cncf-color.svg?sanitize=true" width="200" /&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&lt;br /&gt; KubeSphere is a member of CNCF and a &lt;a href="https://www.cncf.io/certification/software-conformance/#logos"&gt;Kubernetes Conformance Certified platform &lt;/a&gt;, which enriches the &lt;a href="https://landscape.cncf.io/?landscape=observability-and-analysis&amp;amp;group=certified-partners-and-providers&amp;amp;item=platform--certified-kubernetes-distribution--kubesphere"&gt;CNCF CLOUD NATIVE Landscape. &lt;/a&gt; &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>gin-gonic/gin</title>
      <link>https://github.com/gin-gonic/gin</link>
      <description>&lt;p&gt;Gin is a HTTP web framework written in Go (Golang). It features a Martini-like API with much better performance -- up to 40 times faster. If you need smashing performance, get yourself some Gin.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Gin Web Framework&lt;/h1&gt; 
&lt;img align="right" width="159px" src="https://raw.githubusercontent.com/gin-gonic/logo/master/color.png" /&gt; 
&lt;p&gt;&lt;a href="https://github.com/gin-gonic/gin/actions/workflows/gin.yml"&gt;&lt;img src="https://github.com/gin-gonic/gin/actions/workflows/gin.yml/badge.svg?branch=master" alt="Build Status" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/gin-gonic/gin"&gt;&lt;img src="https://codecov.io/gh/gin-gonic/gin/branch/master/graph/badge.svg?sanitize=true" alt="codecov" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/gin-gonic/gin"&gt;&lt;img src="https://goreportcard.com/badge/github.com/gin-gonic/gin" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/gin-gonic/gin?tab=doc"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/gin-gonic/gin?status.svg?sanitize=true" alt="Go Reference" /&gt;&lt;/a&gt; &lt;a href="https://sourcegraph.com/github.com/gin-gonic/gin?badge"&gt;&lt;img src="https://sourcegraph.com/github.com/gin-gonic/gin/-/badge.svg?sanitize=true" alt="Sourcegraph" /&gt;&lt;/a&gt; &lt;a href="https://www.codetriage.com/gin-gonic/gin"&gt;&lt;img src="https://www.codetriage.com/gin-gonic/gin/badges/users.svg?sanitize=true" alt="Open Source Helpers" /&gt;&lt;/a&gt; &lt;a href="https://github.com/gin-gonic/gin/releases"&gt;&lt;img src="https://img.shields.io/github/release/gin-gonic/gin.svg?style=flat-square" alt="Release" /&gt;&lt;/a&gt; &lt;a href="https://www.tickgit.com/browse?repo=github.com/gin-gonic/gin"&gt;&lt;img src="https://badgen.net/https/api.tickgit.com/badgen/github.com/gin-gonic/gin" alt="TODOs" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Gin is a web framework written in &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;. It features a martini-like API with performance that is up to 40 times faster thanks to &lt;a href="https://github.com/julienschmidt/httprouter"&gt;httprouter&lt;/a&gt;. If you need performance and good productivity, you will love Gin.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Gin's key features are:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Zero allocation router&lt;/li&gt; 
 &lt;li&gt;Speed&lt;/li&gt; 
 &lt;li&gt;Middleware support&lt;/li&gt; 
 &lt;li&gt;Crash-free&lt;/li&gt; 
 &lt;li&gt;JSON validation&lt;/li&gt; 
 &lt;li&gt;Route grouping&lt;/li&gt; 
 &lt;li&gt;Error management&lt;/li&gt; 
 &lt;li&gt;Built-in rendering&lt;/li&gt; 
 &lt;li&gt;Extensible&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;p&gt;Gin requires &lt;a href="https://go.dev/"&gt;Go&lt;/a&gt; version &lt;a href="https://go.dev/doc/devel/release#go1.23.0"&gt;1.23&lt;/a&gt; or above.&lt;/p&gt; 
&lt;h3&gt;Getting Gin&lt;/h3&gt; 
&lt;p&gt;With &lt;a href="https://go.dev/wiki/Modules#how-to-use-modules"&gt;Go's module support&lt;/a&gt;, &lt;code&gt;go [build|run|test]&lt;/code&gt; automatically fetches the necessary dependencies when you add the import in your code:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;import "github.com/gin-gonic/gin"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Alternatively, use &lt;code&gt;go get&lt;/code&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go get -u github.com/gin-gonic/gin
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Running Gin&lt;/h3&gt; 
&lt;p&gt;A basic example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;package main

import (
  "net/http"

  "github.com/gin-gonic/gin"
)

func main() {
  r := gin.Default()
  r.GET("/ping", func(c *gin.Context) {
    c.JSON(http.StatusOK, gin.H{
      "message": "pong",
    })
  })
  r.Run() // listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;To run the code, use the &lt;code&gt;go run&lt;/code&gt; command, like:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;go run example.go
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Then visit &lt;a href="http://0.0.0.0:8080/ping"&gt;&lt;code&gt;0.0.0.0:8080/ping&lt;/code&gt;&lt;/a&gt; in your browser to see the response!&lt;/p&gt; 
&lt;h3&gt;See more examples&lt;/h3&gt; 
&lt;h4&gt;Quick Start&lt;/h4&gt; 
&lt;p&gt;Learn and practice with the &lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/docs/doc.md"&gt;Gin Quick Start&lt;/a&gt;, which includes API examples and builds tag.&lt;/p&gt; 
&lt;h4&gt;Examples&lt;/h4&gt; 
&lt;p&gt;A number of ready-to-run examples demonstrating various use cases of Gin are available in the &lt;a href="https://github.com/gin-gonic/examples"&gt;Gin examples&lt;/a&gt; repository.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;See the &lt;a href="https://pkg.go.dev/github.com/gin-gonic/gin"&gt;API documentation on go.dev&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The documentation is also available on &lt;a href="https://gin-gonic.com"&gt;gin-gonic.com&lt;/a&gt; in several languages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/en/docs/"&gt;English&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/zh-cn/docs/"&gt;简体中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/zh-tw/docs/"&gt;繁體中文&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/ja/docs/"&gt;日本語&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/es/docs/"&gt;Español&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/ko-kr/docs/"&gt;한국어&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/tr/docs/"&gt;Turkish&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/fa/docs/"&gt;Persian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/pt/docs/"&gt;Português&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/ru/docs/"&gt;Russian&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://gin-gonic.com/id/docs/"&gt;Indonesian&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Articles&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://go.dev/doc/tutorial/web-service-gin"&gt;Tutorial: Developing a RESTful API with Go and Gin&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Benchmarks&lt;/h2&gt; 
&lt;p&gt;Gin uses a custom version of &lt;a href="https://github.com/julienschmidt/httprouter"&gt;HttpRouter&lt;/a&gt;, &lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/BENCHMARKS.md"&gt;see all benchmarks&lt;/a&gt;.&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Benchmark name&lt;/th&gt; 
   &lt;th align="right"&gt;(1)&lt;/th&gt; 
   &lt;th align="right"&gt;(2)&lt;/th&gt; 
   &lt;th align="right"&gt;(3)&lt;/th&gt; 
   &lt;th align="right"&gt;(4)&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGin_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;43550&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;27364 ns/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;0 B/op&lt;/strong&gt;&lt;/td&gt; 
   &lt;td align="right"&gt;&lt;strong&gt;0 allocs/op&lt;/strong&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAce_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;40543&lt;/td&gt; 
   &lt;td align="right"&gt;29670 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkAero_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;57632&lt;/td&gt; 
   &lt;td align="right"&gt;20648 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBear_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;9234&lt;/td&gt; 
   &lt;td align="right"&gt;216179 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;86448 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;943 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBeego_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;7407&lt;/td&gt; 
   &lt;td align="right"&gt;243496 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;71456 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkBone_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;420&lt;/td&gt; 
   &lt;td align="right"&gt;2922835 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;720160 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;8620 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkChi_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;7620&lt;/td&gt; 
   &lt;td align="right"&gt;238331 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;87696 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkDenco_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;18355&lt;/td&gt; 
   &lt;td align="right"&gt;64494 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;20224 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkEcho_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;31251&lt;/td&gt; 
   &lt;td align="right"&gt;38479 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGocraftWeb_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;4117&lt;/td&gt; 
   &lt;td align="right"&gt;300062 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;131656 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1686 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoji_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;3274&lt;/td&gt; 
   &lt;td align="right"&gt;416158 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;56112 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;334 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGojiv2_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;1402&lt;/td&gt; 
   &lt;td align="right"&gt;870518 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;352720 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;4321 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoJsonRest_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;2976&lt;/td&gt; 
   &lt;td align="right"&gt;401507 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;134371 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2737 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGoRestful_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;410&lt;/td&gt; 
   &lt;td align="right"&gt;2913158 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;910144 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2938 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGorillaMux_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;346&lt;/td&gt; 
   &lt;td align="right"&gt;3384987 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;251650 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1994 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkGowwwRouter_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;143025 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;72144 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;501 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpRouter_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;55938&lt;/td&gt; 
   &lt;td align="right"&gt;21360 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkHttpTreeMux_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;153944 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;65856 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;671 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkKocha_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;106315 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;23304 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;843 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkLARS_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;47779&lt;/td&gt; 
   &lt;td align="right"&gt;25084 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;0 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMacaron_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;3266&lt;/td&gt; 
   &lt;td align="right"&gt;371907 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;149409 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1624 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkMartini_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;331&lt;/td&gt; 
   &lt;td align="right"&gt;3444706 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;226551 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;2325 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPat_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;273&lt;/td&gt; 
   &lt;td align="right"&gt;4381818 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;1483152 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;26963 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkPossum_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;164367 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;84448 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkR2router_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;10000&lt;/td&gt; 
   &lt;td align="right"&gt;160220 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;77328 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;979 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkRivet_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;14625&lt;/td&gt; 
   &lt;td align="right"&gt;82453 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;16272 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;167 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTango_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;6255&lt;/td&gt; 
   &lt;td align="right"&gt;279611 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;63826 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;1618 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTigerTonic_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;2008&lt;/td&gt; 
   &lt;td align="right"&gt;687874 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;193856 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;4474 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkTraffic_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;355&lt;/td&gt; 
   &lt;td align="right"&gt;3478508 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;820744 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;14114 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;BenchmarkVulcan_GithubAll&lt;/td&gt; 
   &lt;td align="right"&gt;6885&lt;/td&gt; 
   &lt;td align="right"&gt;193333 ns/op&lt;/td&gt; 
   &lt;td align="right"&gt;19894 B/op&lt;/td&gt; 
   &lt;td align="right"&gt;609 allocs/op&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;ul&gt; 
 &lt;li&gt;(1): Total Repetitions achieved in constant time, higher means more confident result&lt;/li&gt; 
 &lt;li&gt;(2): Single Repetition Duration (ns/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(3): Heap Memory (B/op), lower is better&lt;/li&gt; 
 &lt;li&gt;(4): Average Allocations per Repetition (allocs/op), lower is better&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Middleware&lt;/h2&gt; 
&lt;p&gt;You can find many useful Gin middlewares at &lt;a href="https://github.com/gin-contrib"&gt;gin-contrib&lt;/a&gt; and &lt;a href="https://github.com/gin-gonic/contrib"&gt;gin-gonic/contrib&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Uses&lt;/h2&gt; 
&lt;p&gt;Here are some awesome projects that are using the &lt;a href="https://github.com/gin-gonic/gin"&gt;Gin&lt;/a&gt; web framework.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/appleboy/gorush"&gt;gorush&lt;/a&gt;: A push notification server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fnproject/fn"&gt;fnproject&lt;/a&gt;: A container native, cloud agnostic serverless platform.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/photoprism/photoprism"&gt;photoprism&lt;/a&gt;: Personal photo management powered by Google TensorFlow.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/luraproject/lura"&gt;lura&lt;/a&gt;: Ultra performant API Gateway with middleware.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/thoas/picfit"&gt;picfit&lt;/a&gt;: An image resizing server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/distribworks/dkron"&gt;dkron&lt;/a&gt;: Distributed, fault tolerant job scheduling system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Gin is the work of hundreds of contributors. We appreciate your help!&lt;/p&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/gin-gonic/gin/master/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; for details on submitting patches and the contribution workflow.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>krillinai/KrillinAI</title>
      <link>https://github.com/krillinai/KrillinAI</link>
      <description>&lt;p&gt;A video translation and dubbing tool powered by LLMs, offering 99 language translations and one-click full-process deployment. It can generate content optimized for platforms like YouTube，TikTok, and Shorts. AI视频翻译配音工具，99种语言双向翻译，一键部署全流程，可以生成适配抖音，小红书，哔哩哔哩，视频号，TikTok，Youtube Shorts等形态的内容&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/logo.jpg" alt="KrillinAI" height="90" /&gt; 
 &lt;h1&gt;Minimalist AI Video Translation and Dubbing Tool&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://trendshift.io/repositories/13360" target="_blank"&gt;&lt;img src="https://trendshift.io/api/badge/repositories/13360" alt="KrillinAI%2FKrillinAI | Trendshift" style="width: 250px; height: 55px;" width="250" height="55" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;strong&gt;&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/README.md"&gt;English&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/zh/README.md"&gt;简体中文&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/jp/README.md"&gt;日本語&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/kr/README.md"&gt;한국어&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/vi/README.md"&gt;Tiếng Việt&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/fr/README.md"&gt;Français&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/de/README.md"&gt;Deutsch&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/es/README.md"&gt;Español&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/pt/README.md"&gt;Português&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/rus/README.md"&gt;Русский&lt;/a&gt;｜&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/ar/README.md"&gt;اللغة العربية&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://x.com/KrillinAI"&gt;&lt;img src="https://img.shields.io/badge/Twitter-KrillinAI-orange?logo=twitter" alt="Twitter" /&gt;&lt;/a&gt; &lt;a href="https://jq.qq.com/?_wv=1027&amp;amp;k=754069680"&gt;&lt;img src="https://img.shields.io/badge/QQ%20%E7%BE%A4-754069680-green?logo=tencent-qq" alt="QQ 群" /&gt;&lt;/a&gt; &lt;a href="https://space.bilibili.com/242124650"&gt;&lt;img src="https://img.shields.io/badge/dynamic/json?label=Bilibili&amp;amp;query=%24.data.follower&amp;amp;suffix=%E7%B2%89%E4%B8%9D&amp;amp;url=https%3A%2F%2Fapi.bilibili.com%2Fx%2Frelation%2Fstat%3Fvmid%3D242124650&amp;amp;logo=bilibili&amp;amp;color=00A1D6&amp;amp;labelColor=FE7398&amp;amp;logoColor=FFFFFF" alt="Bilibili" /&gt;&lt;/a&gt; &lt;a href="https://deepwiki.com/krillinai/KrillinAI"&gt;&lt;img src="https://deepwiki.com/badge.svg?sanitize=true" alt="Ask DeepWiki" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Project Introduction (&lt;a href="https://www.klic.studio/"&gt;Try the online version now!&lt;/a&gt;)&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/#-quick-start"&gt;&lt;strong&gt;Quick Start&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;KrillinAI is a versatile audio and video localization and enhancement solution developed by Krillin AI. This minimalist yet powerful tool integrates video translation, dubbing, and voice cloning, supporting both landscape and portrait formats to ensure perfect presentation on all major platforms (Bilibili, Xiaohongshu, Douyin, WeChat Video, Kuaishou, YouTube, TikTok, etc.). With an end-to-end workflow, you can transform raw materials into beautifully ready-to-use cross-platform content with just a few clicks.&lt;/p&gt; 
&lt;h2&gt;Key Features and Functions:&lt;/h2&gt; 
&lt;p&gt;🎯 &lt;strong&gt;One-click Start&lt;/strong&gt;: No complex environment configuration required, automatic dependency installation, ready to use immediately, with a new desktop version for easier access!&lt;/p&gt; 
&lt;p&gt;📥 &lt;strong&gt;Video Acquisition&lt;/strong&gt;: Supports yt-dlp downloads or local file uploads&lt;/p&gt; 
&lt;p&gt;📜 &lt;strong&gt;Accurate Recognition&lt;/strong&gt;: High-accuracy speech recognition based on Whisper&lt;/p&gt; 
&lt;p&gt;🧠 &lt;strong&gt;Intelligent Segmentation&lt;/strong&gt;: Subtitle segmentation and alignment using LLM&lt;/p&gt; 
&lt;p&gt;🔄 &lt;strong&gt;Terminology Replacement&lt;/strong&gt;: One-click replacement of professional vocabulary&lt;/p&gt; 
&lt;p&gt;🌍 &lt;strong&gt;Professional Translation&lt;/strong&gt;: LLM translation with context to maintain natural semantics&lt;/p&gt; 
&lt;p&gt;🎙️ &lt;strong&gt;Voice Cloning&lt;/strong&gt;: Offers selected voice tones from CosyVoice or custom voice cloning&lt;/p&gt; 
&lt;p&gt;🎬 &lt;strong&gt;Video Composition&lt;/strong&gt;: Automatically processes landscape and portrait videos and subtitle layout&lt;/p&gt; 
&lt;p&gt;💻 &lt;strong&gt;Cross-Platform&lt;/strong&gt;: Supports Windows, Linux, macOS, providing both desktop and server versions&lt;/p&gt; 
&lt;h2&gt;Effect Demonstration&lt;/h2&gt; 
&lt;p&gt;The image below shows the effect of the subtitle file generated after importing a 46-minute local video and executing it with one click, without any manual adjustments. There are no omissions or overlaps, the segmentation is natural, and the translation quality is very high. &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/alignment.png" alt="Alignment Effect" /&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;tbody&gt;
  &lt;tr&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Subtitle Translation&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/bba1ac0a-fe6b-4947-b58d-ba99306d0339"&gt;https://github.com/user-attachments/assets/bba1ac0a-fe6b-4947-b58d-ba99306d0339&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Dubbing&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/0b32fad3-c3ad-4b6a-abf0-0865f0dd2385"&gt;https://github.com/user-attachments/assets/0b32fad3-c3ad-4b6a-abf0-0865f0dd2385&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
   &lt;td width="33%"&gt; &lt;h3&gt;Portrait Mode&lt;/h3&gt; 
    &lt;hr /&gt; &lt;p&gt;&lt;a href="https://github.com/user-attachments/assets/c2c7b528-0ef8-4ba9-b8ac-f9f92f6d4e71"&gt;https://github.com/user-attachments/assets/c2c7b528-0ef8-4ba9-b8ac-f9f92f6d4e71&lt;/a&gt;&lt;/p&gt; &lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt;
&lt;/table&gt; 
&lt;h2&gt;🔍 Supported Speech Recognition Services&lt;/h2&gt; 
&lt;p&gt;&lt;em&gt;&lt;strong&gt;All local models in the table below support automatic installation of executable files + model files; you just need to choose, and Klic will prepare everything for you.&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Service Source&lt;/th&gt; 
   &lt;th&gt;Supported Platforms&lt;/th&gt; 
   &lt;th&gt;Model Options&lt;/th&gt; 
   &lt;th&gt;Local/Cloud&lt;/th&gt; 
   &lt;th&gt;Remarks&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;OpenAI Whisper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Cloud&lt;/td&gt; 
   &lt;td&gt;Fast speed and good effect&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;FasterWhisper&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;Windows/Linux&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;tiny&lt;/code&gt;/&lt;code&gt;medium&lt;/code&gt;/&lt;code&gt;large-v2&lt;/code&gt; (recommended medium+)&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Faster speed, no cloud service cost&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhisperKit&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;macOS (M-series only)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;large-v2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Native optimization for Apple chips&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;WhisperCpp&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;large-v2&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Local&lt;/td&gt; 
   &lt;td&gt;Supports all platforms&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Alibaba Cloud ASR&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;All Platforms&lt;/td&gt; 
   &lt;td&gt;-&lt;/td&gt; 
   &lt;td&gt;Cloud&lt;/td&gt; 
   &lt;td&gt;Avoids network issues in mainland China&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;🚀 Large Language Model Support&lt;/h2&gt; 
&lt;p&gt;✅ Compatible with all cloud/local large language model services that comply with &lt;strong&gt;OpenAI API specifications&lt;/strong&gt;, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OpenAI&lt;/li&gt; 
 &lt;li&gt;Gemini&lt;/li&gt; 
 &lt;li&gt;DeepSeek&lt;/li&gt; 
 &lt;li&gt;Tongyi Qianwen&lt;/li&gt; 
 &lt;li&gt;Locally deployed open-source models&lt;/li&gt; 
 &lt;li&gt;Other API services compatible with OpenAI format&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🎤 TTS Text-to-Speech Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Alibaba Cloud Voice Service&lt;/li&gt; 
 &lt;li&gt;OpenAI TTS&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Language Support&lt;/h2&gt; 
&lt;p&gt;Input languages supported: Chinese, English, Japanese, German, Turkish, Korean, Russian, Malay (continuously increasing)&lt;/p&gt; 
&lt;p&gt;Translation languages supported: English, Chinese, Russian, Spanish, French, and 101 other languages&lt;/p&gt; 
&lt;h2&gt;Interface Preview&lt;/h2&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/ui_desktop_light.png" alt="Interface Preview" /&gt; &lt;img src="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docs/images/ui_desktop_dark.png" alt="Interface Preview" /&gt;&lt;/p&gt; 
&lt;h2&gt;🚀 Quick Start&lt;/h2&gt; 
&lt;p&gt;You can ask questions on the &lt;a href="https://deepwiki.com/krillinai/KrillinAI"&gt;Deepwiki of KrillinAI&lt;/a&gt;. It indexes the files in the repository, so you can find answers quickly.&lt;/p&gt; 
&lt;h3&gt;Basic Steps&lt;/h3&gt; 
&lt;p&gt;First, download the executable file that matches your device system from the &lt;a href="https://github.com/KrillinAI/KrillinAI/releases"&gt;Release&lt;/a&gt;, then follow the tutorial below to choose between the desktop version or non-desktop version. Place the software download in an empty folder, as running it will generate some directories, and keeping it in an empty folder will make management easier.&lt;/p&gt; 
&lt;p&gt;【If it is the desktop version, i.e., the release file with "desktop," see here】 &lt;em&gt;The desktop version is newly released to address the issues of new users struggling to edit configuration files correctly, and there are some bugs that are continuously being updated.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Double-click the file to start using it (the desktop version also requires configuration within the software)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;【If it is the non-desktop version, i.e., the release file without "desktop," see here】 &lt;em&gt;The non-desktop version is the initial version, which has a more complex configuration but is stable in functionality and suitable for server deployment, as it provides a UI in a web format.&lt;/em&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a &lt;code&gt;config&lt;/code&gt; folder within the folder, then create a &lt;code&gt;config.toml&lt;/code&gt; file in the &lt;code&gt;config&lt;/code&gt; folder. Copy the contents of the &lt;code&gt;config-example.toml&lt;/code&gt; file from the source code's &lt;code&gt;config&lt;/code&gt; directory into &lt;code&gt;config.toml&lt;/code&gt;, and fill in your configuration information according to the comments.&lt;/li&gt; 
 &lt;li&gt;Double-click or execute the executable file in the terminal to start the service&lt;/li&gt; 
 &lt;li&gt;Open your browser and enter &lt;code&gt;http://127.0.0.1:8888&lt;/code&gt; to start using it (replace 8888 with the port you specified in the configuration file)&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;To: macOS Users&lt;/h3&gt; 
&lt;p&gt;【If it is the desktop version, i.e., the release file with "desktop," see here】 Due to signing issues, the desktop version currently cannot be double-clicked to run or installed via dmg; you need to manually trust the application. The method is as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the terminal in the directory where the executable file (assuming the file name is KrillinAI_1.0.0_desktop_macOS_arm64) is located&lt;/li&gt; 
 &lt;li&gt;Execute the following commands in order:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code&gt;sudo xattr -cr ./KrillinAI_1.0.0_desktop_macOS_arm64
sudo chmod +x ./KrillinAI_1.0.0_desktop_macOS_arm64 
./KrillinAI_1.0.0_desktop_macOS_arm64
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;【If it is the non-desktop version, i.e., the release file without "desktop," see here】 This software is not signed, so when running on macOS, after completing the file configuration in the "Basic Steps," you also need to manually trust the application. The method is as follows:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Open the terminal in the directory where the executable file (assuming the file name is KrillinAI_1.0.0_macOS_arm64) is located&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;Execute the following commands in order:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;sudo xattr -rd com.apple.quarantine ./KrillinAI_1.0.0_macOS_arm64
 sudo chmod +x ./KrillinAI_1.0.0_macOS_arm64
 ./KrillinAI_1.0.0_macOS_arm64
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;This will start the service&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Docker Deployment&lt;/h3&gt; 
&lt;p&gt;This project supports Docker deployment; please refer to the &lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/docker.md"&gt;Docker Deployment Instructions&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Based on the provided configuration file, here is the updated "Configuration Help (Must Read)" section for your README file:&lt;/p&gt; 
&lt;h3&gt;Configuration Help (Must Read)&lt;/h3&gt; 
&lt;p&gt;The configuration file is divided into several sections: &lt;code&gt;[app]&lt;/code&gt;, &lt;code&gt;[server]&lt;/code&gt;, &lt;code&gt;[llm]&lt;/code&gt;, &lt;code&gt;[transcribe]&lt;/code&gt;, and &lt;code&gt;[tts]&lt;/code&gt;. A task is composed of speech recognition (&lt;code&gt;transcribe&lt;/code&gt;) + large model translation (&lt;code&gt;llm&lt;/code&gt;) + optional voice services (&lt;code&gt;tts&lt;/code&gt;). Understanding this will help you better grasp the configuration file.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Easiest and Quickest Configuration:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;For Subtitle Translation Only:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;code&gt;[transcribe]&lt;/code&gt; section, set &lt;code&gt;provider.name&lt;/code&gt; to &lt;code&gt;openai&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;You will then only need to fill in your OpenAI API key in the &lt;code&gt;[llm]&lt;/code&gt; block to start performing subtitle translations. The &lt;code&gt;app.proxy&lt;/code&gt;, &lt;code&gt;model&lt;/code&gt;, and &lt;code&gt;openai.base_url&lt;/code&gt; can be filled in as needed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Balanced Cost, Speed, and Quality (Using Local Speech Recognition):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In the &lt;code&gt;[transcribe]&lt;/code&gt; section, set &lt;code&gt;provider.name&lt;/code&gt; to &lt;code&gt;fasterwhisper&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Set &lt;code&gt;transcribe.fasterwhisper.model&lt;/code&gt; to &lt;code&gt;large-v2&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Fill in your large language model configuration in the &lt;code&gt;[llm]&lt;/code&gt; block.&lt;/li&gt; 
 &lt;li&gt;The required local model will be automatically downloaded and installed.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Text-to-Speech (TTS) Configuration (Optional):&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;TTS configuration is optional.&lt;/li&gt; 
 &lt;li&gt;First, set the &lt;code&gt;provider.name&lt;/code&gt; under the &lt;code&gt;[tts]&lt;/code&gt; section (e.g., &lt;code&gt;aliyun&lt;/code&gt; or &lt;code&gt;openai&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;Then, fill in the corresponding configuration block for the selected provider. For example, if you choose &lt;code&gt;aliyun&lt;/code&gt;, you must fill in the &lt;code&gt;[tts.aliyun]&lt;/code&gt; section.&lt;/li&gt; 
 &lt;li&gt;Voice codes in the user interface should be chosen based on the selected provider's documentation.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you plan to use the voice cloning feature, you must select &lt;code&gt;aliyun&lt;/code&gt; as the TTS provider.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Alibaba Cloud Configuration:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;For details on obtaining the necessary &lt;code&gt;AccessKey&lt;/code&gt;, &lt;code&gt;Bucket&lt;/code&gt;, and &lt;code&gt;AppKey&lt;/code&gt; for Alibaba Cloud services, please refer to the &lt;a href="https://www.google.com/search?q=./aliyun.md"&gt;Alibaba Cloud Configuration Instructions&lt;/a&gt;. The repeated fields for AccessKey, etc., are designed to maintain a clear configuration structure.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Please visit &lt;a href="https://raw.githubusercontent.com/krillinai/KrillinAI/master/faq.md"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribution Guidelines&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Do not submit useless files, such as .vscode, .idea, etc.; please use .gitignore to filter them out.&lt;/li&gt; 
 &lt;li&gt;Do not submit config.toml; instead, submit config-example.toml.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Contact Us&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Join our QQ group for questions: 754069680&lt;/li&gt; 
 &lt;li&gt;Follow our social media accounts, &lt;a href="https://space.bilibili.com/242124650"&gt;Bilibili&lt;/a&gt;, where we share quality content in the AI technology field every day.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://star-history.com/#KrillinAI/KrillinAI&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=KrillinAI/KrillinAI&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>fleetdm/fleet</title>
      <link>https://github.com/fleetdm/fleet</link>
      <description>&lt;p&gt;Open device management&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;a href="https://fleetdm.com"&gt;&lt;img width="200" alt="Fleet logo, landscape, dark text, transparent background" src="https://github.com/user-attachments/assets/5b52c536-f33e-4159-b2a3-d48f31868cd2" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;h4&gt;&lt;a href="https://fleetdm.com/announcements"&gt;News&lt;/a&gt; &amp;nbsp; · &amp;nbsp; &lt;a href="https://github.com/fleetdm/fleet/issues/new"&gt;Report a bug&lt;/a&gt; &amp;nbsp; · &amp;nbsp; &lt;a href="https://fleetdm.com/handbook/company"&gt;Handbook&lt;/a&gt; &amp;nbsp; · &amp;nbsp; &lt;a href="https://fleetdm.com/handbook/company/why-this-way#why-open-source"&gt;Why open source?&lt;/a&gt; &amp;nbsp; · &amp;nbsp; &lt;a href="https://fleetdm.com/logos"&gt;Art&lt;/a&gt;&lt;/h4&gt; 
&lt;p&gt;Open-source platform for IT and security teams with thousands of computers. Designed for APIs, GitOps, webhooks, YAML, and humans.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://fleetdm.com/logos"&gt;&lt;img src="https://github.com/fleetdm/fleet/assets/618009/f835ec29-1cb9-49ba-a0f3-395ffd9d5c9f" alt="A glass city in the clouds" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;What's it for?&lt;/h2&gt; 
&lt;p&gt;Organizations like Fastly and Gusto use Fleet for vulnerability reporting, detection engineering, device management (MDM), device health monitoring, posture-based access control, managing unused software licenses, and more.&lt;/p&gt; 
&lt;h4&gt;Explore data&lt;/h4&gt; 
&lt;p&gt;To see what kind of data you can use Fleet to gather, check out the &lt;a href="https://fleetdm.com/tables"&gt;table reference documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Out-of-the-box policies&lt;/h4&gt; 
&lt;p&gt;Fleet includes out-of-the box support for all &lt;a href="https://fleetdm.com/docs/using-fleet/cis-benchmarks"&gt;CIS benchmarks for macOS and Windows&lt;/a&gt;, as well as many &lt;a href="https://fleetdm.com/queries"&gt;simpler queries&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Take as much or as little as you need for your organization.&lt;/p&gt; 
&lt;h4&gt;Supported platforms&lt;/h4&gt; 
&lt;p&gt;Here are the platforms Fleet currently supports:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Linux (all distros)&lt;/li&gt; 
 &lt;li&gt;macOS&lt;/li&gt; 
 &lt;li&gt;Windows&lt;/li&gt; 
 &lt;li&gt;Chromebooks&lt;/li&gt; 
 &lt;li&gt;Amazon Web Services (AWS)&lt;/li&gt; 
 &lt;li&gt;Google Cloud (GCP)&lt;/li&gt; 
 &lt;li&gt;Azure (Microsoft cloud)&lt;/li&gt; 
 &lt;li&gt;Data centers&lt;/li&gt; 
 &lt;li&gt;Containers (kube, etc)&lt;/li&gt; 
 &lt;li&gt;Linux-based IoT devices&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lighter than air&lt;/h2&gt; 
&lt;p&gt;Fleet is lightweight and modular. You can use it for security without using it for MDM, and vice versa. You can turn off features you are not using.&lt;/p&gt; 
&lt;h4&gt;Openness&lt;/h4&gt; 
&lt;p&gt;Fleet is dedicated to flexibility, accessibility, and clarity. We think &lt;a href="https://fleetdm.com/handbook/company#openness"&gt;everyone can contribute&lt;/a&gt; and that tools should be as easy as possible for everyone to understand.&lt;/p&gt; 
&lt;h4&gt;Good neighbors&lt;/h4&gt; 
&lt;p&gt;Fleet has no ambition to replace all of your other tools. (Though it might replace some, if you want it to.) Ready-to-use, enterprise-friendly integrations exist for Snowflake, Splunk, GitHub Actions, Vanta, Elastic Jira, Zendesk, and more.&lt;/p&gt; 
&lt;p&gt;Fleet plays well with Munki, Chef, Puppet, and Ansible, as well as with security tools like Crowdstrike and SentinelOne. For example, you can use the free version of Fleet to quickly report on what hosts are &lt;em&gt;actually&lt;/em&gt; running your EDR agent.&lt;/p&gt; 
&lt;h4&gt;Free as in free&lt;/h4&gt; 
&lt;p&gt;The free version of Fleet will &lt;a href="https://fleetdm.com/pricing"&gt;always be free&lt;/a&gt;. Fleet is &lt;a href="https://linkedin.com/company/fleetdm"&gt;independently backed&lt;/a&gt; and actively maintained with the help of many amazing &lt;a href="https://github.com/fleetdm/fleet/graphs/contributors"&gt;contributors&lt;/a&gt;.&lt;/p&gt; 
&lt;h4&gt;Longevity&lt;/h4&gt; 
&lt;p&gt;The &lt;a href="https://fleetdm.com/handbook/company"&gt;company behind Fleet&lt;/a&gt; is founded (and majority-owned) by &lt;a href="https://fleetdm.com/handbook/company/why-this-way#why-open-source"&gt;true believers in open source&lt;/a&gt;. The company's business model is influenced by GitLab (NYSE: GTLB), with great investors, happy customers, and the capacity to become profitable at any time.&lt;/p&gt; 
&lt;p&gt;In keeping with Fleet's value of openness, &lt;a href="https://fleetdm.com/handbook/company"&gt;Fleet Device Management's company handbook&lt;/a&gt; is public and open source. You can read about the &lt;a href="https://fleetdm.com/handbook/company#history"&gt;history of Fleet and osquery&lt;/a&gt; and our commitment to improving the product.&lt;/p&gt; 
&lt;!-- &gt; To upgrade from Fleet ≤3.2.0, just follow the upgrading steps for the earliest subsequent major release from this repository (it'll work out of the box until the release of Fleet 5.0). --&gt; 
&lt;h2&gt;Is it any good?&lt;/h2&gt; 
&lt;p&gt;Fleet is used in production by IT and security teams with thousands of laptops and servers. Many deployments support tens of thousands of hosts, and a few large organizations manage deployments as large as 400,000+ hosts.&lt;/p&gt; 
&lt;h2&gt;Chat&lt;/h2&gt; 
&lt;p&gt;Please join us in &lt;a href="https://www.macadmins.org/"&gt;MacAdmins Slack&lt;/a&gt; or in &lt;a href="https://fleetdm.com/slack"&gt;osquery Slack&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;The Fleet community is full of &lt;a href="https://fleetdm.com/handbook/company#empathy"&gt;kind and helpful people&lt;/a&gt;. Whether or not you are a paying customer, if you need help, just ask.&lt;/p&gt; 
&lt;h2&gt;Contributing &amp;nbsp; &lt;a href="https://goreportcard.com/report/github.com/fleetdm/fleet"&gt;&lt;img src="https://goreportcard.com/badge/github.com/fleetdm/fleet" alt="Go Report Card" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://bestpractices.coreinfrastructure.org/projects/5537"&gt;&lt;img src="https://bestpractices.coreinfrastructure.org/projects/5537/badge" alt="CII Best Practices" /&gt;&lt;/a&gt; &amp;nbsp; &lt;a href="https://twitter.com/fleetctl"&gt;&lt;img src="https://img.shields.io/twitter/follow/fleetctl.svg?style=social&amp;amp;maxAge=3600" alt="Twitter Follow" /&gt;&lt;/a&gt; &amp;nbsp;&lt;/h2&gt; 
&lt;p&gt;The landscape of cybersecurity and IT is too complex. Let's open it up.&lt;/p&gt; 
&lt;p&gt;Contributions are welcome, whether you answer questions on &lt;a href="https://fleetdm.com/slack"&gt;Slack&lt;/a&gt; / &lt;a href="https://github.com/fleetdm/fleet/issues"&gt;GitHub&lt;/a&gt; / &lt;a href="https://stackoverflow.com/search?q=osquery"&gt;StackOverflow&lt;/a&gt; / &lt;a href="https://linkedin.com/company/fleetdm"&gt;LinkedIn&lt;/a&gt; / &lt;a href="https://twitter.com/fleetctl"&gt;Twitter&lt;/a&gt;, improve the documentation or &lt;a href="https://raw.githubusercontent.com/fleetdm/fleet/main/website"&gt;website&lt;/a&gt;, write a tutorial, give a talk at a conference or local meetup, give an &lt;a href="https://fleetdm.com/podcasts"&gt;interview on a podcast&lt;/a&gt;, troubleshoot reported issues, or &lt;a href="https://fleetdm.com/docs/contributing/contributing"&gt;submit a patch&lt;/a&gt;. The Fleet code of conduct is &lt;a href="https://github.com/fleetdm/fleet/raw/main/CODE_OF_CONDUCT.md"&gt;on GitHub&lt;/a&gt;.&lt;/p&gt; 
&lt;!-- - Great contributions are motivated by real-world use cases or learning.
- Some of the most valuable contributions might not touch any code at all.
- Small, iterative, simple (boring) changes are the easiest to merge. --&gt; 
&lt;h2&gt;What's next?&lt;/h2&gt; 
&lt;p&gt;To see what Fleet can do, head over to &lt;a href="https://fleetdm.com"&gt;fleetdm.com&lt;/a&gt; and try it out for yourself, grab time with one of the maintainers to discuss, or visit the docs and roll it out to your organization.&lt;/p&gt; 
&lt;h4&gt;Production deployment&lt;/h4&gt; 
&lt;p&gt;Fleet is simple enough to &lt;a href="https://fleetdm.com/docs/get-started/tutorials-and-guides"&gt;spin up for yourself&lt;/a&gt;. Or you can have us &lt;a href="https://fleetdm.com/pricing"&gt;host it for you&lt;/a&gt;. Premium features are &lt;a href="https://fleetdm.com/pricing"&gt;available&lt;/a&gt; either way.&lt;/p&gt; 
&lt;h4&gt;Documentation&lt;/h4&gt; 
&lt;p&gt;Complete documentation for Fleet can be found at &lt;a href="https://fleetdm.com/docs"&gt;https://fleetdm.com/docs&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;The free version of Fleet is available under the MIT license. The commercial license is also designed to allow contributions to paid features for users whose employment agreements allow them to contribute to open source projects. (See LICENSE.md for details.)&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Fleet is built on &lt;a href="https://github.com/osquery/osquery"&gt;osquery&lt;/a&gt;, &lt;a href="https://github.com/micromdm/nanomdm"&gt;nanoMDM&lt;/a&gt;, &lt;a href="https://github.com/macadmins/nudge"&gt;Nudge&lt;/a&gt;, and &lt;a href="https://github.com/swiftDialog/swiftDialog"&gt;swiftDialog&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>hashicorp/terraform-mcp-server</title>
      <link>https://github.com/hashicorp/terraform-mcp-server</link>
      <description>&lt;p&gt;The Terraform MCP Server provides seamless integration with Terraform ecosystem, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/hashicorp/terraform-mcp-server/main/public/images/Terraform-LogoMark_onDark.svg?sanitize=true" width="30" align="left" style="margin-right: 12px;" /&gt; Terraform MCP Server&lt;/h1&gt; 
&lt;p&gt;The Terraform MCP Server is a &lt;a href="https://modelcontextprotocol.io/introduction"&gt;Model Context Protocol (MCP)&lt;/a&gt; server that provides seamless integration with Terraform Registry APIs, enabling advanced automation and interaction capabilities for Infrastructure as Code (IaC) development.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Dual Transport Support&lt;/strong&gt;: Both Stdio and StreamableHTTP transports&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terraform Provider Discovery&lt;/strong&gt;: Query and explore Terraform providers and their documentation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Module Search &amp;amp; Analysis&lt;/strong&gt;: Search and retrieve detailed information about Terraform modules&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Registry Integration&lt;/strong&gt;: Direct integration with Terraform Registry APIs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Container Ready&lt;/strong&gt;: Docker support for easy deployment&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Caution:&lt;/strong&gt; The outputs and recommendations provided by the MCP server are generated dynamically and may vary based on the query, model, and the connected MCP server. Users should &lt;strong&gt;thoroughly review all outputs/recommendations&lt;/strong&gt; to ensure they align with their organization's &lt;strong&gt;security best practices&lt;/strong&gt;, &lt;strong&gt;cost-efficiency goals&lt;/strong&gt;, and &lt;strong&gt;compliance requirements&lt;/strong&gt; before implementation.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Security Note:&lt;/strong&gt; When using the StreamableHTTP transport in production, always configure the &lt;code&gt;MCP_ALLOWED_ORIGINS&lt;/code&gt; environment variable to restrict access to trusted origins only. This helps prevent DNS rebinding attacks and other cross-origin vulnerabilities.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Prerequisites&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;To run the server in a container, you will need to have &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt; installed.&lt;/li&gt; 
 &lt;li&gt;Once Docker is installed, you will need to ensure Docker is running.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Transport Support&lt;/h2&gt; 
&lt;p&gt;The Terraform MCP Server supports multiple transport protocols:&lt;/p&gt; 
&lt;h3&gt;1. Stdio Transport (Default)&lt;/h3&gt; 
&lt;p&gt;Standard input/output communication using JSON-RPC messages. Ideal for local development and direct integration with MCP clients.&lt;/p&gt; 
&lt;h3&gt;2. StreamableHTTP Transport&lt;/h3&gt; 
&lt;p&gt;Modern HTTP-based transport supporting both direct HTTP requests and Server-Sent Events (SSE) streams. This is the recommended transport for remote/distributed setups.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Features:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Endpoint&lt;/strong&gt;: &lt;code&gt;http://{hostname}:8080/mcp&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Health Check&lt;/strong&gt;: &lt;code&gt;http://{hostname}:8080/health&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Environment Configuration&lt;/strong&gt;: Set &lt;code&gt;TRANSPORT_MODE=http&lt;/code&gt; or &lt;code&gt;TRANSPORT_PORT=8080&lt;/code&gt; to enable&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Environment Variables:&lt;/strong&gt;&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Variable&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
   &lt;th&gt;Default&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TRANSPORT_MODE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set to &lt;code&gt;streamable-http&lt;/code&gt; to enable HTTP transport (legacy &lt;code&gt;http&lt;/code&gt; value still supported)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;stdio&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TRANSPORT_HOST&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Host to bind the HTTP server&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;127.0.0.1&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;TRANSPORT_PORT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP server port&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;8080&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_ENDPOINT&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;HTTP server endpoint path&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;/mcp&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_SESSION_MODE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Session mode: &lt;code&gt;stateful&lt;/code&gt; or &lt;code&gt;stateless&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;stateful&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_ALLOWED_ORIGINS&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Comma-separated list of allowed origins for CORS&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;""&lt;/code&gt; (empty)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_CORS_MODE&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;CORS mode: &lt;code&gt;strict&lt;/code&gt;, &lt;code&gt;development&lt;/code&gt;, or &lt;code&gt;disabled&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;strict&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_RATE_LIMIT_GLOBAL&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Global rate limit (format: &lt;code&gt;rps:burst&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;10:20&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;MCP_RATE_LIMIT_SESSION&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Per-session rate limit (format: &lt;code&gt;rps:burst&lt;/code&gt;)&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;5:10&lt;/code&gt;&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Command Line Options&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Stdio mode
terraform-mcp-server stdio [--log-file /path/to/log]

# StreamableHTTP mode
terraform-mcp-server streamable-http [--transport-port 8080] [--transport-host 127.0.0.1] [--mcp-endpoint /mcp] [--log-file /path/to/log]
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Session Modes&lt;/h2&gt; 
&lt;p&gt;The Terraform MCP Server supports two session modes when using the StreamableHTTP transport:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Stateful Mode (Default)&lt;/strong&gt;: Maintains session state between requests, enabling context-aware operations.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Stateless Mode&lt;/strong&gt;: Each request is processed independently without maintaining session state, which can be useful for high-availability deployments or when using load balancers.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;To enable stateless mode, set the environment variable:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;export MCP_SESSION_MODE=stateless
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;h3&gt;Usage with VS Code&lt;/h3&gt; 
&lt;p&gt;Add the following JSON block to your User Settings (JSON) file in VS Code. You can do this by pressing &lt;code&gt;Ctrl + Shift + P&lt;/code&gt; and typing &lt;code&gt;Preferences: Open User Settings (JSON)&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;More about using MCP server tools in VS Code's &lt;a href="https://code.visualstudio.com/docs/copilot/chat/mcp-servers"&gt;agent mode documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcp": {
    "servers": {
      "terraform": {
        "command": "docker",
        "args": [
          "run",
          "-i",
          "--rm",
          "hashicorp/terraform-mcp-server"
        ]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Optionally, you can add a similar example (i.e. without the mcp key) to a file called &lt;code&gt;.vscode/mcp.json&lt;/code&gt; in your workspace. This will allow you to share the configuration with others.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "servers": {
    "terraform": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "hashicorp/terraform-mcp-server"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22terraform%22%2C%22command%22%3A%22docker%22%2C%22args%22%3A%5B%22run%22%2C%22-i%22%2C%22--rm%22%2C%22hashicorp%2Fterraform-mcp-server%22%5D%7D"&gt;&lt;img alt="Install in VS Code (docker)" src="https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;amp;label=Install%20Terraform%20MCP&amp;amp;color=0098FF" /&gt;&lt;/a&gt; &lt;a href="https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22terraform%22%2C%22command%22%3A%22docker%22%2C%22args%22%3A%5B%22run%22%2C%22-i%22%2C%22--rm%22%2C%22hashicorp%2Fterraform-mcp-server%22%5D%7D"&gt;&lt;img alt="Install in VS Code Insiders (docker)" src="https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;amp;label=Install%20Terraform%20MCP&amp;amp;color=24bfa5" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage with Cursor&lt;/h3&gt; 
&lt;p&gt;Add this to your Cursor config (&lt;code&gt;~/.cursor/mcp.json&lt;/code&gt;) or via Settings → Cursor Settings → MCP:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "terraform": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "hashicorp/terraform-mcp-server"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;a href="cursor://anysphere.cursor-deeplink/mcp/install?name=terraform&amp;amp;config=eyJjb21tYW5kIjoiZG9ja2VyIiwiYXJncyI6WyJydW4iLCItaSIsIi0tcm0iLCJoYXNoaWNvcnAvdGVycmFmb3JtLW1jcC1zZXJ2ZXIiXX0%3D"&gt; &lt;img alt="Add terraform MCP server to Cursor" src="https://cursor.com/deeplink/mcp-install-dark.png" height="48" /&gt; &lt;/a&gt; 
&lt;p&gt;&lt;a href="cursor://anysphere.cursor-deeplink/mcp/install?name=terraform&amp;amp;config=eyJjb21tYW5kIjoiZG9ja2VyIiwiYXJncyI6WyJydW4iLCItaSIsIi0tcm0iLCJoYXNoaWNvcnAvdGVycmFmb3JtLW1jcC1zZXJ2ZXIiXX0%3D"&gt;Install Terraform MCP server in Cursor&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Usage with Claude Desktop / Amazon Q Developer / Amazon Q CLI&lt;/h3&gt; 
&lt;p&gt;More about using MCP server tools in Claude Desktop &lt;a href="https://modelcontextprotocol.io/quickstart/user"&gt;user documentation&lt;/a&gt;. Read more about using MCP server in Amazon Q from the &lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/qdev-mcp.html"&gt;documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "terraform": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "hashicorp/terraform-mcp-server"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Usage with Claude Code&lt;/h3&gt; 
&lt;p&gt;More about using and adding MCP server tools in Claude Code &lt;a href="https://docs.claude.com/en/docs/claude-code/mcp"&gt;user documentation&lt;/a&gt;&lt;/p&gt; 
&lt;h4&gt;Local (stdio) Transport&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;claude mcp add terraform -s user -t stdio -- docker run -i --rm hashicorp/terraform-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Remote (streamable-http) Transport&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# Run server (example)
docker run -p 8080:8080 --rm -e TRANSPORT_MODE=streamable-http -e TRANSPORT_HOST=0.0.0.0 hashicorp/terraform-mcp-server

# Add to Claude Code
claude mcp add --transport http terraform http://localhost:8080/mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Tool Configuration&lt;/h2&gt; 
&lt;h3&gt;Available Toolsets&lt;/h3&gt; 
&lt;p&gt;The following sets of tools are available for the &lt;a href="https://registry.terraform.io"&gt;public Terraform registry&lt;/a&gt;:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Toolset&lt;/th&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;search_providers&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Queries the Terraform Registry to find and list available documentation for a specific provider using the specified &lt;code&gt;service_slug&lt;/code&gt;. Returns a list of provider document IDs with their titles and categories for resources, data sources, functions, or guides.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_provider_details&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Fetches the complete documentation content for a specific provider resource, data source, or function using a document ID obtained from the &lt;code&gt;search_providers&lt;/code&gt; tool. Returns the raw documentation in markdown format.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;providers&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_latest_provider_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Fetches the complete documentation content for a specific provider resource, data source, or function using a document ID obtained from the &lt;code&gt;search_providers&lt;/code&gt; tool. Returns the raw documentation in markdown format.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;search_modules&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Searches the Terraform Registry for modules based on specified &lt;code&gt;module_query&lt;/code&gt; with pagination. Returns a list of module IDs with their names, descriptions, download counts, verification status, and publish dates&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_module_details&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Retrieves detailed documentation for a module using a module ID obtained from the &lt;code&gt;search_modules&lt;/code&gt; tool including inputs, outputs, configuration, submodules, and examples.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_latest_module_version&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Retrieves detailed documentation for a module using a module ID obtained from the &lt;code&gt;search_modules&lt;/code&gt; tool including inputs, outputs, configuration, submodules, and examples.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;policies&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;search_policies&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Queries the Terraform Registry to find and list the appropriate Sentinel Policy based on the provided query &lt;code&gt;policy_query&lt;/code&gt;. Returns a list of matching policies with terraform_policy_id(s) with their name, title and download counts.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;policies&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_policy_details&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Retrieves detailed documentation for a policy set using a terraform_policy_id obtained from the &lt;code&gt;search_policies&lt;/code&gt; tool including policy readme and implementation details.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;p&gt;The following sets of tools are available for HCP Terraform or Terraform Enterprise:&lt;/p&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Toolset&lt;/th&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;orgs&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;list_organizations&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Lists all Terraform organizations accessible to the authenticated user.&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;projects&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;list_projects&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Lists all projects within a specified Terraform organization.&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Resource Configuration&lt;/h2&gt; 
&lt;h3&gt;Available resources&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Resource URI&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/terraform/style-guide&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Terraform Style Guide - Provides access to the official Terraform style guide documentation in markdown format&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/terraform/module-development&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Terraform Module Development Guide - Comprehensive guide covering module composition, structure, providers, publishing, and refactoring best practices&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Available Resource Templates&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Resouce Template URI&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;/terraform/providers/{namespace}/name/{name}/version/{version}&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Provider Resource Template - Dynamically retrieves detailed documentation and overview for any Terraform provider by namespace, name, and version&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Install from source&lt;/h3&gt; 
&lt;p&gt;Use the latest release version:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;go install github.com/hashicorp/terraform-mcp-server/cmd/terraform-mcp-server@latest
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Use the main branch:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;go install github.com/hashicorp/terraform-mcp-server/cmd/terraform-mcp-server@main
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcp": {
    "servers": {
      "terraform": {
        "command": "/path/to/terraform-mcp-server",
        "args": ["stdio"]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Building the Docker Image locally&lt;/h2&gt; 
&lt;p&gt;Before using the server, you need to build the Docker image locally:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone the repository:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/hashicorp/terraform-mcp-server.git
cd terraform-mcp-server
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;Build the Docker image:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;make docker-build
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;This will create a local Docker image that you can use in the following configuration.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Run in stdio mode
docker run -i --rm terraform-mcp-server:dev

# Run in streamable-http mode
docker run -p 8080:8080 --rm -e TRANSPORT_MODE=streamable-http -e TRANSPORT_HOST=0.0.0.0 terraform-mcp-server:dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When running in Docker, you should set &lt;code&gt;TRANSPORT_HOST=0.0.0.0&lt;/code&gt; to allow connections from outside the container.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="4"&gt; 
 &lt;li&gt;(Optional) Test connection in http mode&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Test the connection
curl http://localhost:8080/health
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;You can use it on your AI assistant as follow:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "terraform": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "terraform-mcp-server:dev"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Development&lt;/h2&gt; 
&lt;h3&gt;Prerequisites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Go (check &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform-mcp-server/main/go.mod"&gt;go.mod&lt;/a&gt; file for specific version)&lt;/li&gt; 
 &lt;li&gt;Docker (optional, for container builds)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Available Make Commands&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Command&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build the binary&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make test&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Run all tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make test-e2e&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Run end-to-end tests&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make docker-build&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Build Docker image&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make run-http&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Run HTTP server locally&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make docker-run-http&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Run HTTP server in Docker&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make test-http&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Test HTTP health endpoint&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make clean&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Remove build artifacts&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;code&gt;make help&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Show all available commands&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;ol&gt; 
 &lt;li&gt;Fork the repository&lt;/li&gt; 
 &lt;li&gt;Create your feature branch&lt;/li&gt; 
 &lt;li&gt;Make your changes&lt;/li&gt; 
 &lt;li&gt;Run tests&lt;/li&gt; 
 &lt;li&gt;Submit a pull request&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;This project is licensed under the terms of the MPL-2.0 open source license. Please refer to &lt;a href="https://raw.githubusercontent.com/hashicorp/terraform-mcp-server/main/LICENSE"&gt;LICENSE&lt;/a&gt; file for the full terms.&lt;/p&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;For security issues, please contact &lt;a href="mailto:security@hashicorp.com"&gt;security@hashicorp.com&lt;/a&gt; or follow our &lt;a href="https://www.hashicorp.com/en/trust/security/vulnerability-management"&gt;security policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Support&lt;/h2&gt; 
&lt;p&gt;For bug reports and feature requests, please open an issue on GitHub.&lt;/p&gt; 
&lt;p&gt;For general questions and discussions, open a GitHub Discussion.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>aquasecurity/trivy</title>
      <link>https://github.com/aquasecurity/trivy</link>
      <description>&lt;p&gt;Find vulnerabilities, misconfigurations, secrets, SBOM in containers, Kubernetes, code repositories, clouds and more&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/logo.png" width="200" /&gt; 
 &lt;p&gt;&lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/release/aquasecurity/trivy.svg?logo=github" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml"&gt;&lt;img src="https://github.com/aquasecurity/trivy/actions/workflows/test.yaml/badge.svg?sanitize=true" alt="Test" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/aquasecurity/trivy"&gt;&lt;img src="https://goreportcard.com/badge/github.com/aquasecurity/trivy" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/raw/main/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/License-Apache%202.0-blue.svg?sanitize=true" alt="License: Apache-2.0" /&gt;&lt;/a&gt; &lt;a href="https://github.com/aquasecurity/trivy/releases"&gt;&lt;img src="https://img.shields.io/github/downloads/aquasecurity/trivy/total?logo=github" alt="GitHub Downloads" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/docker/pulls/aquasec/trivy?logo=docker&amp;amp;label=docker%20pulls%20%2F%20trivy" alt="Docker Pulls" /&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://trivy.dev/latest/docs/"&gt;📖 Documentation&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;Trivy (&lt;a href="https://raw.githubusercontent.com/aquasecurity/trivy/main/#how-to-pronounce-the-name-trivy"&gt;pronunciation&lt;/a&gt;) is a comprehensive and versatile security scanner. Trivy has &lt;em&gt;scanners&lt;/em&gt; that look for security issues, and &lt;em&gt;targets&lt;/em&gt; where it can find those issues.&lt;/p&gt; 
&lt;p&gt;Targets (what Trivy can scan):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Container Image&lt;/li&gt; 
 &lt;li&gt;Filesystem&lt;/li&gt; 
 &lt;li&gt;Git Repository (remote)&lt;/li&gt; 
 &lt;li&gt;Virtual Machine Image&lt;/li&gt; 
 &lt;li&gt;Kubernetes&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Scanners (what Trivy can find there):&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;OS packages and software dependencies in use (SBOM)&lt;/li&gt; 
 &lt;li&gt;Known vulnerabilities (CVEs)&lt;/li&gt; 
 &lt;li&gt;IaC issues and misconfigurations&lt;/li&gt; 
 &lt;li&gt;Sensitive information and secrets&lt;/li&gt; 
 &lt;li&gt;Software licenses&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy supports most popular programming languages, operating systems, and platforms. For a complete list, see the &lt;a href="https://trivy.dev/latest/docs/coverage/"&gt;Scanning Coverage&lt;/a&gt; page.&lt;/p&gt; 
&lt;p&gt;To learn more, go to the &lt;a href="https://trivy.dev"&gt;Trivy homepage&lt;/a&gt; for feature highlights, or to the &lt;a href="https://trivy.dev/latest/docs/"&gt;Documentation site&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h2&gt;Quick Start&lt;/h2&gt; 
&lt;h3&gt;Get Trivy&lt;/h3&gt; 
&lt;p&gt;Trivy is available in most common distribution channels. The full list of installation options is available in the &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;docker run aquasec/trivy&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Download binary from &lt;a href="https://github.com/aquasecurity/trivy/releases/latest/"&gt;https://github.com/aquasecurity/trivy/releases/latest/&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/getting-started/installation/"&gt;Installation&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Trivy is integrated with many popular platforms and applications. The complete list of integrations is available in the &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; page. Here are a few popular examples:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-action"&gt;GitHub Actions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-operator"&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aquasecurity/trivy-vscode-extension"&gt;VS Code plugin&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://trivy.dev/latest/ecosystem/"&gt;Ecosystem&lt;/a&gt; for more&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Canary builds&lt;/h3&gt; 
&lt;p&gt;There are canary builds (&lt;a href="https://hub.docker.com/r/aquasec/trivy/tags?page=1&amp;amp;name=canary"&gt;Docker Hub&lt;/a&gt;, &lt;a href="https://github.com/aquasecurity/trivy/pkgs/container/trivy/75776514?tag=canary"&gt;GitHub&lt;/a&gt;, &lt;a href="https://gallery.ecr.aws/aquasecurity/trivy#canary"&gt;ECR&lt;/a&gt; images and &lt;a href="https://github.com/aquasecurity/trivy/actions/workflows/canary.yaml"&gt;binaries&lt;/a&gt;) as generated every push to main branch.&lt;/p&gt; 
&lt;p&gt;Please be aware: canary builds might have critical bugs, it's not recommended for use in production.&lt;/p&gt; 
&lt;h3&gt;General usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy &amp;lt;target&amp;gt; [--scanners &amp;lt;scanner1,scanner2&amp;gt;] &amp;lt;subject&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Examples:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy image python:3.4-alpine
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov"&gt;https://user-images.githubusercontent.com/1161307/171013513-95f18734-233d-45d3-aaf5-d6aec687db0e.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy fs --scanners vuln,secret,misconfig myproject/
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov"&gt;https://user-images.githubusercontent.com/1161307/171013917-b1f37810-f434-465c-b01a-22de036bd9b3.mov&lt;/a&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;trivy k8s --report summary cluster
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;Result&lt;/summary&gt; 
 &lt;p&gt;&lt;img src="https://raw.githubusercontent.com/aquasecurity/trivy/main/docs/imgs/trivy-k8s.png" alt="k8s summary" /&gt;&lt;/p&gt; 
&lt;/details&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How to pronounce the name "Trivy"?&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;tri&lt;/code&gt; is pronounced like &lt;strong&gt;tri&lt;/strong&gt;gger, &lt;code&gt;vy&lt;/code&gt; is pronounced like en&lt;strong&gt;vy&lt;/strong&gt;.&lt;/p&gt; 
&lt;h2&gt;Want more? Check out Aqua&lt;/h2&gt; 
&lt;p&gt;If you liked Trivy, you will love Aqua which builds on top of Trivy to provide even more enhanced capabilities for a complete security management offering.&lt;br /&gt; You can find a high level comparison table specific to Trivy users &lt;a href="https://trivy.dev/latest/commercial/compare/"&gt;here&lt;/a&gt;. In addition check out the &lt;a href="https://aquasec.com"&gt;https://aquasec.com&lt;/a&gt; website for more information about our products and services. If you'd like to contact Aqua or request a demo, please use this form: &lt;a href="https://www.aquasec.com/demo"&gt;https://www.aquasec.com/demo&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;Trivy is an &lt;a href="https://aquasec.com"&gt;Aqua Security&lt;/a&gt; open source project.&lt;br /&gt; Learn about our open source work and portfolio &lt;a href="https://www.aquasec.com/products/open-source-projects/"&gt;here&lt;/a&gt;.&lt;br /&gt; Contact us about any matter by opening a GitHub Discussion &lt;a href="https://github.com/aquasecurity/trivy/discussions"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please ensure to abide by our &lt;a href="https://github.com/aquasecurity/community/raw/main/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; during all interactions.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>influxdata/telegraf</title>
      <link>https://github.com/influxdata/telegraf</link>
      <description>&lt;p&gt;Agent for collecting, processing, aggregating, and writing metrics, logs, and other arbitrary data.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://raw.githubusercontent.com/influxdata/telegraf/master/assets/TelegrafTigerSmall.png" alt="tiger" title="tiger" /&gt; Telegraf&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://godoc.org/github.com/influxdata/telegraf"&gt;&lt;img src="https://img.shields.io/badge/doc-reference-00ADD8.svg?logo=go" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/_/telegraf/"&gt;&lt;img src="https://img.shields.io/docker/pulls/library/telegraf.svg?sanitize=true" alt="Docker pulls" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/influxdata/telegraf"&gt;&lt;img src="https://goreportcard.com/badge/github.com/influxdata/telegraf" alt="Go Report Card" /&gt;&lt;/a&gt; &lt;a href="https://circleci.com/gh/influxdata/telegraf"&gt;&lt;img src="https://circleci.com/gh/influxdata/telegraf.svg?style=svg" alt="Circle CI" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Telegraf is an agent for collecting, processing, aggregating, and writing metrics, logs, and other arbitrary data.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Offers a comprehensive suite of over 300 plugins, covering a wide range of functionalities including system monitoring, cloud services, and message passing&lt;/li&gt; 
 &lt;li&gt;Enables the integration of user-defined code to collect, transform, and transmit data efficiently&lt;/li&gt; 
 &lt;li&gt;Compiles into a standalone static binary without any external dependencies, ensuring a streamlined deployment process&lt;/li&gt; 
 &lt;li&gt;Utilizes TOML for configuration, providing a user-friendly and unambiguous setup experience&lt;/li&gt; 
 &lt;li&gt;Developed with contributions from a diverse community of over 1,200 contributors&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Users can choose plugins from a wide range of topics, including but not limited to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Devices: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/opcua"&gt;OPC UA&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/modbus"&gt;Modbus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Logs: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/file"&gt;File&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/tail"&gt;Tail&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/directory_monitor"&gt;Directory Monitor&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Messaging: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/amqp_consumer"&gt;AMQP&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/kafka_consumer"&gt;Kafka&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mqtt_consumer"&gt;MQTT&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Monitoring: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/opentelemetry"&gt;OpenTelemetry&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/prometheus"&gt;Prometheus&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Networking: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/cisco_telemetry_mdt"&gt;Cisco TelemetryMDT&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/gnmi"&gt;gNMI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;System monitoring: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/cpu"&gt;CPU&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/mem"&gt;Memory&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/disk"&gt;Disk&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/net"&gt;Network&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/smartctl"&gt;SMART&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/docker"&gt;Docker&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/nvidia_smi"&gt;Nvidia SMI&lt;/a&gt;, etc.&lt;/li&gt; 
 &lt;li&gt;Universal: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/exec"&gt;Exec&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http"&gt;HTTP&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/http_listener_v2"&gt;HTTP Listener&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/snmp"&gt;SNMP&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/sql"&gt;SQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Windows: &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_eventlog"&gt;Event Log&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_wmi"&gt;Management Instrumentation&lt;/a&gt;, &lt;a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/win_perf_counters"&gt;Performance Counters&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🔨 Installation&lt;/h2&gt; 
&lt;p&gt;For binary builds, Docker images, RPM &amp;amp; DEB packages, and other builds of Telegraf, please see the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/INSTALL_GUIDE.md"&gt;install guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;See the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/RELEASES.md"&gt;releases documentation&lt;/a&gt; for details on versioning and when releases are made.&lt;/p&gt; 
&lt;h2&gt;💻 Usage&lt;/h2&gt; 
&lt;p&gt;Users define a TOML configuration with the plugins and settings they wish to use, then pass that configuration to Telegraf. The Telegraf agent then collects data from inputs at each interval and sends data to outputs at each flush interval.&lt;/p&gt; 
&lt;p&gt;For a basic walkthrough see &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/QUICK_START.md"&gt;quick start&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;📖 Documentation&lt;/h2&gt; 
&lt;p&gt;For a full list of documentation including tutorials, reference and other material, start with the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/README.md"&gt;/docs directory&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Additionally, each plugin has its own README that includes details about how to configure, use, and sometimes debug or troubleshoot. Look under the &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/plugins/"&gt;/plugins directory&lt;/a&gt; for specific plugins.&lt;/p&gt; 
&lt;p&gt;Here are some commonly used documents:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/CHANGELOG.md"&gt;Changelog&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/CONFIGURATION.md"&gt;Configuration&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/docs/FAQ.md"&gt;FAQ&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/influxdata/telegraf/releases"&gt;Releases&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/SECURITY.md"&gt;Security&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;❤️ Contribute&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/influxdata/telegraf/raw/master/CONTRIBUTING.md"&gt;&lt;img src="https://img.shields.io/badge/contribute-to_telegraf-blue.svg?logo=influxdb" alt="Contribute" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;We love our community of over 1,200 contributors! Many of the plugins included in Telegraf were originally contributed by community members. Check out our &lt;a href="https://raw.githubusercontent.com/influxdata/telegraf/master/CONTRIBUTING.md"&gt;contributing guide&lt;/a&gt; if you are interested in helping out. Also, join us on our &lt;a href="https://influxdata.com/slack"&gt;Community Slack&lt;/a&gt; or &lt;a href="https://community.influxdata.com/"&gt;Community Forums&lt;/a&gt; if you have questions or comments for our engineering teams.&lt;/p&gt; 
&lt;p&gt;If you are completely new to Telegraf and InfluxDB, you can also enroll for free at &lt;a href="https://www.influxdata.com/university/"&gt;InfluxDB university&lt;/a&gt; to take courses to learn more.&lt;/p&gt; 
&lt;h2&gt;ℹ️ Support&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.influxdata.com/slack"&gt;&lt;img src="https://img.shields.io/badge/slack-join_chat-blue.svg?logo=slack" alt="Slack" /&gt;&lt;/a&gt; &lt;a href="https://community.influxdata.com/"&gt;&lt;img src="https://img.shields.io/badge/discourse-join_forums-blue.svg?logo=discourse" alt="Forums" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Please use the &lt;a href="https://influxdata.com/slack"&gt;Community Slack&lt;/a&gt; or &lt;a href="https://community.influxdata.com/"&gt;Community Forums&lt;/a&gt; if you have questions or comments for our engineering teams. GitHub issues are limited to actual issues and feature requests only.&lt;/p&gt; 
&lt;h2&gt;📜 License&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/influxdata/telegraf/raw/master/LICENSE"&gt;&lt;img src="https://img.shields.io/badge/license-MIT-blue" alt="MIT" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>golang-migrate/migrate</title>
      <link>https://github.com/golang-migrate/migrate</link>
      <description>&lt;p&gt;Database migrations. CLI and Golang library.&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;a href="https://github.com/golang-migrate/migrate/actions/workflows/ci.yaml?query=branch%3Amaster"&gt;&lt;img src="https://img.shields.io/github/actions/workflow/status/golang-migrate/migrate/ci.yaml?branch=master" alt="GitHub Workflow Status (branch)" /&gt;&lt;/a&gt; &lt;a href="https://pkg.go.dev/github.com/golang-migrate/migrate/v4"&gt;&lt;img src="https://pkg.go.dev/badge/github.com/golang-migrate/migrate" alt="GoDoc" /&gt;&lt;/a&gt; &lt;a href="https://coveralls.io/github/golang-migrate/migrate?branch=master"&gt;&lt;img src="https://img.shields.io/coveralls/github/golang-migrate/migrate/master.svg?sanitize=true" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://packagecloud.io/golang-migrate/migrate?filter=debs"&gt;&lt;img src="https://img.shields.io/badge/deb-packagecloud.io-844fec.svg?sanitize=true" alt="packagecloud.io" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/migrate/migrate/"&gt;&lt;img src="https://img.shields.io/docker/pulls/migrate/migrate.svg?sanitize=true" alt="Docker Pulls" /&gt;&lt;/a&gt; &lt;img src="https://img.shields.io/badge/Go-1.24%2C%201.25-lightgrey.svg?sanitize=true" alt="Supported Go Versions" /&gt; &lt;a href="https://github.com/golang-migrate/migrate/releases"&gt;&lt;img src="https://img.shields.io/github/release/golang-migrate/migrate.svg?sanitize=true" alt="GitHub Release" /&gt;&lt;/a&gt; &lt;a href="https://goreportcard.com/report/github.com/golang-migrate/migrate/v4"&gt;&lt;img src="https://goreportcard.com/badge/github.com/golang-migrate/migrate/v4" alt="Go Report Card" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;migrate&lt;/h1&gt; 
&lt;p&gt;&lt;strong&gt;Database migrations written in Go. Use as &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/#cli-usage"&gt;CLI&lt;/a&gt; or import as &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/#use-in-your-go-project"&gt;library&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Migrate reads migrations from &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/#migration-sources"&gt;sources&lt;/a&gt; and applies them in correct order to a &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/#databases"&gt;database&lt;/a&gt;.&lt;/li&gt; 
 &lt;li&gt;Drivers are "dumb", migrate glues everything together and makes sure the logic is bulletproof. (Keeps the drivers lightweight, too.)&lt;/li&gt; 
 &lt;li&gt;Database drivers don't assume things or try to correct user input. When in doubt, fail.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Forked from &lt;a href="https://github.com/mattes/migrate"&gt;mattes/migrate&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Databases&lt;/h2&gt; 
&lt;p&gt;Database drivers run migrations. &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/driver.go"&gt;Add a new database?&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/postgres"&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/pgx"&gt;PGX v4&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/pgx/v5"&gt;PGX v5&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/redshift"&gt;Redshift&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/ql"&gt;Ql&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/cassandra"&gt;Cassandra / ScyllaDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlite"&gt;SQLite&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlite3"&gt;SQLite3&lt;/a&gt; (&lt;a href="https://github.com/mattes/migrate/issues/165"&gt;todo #165&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlcipher"&gt;SQLCipher&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/mysql"&gt;MySQL / MariaDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/neo4j"&gt;Neo4j&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/mongodb"&gt;MongoDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/crate"&gt;CrateDB&lt;/a&gt; (&lt;a href="https://github.com/mattes/migrate/issues/170"&gt;todo #170&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/shell"&gt;Shell&lt;/a&gt; (&lt;a href="https://github.com/mattes/migrate/issues/171"&gt;todo #171&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/spanner"&gt;Google Cloud Spanner&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/cockroachdb"&gt;CockroachDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/yugabytedb"&gt;YugabyteDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/clickhouse"&gt;ClickHouse&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/firebird"&gt;Firebird&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/sqlserver"&gt;MS SQL Server&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/rqlite"&gt;rqlite&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Database URLs&lt;/h3&gt; 
&lt;p&gt;Database connection strings are specified via URLs. The URL format is driver dependent but generally has the form: &lt;code&gt;dbdriver://username:password@host:port/dbname?param1=true&amp;amp;param2=false&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;Any &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_reserved_characters"&gt;reserved URL characters&lt;/a&gt; need to be escaped. Note, the &lt;code&gt;%&lt;/code&gt; character also &lt;a href="https://en.wikipedia.org/wiki/Percent-encoding#Percent-encoding_the_percent_character"&gt;needs to be escaped&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Explicitly, the following characters need to be escaped: &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;, &lt;code&gt;&amp;amp;&lt;/code&gt;, &lt;code&gt;'&lt;/code&gt;, &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;,&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt;, &lt;code&gt;;&lt;/code&gt;, &lt;code&gt;=&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;[&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;It's easiest to always run the URL parts of your DB connection URL (e.g. username, password, etc) through an URL encoder. See the example Python snippets below:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ python3 -c 'import urllib.parse; print(urllib.parse.quote(input("String to encode: "), ""))'
String to encode: FAKEpassword!#$%&amp;amp;'()*+,/:;=?@[]
FAKEpassword%21%23%24%25%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D
$ python2 -c 'import urllib; print urllib.quote(raw_input("String to encode: "), "")'
String to encode: FAKEpassword!#$%&amp;amp;'()*+,/:;=?@[]
FAKEpassword%21%23%24%25%26%27%28%29%2A%2B%2C%2F%3A%3B%3D%3F%40%5B%5D
$
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Migration Sources&lt;/h2&gt; 
&lt;p&gt;Source drivers read migrations from local or remote sources. &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/driver.go"&gt;Add a new source?&lt;/a&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/file"&gt;Filesystem&lt;/a&gt; - read from filesystem&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/iofs"&gt;io/fs&lt;/a&gt; - read from a Go &lt;a href="https://pkg.go.dev/io/fs#FS"&gt;io/fs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/go_bindata"&gt;Go-Bindata&lt;/a&gt; - read from embedded binary data (&lt;a href="https://github.com/jteeuwen/go-bindata"&gt;jteeuwen/go-bindata&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/pkger"&gt;pkger&lt;/a&gt; - read from embedded binary data (&lt;a href="https://github.com/markbates/pkger"&gt;markbates/pkger&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/github"&gt;GitHub&lt;/a&gt; - read from remote GitHub repositories&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/github_ee"&gt;GitHub Enterprise&lt;/a&gt; - read from remote GitHub Enterprise repositories&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/bitbucket"&gt;Bitbucket&lt;/a&gt; - read from remote Bitbucket repositories&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/gitlab"&gt;Gitlab&lt;/a&gt; - read from remote Gitlab repositories&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/aws_s3"&gt;AWS S3&lt;/a&gt; - read from Amazon Web Services S3&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/source/google_cloud_storage"&gt;Google Cloud Storage&lt;/a&gt; - read from Google Cloud Platform Storage&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;CLI usage&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Simple wrapper around this library.&lt;/li&gt; 
 &lt;li&gt;Handles ctrl+c (SIGINT) gracefully.&lt;/li&gt; 
 &lt;li&gt;No config search paths, no config files, no magic ENV var injections.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/cmd/migrate"&gt;CLI Documentation&lt;/a&gt; (includes CLI install instructions)&lt;/p&gt; 
&lt;h3&gt;Basic usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ migrate -source file://path/to/migrations -database postgres://localhost:5432/database up 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docker usage&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;$ docker run -v {{ migration dir }}:/migrations --network host migrate/migrate
    -path=/migrations/ -database postgres://localhost:5432/database up 2
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Use in your Go project&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;API is stable and frozen for this release (v3 &amp;amp; v4).&lt;/li&gt; 
 &lt;li&gt;Uses &lt;a href="https://golang.org/cmd/go/#hdr-Modules__module_versions__and_more"&gt;Go modules&lt;/a&gt; to manage dependencies.&lt;/li&gt; 
 &lt;li&gt;To help prevent database corruptions, it supports graceful stops via &lt;code&gt;GracefulStop chan bool&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Bring your own logger.&lt;/li&gt; 
 &lt;li&gt;Uses &lt;code&gt;io.Reader&lt;/code&gt; streams internally for low memory overhead.&lt;/li&gt; 
 &lt;li&gt;Thread-safe and no goroutine leaks.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;&lt;a href="https://pkg.go.dev/github.com/golang-migrate/migrate/v4"&gt;Go Documentation&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "github.com/golang-migrate/migrate/v4"
    _ "github.com/golang-migrate/migrate/v4/database/postgres"
    _ "github.com/golang-migrate/migrate/v4/source/github"
)

func main() {
    m, err := migrate.New(
        "github://mattes:personal-access-token@mattes/migrate_test",
        "postgres://localhost:5432/database?sslmode=enable")
    m.Steps(2)
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Want to use an existing database client?&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-go"&gt;import (
    "database/sql"
    _ "github.com/lib/pq"
    "github.com/golang-migrate/migrate/v4"
    "github.com/golang-migrate/migrate/v4/database/postgres"
    _ "github.com/golang-migrate/migrate/v4/source/file"
)

func main() {
    db, err := sql.Open("postgres", "postgres://localhost:5432/database?sslmode=enable")
    driver, err := postgres.WithInstance(db, &amp;amp;postgres.Config{})
    m, err := migrate.NewWithDatabaseInstance(
        "file:///migrations",
        "postgres", driver)
    m.Up() // or m.Steps(2) if you want to explicitly set the number of migrations to run
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;Go to &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/GETTING_STARTED.md"&gt;getting started&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Tutorials&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/cockroachdb/TUTORIAL.md"&gt;CockroachDB&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/database/postgres/TUTORIAL.md"&gt;PostgreSQL&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;(more tutorials to come)&lt;/p&gt; 
&lt;h2&gt;Migration files&lt;/h2&gt; 
&lt;p&gt;Each migration has an up and down migration. &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/FAQ.md#why-two-separate-files-up-and-down-for-a-migration"&gt;Why?&lt;/a&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;1481574547_create_users_table.up.sql
1481574547_create_users_table.down.sql
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/MIGRATIONS.md"&gt;Best practices: How to write migrations.&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Coming from another db migration tool?&lt;/h2&gt; 
&lt;p&gt;Check out &lt;a href="https://github.com/musinit/migradaptor/"&gt;migradaptor&lt;/a&gt;. &lt;em&gt;Note: migradaptor is not affiliated or supported by this project&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Versions&lt;/h2&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Version&lt;/th&gt; 
   &lt;th&gt;Supported?&lt;/th&gt; 
   &lt;th&gt;Import&lt;/th&gt; 
   &lt;th&gt;Notes&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;master&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;import "github.com/golang-migrate/migrate/v4"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;New features and bug fixes arrive here first&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;v4&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;✅&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;import "github.com/golang-migrate/migrate/v4"&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Used for stable releases&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;v3&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;span&gt;❌&lt;/span&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;import "github.com/golang-migrate/migrate"&lt;/code&gt; (with package manager) or &lt;code&gt;import "gopkg.in/golang-migrate/migrate.v3"&lt;/code&gt; (not recommended)&lt;/td&gt; 
   &lt;td&gt;&lt;strong&gt;DO NOT USE&lt;/strong&gt; - No longer supported&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h2&gt;Development and Contributing&lt;/h2&gt; 
&lt;p&gt;Yes, please! &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/Makefile"&gt;&lt;code&gt;Makefile&lt;/code&gt;&lt;/a&gt; is your friend, read the &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/CONTRIBUTING.md"&gt;development guide&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Also have a look at the &lt;a href="https://raw.githubusercontent.com/golang-migrate/migrate/master/FAQ.md"&gt;FAQ&lt;/a&gt;.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p&gt;Looking for alternatives? &lt;a href="https://awesome-go.com/#database"&gt;https://awesome-go.com/#database&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>