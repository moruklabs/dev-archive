<rss version="2.0">
  <channel>
    <title>GitHub JavaScript Daily Trending</title>
    <description>Daily Trending of JavaScript in GitHub</description>
    <pubDate>Sat, 30 Aug 2025 01:32:58 GMT</pubDate>
    <link>http://mshibanami.github.io/GitHubTrendingRSS</link>
    
    <item>
      <title>asgeirtj/system_prompts_leaks</title>
      <link>https://github.com/asgeirtj/system_prompts_leaks</link>
      <description>&lt;p&gt;Collection of extracted System Prompts from popular chatbots like ChatGPT, Claude &amp; Gemini&lt;/p&gt;&lt;hr&gt;&lt;p&gt;NEW: 23 Aug 2025 &lt;a href="https://github.com/asgeirtj/system_prompts_leaks/raw/main/OpenAI/gpt-5-thinking.md"&gt;OpenAI/gpt-5-thinking.md &lt;/a&gt;&lt;/p&gt; 
&lt;h1&gt;System Prompts Leaks&lt;/h1&gt; 
&lt;p&gt;Collection of system message instructions for various publicly deployed chatbots.&lt;/p&gt; 
&lt;p&gt;Feel free to do PR's.&lt;/p&gt; 
&lt;p&gt;Please use discussions tabs for discussions not the Issues tab.&lt;/p&gt; 
&lt;p&gt;Discord username: asgeirtj&lt;br /&gt; X profile: &lt;a href="https://x.com/asgeirtj"&gt;https://x.com/asgeirtj&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#asgeirtj/system_prompts_leaks&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=asgeirtj/system_prompts_leaks&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>therealgliz/blooket-hacks</title>
      <link>https://github.com/therealgliz/blooket-hacks</link>
      <description>&lt;p&gt;Multiple game hacks to use so the game become easier to play!&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;blooket-hack&lt;/h1&gt; 
&lt;p&gt;Hell i'm actually gliz who created the blooket hacks. I got the repo from the guy who was impersonating me.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;This repo will not be updated at all. If you have any questions join the discord server below I'll be answering them.&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;discord server: &lt;a href="https://discord.gg/Nj9Zs5VtFp"&gt;https://discord.gg/Nj9Zs5VtFp&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Proof thats it me: &lt;img src="https://user-images.githubusercontent.com/108590774/177013795-80b0e338-fa58-4eba-837f-340bab0c4e9a.png" alt="image" /&gt;&lt;/p&gt; 
&lt;h1&gt;Contact&lt;/h1&gt; 
&lt;p&gt;if you want to contact me just dm me on twitter &lt;a href="https://twitter.com/glizuwu"&gt;https://twitter.com/glizuwu&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>vitejs/awesome-vite</title>
      <link>https://github.com/vitejs/awesome-vite</link>
      <description>&lt;p&gt;⚡️ A curated list of awesome things related to Vite.js&lt;/p&gt;&lt;hr&gt;&lt;p align="center"&gt; &lt;br /&gt; &lt;img width="400" src="https://raw.githubusercontent.com/vitejs/awesome-vite/master/assets/logo.svg?sanitize=true" alt="logo of awesome-vite repository" /&gt; &lt;br /&gt; &lt;br /&gt; &lt;/p&gt; 
&lt;h2 align="center"&gt;Awesome Vite.js&lt;/h2&gt; 
&lt;p align="center"&gt; A curated list of awesome things related to &lt;a href="https://github.com/vitejs/vite"&gt;Vite.js&lt;/a&gt; &lt;br /&gt;&lt;br /&gt; &lt;a href="https://github.com/sindresorhus/awesome"&gt; &lt;img src="https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg?sanitize=true" alt="Awesome" /&gt; &lt;/a&gt; &lt;/p&gt; 
&lt;!--lint ignore--&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;img src="https://user-images.githubusercontent.com/11247099/112722104-819b8a80-8f42-11eb-82f5-dfc2dd5d8a77.png" height="32" /&gt; 
&lt;p&gt;Use the "Table of Contents" menu on the top-right corner to explore the list.&lt;/p&gt; 
&lt;h2&gt;Resources&lt;/h2&gt; 
&lt;h3&gt;Official Resources&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vitejs.dev/"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite"&gt;GitHub Repo&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite/raw/main/packages/vite/CHANGELOG.md"&gt;Release Notes&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vuejs.org/"&gt;Vue 3 Docs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vuejs/awesome-vue"&gt;Awesome Vue&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitejs.dev/guide/migration.html"&gt;Migration from v4&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--### Tutorials--&gt; 
&lt;h2&gt;Get Started&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/create-vite"&gt;create-vite&lt;/a&gt; - Scaffolding Your First Vite Project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huibizhang/vitawind/tree/package/create-vitawind"&gt;create-vitawind&lt;/a&gt; - Scaffolding for TailwindCSS project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron-vite/create-electron-vite"&gt;create-electron-vite&lt;/a&gt; - Scaffolding Your Electron + Vite Project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ErKeLost/create-vite-app"&gt;create-vite-app&lt;/a&gt; - Scaffolding Your Out Of The Box Vite Project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nrwl/nx"&gt;create-nx-workspace&lt;/a&gt; - Scaffolding a Nx + React + Vite + Vitest.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/batijs/bati"&gt;bati&lt;/a&gt; - Scaffolding a Vike project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Create-Node-App/create-node-app"&gt;create-awesome-node-app&lt;/a&gt; - Scaffolding your project choosing between different templates.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Templates&lt;/h3&gt; 
&lt;h4&gt;Vanilla&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kbysiec/vite-vanilla-ts-lib-starter"&gt;vite-vanilla-ts-lib-starter&lt;/a&gt; - Starter for library (CJS, ESM, IIFE) with TypeScript, ESLint, Stylelint, Prettier, Jest, Husky + lint-staged.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kometolabs/vite-tailwind-nojs-starter"&gt;vite-tailwind-nojs-starter&lt;/a&gt; - NoJS Tailwind CSS starter template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jeremyfrank/vite-tailwind-stimulus-starter"&gt;vite-tailwind-stimulus-starter&lt;/a&gt; - Starter template for Tailwind CSS and Stimulus controllers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iwantantra/vite-phaser-ts"&gt;vite-phaser-ts&lt;/a&gt; - Starter template with Phaser and Typescript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tinyplex/vite-tinybase"&gt;vite-tinybase&lt;/a&gt; - Starter template for TinyBase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tinyplex/vite-tinybase-ts"&gt;vite-tinybase-ts&lt;/a&gt; - Starter template for TinyBase and TypeScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Barata-Ribeiro/vite-vanilla-js-template"&gt;vite-vanilla-js-template&lt;/a&gt; - Starter template ESlint, Prettier, PostCSS, Nesting, Autoprefixer, CSS Nano, CSS Reset.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Grinch3214/vite-starter-markup-template"&gt;vite-starter-markup-template&lt;/a&gt; - Starter template for Markup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rossrobino/domco/tree/main/packages/create-domco"&gt;create-domco&lt;/a&gt; - Starter template for domco.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hywax/vite-vanilla-library-template"&gt;vite-vanilla-library-template&lt;/a&gt; - Starter template TypeScript, ESLint, Vitest, Husky, Conventional Commits, GitHub actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dvd101x/vite-alpine"&gt;vite-alpine-template&lt;/a&gt; - Starter template for Alpine.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matronator/vite-ts-lib-starter"&gt;vite-ts-lib-starter&lt;/a&gt; - Starter template for libraries with TypeScript, Bun, Vitest, Prettier, Renovate and np.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lukefernandez/vite-swagger-ui"&gt;vite-swagger-ui&lt;/a&gt; - Swagger UI with built-in support for multiple APIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phaserjs/template-vite"&gt;template-vite&lt;/a&gt; - An official quickstart template with Phaser.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/phaserjs/template-vite-ts"&gt;template-vite-ts&lt;/a&gt; - An official quickstart template with Phaser and TypeScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/naoki-00-ito/vite-ts-bulma-sass-template"&gt;vite-ts-bulma-sass-template&lt;/a&gt; - Starter template &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Bulma&lt;/code&gt;, &lt;code&gt;Sass&lt;/code&gt;, &lt;code&gt;Stylelint&lt;/code&gt;, &lt;code&gt;Biome&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Vue 3&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/vitesse"&gt;Vitesse&lt;/a&gt; - Opinionated starter template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Uninen/vite-ts-tailwind-starter"&gt;vite-ts-tailwind-starter&lt;/a&gt; - TypeScript, Tailwind CSS, Cypress.io e2e tests + CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anncwb/vue-vben-admin"&gt;vue-vben-admin&lt;/a&gt; - Background management template based on Vue3, Ant-Design-Vue, TypeScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaoxian521/vue-pure-admin"&gt;vue-pure-admin&lt;/a&gt; - Background management template based on Vue3, TypeScript, Tailwind CSS, element-plus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fast-crud/fast-crud"&gt;fast-crud&lt;/a&gt; - Options-oriented crud framework, developing crud as fast as lightning.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/vitesse-lite"&gt;vitesse-lite&lt;/a&gt; - Lightweight version of Vitesse.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/vitesse-webext"&gt;vitesse-webext&lt;/a&gt; - WebExtension Vite Starter Template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Innei/naive-ui-dashboard-template"&gt;naive-ui-dashboard-template&lt;/a&gt; - UI friendly, Vue 3 + TSX + TailwindCSS 2 JIT + PostCSS + Naive UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://vitawind.vercel.app/scaffolding/creator/"&gt;Vitawind Creator&lt;/a&gt; - Create TailwindCSS project rapidly.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/feitian124/vue3-tailwind3-website-starter.git"&gt;vue3-tailwind3-website-starter&lt;/a&gt; - Vue3 / Vite / TailwindCSS website starter template, with guides on each page.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirklin/boot-vue"&gt;boot-vue&lt;/a&gt; - Starter template with TypeScript + UnoCSS + DaisyUI + Vue Router + Pinia.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zclzone/vue-naive-admin"&gt;Vue Naive&lt;/a&gt; - Admin template, base on Vue 3 + Pinia + Naive UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cmdparkour/vue-admin-box"&gt;vue-admin-box&lt;/a&gt; - Admin template, based on Vue 3 + Element-plus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyhxx/vite-vue-proste"&gt;vite-vue-proste&lt;/a&gt; - Pinia + Typescript + Vue-Router4 + Vitest + Vue-Test-Utils + Vue-Query + Sass + ESLint + Stylelint + Prettier + &lt;code&gt;project presets&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EverSeenTOTOTO/browser-app-boilerplate/tree/vue-vite-ssr"&gt;vue-vite-ssr&lt;/a&gt; - Typescript, Eslint, Stylelint, Husky, Lint-staged and Commitlint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/easy-temps/vue3-vant-mobile"&gt;vue3-vant-mobile&lt;/a&gt; - Vite5 + Vue3 + Vant4 + Pinia + Vue-Router4 + TypeScript Mobile Template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChronosMasterOfAllTime/vue-vite-tw-ts"&gt;vue-vite-tw-ts&lt;/a&gt; - Vue 3 + Vite + Vitest + Cypress E2E + Naive UI + Pinia + Vue Router.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ElanYoung/vite-vue-js-starter-template"&gt;vite-vue-js-starter-template&lt;/a&gt; - Vite + Vue3 + JavaScript + Vue Router + Pinia + TDesign + ESLint + Stylelint + Prettier Simple Template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsxiaosi/vue-xs-admin"&gt;vue-xs-admin&lt;/a&gt; - Based on Vue3, Vite3 ElementPlus, TypeScript, Pinia, VueRouter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pengzhanbo/vulcan"&gt;vulcan&lt;/a&gt; - The template for mobile application. Vite, Vue 3, TypeScript, Sass, i18n, Vitest&amp;amp;Cypress, Pinia, APIs&amp;amp;Mock, ESLint, Prettier, auto-importing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antdv-pro/antdv-pro"&gt;antdv-pro&lt;/a&gt; - AntdvPro is a complete set of enterprise-level mid-backend front-end/design solutions based on Vue3, Vite4, ant-design-vue4, Pinia, UnoCSS and Typescript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wforguo/vue3-quick-start"&gt;vue3-quick-start&lt;/a&gt; - Building an engineered Vue 3 project, integrated with &lt;code&gt;Vite&lt;/code&gt; + &lt;code&gt;Vue3&lt;/code&gt; + &lt;code&gt;TypeScript&lt;/code&gt; + &lt;code&gt;ESLint&lt;/code&gt; + &lt;code&gt;Prettier&lt;/code&gt; + &lt;code&gt;Commitizen&lt;/code&gt; + &lt;code&gt;Husky&lt;/code&gt; + &lt;code&gt;LintStaged&lt;/code&gt; + &lt;code&gt;CommitLint&lt;/code&gt; + &lt;code&gt;AutoImport&lt;/code&gt; + &lt;code&gt;ReleaseIt&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Zuojiangtao/antd-vue3-admin"&gt;antd-vue3-admin&lt;/a&gt; - A starter template based on Vue3, Vite4, TS5 and Ant-Design-Vue4.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/canopas/vue-file-upload"&gt;vue-file-upload&lt;/a&gt; - A file management system built with &lt;code&gt;Vue3&lt;/code&gt; and &lt;code&gt;TypeScript&lt;/code&gt; that allows for single and multiple file uploading with a preview feature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/LIjiAngChen8/arco-admin"&gt;arco-admin&lt;/a&gt; - &lt;code&gt;Vite&lt;/code&gt; + &lt;code&gt;ArcoDesign&lt;/code&gt; + &lt;code&gt;TypeScript&lt;/code&gt; follows &lt;code&gt;ESM&lt;/code&gt; standards, offering an out-of-the-box,standardized, feature-rich template for middle and back-office management systems.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/themeselection/materio-vuetify-nuxtjs-admin-template-free"&gt;materio-free-vuetify-nuxtjs-admin-template&lt;/a&gt; - Vuejs 3, Vite 5, Vuetify 3 &amp;amp; NuxtJS 3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhangfisher/vite-plugin-vue-style-bundler"&gt;vite-plugin-vue-style-bundler&lt;/a&gt; - Auto bundle Vue/sfc styles into JavaScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirklin/celeris-web"&gt;celeris-web&lt;/a&gt; - Template based on &lt;code&gt;Vite&lt;/code&gt; + &lt;code&gt;Vue3&lt;/code&gt; + &lt;code&gt;TypeScript&lt;/code&gt; + &lt;code&gt;Vue-Router&lt;/code&gt; + &lt;code&gt;Pinia&lt;/code&gt; + &lt;code&gt;Unocss&lt;/code&gt; + &lt;code&gt;Naive UI&lt;/code&gt; + &lt;code&gt;pnpm Monorepo&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pdsuwwz/vite-ts-starter"&gt;vite-ts-starter&lt;/a&gt; - Vue &lt;code&gt;I18n&lt;/code&gt; Dynamic Router Localization Template, Internationalized Applications with &lt;code&gt;UnoCSS&lt;/code&gt; + &lt;code&gt;Unplugin&lt;/code&gt; + &lt;code&gt;Element-Plus&lt;/code&gt; + &lt;code&gt;Vitest&lt;/code&gt; + &lt;code&gt;TypeScript&lt;/code&gt; + &lt;code&gt;Vue-Router&lt;/code&gt; + &lt;code&gt;Vuex&lt;/code&gt; + &lt;code&gt;Scss&lt;/code&gt; + &lt;code&gt;ESLint&lt;/code&gt; + &lt;code&gt;Stylelint&lt;/code&gt; + &lt;code&gt;Husky&lt;/code&gt; + &lt;code&gt;lint-staged&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/martinille/starter-template-vite-vue3-sass-tailwind4-daisyui5"&gt;vite-vue3-tailwind4-daisyui5-starter-template&lt;/a&gt; - Starter template with Vue 3 + Vite + Tailwind CSS 4 + DaisyUI 5 + Sass.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Vue 2&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lstoeferle/vite-vue2-windicss-starter"&gt;vite-vue2-windicss-starter&lt;/a&gt; - Vue 2, Vue Router, Composition API, VueUse, Windi CSS and TypeScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logue/vite-vue2-ts-starter"&gt;vite-vue2-ts-starter&lt;/a&gt; - Vue2 TypeScript starter template using vue-property-decorator, vue-router, Vuex.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/logue/vite-vue2-vuetify-ts-starter"&gt;vite-vue2-ts-vuetify-starter&lt;/a&gt; - It is the above vite-vue2-ts-starter with Vuetify and its optimized settings. Includes basic templates.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kingyue737/vitify-admin"&gt;vitify-admin&lt;/a&gt; - Vuetify admin starter template with full TypeScript support and intellisense of Vuetify components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;React&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wtchnm/Vitamin"&gt;Vitamin&lt;/a&gt; - React TypeScript, TailwindCSS, SPA + PWA, Cypress and CI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SafdarJamal/vite-template-react"&gt;vite-template-react&lt;/a&gt; - A Create React App-like template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jihchi/vitejs-template-react-rescript"&gt;vitejs-template-react-rescript&lt;/a&gt; - React + ReScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lzm0x219/template-vite-react"&gt;template-vite-react&lt;/a&gt; - A minimal React Vite starter template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/joaopaulomoraes/reactjs-vite-tailwindcss-boilerplate"&gt;reactjs-vite-tailwindcss-boilerplate&lt;/a&gt; - React 18, TypeScript, Vitest, Testing Library, TailwindCSS 3, Eslint and Prettier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TeXmeijin/vite-react-ts-tailwind-firebase-starter"&gt;vite-react-ts-tailwind-firebase-starter&lt;/a&gt; - Starter using Vite + React + TypeScript + Tailwind CSS (daisyUI) + Firebase (v9) + Prettier + ESLint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/laststance/create-react-app-vite"&gt;create-react-app-vite&lt;/a&gt; - React, TypeScript, TailwindCSS, MSW, Vitest, React Testing Library, ESLint, Prettier, GitHub Actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Jonghakseo/chrome-extension-boilerplate-react-vite"&gt;chrome-extension-boilerplate-react-vite&lt;/a&gt; - React + TypeScript + SASS + Prettier + ESLint + GitHub Actions + HMR(Hot Module Reload) + Turborepo + Chrome Extension Manifest v3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/laststance/vite-rtk-query"&gt;vite-rtk-query&lt;/a&gt; - React, TypeScript, Redux Toolkit, RTK Query, TailwindCSS, MSW, Jest, React Testing Library, ESLint, Prettier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyhxx/vite-react-proste"&gt;vite-react-proste&lt;/a&gt; - React + TypeScript + &lt;code&gt;react-router-dom&lt;/code&gt; + Recoil + SASS + Testing Library + &lt;code&gt;react-query&lt;/code&gt; + ESLint + Stylelint + Prettier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/suren-atoyan/react-pwa"&gt;React-PWA&lt;/a&gt; - React v18, TypeScript, Vite, React Router v6, MUI v5, Recoil, PWA, Eslint, Prettier, Husky, lint-staged, https localhost and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/EverSeenTOTOTO/browser-app-boilerplate/tree/react-vite-ssr"&gt;react-vite-ssr&lt;/a&gt; - Mobx, Typescript, Eslint, Stylelint, Husky, Lint-staged and Commitlint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/erdoganbulut/viterts/"&gt;Viterts&lt;/a&gt; - React + TypeScript + Redux + React Router + Jest + ESLint + Airbnb + Prettier + SASS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/potreco/viterc"&gt;ViteRC&lt;/a&gt; - React 18 + TypeScript + ESLint (Airbnb) + Prettier + Husky + Jest + Absolute imports + Commit linting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kriasoft/react-starter-kit"&gt;React Starter Kit&lt;/a&gt; - Jamstack, React, React Router, Material UI, Firebase Auth, TypeScript, ESLint, Prettier, Jest, GitHub Actions.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/apicgg/vite-mern-template"&gt;vite-mern-template&lt;/a&gt; - React 18 + TypeScript + Vite + Redux Toolkit + ESLint + React Router DOM + Axios + React Icons + React Toastify + Express + Mongoose.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/altmshfkgudtjr/varsarr"&gt;Varsarr&lt;/a&gt; - React, Typescript, Styled-Components, Recoil, React-Query, Axios, Absolute imports.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emre-cil/viterjs-template"&gt;viterjs-template&lt;/a&gt; - React + JavaScript + Redux + Material UI + Axios + ESLint + Prettier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/choisohyun/react-vite-ts-boilerplate"&gt;react-vite-ts-boilerplate&lt;/a&gt; - React 18, TypeScript, SCSS, ESLint, Prettier, Vitest.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/laoer536/vite3.0-react18-TypeScript-router-dom6-mobx6-Eslint-prettier-template"&gt;vite-react-universal-template&lt;/a&gt; - React18 + TypeScript + &lt;code&gt;react-router-dom&lt;/code&gt; + Zustand + ESlint + Prettier + Stylelint + Husky + Docker, and APIs auto importing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/985563349/react-vite-template"&gt;react-vite-template&lt;/a&gt; - A react project template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jsxiaosi/react-xs-admin"&gt;react-xs-admin&lt;/a&gt; - The background management system template developed based on React18 + ReactRouteV6 + Vite + And Design + ReactIntl + ReactRedux + Emulation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emre-cil/vite-mui-ts"&gt;vite-mui-ts&lt;/a&gt; - React + TypeScript + Redux + Material UI + RRD + ESLint + Prettier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RoyRao2333/template-vite-react-ts-tailwind"&gt;template-vite-react-ts-tailwind&lt;/a&gt; - React + TypeScript + Tailwind CSS + Eslint + Prettier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bartstc/vite-ts-react-template"&gt;vite-react-ts-template&lt;/a&gt; - React 18, TypeScript, ESlint, Prettier, Dev Container, Vitest, Storybook, Playwright, MSW, React Router 6, React Query, Chakra UI, Zustand.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/quavedev/react-vite-tailwindcss-template"&gt;react-vite-tailwindcss-template&lt;/a&gt; - React, JavaScript, TailwindCSS, ESlint, Prettier, Pre-commit.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tinyplex/vite-tinybase-react"&gt;vite-tinybase-react&lt;/a&gt; - Starter template for TinyBase and React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tinyplex/vite-tinybase-ts-react"&gt;vite-tinybase-ts-react&lt;/a&gt; - Starter template for TinyBase, TypeScript, and React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lomray-Software/vite-template"&gt;vite-react-ssr-boost-template&lt;/a&gt; - Template for creating &lt;code&gt;React 18&lt;/code&gt; SSR/SPA apps with &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Mobx&lt;/code&gt;, &lt;code&gt;React Router&lt;/code&gt;, &lt;code&gt;Head Manager&lt;/code&gt;, Suspense, Streaming. Also included CI/CD, &lt;code&gt;ESLint&lt;/code&gt;, &lt;code&gt;Prettier&lt;/code&gt;, &lt;code&gt;Stylelint&lt;/code&gt;, &lt;code&gt;Husky&lt;/code&gt;, &lt;code&gt;Semantic Release&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Quilljou/vite-react-ts-tailwind-starter"&gt;vite-react-ts-shadcn-starter&lt;/a&gt; - Template for creating &lt;code&gt;React 18&lt;/code&gt; SPA apps with &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;React Router&lt;/code&gt;, &lt;code&gt;Tailwind CSS&lt;/code&gt;, &lt;code&gt;Shadcn UI&lt;/code&gt;, &lt;code&gt;React Query&lt;/code&gt;, &lt;code&gt;ESLint&lt;/code&gt;, &lt;code&gt;Prettier&lt;/code&gt;, &lt;code&gt;Stylelint&lt;/code&gt;, &lt;code&gt;Husky&lt;/code&gt;, &lt;code&gt;React-i18next&lt;/code&gt;, &lt;code&gt;Transmart&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RoyRao2333/template-tauri-vite-react-ts-tailwind"&gt;template-tauri-vite-react-ts-tailwind&lt;/a&gt; - Template for Tauri + React + Typescript + TailwindCSS + Prettier + ESLint build-in.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sozonome/vite-react-chakra-starter"&gt;vite-react-chakra-starter&lt;/a&gt; - Starter template for creating React App with TypeScript and Chakra UI. Configured with ESLint, Prettier, and Husky.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sozonome/vite-react-tailwind-starter"&gt;vite-react-tailwind-starter&lt;/a&gt; - Starter template for creating React App with TypeScript and Tailwind CSS with Shadcn UI. Configured with ESLint, Prettier, and Husky.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stormkit-io/monorepo-template-react"&gt;monorepo-template-react&lt;/a&gt; - React + Typescript template for SSR, SPG, SPA and API provision.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huseyindeniz/vite-react-dapp-template"&gt;vite-react-dapp-template&lt;/a&gt; - Starter template for decentralized app frontend development with preconfigured Wallet Authentication, i18n and UI features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gihanrangana/vite-express-ssr-ts"&gt;vite-express-ssr-ts&lt;/a&gt; - React + Typescript + ExpressJS + Vite SSR template with inbuild api feature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyflow/vite-react-flow-template"&gt;vite-react-flow-template&lt;/a&gt; - React Flow starter template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Mirazex/react-vite-template"&gt;react-vite-template&lt;/a&gt; - React, TypeScript, Vite, Mantine, Million, Husky, Prettier, Import Sorter, Lint-staged.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gravity-ui/gravity-ui-vite-example"&gt;gravity-ui-vite-template&lt;/a&gt; - Template with Gravity UI ecosystem (React, TypeScript, Gravity UI, Vite, Husky, ESLint, Prettier, Lint-staged).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rayyamhk/vite-react-component-library-starter"&gt;vite-react-component-library-starter&lt;/a&gt; - A starter template for creating React component libraries with &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Tailwind CSS&lt;/code&gt;, &lt;code&gt;Storybook&lt;/code&gt;, &lt;code&gt;Vitest&lt;/code&gt;, &lt;code&gt;ESLint&lt;/code&gt;, &lt;code&gt;Prettier&lt;/code&gt;, &lt;code&gt;Husky&lt;/code&gt;, and &lt;code&gt;GitHub Action&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/comnori/vite-template-awesome-soho"&gt;vite-template-awesome-soho&lt;/a&gt; - &lt;code&gt;DevContainer&lt;/code&gt; Template for creating &lt;code&gt;React 18&lt;/code&gt;, &lt;code&gt;Javascript + JSDoc&lt;/code&gt;, &lt;code&gt;React Router&lt;/code&gt;, &lt;code&gt;Ant Design&lt;/code&gt;, &lt;code&gt;ESLint&lt;/code&gt;, &lt;code&gt;EditorConfig&lt;/code&gt;, &lt;code&gt;.env&lt;/code&gt;, &lt;code&gt;SonarLint&lt;/code&gt;, &lt;code&gt;Vitest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gsharath/react-component-library-vite"&gt;react-component-library-vite&lt;/a&gt; - A library template for with &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;Javascript&lt;/code&gt;,&lt;code&gt;Styled-Components&lt;/code&gt;, &lt;code&gt;Vitest&lt;/code&gt;, &lt;code&gt;React Testing Library&lt;/code&gt;, &lt;code&gt;Storybook&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nikolailehbrink/retail"&gt;ReTail&lt;/a&gt; - Starter template for building Full Stack WEB applications with &lt;code&gt;Remix&lt;/code&gt; using &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Tailwind CSS&lt;/code&gt;, &lt;code&gt;Prettier&lt;/code&gt; and &lt;code&gt;ESLint&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Dulajdeshan/vite-react-redux-saga-typescript"&gt;vite-react-redux-saga-typescript&lt;/a&gt; - Starter template with &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Redux (Redux Toolkit)&lt;/code&gt;, &lt;code&gt;Saga&lt;/code&gt;, &lt;code&gt;React Testing Library&lt;/code&gt;, &lt;code&gt;ESLint&lt;/code&gt;, &lt;code&gt;Prettier&lt;/code&gt; and &lt;code&gt;Husky&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ChrisUser/vite-complete-react-app"&gt;vite-complete-react-app&lt;/a&gt; - Starter template for building web applications using &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Redux Toolkit&lt;/code&gt;, &lt;code&gt;React Router&lt;/code&gt;, &lt;code&gt;Axios&lt;/code&gt;, &lt;code&gt;Sass&lt;/code&gt;, &lt;code&gt;Moment&lt;/code&gt;, &lt;code&gt;ESLint&lt;/code&gt;, &lt;code&gt;Prettier&lt;/code&gt; and &lt;code&gt;React Testing Library&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matozz/vite-react-framer-starter"&gt;vite-react-framer-starter&lt;/a&gt; - Starter template with &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Framer Motion&lt;/code&gt;, &lt;code&gt;Tailwind CSS&lt;/code&gt;, &lt;code&gt;ESLint&lt;/code&gt;, and &lt;code&gt;Prettier&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jacobbogers/rollup-plugin-jsx-remove-attributes"&gt;vite-jsx-remove-attributes&lt;/a&gt; - Remove the &lt;code&gt;data-testid&lt;/code&gt; (configurable) from production builds.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/padunk/react-tanning"&gt;React Tanning&lt;/a&gt; - Starter template with &lt;code&gt;React + Vite + TypeScript + TanStack + Tailwind&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ws-rush/reactive"&gt;Reactive&lt;/a&gt; - &lt;code&gt;React&lt;/code&gt; starter template with &lt;code&gt;Remix&lt;/code&gt; file-based routing convention for &lt;code&gt;react-router&lt;/code&gt;, &lt;code&gt;UnoCSS&lt;/code&gt;, &lt;code&gt;LinguiJs&lt;/code&gt;, &lt;code&gt;zustand&lt;/code&gt;, and ton of features.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/up2dul/rvtgb"&gt;RVTGB&lt;/a&gt; - &lt;code&gt;React&lt;/code&gt; + &lt;code&gt;TypeScript&lt;/code&gt; starter template, with file-based routing with &lt;code&gt;Generouted&lt;/code&gt; and &lt;code&gt;Biome&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/not-first/vite-biome-tailwind-template"&gt;vite-biome-tailwind-template&lt;/a&gt; - React, Typescript, Biome, Tailwind CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Manta-Network/react-dapp-starter"&gt;React Dapp Starter&lt;/a&gt; - Enterprise-ready Web3 DApp starter with &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;TailwindCSS&lt;/code&gt;, &lt;code&gt;Web3Modal&lt;/code&gt;, &lt;code&gt;Wagmi&lt;/code&gt;, &lt;code&gt;Shadcn UI&lt;/code&gt;, &lt;code&gt;Zustand&lt;/code&gt;, and &lt;code&gt;TanStack Query&lt;/code&gt; for scalable decentralized applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ivanzusko/vite-template-react-ts-jest"&gt;vite-template-react-ts-jest&lt;/a&gt; - &lt;code&gt;React&lt;/code&gt; + &lt;code&gt;TypeScript&lt;/code&gt; + &lt;code&gt;Jest&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bebeal/vite-amplify"&gt;vite-amplify&lt;/a&gt; - Template with SSR + Express APIs + AWS Amplify Hosting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xxhls/react-component-library-template"&gt;react-component-library-template&lt;/a&gt; - A library template for with &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Vitest&lt;/code&gt;, &lt;code&gt;React Testing Library&lt;/code&gt;, &lt;code&gt;Storybook&lt;/code&gt;, &lt;code&gt;Biome&lt;/code&gt;, &lt;code&gt;Stylelint&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Aubergine-Community/react-basic-template"&gt;react-boilerplate&lt;/a&gt; - Template for bootstrapping with &lt;code&gt;Eslint&lt;/code&gt; + &lt;code&gt;Husky&lt;/code&gt; + &lt;code&gt;Prettier&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/larry-xue/react-admin-dashboard"&gt;react-admin-dashboard&lt;/a&gt; - Dashboard template with &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Vite&lt;/code&gt;, &lt;code&gt;Ant Design&lt;/code&gt;, &lt;code&gt;React Router&lt;/code&gt;, &lt;code&gt;Zustand&lt;/code&gt;, &lt;code&gt;Ant Design Charts&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yracnet/vite-plugin-ssr-config"&gt;vite-plugin-ssr-config&lt;/a&gt; - Configure server-side rendering (SSR) with &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;React-Query&lt;/code&gt;, &lt;code&gt;React-Router&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SebConejo/portfolio-vite-manifest"&gt;portfolio-vite-manifest&lt;/a&gt; - fullstack portfolio template with &lt;code&gt;Vite&lt;/code&gt;, &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;TypeScript&lt;/code&gt;, &lt;code&gt;Manifest&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Svelte&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sveltejs/kit"&gt;SvelteKit&lt;/a&gt; - The fastest way to build Svelte apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jiangfengming/svelte-vite-ssr"&gt;svelte-vite-ssr&lt;/a&gt; - Svelte with SSR support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RoyRao2333/template-vite-svelte-ts-tailwind"&gt;template-vite-svelte-ts-tailwind&lt;/a&gt; - Svelte + TypeScript + Tailwind CSS + Prettier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xyflow/vite-svelte-flow-template"&gt;vite-svelte-flow-template&lt;/a&gt; - Svelte Flow starter template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tony-stark-eth/vite-svelte-docker-template"&gt;vite-svelte-docker-template&lt;/a&gt; - &lt;code&gt;Docker&lt;/code&gt; + &lt;code&gt;Svelte&lt;/code&gt; + &lt;code&gt;Vitest&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Solid&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xbmlz/vitesse-solid"&gt;vitesse-solid&lt;/a&gt; - Opinionated Vite + SolidJS Starter Template. Includes TypeScript, ESLint, Prettier, UnoCSS, HopeUI and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Nauxscript/vitesse-lite-solid"&gt;vitesse-lite-solid&lt;/a&gt; - Lightweight Vite Starter Template for SolidJS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Electron&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron-vite/electron-vite-vue"&gt;electron-vite-vue&lt;/a&gt; - Electron + Vite + Vue template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron-vite/electron-vite-react"&gt;electron-vite-react&lt;/a&gt; - Electron + Vite + React template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron-vite/electron-vite-boilerplate"&gt;electron-vite-boilerplate&lt;/a&gt; - Support SerialPort, SQLite3 and node C/C++ addons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/umbrella22/electron-vite-template"&gt;electron-vite-template&lt;/a&gt; - Electron 13, Vue 3 and TypeScript. Make your desktop development easier.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArcherGu/fast-vite-electron"&gt;fast-vite-electron&lt;/a&gt; - Vue3 + Vite + Electron with esbuild.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArcherGu/fast-vite-nestjs-electron"&gt;fast-vite-nestjs-electron&lt;/a&gt; - Vue3 + Vite + Electron + Nestjs with esbuild.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron-vite/vite-plugin-electron-quick-start"&gt;vite-plugin-electron-quick-start&lt;/a&gt; - Template for Electron projects.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cawa-93/vite-electron-builder/"&gt;vite-electron-builder&lt;/a&gt; - Electron apps using Vite for both back and front-end, with automatic releases.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maxstue/vite-reactts-electron-starter"&gt;vite-reactts-electron-starter&lt;/a&gt; - React, Tailwind CSS, TypeScript and Electron.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Deluze/electron-vue-template"&gt;electron-vue-template&lt;/a&gt; - Electron template with TypeScript, including Electron Builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tada5hi/vitron"&gt;Vitron&lt;/a&gt; - Build beautiful (win, linux, mac) desktop apps for modern web projects with vite and electron.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jooy2/vutron"&gt;Vutron&lt;/a&gt; - Electron + Vite + Vue 3 + Pinia (TypeScript) template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron-vite/vite-electron-plugin"&gt;vite-electron-plugin&lt;/a&gt; - High-performance, esbuild-based Vite Electron plugin.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Doubleshotjs/doubleshot/tree/main/packages/plugin-vite"&gt;vite-plugin-doubleshot&lt;/a&gt; - For building Node.js backend or Electron main process.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Tauri&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/HuLaSpark/HuLa"&gt;HuLa&lt;/a&gt; - is a desktop instant messaging app built on &lt;code&gt;Vite 5&lt;/code&gt; + &lt;code&gt;Vue 3&lt;/code&gt; + &lt;code&gt;TypeScript&lt;/code&gt; + &lt;code&gt;Tauri&lt;/code&gt; (not just instant messaging).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Neutralino&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Bonnev/vite-react-neutralino-template"&gt;vite-react-neutralino-template&lt;/a&gt; - Neutralino + Vite + React template.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Elm&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lindsaykwardell/vite-elm-template"&gt;vite-elm-template&lt;/a&gt; - A default template for building Elm applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gacallea/elm_vite_tailwind_template"&gt;elm_vite_tailwind_template&lt;/a&gt; - Opinionated template for building Elm web apps using Tailwind CSS and Daisy UI.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;F# and Fable&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nojaf/vite-plugin-fable"&gt;vite-plugin-fable&lt;/a&gt; - Template with &lt;code&gt;.fs&lt;/code&gt; and &lt;code&gt;.fsproj&lt;/code&gt; files and the F# compiler.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Petite-Vue&lt;/h4&gt; 
&lt;h4&gt;VanJS&lt;/h4&gt; 
&lt;h4&gt;GitHub&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hywax/github-action-template"&gt;github-action-template&lt;/a&gt; - Starter template for GitHub Actions, Typescript, ESLint, Vitest, Husky, Conventional Commits.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Others&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MillerRen/vite-singlefile-gzip.git"&gt;vit-singlefile-gzip&lt;/a&gt; - Starter template for embedded.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stefanfrede/11st-starter-kit"&gt;11st-Starter-Kit&lt;/a&gt; - 11ty, powered by Vite with Tailwind CSS and Alpine.js.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fell-lucas/chrome-ext-template-preact-windi-vite"&gt;chrome-ext-template-preact-windi-vite&lt;/a&gt; - Preact, Windi CSS, TypeScript, Prettier, ESLint, GitHub Actions and Chrome Extension Manifest v3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mubaidr/vite-vue3-chrome-extension-v3"&gt;vite-vue3-chrome-extension-v3&lt;/a&gt; - Web extension starter template for Chrome, Firefox and Edge.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;h3&gt;Framework-agnostic Plugins&lt;/h3&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite/tree/main/packages/plugin-legacy"&gt;@vitejs/plugin-legacy&lt;/a&gt; - Legacy browser support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/vite-plugin-pwa"&gt;vite-plugin-pwa&lt;/a&gt; - Zero-config PWA.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/windicss/vite-plugin-windicss"&gt;vite-plugin-windicss&lt;/a&gt; - Windi CSS integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axe-me/vite-plugin-node"&gt;vite-plugin-node&lt;/a&gt; - Integration with Node.js backend servers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nshen/vite-plugin-cesium"&gt;vite-plugin-cesium&lt;/a&gt; - Integration with Cesium library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://bitbucket.org/unimorphic/vite-plugin-linter"&gt;vite-plugin-linter&lt;/a&gt; - Extensible linter framework that shows the linting output in the Vite output and the browser console, includes ESLint &amp;amp; TypeScript ootb.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fi3ework/vite-plugin-checker"&gt;vite-plugin-checker&lt;/a&gt; - Fast run checkers (TypeScript/VLS/vue-tsc, etc.) in worker threads with overlay and terminal hint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amrbashir/vite-plugin-tauri"&gt;vite-plugin-tauri&lt;/a&gt; - Integrate Tauri in a Vite project to build cross-platform apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/originjs/vite-plugin-federation"&gt;vite-plugin-federation&lt;/a&gt; - Support Module Federation, Inspired by Webpack Module Federation feature.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nshen/vite-plugin-wasm-pack"&gt;vite-plugin-wasm-pack&lt;/a&gt; - Integration with rust &lt;a href="https://github.com/rustwasm/wasm-pack"&gt;wasm-pack&lt;/a&gt;, the simple way.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mathe42/vite-plugin-comlink"&gt;vite-plugin-comlink&lt;/a&gt; - Use WebWorkers with the power of &lt;a href="https://github.com/GoogleChromeLabs/comlink"&gt;Comlink&lt;/a&gt; to make them enjoyable.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/activeguild/vite-plugin-sass-dts"&gt;vite-plugin-sass-dts&lt;/a&gt; - This is a plugin that automatically creates a type file when using the CSS module type-safely.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaweiss/vite-plugin-ali-oss"&gt;vite-plugin-ali-oss&lt;/a&gt; - Upload the production files bundled in the project to Ali OSS, except for HTML.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/feat-agency/vite-plugin-webfont-dl"&gt;vite-plugin-webfont-dl&lt;/a&gt; - Downloads and injects webfonts (Google Fonts) to improve website's performance.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owlsdepartment/vite-plugin-babel"&gt;vite-plugin-babel&lt;/a&gt; - Babel integration for both build and server to support f.ex. decorators or class fields in pure JS/JSX files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/electron-vite/vite-plugin-electron"&gt;vite-plugin-electron&lt;/a&gt; - Integrate Vite and Electron.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vite-plugin/vite-plugin-optimizer"&gt;vite-plugin-optimizer&lt;/a&gt; - Manually Pre-Bundling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yzydeveloper/vite-plugin-babel-compiler"&gt;vite-plugin-babel-compiler&lt;/a&gt; - The plugin works with Babel compiler.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vite-plugin/vite-plugin-commonjs"&gt;vite-plugin-commonjs&lt;/a&gt; - A pure JavaScript implementation for CommonJs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yzydeveloper/vite-plugin-mpa-plus"&gt;vite-plugin-mpa-plus&lt;/a&gt; - More flexible MPA (multi-page application) supports html templates, path rewriting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Miofly/vite-plugin-multi-pages"&gt;vite-plugin-multi-pages&lt;/a&gt; - Multi Pages Support，can build src/pages anyPage，can set prefixName.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Miofly/vite-plugin-html-template-mpa"&gt;vite-plugin-html-template-mpa&lt;/a&gt; - Multi Pages Common template support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Miofly/vite-plugin-vconsole-mpa"&gt;vite-plugin-vconsole-mpa&lt;/a&gt; - Multi Pages Vconsole supports，simple config.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Applelo/vite-plugin-browser-sync"&gt;vite-plugin-browser-sync&lt;/a&gt; - BrowserSync.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jspm/vite-plugin-jspm"&gt;vite-plugin-jspm&lt;/a&gt; - Resolves dependencies independently from CDN providers using import maps and es-module-shims.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PengBoUESTC/vite-plugin-env-switch"&gt;vite-plugin-env-switch&lt;/a&gt; - Switch project env and restart vite server without command line operation.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/emosheeep/vite-plugin-virtual-mpa"&gt;vite-plugin-virtual-mpa&lt;/a&gt; - Out-of-box MPA plugin, with html template engine and virtual files support, which generate multiple files using only one template.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ModyQyW/vite-plugin-stylelint"&gt;vite-plugin-stylelint&lt;/a&gt; - Runs Stylelint synchronously/asynchronously.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mammadataei/vite-plugin-graphiql"&gt;Vite-plugin-graphiql&lt;/a&gt; - Integration for GraphiQL IDE.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mammadataei/vite-plugin-graphql-server"&gt;vite-plugin-graphql-server&lt;/a&gt; - Bootstrap a local GraphQL server for testing and documentaion.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cssninjaStudio/unplugin-fonts"&gt;unplugin-fonts&lt;/a&gt; - Load font from Typekit, Google Fonts, Fontsource or your own custom one.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kirklin/unplugin-config"&gt;unplugin-config&lt;/a&gt; - Configuration file generator for web apps, allowing external customization of global variables without repackaging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/g-makarov/vite-plugin-svg-spritemap"&gt;vite-plugin-svg-spritemap&lt;/a&gt; - Generates a SVG spritemap from multiple .svg files.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dvgis/vite-plugin-dc"&gt;vite-plugin-dc&lt;/a&gt; - Integration with @dvgis/dc-sdk library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/SpiriitLabs/vite-plugin-svg-spritemap"&gt;@spiriit/vite-plugin-svg-spritemap&lt;/a&gt; - Pack your SVG files in one spritemap file and use them with &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;/&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; and directly in your CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iamspark1e/vite-plugin-auto-mpa-html"&gt;vite-plugin-auto-mpa-html&lt;/a&gt; - A file directory-based automated multi-page build plugin that supports HTML templates using EJS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjl9903/vite-plugin-cloudflare-functions"&gt;vite-plugin-cloudflare-functions&lt;/a&gt; - Cloudflare pages function integration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/storybookjs/storybook/tree/next/code/builders/builder-vite/"&gt;@storybook/builder-vite&lt;/a&gt; - Storybook builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/BuilderIO/partytown"&gt;@builder.io/partytown&lt;/a&gt; - Relocate resource intensive third-party scripts off of the main thread and into a web worker.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zjpzjp/vite-plugin-debug-proxy"&gt;vite-plugin-dynamic-proxy&lt;/a&gt; - Automatically configure reverse proxies based on URL parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/coderhyh/unplugin-auto-export"&gt;unplugin-auto-export&lt;/a&gt; - Automates the maintenance of export statements in the index.ts file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/forge42dev/Remix-Dev-Tools"&gt;remix-development-tools&lt;/a&gt; - Plugin for Remix.run development tools.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CyanSalt/vite-plugin-legacy-swc"&gt;vite-plugin-legacy-swc&lt;/a&gt; - Legacy browser support with SWC.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/skrulling/vite-plugin-biome"&gt;vite-plugin-biome&lt;/a&gt; - Biome linter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/52-entertainment/vite-plugin-oxlint"&gt;vite-plugin-oxlint&lt;/a&gt; - Oxlint linter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomjs/vite-plugin-electron"&gt;@tomjs/vite-plugin-electron&lt;/a&gt; - Easily develop &lt;code&gt;Electron&lt;/code&gt; applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomjs/vite-plugin-vscode"&gt;@tomjs/vite-plugin-vscode&lt;/a&gt; - Easily use web frameworks to develop &lt;code&gt;VSCode Extension&lt;/code&gt;'s &lt;code&gt;Webview&lt;/code&gt;, and support &lt;code&gt;HMR&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zscumt123/vite-plugin-px-rem-vw"&gt;vite-plugin-px-rem-vw&lt;/a&gt; - Integrate PostCSS plugin pxTorem and pxTovw.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/just-ads/vite-plugin-multi-page"&gt;vite-plugin-mpg&lt;/a&gt; - Simple configuration of multi page applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Hugos68/vite-plugin-pagefind"&gt;vite-plugin-pagefind&lt;/a&gt; - Integrate &lt;code&gt;pagefind&lt;/code&gt; search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aibayanyu20/vite-plugins/tree/main/packages/px2viewport"&gt;@mistjs/vite-plugin-px2viewport&lt;/a&gt; - A plugin that automatically converts inline styles and style files from px units to vw units.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nguyenbatranvan/vite-multiple-assets"&gt;vite-multiple-assets&lt;/a&gt; - Add support for multiple public asset directories.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jrtderonde/vite-create-production-server-plugin"&gt;vite-create-production-server-plugin&lt;/a&gt; - Spin up a production HTTP serve after build.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ModyQyW/vite-plugin-eslint2"&gt;vite-plugin-eslint2&lt;/a&gt; - Runs ESLint synchronously/asynchronously.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Marinerer/vite-plugins/tree/main/packages/page-html"&gt;vite-plugin-page-html&lt;/a&gt; - Multi-page generic template plugin, support &lt;code&gt;ejs&lt;/code&gt; template syntax. Similar to &lt;code&gt;vue-cli&lt;/code&gt; pages configuration.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Marinerer/vite-plugins/tree/main/packages/vanilla"&gt;vite-plugin-vanilla&lt;/a&gt; - Vanilla multi-page web development mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gtanczyk/genaicode/tree/master/src/vite-genaicode/"&gt;genaicode/vite-plugin&lt;/a&gt; - A plugin that embeds an AI coding assistant into the app UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/8hobbies/vite-plugin-year"&gt;vite-plugin-year&lt;/a&gt; - Inserts the current year to the HTML file during build. Useful for adding a copyright year to the HTML file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/saschaseniuk/vite-plugin-llms"&gt;vite-plugin-llms&lt;/a&gt; - Integration for the llms.txt specification supporting AI optimized content alongside application routes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/module-federation/vite"&gt;module-federation/vite&lt;/a&gt; - Official Module Federation integration, enabling dynamic remote module loading.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Loaders&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/unplugin-icons"&gt;unplugin-icons&lt;/a&gt; - Access thousands of icons as components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/JonasKruckenberg/vite-imagetools"&gt;vite-imagetools&lt;/a&gt; - Load and transform images using url query parameters.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stafyniaksacha/vite-plugin-radar"&gt;vite-plugin-radar&lt;/a&gt; - All in one analytics loader (with 7+ providers supported).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/UstymUkhman/vite-plugin-glsl"&gt;vite-plugin-glsl&lt;/a&gt; - Import shader file chunks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/r3dDoX/vite-plugin-svgo"&gt;vite-plugin-svgo&lt;/a&gt; - Load SVGs as plain string and transform with SVGO library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/y-nk/vite-plugin-remark-rehype"&gt;vite-plugin-remark-rehype&lt;/a&gt; - Loads and transform markdown files using the unified ecosystem.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/donnikitos/vite-plugin-php"&gt;vite-plugin-php&lt;/a&gt; - Load and process PHP-entry files instead of default index.html.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/drwpow/vite-plugin-lqip"&gt;vite-plugin-lqip&lt;/a&gt; - Generate low quality image placeholders (LQIP).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KermanX/vite-plugin-ms-clarity"&gt;vite-plugin-ms-clarity&lt;/a&gt; - Inject the Microsoft Clarity script to &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyco130/vite-plugin-mdx"&gt;@cyco130/vite-plugin-mdx&lt;/a&gt; - Import MDX.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/matafokka/vite-awesome-svg-loader"&gt;vite-awesome-svg-loader&lt;/a&gt; - Imports SVGs as source code, base64 and data URI. Preserves stroke width, replaces colors with currentColor. Optimizes SVGs with SVGO. Creates SVG sprites.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/buddywang/vite-plugin-dir2json"&gt;vite-plugin-dir2json&lt;/a&gt; - Convert the directory structure into json data containing supported file paths.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/simonihmig/responsive-image"&gt;@responsive-image/vite-plugin&lt;/a&gt; - Transform and generate optimized responsive images (WebP, AVIF) and LQIP placeholders for use with image components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/good-for-you-web-services/vite-plugin-import-markdown"&gt;@goodforyou/vite-plugin-markdown-import&lt;/a&gt; - Directly import Markdown files as a string, with support for front-matter attributes as an object.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Bundling&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nystudio107/rollup-plugin-critical"&gt;rollup-plugin-critical&lt;/a&gt; - Generate critical CSS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/qmhc/vite-plugin-dts"&gt;vite-plugin-dts&lt;/a&gt; - Generate declaration files from &lt;code&gt;.ts&lt;/code&gt; or &lt;code&gt;.vue&lt;/code&gt; source files for lib.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/XeryYue/vite-compression-plugin"&gt;vite-compression-plugin&lt;/a&gt; - Use Node.js stream compress file to gzip or more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanyuan0704/vite-plugin-chunk-split"&gt;vite-plugin-chunk-split&lt;/a&gt; - Automatically code splitting, support unbundle in production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sapphi-red/vite-plugin-static-copy"&gt;vite-plugin-static-copy&lt;/a&gt; - Copy files and folders.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Ssis53/vite-plugin-zip"&gt;vite-plugin-zip-file&lt;/a&gt; - Compress files or folders into zip.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/7th-Cyborg/vite-plugin-zip-pack"&gt;vite-plugin-zip-pack&lt;/a&gt; - Pack distribution/build folder into a zip file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fengxinming/vite-plugins/tree/main/packages/vite-plugin-cp"&gt;vite-plugin-cp&lt;/a&gt; - Copy files after building bundles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ErKeLost/unplugin-imagemin"&gt;unplugin-imagemin&lt;/a&gt; - High performance compressed Picture based on squoosh and sharp.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/FatehAK/vite-plugin-image-optimizer"&gt;vite-plugin-image-optimizer&lt;/a&gt; - Optimize (compress) your image assets using Sharp.js and SVGO at build time.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ManBearTM/vite-plugin-no-bundle"&gt;vite-plugin-no-bundle&lt;/a&gt; - Generate unbundled code for use with native ESM or other bundlers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marco-prontera/vite-plugin-css-injected-by-js"&gt;vite-plugin-css-injected-by-js&lt;/a&gt; - Takes the CSS and adds it to the page through the JS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iamspark1e/unplugin-zip-pack"&gt;unplugin-zip-pack&lt;/a&gt; - Zip your dist with filter function support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/richardtallent/vite-plugin-singlefile"&gt;vite-plugin-singlefile&lt;/a&gt; - Inline all JavaScript and CSS resources directly into the final &lt;code&gt;dist/index.html&lt;/code&gt; file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidmyersdev/vite-plugin-node-polyfills"&gt;vite-plugin-node-polyfills&lt;/a&gt; - Polyfill Node's Core Modules for browser environments.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nonzzz/vite-plugin-cdn"&gt;vite-plugin-cdn2&lt;/a&gt; - Replace module with CDN.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/dreambo8563/vite-plugin-bundle-prefetch"&gt;vite-plugin-bundle-prefetch&lt;/a&gt; - Inject prefetch assets into &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vHeemstra/vite-plugin-imagemin"&gt;vite-plugin-imagemin&lt;/a&gt; - Optimize and compress your image assets and optionally create WebP/AVIF.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/keuby/vite-plugin-lib-types"&gt;vite-plugin-lib-types&lt;/a&gt; - Generate DTS file while building library.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/60late/vite-plugin-minipic"&gt;vite-plugin-minipic&lt;/a&gt; - Efficient image compression tool.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kolirt/vite-plugin-robots"&gt;vite-plugin-robots&lt;/a&gt; - Generating &lt;code&gt;robots.txt&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/z0ffy/vite-plugin-bundle-obfuscator"&gt;vite-plugin-bundle-obfuscator&lt;/a&gt; - JavaScript obfuscator.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuan66-hub/unplugin-image-convert"&gt;@yuanjianming/unplugin-image-convert&lt;/a&gt; - Image multi format conversion plugin based on sharp.js.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MrQinYQ/vite-plugin-dynamic-chunk"&gt;vite-plugin-dynamic-chunk&lt;/a&gt; - Split dependencies between entry and dynamic entry, and merge small chunks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuan66-hub/unplugin-compress-svga"&gt;@yuanjianming/unplugin-compress-svga&lt;/a&gt; - Compress SVGA.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuan66-hub/unplugin-font-spider"&gt;@yuanjianming/unplugin-font-spider&lt;/a&gt; - A webfont compression plugin.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MrQinYQ/vite-plugin-static-filehash"&gt;vite-plugin-static-filehash&lt;/a&gt; - It can help the program improve the cache hit rate.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bddjr/vite-plugin-singlefile-compression"&gt;vite-plugin-singlefile-compression&lt;/a&gt; - Compress all assets and embeds them into &lt;code&gt;dist/index.html&lt;/code&gt;, making it convenient to share as a single HTML file.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yracnet/vite-plugin-builder"&gt;vite-plugin-builder&lt;/a&gt; - Enable dual compilation for Server-Side Rendering (SSR) and Client-Side Rendering (CSR).&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transformers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/anncwb/vite-plugin-html"&gt;vite-plugin-html&lt;/a&gt; - Plugin to minimize and use ejs template syntax in &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Shinigami92/vite-plugin-ts-nameof"&gt;vite-plugin-ts-nameof&lt;/a&gt; - Ability to resolve &lt;a href="https://github.com/dsherret/ts-nameof"&gt;nameof&lt;/a&gt; in TypeScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alexlafroscia/vite-plugin-handlebars"&gt;vite-plugin-handlebars&lt;/a&gt; - Process HTML files with Handlebars.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Windson1806/vite-plugin-virtual-html"&gt;vite-plugin-virtual-html&lt;/a&gt; - Make Vite MPA consistent with &lt;code&gt;@vue/cli&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/originjs/origin.js/tree/main/packages/vite-plugin-content"&gt;vite-plugin-content&lt;/a&gt; - Convert &lt;code&gt;yaml&lt;/code&gt;, &lt;code&gt;xml&lt;/code&gt;, &lt;code&gt;ini&lt;/code&gt;, &lt;code&gt;toml&lt;/code&gt;, &lt;code&gt;csv&lt;/code&gt;, &lt;code&gt;plist&lt;/code&gt; and &lt;code&gt;properties&lt;/code&gt; files to ES6 modules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wangzongming/vite-plugin-require"&gt;vite-plugin-require&lt;/a&gt; - A Vite plugin that supports &lt;code&gt;require&lt;/code&gt; by code transforming.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/originjs/origin.js/tree/main/packages/vite-plugin-global-style"&gt;vite-plugin-global-style&lt;/a&gt; - Deal with global styles for CSS, SASS, LESS and Stylus.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zheeeng/vite-plugin-shared-modules"&gt;vite-plugin-shared-modules&lt;/a&gt; - Share node_modules in monorepos.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/TheSeally/vite-plugin-pug-transformer"&gt;vite-plugin-pug-transformer&lt;/a&gt; - Pug template engine support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/runtime-env/import-meta-env"&gt;@import-meta-env/unplugin&lt;/a&gt; - Inject environment variables into the &lt;code&gt;import.meta.env&lt;/code&gt; object after building the application instead of statically replacing it during production.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Modyfi/vite-plugin-yaml"&gt;@modyfi/vite-plugin-yaml&lt;/a&gt; - Transform YAML files to ESM with schema validation and error reporting.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/donnikitos/vite-plugin-html-inject"&gt;vite-plugin-html-inject&lt;/a&gt; - Split the &lt;code&gt;index.html&lt;/code&gt; into smaller reusable pieces.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Applelo/unplugin-inject-preload"&gt;unplugin-inject-preload&lt;/a&gt; - Inject &lt;code&gt;&amp;lt;link rel="preload"&amp;gt;&lt;/code&gt; to your &lt;code&gt;index.html&lt;/code&gt; based on your build assets.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-handlebars"&gt;@vituum/vite-plugin-handlebars&lt;/a&gt; - Handlebars template engine support, transforms &lt;code&gt;.hbs&lt;/code&gt; templates to &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-pug"&gt;@vituum/vite-plugin-pug&lt;/a&gt; - Pug template engine support, transforms &lt;code&gt;.pug&lt;/code&gt; templates to &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-nunjucks"&gt;@vituum/vite-plugin-nunjucks&lt;/a&gt; - Nunjucks template engine support, transforms &lt;code&gt;.njk&lt;/code&gt; templates to &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-liquid"&gt;@vituum/vite-plugin-liquid&lt;/a&gt; - Liquid template engine support, transforms &lt;code&gt;.liquid&lt;/code&gt; templates to &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-twig"&gt;@vituum/vite-plugin-twig&lt;/a&gt; - Twig template engine support, transforms &lt;code&gt;.twig&lt;/code&gt; templates to &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-latte"&gt;@vituum/vite-plugin-latte&lt;/a&gt; - Latte template engine support, transforms &lt;code&gt;.latte&lt;/code&gt; templates to &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-posthtml"&gt;@vituum/vite-plugin-posthtml&lt;/a&gt; - PostHTML support, transforms syntax to &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vite-plugin-juice"&gt;@vituum/vite-plugin-juice&lt;/a&gt; - Juice support, transforms &lt;code&gt;.css&lt;/code&gt; to inline styles in &lt;code&gt;.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ZhongxuYang/vite-plugin-version-mark"&gt;vite-plugin-version-mark&lt;/a&gt; - Automatically use &lt;code&gt;package version&lt;/code&gt; / &lt;code&gt;git commit&lt;/code&gt; / &lt;code&gt;custom&lt;/code&gt; to be inserted into your project as a unique identifier for the project version.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/shixuanhong/vite-plugin-css-export"&gt;vite-plugin-css-export&lt;/a&gt; - Export variables from CSS to JavaScript, and support nested rules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Simonwep/vite-plugin-optimize-css-modules"&gt;vite-plugin-optimize-css-modules&lt;/a&gt; - Generate the smallest possible CSS-Classes when CSS-Modules are used.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gedouu/vite-plugin-generate-html"&gt;vite-plugin-generate-html&lt;/a&gt; - Define separate output files for JavaScript and CSS bundles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yuyinws/vite-plugin-turbo-console"&gt;vite-plugin-turbo-console&lt;/a&gt; - Enhance the readability of &lt;code&gt;console.log()&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/altrusl/vite-plugin-html-injection"&gt;vite-plugin-html-injection&lt;/a&gt; - Inject HTML, JavaScript and CSS code snippets into the &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/herberttn/vite-plugin-typescript-transform"&gt;vite-plugin-typescript-transform&lt;/a&gt; - Applies the TypeScript compiler during Vite's transform build phase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hemengke1997/vite-plugin-public-typescript"&gt;vite-plugin-public-typescript&lt;/a&gt; - Inject Typescript into &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/CCherry07/unplugin-generate-component-name"&gt;unplugin-generate-component-name&lt;/a&gt; - Automatically generate component's name.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/laynezh/vite-plugin-lib-assets"&gt;@laynezh/vite-plugin-lib-assets&lt;/a&gt; - Extracts resource files referenced in &lt;code&gt;library mode&lt;/code&gt; instead of embedded them as base64.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/levchak0910/css-media-splitter"&gt;css-media-splitter/vite-plugin&lt;/a&gt; - Extracts all &lt;code&gt;@media&lt;/code&gt; At-rules into a dedicated &lt;code&gt;.css&lt;/code&gt; files and download it only when matches the media query.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomjs/vite-plugin-html"&gt;@tomjs/vite-plugin-html&lt;/a&gt; - Support compression, loading, CDN and others for &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tomjs/vite-plugin-iconify"&gt;@tomjs/vite-plugin-iconify&lt;/a&gt; - Inject the global variable &lt;code&gt;IconifyProviders&lt;/code&gt; into &lt;code&gt;index.html&lt;/code&gt; for &lt;code&gt;iconify&lt;/code&gt;, and support local area network and custom url.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/forge42dev/vite-plugin-icons-spritesheet"&gt;vite-plugin-icons-spritesheet&lt;/a&gt; - Generate a spritesheet and TypeScript types from SVG icons by listening to the icons folder changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tangerball/abbrlink/tree/master/packages/vite-plugin-abbrlink#readme"&gt;vite-plugin-abbrlink&lt;/a&gt; - Add the abbrlink attribute to the &lt;code&gt;markdown&lt;/code&gt; file in the specified directory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vite-plugin/vite-plugin-native"&gt;vite-plugin-native&lt;/a&gt; - Supports Node/Electron C/C++ native addons.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yoichiro/vite-plugin-handlebars"&gt;@yoichiro/vite-plugin-handlebars&lt;/a&gt; - Import of Handlebars templates &lt;code&gt;.hbs&lt;/code&gt; as ES Modules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cszhjh/vite-plugin-magic-preloader"&gt;vite-plugin-magic-preloader&lt;/a&gt; - Generate &lt;code&gt;&amp;lt;link rel="prefetch" /&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;link rel="preload" /&amp;gt;&lt;/code&gt; tags through magic comments and inject them into &lt;code&gt;index.html&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mingtianyihou33/vite-plugin-replace-lodash"&gt;vite-plugin-replace-lodash&lt;/a&gt; - Replacing the import of &lt;code&gt;lodash&lt;/code&gt; with &lt;code&gt;lodash-es&lt;/code&gt; is more beneficial to tree-shaking.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Linh-Tran-0312/vite-plugin-dynamic-prefetch"&gt;vite-plugin-dynamic-prefetch&lt;/a&gt; - Inject &lt;code&gt;&amp;lt;link rel="prefetch" /&amp;gt;&lt;/code&gt; tags into the HTML file for dynamic modules at runtime.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RobinTail/vite-plugin-material-symbols"&gt;vite-plugin-material-symbols&lt;/a&gt; - Selective loading of Material Symbols font icons based on source code analysis.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Helpers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aleclarson/vite-tsconfig-paths"&gt;vite-tsconfig-paths&lt;/a&gt; - Support for TypeScript's path mapping.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/subwaytime/vite-aliases"&gt;vite-aliases&lt;/a&gt; - Alias auto-generation based on project structure.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/liuweiGL/vite-plugin-mkcert"&gt;vite-plugin-mkcert&lt;/a&gt; - Provide certificates https dev server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vadxq/vite-plugin-vconsole"&gt;vite-plugin-vconsole&lt;/a&gt; - Help developers use vconsole to facilitate mobile development and debugging.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/enjoycoding/vite-plugin-mock-server"&gt;vite-plugin-mock-server&lt;/a&gt; - Mock server plugin, support using TS and JS to write Mock API and HMR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/huibizhang/vitawind"&gt;vitawind&lt;/a&gt; - Install and Setting Tailwind CSS automatically.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/vite-plugin-restart"&gt;vite-plugin-restart&lt;/a&gt; - Restart the Vite server on file changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ElMassimo/vite-plugin-full-reload"&gt;vite-plugin-full-reload&lt;/a&gt; - Reload the browser on file changes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yingpengsha/vite-plugin-tips"&gt;vite-plugin-tips&lt;/a&gt; - Provide better development server status tips on the page.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fengxinming/vite-plugins/tree/main/packages/vite-plugin-external"&gt;vite-plugin-external&lt;/a&gt; - Provides a way of excluding dependencies from the runtime code and output bundles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/unplugin-auto-import"&gt;unplugin-auto-import&lt;/a&gt; - On-demand API auto-importing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/vite-plugin-inspect"&gt;vite-plugin-inspect&lt;/a&gt; - Inspect the intermediate state of Vite plugins.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/xiaoxian521/vite-plugin-remove-console"&gt;vite-plugin-remove-console&lt;/a&gt; - A vite plugin that deletes console.log in the production environment.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/owlsdepartment/vite-plugin-dev-manifest"&gt;vite-plugin-dev-manifest&lt;/a&gt; - Generates &lt;code&gt;manifest.dev.json&lt;/code&gt; during dev server, for backend integration with any language/framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jycouet/kitql/tree/main/packages/vite-plugin-watch-and-run"&gt;vite-plugin-watch-and-run&lt;/a&gt; - Watch some files (glob) and trigger a command. To enable any tool to have a watch mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/chenxch/vite-plugin-dynamic-base"&gt;vite-plugin-dynamic-base&lt;/a&gt; - Resolve all resource files dynamic publicPath.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/arnoson/vite-plugin-live-reload"&gt;vite-plugin-live-reload&lt;/a&gt; - Live reloading.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/venojs/vite-plugin-simple-vconsole"&gt;vite-plugin-simple-vconsole&lt;/a&gt; - A debug console view inside your app to make mobile debugging easier, for both SPA and MPA.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/svitejs/vite-plugin-qrcode"&gt;vite-plugin-qrcode&lt;/a&gt; - Show QR code on server start.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Kamiapp-fr/vite-plugin-cem"&gt;vite-plugin-cem&lt;/a&gt; - Generates &lt;code&gt;custom-elements.json&lt;/code&gt; manifest for describing custom elements.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/GreatAuk/plugin-web-update-notification"&gt;vite-plugin-web-update-notification&lt;/a&gt; - Detect webpage updates and notify user to reload. support vite and umijs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kingyue737/vite-plugin-browserslist-useragent"&gt;vite-plugin-browserslist-useragent&lt;/a&gt; - Compile browserslist query to a RegExp to test browser useragent.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Julien-R44/vite-plugin-validate-env"&gt;vite-plugin-validate-env&lt;/a&gt; - Validate your environment variables at build time. Never forget an environment variable again.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fengxinming/vite-plugins/tree/main/packages/vite-plugin-mock-data"&gt;vite-plugin-mock-data&lt;/a&gt; - Provides a simple way to mock data.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fengxinming/vite-plugins/tree/main/packages/vite-plugin-reverse-proxy"&gt;vite-plugin-reverse-proxy&lt;/a&gt; - Sometimes we have to redirect scripts on production environment to debug and solve problems, the plugin will transform the script to be served with the &lt;code&gt;text/javascript&lt;/code&gt; MIME type to &lt;code&gt;module&lt;/code&gt; MIME type.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/KeJunMao/vite-plugin-conditional-compile"&gt;vite-plugin-conditional-compile&lt;/a&gt; - Conditional compilation syntax based on environment variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pengzhanbo/vite-plugin-mock-dev-server"&gt;vite-plugin-mock-dev-server&lt;/a&gt; - Mock server for development, support CJS/ESM/JSON, auto-importing file and HMR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yracnet/vite-plugin-api"&gt;vite-plugin-api&lt;/a&gt; - Generate route mapping for API Routes services from the directory tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/kinfuy/vite-plugin-shortcuts"&gt;vite-plugin-shortcuts&lt;/a&gt; - Add additional customized shortcut key population.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Dschungelabenteuer/vite-plugin-entry-shaking"&gt;vite-plugin-entry-shaking&lt;/a&gt; - Mimic tree-shaking behaviour when importing code from an entry file in development mode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jwyGithub/vite-plugin-auto-alias"&gt;vite-plugin-auto-alias&lt;/a&gt; - Automatically generate alias based on path.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pengzhanbo/vite-plugin-image-placeholder"&gt;vite-plugin-image-placeholder&lt;/a&gt; - Generate placeholder images by path matches.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wChenonly/vite-plugin-find-image-duplicates"&gt;vite-plugin-find-image-duplicates&lt;/a&gt; - Find if there are duplicate images in your project when building it.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Froxz/vite-plugin-s3"&gt;@froxz/vite-plugin-s3&lt;/a&gt; - Allows you to upload files to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/QC2168/vite-plugin-vitepress-auto-sidebar"&gt;vite-plugin-vitepress-auto-sidebar&lt;/a&gt; - Automatically generates sidebar data by scanning directories, based on vitepress.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/censujiang/vite-plugin-global-const"&gt;vite-plugin-global-const&lt;/a&gt; - Define constants for reuse of your code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wChenonly/vite-plugin-cli-copy"&gt;vite-plugin-cli-copy&lt;/a&gt; - Start the project and automatically copy the terminal's network URL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/davidbonnet/vite-plugin-module-list"&gt;vite-plugin-module-list&lt;/a&gt; - Automatically import the modules found in a specified folder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yjl9903/unplugin-info"&gt;unplugin-info&lt;/a&gt; - Export build information as a virutal module.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s2b/vite-plugin-auto-origin"&gt;vite-plugin-auto-origin&lt;/a&gt; - Detect origin configuration automatically based on incoming requests to dev server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stauren/vite-plugin-deadfile"&gt;vite-plugin-deadfile&lt;/a&gt; - Find unused source files in the project.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nonzzz/vite-bundle-analyzer"&gt;vite-bundle-analyzer&lt;/a&gt; - Utility that represents bundles as an interactive treemap.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/a3mitskevich/vite-font-extractor-plugin"&gt;vite-font-extractor-plugin&lt;/a&gt; - Utility that minification bundle fonts by glyphs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hemengke1997/vite-plugin-i18n-detector"&gt;vite-plugin-i18n-detector&lt;/a&gt; - Lazyload i18n locale resources.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/aphex/vite-plugin-ngrok"&gt;vite-plugin-ngrok&lt;/a&gt; - Integration with Ngrok, allowing you to easily share your local development server.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yracnet/vite-plugin-docker"&gt;vite-plugin-docker&lt;/a&gt; - Docker utility based on Dockerode.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yracnet/vite-plugin-api-routes"&gt;vite-plugin-api-routes&lt;/a&gt; - Generate route mapping for API Routes services from the directory tree.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tjx666/unplugin-detect-duplicated-deps"&gt;unplugin-detect-duplicated-deps&lt;/a&gt; - Detect duplicate packaged dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Xaviw/vite-plugin-vitepress-auto-nav"&gt;vite-plugin-vitepress-auto-nav&lt;/a&gt; - Automatically generates &lt;code&gt;sidebar&lt;/code&gt; and &lt;code&gt;nav&lt;/code&gt; configurations by scanning directories, based on VitePress.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/teplostanski/vite-plugin-pretty-module-classnames"&gt;vite-plugin-pretty-module-classnames&lt;/a&gt; - Adds the filename without the &lt;code&gt;-module&lt;/code&gt; suffix to the class names of CSS modules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/reifiedbeans/vite-plugin-serve-static"&gt;vite-plugin-serve-static&lt;/a&gt; - Allows serving arbitrary static files not in the &lt;code&gt;public/&lt;/code&gt; directory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idleberg/vite-plugin-valibot-env"&gt;vite-plugin-valibot-env&lt;/a&gt; - Validate environment variables against a Valibot schema.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/raegen/vite-plugin-vitest-cache"&gt;vite-plugin-vitest-cache&lt;/a&gt; - Optimize &lt;code&gt;Vitest&lt;/code&gt; execution time through caching.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wille/vite-preload"&gt;vite-preload&lt;/a&gt; - Preloads lazy loaded modules and stylesheets that were rendered by the server using 103 Early Hints, Link headers or link tags.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PengBoUESTC/vite-plugin-envtype-patch"&gt;vite-plugin-envtype-patch&lt;/a&gt; - Generate &lt;code&gt;type&lt;/code&gt; info for &lt;code&gt;import.meta.env&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Testing&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitest-dev/vitest"&gt;vitest&lt;/a&gt; - A Vite-native test framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/eratio08/vitest-mock-extended"&gt;vitest-mock-extended&lt;/a&gt; - Type safe mocking extensions for Vitest.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mammadataei/cypress-vite"&gt;cypress-vite&lt;/a&gt; - Run Cypress specs using Vite.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ssssota/doc-vitest"&gt;vite-plugin-doctest&lt;/a&gt; - Documentation testing for Vitest.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/poyro/poyro"&gt;@poyro/vitest&lt;/a&gt; - Test LLM integrations using Vitest.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Security&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/RockiRider/csp/tree/main/packages/vite-plugin-csp-guard"&gt;vite-plugin-csp-guard&lt;/a&gt; - Lets you configure a Content Security Policy to your project, supports all directives and hashing.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/maccuaa/vite-plugin-csp"&gt;vite-plugin-csp&lt;/a&gt; - Content Security Policy (CSP) for SPA. Automatically calculates asset hashes (SRI), detects Google Fonts. Support &lt;code&gt;Bun&lt;/code&gt; and &lt;code&gt;Node.js&lt;/code&gt; runtimes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Vue&lt;/h3&gt; 
&lt;p&gt;In this section, we use badges to indicate the targeted Vue version for each plugin.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/badge/-v2-42b883" alt="v2" /&gt; for Vue 2 only, &lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; for Vue 3 only, and &lt;img src="https://img.shields.io/badge/-2%2F3-3C8171" alt="v23" /&gt; for plugins that compatible with both versions.&lt;/p&gt; 
&lt;!--lint ignore double-link--&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 SSR frameworks are listed at &lt;a href="https://raw.githubusercontent.com/vitejs/awesome-vite/master/#ssr"&gt;SSR - Frameworks&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;!--lint disable awesome-list-item--&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/vitejs/vite-plugin-vue"&gt;@vitejs/plugin-vue&lt;/a&gt; - Official Vue 3 support.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/vitejs/vite-plugin-vue/tree/main/packages/plugin-vue-jsx"&gt;@vitejs/plugin-vue-jsx&lt;/a&gt; - Official Vue 3 JSX support.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v2-42b883" alt="v2" /&gt; &lt;a href="https://github.com/vitejs/vite-plugin-vue2"&gt;@vitejs/plugin-vue2&lt;/a&gt; - Official Vue 2 support.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v2-42b883" alt="v2" /&gt; &lt;a href="https://github.com/vitejs/vite-plugin-vue2-jsx"&gt;@vitejs/plugin-vue2-jsx&lt;/a&gt; - Official Vue 2 JSX support.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v2-42b883" alt="v2" /&gt; &lt;a href="https://github.com/underfin/vite-plugin-vue2"&gt;vite-plugin-vue2&lt;/a&gt; - Vue 2 integration.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v2-42b883" alt="v2" /&gt; &lt;a href="https://github.com/antfu/unplugin-vue2-script-setup"&gt;unplugin-vue2-script-setup&lt;/a&gt; - Enabling &lt;code&gt;&amp;lt;script setup&amp;gt;&lt;/code&gt; syntax for Vue 2.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Routing&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-2%2F3-3C8171" alt="v23" /&gt; &lt;a href="https://github.com/hannoeru/vite-plugin-pages"&gt;vite-plugin-pages&lt;/a&gt; - File system based route generator.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/weiquanju/v-route-generate"&gt;v-route-generate&lt;/a&gt; - A tool to generate routes.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/posva/unplugin-vue-router"&gt;unplugin-vue-router&lt;/a&gt; - Official experimental file based routing.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/Vanilla-IceCream/vite-plugin-vue-routes"&gt;vite-plugin-vue-routes&lt;/a&gt; - File-based routing, similar to SvelteKit and Next.js App Router.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Loaders&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-2%2F3-3C8171" alt="v23" /&gt; &lt;a href="https://github.com/antfu/vite-plugin-md"&gt;vite-plugin-md&lt;/a&gt; - Markdown as Vue components / Vue components in Markdown.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/jpkleemans/vite-svg-loader"&gt;vite-svg-loader&lt;/a&gt; - Load SVG files as Vue components.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v2-42b883" alt="v2" /&gt; &lt;a href="https://github.com/pakholeung37/vite-plugin-vue2-svg"&gt;vite-plugin-vue2-svg&lt;/a&gt; - Load SVG files as Vue components.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/Jevon617/unplugin-svg-component"&gt;unplugin-svg-component&lt;/a&gt; - Load SVG files as a Vue component, supporting svg file HMR and Typescript intelligence prompt.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-2%2F3-3C8171" alt="v23" /&gt; &lt;a href="https://github.com/KermanX/vite-plugin-markdown-mermaid"&gt;vite-plugin-markdown-mermaid&lt;/a&gt; - Load Markdown files, with Mermaid rendering support.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/gitboyzcf/vite-plugin-style-vw-loader"&gt;vite-plugin-style-vw-loader&lt;/a&gt; - Converting the inline style px to vw.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;SSG&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/antfu/vite-ssg"&gt;vite-ssg&lt;/a&gt; - Server-side generation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Ecosystem&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/intlify/bundle-tools/tree/main/packages/unplugin-vue-i18n"&gt;unplugin-vue-i18n&lt;/a&gt; - Integration for Vue I18n.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/fvena/vite-plugin-i18n-resources"&gt;vite-plugin-i18n-resources&lt;/a&gt; - Load i18n translation message files.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/PengBoUESTC/vite-plugin-i18n-autoimport"&gt;vite-plugin-i18n-autoimport&lt;/a&gt; - Auto import i18n config file for components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transformers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/JasKang/vite-plugin-md-preview"&gt;vite-plugin-md-preview&lt;/a&gt; - Markdown code preview.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/liting-yes/vite-plugin-vue-preview"&gt;vite-plugin-vue-preview&lt;/a&gt; - Code preview for Vue SFC in Markdown, supports online editing.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/zeokku/vite-plugin-vue-css-modules"&gt;vite-plugin-vue-css-modules&lt;/a&gt; - Implicit usage of CSS Modules for template and script SFC tags with static replacement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Helpers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-2%2F3-3C8171" alt="v23" /&gt; &lt;a href="https://github.com/antfu/unplugin-vue-components"&gt;unplugin-vue-components&lt;/a&gt; - On-demand components auto-importing.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/wheatjs/vite-plugin-vue-gql"&gt;vite-plugin-vue-gql&lt;/a&gt; - GraphQL Tags for your Vue SFC.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v2-42b883" alt="v2" /&gt; &lt;a href="https://github.com/williamyorkl/vite-plugin-vue2-suffix"&gt;vite-plugin-vue2-suffix&lt;/a&gt; - Compatible without '.vue' suffix.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-2%2F3-3C8171" alt="v23" /&gt; &lt;a href="https://github.com/webfansplz/vite-plugin-vue-inspector"&gt;vite-plugin-vue-inspector&lt;/a&gt; - Jump to local IDE source code while click the element of browser.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-2%2F3-3C8171" alt="v23" /&gt; &lt;a href="https://github.com/arikw/vite-plugin-vue-static-sfc"&gt;vite-plugin-vue-static-sfc&lt;/a&gt; - Serve ".vue" files as static assets.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/webfansplz/vite-plugin-vue-devtools"&gt;vite-plugin-vue-devtools&lt;/a&gt; - Designed to enhance the Vue developer experience.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/HunYan-io/vite-plugin-vue-nested-sfc"&gt;vite-plugin-vue-nested-sfc&lt;/a&gt; - Nest SFCs inside your SFC.&lt;/li&gt; 
 &lt;li&gt;&lt;img src="https://img.shields.io/badge/-v3-35495e" alt="v3" /&gt; &lt;a href="https://github.com/peterroe/vite-plugin-vue-style-in-template"&gt;vite-plugin-vue-style-in-template&lt;/a&gt; - Extract the style tags in template.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--lint enable awesome-list-item--&gt; 
&lt;hr /&gt; 
&lt;h3&gt;React&lt;/h3&gt; 
&lt;h4&gt;Official&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react"&gt;@vitejs/plugin-react&lt;/a&gt; - Official React support that uses Babel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite-plugin-react-swc"&gt;@vitejs/plugin-react-swc&lt;/a&gt; - Official React support that uses SWC.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Presets&lt;/h4&gt; 
&lt;h4&gt;Routing&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oedotme/generouted"&gt;generouted&lt;/a&gt; - Client-side type-safe file-based routing and global modals — supports layouts, loaders, code-splitting and more.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ws-rush/unplugin-remix-router"&gt;unplugin-remix-router&lt;/a&gt; - Generates a React Router file, that depends on Remix v2 file-based router convention.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hemengke1997/vite-plugin-remix-flat-routes"&gt;vite-plugin-remix-flat-routes&lt;/a&gt; - Remix-flat-routes convention-based routing, compatible with react-router data-api routing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Loaders&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/pd4d10/vite-plugin-svgr"&gt;vite-plugin-svgr&lt;/a&gt; - Transform SVGs into React components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/iGoodie/vite-plugin-react-rich-svg"&gt;vite-plugin-react-rich-svg&lt;/a&gt; - Seamless SVG loader with versatile import options; such as DataURI, SVGR Component and Raw HTML Code.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Transformers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sultan99/stylin/tree/main/packages/vite-plugin"&gt;@stylin/vite-plugin&lt;/a&gt; - Transform CSS and SCSS modules into React components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Framework&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vitejs/vite-plugin-react-pages"&gt;vite-plugin-react-pages&lt;/a&gt; - A Vite framework for building React app.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Helpers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ArnaudBarre/vite-plugin-react-click-to-component"&gt;vite-plugin-react-click-to-component&lt;/a&gt; - Uses Vite's launch middleware to enable alt+click to go to component.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;SSG&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Daydreamer-riri/vite-react-ssg"&gt;vite-react-ssg&lt;/a&gt; - Static-site generation for React.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--lint ignore double-link--&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;💡 SSR frameworks are listed at &lt;a href="https://raw.githubusercontent.com/vitejs/awesome-vite/master/#ssr"&gt;SSR - Frameworks&lt;/a&gt;.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Preact&lt;/h3&gt; 
&lt;h4&gt;Presets&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/preactjs/preset-vite"&gt;@preact/preset-vite&lt;/a&gt; - Preact preset. HMR, automatic Preact inject, removal of DevTools in prod.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Svelte&lt;/h3&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sveltejs/vite-plugin-svelte"&gt;vite-plugin-svelte&lt;/a&gt; - Adds Svelte support. Official plugin of Svelte team.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Helpers&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jycouet/kitql/tree/main/packages/vite-plugin-kit-routes"&gt;vite-plugin-kit-routes&lt;/a&gt; - Generates a file with all the routes, params, actions of your SvelteKit App.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Solid&lt;/h3&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/amoutonbrady/vite-plugin-solid"&gt;vite-plugin-solid&lt;/a&gt; - Provides JSX transformation for Solid.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/jfgodoy/vite-plugin-solid-svg"&gt;vite-plugin-solid-svg&lt;/a&gt; - Import SVG files as Solid.js Components.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Routing&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/oedotme/generouted/tree/main/packages/solid-router"&gt;generouted&lt;/a&gt; - Client-side type-safe file-based routing and global modals — supports layouts, loaders, code-splitting and more.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Elm&lt;/h3&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hmsk/vite-plugin-elm"&gt;vite-plugin-elm&lt;/a&gt; - A plugin that enables you to compile an Elm module.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Angular&lt;/h3&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Fastify&lt;/h3&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Vanilla-IceCream/vite-plugin-fastify"&gt;vite-plugin-fastify&lt;/a&gt; - Fastify plugin for Vite with Hot-module Replacement.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Routing&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Vanilla-IceCream/vite-plugin-fastify-routes"&gt;vite-plugin-fastify-routes&lt;/a&gt; - File-based routing, similar to SvelteKit and Next.js App Router.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Electron&lt;/h3&gt; 
&lt;h4&gt;Integrations&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/alex8088/electron-vite"&gt;electron-vite&lt;/a&gt; - An Electron CLI integrated with Vite.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Presets&lt;/h4&gt; 
&lt;hr /&gt; 
&lt;h3&gt;Rollup Plugins&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://vite-rollup-plugins.patak.dev/"&gt;Vite Rollup Plugins&lt;/a&gt; - Compatibility list for official rollup plugins.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Included in Vite&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/alias"&gt;@rollup/plugin-alias&lt;/a&gt; - Define and resolve aliases for bundle dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/commonjs"&gt;@rollup/plugin-commonjs&lt;/a&gt; - Convert CommonJS modules to ES6.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/dynamic-import-vars"&gt;@rollup/plugin-dynamic-import-vars&lt;/a&gt; - Resolving dynamic imports that contain variables.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/json"&gt;@rollup/plugin-json&lt;/a&gt; - Convert &lt;code&gt;.json&lt;/code&gt; files to ES6 modules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Covered by default in Vite&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/babel"&gt;@rollup/plugin-babel&lt;/a&gt; - Compile your files with Babel.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/buble"&gt;@rollup/plugin-buble&lt;/a&gt; - Compile ES2015 with buble.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/data-uri"&gt;@rollup/plugin-data-uri&lt;/a&gt; - Import modules from Data URIs.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/html"&gt;@rollup/plugin-html&lt;/a&gt; - Create HTML files to serve Rollup bundles.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/node-resolve"&gt;@rollup/plugin-node-resolve&lt;/a&gt; - Locate and bundle third-party dependencies in node_modules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/sucrase"&gt;@rollup/plugin-sucrase&lt;/a&gt; - Compile TypeScript, Flow, JSX, etc with Sucrase.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/typescript"&gt;@rollup/plugin-typescript&lt;/a&gt; - Integration between Rollup and TypeScript.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/wasm"&gt;@rollup/plugin-wasm&lt;/a&gt; - Import WebAssembly code with Rollup.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/url"&gt;@rollup/plugin-url&lt;/a&gt; - Import files as data-URIs or ES Modules.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Compatible with Vite&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/beep"&gt;@rollup/plugin-beep&lt;/a&gt; - System beeps on errors and warnings.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/dsv"&gt;@rollup/plugin-dsv&lt;/a&gt; - Convert &lt;code&gt;.csv&lt;/code&gt; and &lt;code&gt;.tsv&lt;/code&gt; files into JavaScript modules with d3-dsv.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/eslint"&gt;@rollup/plugin-eslint&lt;/a&gt; - Verify entry point and all imported files with ESLint.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/graphql"&gt;@rollup/plugin-graphql&lt;/a&gt; - Convert .gql/.graphql files to ES6 modules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/image"&gt;@rollup/plugin-image&lt;/a&gt; - Import JPG, PNG, GIF, SVG, and WebP files (needs &lt;code&gt;enforce: 'pre'&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/inject"&gt;@rollup/plugin-inject&lt;/a&gt; - Scan modules for global variables and injects import statements where necessary.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/legacy"&gt;@rollup/plugin-legacy&lt;/a&gt; - Add export declarations to legacy non-module scripts.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/replace"&gt;@rollup/plugin-replace&lt;/a&gt; - Replace strings in files while bundling.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/tree/master/packages/strip"&gt;@rollup/plugin-strip&lt;/a&gt; - Remove debugger statements and functions from your code.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/virtual"&gt;@rollup/plugin-virtual&lt;/a&gt; - A Rollup plugin that loads virtual modules from memory.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rollup/plugins/raw/master/packages/yaml"&gt;@rollup/plugin-yaml&lt;/a&gt; - Convert YAML files to ES6 modules.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rxliuli/liuli-tools/tree/master/libs/rollup-plugin-graphql-codegen"&gt;rollup-plugin-graphql-codegen&lt;/a&gt; - Generating type definitions for GraphQL tag template strings in worker_threads.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rxliuli/liuli-tools/tree/master/libs/rollup-plugin-i18next-dts-gen"&gt;rollup-plugin-i18next-dts-gen&lt;/a&gt; - Generating type definitions from i18n JSON files are used for code hinting and validation.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;Community&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check the &lt;a href="https://github.com/rollup/awesome"&gt;Awesome Rollup list&lt;/a&gt; for community-maintained rollup plugins, and refer to the Vite docs section about &lt;a href="https://vitejs.dev/guide/api-plugin.html#rollup-plugin-compatiblity"&gt;rollup plugin compatibility&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;SSR&lt;/h2&gt; 
&lt;!--lint disable awesome-list-item--&gt; 
&lt;h3&gt;Libraries&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vikejs/vike"&gt;Vike&lt;/a&gt; - Like Nuxt/Next.js but as a do-one-thing-do-it-well plugin. &lt;img src="https://img.shields.io/badge/-React-4ab2cf" alt="react" /&gt; &lt;img src="https://img.shields.io/badge/-Vue%203-42b883" alt="vue3" /&gt; &lt;img src="https://img.shields.io/badge/-Vue%202-42b883" alt="vue2" /&gt; &lt;img src="https://img.shields.io/badge/-Svelte-db552a" alt="svelte" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zhangyuang/ssr"&gt;ssr&lt;/a&gt; - A Server Side Rendering framework combined with Webpack/Vite. &lt;img src="https://img.shields.io/badge/-React-4ab2cf" alt="react" /&gt; &lt;img src="https://img.shields.io/badge/-Vue%203-42b883" alt="vue3" /&gt; &lt;img src="https://img.shields.io/badge/-Vue%202-42b883" alt="vue2" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/cyco130/vavite"&gt;vavite&lt;/a&gt; - A tool for developing and building server-side applications with live reloading capabilities.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bistroo/vue-ssr"&gt;vue-ssr&lt;/a&gt; - Minimalistic wrapper to develop and run SSR powered Vue apps. &lt;img src="https://img.shields.io/badge/-Vue%203-42b883" alt="vue3" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lomray-Software/vite-ssr-boost"&gt;vite-ssr-boost&lt;/a&gt; - Server side rendering library for create awesome app based on &lt;code&gt;react-router&lt;/code&gt;. &lt;img src="https://img.shields.io/badge/-React-4ab2cf" alt="react" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/marbemac/ssrx"&gt;SSRx&lt;/a&gt; - A thin layer on top of Vite to build modern SSR apps with a delightful DX.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nksaraf/vinxi"&gt;Vinxi&lt;/a&gt; - The Full Stack JavaScript SDK. Allows adding SSR to a Vite app.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rossrobino/domco"&gt;domco&lt;/a&gt; - Minimal full-stack JavaScript. Turns a Vite app into a full-stack application with minimal dependencies.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Frameworks&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/rakkasjs/rakkasjs"&gt;Rakkas&lt;/a&gt; - React framework inspired by Next.js and SvelteKit. &lt;img src="https://img.shields.io/badge/-React-4ab2cf" alt="react" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/stauren/vise-ssr"&gt;Vise&lt;/a&gt; - SSR framework with server hooks. &lt;img src="https://img.shields.io/badge/-React-4ab2cf" alt="react" /&gt; &lt;img src="https://img.shields.io/badge/-Vue%203-42b883" alt="vue3" /&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fastify/fastify-dx"&gt;@fastify/fastify-dx&lt;/a&gt; - Allowing you to serve static or live (SSR).&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/magne4000/vite-plugin-vercel"&gt;vite-plugin-vercel&lt;/a&gt; - Vercel adapter.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bitttttten/vite-vlugin-vercel-skew-protection"&gt;vite-vlugin-vercel-skew-protection&lt;/a&gt; - Helps configure Vercel Skew Protection.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;!--lint enable awesome-list-item--&gt; 
&lt;h2&gt;Integrations with Backends&lt;/h2&gt; 
&lt;h3&gt;Adobe Experience Manager&lt;/h3&gt; 
&lt;h3&gt;Craft CMS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nystudio107/craft-vite"&gt;Craft Vite&lt;/a&gt; - Plugin for integration with Craft CMS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Django&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/MrBin99/django-vite"&gt;django-vite&lt;/a&gt; - Integration for Django applications.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/protibimbok/django-vite-plugin"&gt;django-vite-plugin&lt;/a&gt; - Integration for Django applications including vite plugin.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Flask&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://pypi.org/project/flask-vite/"&gt;Flask-Vite&lt;/a&gt; - Integration with Flask.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Ruby on Rails&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ElMassimo/vite_ruby/tree/main/vite-plugin-ruby"&gt;vite-plugin-ruby&lt;/a&gt; - Configuration for Ruby backends.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ElMassimo/vite_ruby"&gt;Vite Ruby&lt;/a&gt; - Integration for Rails, Hanami, Padrino, and Rack apps.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Laravel&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/innocenzi/laravel-vite"&gt;Laravel Vite&lt;/a&gt; - Integration for the Laravel framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/laravel/vite-plugin"&gt;Laravel Vite Plugin&lt;/a&gt; - Laravel official plugin for Vite.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CakePHP&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/passchn/cakephp-vite"&gt;cakephp-vite&lt;/a&gt; - Integration for CakePHP.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;WordPress&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/idleberg/php-wordpress-vite-assets"&gt;wordpress-vite-assets&lt;/a&gt; - Integration for WordPress themes.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/axelilali/kima"&gt;Kima&lt;/a&gt; - Starter theme with Twig.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vinkla/wordplate"&gt;WordPlate&lt;/a&gt; - Starter app with Composer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;TYPO3 CMS&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s2b/vite-plugin-typo3"&gt;vite-plugin-typo3&lt;/a&gt; - Frontend integration for TYPO3 CMS.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/s2b/vite-asset-collector"&gt;vite-asset-collector for TYPO3&lt;/a&gt; - Backend integration for TYPO3 CMS.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Go&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/olivere/vite"&gt;vite&lt;/a&gt; - Integration with Go.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Rust&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wulf/create-rust-app"&gt;create-rust-app&lt;/a&gt; - Integration for Rust web apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Wulf/vite-rs"&gt;vite-rs&lt;/a&gt; - Embed assets in your Rust binary.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;OctoberCMS&lt;/h3&gt; 
&lt;h3&gt;Symfony&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lhapaipai/vite-bundle"&gt;Vite Bundle&lt;/a&gt; - Integration for Symfony.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Shopify&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/barrel/barrel-shopify/tree/main/packages/vite-plugin-shopify"&gt;vite-plugin-shopify&lt;/a&gt; - Integration for Shopify themes.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;CodeIgniter&lt;/h3&gt; 
&lt;h3&gt;DDEV&lt;/h3&gt; 
&lt;h3&gt;Node.js&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/szymmis/vite-express"&gt;vite-express&lt;/a&gt; - Integration for Express web apps.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sullay/vite-manifest-parser"&gt;vite-manifest-parser&lt;/a&gt; - Parses manifest.json to generate HTML script and link tags.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;ASP.NET Core&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Eptagone/Vite.AspNetCore"&gt;Vite.AspNetCore&lt;/a&gt; - Integration with ASP.NET Core projects.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Drupal&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://git.drupalcode.org/project/vite"&gt;Vite module&lt;/a&gt; - Backend integration for Drupal.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/larowlan/vite-plugin-twig-drupal"&gt;vite-plugin-twig-drupal&lt;/a&gt; - Support for Twig with includes/embeds and Drupal specific twig features.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;PHP&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mindplay-dk/php-vite"&gt;PHP-Vite&lt;/a&gt; - Integration for PHP, Composer package, no framework dependencies.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nititech/php-vite-starter"&gt;PHP-Vite Starter Repo&lt;/a&gt; - Starter repository, with TypeScript/JavaScript, Tailwind CSS, SASS/SCSS, EJS, SVG and image support.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Osteoporosis/php-vitelinker"&gt;php-vitelinker&lt;/a&gt; - A CLI tool that generates includable PHP files after building bundles.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Migrations&lt;/h2&gt; 
&lt;h3&gt;Vue CLI&lt;/h3&gt; 
&lt;h3&gt;React&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/bhbs/viject"&gt;Viject&lt;/a&gt; - One-shot migration tool from Create React App.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Projects Using Vite.js&lt;/h2&gt; 
&lt;h3&gt;Open Source&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vuejs/vitepress"&gt;VitePress&lt;/a&gt; - Static Site Generator powered by Vite and Vue.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/slidevjs/slidev"&gt;Slidev&lt;/a&gt; - Presentation Slides for Developers.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/withastro/astro"&gt;Astro&lt;/a&gt; - Modern Static Site Builder.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/hathora/hathora"&gt;Hathora&lt;/a&gt; - Multiplayer game framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/nhost/nhost"&gt;Nhost&lt;/a&gt; - Nhost is an Open Source Firebase Alternative with GraphQL.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tajo/ladle"&gt;Ladle&lt;/a&gt; - Tool for developing and testing component stories powered by Vite and React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/sanyuan0704/island.js"&gt;IslandJS&lt;/a&gt; - Static site generator base on islands architecture.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/vituum/vituum"&gt;Vituum&lt;/a&gt; - Wrapper around Vite with predefined config, integrations and template engines.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/AlbanCrepel/compiiile"&gt;Compiiile&lt;/a&gt; - Preview or host folders containing Markdown files with full-text search and presentation slides.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/gracile-web/gracile"&gt;Gracile&lt;/a&gt; - A meta-framework powered by Lit SSR.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/lazarv/react-server"&gt;@lazarv/react-server&lt;/a&gt; - A React meta-framework.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/wxt-dev/wxt"&gt;WXT&lt;/a&gt; - Framework for building web extensions, with the same DX as Nuxt.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/revilijs/revili"&gt;Revili&lt;/a&gt; - A command and GUI integration tool.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Apps/Websites&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/icones"&gt;Icônes&lt;/a&gt; - Icon explorer with instant search.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/antfu/awesome-cn-cafe-web"&gt;Awesome CN Café&lt;/a&gt; - Web application for Awesome CN Café.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/beary/vite-example"&gt;Todo Example&lt;/a&gt; - Todo app with routing and state management.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://aitrack.work"&gt;aitrack.work&lt;/a&gt; - A task-based time tracker for everyday use.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/PuruVJ/macos-web/"&gt;macOS in Svelte&lt;/a&gt; - macOS Desktop experience for Web in Svelte.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mutoe/vue3-realworld-example-app"&gt;vue3-realworld-example-app&lt;/a&gt; - Realworld app implementation using Vue 3 + TypeScript + Composition API.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zheeeng/react-device-frameset"&gt;react-device-frameset&lt;/a&gt; - This is yet another device frameset component for React.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://previewjs.com"&gt;Preview.js&lt;/a&gt; - An IDE extension to instantly preview React, Vue 2 and Vue 3 components.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/zheeeng/pointer-lock-movement"&gt;pointer-lock-movement&lt;/a&gt; - A pointer lock movement manager for customizing your own creative UI.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/biggerstar/vite-run"&gt;vite-run&lt;/a&gt; - Multiple configuration execution support for vite, freely combining configurations like stacked blocks.&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/fehmisener/dataviz-explorer"&gt;Dataviz Explorer&lt;/a&gt; - A tool for large CSV, database, and real-time visualization with interactive plots using &lt;code&gt;Highcharts&lt;/code&gt;, &lt;code&gt;Chart.js&lt;/code&gt;, &lt;code&gt;React&lt;/code&gt;, &lt;code&gt;JavaScript&lt;/code&gt;, &lt;code&gt;Material UI&lt;/code&gt; and &lt;code&gt;GitHub Actions with Coverage Report&lt;/code&gt;.&lt;/li&gt; 
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>UseInterstellar/Interstellar</title>
      <link>https://github.com/UseInterstellar/Interstellar</link>
      <description>&lt;p&gt;One of the most popular modern web proxies with blazing fast speeds and a variety of games.&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;img src="https://raw.githubusercontent.com/UseInterstellar/Interstellar/main/.github/branding/in.png" /&gt; 
 &lt;p&gt;Serving over 15 million users since 2022.&lt;/p&gt;
 &lt;p&gt; &lt;/p&gt;
 &lt;p&gt;Interstellar is a web proxy with a Clean and Sleek UI and easy to use menus. Our goal is to provide the best user experience to everyone.&lt;/p&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;img src="https://github.com/UseInterstellar/Interstellar/assets/89202835/2669efed-5186-4932-83c4-725acae60bd2" alt="inpreview" /&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] If you fork this project, consider giving it a star in the original repository!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Join Our &lt;a href="https://discord.gg/interstellar"&gt;Discord Community&lt;/a&gt; for support, more links, and an active community!&lt;/strong&gt;&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;About:Blank Cloaking&lt;/li&gt; 
 &lt;li&gt;Tab Cloaking&lt;/li&gt; 
 &lt;li&gt;Wide collection of apps &amp;amp; games&lt;/li&gt; 
 &lt;li&gt;Clean, Easy to use UI&lt;/li&gt; 
 &lt;li&gt;Inspect Element&lt;/li&gt; 
 &lt;li&gt;Various Themes&lt;/li&gt; 
 &lt;li&gt;Password Protection (Optional)&lt;/li&gt; 
 &lt;li&gt;Built-in Tab System&lt;/li&gt; 
 &lt;li&gt;Now.gg Support&lt;/li&gt; 
 &lt;li&gt;Fast Speeds&lt;/li&gt; 
 &lt;li&gt;Geforce NOW Support&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deployment&lt;/h2&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] You &lt;strong&gt;cannot&lt;/strong&gt; deploy to static web hosts, including Netlify, Cloudflare Pages, and GitHub Pages.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Password Protection&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Go to the &lt;code&gt;config.js&lt;/code&gt; file and set &lt;code&gt;challenge&lt;/code&gt; to &lt;strong&gt;true&lt;/strong&gt;. Then, set the environment variable as follows:&lt;/li&gt; 
 &lt;li&gt;For PNPM: Run either &lt;code&gt;config=true pnpm start&lt;/code&gt; or &lt;code&gt;$env:config=true; pnpm start&lt;/code&gt;, depending on your server.&lt;/li&gt; 
 &lt;li&gt;For Bun: Run either &lt;code&gt;config=true bun start&lt;/code&gt; or &lt;code&gt;$env:config=true; bun start&lt;/code&gt; if you prefer Bun.&lt;/li&gt; 
 &lt;li&gt;For NPM: Run either &lt;code&gt;config=true npm start&lt;/code&gt; or &lt;code&gt;$env:config=true; npm start&lt;/code&gt; if you prefer NPM.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Server Deployment&lt;/h3&gt; 
&lt;p&gt;You must run these commands on your server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Ad-Free Deployment&lt;/h4&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone --branch Ad-Free https://github.com/UseInterstellar/Interstellar
cd Interstellar
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Next depending on your package manager, run one of the following commands:&lt;/p&gt; 
&lt;h4&gt;Bun&lt;/h4&gt; 
&lt;p&gt;If you are using Bun, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun i
bun start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;pnpm&lt;/h4&gt; 
&lt;p&gt;If you are using pnpm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;pnpm i
pnpm start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;npm&lt;/h4&gt; 
&lt;p&gt;If you are using npm, run the following commands:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npm i
npm run start
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Updating&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;cd Interstellar
git pull --force --allow-unrelated-histories # This may overwrite your local changes
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;a target="_blank" href="https://heroku.com/deploy/?template=https://github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Heroku" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/heroku.svg?sanitize=true" /&gt;&lt;/a&gt; &lt;a target="_blank" href="https://app.koyeb.com/deploy?type=git&amp;amp;repository=github.com/UseInterstellar/Interstellar"&gt;&lt;img alt="Deploy to Koyeb" src="https://binbashbanana.github.io/deploy-buttons/buttons/remade/koyeb.svg?sanitize=true" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Deployment Alternatives&lt;/h3&gt; 
&lt;p&gt;For more deployment options, join our &lt;a href="https://discord.gg/interstellar"&gt;Discord Server&lt;/a&gt; for various ways to deploy Interstellar. This includes methods of deploying to Render/OnRender.&lt;/p&gt; 
&lt;h4&gt;What happened to Replit Deployment?&lt;/h4&gt; 
&lt;p&gt;As of January 1st, 2024, Replit is &lt;a href="https://blog.replit.com/hosting-changes"&gt;no longer free&lt;/a&gt;. Try GitHub Codespaces instead.&lt;/p&gt; 
&lt;h3&gt;GitHub Codespaces&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] If you're setting the port below 1023, then you must run &lt;code&gt;sudo PORT=1023&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;Create a GitHub account if you haven't already.&lt;/li&gt; 
 &lt;li&gt;Click "Code" (green button) and then "Create Codespace on main."&lt;/li&gt; 
 &lt;li&gt;In the terminal at the bottom, paste &lt;code&gt;pnpm i &amp;amp;&amp;amp; pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;Respond to the application popup by clicking "Make public."&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!IMPORTANT] Make sure you click the "Make public." button, or the proxy won't function properly.&lt;br /&gt; If you get a Range Error, go back and make sure you clicked Make public!&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol start="5"&gt; 
 &lt;li&gt;Access the deployed website from the ports tab.&lt;/li&gt; 
 &lt;li&gt;For subsequent uses in the same codespace, just run &lt;code&gt;pnpm start&lt;/code&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Solution for if there is no popup.&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Run &lt;code&gt;pnpm i&lt;/code&gt;, and before &lt;code&gt;pnpm start&lt;/code&gt;, prepend &lt;code&gt;PORT=8080&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;PORT=6969 pnpm start&lt;/code&gt;.&lt;/li&gt; 
 &lt;li&gt;If this does not work then you can prepend &lt;code&gt;$env:PORT=8080;&lt;/code&gt;, replacing 8080 with another port. For example, &lt;code&gt;$env:PORT=6969; pnpm start&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;Go to the ports tab, Click Forward A Port, And type the port number.&lt;/li&gt; 
 &lt;li&gt;Right-click Visibility and set Port Visibility to Public.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] We are committed to making Interstellar easy and personalized however, as of now we need your support in making it ad-free. Consider keeping ads so Interstellar can run freely or contribute by being a supporter.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Report Issues&lt;/h2&gt; 
&lt;p&gt;If you encounter problems, open an issue on GitHub, and we'll address it promptly.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!TIP] If you're having trouble, don't hesitate to reach out to us on &lt;a href="https://discord.gg/interstellar"&gt;Discord&lt;/a&gt; for personalized support.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h1&gt;Credits&lt;/h1&gt; 
&lt;p&gt;A huge thanks goes out to all of the people who have contributed to Interstellar.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://github.com/UseInterstellar/Interstellar/graphs/contributors"&gt;&lt;img src="https://contrib.rocks/image?repo=UseInterstellar/Interstellar" alt="Contributors" /&gt;&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>mediacms-io/mediacms</title>
      <link>https://github.com/mediacms-io/mediacms</link>
      <description>&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS, written in Python/Django and React, featuring a REST API.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;MediaCMS&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;&lt;img src="https://img.shields.io/badge/License-AGPL%20v3-blue.svg?sanitize=true" alt="GitHub license" /&gt;&lt;/a&gt; &lt;a href="https://github.com/mediacms-io/mediacms/releases/"&gt;&lt;img src="https://img.shields.io/github/v/release/mediacms-io/mediacms?color=green" alt="Releases" /&gt;&lt;/a&gt; &lt;a href="https://hub.docker.com/r/mediacms/mediacms"&gt;&lt;img src="https://img.shields.io/docker/pulls/mediacms/mediacms" alt="DockerHub" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;MediaCMS is a modern, fully featured open source video and media CMS. It is developed to meet the needs of modern web platforms for viewing and sharing media. It can be used to build a small to medium video and media portal within minutes.&lt;/p&gt; 
&lt;p&gt;It is built mostly using the modern stack Django + React and includes a REST API.&lt;/p&gt; 
&lt;p&gt;A demo is available at &lt;a href="https://demo.mediacms.io"&gt;https://demo.mediacms.io&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Screenshots&lt;/h2&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/index.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/video.jpg" width="340" /&gt; &lt;img src="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/images/embed.jpg" width="340" /&gt; &lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Complete control over your data&lt;/strong&gt;: host it yourself!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Modern technologies&lt;/strong&gt;: Django/Python/Celery, React.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for multiple publishing workflows&lt;/strong&gt;: public, private, unlisted and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media types support&lt;/strong&gt;: video, audio, image, pdf&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media classification options&lt;/strong&gt;: categories, tags and custom&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple media sharing options&lt;/strong&gt;: social media share, videos embed code generation&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Video Trimmer&lt;/strong&gt;: trim video, replace, save as new or create segments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Role-Based Access Control (RBAC)&lt;/strong&gt;: create RBAC categories and connect users to groups with view/edit access on their media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;SAML support&lt;/strong&gt;: with ability to add mappings to system roles and groups&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy media searching&lt;/strong&gt;: enriched with live search functionality&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Playlists for audio and video content&lt;/strong&gt;: create playlists, add and reorder content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Responsive design&lt;/strong&gt;: including light and dark themes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Advanced users management&lt;/strong&gt;: allow self registration, invite only, closed.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configurable actions&lt;/strong&gt;: allow download, add comments, add likes, dislikes, report media&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Configuration options&lt;/strong&gt;: change logos, fonts, styling, add more pages&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced video player&lt;/strong&gt;: customized video.js player with multiple resolution and playback speed options&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple transcoding profiles&lt;/strong&gt;: sane defaults for multiple dimensions (144p, 240p, 360p, 480p, 720p, 1080p) and multiple profiles (h264, h265, vp9)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Adaptive video streaming&lt;/strong&gt;: possible through HLS protocol&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Subtitles/CC&lt;/strong&gt;: support for multilingual subtitle files&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Scalable transcoding&lt;/strong&gt;: transcoding through priorities. Experimental support for remote workers&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Chunked file uploads&lt;/strong&gt;: for pausable/resumable upload of content&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;REST API&lt;/strong&gt;: Documented through Swagger&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Translation&lt;/strong&gt;: Most of the CMS is translated to a number of languages&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Example cases&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Schools, education.&lt;/strong&gt; Administrators and editors keep what content will be published, students are not distracted with advertisements and irrelevant content, plus they have the ability to select either to stream or download content.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Organization sensitive content.&lt;/strong&gt; In cases where content is sensitive and cannot be uploaded to external sites.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Build a great community.&lt;/strong&gt; MediaCMS can be customized (URLs, logos, fonts, aesthetics) so that you create a highly customized video portal for your community!&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Personal portal.&lt;/strong&gt; Organize, categorize and host your content the way you prefer.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;We believe there's a need for quality open source web applications that can be used to build community portals and support collaboration. We have three goals for MediaCMS: a) deliver all functionality one would expect from a modern system, b) allow for easy installation and maintenance, c) allow easy customization and addition of features.&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MediaCMS is released under &lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/LICENSE.txt"&gt;GNU Affero General Public License v3.0 license&lt;/a&gt;. Copyright Markos Gogoulos.&lt;/p&gt; 
&lt;h2&gt;Support and paid services&lt;/h2&gt; 
&lt;p&gt;We provide custom installations, development of extra functionality, migration from existing systems, integrations with legacy systems, training and support. Contact us at &lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h3&gt;Commercial Hostings&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Elestio&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;You can deploy MediaCMS on Elestio using one-click deployment. Elestio supports MediaCMS by providing revenue share so go ahead and click below to deploy and use MediaCMS.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://elest.io/open-source/mediacms"&gt;&lt;img src="https://elest.io/images/logos/deploy-to-elestio-btn.png" alt="Deploy on Elestio" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Hardware considerations&lt;/h2&gt; 
&lt;p&gt;For a small to medium installation, with a few hours of video uploaded daily, and a few hundreds of active daily users viewing content, 4GB Ram / 2-4 CPUs as minimum is ok. For a larger installation with many hours of video uploaded daily, consider adding more CPUs and more Ram.&lt;/p&gt; 
&lt;p&gt;In terms of disk space, think of what the needs will be. A general rule is to multiply by three the size of the expected uploaded videos (since the system keeps original versions, encoded versions plus HLS), so if you receive 1G of videos daily and maintain all of them, you should consider a 1T disk across a year (1G * 3 * 365).&lt;/p&gt; 
&lt;h2&gt;Installation / Maintanance&lt;/h2&gt; 
&lt;p&gt;There are two ways to run MediaCMS, through Docker Compose and through installing it on a server via an automation script that installs and configures all needed services. Find the related pages:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#2-server-installation"&gt;Single Server&lt;/a&gt; page&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#3-docker-installation"&gt;Docker Compose&lt;/a&gt; page&lt;/p&gt; &lt;p&gt;A complete guide can be found on the blog post &lt;a href="https://medium.com/@MediaCMS.io/how-to-self-host-and-share-your-videos-in-2021-14067e3b291b"&gt;How to self-host and share your videos in 2021&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/user_docs.md"&gt;Users documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md"&gt;Administrators documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/developers_docs.md"&gt;Developers documentation&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/admins_docs.md#5-configuration"&gt;Configuration&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/transcoding.md"&gt;Transcoding&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/dev_exp.md"&gt;Developer Experience&lt;/a&gt; page&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/mediacms-io/mediacms/main/docs/media_permissions.md"&gt;Media Permissions&lt;/a&gt; page&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Technology&lt;/h2&gt; 
&lt;p&gt;This software uses the following list of awesome technologies: Python, Django, Django Rest Framework, Celery, PostgreSQL, Redis, Nginx, uWSGI, React, Fine Uploader, video.js, FFMPEG, Bento4&lt;/p&gt; 
&lt;h2&gt;Who is using it&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Cinemata&lt;/strong&gt; non-profit media, technology and culture organization - &lt;a href="https://cinemata.org"&gt;https://cinemata.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Critical Commons&lt;/strong&gt; public media archive and fair use advocacy network - &lt;a href="https://criticalcommons.org"&gt;https://criticalcommons.org&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;American Association of Gynecologic Laparoscopists&lt;/strong&gt; - &lt;a href="https://surgeryu.org/"&gt;https://surgeryu.org/&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to contribute&lt;/h2&gt; 
&lt;p&gt;If you like the project, here's a few things you can do&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Hire us, for custom installations, training, support, maintenance work&lt;/li&gt; 
 &lt;li&gt;Suggest us to others that are interested to hire us&lt;/li&gt; 
 &lt;li&gt;Write a blog post/article about MediaCMS&lt;/li&gt; 
 &lt;li&gt;Share on social media about the project&lt;/li&gt; 
 &lt;li&gt;Open issues, participate on &lt;a href="https://github.com/mediacms-io/mediacms/discussions"&gt;discussions&lt;/a&gt;, report bugs, suggest ideas&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/mediacms-io/mediacms/discussions/categories/show-and-tell"&gt;Show and tell&lt;/a&gt; how you are using the project&lt;/li&gt; 
 &lt;li&gt;Star the project&lt;/li&gt; 
 &lt;li&gt;Add functionality, work on a PR, fix an issue!&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Contact&lt;/h2&gt; 
&lt;p&gt;&lt;a href="mailto:info@mediacms.io"&gt;info@mediacms.io&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>pot-app/pot-desktop</title>
      <link>https://github.com/pot-app/pot-desktop</link>
      <description>&lt;p&gt;🌈一个跨平台的划词翻译和OCR软件 | A cross-platform software for text translation and recognition.&lt;/p&gt;&lt;hr&gt;&lt;img width="200px" src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/public/icon.svg?sanitize=true" align="left" /&gt; 
&lt;h1&gt;Pot (派了个萌的翻译器)&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;🌈 一个跨平台的划词翻译软件 (&lt;a href="https://pd.qq.com/s/akns94e1r"&gt;QQ 频道&lt;/a&gt;)&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;img src="https://img.shields.io/github/license/pot-app/pot-desktop.svg?sanitize=true" alt="License" /&gt; &lt;img src="https://img.shields.io/badge/Tauri-1.6.8-blue?logo=tauri" alt="Tauri" /&gt; &lt;img src="https://img.shields.io/badge/-JavaScript-yellow?logo=javascript&amp;amp;logoColor=white" alt="JavaScript" /&gt; &lt;img src="https://img.shields.io/badge/-Rust-orange?logo=rust&amp;amp;logoColor=white" alt="Rust" /&gt; &lt;img src="https://img.shields.io/badge/-Windows-blue?logo=windows&amp;amp;logoColor=white" alt="Windows" /&gt; &lt;img src="https://img.shields.io/badge/-macOS-black?&amp;amp;logo=apple&amp;amp;logoColor=white" alt="MacOS" /&gt; &lt;img src="https://img.shields.io/badge/-Linux-yellow?logo=linux&amp;amp;logoColor=white" alt="Linux" /&gt;&lt;/p&gt; 
&lt;br /&gt; 
&lt;hr /&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;中文 | &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/README_EN.md"&gt;English&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/README_KR.md"&gt; 한글 &lt;/a&gt;&lt;/h3&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/1.png" /&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/2.png" /&gt; &lt;/td&gt;
    &lt;td&gt; &lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/3.png" /&gt; &lt;/td&gt;
   &lt;/tr&gt;
  &lt;/tbody&gt;
 &lt;/table&gt; 
 &lt;h1&gt;目录&lt;/h1&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E"&gt;使用说明&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E7%89%B9%E8%89%B2%E5%8A%9F%E8%83%BD"&gt;特色功能&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%94%AF%E6%8C%81%E6%8E%A5%E5%8F%A3"&gt;支持接口&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%8F%92%E4%BB%B6%E7%B3%BB%E7%BB%9F"&gt;插件系统&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97"&gt;安装指南&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E5%A4%96%E9%83%A8%E8%B0%83%E7%94%A8"&gt;外部调用&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#wayland-%E6%94%AF%E6%8C%81"&gt;Wayland 支持&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E5%9B%BD%E9%99%85%E5%8C%96weblate"&gt;国际化&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E8%B4%A1%E7%8C%AE%E8%80%85"&gt;贡献者&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%84%9F%E8%B0%A2"&gt;感谢&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;使用说明&lt;/h1&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;划词翻译&lt;/th&gt; 
    &lt;th&gt;输入翻译&lt;/th&gt; 
    &lt;th&gt;外部调用&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;鼠标选中需要翻译的文本，按下设置的划词翻译快捷键即可&lt;/td&gt; 
    &lt;td&gt;按下输入翻译快捷键呼出翻译窗口，输入待翻译文本后按下 回车 翻译&lt;/td&gt; 
    &lt;td&gt;通过被其他软件调用实现更加方便高效的功能, 详见 &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E5%A4%96%E9%83%A8%E8%B0%83%E7%94%A8"&gt;外部调用&lt;/a&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/eg1.gif" /&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/eg2.gif" /&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/eg3.gif" /&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
 &lt;table&gt; 
  &lt;thead&gt; 
   &lt;tr&gt; 
    &lt;th&gt;剪切板监听模式&lt;/th&gt; 
    &lt;th&gt;截图 OCR&lt;/th&gt; 
    &lt;th&gt;截图翻译&lt;/th&gt; 
   &lt;/tr&gt; 
  &lt;/thead&gt; 
  &lt;tbody&gt; 
   &lt;tr&gt; 
    &lt;td&gt;在任意翻译面板上点击左上角图标启动剪切板监听默认，复制文字即可完成翻译&lt;/td&gt; 
    &lt;td&gt;按下截图 OCR 快捷键后框选需要识别区域即可完成识别&lt;/td&gt; 
    &lt;td&gt;按下截图翻译快捷键后框选需要识别区域即可完成翻译&lt;/td&gt; 
   &lt;/tr&gt; 
   &lt;tr&gt; 
    &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/eg4.gif" /&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/eg5.gif" /&gt;&lt;/td&gt; 
    &lt;td&gt;&lt;img src="https://raw.githubusercontent.com/pot-app/pot-desktop/master/asset/eg6.gif" /&gt;&lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt; 
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;特色功能&lt;/h1&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 多接口并行翻译 (&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%94%AF%E6%8C%81%E6%8E%A5%E5%8F%A3"&gt;支持接口&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 多接口文字识别 (&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%94%AF%E6%8C%81%E6%8E%A5%E5%8F%A3"&gt;支持接口&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 多接口语音合成 (&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%94%AF%E6%8C%81%E6%8E%A5%E5%8F%A3"&gt;支持接口&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 导出到生词本 (&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%94%AF%E6%8C%81%E6%8E%A5%E5%8F%A3"&gt;支持接口&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 外部调用 (&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E5%A4%96%E9%83%A8%E8%B0%83%E7%94%A8"&gt;详情&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持插件系统 (&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%8F%92%E4%BB%B6%E7%B3%BB%E7%BB%9F"&gt;插件系统&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持所有 PC 平台 (Windows, macOS, Linux)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 支持 Wayland (在 KDE、Gnome 以及 Hyprland 上测试)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 多语言支持&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;支持接口&lt;/h1&gt; 
&lt;/div&gt; 
&lt;h2&gt;翻译&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://platform.openai.com/"&gt;OpenAI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.zhipuai.cn/"&gt;智谱 AI&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://gemini.google.com/"&gt;Gemini Pro&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.ollama.com/"&gt;Ollama&lt;/a&gt; (离线)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.aliyun.com/product/ai/alimt"&gt;阿里翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://fanyi.baidu.com/"&gt;百度翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://fanyi.caiyunapp.com/"&gt;彩云小译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://fanyi.qq.com/"&gt;腾讯翻译君&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://transmart.qq.com/"&gt;腾讯交互翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://translate.volcengine.com/"&gt;火山翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://niutrans.com/"&gt;小牛翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://translate.google.com"&gt;Google&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://learn.microsoft.com/zh-cn/azure/cognitive-services/translator/"&gt;Bing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.bing.com/dict"&gt;Bing 词典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.deepl.com/"&gt;DeepL&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://ai.youdao.com/"&gt;有道翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://dictionary.cambridge.org/"&gt;剑桥词典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://translate.yandex.com/"&gt;Yandex&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/TheDavidDelta/lingva-translate"&gt;Lingva&lt;/a&gt; (&lt;a href="https://github.com/pot-app/pot-app-translate-plugin-template"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://tatoeba.org/"&gt;Tatoeba&lt;/a&gt; (&lt;a href="https://github.com/pot-app/pot-app-translate-plugin-tatoeba"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/skywind3000/ECDICT"&gt;ECDICT&lt;/a&gt; (&lt;a href="https://github.com/pot-app/pot-app-translate-plugin-ecdict"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多接口支持见 &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%8F%92%E4%BB%B6%E7%B3%BB%E7%BB%9F"&gt;插件系统&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;文字识别&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; 系统 OCR (离线) 
  &lt;ul&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://learn.microsoft.com/en-us/uwp/api/windows.media.ocr.ocrengine?view=winrt-22621"&gt;Windows.Media.OCR&lt;/a&gt; on Windows&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://developer.apple.com/documentation/vision/recognizing_text_in_images"&gt;Apple Vision Framework&lt;/a&gt; on MacOS&lt;/li&gt; 
   &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/tesseract-ocr"&gt;Tesseract OCR&lt;/a&gt; on Linux&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://tesseract.projectnaptha.com/"&gt;Tesseract.js&lt;/a&gt; (离线)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://ai.baidu.com/tech/ocr/general"&gt;百度&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://cloud.tencent.com/product/ocr-catalog"&gt;腾讯&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.volcengine.com/product/OCR"&gt;火山&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.xfyun.cn/services/common-ocr"&gt;迅飞&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://cloud.tencent.com/document/product/551/17232"&gt;腾讯图片翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://fanyi-api.baidu.com/product/22"&gt;百度图片翻译&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://simpletex.cn/"&gt;Simple LaTeX&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://ocr.space/"&gt;OCRSpace&lt;/a&gt; (&lt;a href="https://github.com/pot-app/pot-app-recognize-plugin-template"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/RapidAI/RapidOcrOnnx"&gt;Rapid&lt;/a&gt; (离线 &lt;a href="https://github.com/pot-app/pot-app-recognize-plugin-rapid"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/hiroi-sora/PaddleOCR-json"&gt;Paddle&lt;/a&gt; (离线 &lt;a href="https://github.com/pot-app/pot-app-recognize-plugin-paddle"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多接口支持见 &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%8F%92%E4%BB%B6%E7%B3%BB%E7%BB%9F"&gt;插件系统&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;语音合成&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://github.com/thedaviddelta/lingva-translate"&gt;Lingva&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多接口支持见 &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%8F%92%E4%BB%B6%E7%B3%BB%E7%BB%9F"&gt;插件系统&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;生词本&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://apps.ankiweb.net/"&gt;Anki&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://dict.eudic.net/"&gt;欧路词典&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://www.youdao.com/"&gt;有道&lt;/a&gt; (&lt;a href="https://github.com/pot-app/pot-app-collection-plugin-youdao"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
 &lt;li&gt;&lt;input type="checkbox" checked disabled /&gt; &lt;a href="https://web.shanbay.com/web/main"&gt;扇贝&lt;/a&gt; (&lt;a href="https://github.com/pot-app/pot-app-collection-plugin-shanbay"&gt;插件&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;更多接口支持见 &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E6%8F%92%E4%BB%B6%E7%B3%BB%E7%BB%9F"&gt;插件系统&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;插件系统&lt;/h1&gt; 
&lt;/div&gt; 
&lt;p&gt;软件内置接口数量有限，但是您可以通过插件系统来扩展软件的功能。&lt;/p&gt; 
&lt;h2&gt;插件安装&lt;/h2&gt; 
&lt;p&gt;你可以在 &lt;a href="https://pot-app.com/plugin.html"&gt;Plugin List&lt;/a&gt; 查找你需要的插件，然后前往插件仓库下载插件。&lt;/p&gt; 
&lt;p&gt;pot 插件的扩展名为 &lt;code&gt;.potext&lt;/code&gt;, 下载得到&lt;code&gt;.potext&lt;/code&gt;文件之后， 在 偏好设置-服务设置-添加外部插件-安装外部插件 选择对应的 &lt;code&gt;.potext&lt;/code&gt; 即可安装成功，添加到服务列表中即可像内置服务一样正常使用了。&lt;/p&gt; 
&lt;h3&gt;故障排除&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;找不到指定的模块 (Windows)&lt;/p&gt; &lt;p&gt;出现类似这样的报错是因为系统缺少 C++库，前往&lt;a href="https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist?view=msvc-170#visual-studio-2015-2017-2019-and-2022"&gt;这里&lt;/a&gt;安装即可解决问题。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;不是有效的 Win32 应用程序 (Windows)&lt;/p&gt; &lt;p&gt;出现类似这样的报错说明你没有下载对应系统或者架构的插件，前往插件仓库下载正确的插件即可解决问题。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;插件开发&lt;/h2&gt; 
&lt;p&gt;在 &lt;a href="https://pot-app.com/plugin.html"&gt;Plugin List&lt;/a&gt; 中的 &lt;a href="https://pot-app.com/plugin.html#%E6%A8%A1%E6%9D%BF"&gt;模板&lt;/a&gt; 章节提供了各种插件的开发模板，具体的开发文档请查看对应的模板仓库。&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;安装指南&lt;/h1&gt; 
&lt;/div&gt; 
&lt;h2&gt;Windows&lt;/h2&gt; 
&lt;h3&gt;通过 Winget 安装&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;winget install Pylogmon.pot
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;手动安装&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;在 &lt;a href="https://github.com/pot-app/pot-desktop/releases/latest"&gt;Release&lt;/a&gt; 页面下载最新 &lt;code&gt;exe&lt;/code&gt; 安装包。&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;64 位机器下载 &lt;code&gt;pot_{version}_x64-setup.exe&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;32 位机器下载 &lt;code&gt;pot_{version}_x86-setup.exe&lt;/code&gt;&lt;/li&gt; 
   &lt;li&gt;arm64 机器下载 &lt;code&gt;pot_{version}_arm64-setup.exe&lt;/code&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;双击安装包进行安装。&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;故障排除&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;启动后没有界面，点击托盘图标没有反应&lt;/p&gt; &lt;p&gt;检查是否卸载/禁用了 WebView2，如果卸载/禁用了 WebView2，请手动安装 WebView2 或将其恢复。&lt;/p&gt; &lt;p&gt;如果是企业版系统不方便安装或无法安装 WebView2，请尝试在 &lt;a href="https://github.com/pot-app/pot-desktop/releases/latest"&gt;Release&lt;/a&gt; 下载内置 WebView2 的版本 &lt;code&gt;pot_{version}_{arch}_fix_webview2_runtime-setup.exe&lt;/code&gt;&lt;/p&gt; &lt;p&gt;若问题仍然存在请尝试使用 Windows7 兼容模式启动。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;MacOS&lt;/h2&gt; 
&lt;h3&gt;通过 Brew 安装&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;添加我们的 tap:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew tap pot-app/homebrew-tap
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;安装 pot:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew install --cask pot
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="3"&gt; 
 &lt;li&gt;更新 pot&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;brew upgrade --cask pot
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;手动安装&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;从 &lt;a href="https://github.com/pot-app/pot-desktop/releases/latest"&gt;Release&lt;/a&gt; 页面下载最新的 &lt;code&gt;dmg&lt;/code&gt; 安装包。（如果您使用的是 M1 芯片，请下载名为&lt;code&gt;pot_{version}_aarch64.dmg&lt;/code&gt;的安装包，否则请下载名为&lt;code&gt;pot_{version}_x64.dmg&lt;/code&gt;的安装包）&lt;/li&gt; 
 &lt;li&gt;双击下载的文件后将 pot 拖入 Applications 文件夹即可完成安装。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;故障排除&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;由于开发者无法验证，“pot”无法打开。&lt;/p&gt; &lt;p&gt;点击 取消 按钮，然后去 设置 -&amp;gt; 隐私与安全性 页面，点击 仍要打开 按钮，然后在弹出窗口里点击 打开 按钮即可，以后打开 pot 就再也不会有任何弹窗告警了&lt;/p&gt; &lt;p&gt;如果在 隐私与安全性 中找不到以上选项，或启动时提示文件损坏。打开 Terminal.app，并输入以下命令，然后重启 pot 即可：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;sudo xattr -d com.apple.quarantine /Applications/pot.app
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;如果每次打开时都遇到辅助功能权限提示，或者无法进行划词翻译，请前往设置 -&amp;gt; 隐私与安全 -&amp;gt; 辅助功能，移除 “pot”，并重新添加 “pot”。&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Linux&lt;/h2&gt; 
&lt;h3&gt;Debian/Ubuntu&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;从 &lt;a href="https://github.com/pot-app/pot-desktop/releases/latest"&gt;Release&lt;/a&gt; 页面下载最新的对应架构的 &lt;code&gt;deb&lt;/code&gt; 安装包。&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;使用 &lt;code&gt;apt-get&lt;/code&gt; 进行安装&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get install ./pot_{version}_amd64.deb
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Arch/Manjaro&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] 在最新版本的 &lt;a href="https://archlinux.org/packages/extra/x86_64/webkit2gtk"&gt;Webkit2Gtk&lt;/a&gt; (2.42.0) 中，由于 Nvidia 专有驱动未完全实现 DMABUF，将导致无法启动和崩溃的情况发生。&lt;br /&gt; 请降级或在 &lt;code&gt;/etc/environment&lt;/code&gt; （或者其他设置环境变量的地方）中加入 &lt;code&gt;WEBKIT_DISABLE_DMABUF_RENDERER=1&lt;/code&gt; 环境变量关闭 DMABUF 的使用。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt;在 &lt;a href="https://aur.archlinux.org/packages?O=0&amp;amp;K=pot-translation"&gt;AUR&lt;/a&gt; 查看&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;使用 &lt;code&gt;AUR helper&lt;/code&gt; 安装：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;yay -S pot-translation # 或 pot-translation-bin

# paru -S pot-translation # 或 pot-translation-bin
&lt;/code&gt;&lt;/pre&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;如果你使用 &lt;code&gt;archlinuxcn&lt;/code&gt; 源，可以直接使用 pacman 安装&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;sudo pacman -S pot-translation
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Flatpak&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!WARNING] Flatpak 版本缺失托盘图标。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;a href="https://flathub.org/apps/com.pot_app.pot"&gt; &lt;img width="240" alt="Download on Flathub" src="https://flathub.org/api/badge?locale=zh-Hans" /&gt; &lt;/a&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;外部调用&lt;/h1&gt; 
&lt;/div&gt; 
&lt;p&gt;Pot 提供了完整的 HTTP 接口，以便可以被其他软件调用。您可以通过向 &lt;code&gt;127.0.0.1:port&lt;/code&gt; 发送 HTTP 请求来调用 pot，其中的&lt;code&gt;port&lt;/code&gt;是 pot 监听的端口号，默认为&lt;code&gt;60828&lt;/code&gt;,可以在软件设置中进行更改。&lt;/p&gt; 
&lt;h2&gt;API 文档:&lt;/h2&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;POST "/" =&amp;gt; 翻译指定文本(body为需要翻译的文本),
GET "/config" =&amp;gt; 打开设置,
POST "/translate" =&amp;gt; 翻译指定文本(同"/"),
GET "/selection_translate" =&amp;gt; 划词翻译,
GET "/input_translate" =&amp;gt; 输入翻译,
GET "/ocr_recognize" =&amp;gt; 截图OCR,
GET "/ocr_translate" =&amp;gt; 截图翻译,
GET "/ocr_recognize?screenshot=false" =&amp;gt; 截图OCR(不使用软件内截图),
GET "/ocr_translate?screenshot=false" =&amp;gt; 截图翻译(不使用软件内截图),
GET "/ocr_recognize?screenshot=true" =&amp;gt; 截图OCR,
GET "/ocr_translate?screenshot=true" =&amp;gt; 截图翻译,
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;示例：&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;调用划词翻译：&lt;/p&gt; &lt;p&gt;如果想要调用 pot 划词翻译，只需向&lt;code&gt;127.0.0.1:port&lt;/code&gt;发送请求即可。&lt;/p&gt; &lt;p&gt;例如通过 curl 发送请求：&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;curl "127.0.0.1:60828/selection_translate"
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;不使用软件内截图&lt;/h2&gt; 
&lt;p&gt;这一功能可以让您在不使用软件内截图的情况下调用截图 OCR/截图翻译功能，这样您就可以使用您喜欢的截图工具来截图了，也可以解决在某些平台下 pot 自带的截图无法使用的问题。&lt;/p&gt; 
&lt;h3&gt;调用流程&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;使用其他截图工具截图&lt;/li&gt; 
 &lt;li&gt;将截图保存在 &lt;code&gt;$CACHE/com.pot-app.desktop/pot_screenshot_cut.png&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;向&lt;code&gt;127.0.0.1:port/ocr_recognize?screenshot=false&lt;/code&gt;发送请求即可调用成功&lt;/li&gt; 
&lt;/ol&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;code&gt;$CACHE&lt;/code&gt;为系统缓存目录，例如在 Windows 上为&lt;code&gt;C:\Users\{用户名}\AppData\Local\com.pot-app.desktop\pot_screenshot_cut.png&lt;/code&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;示例&lt;/h3&gt; 
&lt;p&gt;在 Linux 下调用 Flameshot 进行截图 OCR:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;rm ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;amp;&amp;amp; flameshot gui -s -p ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;amp;&amp;amp; curl "127.0.0.1:60828/ocr_recognize?screenshot=false"
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;现有用法 (快捷划词翻译)&lt;/h2&gt; 
&lt;h3&gt;SnipDo (Windows)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;从 &lt;a href="https://apps.microsoft.com/store/detail/snipdo/9NPZ2TVKJVT7"&gt;Microsoft Store&lt;/a&gt; 下载安装 SnipDo。&lt;/li&gt; 
 &lt;li&gt;从 &lt;a href="https://github.com/pot-app/pot-desktop/releases/latest"&gt;Release&lt;/a&gt; 下载 pot 的 SnipDo 扩展 (pot.pbar)&lt;/li&gt; 
 &lt;li&gt;双击下载的扩展文件完成安装。&lt;/li&gt; 
 &lt;li&gt;选中文字，可以看到弹出的 SnipDo 工具条，点击翻译按钮即可翻译。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;PopClip (MacOS)&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;从 &lt;a href="https://apps.apple.com/us/app/popclip/id445189367?mt=12"&gt;App Store&lt;/a&gt; 下载安装 PopClip&lt;/li&gt; 
 &lt;li&gt;从 &lt;a href="https://github.com/pot-app/pot-desktop/releases/latest"&gt;Release&lt;/a&gt; 下载 pot 的 PopClip 扩展 (pot.popclipextz)&lt;/li&gt; 
 &lt;li&gt;双击下载的扩展文件完成安装。&lt;/li&gt; 
 &lt;li&gt;在 PopClip 的扩展中启用 pot 扩展，选中文本即可点击翻译。&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Starry (Linux)&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Starry 目前仍处于开发阶段，因此您只能手动编译它。&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Github: &lt;a href="https://github.com/ccslykx/Starry"&gt;ccslykx/Starry&lt;/a&gt;&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;Wayland 支持&lt;/h1&gt; 
&lt;/div&gt; 
&lt;p&gt;由于各大发行版对于 Wayland 的支持程度不同，所以 pot 本身没法做到特别完美的支持，这里可以提供一些常见问题的解决方案，通过合理的设置之后，pot 也可以在 Wayland 下完美运行。&lt;/p&gt; 
&lt;h2&gt;快捷键无法使用&lt;/h2&gt; 
&lt;p&gt;由于 Tauri 的快捷键方案并没有支持 Wayland，所以 pot 应用内的快捷键设置在 Wayland 下无法使用。 您可以设置系统快捷用 curl 发送请求来触发 pot，详见&lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E5%A4%96%E9%83%A8%E8%B0%83%E7%94%A8"&gt;外部调用&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;截图无法使用&lt;/h2&gt; 
&lt;p&gt;在一些纯 Wayland 桌面环境/窗口管理器(如 Hyprland)上，pot 内置的截图无法使用，这时可以通过使用其他截图工具代替，详见 &lt;a href="https://raw.githubusercontent.com/pot-app/pot-desktop/master/#%E4%B8%8D%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%86%85%E6%88%AA%E5%9B%BE"&gt;不使用软件内截图&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;下面给出在 Hyprland 下的配置示例(通过 grim 和 slurp 实现截图)：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-conf"&gt;bind = ALT, X, exec, grim -g "$(slurp)" ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;amp;&amp;amp; curl "127.0.0.1:60828/ocr_recognize?screenshot=false"
bind = ALT, C, exec, grim -g "$(slurp)" ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png &amp;amp;&amp;amp; curl "127.0.0.1:60828/ocr_translate?screenshot=false"
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;其他桌面环境/窗口管理器也是类似的操作&lt;/p&gt; 
&lt;h2&gt;划词翻译窗口跟随鼠标位置&lt;/h2&gt; 
&lt;p&gt;由于目前 pot 在 Wayland 下还无法获取到正确的鼠标坐标，所以内部的实现无法工作。 对于某些桌面环境/窗口管理器，可以通过设置窗口规则来实现窗口跟随鼠标位置，这里以 Hyprland 为例：&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-conf"&gt;windowrulev2 = float, class:(pot), title:(Translator|OCR|PopClip|Screenshot Translate) # Translation window floating
windowrulev2 = move cursor 0 0, class:(pot), title:(Translator|PopClip|Screenshot Translate) # Translation window follows the mouse position.
&lt;/code&gt;&lt;/pre&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;国际化(&lt;a href="https://hosted.weblate.org/engage/pot-app/"&gt;Weblate&lt;/a&gt;)&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/pot-app/"&gt;&lt;img src="https://hosted.weblate.org/widget/pot-app/pot-desktop/svg-badge.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;&lt;a href="https://hosted.weblate.org/engage/pot-app/"&gt;&lt;img src="https://hosted.weblate.org/widget/pot-app/pot-desktop/zh_Hans/multi-auto.svg?sanitize=true" alt="" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;贡献者&lt;/h1&gt; 
&lt;/div&gt; 
&lt;img src="https://github.com/pot-app/.github/raw/master/pot-desktop-contributions.svg?raw=true" width="100%" /&gt; 
&lt;h2&gt;手动编译&lt;/h2&gt; 
&lt;h3&gt;环境要求&lt;/h3&gt; 
&lt;p&gt;Node.js &amp;gt;= 18.0.0&lt;/p&gt; 
&lt;p&gt;pnpm &amp;gt;= 8.5.0&lt;/p&gt; 
&lt;p&gt;Rust &amp;gt;= 1.80.0&lt;/p&gt; 
&lt;h3&gt;开始编译&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;Clone 仓库&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/pot-app/pot-desktop.git
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安装依赖&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;cd pot-desktop
pnpm install
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;安装依赖(仅 Linux 需要)&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf libxdo-dev libxcb1 libxrandr2 libdbus-1-3
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;开发调试&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm tauri dev # Run the app in development mode
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;打包构建&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;pnpm tauri build # Build into installation package
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;div align="center"&gt; 
 &lt;h1&gt;感谢&lt;/h1&gt; 
&lt;/div&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/ripperhe/Bob"&gt;Bob&lt;/a&gt; 灵感来源&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/yetone/bob-plugin-openai-translator"&gt;bob-plugin-openai-translator&lt;/a&gt; OpenAI 接口参考&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/uiYzzi"&gt;@uiYzzi&lt;/a&gt; 实现思路&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/Lichenkass"&gt;@Lichenkass&lt;/a&gt; 维护 Deepin 应用商店中的 pot&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/tauri-apps/tauri"&gt;Tauri&lt;/a&gt; 好用的 GUI 框架&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div align="center"&gt; 
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>vercel/next.js</title>
      <link>https://github.com/vercel/next.js</link>
      <description>&lt;p&gt;The React Framework&lt;/p&gt;&lt;hr&gt;&lt;div align="center"&gt; 
 &lt;a href="https://nextjs.org"&gt; 
  &lt;picture&gt; 
   &lt;source media="(prefers-color-scheme: dark)" srcset="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_dark_background.png" /&gt; 
   &lt;img alt="Next.js logo" src="https://assets.vercel.com/image/upload/v1662130559/nextjs/Icon_light_background.png" height="128" /&gt; 
  &lt;/picture&gt; &lt;/a&gt; 
 &lt;h1&gt;Next.js&lt;/h1&gt; 
 &lt;p&gt;&lt;a href="https://vercel.com"&gt;&lt;img alt="Vercel logo" src="https://img.shields.io/badge/MADE%20BY%20Vercel-000000.svg?style=for-the-badge&amp;amp;logo=Vercel&amp;amp;labelColor=000" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/next"&gt;&lt;img alt="NPM version" src="https://img.shields.io/npm/v/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/raw/canary/license.md"&gt;&lt;img alt="License" src="https://img.shields.io/npm/l/next.svg?style=for-the-badge&amp;amp;labelColor=000000" /&gt;&lt;/a&gt; &lt;a href="https://github.com/vercel/next.js/discussions"&gt;&lt;img alt="Join the community on GitHub" src="https://img.shields.io/badge/Join%20the%20community-blueviolet.svg?style=for-the-badge&amp;amp;logo=Next.js&amp;amp;labelColor=000000&amp;amp;logoWidth=20" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;/div&gt; 
&lt;h2&gt;Getting Started&lt;/h2&gt; 
&lt;p&gt;Used by some of the world's largest companies, Next.js enables you to create full-stack web applications by extending the latest React features, and integrating powerful Rust-based JavaScript tooling for the fastest builds.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Visit our &lt;a href="https://nextjs.org/learn"&gt;Learn Next.js&lt;/a&gt; course to get started with Next.js.&lt;/li&gt; 
 &lt;li&gt;Visit the &lt;a href="https://nextjs.org/showcase"&gt;Next.js Showcase&lt;/a&gt; to see more sites built with Next.js.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Visit &lt;a href="https://nextjs.org/docs"&gt;https://nextjs.org/docs&lt;/a&gt; to view the full documentation.&lt;/p&gt; 
&lt;h2&gt;Community&lt;/h2&gt; 
&lt;p&gt;The Next.js community can be found on &lt;a href="https://github.com/vercel/next.js/discussions"&gt;GitHub Discussions&lt;/a&gt; where you can ask questions, voice ideas, and share your projects with other people.&lt;/p&gt; 
&lt;p&gt;To chat with other community members you can join the Next.js &lt;a href="https://nextjs.org/discord"&gt;Discord&lt;/a&gt; server.&lt;/p&gt; 
&lt;p&gt;Do note that our &lt;a href="https://github.com/vercel/next.js/raw/canary/CODE_OF_CONDUCT.md"&gt;Code of Conduct&lt;/a&gt; applies to all Next.js community channels. Users are &lt;strong&gt;highly encouraged&lt;/strong&gt; to read and adhere to it to avoid repercussions.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Contributions to Next.js are welcome and highly appreciated. However, before you jump right into it, we would like you to review our &lt;a href="https://raw.githubusercontent.com/vercel/next.js/canary/contributing.md"&gt;Contribution Guidelines&lt;/a&gt; to make sure you have a smooth experience contributing to Next.js.&lt;/p&gt; 
&lt;h3&gt;Good First Issues:&lt;/h3&gt; 
&lt;p&gt;We have a list of &lt;strong&gt;&lt;a href="https://github.com/vercel/next.js/labels/%22good%20first%20issue%22"&gt;good first issues&lt;/a&gt;&lt;/strong&gt; that contain bugs that have a relatively limited scope. This is a great place for newcomers and beginners alike to get started, gain experience, and get familiar with our contribution process.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;h2&gt;Security&lt;/h2&gt; 
&lt;p&gt;If you believe you have found a security vulnerability in Next.js, we encourage you to &lt;strong&gt;&lt;em&gt;responsibly disclose this and NOT open a public issue&lt;/em&gt;&lt;/strong&gt;. We will investigate all legitimate reports.&lt;/p&gt; 
&lt;p&gt;Our preference is that you make use of GitHub's private vulnerability reporting feature to disclose potential security vulnerabilities in our Open Source Software. To do this, please visit &lt;a href="https://github.com/vercel/next.js/security"&gt;https://github.com/vercel/next.js/security&lt;/a&gt; and click the "Report a vulnerability" button.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>usebruno/bruno</title>
      <link>https://github.com/usebruno/bruno</link>
      <description>&lt;p&gt;Opensource IDE For Exploring and Testing API's (lightweight alternative to Postman/Insomnia)&lt;/p&gt;&lt;hr&gt;&lt;br /&gt; 
&lt;img src="https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/logo-transparent.png" width="80" /&gt; 
&lt;h3&gt;Bruno - Opensource IDE for exploring and testing APIs.&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://badge.fury.io/gh/usebruno%bruno"&gt;&lt;img src="https://badge.fury.io/gh/usebruno%2Fbruno.svg?sanitize=true" alt="GitHub version" /&gt;&lt;/a&gt; &lt;a href="https://github.com/usebruno/bruno/actions/workflows/tests.yml"&gt;&lt;img src="https://github.com/usebruno/bruno/actions/workflows/tests.yml/badge.svg?branch=main" alt="CI" /&gt;&lt;/a&gt; &lt;a href="https://github.com/usebruno/bruno/pulse"&gt;&lt;img src="https://img.shields.io/github/commit-activity/m/usebruno/bruno" alt="Commit Activity" /&gt;&lt;/a&gt; &lt;a href="https://twitter.com/use_bruno"&gt;&lt;img src="https://img.shields.io/twitter/follow/use_bruno?style=social&amp;amp;logo=x" alt="X" /&gt;&lt;/a&gt; &lt;a href="https://www.usebruno.com"&gt;&lt;img src="https://img.shields.io/badge/Website-Visit-blue" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://www.usebruno.com/downloads"&gt;&lt;img src="https://img.shields.io/badge/Download-Latest-brightgreen" alt="Download" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;English&lt;/strong&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_ua.md"&gt;Українська&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_ru.md"&gt;Русский&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_tr.md"&gt;Türkçe&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_de.md"&gt;Deutsch&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_fr.md"&gt;Français&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_pt_br.md"&gt;Português (BR)&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_kr.md"&gt;한국어&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_bn.md"&gt;বাংলা&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_es.md"&gt;Español&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_it.md"&gt;Italiano&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_ro.md"&gt;Română&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_pl.md"&gt;Polski&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_cn.md"&gt;简体中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_zhtw.md"&gt;正體中文&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_ar.md"&gt;العربية&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_ja.md"&gt;日本語&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_ka.md"&gt;ქართული&lt;/a&gt; | &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/docs/readme/readme_nl.md"&gt;Nederlands&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Bruno is a new and innovative API client, aimed at revolutionizing the status quo represented by Postman and similar tools out there.&lt;/p&gt; 
&lt;p&gt;Bruno stores your collections directly in a folder on your filesystem. We use a plain text markup language, Bru, to save information about API requests.&lt;/p&gt; 
&lt;p&gt;You can use Git or any version control of your choice to collaborate over your API collections.&lt;/p&gt; 
&lt;p&gt;Bruno is offline-only. There are no plans to add cloud-sync to Bruno, ever. We value your data privacy and believe it should stay on your device. Read our long-term vision &lt;a href="https://github.com/usebruno/bruno/discussions/269"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.usebruno.com/downloads"&gt;Download Bruno&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;📢 Watch our recent talk at India FOSS 3.0 Conference &lt;a href="https://www.youtube.com/watch?v=7bSMFpbcPiY"&gt;here&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/landing-2.png" alt="bruno" /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Commercial Versions ✨&lt;/h2&gt; 
&lt;p&gt;Majority of our features are free and open source. We strive to strike a harmonious balance between &lt;a href="https://github.com/usebruno/bruno/discussions/269"&gt;open-source principles and sustainability&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;You can explore our &lt;a href="https://www.usebruno.com/pricing"&gt;paid versions&lt;/a&gt; to see if there are additional features that you or your team may find useful! &lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#installation"&gt;Installation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#features"&gt;Features&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#run-across-multiple-platforms-%EF%B8%8F"&gt;Run across multiple platforms 🖥️&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#collaborate-via-git-"&gt;Collaborate via Git 👩‍💻🧑‍💻&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#important-links-"&gt;Important Links 📌&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#showcase-"&gt;Showcase 🎥&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#share-testimonials-"&gt;Share Testimonials 📣&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#publishing-to-new-package-managers"&gt;Publishing to New Package Managers&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#stay-in-touch-"&gt;Stay in touch 🌐&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#trademark"&gt;Trademark&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#contribute-"&gt;Contribute 👩‍💻🧑‍💻&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#authors"&gt;Authors&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/#license-"&gt;License 📄&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Installation&lt;/h2&gt; 
&lt;p&gt;Bruno is available as binary download &lt;a href="https://www.usebruno.com/downloads"&gt;on our website&lt;/a&gt; for Mac, Windows and Linux.&lt;/p&gt; 
&lt;p&gt;You can also install Bruno via package managers like Homebrew, Chocolatey, Scoop, Snap, Flatpak and Apt.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# On Mac via Homebrew
brew install bruno

# On Windows via Chocolatey
choco install bruno

# On Windows via Scoop
scoop bucket add extras
scoop install bruno

# On Windows via winget
winget install Bruno.Bruno

# On Linux via Snap
snap install bruno

# On Linux via Flatpak
flatpak install com.usebruno.Bruno

# On Linux via Apt
sudo mkdir -p /etc/apt/keyrings
sudo apt update &amp;amp;&amp;amp; sudo apt install gpg curl
sudo gpg --list-keys
curl -fsSL "https://keyserver.ubuntu.com/pks/lookup?op=get&amp;amp;search=0x9FA6017ECABE0266" | gpg --dearmor | sudo tee /etc/apt/keyrings/bruno.gpg &amp;gt; /dev/null
echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/bruno.gpg] http://debian.usebruno.com/ bruno stable" | sudo tee /etc/apt/sources.list.d/bruno.list
sudo apt update &amp;amp;&amp;amp; sudo apt install bruno
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;h3&gt;Run across multiple platforms 🖥️&lt;/h3&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/run-anywhere.png" alt="bruno" /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h3&gt;Collaborate via Git 👩‍💻🧑‍💻&lt;/h3&gt; 
&lt;p&gt;Or any version control system of your choice&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/usebruno/bruno/main/assets/images/version-control.png" alt="bruno" /&gt; &lt;br /&gt;&lt;br /&gt;&lt;/p&gt; 
&lt;h2&gt;Important Links 📌&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/usebruno/bruno/discussions/269"&gt;Our Long Term Vision&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usebruno.com/roadmap"&gt;Roadmap&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.usebruno.com"&gt;Documentation&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://stackoverflow.com/questions/tagged/bruno"&gt;Stack Overflow&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usebruno.com"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usebruno.com/pricing"&gt;Pricing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.usebruno.com/downloads"&gt;Download&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Showcase 🎥&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://github.com/usebruno/bruno/discussions/343"&gt;Testimonials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/usebruno/bruno/discussions/386"&gt;Knowledge Hub&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://github.com/usebruno/bruno/discussions/385"&gt;Scriptmania&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Share Testimonials 📣&lt;/h2&gt; 
&lt;p&gt;If Bruno has helped you at work and your teams, please don't forget to share your &lt;a href="https://github.com/usebruno/bruno/discussions/343"&gt;testimonials on our GitHub discussion&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Publishing to New Package Managers&lt;/h2&gt; 
&lt;p&gt;Please see &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/publishing.md"&gt;here&lt;/a&gt; for more information.&lt;/p&gt; 
&lt;h2&gt;Stay in touch 🌐&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://twitter.com/use_bruno"&gt;𝕏 (Twitter)&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.usebruno.com"&gt;Website&lt;/a&gt; &lt;br /&gt; &lt;a href="https://discord.com/invite/KgcZUncpjq"&gt;Discord&lt;/a&gt; &lt;br /&gt; &lt;a href="https://www.linkedin.com/company/usebruno"&gt;LinkedIn&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Trademark&lt;/h2&gt; 
&lt;p&gt;&lt;strong&gt;Name&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;Bruno&lt;/code&gt; is a trademark held by &lt;a href="https://www.helloanoop.com/"&gt;Anoop M D&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Logo&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The logo is sourced from &lt;a href="https://openmoji.org/library/emoji-1F436/"&gt;OpenMoji&lt;/a&gt;. License: CC &lt;a href="https://creativecommons.org/licenses/by-sa/4.0/"&gt;BY-SA 4.0&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Contribute 👩‍💻🧑‍💻&lt;/h2&gt; 
&lt;p&gt;I am happy that you are looking to improve bruno. Please check out the &lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/contributing.md"&gt;contributing guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Even if you are not able to make contributions via code, please don't hesitate to file bugs and feature requests that needs to be implemented to solve your use case.&lt;/p&gt; 
&lt;h2&gt;Authors&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;a href="https://github.com/usebruno/bruno/graphs/contributors"&gt; &lt;img src="https://contrib.rocks/image?repo=usebruno/bruno" /&gt; &lt;/a&gt; 
&lt;/div&gt; 
&lt;h2&gt;License 📄&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/usebruno/bruno/main/license.md"&gt;MIT&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>dequelabs/axe-core</title>
      <link>https://github.com/dequelabs/axe-core</link>
      <description>&lt;p&gt;Accessibility engine for automated Web UI testing&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;axe-core&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/LICENSE"&gt;&lt;img src="https://img.shields.io/npm/l/axe-core.svg?color=c41" alt="License" /&gt;&lt;/a&gt; &lt;a href="https://www.npmjs.com/package/axe-core"&gt;&lt;img src="https://img.shields.io/npm/v/axe-core.svg?sanitize=true" alt="Version" /&gt;&lt;/a&gt; &lt;a href="https://npm-stat.com/charts.html?package=axe-core&amp;amp;from=2017-01-01"&gt;&lt;img src="https://img.shields.io/npm/dw/axe-core.svg?color=080" alt="NPM downloads" /&gt;&lt;img src="https://img.shields.io/npm/dy/axe-core.svg?color=080&amp;amp;label=" alt="" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dequelabs/axe-core/commits/develop"&gt;&lt;img src="https://img.shields.io/github/commit-activity/y/dequelabs/axe-core.svg?sanitize=true" alt="Commits" /&gt;&lt;/a&gt; &lt;a href="https://github.com/dequelabs/axe-core/graphs/contributors"&gt;&lt;img src="https://img.shields.io/github/contributors/dequelabs/axe-core.svg?color=080" alt="GitHub contributors" /&gt;&lt;/a&gt; &lt;a href="https://accessibility.deque.com/axe-community"&gt;&lt;img src="https://img.shields.io/badge/slack-chat-purple.svg?logo=slack" alt="Join our Slack chat" /&gt;&lt;/a&gt; &lt;a href="https://packagequality.com/#?package=axe-core"&gt;&lt;img src="https://npm.packagequality.com/shield/axe-core.svg?sanitize=true" alt="Package Quality" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Axe is an accessibility testing engine for websites and other HTML-based user interfaces. It's fast, secure, lightweight, and was built to seamlessly integrate with any existing test environment so you can automate accessibility testing alongside your regular functional testing.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://hubs.ly/H0fsN0b0"&gt;Sign up for axe news&lt;/a&gt; to get the latest on axe features, future releases, and events.&lt;/p&gt; 
&lt;h2&gt;The Accessibility Rules&lt;/h2&gt; 
&lt;p&gt;Axe-core has different types of rules, for WCAG 2.0, 2.1, 2.2 on level A, AA and AAA as well as a number of best practices that help you identify common accessibility practices like ensuring every page has an &lt;code&gt;h1&lt;/code&gt; heading, and to help you avoid "gotchas" in ARIA like where an ARIA attribute you used will get ignored. The complete list of rules, grouped WCAG level and best practice, can be found in &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/rule-descriptions.md"&gt;doc/rule-descriptions.md&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;With axe-core, you can find &lt;strong&gt;on average 57% of WCAG issues automatically&lt;/strong&gt;. Additionally, axe-core will return elements as "incomplete" where axe-core could not be certain, and manual review is needed.&lt;/p&gt; 
&lt;p&gt;To catch bugs earlier in the development cycle we recommend using the &lt;a href="https://marketplace.visualstudio.com/items?itemName=deque-systems.vscode-axe-linter"&gt;axe-linter vscode extension&lt;/a&gt;. To improve test coverage even further we recommend the &lt;a href="https://www.youtube.com/watch?v=AtsX0dPCG_4&amp;amp;feature=youtu.be&amp;amp;ab_channel=DequeSystems"&gt;intelligent guided tests&lt;/a&gt; in the &lt;a href="https://www.deque.com/axe/browser-extensions/"&gt;axe Extension&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Getting started&lt;/h2&gt; 
&lt;p&gt;First download the package:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-console"&gt;npm install axe-core --save-dev
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now include the javascript file in each of your iframes in your fixtures or test systems:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-html"&gt;&amp;lt;script src="node_modules/axe-core/axe.min.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Now insert calls at each point in your tests where a new piece of UI becomes visible or exposed:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axe
  .run()
  .then(results =&amp;gt; {
    if (results.violations.length) {
      throw new Error('Accessibility issues found');
    }
  })
  .catch(err =&amp;gt; {
    console.error('Something bad happened:', err.message);
  });
&lt;/code&gt;&lt;/pre&gt; 
&lt;h2&gt;Philosophy&lt;/h2&gt; 
&lt;p&gt;The web can only become an accessible, inclusive space if developers are empowered to take responsibility for accessibility testing and accessible coding practices.&lt;/p&gt; 
&lt;p&gt;Automated accessibility testing is a huge timesaver, it doesn't require special expertise, and it allows teams to focus expert resources on the accessibility issues that really need them. Unfortunately, most accessibility tools are meant to be run on sites and applications that have reached the end of the development process and often don't give clear or consistent results, causing frustration and delays just when you thought your product was ready to ship.&lt;/p&gt; 
&lt;p&gt;Axe was built to reflect how web development actually works. It works with all modern browsers, tools, and testing environments a dev team might use. With axe, accessibility testing can be performed as part of your unit testing, integration testing, browser testing, and any other functional testing your team already performs on a day-to-day basis. Building accessibility testing into the early development process saves time, resources, and all kinds of frustration.&lt;/p&gt; 
&lt;h2&gt;About axe - our Manifesto&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;Axe is open source.&lt;/li&gt; 
 &lt;li&gt;It returns zero false positives (bugs notwithstanding).&lt;/li&gt; 
 &lt;li&gt;It's designed to work on all modern browsers and with whatever tools, frameworks, libraries and environments you use today.&lt;/li&gt; 
 &lt;li&gt;It's actively supported by &lt;a href="https://www.deque.com"&gt;Deque Systems&lt;/a&gt;, a major accessibility vendor.&lt;/li&gt; 
 &lt;li&gt;It integrates with your existing functional/acceptance automated tests.&lt;/li&gt; 
 &lt;li&gt;It automatically determines which rules to run based on the evaluation context.&lt;/li&gt; 
 &lt;li&gt;Axe supports in-memory fixtures, static fixtures, integration tests, and iframes of infinite depth.&lt;/li&gt; 
 &lt;li&gt;Axe is highly configurable.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Supported Browsers&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/API.md"&gt;axe-core API&lt;/a&gt; fully supports the following browsers:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Microsoft Edge v40 and above&lt;/li&gt; 
 &lt;li&gt;Google Chrome v42 and above&lt;/li&gt; 
 &lt;li&gt;Mozilla Firefox v38 and above&lt;/li&gt; 
 &lt;li&gt;Apple Safari v7 and above&lt;/li&gt; 
 &lt;li&gt;Internet Explorer v11 (DEPRECATED)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Support means that we will fix bugs and attempt to test each browser regularly. Only Chrome and Firefox are currently tested on every pull request.&lt;/p&gt; 
&lt;p&gt;There is limited support for JSDOM. We will attempt to make all rules compatible with JSDOM but where this is not possible, we recommend turning those rules off. Currently the &lt;code&gt;color-contrast&lt;/code&gt; rule is known not to work with JSDOM.&lt;/p&gt; 
&lt;p&gt;We can only support environments where features are either natively supported or polyfilled correctly. We do not support the deprecated v0 Shadow DOM implementation.&lt;/p&gt; 
&lt;h2&gt;Contents of the API Package&lt;/h2&gt; 
&lt;p&gt;The &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/API.md"&gt;axe-core API&lt;/a&gt; package consists of:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;axe.js&lt;/code&gt; - the JavaScript file that should be included in your web site under test (API)&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;axe.min.js&lt;/code&gt; - a minified version of the above file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Localization&lt;/h2&gt; 
&lt;p&gt;Axe can be built using your local language. To do so, a localization file must be added to the &lt;code&gt;./locales&lt;/code&gt; directory. This file must be named in the following manner: &lt;code&gt;&amp;lt;langcode&amp;gt;.json&lt;/code&gt;. To build axe using this locale, instead of the default, run axe with the &lt;code&gt;--lang&lt;/code&gt; flag, like so:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;grunt build --lang=nl&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;or equivalently:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;npm run build -- --lang=nl&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;This will create a new build for axe, called &lt;code&gt;axe.&amp;lt;lang&amp;gt;.js&lt;/code&gt; and &lt;code&gt;axe.&amp;lt;lang&amp;gt;.min.js&lt;/code&gt;. If you want to build all localized versions, simply pass in &lt;code&gt;--all-lang&lt;/code&gt; instead. If you want to build multiple localized versions (but not all of them), you can pass in a comma-separated list of languages to the &lt;code&gt;--lang&lt;/code&gt; flag, like &lt;code&gt;--lang=nl,ja&lt;/code&gt;.&lt;/p&gt; 
&lt;p&gt;To create a new translation for axe, start by running &lt;code&gt;grunt translate --lang=&amp;lt;langcode&amp;gt;&lt;/code&gt;. This will create a json file in the &lt;code&gt;./locales&lt;/code&gt; directory, with the default English text in it for you to translate. Alternatively, you could copy &lt;code&gt;./locales/_template.json&lt;/code&gt;. We welcome any localization for axe-core. For details on how to contribute, see the Contributing section below. For details on the message syntax, see &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/check-message-template.md"&gt;Check Message Template&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;To update an existing translation file, re-run &lt;code&gt;grunt translate --lang=&amp;lt;langcode&amp;gt;&lt;/code&gt;. This will add new messages used in English and remove messages which were not used in English.&lt;/p&gt; 
&lt;p&gt;Additionally, locale can be applied at runtime by passing a &lt;code&gt;locale&lt;/code&gt; object to &lt;code&gt;axe.configure()&lt;/code&gt;. The locale object must be of the same shape as existing locales in the &lt;code&gt;./locales&lt;/code&gt; directory. For example:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-js"&gt;axe.configure({
  locale: {
    lang: 'de',
    rules: {
      accesskeys: {
        help: 'Der Wert des accesskey-Attributes muss einzigartig sein.'
      }
      // ...
    },
    checks: {
      abstractrole: {
        fail: 'Abstrakte ARIA-Rollen dürfen nicht direkt verwendet werden.'
      },
      'aria-errormessage': {
        // Note: doT (https://github.com/olado/dot) templates are supported here.
        fail: 'Der Wert der aria-errormessage ${data.values}` muss eine Technik verwenden, um die Message anzukündigen (z. B., aria-live, aria-describedby, role=alert, etc.).'
      }
      // ...
    }
  }
});
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Supported Locales&lt;/h3&gt; 
&lt;p&gt;Axe-core supports the following locales. Do note that since locales are contributed by our community, they are not guaranteed to include all translations needed in a release.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Basque&lt;/li&gt; 
 &lt;li&gt;Danish&lt;/li&gt; 
 &lt;li&gt;Dutch&lt;/li&gt; 
 &lt;li&gt;French&lt;/li&gt; 
 &lt;li&gt;German&lt;/li&gt; 
 &lt;li&gt;Hebrew&lt;/li&gt; 
 &lt;li&gt;Japanese&lt;/li&gt; 
 &lt;li&gt;Korean&lt;/li&gt; 
 &lt;li&gt;Norwegian (Bokmål)&lt;/li&gt; 
 &lt;li&gt;Polish&lt;/li&gt; 
 &lt;li&gt;Portuguese (Brazilian)&lt;/li&gt; 
 &lt;li&gt;Spanish&lt;/li&gt; 
 &lt;li&gt;Greek&lt;/li&gt; 
 &lt;li&gt;Italian&lt;/li&gt; 
 &lt;li&gt;Simplified Chinese&lt;/li&gt; 
 &lt;li&gt;Traditional Chinese&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Updates &amp;amp; Security&lt;/h2&gt; 
&lt;p&gt;Axe-core has a new minor release every 3 to 5 months, which usually introduces new rules and features. We recommend scheduling time to upgrade to these versions. Security updates will be made available for minor version lines up to &lt;strong&gt;18 months old&lt;/strong&gt;.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/release-and-support.md"&gt;release and support&lt;/a&gt; for details on the frequency of releases, long-term support and recommendations on upgrading axe-core.&lt;/li&gt; 
 &lt;li&gt;See &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/backwards-compatibility-doc.md"&gt;backward compatibility&lt;/a&gt; for details on the types of changes different releases may introduce.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Deque Trademarks Policy&lt;/h2&gt; 
&lt;p&gt;DEQUE, DEQUELABS, AXE®, and AXE-CORE® are trademarks of Deque Systems, Inc. Use of the Deque trademarks must be in accordance with &lt;a href="https://www.deque.com/legal/trademarks/"&gt;Deque's trademark policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Supported ARIA Roles and Attributes.&lt;/h2&gt; 
&lt;p&gt;Refer &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/aria-supported.md"&gt;axe-core ARIA support&lt;/a&gt; for a complete list of ARIA supported roles and attributes by axe.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/rule-proposal.md"&gt;Proposing Axe-core Rules guide&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/developer-guide.md"&gt;documentation on the architecture&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Read the &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/CONTRIBUTING.md"&gt;documentation on contributing&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Projects using axe-core&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/doc/projects.md"&gt;List of projects using axe-core&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;Acknowledgements&lt;/h2&gt; 
&lt;p&gt;Thanks to Marat Dulin for his &lt;a href="https://www.npmjs.com/package/css-selector-parser"&gt;css-selector-parser&lt;/a&gt; implementation which is included for shadow DOM support. Another thank you to the &lt;a href="https://github.com/mootools/slick/raw/master/Source/Slick.Parser.js"&gt;Slick Parser&lt;/a&gt; implementers for their contribution, we have used some of their algorithms in our shadow DOM support code. Thanks to Lea Verou and Chris Lilley for their &lt;a href="https://colorjs.io/"&gt;colorjs.io&lt;/a&gt; library which we have used for converting between color formats.&lt;/p&gt; 
&lt;h2&gt;Licenses&lt;/h2&gt; 
&lt;p&gt;Axe-core is distributed under the &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/LICENSE"&gt;Mozilla Public License, version 2.0&lt;/a&gt;. It comes bundled with several dependencies which are distributed under their own terms. (See &lt;a href="https://raw.githubusercontent.com/dequelabs/axe-core/develop/LICENSE-3RD-PARTY.txt"&gt;LICENSE-3RD-PARTY.txt&lt;/a&gt;)&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>wonderwhy-er/DesktopCommanderMCP</title>
      <link>https://github.com/wonderwhy-er/DesktopCommanderMCP</link>
      <description>&lt;p&gt;This is MCP server for Claude that gives it terminal control, file system search and diff file editing capabilities&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Desktop Commander MCP&lt;/h1&gt; 
&lt;h3&gt;Search, update, manage files and run terminal commands with AI&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.npmjs.com/package/@wonderwhy-er/desktop-commander"&gt;&lt;img src="https://img.shields.io/npm/dw/@wonderwhy-er/desktop-commander" alt="npm downloads" /&gt;&lt;/a&gt; &lt;a href="https://archestra.ai/mcp-catalog/wonderwhy-er__desktopcommandermcp"&gt;&lt;img src="https://archestra.ai/mcp-catalog/api/badge/quality/wonderwhy-er/DesktopCommanderMCP" alt="Trust Score" /&gt;&lt;/a&gt; &lt;a href="https://smithery.ai/server/@wonderwhy-er/desktop-commander"&gt;&lt;img src="https://smithery.ai/badge/@wonderwhy-er/desktop-commander" alt="smithery badge" /&gt;&lt;/a&gt; &lt;a href="https://www.buymeacoffee.com/wonderwhyer"&gt;&lt;img src="https://img.shields.io/badge/Buy%20Me%20A%20Coffee-support-yellow.svg?sanitize=true" alt="Buy Me A Coffee" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://discord.gg/kQ27sNnZr7"&gt;&lt;img src="https://img.shields.io/badge/Join%20Discord-5865F2?style=for-the-badge&amp;amp;logo=discord&amp;amp;logoColor=white" alt="Discord" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;Work with code and text, run processes, and automate tasks, going far beyond other AI editors - without API token costs.&lt;/p&gt; 
&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/docs/vertical_video_mobile.mp4" alt="Desktop Commander MCP" /&gt;&lt;/p&gt; 
&lt;a href="https://glama.ai/mcp/servers/zempur9oh4"&gt; &lt;img width="380" height="200" src="https://glama.ai/mcp/servers/zempur9oh4/badge" alt="Desktop Commander MCP" /&gt; &lt;/a&gt; 
&lt;h2&gt;Table of Contents&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#features"&gt;Features&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#how-to-install"&gt;How to install&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#usage"&gt;Usage&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#handling-long-running-commands"&gt;Handling Long-Running Commands&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#roadmap"&gt;Work in Progress and TODOs&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#support-desktop-commander"&gt;Sponsors and Supporters&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#website"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#media"&gt;Media&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#testimonials"&gt;Testimonials&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#frequently-asked-questions"&gt;Frequently Asked Questions&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#contributing"&gt;Contributing&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#license"&gt;License&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All of your AI development tools in one place. Desktop Commander puts all dev tools in one chat. Execute long-running terminal commands on your computer and manage processes through Model Context Protocol (MCP). Built on top of &lt;a href="https://github.com/modelcontextprotocol/servers/tree/main/src/filesystem"&gt;MCP Filesystem Server&lt;/a&gt; to provide additional search and replace file editing capabilities.&lt;/p&gt; 
&lt;h2&gt;Features&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Enhanced terminal commands with interactive process control&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execute code in memory (Python, Node.js, R) without saving files&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Instant data analysis - just ask to analyze CSV/JSON files&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interact with running processes (SSH, databases, development servers)&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Execute terminal commands with output streaming&lt;/li&gt; 
 &lt;li&gt;Command timeout and background execution support&lt;/li&gt; 
 &lt;li&gt;Process management (list and kill processes)&lt;/li&gt; 
 &lt;li&gt;Session management for long-running commands&lt;/li&gt; 
 &lt;li&gt;Server configuration management: 
  &lt;ul&gt; 
   &lt;li&gt;Get/set configuration values&lt;/li&gt; 
   &lt;li&gt;Update multiple settings at once&lt;/li&gt; 
   &lt;li&gt;Dynamic configuration changes without server restart&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Full filesystem operations: 
  &lt;ul&gt; 
   &lt;li&gt;Read/write files&lt;/li&gt; 
   &lt;li&gt;Create/list directories&lt;/li&gt; 
   &lt;li&gt;Move files/directories&lt;/li&gt; 
   &lt;li&gt;Search files&lt;/li&gt; 
   &lt;li&gt;Get file metadata&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Negative offset file reading&lt;/strong&gt;: Read from end of files using negative offset values (like Unix tail)&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Code editing capabilities: 
  &lt;ul&gt; 
   &lt;li&gt;Surgical text replacements for small changes&lt;/li&gt; 
   &lt;li&gt;Full file rewrites for major changes&lt;/li&gt; 
   &lt;li&gt;Multiple file support&lt;/li&gt; 
   &lt;li&gt;Pattern-based replacements&lt;/li&gt; 
   &lt;li&gt;vscode-ripgrep based recursive code or text search in folders&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Comprehensive audit logging: 
  &lt;ul&gt; 
   &lt;li&gt;All tool calls are automatically logged&lt;/li&gt; 
   &lt;li&gt;Log rotation with 10MB size limit&lt;/li&gt; 
   &lt;li&gt;Detailed timestamps and arguments&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;How to install&lt;/h2&gt; 
&lt;p&gt;Desktop Commander offers multiple installation methods to fit different user needs and technical requirements.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;📋 Update &amp;amp; Uninstall Information:&lt;/strong&gt; Before choosing an installation option, note that &lt;strong&gt;only Options 1, 2, 3, and 6 have automatic updates&lt;/strong&gt;. Options 4 and 5 require manual updates. See the sections below for update and uninstall instructions for each option.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Option 1: Install through npx ⭐ &lt;strong&gt;Auto-Updates&lt;/strong&gt; &lt;strong&gt;Requires Node.js&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Just run this in terminal:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx @wonderwhy-er/desktop-commander@latest setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For debugging mode (allows Node.js inspector connection):&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;npx @wonderwhy-er/desktop-commander@latest setup --debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Restart Claude if running.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✅ Auto-Updates:&lt;/strong&gt; Yes - automatically updates when you restart Claude&lt;br /&gt; &lt;strong&gt;🔄 Manual Update:&lt;/strong&gt; Run the setup command again&lt;br /&gt; &lt;strong&gt;🗑️ Uninstall:&lt;/strong&gt; Run &lt;code&gt;npx @wonderwhy-er/desktop-commander@latest remove&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Option 2: Using bash script installer (macOS) ⭐ &lt;strong&gt;Auto-Updates&lt;/strong&gt; &lt;strong&gt;Installs Node.js if needed&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;For macOS users, you can use our automated bash installer which will check your Node.js version, install it if needed, and automatically configure Desktop Commander:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install.sh | bash
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This script handles all dependencies and configuration automatically for a seamless setup experience.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✅ Auto-Updates:&lt;/strong&gt; Yes - requires manual updates&lt;br /&gt; &lt;strong&gt;🔄 Manual Update:&lt;/strong&gt; Re-run the bash installer command above&lt;br /&gt; &lt;strong&gt;🗑️ Uninstall:&lt;/strong&gt; Run &lt;code&gt;npx @wonderwhy-er/desktop-commander@latest remove&lt;/code&gt;&lt;/p&gt; 
&lt;h3&gt;Option 3: Installing via Smithery ⭐ &lt;strong&gt;Auto-Updates&lt;/strong&gt; &lt;strong&gt;Requires Node.js&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;To install Desktop Commander for Claude Desktop via &lt;a href="https://smithery.ai/server/@wonderwhy-er/desktop-commander"&gt;Smithery&lt;/a&gt;:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Visit the Smithery page:&lt;/strong&gt; &lt;a href="https://smithery.ai/server/@wonderwhy-er/desktop-commander"&gt;https://smithery.ai/server/@wonderwhy-er/desktop-commander&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Login to Smithery&lt;/strong&gt; if you haven't already&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Select your client&lt;/strong&gt; (Claude Desktop) on the right side&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Install with the provided key&lt;/strong&gt; that appears after selecting your client&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Restart Claude Desktop&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;The old command-line installation method is no longer supported. Please use the web interface above for the most reliable installation experience.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✅ Auto-Updates:&lt;/strong&gt; Yes - automatically updates when you restart Claude&lt;br /&gt; &lt;strong&gt;🔄 Manual Update:&lt;/strong&gt; Visit the Smithery page and reinstall&lt;/p&gt; 
&lt;h3&gt;Option 4: Add to claude_desktop_config manually ⭐ &lt;strong&gt;Auto-Updates&lt;/strong&gt; &lt;strong&gt;Requires Node.js&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Add this entry to your claude_desktop_config.json:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;On Mac: &lt;code&gt;~/Library/Application\ Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On Windows: &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;On Linux: &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "desktop-commander": {
      "command": "npx",
      "args": [
        "-y",
        "@wonderwhy-er/desktop-commander@latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Restart Claude if running.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✅ Auto-Updates:&lt;/strong&gt; Yes - automatically updates when you restart Claude&lt;br /&gt; &lt;strong&gt;🔄 Manual Update:&lt;/strong&gt; Run the setup command again&lt;br /&gt; &lt;strong&gt;🗑️ Uninstall:&lt;/strong&gt; Run &lt;code&gt;npx @wonderwhy-er/desktop-commander@latest remove&lt;/code&gt; or remove the "desktop-commander" entry from your claude_desktop_config.json file&lt;/p&gt; 
&lt;h3&gt;### Option 5: Checkout locally ❌ &lt;strong&gt;Manual Updates&lt;/strong&gt; &lt;strong&gt;Requires Node.js&lt;/strong&gt; ❌ &lt;strong&gt;Manual Updates&lt;/strong&gt; &lt;strong&gt;Requires Node.js&lt;/strong&gt;&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt;Clone and build:&lt;/li&gt; 
&lt;/ol&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;git clone https://github.com/wonderwhy-er/DesktopCommanderMCP.git
cd DesktopCommanderMCP
npm run setup
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Restart Claude if running.&lt;/p&gt; 
&lt;p&gt;The setup command will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Install dependencies&lt;/li&gt; 
 &lt;li&gt;Build the server&lt;/li&gt; 
 &lt;li&gt;Configure Claude's desktop app&lt;/li&gt; 
 &lt;li&gt;Add MCP servers to Claude's config if needed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;❌ Auto-Updates:&lt;/strong&gt; No - requires manual git updates&lt;br /&gt; &lt;strong&gt;🔄 Manual Update:&lt;/strong&gt; &lt;code&gt;cd DesktopCommanderMCP &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; npm run setup&lt;/code&gt;&lt;br /&gt; &lt;strong&gt;🗑️ Uninstall:&lt;/strong&gt; Run &lt;code&gt;npx @wonderwhy-er/desktop-commander@latest remove&lt;/code&gt; or remove the cloned directory and remove MCP server entry from Claude config&lt;/p&gt; 
&lt;h3&gt;Option 6: Docker Installation 🐳 ⭐ &lt;strong&gt;Auto-Updates&lt;/strong&gt; &lt;strong&gt;No Node.js Required&lt;/strong&gt;&lt;/h3&gt; 
&lt;p&gt;Perfect for users who want complete or partial isolation or don't have Node.js installed. Desktop Commander runs in a sandboxed Docker container with a persistent work environment.&lt;/p&gt; 
&lt;h4&gt;Prerequisites&lt;/h4&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://www.docker.com/products/docker-desktop/"&gt;Docker Desktop&lt;/a&gt; installed &lt;strong&gt;and running&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;Claude Desktop app installed&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; Make sure Docker Desktop is fully started before running the installer.&lt;/p&gt; 
&lt;h4&gt;Automated Installation (Recommended)&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;macOS/Linux:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash &amp;lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Windows PowerShell:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;# Download and run the installer (one-liner)
iex ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1'))
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The automated installer will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check Docker installation&lt;/li&gt; 
 &lt;li&gt;Pull the latest Docker image&lt;/li&gt; 
 &lt;li&gt;Prompt you to select folders for mounting&lt;/li&gt; 
 &lt;li&gt;Configure Claude Desktop automatically&lt;/li&gt; 
 &lt;li&gt;Restart Claude if possible&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;How Docker Persistence Works&lt;/h4&gt; 
&lt;p&gt;Desktop Commander creates a persistent work environment that remembers everything between sessions:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Your development tools&lt;/strong&gt;: Any software you install (Node.js, Python, databases, etc.) stays installed&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your configurations&lt;/strong&gt;: Git settings, SSH keys, shell preferences, and other personal configs are preserved&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Your work files&lt;/strong&gt;: Projects and files in the workspace area persist across restarts&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Package caches&lt;/strong&gt;: Downloaded packages and dependencies are cached for faster future installs&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Think of it like having your own dedicated development computer that never loses your setup, but runs safely isolated from your main system.&lt;/p&gt; 
&lt;h4&gt;Manual Docker Configuration&lt;/h4&gt; 
&lt;p&gt;If you prefer manual setup, add this to your claude_desktop_config.json:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Basic setup (no file access):&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "desktop-commander-in-docker": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "mcp/desktop-commander:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;With folder mounting:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "desktop-commander-in-docker": {
      "command": "docker",
      "args": [
        "run",
        "-i",
        "--rm",
        "-v", "/Users/username/Desktop:/mnt/desktop",
        "-v", "/Users/username/Documents:/mnt/documents",
        "mcp/desktop-commander:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Advanced folder mounting:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "desktop-commander-in-docker": {
      "command": "docker",
      "args": [
        "run", "-i", "--rm",
        "-v", "dc-system:/usr",
        "-v", "dc-home:/root", 
        "-v", "dc-workspace:/workspace",
        "-v", "dc-packages:/var",
        "-v", "/Users/username/Projects:/mnt/Projects",
        "-v", "/Users/username/Downloads:/mnt/Downloads",
        "mcp/desktop-commander:latest"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Docker Benefits&lt;/h4&gt; 
&lt;p&gt;✅ &lt;strong&gt;Controlled Isolation:&lt;/strong&gt; Runs in sandboxed environment with persistent development state ✅ &lt;strong&gt;No Node.js Required:&lt;/strong&gt; Everything included in the container ✅ &lt;strong&gt;Cross-Platform:&lt;/strong&gt; Same experience on all operating systems ✅ &lt;strong&gt;Persistent Environment:&lt;/strong&gt; Your tools, files, configs, and work survives restarts&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;✅ Auto-Updates:&lt;/strong&gt; Yes - &lt;code&gt;latest&lt;/code&gt; tag automatically gets newer versions&lt;br /&gt; &lt;strong&gt;🔄 Manual Update:&lt;/strong&gt; &lt;code&gt;docker pull mcp/desktop-commander:latest&lt;/code&gt; then restart Claude&lt;/p&gt; 
&lt;h4&gt;Docker Management Commands&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;macOS/Linux:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Check installation status:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash &amp;lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --status
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reset all persistent data (removes all installed tools and configs):&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bash &amp;lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --reset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Windows PowerShell:&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;Check status:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$script = (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1'); &amp;amp; ([ScriptBlock]::Create("$script")) -Status
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Reset all data:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$script = (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1'); &amp;amp; ([ScriptBlock]::Create("$script")) -Reset
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Show help:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$script = (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1'); &amp;amp; ([ScriptBlock]::Create("$script")) -Help
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Verbose output:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-powershell"&gt;$script = (New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.ps1'); &amp;amp; ([ScriptBlock]::Create("$script")) -VerboseOutput
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Troubleshooting Docker Installation&lt;/h4&gt; 
&lt;p&gt;If you broke the Docker container or need a fresh start:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Reset and reinstall from scratch
bash &amp;lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh) --reset &amp;amp;&amp;amp; bash &amp;lt;(curl -fsSL https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/refs/heads/main/install-docker.sh)
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will completely reset your persistent environment and reinstall everything fresh with exception of not touching mounted folders&lt;/p&gt; 
&lt;h2&gt;Updating &amp;amp; Uninstalling Desktop Commander&lt;/h2&gt; 
&lt;h3&gt;Automatic Updates (Options 1, 2, 3, 4 &amp;amp; 6)&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Options 1 (npx), Option 2 (bash installer), 3 (Smithery), 4 (manual config), and 6 (Docker)&lt;/strong&gt; automatically update to the latest version whenever you restart Claude. No manual intervention needed.&lt;/p&gt; 
&lt;h3&gt;Manual Updates (Option 5)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Option 5 (local checkout):&lt;/strong&gt; &lt;code&gt;cd DesktopCommanderMCP &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; npm run setup&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Uninstalling Desktop Commander&lt;/h3&gt; 
&lt;h4&gt;🤖 Automatic Uninstallation (Recommended)&lt;/h4&gt; 
&lt;p&gt;The easiest way to completely remove Desktop Commander:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;npx @wonderwhy-er/desktop-commander@latest remove
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This automatic uninstaller will:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;✅ Remove Desktop Commander from Claude's MCP server configuration&lt;/li&gt; 
 &lt;li&gt;✅ Create a backup of your Claude config before making changes&lt;/li&gt; 
 &lt;li&gt;✅ Provide guidance for complete package removal&lt;/li&gt; 
 &lt;li&gt;✅ Restore from backup if anything goes wrong&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h4&gt;🔧 Manual Uninstallation&lt;/h4&gt; 
&lt;p&gt;If the automatic uninstaller doesn't work or you prefer manual removal:&lt;/p&gt; 
&lt;h5&gt;Remove from Claude Configuration&lt;/h5&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Locate your Claude Desktop config file:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS:&lt;/strong&gt; &lt;code&gt;~/Library/Application Support/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows:&lt;/strong&gt; &lt;code&gt;%APPDATA%\Claude\claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Linux:&lt;/strong&gt; &lt;code&gt;~/.config/Claude/claude_desktop_config.json&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ol start="2"&gt; 
 &lt;li&gt;&lt;strong&gt;Edit the config file:&lt;/strong&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;ul&gt; 
 &lt;li&gt;Open the file in a text editor&lt;/li&gt; 
 &lt;li&gt;Find and remove the &lt;code&gt;"desktop-commander"&lt;/code&gt; entry from the &lt;code&gt;"mcpServers"&lt;/code&gt; section&lt;/li&gt; 
 &lt;li&gt;Save the file&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Example - Remove this section:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-json"&gt;{
    "desktop-commander": {
      "command": "npx",
      "args": ["@wonderwhy-er/desktop-commander@latest"]
    }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Close and restart Claude Desktop to complete the removal.&lt;/p&gt; 
&lt;h4&gt;🆘 Troubleshooting&lt;/h4&gt; 
&lt;p&gt;&lt;strong&gt;If automatic uninstallation fails:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use manual uninstallation as a fallback&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;If Claude won't start after uninstalling:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Restore the backup config file created by the uninstaller&lt;/li&gt; 
 &lt;li&gt;Or manually fix the JSON syntax in your claude_desktop_config.json&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Need help?&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Join our Discord community: &lt;a href="https://discord.com/invite/kQ27sNnZr7"&gt;https://discord.com/invite/kQ27sNnZr7&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Usage&lt;/h2&gt; 
&lt;p&gt;The server provides a comprehensive set of tools organized into several categories:&lt;/p&gt; 
&lt;h3&gt;Available Tools&lt;/h3&gt; 
&lt;table&gt; 
 &lt;thead&gt; 
  &lt;tr&gt; 
   &lt;th&gt;Category&lt;/th&gt; 
   &lt;th&gt;Tool&lt;/th&gt; 
   &lt;th&gt;Description&lt;/th&gt; 
  &lt;/tr&gt; 
 &lt;/thead&gt; 
 &lt;tbody&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Configuration&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_config&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get the complete server configuration as JSON (includes blockedCommands, defaultShell, allowedDirectories, fileReadLineLimit, fileWriteLineLimit, telemetryEnabled)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;set_config_value&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Set a specific configuration value by key. Available settings: &lt;br /&gt;• &lt;code&gt;blockedCommands&lt;/code&gt;: Array of shell commands that cannot be executed&lt;br /&gt;• &lt;code&gt;defaultShell&lt;/code&gt;: Shell to use for commands (e.g., bash, zsh, powershell)&lt;br /&gt;• &lt;code&gt;allowedDirectories&lt;/code&gt;: Array of filesystem paths the server can access for file operations (⚠️ terminal commands can still access files outside these directories)&lt;br /&gt;• &lt;code&gt;fileReadLineLimit&lt;/code&gt;: Maximum lines to read at once (default: 1000)&lt;br /&gt;• &lt;code&gt;fileWriteLineLimit&lt;/code&gt;: Maximum lines to write at once (default: 50)&lt;br /&gt;• &lt;code&gt;telemetryEnabled&lt;/code&gt;: Enable/disable telemetry (boolean)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Terminal&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;start_process&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Start programs with smart detection of when they're ready for input&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;interact_with_process&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Send commands to running programs and get responses&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;read_process_output&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Read output from running processes&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;force_terminate&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Force terminate a running terminal session&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;list_sessions&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;List all active terminal sessions&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;list_processes&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;List all running processes with detailed information&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;kill_process&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Terminate a running process by PID&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Filesystem&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;read_file&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Read contents from local filesystem or URLs with line-based pagination (supports positive/negative offset and length parameters)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;read_multiple_files&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Read multiple files simultaneously&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;write_file&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Write file contents with options for rewrite or append mode (uses configurable line limits)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;create_directory&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Create a new directory or ensure it exists&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;list_directory&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get detailed listing of files and directories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;move_file&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Move or rename files and directories&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;search_files&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Find files by name using case-insensitive substring matching&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;search_code&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Search for text/code patterns within file contents using ripgrep&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_file_info&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Retrieve detailed metadata about a file or directory&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Text Editing&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;edit_block&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Apply targeted text replacements with enhanced prompting for smaller edits (includes character-level diff feedback)&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;strong&gt;Analytics&lt;/strong&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;get_usage_stats&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Get usage statistics for your own insight&lt;/td&gt; 
  &lt;/tr&gt; 
  &lt;tr&gt; 
   &lt;td&gt;&lt;/td&gt; 
   &lt;td&gt;&lt;code&gt;give_feedback_to_desktop_commander&lt;/code&gt;&lt;/td&gt; 
   &lt;td&gt;Open feedback form in browser to provide feedback to Desktop Commander Team&lt;/td&gt; 
  &lt;/tr&gt; 
 &lt;/tbody&gt; 
&lt;/table&gt; 
&lt;h3&gt;Quick Examples&lt;/h3&gt; 
&lt;p&gt;&lt;strong&gt;Data Analysis:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Analyze sales.csv and show top customers" → Claude runs Python code in memory
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Remote Access:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"SSH to my server and check disk space" → Claude maintains SSH session
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Development:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;"Start Node.js and test this API" → Claude runs interactive Node session
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Tool Usage Examples&lt;/h3&gt; 
&lt;p&gt;Search/Replace Block Format:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;filepath.ext
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; SEARCH
content to find
=======
new content
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; REPLACE
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Example:&lt;/p&gt; 
&lt;pre&gt;&lt;code&gt;src/main.js
&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; SEARCH
console.log("old message");
=======
console.log("new message");
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; REPLACE
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Enhanced Edit Block Features&lt;/h3&gt; 
&lt;p&gt;The &lt;code&gt;edit_block&lt;/code&gt; tool includes several enhancements for better reliability:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Improved Prompting&lt;/strong&gt;: Tool descriptions now emphasize making multiple small, focused edits rather than one large change&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Fuzzy Search Fallback&lt;/strong&gt;: When exact matches fail, it performs fuzzy search and provides detailed feedback&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Character-level Diffs&lt;/strong&gt;: Shows exactly what's different using &lt;code&gt;{-removed-}{+added+}&lt;/code&gt; format&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Multiple Occurrence Support&lt;/strong&gt;: Can replace multiple instances with &lt;code&gt;expected_replacements&lt;/code&gt; parameter&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Comprehensive Logging&lt;/strong&gt;: All fuzzy searches are logged for analysis and debugging&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;When a search fails, you'll see detailed information about the closest match found, including similarity percentage, execution time, and character differences. All these details are automatically logged for later analysis using the fuzzy search log tools.&lt;/p&gt; 
&lt;h3&gt;Docker Support&lt;/h3&gt; 
&lt;h3&gt;🐳 Isolated Environment Usage&lt;/h3&gt; 
&lt;p&gt;Desktop Commander can be run in Docker containers for &lt;strong&gt;complete isolation from your host system&lt;/strong&gt;, providing &lt;strong&gt;zero risk to your computer&lt;/strong&gt;. This is perfect for testing, development, or when you want complete sandboxing.&lt;/p&gt; 
&lt;h3&gt;Installation Instructions&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Install Docker for Windows/Mac&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Download and install Docker Desktop from &lt;a href="https://www.docker.com/products/docker-desktop/"&gt;docker.com&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Get Desktop Commander Docker Configuration&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Visit: &lt;a href="https://hub.docker.com/mcp/server/desktop-commander/manual"&gt;https://hub.docker.com/mcp/server/desktop-commander/manual&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Option A:&lt;/strong&gt; Use the provided terminal command for automated setup&lt;/li&gt; 
   &lt;li&gt;&lt;strong&gt;Option B:&lt;/strong&gt; Click "Standalone" to get the config JSON and add it manually to your Claude Desktop config &lt;img src="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/screenshots/docker-config.png" alt="docker-config.png" /&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Mount Your Machine Folders (Coming Soon)&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Instructions on how to mount your local directories into the Docker container will be provided soon&lt;/li&gt; 
   &lt;li&gt;This will allow you to work with your files while maintaining complete isolation&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Benefits of Docker Usage&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Complete isolation&lt;/strong&gt; from your host system&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Consistent environment&lt;/strong&gt; across different machines&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Easy cleanup&lt;/strong&gt; - just remove the container when done&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Perfect for testing&lt;/strong&gt; new features or configurations&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;URL Support&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;read_file&lt;/code&gt; can now fetch content from both local files and URLs&lt;/li&gt; 
 &lt;li&gt;Example: &lt;code&gt;read_file&lt;/code&gt; with &lt;code&gt;isUrl: true&lt;/code&gt; parameter to read from web resources&lt;/li&gt; 
 &lt;li&gt;Handles both text and image content from remote sources&lt;/li&gt; 
 &lt;li&gt;Images (local or from URLs) are displayed visually in Claude's interface, not as text&lt;/li&gt; 
 &lt;li&gt;Claude can see and analyze the actual image content&lt;/li&gt; 
 &lt;li&gt;Default 30-second timeout for URL requests&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Fuzzy Search Log Analysis (npm scripts)&lt;/h2&gt; 
&lt;p&gt;The fuzzy search logging system includes convenient npm scripts for analyzing logs outside of the MCP environment:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# View recent fuzzy search logs
npm run logs:view -- --count 20

# Analyze patterns and performance
npm run logs:analyze -- --threshold 0.8

# Export logs to CSV or JSON
npm run logs:export -- --format json --output analysis.json

# Clear all logs (with confirmation)
npm run logs:clear
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;For detailed documentation on these scripts, see &lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/scripts/README.md"&gt;scripts/README.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Fuzzy Search Logs&lt;/h2&gt; 
&lt;p&gt;Desktop Commander includes comprehensive logging for fuzzy search operations in the &lt;code&gt;edit_block&lt;/code&gt; tool. When an exact match isn't found, the system performs a fuzzy search and logs detailed information for analysis.&lt;/p&gt; 
&lt;h3&gt;What Gets Logged&lt;/h3&gt; 
&lt;p&gt;Every fuzzy search operation logs:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Search and found text&lt;/strong&gt;: The text you're looking for vs. what was found&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Similarity score&lt;/strong&gt;: How close the match is (0-100%)&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Execution time&lt;/strong&gt;: How long the search took&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Character differences&lt;/strong&gt;: Detailed diff showing exactly what's different&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File metadata&lt;/strong&gt;: Extension, search/found text lengths&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Character codes&lt;/strong&gt;: Specific character codes causing differences&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Log Location&lt;/h3&gt; 
&lt;p&gt;Logs are automatically saved to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS/Linux&lt;/strong&gt;: &lt;code&gt;~/.claude-server-commander-logs/fuzzy-search.log&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%USERPROFILE%\.claude-server-commander-logs\fuzzy-search.log&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;What You'll Learn&lt;/h3&gt; 
&lt;p&gt;The fuzzy search logs help you understand:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;strong&gt;Why exact matches fail&lt;/strong&gt;: Common issues like whitespace differences, line endings, or character encoding&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Performance patterns&lt;/strong&gt;: How search complexity affects execution time&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File type issues&lt;/strong&gt;: Which file extensions commonly have matching problems&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Character encoding problems&lt;/strong&gt;: Specific character codes that cause diffs&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Audit Logging&lt;/h2&gt; 
&lt;p&gt;Desktop Commander now includes comprehensive logging for all tool calls:&lt;/p&gt; 
&lt;h3&gt;What Gets Logged&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Every tool call is logged with timestamp, tool name, and arguments (sanitized for privacy)&lt;/li&gt; 
 &lt;li&gt;Logs are rotated automatically when they reach 10MB in size&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Log Location&lt;/h3&gt; 
&lt;p&gt;Logs are saved to:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;macOS/Linux&lt;/strong&gt;: &lt;code&gt;~/.claude-server-commander/claude_tool_call.log&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: &lt;code&gt;%USERPROFILE%\.claude-server-commander\claude_tool_call.log&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;This audit trail helps with debugging, security monitoring, and understanding how Claude is interacting with your system.&lt;/p&gt; 
&lt;h2&gt;Handling Long-Running Commands&lt;/h2&gt; 
&lt;p&gt;For commands that may take a while:&lt;/p&gt; 
&lt;h2&gt;Configuration Management&lt;/h2&gt; 
&lt;h3&gt;⚠️ Important Security Warnings&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;For comprehensive security information and vulnerability reporting&lt;/strong&gt;: See &lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/SECURITY.md"&gt;SECURITY.md&lt;/a&gt;&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Known security limitations&lt;/strong&gt;: Directory restrictions and command blocking can be bypassed through various methods including symlinks, command substitution, and absolute paths or code execution&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Always change configuration in a separate chat window&lt;/strong&gt; from where you're doing your actual work. Claude may sometimes attempt to modify configuration settings (like &lt;code&gt;allowedDirectories&lt;/code&gt;) if it encounters filesystem access restrictions.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;The &lt;code&gt;allowedDirectories&lt;/code&gt; setting currently only restricts filesystem operations&lt;/strong&gt;, not terminal commands. Terminal commands can still access files outside allowed directories.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;For production security&lt;/strong&gt;: Use the &lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/#option-6-docker-installation-%F0%9F%90%B3-%E2%AD%90-auto-updates-no-nodejs-required"&gt;Docker installation&lt;/a&gt; which provides complete isolation from your host system.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h3&gt;Configuration Tools&lt;/h3&gt; 
&lt;p&gt;You can manage server configuration using the provided tools:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Get the entire config
get_config({})

// Set a specific config value
set_config_value({ "key": "defaultShell", "value": "/bin/zsh" })

// Set multiple config values using separate calls
set_config_value({ "key": "defaultShell", "value": "/bin/bash" })
set_config_value({ "key": "allowedDirectories", "value": ["/Users/username/projects"] })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;The configuration is saved to &lt;code&gt;config.json&lt;/code&gt; in the server's working directory and persists between server restarts.&lt;/p&gt; 
&lt;h4&gt;Understanding fileWriteLineLimit&lt;/h4&gt; 
&lt;p&gt;The &lt;code&gt;fileWriteLineLimit&lt;/code&gt; setting controls how many lines can be written in a single &lt;code&gt;write_file&lt;/code&gt; operation (default: 50 lines). This limit exists for several important reasons:&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Why the limit exists:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;AIs are wasteful with tokens&lt;/strong&gt;: Instead of doing two small edits in a file, AIs may decide to rewrite the whole thing. We're trying to force AIs to do things in smaller changes as it saves time and tokens&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Claude UX message limits&lt;/strong&gt;: There are limits within one message and hitting "Continue" does not really work. What we're trying here is to make AI work in smaller chunks so when you hit that limit, multiple chunks have succeeded and that work is not lost - it just needs to restart from the last chunk&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Setting the limit:&lt;/strong&gt;&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// You can set it to thousands if you want
set_config_value({ "key": "fileWriteLineLimit", "value": 1000 })

// Or keep it smaller to force more efficient behavior
set_config_value({ "key": "fileWriteLineLimit", "value": 25 })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Maximum value&lt;/strong&gt;: You can set it to thousands if you want - there's no technical restriction.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Best practices&lt;/strong&gt;:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Keep the default (50) to encourage efficient AI behavior and avoid token waste&lt;/li&gt; 
 &lt;li&gt;The system automatically suggests chunking when limits are exceeded&lt;/li&gt; 
 &lt;li&gt;Smaller chunks mean less work lost when Claude hits message limits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Best Practices&lt;/h3&gt; 
&lt;ol&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Create a dedicated chat for configuration changes&lt;/strong&gt;: Make all your config changes in one chat, then start a new chat for your actual work.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Be careful with empty &lt;code&gt;allowedDirectories&lt;/code&gt;&lt;/strong&gt;: Setting this to an empty array (&lt;code&gt;[]&lt;/code&gt;) grants access to your entire filesystem for file operations.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Use specific paths&lt;/strong&gt;: Instead of using broad paths like &lt;code&gt;/&lt;/code&gt;, specify exact directories you want to access.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;Always verify configuration after changes&lt;/strong&gt;: Use &lt;code&gt;get_config({})&lt;/code&gt; to confirm your changes were applied correctly.&lt;/p&gt; &lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Using Different Shells&lt;/h2&gt; 
&lt;p&gt;You can specify which shell to use for command execution:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-javascript"&gt;// Using default shell (bash or system default)
execute_command({ "command": "echo $SHELL" })

// Using zsh specifically
execute_command({ "command": "echo $SHELL", "shell": "/bin/zsh" })

// Using bash specifically
execute_command({ "command": "echo $SHELL", "shell": "/bin/bash" })
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This allows you to use shell-specific features or maintain consistent environments across commands.&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;&lt;code&gt;execute_command&lt;/code&gt; returns after timeout with initial output&lt;/li&gt; 
 &lt;li&gt;Command continues in background&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;read_output&lt;/code&gt; with PID to get new output&lt;/li&gt; 
 &lt;li&gt;Use &lt;code&gt;force_terminate&lt;/code&gt; to stop if needed&lt;/li&gt; 
&lt;/ol&gt; 
&lt;h2&gt;Debugging&lt;/h2&gt; 
&lt;p&gt;If you need to debug the server, you can install it in debug mode:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;# Using npx
npx @wonderwhy-er/desktop-commander@latest setup --debug

# Or if installed locally
npm run setup:debug
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;This will:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Configure Claude to use a separate "desktop-commander" server&lt;/li&gt; 
 &lt;li&gt;Enable Node.js inspector protocol with &lt;code&gt;--inspect-brk=9229&lt;/code&gt; flag&lt;/li&gt; 
 &lt;li&gt;Pause execution at the start until a debugger connects&lt;/li&gt; 
 &lt;li&gt;Enable additional debugging environment variables&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;To connect a debugger:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;In Chrome, visit &lt;code&gt;chrome://inspect&lt;/code&gt; and look for the Node.js instance&lt;/li&gt; 
 &lt;li&gt;In VS Code, use the "Attach to Node Process" debug configuration&lt;/li&gt; 
 &lt;li&gt;Other IDEs/tools may have similar "attach" options for Node.js debugging&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Important debugging notes:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;The server will pause on startup until a debugger connects (due to the &lt;code&gt;--inspect-brk&lt;/code&gt; flag)&lt;/li&gt; 
 &lt;li&gt;If you don't see activity during debugging, ensure you're connected to the correct Node.js process&lt;/li&gt; 
 &lt;li&gt;Multiple Node processes may be running; connect to the one on port 9229&lt;/li&gt; 
 &lt;li&gt;The debug server is identified as "desktop-commander-debug" in Claude's MCP server list&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Troubleshooting:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;If Claude times out while trying to use the debug server, your debugger might not be properly connected&lt;/li&gt; 
 &lt;li&gt;When properly connected, the process will continue execution after hitting the first breakpoint&lt;/li&gt; 
 &lt;li&gt;You can add additional breakpoints in your IDE once connected&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Model Context Protocol Integration&lt;/h2&gt; 
&lt;p&gt;This project extends the MCP Filesystem Server to enable:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Local server support in Claude Desktop&lt;/li&gt; 
 &lt;li&gt;Full system command execution&lt;/li&gt; 
 &lt;li&gt;Process management&lt;/li&gt; 
 &lt;li&gt;File operations&lt;/li&gt; 
 &lt;li&gt;Code editing with search/replace blocks&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Created as part of exploring Claude MCPs: &lt;a href="https://youtube.com/live/TlbjFDbl5Us"&gt;https://youtube.com/live/TlbjFDbl5Us&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;DONE&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;20-05-2025 v0.1.40 Release&lt;/strong&gt; - Added audit logging for all tool calls, improved line-based file operations, enhanced edit_block with better prompting for smaller edits, added explicit telemetry opt-out prompting&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;05-05-2025 Fuzzy Search Logging&lt;/strong&gt; - Added comprehensive logging system for fuzzy search operations with detailed analysis tools, character-level diffs, and performance metrics to help debug edit_block failures&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;29-04-2025 Telemetry Opt Out through configuration&lt;/strong&gt; - There is now setting to disable telemetry in config, ask in chat&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;23-04-2025 Enhanced edit functionality&lt;/strong&gt; - Improved format, added fuzzy search and multi-occurrence replacements, should fail less and use edit block more often&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;16-04-2025 Better configurations&lt;/strong&gt; - Improved settings for allowed paths, commands and shell environments&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;14-04-2025 Windows environment fixes&lt;/strong&gt; - Resolved issues specific to Windows platforms&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;14-04-2025 Linux improvements&lt;/strong&gt; - Enhanced compatibility with various Linux distributions&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;12-04-2025 Better allowed directories and blocked commands&lt;/strong&gt; - Improved security and path validation for file read/write and terminal command restrictions. Terminal still can access files ignoring allowed directories.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;11-04-2025 Shell configuration&lt;/strong&gt; - Added ability to configure preferred shell for command execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;07-04-2025 Added URL support&lt;/strong&gt; - &lt;code&gt;read_file&lt;/code&gt; command can now fetch content from URLs&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;28-03-2025 Fixed "Watching /" JSON error&lt;/strong&gt; - Implemented custom stdio transport to handle non-JSON messages and prevent server crashes&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;25-03-2025 Better code search&lt;/strong&gt; (&lt;a href="https://github.com/wonderwhy-er/ClaudeServerCommander/pull/17"&gt;merged&lt;/a&gt;) - Enhanced code exploration with context-aware results&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Roadmap&lt;/h2&gt; 
&lt;p&gt;The following features are currently being explored:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Support for WSL&lt;/strong&gt; - Windows Subsystem for Linux integration&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Support for SSH&lt;/strong&gt; - Remote server command execution&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Better file support for formats like CSV/PDF&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Terminal sandboxing for Mac/Linux/Windows for better security&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;File reading modes&lt;/strong&gt; - For example, allow reading HTML as plain text or markdown&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Interactive shell support&lt;/strong&gt; - ssh, node/python repl&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Improve large file reading and writing&lt;/strong&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Support Desktop Commander&lt;/h2&gt; 
&lt;div align="center"&gt; 
 &lt;h3&gt;📢 SUPPORT THIS PROJECT&lt;/h3&gt; 
 &lt;p&gt;&lt;strong&gt;Desktop Commander MCP is free and open source, but needs your support to thrive!&lt;/strong&gt;&lt;/p&gt; 
 &lt;div style="background-color: #f8f9fa; padding: 15px; border-radius: 10px; margin: 20px 0; border: 2px solid #007bff;"&gt; 
  &lt;p&gt;Our philosophy is simple: we don't want you to pay for it if you're not successful. But if Desktop Commander contributes to your success, please consider contributing to ours.&lt;/p&gt; 
  &lt;p&gt;&lt;strong&gt;Ways to support:&lt;/strong&gt;&lt;/p&gt; 
  &lt;ul style="list-style-type: none; padding: 0;"&gt; 
   &lt;li&gt;🌟 &lt;a href="https://github.com/sponsors/wonderwhy-er"&gt;&lt;strong&gt;GitHub Sponsors&lt;/strong&gt;&lt;/a&gt; - Recurring support&lt;/li&gt; 
   &lt;li&gt;☕ &lt;a href="https://www.buymeacoffee.com/wonderwhyer"&gt;&lt;strong&gt;Buy Me A Coffee&lt;/strong&gt;&lt;/a&gt; - One-time contributions&lt;/li&gt; 
   &lt;li&gt;💖 &lt;a href="https://www.patreon.com/c/EduardsRuzga"&gt;&lt;strong&gt;Patreon&lt;/strong&gt;&lt;/a&gt; - Become a patron and support us monthly&lt;/li&gt; 
   &lt;li&gt;⭐ &lt;a href="https://github.com/wonderwhy-er/DesktopCommanderMCP"&gt;&lt;strong&gt;Star on GitHub&lt;/strong&gt;&lt;/a&gt; - Help others discover the project&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;h3&gt;❤️ Supporters Hall of Fame&lt;/h3&gt; 
&lt;p&gt;Generous supporters are featured here. Thank you for helping make this project possible!&lt;/p&gt; 
&lt;div align="center"&gt; 
 &lt;table&gt; 
  &lt;tbody&gt;
   &lt;tr&gt; 
    &lt;td align="center"&gt; &lt;a href="https://github.com/jonrichards"&gt; &lt;img src="https://github.com/jonrichards.png" width="100px;" alt="Jon Richards" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Jon Richards&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
    &lt;td align="center"&gt; &lt;a href="https://github.com/stepanic"&gt; &lt;img src="https://github.com/stepanic.png" width="100px;" alt="Matija Stepanic" /&gt; &lt;br /&gt; &lt;sub&gt;&lt;b&gt;Matija Stepanic&lt;/b&gt;&lt;/sub&gt; &lt;/a&gt; &lt;/td&gt; 
   &lt;/tr&gt; 
  &lt;/tbody&gt;
 &lt;/table&gt; 
&lt;/div&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;strong&gt;Why your support matters&lt;/strong&gt;&lt;/summary&gt; 
 &lt;p&gt;Your support allows us to:&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Continue active development and maintenance&lt;/li&gt; 
  &lt;li&gt;Add new features and integrations&lt;/li&gt; 
  &lt;li&gt;Improve compatibility across platforms&lt;/li&gt; 
  &lt;li&gt;Provide better documentation and examples&lt;/li&gt; 
  &lt;li&gt;Build a stronger community around the project&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/details&gt; 
&lt;h2&gt;Website&lt;/h2&gt; 
&lt;p&gt;Visit our official website at &lt;a href="https://desktopcommander.app/"&gt;https://desktopcommander.app/&lt;/a&gt; for the latest information, documentation, and updates.&lt;/p&gt; 
&lt;h2&gt;Media&lt;/h2&gt; 
&lt;p&gt;Learn more about this project through these resources:&lt;/p&gt; 
&lt;h3&gt;Article&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://wonderwhy-er.medium.com/claude-with-mcps-replaced-cursor-windsurf-how-did-that-happen-c1d1e2795e96"&gt;Claude with MCPs replaced Cursor &amp;amp; Windsurf. How did that happen?&lt;/a&gt; - A detailed exploration of how Claude with Model Context Protocol capabilities is changing developer workflows.&lt;/p&gt; 
&lt;h3&gt;Video&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ly3bed99Dy8"&gt;Claude Desktop Commander Video Tutorial&lt;/a&gt; - Watch how to set up and use the Commander effectively.&lt;/p&gt; 
&lt;h3&gt;Publication at AnalyticsIndiaMag&lt;/h3&gt; 
&lt;p&gt;&lt;a href="https://analyticsindiamag.com/ai-features/this-developer-ditched-windsurf-cursor-using-claude-with-mcps/"&gt;&lt;img src="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/testemonials%2Fanalyticsindiamag.png" alt="analyticsindiamag.png" /&gt; This Developer Ditched Windsurf, Cursor Using Claude with MCPs&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Community&lt;/h3&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/kQ27sNnZr7"&gt;Discord server&lt;/a&gt; to get help, share feedback, and connect with other users.&lt;/p&gt; 
&lt;h2&gt;Testimonials&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=UgyyBt6_ShdDX_rIOad4AaABAg"&gt;&lt;img src="https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img.png" alt="It's a life saver! I paid Claude + Cursor currently which I always feel it's kind of duplicated. This solves the problem ultimately. I am so happy. Thanks so much. Plus today Claude has added the web search support. With this MCP + Internet search, it writes the code with the latest updates. It's so good when Cursor doesn't work sometimes or all the fast requests are used." /&gt; https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=UgyyBt6_ShdDX_rIOad4AaABAg &lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=UgztdHvDMqTb9jiqnf54AaABAg"&gt;&lt;img src="https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img_1.png" alt="This is the first comment I've ever left on a youtube video, THANK YOU! I've been struggling to update an old Flutter app in Cursor from an old pre null-safety version to a current version and implemented null-safety using Claude 3.7. I got most of the way but had critical BLE errors that I spent days trying to resolve with no luck. I tried Augment Code but it didn't get it either. I implemented your MCP in Claude desktop and was able to compare the old and new codebase fully, accounting for the updates in the code, and fix the issues in a couple of hours. A word of advice to people trying this, be sure to stage changes and commit when appropriate to be able to undo unwanted changes. Amazing!" /&gt; https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=UgztdHvDMqTb9jiqnf54AaABAg&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=UgyQFTmYLJ4VBwIlmql4AaABAg"&gt;&lt;img src="https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img_2.png" alt="Great! I just used Windsurf, bought license a week ago, for upgrading old fullstack socket project and it works many times good or ok but also many times runs away in cascade and have to revert all changes losing hundereds of cascade tokens. In just a week down to less than 100 tokens and do not want to buy only 300 tokens for 10$. This Claude MCP ,bought claude Pro finally needed but wanted very good reason to also have next to ChatGPT, and now can code as much as I want not worrying about token cost. Also this is much more than code editing it is much more thank you for great video!" /&gt; https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=UgyQFTmYLJ4VBwIlmql4AaABAg&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=Ugy4-exy166_Ma7TH-h4AaABAg"&gt;&lt;img src="https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img_3.png" alt="it is a great tool, thank you, I like using it, as it gives claude an ability to do surgical edits, making it more like a human developer." /&gt; https://www.youtube.com/watch?v=ly3bed99Dy8&amp;amp;lc=Ugy4-exy166_Ma7TH-h4AaABAg&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://medium.com/@pharmx/you-sir-are-my-hero-62cff5836a3e"&gt;&lt;img src="https://raw.githubusercontent.com/wonderwhy-er/ClaudeComputerCommander/main/testemonials/img_4.png" alt="You sir are my hero. You've pretty much summed up and described my experiences of late, much better than I could have. Cursor and Windsurf both had me frustrated to the point where I was almost yelling at my computer screen. Out of whimsy, I thought to myself why not just ask Claude directly, and haven't looked back since. Claude first to keep my sanity in check, then if necessary, engage with other IDEs, frameworks, etc. I thought I was the only one, glad to see I'm not lol. 33 1" /&gt; https://medium.com/@pharmx/you-sir-are-my-hero-62cff5836a3e&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;If you find this project useful, please consider giving it a ⭐ star on GitHub! This helps others discover the project and encourages further development.&lt;/p&gt; 
&lt;p&gt;We welcome contributions from the community! Whether you've found a bug, have a feature request, or want to contribute code, here's how you can help:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Found a bug?&lt;/strong&gt; Open an issue at &lt;a href="https://github.com/wonderwhy-er/DesktopCommanderMCP/issues"&gt;github.com/wonderwhy-er/DesktopCommanderMCP/issues&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Have a feature idea?&lt;/strong&gt; Submit a feature request in the issues section&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Want to contribute code?&lt;/strong&gt; Fork the repository, create a branch, and submit a pull request&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;Questions or discussions?&lt;/strong&gt; Start a discussion in the GitHub Discussions tab&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;All contributions, big or small, are greatly appreciated!&lt;/p&gt; 
&lt;p&gt;If you find this tool valuable for your workflow, please consider &lt;a href="https://www.buymeacoffee.com/wonderwhyer"&gt;supporting the project&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Frequently Asked Questions&lt;/h2&gt; 
&lt;p&gt;Here are answers to some common questions. For a more comprehensive FAQ, see our &lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/FAQ.md"&gt;detailed FAQ document&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;What is Desktop Commander?&lt;/h3&gt; 
&lt;p&gt;It's an MCP tool that enables Claude Desktop to access your file system and terminal, turning Claude into a versatile assistant for coding, automation, codebase exploration, and more.&lt;/p&gt; 
&lt;h3&gt;How is this different from Cursor/Windsurf?&lt;/h3&gt; 
&lt;p&gt;Unlike IDE-focused tools, Claude Desktop Commander provides a solution-centric approach that works with your entire OS, not just within a coding environment. Claude reads files in full rather than chunking them, can work across multiple projects simultaneously, and executes changes in one go rather than requiring constant review.&lt;/p&gt; 
&lt;h3&gt;Do I need to pay for API credits?&lt;/h3&gt; 
&lt;p&gt;No. This tool works with Claude Desktop's standard Pro subscription ($20/month), not with API calls, so you won't incur additional costs beyond the subscription fee.&lt;/p&gt; 
&lt;h3&gt;Does Desktop Commander automatically update?&lt;/h3&gt; 
&lt;p&gt;Yes, when installed through npx or Smithery, Desktop Commander automatically updates to the latest version when you restart Claude. No manual update process is needed.&lt;/p&gt; 
&lt;h3&gt;What are the most common use cases?&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Exploring and understanding complex codebases&lt;/li&gt; 
 &lt;li&gt;Generating diagrams and documentation&lt;/li&gt; 
 &lt;li&gt;Automating tasks across your system&lt;/li&gt; 
 &lt;li&gt;Working with multiple projects simultaneously&lt;/li&gt; 
 &lt;li&gt;Making surgical code changes with precise control&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;I'm having trouble installing or using the tool. Where can I get help?&lt;/h3&gt; 
&lt;p&gt;Join our &lt;a href="https://discord.gg/kQ27sNnZr7"&gt;Discord server&lt;/a&gt; for community support, check the &lt;a href="https://github.com/wonderwhy-er/DesktopCommanderMCP/issues"&gt;GitHub issues&lt;/a&gt; for known problems, or review the &lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/FAQ.md"&gt;full FAQ&lt;/a&gt; for troubleshooting tips. You can also visit our &lt;a href="https://desktopcommander.app#faq"&gt;website FAQ section&lt;/a&gt; for a more user-friendly experience. If you encounter a new issue, please consider &lt;a href="https://github.com/wonderwhy-er/DesktopCommanderMCP/issues/new"&gt;opening a GitHub issue&lt;/a&gt; with details about your problem.&lt;/p&gt; 
&lt;h3&gt;How do I report security vulnerabilities?&lt;/h3&gt; 
&lt;p&gt;Please create a &lt;a href="https://github.com/wonderwhy-er/DesktopCommanderMCP/issues"&gt;GitHub Issue&lt;/a&gt; with detailed information about any security vulnerabilities you discover. See our &lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/SECURITY.md"&gt;Security Policy&lt;/a&gt; for complete guidelines on responsible disclosure.&lt;/p&gt; 
&lt;h2&gt;Data Collection &amp;amp; Privacy&lt;/h2&gt; 
&lt;p&gt;Desktop Commander collects limited anonymous telemetry data to help improve the tool. No personal information, file contents, file paths, or command arguments are collected.&lt;/p&gt; 
&lt;h3&gt;Usage Analytics (Local Only)&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;Local usage statistics&lt;/strong&gt; are always collected and stored locally on your machine for functionality and the &lt;code&gt;get_usage_stats&lt;/code&gt; tool&lt;/li&gt; 
 &lt;li&gt;Use the &lt;code&gt;get_usage_stats&lt;/code&gt; tool to view your personal usage patterns, success rates, and performance metrics&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;This data is NOT sent anywhere&lt;/strong&gt; - it remains on your computer for your personal insights&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;Feedback System&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Use the &lt;code&gt;give_feedback_to_desktop_commander&lt;/code&gt; tool to provide feedback about Desktop Commander&lt;/li&gt; 
 &lt;li&gt;Opens a browser-based feedback form to send suggestions and feedback to the development team&lt;/li&gt; 
 &lt;li&gt;Only basic usage statistics (tool call count, days using, platform) are pre-filled to provide context but you can remove them&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h3&gt;External Telemetry Opt-Out&lt;/h3&gt; 
&lt;p&gt;External telemetry (sent to analytics services) is enabled by default but can be disabled:&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Open the chat and simply ask: &lt;strong&gt;"Disable telemetry"&lt;/strong&gt;&lt;/li&gt; 
 &lt;li&gt;The chatbot will update your settings automatically.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This only disables external telemetry. Local usage analytics remain active for tool functionality but is not share externally&lt;/p&gt; 
&lt;p&gt;For complete details about data collection, please see our &lt;a href="https://raw.githubusercontent.com/wonderwhy-er/DesktopCommanderMCP/main/PRIVACY.md"&gt;Privacy Policy&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Verifications&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://mseep.ai/app/25ff7a06-58bc-40b8-bd79-ebb715140f1a"&gt;&lt;img src="https://mseep.ai/badge.svg?sanitize=true" alt="Verified on MseeP" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>upstash/context7</title>
      <link>https://github.com/upstash/context7</link>
      <description>&lt;p&gt;Context7 MCP Server -- Up-to-date code documentation for LLMs and AI code editors&lt;/p&gt;&lt;hr&gt;&lt;p&gt;&lt;img src="https://raw.githubusercontent.com/upstash/context7/master/public/cover.png" alt="Cover" /&gt;&lt;/p&gt; 
&lt;h1&gt;Context7 MCP - Up-to-date Code Docs For Any Prompt&lt;/h1&gt; 
&lt;p&gt;&lt;a href="https://context7.com"&gt;&lt;img src="https://img.shields.io/badge/Website-context7.com-blue" alt="Website" /&gt;&lt;/a&gt; &lt;a href="https://smithery.ai/server/@upstash/context7-mcp"&gt;&lt;img src="https://smithery.ai/badge/@upstash/context7-mcp" alt="smithery badge" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://cursor.com/en/install-mcp?name=context7&amp;amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D"&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Install MCP Server" /&gt;&lt;/a&gt; &lt;a href="https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D"&gt;&lt;img alt="Install in VS Code (npx)" src="https://img.shields.io/badge/Install%20in%20VS%20Code-0098FF?style=for-the-badge&amp;amp;logo=visualstudiocode&amp;amp;logoColor=white" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.zh-TW.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%E7%B9%81%E9%AB%94%E4%B8%AD%E6%96%87-yellow" alt="繁體中文" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.zh-CN.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87-yellow" alt="简体中文" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ja.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%E6%97%A5%E6%9C%AC%E8%AA%9E-b7003a" alt="日本語" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ko.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%ED%95%9C%EA%B5%AD%EC%96%B4-green" alt="한국어 문서" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.es.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Espa%C3%B1ol-orange" alt="Documentación en Español" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.fr.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Fran%C3%A7ais-blue" alt="Documentation en Français" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.pt-BR.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Portugu%C3%AAs%20(Brasil)-purple" alt="Documentação em Português (Brasil)" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.it.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Italian-red" alt="Documentazione in italiano" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.id-ID.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Bahasa%20Indonesia-pink" alt="Dokumentasi Bahasa Indonesia" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.de.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Deutsch-darkgreen" alt="Dokumentation auf Deutsch" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ru.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%D0%A0%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9-darkblue" alt="Документация на русском языке" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.uk.md"&gt;&lt;img src="https://img.shields.io/badge/docs-%D0%A3%D0%BA%D1%80%D0%B0%D1%97%D0%BD%D1%81%D1%8C%D0%BA%D0%B0-lightblue" alt="Українська документація" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.tr.md"&gt;&lt;img src="https://img.shields.io/badge/docs-T%C3%BCrk%C3%A7e-blue" alt="Türkçe Doküman" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.ar.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Arabic-white" alt="Arabic Documentation" /&gt;&lt;/a&gt; &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/README.vi.md"&gt;&lt;img src="https://img.shields.io/badge/docs-Ti%E1%BA%BFng%20Vi%E1%BB%87t-red" alt="Tiếng Việt" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;❌ Without Context7&lt;/h2&gt; 
&lt;p&gt;LLMs rely on outdated or generic information about the libraries you use. You get:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;❌ Code examples are outdated and based on year-old training data&lt;/li&gt; 
 &lt;li&gt;❌ Hallucinated APIs don't even exist&lt;/li&gt; 
 &lt;li&gt;❌ Generic answers for old package versions&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;✅ With Context7&lt;/h2&gt; 
&lt;p&gt;Context7 MCP pulls up-to-date, version-specific documentation and code examples straight from the source — and places them directly into your prompt.&lt;/p&gt; 
&lt;p&gt;Add &lt;code&gt;use context7&lt;/code&gt; to your prompt in Cursor:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Create a Next.js middleware that checks for a valid JWT in cookies and redirects unauthenticated users to `/login`. use context7
&lt;/code&gt;&lt;/pre&gt; 
&lt;pre&gt;&lt;code class="language-txt"&gt;Configure a Cloudflare Worker script to cache JSON API responses for five minutes. use context7
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Context7 fetches up-to-date code examples and documentation right into your LLM's context.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;1️⃣ Write your prompt naturally&lt;/li&gt; 
 &lt;li&gt;2️⃣ Tell the LLM to &lt;code&gt;use context7&lt;/code&gt;&lt;/li&gt; 
 &lt;li&gt;3️⃣ Get working code answers&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;No tab-switching, no hallucinated APIs that don't exist, no outdated code generations.&lt;/p&gt; 
&lt;h2&gt;📚 Adding Projects&lt;/h2&gt; 
&lt;p&gt;Check out our &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/docs/adding-projects.md"&gt;project addition guide&lt;/a&gt; to learn how to add (or update) your favorite libraries to Context7.&lt;/p&gt; 
&lt;h2&gt;🛠️ Installation&lt;/h2&gt; 
&lt;h3&gt;Requirements&lt;/h3&gt; 
&lt;ul&gt; 
 &lt;li&gt;Node.js &amp;gt;= v18.0.0&lt;/li&gt; 
 &lt;li&gt;Cursor, Claude Code, VSCode, Windsurf or another MCP Client&lt;/li&gt; 
 &lt;li&gt;Context7 API Key (Optional for higher rate limits) (Get yours by creating an account at &lt;a href="https://context7.com/dashboard"&gt;context7.com/dashboard&lt;/a&gt;)&lt;/li&gt; 
&lt;/ul&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Installing via Smithery&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;To install Context7 MCP Server for any client automatically via &lt;a href="https://smithery.ai/server/@upstash/context7-mcp"&gt;Smithery&lt;/a&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx -y @smithery/cli@latest install @upstash/context7-mcp --client &amp;lt;CLIENT_NAME&amp;gt; --key &amp;lt;YOUR_SMITHERY_KEY&amp;gt;
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;You can find your Smithery key in the &lt;a href="https://smithery.ai/server/@upstash/context7-mcp"&gt;Smithery.ai webpage&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Cursor&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Go to: &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Cursor Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;MCP&lt;/code&gt; -&amp;gt; &lt;code&gt;Add new global MCP server&lt;/code&gt;&lt;/p&gt; 
 &lt;p&gt;Pasting the following configuration into your Cursor &lt;code&gt;~/.cursor/mcp.json&lt;/code&gt; file is the recommended approach. You may also install in a specific project by creating &lt;code&gt;.cursor/mcp.json&lt;/code&gt; in your project folder. See &lt;a href="https://docs.cursor.com/context/model-context-protocol"&gt;Cursor MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;Since Cursor 1.0, you can click the install button below for instant one-click installation.&lt;/p&gt; 
 &lt;/blockquote&gt; 
 &lt;h4&gt;Cursor Remote Server Connection&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://cursor.com/en/install-mcp?name=context7&amp;amp;config=eyJ1cmwiOiJodHRwczovL21jcC5jb250ZXh0Ny5jb20vbWNwIn0%3D"&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Install MCP Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Cursor Local Server Connection&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://cursor.com/en/install-mcp?name=context7&amp;amp;config=eyJjb21tYW5kIjoibnB4IC15IEB1cHN0YXNoL2NvbnRleHQ3LW1jcCJ9"&gt;&lt;img src="https://cursor.com/deeplink/mcp-install-dark.svg?sanitize=true" alt="Install MCP Server" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Claude Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Run this command. See &lt;a href="https://docs.anthropic.com/en/docs/claude-code/mcp"&gt;Claude Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Claude Code Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;claude mcp add --transport http context7 https://mcp.context7.com/mcp --header "CONTEXT7_API_KEY: YOUR_API_KEY"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Or using SSE transport:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;claude mcp add --transport sse context7 https://mcp.context7.com/sse --header "CONTEXT7_API_KEY: YOUR_API_KEY"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Claude Code Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-sh"&gt;claude mcp add context7 -- npx -y @upstash/context7-mcp --api-key YOUR_API_KEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Windsurf&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Windsurf MCP config file. See &lt;a href="https://docs.windsurf.com/windsurf/cascade/mcp"&gt;Windsurf MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Windsurf Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "serverUrl": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Windsurf Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in VS Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;&lt;a href="https://insiders.vscode.dev/redirect?url=vscode%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D"&gt;&lt;img alt="Install in VS Code (npx)" src="https://img.shields.io/badge/VS_Code-VS_Code?style=flat-square&amp;amp;label=Install%20Context7%20MCP&amp;amp;color=0098FF" /&gt;&lt;/a&gt; &lt;a href="https://insiders.vscode.dev/redirect?url=vscode-insiders%3Amcp%2Finstall%3F%7B%22name%22%3A%22context7%22%2C%22command%22%3A%22npx%22%2C%22args%22%3A%5B%22-y%22%2C%22%40upstash%2Fcontext7-mcp%40latest%22%5D%7D"&gt;&lt;img alt="Install in VS Code Insiders (npx)" src="https://img.shields.io/badge/VS_Code_Insiders-VS_Code_Insiders?style=flat-square&amp;amp;label=Install%20Context7%20MCP&amp;amp;color=24bfa5" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;p&gt;Add this to your VS Code MCP config file. See &lt;a href="https://code.visualstudio.com/docs/copilot/chat/mcp-servers"&gt;VS Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;VS Code Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"mcp": {
  "servers": {
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;VS Code Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"mcp": {
  "servers": {
    "context7": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt; &lt;b&gt;Install in Cline&lt;/b&gt; &lt;/summary&gt; 
 &lt;p&gt;You can easily install Context7 through the &lt;a href="https://cline.bot/mcp-marketplace"&gt;Cline MCP Server Marketplace&lt;/a&gt; by following these instructions:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open &lt;strong&gt;Cline&lt;/strong&gt;.&lt;/li&gt; 
  &lt;li&gt;Click the hamburger menu icon (☰) to enter the &lt;strong&gt;MCP Servers&lt;/strong&gt; section.&lt;/li&gt; 
  &lt;li&gt;Use the search bar within the &lt;strong&gt;Marketplace&lt;/strong&gt; tab to find &lt;em&gt;Context7&lt;/em&gt;.&lt;/li&gt; 
  &lt;li&gt;Click the &lt;strong&gt;Install&lt;/strong&gt; button.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Zed&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;It can be installed via &lt;a href="https://zed.dev/extensions?query=Context7"&gt;Zed Extensions&lt;/a&gt; or you can add this to your Zed &lt;code&gt;settings.json&lt;/code&gt;. See &lt;a href="https://zed.dev/docs/assistant/context-servers"&gt;Zed Context Server docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "context_servers": {
    "Context7": {
      "command": {
        "path": "npx",
        "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
      },
      "settings": {}
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Augment Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;To configure Context7 MCP in Augment Code, you can use either the graphical interface or manual configuration.&lt;/p&gt; 
 &lt;h3&gt;&lt;strong&gt;A. Using the Augment Code UI&lt;/strong&gt;&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;Click the hamburger menu.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Select &lt;strong&gt;Settings&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Navigate to the &lt;strong&gt;Tools&lt;/strong&gt; section.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;+ Add MCP&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Enter the following command:&lt;/p&gt; &lt;pre&gt;&lt;code&gt;npx -y @upstash/context7-mcp@latest
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Name the MCP: &lt;strong&gt;Context7&lt;/strong&gt;.&lt;/p&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;Click the &lt;strong&gt;Add&lt;/strong&gt; button.&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;p&gt;Once the MCP server is added, you can start using Context7's up-to-date code documentation features directly within Augment Code.&lt;/p&gt; 
 &lt;hr /&gt; 
 &lt;h3&gt;&lt;strong&gt;B. Manual Configuration&lt;/strong&gt;&lt;/h3&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Press Cmd/Ctrl Shift P or go to the hamburger menu in the Augment panel&lt;/li&gt; 
  &lt;li&gt;Select Edit Settings&lt;/li&gt; 
  &lt;li&gt;Under Advanced, click Edit in settings.json&lt;/li&gt; 
  &lt;li&gt;Add the server configuration to the &lt;code&gt;mcpServers&lt;/code&gt; array in the &lt;code&gt;augment.advanced&lt;/code&gt; object&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"augment.advanced": {
  "mcpServers": [
    {
      "name": "context7",
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once the MCP server is added, restart your editor. If you receive any errors, check the syntax to make sure closing brackets or commas are not missing.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Roo Code&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Roo Code MCP configuration file. See &lt;a href="https://docs.roocode.com/features/mcp/using-mcp-in-roo"&gt;Roo Code MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Roo Code Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "type": "streamable-http",
      "url": "https://mcp.context7.com/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Roo Code Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Gemini CLI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://google-gemini.github.io/gemini-cli/docs/tools/mcp-server.html"&gt;Gemini CLI Configuration&lt;/a&gt; for details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Gemini CLI settings file. The location is &lt;code&gt;~/.gemini/settings.json&lt;/code&gt; (where &lt;code&gt;~&lt;/code&gt; is your home directory).&lt;/li&gt; 
  &lt;li&gt;Add the following to the &lt;code&gt;mcpServers&lt;/code&gt; object in your &lt;code&gt;settings.json&lt;/code&gt; file:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "httpUrl": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Or, for a local server:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;If the &lt;code&gt;mcpServers&lt;/code&gt; object does not exist, create it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Claude Desktop&lt;/b&gt;&lt;/summary&gt; 
 &lt;h4&gt;Remote Server Connection&lt;/h4&gt; 
 &lt;p&gt;Open Claude Desktop and navigate to Settings &amp;gt; Connectors &amp;gt; Add Custom Connector. Enter the name as &lt;code&gt;Context7&lt;/code&gt; and the remote MCP server URL as &lt;code&gt;https://mcp.context7.com/mcp&lt;/code&gt;.&lt;/p&gt; 
 &lt;h4&gt;Local Server Connection&lt;/h4&gt; 
 &lt;p&gt;Open Claude Desktop developer settings and edit your &lt;code&gt;claude_desktop_config.json&lt;/code&gt; file to add the following configuration. See &lt;a href="https://modelcontextprotocol.io/quickstart/user"&gt;Claude Desktop MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Opencode&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Opencode configuration file. See &lt;a href="https://opencode.ai/docs/mcp-servers"&gt;Opencode MCP docs&lt;/a&gt; docs for more info.&lt;/p&gt; 
 &lt;h4&gt;Opencode Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;"mcp": {
  "context7": {
    "type": "remote",
    "url": "https://mcp.context7.com/mcp",
    "headers": {
      "CONTEXT7_API_KEY": "YOUR_API_KEY"
    },
    "enabled": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Opencode Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcp": {
    "context7": {
      "type": "local",
      "command": ["npx", "-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
      "enabled": true
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in OpenAI Codex&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://github.com/openai/codex"&gt;OpenAI Codex&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;p&gt;Add the following configuration to your OpenAI Codex MCP server settings:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[mcp_servers.context7]
args = ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
command = "npx"
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in JetBrains AI Assistant&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://www.jetbrains.com/help/ai-assistant/configure-an-mcp-server.html"&gt;JetBrains AI Assistant Documentation&lt;/a&gt; for more details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;In JetBrains IDEs go to &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;AI Assistant&lt;/code&gt; -&amp;gt; &lt;code&gt;Model Context Protocol (MCP)&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Click &lt;code&gt;+ Add&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Click on &lt;code&gt;Command&lt;/code&gt; in the top-left corner of the dialog and select the As JSON option from the list&lt;/li&gt; 
  &lt;li&gt;Add this configuration and click &lt;code&gt;OK&lt;/code&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="5"&gt; 
  &lt;li&gt;Click &lt;code&gt;Apply&lt;/code&gt; to save changes.&lt;/li&gt; 
  &lt;li&gt;The same way context7 could be added for JetBrains Junie in &lt;code&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code&gt;Junie&lt;/code&gt; -&amp;gt; &lt;code&gt;MCP Settings&lt;/code&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Kiro&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://kiro.dev/docs/mcp/configuration/"&gt;Kiro Model Context Protocol Documentation&lt;/a&gt; for details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate &lt;code&gt;Kiro&lt;/code&gt; &amp;gt; &lt;code&gt;MCP Servers&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Add a new MCP server by clicking the &lt;code&gt;+ Add&lt;/code&gt; button.&lt;/li&gt; 
  &lt;li&gt;Paste the configuration given below:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "Context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
      "env": {},
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; to apply the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Trae&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Use the Add manually feature and fill in the JSON configuration information for that MCP server. For more details, visit the &lt;a href="https://docs.trae.ai/ide/model-context-protocol?_lang=en"&gt;Trae documentation&lt;/a&gt;.&lt;/p&gt; 
 &lt;h4&gt;Trae Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Trae Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Using Bun or Deno&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Use these alternatives to run the local Context7 MCP server with other runtimes. These examples work for any client that supports launching a local MCP server via command + args.&lt;/p&gt; 
 &lt;h4&gt;Bun&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "bunx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Deno&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "deno",
      "args": [
        "run",
        "--allow-env=NO_DEPRECATION,TRACE_DEPRECATION",
        "--allow-net",
        "npm:@upstash/context7-mcp"
      ]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Using Docker&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;If you prefer to run the MCP server in a Docker container:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Build the Docker Image:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;First, create a &lt;code&gt;Dockerfile&lt;/code&gt; in the project root (or anywhere you prefer):&lt;/p&gt; 
   &lt;details&gt; 
    &lt;summary&gt;Click to see Dockerfile content&lt;/summary&gt; 
    &lt;pre&gt;&lt;code class="language-Dockerfile"&gt;FROM node:18-alpine

WORKDIR /app

# Install the latest version globally
RUN npm install -g @upstash/context7-mcp

# Expose default port if needed (optional, depends on MCP client interaction)
# EXPOSE 3000

# Default command to run the server
CMD ["context7-mcp"]
&lt;/code&gt;&lt;/pre&gt; 
   &lt;/details&gt; &lt;p&gt;Then, build the image using a tag (e.g., &lt;code&gt;context7-mcp&lt;/code&gt;). &lt;strong&gt;Make sure Docker Desktop (or the Docker daemon) is running.&lt;/strong&gt; Run the following command in the same directory where you saved the &lt;code&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;&lt;code class="language-bash"&gt;docker build -t context7-mcp .
&lt;/code&gt;&lt;/pre&gt; &lt;/li&gt; 
  &lt;li&gt; &lt;p&gt;&lt;strong&gt;Configure Your MCP Client:&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;Update your MCP client's configuration to use the Docker command.&lt;/p&gt; &lt;p&gt;&lt;em&gt;Example for a cline_mcp_settings.json:&lt;/em&gt;&lt;/p&gt; &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "Сontext7": {
      "autoApprove": [],
      "disabled": false,
      "timeout": 60,
      "command": "docker",
      "args": ["run", "-i", "--rm", "context7-mcp"],
      "transportType": "stdio"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; &lt;p&gt;&lt;em&gt;Note: This is an example configuration. Please refer to the specific examples for your MCP client (like Cursor, VS Code, etc.) earlier in this README to adapt the structure (e.g., &lt;code&gt;mcpServers&lt;/code&gt; vs &lt;code&gt;servers&lt;/code&gt;). Also, ensure the image name in &lt;code&gt;args&lt;/code&gt; matches the tag used during the &lt;code&gt;docker build&lt;/code&gt; command.&lt;/em&gt;&lt;/p&gt; &lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install Using the Desktop Extension&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Install the &lt;a href="https://raw.githubusercontent.com/upstash/context7/master/dxt/context7.dxt"&gt;context7.dxt&lt;/a&gt; file under the dxt folder and add it to your client. For more information please check out &lt;a href="https://github.com/anthropics/dxt#desktop-extensions-dxt"&gt;the desktop extensions docs&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Windows&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;The configuration on Windows is slightly different compared to Linux or macOS (&lt;em&gt;&lt;code&gt;Cline&lt;/code&gt; is used in the example&lt;/em&gt;). The same principle applies to other editors; refer to the configuration of &lt;code&gt;command&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt;.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "github.com/upstash/context7-mcp": {
      "command": "cmd",
      "args": ["/c", "npx", "-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
      "disabled": false,
      "autoApprove": []
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Amazon Q Developer CLI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Amazon Q Developer CLI configuration file. See &lt;a href="https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-mcp-configuration.html"&gt;Amazon Q Developer CLI docs&lt;/a&gt; for more details.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Warp&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://docs.warp.dev/knowledge-and-collaboration/mcp#adding-an-mcp-server"&gt;Warp Model Context Protocol Documentation&lt;/a&gt; for details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate &lt;code&gt;Settings&lt;/code&gt; &amp;gt; &lt;code&gt;AI&lt;/code&gt; &amp;gt; &lt;code&gt;Manage MCP servers&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Add a new MCP server by clicking the &lt;code&gt;+ Add&lt;/code&gt; button.&lt;/li&gt; 
  &lt;li&gt;Paste the configuration given below:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "Context7": {
    "command": "npx",
    "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
    "env": {},
    "working_directory": null,
    "start_on_launch": true
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="4"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; to apply the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Copilot Coding Agent&lt;/b&gt;&lt;/summary&gt; 
 &lt;h2&gt;Using Context7 with Copilot Coding Agent&lt;/h2&gt; 
 &lt;p&gt;Add the following configuration to the &lt;code&gt;mcp&lt;/code&gt; section of your Copilot Coding Agent configuration file Repository-&amp;gt;Settings-&amp;gt;Copilot-&amp;gt;Coding agent-&amp;gt;MCP configuration:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      },
      "tools": ["get-library-docs", "resolve-library-id"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more information, see the &lt;a href="https://docs.github.com/en/enterprise-cloud@latest/copilot/how-tos/agents/copilot-coding-agent/extending-copilot-coding-agent-with-mcp"&gt;official GitHub documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in LM Studio&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://lmstudio.ai/blog/lmstudio-v0.3.17"&gt;LM Studio MCP Support&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;h4&gt;One-click install:&lt;/h4&gt; 
 &lt;p&gt;&lt;a href="https://lmstudio.ai/install-mcp?name=context7&amp;amp;config=eyJjb21tYW5kIjoibnB4IiwiYXJncyI6WyIteSIsIkB1cHN0YXNoL2NvbnRleHQ3LW1jcCJdfQ%3D%3D"&gt;&lt;img src="https://files.lmstudio.ai/deeplink/mcp-install-light.svg?sanitize=true" alt="Add MCP Server context7 to LM Studio" /&gt;&lt;/a&gt;&lt;/p&gt; 
 &lt;h4&gt;Manual set-up:&lt;/h4&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate to &lt;code&gt;Program&lt;/code&gt; (right side) &amp;gt; &lt;code&gt;Install&lt;/code&gt; &amp;gt; &lt;code&gt;Edit mcp.json&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Paste the configuration given below:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "Context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="3"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt; to apply the changes.&lt;/li&gt; 
  &lt;li&gt;Toggle the MCP server on/off from the right hand side, under &lt;code&gt;Program&lt;/code&gt;, or by clicking the plug icon at the bottom of the chat box.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Visual Studio 2022&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;You can configure Context7 MCP in Visual Studio 2022 by following the &lt;a href="https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022"&gt;Visual Studio MCP Servers documentation&lt;/a&gt;.&lt;/p&gt; 
 &lt;p&gt;Add this to your Visual Studio MCP config file (see the &lt;a href="https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022"&gt;Visual Studio docs&lt;/a&gt; for details):&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "inputs": [],
  "servers": {
    "context7": {
      "type": "sse",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Or, for a local server:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcp": {
    "servers": {
      "context7": {
        "type": "stdio",
        "command": "npx",
        "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;For more information and troubleshooting, refer to the &lt;a href="https://learn.microsoft.com/visualstudio/ide/mcp-servers?view=vs-2022"&gt;Visual Studio MCP Servers documentation&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Crush&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Add this to your Crush configuration file. See &lt;a href="https://github.com/charmbracelet/crush#mcps"&gt;Crush MCP docs&lt;/a&gt; for more info.&lt;/p&gt; 
 &lt;h4&gt;Crush Remote Server Connection (HTTP)&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Crush Remote Server Connection (SSE)&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "context7": {
      "type": "sse",
      "url": "https://mcp.context7.com/sse",
      "headers": {
        "CONTEXT7_API_KEY": "YOUR_API_KEY"
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Crush Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "$schema": "https://charm.land/crush.json",
  "mcp": {
    "context7": {
      "type": "stdio",
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in BoltAI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Open the "Settings" page of the app, navigate to "Plugins," and enter the following JSON:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once saved, enter in the chat &lt;code&gt;get-library-docs&lt;/code&gt; followed by your Context7 documentation ID (e.g., &lt;code&gt;get-library-docs /nuxt/ui&lt;/code&gt;). More information is available on &lt;a href="https://docs.boltai.com/docs/plugins/mcp-servers"&gt;BoltAI's Documentation site&lt;/a&gt;. For BoltAI on iOS, &lt;a href="https://docs.boltai.com/docs/boltai-mobile/mcp-servers"&gt;see this guide&lt;/a&gt;.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Rovo Dev CLI&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Edit your Rovo Dev CLI MCP config by running the command below -&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;acli rovodev mcp
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Example config -&lt;/p&gt; 
 &lt;h4&gt;Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Zencoder&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;To configure Context7 MCP in Zencoder, follow these steps:&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Zencoder menu (...)&lt;/li&gt; 
  &lt;li&gt;From the dropdown menu, select Agent tools&lt;/li&gt; 
  &lt;li&gt;Click on the Add custom MCP&lt;/li&gt; 
  &lt;li&gt;Add the name and server configuration from below, and make sure to hit the Install button&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "command": "npx",
  "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;Once the MCP server is added, you can easily continue using it.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Qodo Gen&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://docs.qodo.ai/qodo-documentation/qodo-gen/qodo-gen-chat/agentic-mode/agentic-tools-mcps"&gt;Qodo Gen docs&lt;/a&gt; for more details.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open Qodo Gen chat panel in VSCode or IntelliJ.&lt;/li&gt; 
  &lt;li&gt;Click Connect more tools.&lt;/li&gt; 
  &lt;li&gt;Click + Add new MCP.&lt;/li&gt; 
  &lt;li&gt;Add the following configuration:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;h4&gt;Qodo Gen Local Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;h4&gt;Qodo Gen Remote Server Connection&lt;/h4&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "url": "https://mcp.context7.com/mcp"
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Install in Perplexity Desktop&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;See &lt;a href="https://www.perplexity.ai/help-center/en/articles/11502712-local-and-remote-mcps-for-perplexity"&gt;Local and Remote MCPs for Perplexity&lt;/a&gt; for more information.&lt;/p&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Navigate &lt;code&gt;Perplexity&lt;/code&gt; &amp;gt; &lt;code&gt;Settings&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Connectors&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Click &lt;code&gt;Add Connector&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Select &lt;code&gt;Advanced&lt;/code&gt;.&lt;/li&gt; 
  &lt;li&gt;Enter Server Name: &lt;code&gt;Context7&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Paste the following JSON in the text area:&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "args": ["-y", "@upstash/context7-mcp", "--api-key", "YOUR_API_KEY"],
  "command": "npx",
  "env": {}
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;ol start="7"&gt; 
  &lt;li&gt;Click &lt;code&gt;Save&lt;/code&gt;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;🔨 Available Tools&lt;/h2&gt; 
&lt;p&gt;Context7 MCP provides the following tools that LLMs can use:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;resolve-library-id&lt;/code&gt;: Resolves a general library name into a Context7-compatible library ID.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;libraryName&lt;/code&gt; (required): The name of the library to search for&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;code&gt;get-library-docs&lt;/code&gt;: Fetches documentation for a library using a Context7-compatible library ID.&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;code&gt;context7CompatibleLibraryID&lt;/code&gt; (required): Exact Context7-compatible library ID (e.g., &lt;code&gt;/mongodb/docs&lt;/code&gt;, &lt;code&gt;/vercel/next.js&lt;/code&gt;)&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;topic&lt;/code&gt; (optional): Focus the docs on a specific topic (e.g., "routing", "hooks")&lt;/li&gt; 
   &lt;li&gt;&lt;code&gt;tokens&lt;/code&gt; (optional, default 10000): Max number of tokens to return. Values less than the default value of 10000 are automatically increased to 10000.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;🛟 Tips&lt;/h2&gt; 
&lt;h3&gt;Add a Rule&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you don’t want to add &lt;code&gt;use context7&lt;/code&gt; to every prompt, you can define a simple rule in your &lt;code&gt;.windsurfrules&lt;/code&gt; file in Windsurf or from &lt;code&gt;Cursor Settings &amp;gt; Rules&lt;/code&gt; section in Cursor (or the equivalent in your MCP client) to auto-invoke Context7 on any code question:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-toml"&gt;[[calls]]
match = "when the user requests code examples, setup or configuration steps, or library/API documentation"
tool  = "context7"
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;From then on you’ll get Context7’s docs in any related conversation without typing anything extra. You can add your use cases to the match part.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Use Library Id&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;If you already know exactly which library you want to use, add its Context7 ID to your prompt. That way, Context7 MCP server can skip the library-matching step and directly continue with retrieving docs.&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-txt"&gt;implement basic authentication with supabase. use library /supabase/supabase for api and docs
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;The slash syntax tells the MCP tool exactly which library to load docs for.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;HTTPS Proxy&lt;/h3&gt; 
&lt;p&gt;If you are behind an HTTP proxy, Context7 uses the standard &lt;code&gt;https_proxy&lt;/code&gt; / &lt;code&gt;HTTPS_PROXY&lt;/code&gt; environment variables.&lt;/p&gt; 
&lt;h2&gt;💻 Development&lt;/h2&gt; 
&lt;p&gt;Clone the project and install dependencies:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun i
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Build:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run build
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Run the server:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dist/index.js
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;CLI Arguments&lt;/h3&gt; 
&lt;p&gt;&lt;code&gt;context7-mcp&lt;/code&gt; accepts the following CLI flags:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;--transport &amp;lt;stdio|http&amp;gt;&lt;/code&gt; – Transport to use (&lt;code&gt;stdio&lt;/code&gt; by default). Note that HTTP transport automatically provides both HTTP and SSE endpoints.&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--port &amp;lt;number&amp;gt;&lt;/code&gt; – Port to listen on when using &lt;code&gt;http&lt;/code&gt; transport (default &lt;code&gt;3000&lt;/code&gt;).&lt;/li&gt; 
 &lt;li&gt;&lt;code&gt;--api-key &amp;lt;key&amp;gt;&lt;/code&gt; – API key for authentication. You can get your API key by creating an account at &lt;a href="https://context7.com/dashboard"&gt;context7.com/dashboard&lt;/a&gt;.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Example with http transport and port 8080:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dist/index.js --transport http --port 8080
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;Another example with stdio transport:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-bash"&gt;bun run dist/index.js --transport stdio --api-key YOUR_API_KEY
&lt;/code&gt;&lt;/pre&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Local Configuration Example&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["tsx", "/path/to/folder/context7-mcp/src/index.ts", "--api-key", "YOUR_API_KEY"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Testing with MCP Inspector&lt;/b&gt;&lt;/summary&gt; 
 &lt;pre&gt;&lt;code class="language-bash"&gt;npx -y @modelcontextprotocol/inspector npx @upstash/context7-mcp
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;h2&gt;🚨 Troubleshooting&lt;/h2&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;Module Not Found Errors&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;If you encounter &lt;code&gt;ERR_MODULE_NOT_FOUND&lt;/code&gt;, try using &lt;code&gt;bunx&lt;/code&gt; instead of &lt;code&gt;npx&lt;/code&gt;:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "bunx",
      "args": ["-y", "@upstash/context7-mcp"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
 &lt;p&gt;This often resolves module resolution issues in environments where &lt;code&gt;npx&lt;/code&gt; doesn't properly install or resolve packages.&lt;/p&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;ESM Resolution Issues&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;For errors like &lt;code&gt;Error: Cannot find module 'uriTemplate.js'&lt;/code&gt;, try the &lt;code&gt;--experimental-vm-modules&lt;/code&gt; flag:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "--node-options=--experimental-vm-modules", "@upstash/context7-mcp@1.0.6"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;TLS/Certificate Issues&lt;/b&gt;&lt;/summary&gt; 
 &lt;p&gt;Use the &lt;code&gt;--experimental-fetch&lt;/code&gt; flag to bypass TLS-related problems:&lt;/p&gt; 
 &lt;pre&gt;&lt;code class="language-json"&gt;{
  "mcpServers": {
    "context7": {
      "command": "npx",
      "args": ["-y", "--node-options=--experimental-fetch", "@upstash/context7-mcp"]
    }
  }
}
&lt;/code&gt;&lt;/pre&gt; 
&lt;/details&gt; 
&lt;details&gt; 
 &lt;summary&gt;&lt;b&gt;General MCP Client Errors&lt;/b&gt;&lt;/summary&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Try adding &lt;code&gt;@latest&lt;/code&gt; to the package name&lt;/li&gt; 
  &lt;li&gt;Use &lt;code&gt;bunx&lt;/code&gt; as an alternative to &lt;code&gt;npx&lt;/code&gt;&lt;/li&gt; 
  &lt;li&gt;Consider using &lt;code&gt;deno&lt;/code&gt; as another alternative&lt;/li&gt; 
  &lt;li&gt;Ensure you're using Node.js v18 or higher for native fetch support&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/details&gt; 
&lt;h2&gt;⚠️ Disclaimer&lt;/h2&gt; 
&lt;p&gt;Context7 projects are community-contributed and while we strive to maintain high quality, we cannot guarantee the accuracy, completeness, or security of all library documentation. Projects listed in Context7 are developed and maintained by their respective owners, not by Context7. If you encounter any suspicious, inappropriate, or potentially harmful content, please use the "Report" button on the project page to notify us immediately. We take all reports seriously and will review flagged content promptly to maintain the integrity and safety of our platform. By using Context7, you acknowledge that you do so at your own discretion and risk.&lt;/p&gt; 
&lt;h2&gt;🤝 Connect with Us&lt;/h2&gt; 
&lt;p&gt;Stay updated and join our community:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;📢 Follow us on &lt;a href="https://x.com/context7ai"&gt;X&lt;/a&gt; for the latest news and updates&lt;/li&gt; 
 &lt;li&gt;🌐 Visit our &lt;a href="https://context7.com"&gt;Website&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;💬 Join our &lt;a href="https://upstash.com/discord"&gt;Discord Community&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;📺 Context7 In Media&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://youtu.be/52FC3qObp9E"&gt;Better Stack: "Free Tool Makes Cursor 10x Smarter"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=G7gK8H6u7Rs"&gt;Cole Medin: "This is Hands Down the BEST MCP Server for AI Coding Assistants"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-ggvzyLpK6o"&gt;Income Stream Surfers: "Context7 + SequentialThinking MCPs: Is This AGI?"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=CTZm6fBYisc"&gt;Julian Goldie SEO: "Context7: New MCP AI Agent Update"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-ls0D-rtET4"&gt;JeredBlu: "Context 7 MCP: Get Documentation Instantly + VS Code Setup"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PS-2Azb-C3M"&gt;Income Stream Surfers: "Context7: The New MCP Server That Will CHANGE AI Coding"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qZfENAPMnyo"&gt;AICodeKing: "Context7 + Cline &amp;amp; RooCode: This MCP Server Makes CLINE 100X MORE EFFECTIVE!"&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LqTQi8qexJM"&gt;Sean Kochel: "5 MCP Servers For Vibe Coding Glory (Just Plug-In &amp;amp; Go)"&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;⭐ Star History&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://www.star-history.com/#upstash/context7&amp;amp;Date"&gt;&lt;img src="https://api.star-history.com/svg?repos=upstash/context7&amp;amp;type=Date" alt="Star History Chart" /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;h2&gt;📄 License&lt;/h2&gt; 
&lt;p&gt;MIT&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>FortAwesome/Font-Awesome</title>
      <link>https://github.com/FortAwesome/Font-Awesome</link>
      <description>&lt;p&gt;The iconic SVG, font, and CSS toolkit&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;&lt;img src="https://img.fortawesome.com/349cfdf6/fa-free-logo.svg?sanitize=true" alt="Font Awesome Free" width="50%" /&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Version 7&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Font Awesome is the Internet's icon library and toolkit, used by millions of designers, developers, and content creators.&lt;/p&gt; 
&lt;h2&gt;Documentation&lt;/h2&gt; 
&lt;p&gt;Learn how to get started with Font Awesome and then dive deeper into other and advanced topics:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://fontawesome.com/docs"&gt;Docs for version 7&lt;/a&gt;&lt;/p&gt; 
&lt;h3&gt;Where did Font Awesome 6, 5, 4 (or 3) go?&lt;/h3&gt; 
&lt;p&gt;Now that Font Awesome 7 has been released we are marking version 6 as Long Term Support (LTS). Version 6 will get critical bug fixes only. Version 3, 4, and 5 are now end-of-life and we don't plan on releasing any further versions of these.&lt;/p&gt; 
&lt;p&gt;You can see a complete list of versions on &lt;a href="https://fontawesome.com/versions"&gt;our Versions page&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Change log&lt;/h2&gt; 
&lt;p&gt;The change log for releases is now &lt;a href="https://fontawesome.com/docs/changelog/"&gt;available directly on our site&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;Looking for older versions of Font Awesome? Check the &lt;a href="https://github.com/FortAwesome/Font-Awesome/releases"&gt;releases&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Upgrading&lt;/h2&gt; 
&lt;p&gt;From time-to-time we'll have special upgrading instructions from one version to the next.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://docs.fontawesome.com/upgrade/upgrade-on-web"&gt;Web upgrading guide&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://docs.fontawesome.com/upgrade/upgrade-on-desktop"&gt;Desktop upgrading guide&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Code of conduct&lt;/h2&gt; 
&lt;p&gt;We will behave ourselves if you behave yourselves. For more details see our &lt;a href="https://raw.githubusercontent.com/FortAwesome/Font-Awesome/7.x/CODE_OF_CONDUCT.md"&gt;CODE_OF_CONDUCT.md&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Contributing&lt;/h2&gt; 
&lt;p&gt;Please read through our &lt;a href="https://raw.githubusercontent.com/FortAwesome/Font-Awesome/7.x/CONTRIBUTING.md"&gt;contributing guidelines&lt;/a&gt;. Included are directions for opening issues.&lt;/p&gt; 
&lt;h2&gt;Versioning&lt;/h2&gt; 
&lt;p&gt;Font Awesome will be maintained under the Semantic Versioning guidelines as much as possible. Releases will be numbered with the following format:&lt;/p&gt; 
&lt;p&gt;&lt;code&gt;&amp;lt;major&amp;gt;.&amp;lt;minor&amp;gt;.&amp;lt;patch&amp;gt;&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;For more information on SemVer, please visit &lt;a href="https://semver.org"&gt;https://semver.org&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;The major version "7" is part of an umbrella release. It includes many different types of files and technologies. Therefore we deviate from normal SemVer in the following ways:&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Any release may update the design, look-and-feel, or branding of an existing icon&lt;/li&gt; 
 &lt;li&gt;We will never intentionally release a &lt;code&gt;patch&lt;/code&gt; version update that breaks backward compatibility&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;minor&lt;/code&gt; release &lt;strong&gt;may include backward-incompatible changes&lt;/strong&gt; but we will write clear upgrading instructions in UPGRADING.md&lt;/li&gt; 
 &lt;li&gt;A &lt;code&gt;minor&lt;/code&gt; or &lt;code&gt;patch&lt;/code&gt; release will never remove icons&lt;/li&gt; 
 &lt;li&gt;Bug fixes will be addressed as &lt;code&gt;patch&lt;/code&gt; releases unless they include backward incompatibility then they will be &lt;code&gt;minor&lt;/code&gt; releases&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;License&lt;/h2&gt; 
&lt;p&gt;Font Awesome Free is free, open source, and GPL friendly. You can use it for commercial projects, open source projects, or really almost whatever you want.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Icons — CC BY 4.0 License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the CC BY 4.0 license applies to all icons packaged as .svg and .js files types.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Fonts — SIL OFL 1.1 License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the SIL OLF license applies to all icons packaged as web and desktop font files.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Code — MIT License 
  &lt;ul&gt; 
   &lt;li&gt;In the Font Awesome Free download, the MIT license applies to all non-font and non-icon files.&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;Attribution is required by MIT, SIL OLF, and CC BY licenses. Downloaded Font Awesome Free files already contain embedded comments with sufficient attribution, so you shouldn't need to do anything additional when using these files normally.&lt;/p&gt; 
&lt;p&gt;We've kept attribution comments terse, so we ask that you do not actively work to remove them from files, especially code. They're a great way for folks to learn about Font Awesome.&lt;/p&gt; 
&lt;h2&gt;Team&lt;/h2&gt; 
&lt;p&gt;&lt;a href="https://github.com/orgs/FortAwesome/people"&gt;https://github.com/orgs/FortAwesome/people&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GoogleChrome/lighthouse</title>
      <link>https://github.com/GoogleChrome/lighthouse</link>
      <description>&lt;p&gt;Automated auditing, performance metrics, and best practices for the web.&lt;/p&gt;&lt;hr&gt;&lt;h1&gt;Lighthouse &lt;a href="https://github.com/GoogleChrome/lighthouse/actions/workflows/ci.yml"&gt;&lt;img src="https://github.com/GoogleChrome/lighthouse/workflows/CI/badge.svg?sanitize=true" alt="GitHub Actions Status Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GoogleChrome/lighthouse/actions/workflows/unit.yml"&gt;&lt;img src="https://github.com/GoogleChrome/lighthouse/workflows/unit/badge.svg?sanitize=true" alt="GitHub Actions Status Badge" /&gt;&lt;/a&gt; &lt;a href="https://github.com/GoogleChrome/lighthouse/actions/workflows/smoke.yml"&gt;&lt;img src="https://github.com/GoogleChrome/lighthouse/workflows/smoke/badge.svg?sanitize=true" alt="GitHub Actions Status Badge" /&gt;&lt;/a&gt; &lt;a href="https://codecov.io/gh/GoogleChrome/lighthouse"&gt;&lt;img src="https://codecov.io/gh/GoogleChrome/lighthouse/branch/main/graph/badge.svg?sanitize=true" alt="Coverage Status" /&gt;&lt;/a&gt; &lt;a href="https://lh-build-tracker.herokuapp.com/"&gt;&lt;img src="https://img.shields.io/badge/buildtracker-ok-blue" alt="Build tracker for Lighthouse" /&gt;&lt;/a&gt; &lt;a href="https://npmjs.org/package/lighthouse"&gt;&lt;img src="https://img.shields.io/npm/v/lighthouse.svg?sanitize=true" alt="NPM lighthouse package" /&gt;&lt;/a&gt;&lt;/h1&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;Lighthouse analyzes web apps and web pages, collecting modern performance metrics and insights on developer best practices.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Using Lighthouse 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#using-lighthouse-in-chrome-devtools"&gt;Using Lighthouse in Chrome DevTools&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#using-the-chrome-extension"&gt;Using the Chrome extension&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#using-the-node-cli"&gt;Using the Node CLI&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#cli-options"&gt;CLI options&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#using-the-node-module"&gt;Using the Node module&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#viewing-a-report"&gt;Viewing a report&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#online-viewer"&gt;Online Viewer&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#docs--recipes"&gt;Docs &amp;amp; Recipes&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#develop"&gt;Developing Lighthouse&lt;/a&gt; 
    &lt;ul&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#setup"&gt;Setup&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#run"&gt;Run&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#tests"&gt;Tests&lt;/a&gt;&lt;/li&gt; 
     &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#docs"&gt;Docs&lt;/a&gt;&lt;/li&gt; 
    &lt;/ul&gt; &lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;Associated Products and Projects 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#lighthouse-integrations-in-web-perf-services"&gt;Lighthouse Integrations in Web Perf services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#lighthouse-integrations-in-non-web-perf-services"&gt;Lighthouse Integrations in non-Web Perf services&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#plugins"&gt;Plugins&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#related-projects"&gt;Related projects&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#faq"&gt;FAQ&lt;/a&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#how-does-lighthouse-work"&gt;How does Lighthouse work?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#can-i-configure-the-lighthouse-run"&gt;Can I configure the lighthouse run?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#how-does-lighthouse-use-network-throttling-and-how-can-i-make-it-better"&gt;How does Lighthouse use network throttling, and how can I make it better?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#are-results-sent-to-a-remote-server"&gt;Are results sent to a remote server?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#how-do-i-get-localized-lighthouse-results-via-the-cli"&gt;How do I get localized Lighthouse results?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#how-do-i-author-custom-audits-to-extend-lighthouse"&gt;How do I author custom audits to extend Lighthouse?&lt;/a&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/#how-do-i-contribute"&gt;How do I contribute?&lt;/a&gt;&lt;/li&gt; 
  &lt;/ul&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Using Lighthouse in Chrome DevTools&lt;/h2&gt; 
&lt;p&gt;Lighthouse is integrated directly into the Chrome DevTools, under the "Lighthouse" panel.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: install &lt;a href="https://www.google.com/chrome/browser"&gt;Chrome&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: open Chrome DevTools, select the Lighthouse panel, and hit "Generate report".&lt;/p&gt; 
&lt;img width="550" alt="Lighthouse integration in Chrome DevTools." src="https://user-images.githubusercontent.com/2766281/204185043-9c49abe5-baee-4b26-b5ce-ece410661213.png" /&gt; 
&lt;h2&gt;Using the Chrome extension&lt;/h2&gt; 
&lt;p&gt;The Chrome extension was available prior to Lighthouse being available in Chrome Developer Tools, and offers similar functionality.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;: &lt;a href="https://chrome.google.com/webstore/detail/lighthouse/blipmdconlkpinefehnmjammfjpmpbjk"&gt;install the extension&lt;/a&gt; from the Chrome Web Store.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: follow the &lt;a href="https://developers.google.com/web/tools/lighthouse/#extension"&gt;extension quick-start guide&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using the Node CLI&lt;/h2&gt; 
&lt;p&gt;The Node CLI provides the most flexibility in how Lighthouse runs can be configured and reported. Users who want more advanced usage, or want to run Lighthouse in an automated fashion should use the Node CLI.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] Lighthouse requires Node 18.20 or later.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;&lt;strong&gt;Installation&lt;/strong&gt;:&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;npm install -g lighthouse
# or use yarn:
# yarn global add lighthouse
&lt;/code&gt;&lt;/pre&gt; 
&lt;p&gt;&lt;strong&gt;Run it&lt;/strong&gt;: &lt;code&gt;lighthouse https://airhorner.com/&lt;/code&gt;&lt;/p&gt; 
&lt;p&gt;By default, Lighthouse writes the report to an HTML file. You can control the output format by passing flags.&lt;/p&gt; 
&lt;h3&gt;CLI options&lt;/h3&gt; 
&lt;!-- To update the help output:
  node cli --help | pbcopy
--&gt; 
&lt;pre&gt;&lt;code&gt;$ lighthouse --help

lighthouse &amp;lt;url&amp;gt; &amp;lt;options&amp;gt;

Logging:
  --verbose  Displays verbose logging  [boolean] [default: false]
  --quiet    Displays no progress, debug logs, or errors  [boolean] [default: false]

Configuration:
  --save-assets                  Save the trace contents &amp;amp; devtools logs to disk  [boolean] [default: false]
  --list-all-audits              Prints a list of all available audits and exits  [boolean] [default: false]
  --list-trace-categories        Prints a list of all required trace categories and exits  [boolean] [default: false]
  --additional-trace-categories  Additional categories to capture with the trace (comma-delimited).  [string]
  --config-path                  The path to the config JSON.
                                 An example config file: core/config/lr-desktop-config.js  [string]
  --preset                       Use a built-in configuration.
                                 WARNING: If the --config-path flag is provided, this preset will be ignored.  [string] [choices: "perf", "experimental", "desktop"]
  --chrome-flags                 Custom flags to pass to Chrome (space-delimited). For a full list of flags, see https://bit.ly/chrome-flags
                                 Additionally, use the CHROME_PATH environment variable to use a specific Chrome binary. Requires Chromium version 66.0 or later. If omitted, any detected Chrome Canary or Chrome stable will be used.  [string] [default: ""]
  --port                         The port to use for the debugging protocol. Use 0 for a random port  [number] [default: 0]
  --hostname                     The hostname to use for the debugging protocol.  [string] [default: "localhost"]
  --form-factor                  Determines how performance metrics are scored and if mobile-only audits are skipped. For desktop, --preset=desktop instead.  [string] [choices: "mobile", "desktop"]
  --screenEmulation              Sets screen emulation parameters. See also --preset. Use --screenEmulation.disabled to disable. Otherwise set these 4 parameters individually: --screenEmulation.mobile --screenEmulation.width=360 --screenEmulation.height=640 --screenEmulation.deviceScaleFactor=2
  --emulatedUserAgent            Sets useragent emulation  [string]
  --max-wait-for-load            The timeout (in milliseconds) to wait before the page is considered done loading and the run should continue. WARNING: Very high values can lead to large traces and instability  [number]
  --enable-error-reporting       Enables error reporting, overriding any saved preference. --no-enable-error-reporting will do the opposite. More: https://github.com/GoogleChrome/lighthouse/blob/main/docs/error-reporting.md  [boolean]
  --gather-mode, -G              Collect artifacts from a connected browser and save to disk. (Artifacts folder path may optionally be provided). If audit-mode is not also enabled, the run will quit early.
  --audit-mode, -A               Process saved artifacts from disk. (Artifacts folder path may be provided, otherwise defaults to ./latest-run/)
  --only-audits                  Only run the specified audits  [array]
  --only-categories              Only run the specified categories. Available categories: accessibility, best-practices, performance, seo  [array]
  --skip-audits                  Run everything except these audits  [array]
  --disable-full-page-screenshot Disables collection of the full page screenshot, which can be quite large  [boolean]

Output:
  --output       Reporter for the results, supports multiple values. choices: "json", "html", "csv"  [array] [default: ["html"]]
  --output-path  The file path to output the results. Use 'stdout' to write to stdout.
                   If using JSON output, default is stdout.
                   If using HTML or CSV output, default is a file in the working directory with a name based on the test URL and date.
                   If using multiple outputs, --output-path is appended with the standard extension for each output type. "reports/my-run" -&amp;gt; "reports/my-run.report.html", "reports/my-run.report.json", etc.
                   Example: --output-path=./lighthouse-results.html  [string]
  --view         Open HTML report in your browser  [boolean] [default: false]

Options:
  --version                            Show version number  [boolean]
  --help                               Show help  [boolean]
  --cli-flags-path                     The path to a JSON file that contains the desired CLI flags to apply. Flags specified at the command line will still override the file-based ones.
  --locale                             The locale/language the report should be formatted in
  --blocked-url-patterns               Block any network requests to the specified URL patterns  [array]
  --disable-storage-reset              Disable clearing the browser cache and other storage APIs before a run  [boolean]
  --throttling-method                  Controls throttling method  [string] [choices: "devtools", "provided", "simulate"]
  --throttling
  --throttling.rttMs                   Controls simulated network RTT (TCP layer)
  --throttling.throughputKbps          Controls simulated network download throughput
  --throttling.requestLatencyMs        Controls emulated network RTT (HTTP layer)
  --throttling.downloadThroughputKbps  Controls emulated network download throughput
  --throttling.uploadThroughputKbps    Controls emulated network upload throughput
  --throttling.cpuSlowdownMultiplier   Controls simulated + emulated CPU throttling
  --extra-headers                      Set extra HTTP Headers to pass with request
  --precomputed-lantern-data-path      Path to the file where lantern simulation data should be read from, overwriting the lantern observed estimates for RTT and server latency.  [string]
  --lantern-data-output-path           Path to the file where lantern simulation data should be written to, can be used in a future run with the `precomputed-lantern-data-path` flag.  [string]
  --plugins                            Run the specified plugins  [array]
  --channel  [string] [default: "cli"]
  --chrome-ignore-default-flags  [boolean] [default: false]

Examples:
  lighthouse &amp;lt;url&amp;gt; --view                                                                          Opens the HTML report in a browser after the run completes
  lighthouse &amp;lt;url&amp;gt; --config-path=./myconfig.js                                                     Runs Lighthouse with your own configuration: custom audits, report generation, etc.
  lighthouse &amp;lt;url&amp;gt; --output=json --output-path=./report.json --save-assets                         Save trace, screenshots, and named JSON report.
  lighthouse &amp;lt;url&amp;gt; --screenEmulation.disabled --throttling-method=provided --no-emulatedUserAgent  Disable device emulation and all throttling
  lighthouse &amp;lt;url&amp;gt; --chrome-flags="--window-size=412,660"                                          Launch Chrome with a specific window size
  lighthouse &amp;lt;url&amp;gt; --quiet --chrome-flags="--headless"                                             Launch Headless Chrome, turn off logging
  lighthouse &amp;lt;url&amp;gt; --extra-headers "{\"Cookie\":\"monster=blue\", \"x-men\":\"wolverine\"}"        Stringify'd JSON HTTP Header key/value pairs to send in requests
  lighthouse &amp;lt;url&amp;gt; --extra-headers=./path/to/file.json                                             Path to JSON file of HTTP Header key/value pairs to send in requests
  lighthouse &amp;lt;url&amp;gt; --only-categories=performance,seo                                               Only run the specified categories. Available categories: accessibility, best-practices, performance, seo

For more information on Lighthouse, see https://developers.google.com/web/tools/lighthouse/.
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Output Examples&lt;/h5&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;lighthouse
# saves `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.html`

lighthouse --output json
# json output sent to stdout

lighthouse --output html --output-path ./report.html
# saves `./report.html`

# NOTE: specifying an output path with multiple formats ignores your specified extension for *ALL* formats
lighthouse --output json --output html --output-path ./myfile.json
# saves `./myfile.report.json` and `./myfile.report.html`

lighthouse --output json --output html
# saves `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.json` and `./&amp;lt;HOST&amp;gt;_&amp;lt;DATE&amp;gt;.report.html`

lighthouse --output-path=~/mydir/foo.out --save-assets
# saves `~/mydir/foo.report.html`
# saves `~/mydir/foo-0.trace.json` and `~/mydir/foo-0.devtoolslog.json`

lighthouse --output-path=./report.json --output json
# saves `./report.json`
&lt;/code&gt;&lt;/pre&gt; 
&lt;h5&gt;Lifecycle Examples&lt;/h5&gt; 
&lt;p&gt;You can run a subset of Lighthouse's lifecycle if desired via the &lt;code&gt;--gather-mode&lt;/code&gt; (&lt;code&gt;-G&lt;/code&gt;) and &lt;code&gt;--audit-mode&lt;/code&gt; (&lt;code&gt;-A&lt;/code&gt;) CLI flags.&lt;/p&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;lighthouse http://example.com -G
# launches browser, collects artifacts, saves them to disk (in `./latest-run/`) and quits

lighthouse http://example.com -A
# skips browser interaction, loads artifacts from disk (in `./latest-run/`), runs audits on them, generates report

lighthouse http://example.com -GA
# Normal gather + audit run, but also saves collected artifacts to disk for subsequent -A runs.


# You can optionally provide a custom folder destination to -G/-A/-GA. Without a value, the default will be `$PWD/latest-run`.
lighthouse -GA=./gmailartifacts https://gmail.com
&lt;/code&gt;&lt;/pre&gt; 
&lt;h4&gt;Notes on Error Reporting&lt;/h4&gt; 
&lt;p&gt;The first time you run the CLI you will be prompted with a message asking you if Lighthouse can anonymously report runtime exceptions. The Lighthouse team uses this information to detect new bugs and avoid regressions. Opting out will not affect your ability to use Lighthouse in any way. &lt;a href="https://github.com/GoogleChrome/lighthouse/raw/main/docs/error-reporting.md"&gt;Learn more&lt;/a&gt;.&lt;/p&gt; 
&lt;h2&gt;Using the Node module&lt;/h2&gt; 
&lt;p&gt;You can also use Lighthouse programmatically with the Node module.&lt;/p&gt; 
&lt;p&gt;Read &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/readme.md#using-programmatically"&gt;Using Lighthouse programmatically&lt;/a&gt; for help getting started.&lt;br /&gt; Read &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/configuration.md"&gt;Lighthouse Configuration&lt;/a&gt; to learn more about the configuration options available.&lt;/p&gt; 
&lt;h2&gt;Viewing a report&lt;/h2&gt; 
&lt;p&gt;Lighthouse can produce a report as JSON or HTML.&lt;/p&gt; 
&lt;p&gt;HTML report:&lt;/p&gt; 
&lt;img src="https://raw.githubusercontent.com/GoogleChrome/lighthouse/443ff2c8a297dfd2297dfaca86c4966a87c8574a/assets/example_audit.png" alt="Lighthouse example audit" width="500px" /&gt; 
&lt;h3&gt;Online Viewer&lt;/h3&gt; 
&lt;p&gt;Running Lighthouse with the &lt;code&gt;--output=json&lt;/code&gt; flag generates a JSON dump of the run. You can view this report online by visiting &lt;a href="https://googlechrome.github.io/lighthouse/viewer/"&gt;https://googlechrome.github.io/lighthouse/viewer/&lt;/a&gt; and dragging the file onto the app. You can also use the "Export" button from the top of any Lighthouse HTML report and open the report in the &lt;a href="https://googlechrome.github.io/lighthouse/viewer/"&gt;Lighthouse Viewer&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;In the Viewer, reports can be shared by clicking the share icon in the top right corner and signing in to GitHub.&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;[!NOTE] shared reports are stashed as a secret Gist in GitHub, under your account.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h2&gt;Docs &amp;amp; Recipes&lt;/h2&gt; 
&lt;p&gt;Useful documentation, examples, and recipes to get you started.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Docs&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/variability.md"&gt;Dealing with variance&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/readme.md#using-programmatically"&gt;Using Lighthouse programmatically&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/authenticated-pages.md"&gt;Testing a site with authentication&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/plugins.md"&gt;Developing Plugins&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/new-audits.md"&gt;Making a New Audit&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/readme.md#testing-on-a-mobile-device"&gt;Testing on a mobile device&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/architecture.md"&gt;Lighthouse Architecture&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Recipes&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/recipes/lighthouse-plugin-example"&gt;Plugin&lt;/a&gt; - example Lighthouse plugin&lt;/li&gt; 
 &lt;li&gt;&lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/recipes/custom-audit"&gt;Custom Audit example&lt;/a&gt; - extend Lighthouse, run your own audits&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;strong&gt;Videos&lt;/strong&gt;&lt;/p&gt; 
&lt;p&gt;The session from Google I/O 2018 covers the new performance engine, upcoming Lighthouse REST API, and using the Chrome UX report to evaluate real-user data.&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=UvK9zAsSM8Q"&gt;&lt;img src="https://img.youtube.com/vi/UvK9zAsSM8Q/0.jpg" alt="Watch the Lighthouse @ Google I/O 2018 session." /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;The session from Google I/O 2017 covers architecture, writing custom audits, GitHub/Travis/CI integration, headless Chrome, and more:&lt;/p&gt; 
&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=NoRYn6gOtVo"&gt;&lt;img src="https://img.youtube.com/vi/NoRYn6gOtVo/0.jpg" alt="Watch the Lighthouse @ Google I/O 2017 session." /&gt;&lt;/a&gt;&lt;/p&gt; 
&lt;p&gt;&lt;em&gt;Click the image to watch the video on YouTube.&lt;/em&gt;&lt;/p&gt; 
&lt;h2&gt;Develop&lt;/h2&gt; 
&lt;p&gt;Read on for the basics of hacking on Lighthouse. Also, see &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; for detailed information.&lt;/p&gt; 
&lt;h3&gt;Setup&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# yarn should be installed first

git clone https://github.com/GoogleChrome/lighthouse

cd lighthouse
yarn
yarn build-all
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Run&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;node cli http://example.com
# append --chrome-flags="--no-sandbox --headless --disable-gpu" if you run into problems connecting to Chrome
&lt;/code&gt;&lt;/pre&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Getting started tip&lt;/strong&gt;: &lt;code&gt;node --inspect-brk cli http://example.com&lt;/code&gt; to open up Chrome DevTools and step through the entire app. See &lt;a href="https://medium.com/@paul_irish/debugging-node-js-nightlies-with-chrome-devtools-7c4a1b95ae27#.59rma3ukm"&gt;Debugging Node.js with Chrome DevTools&lt;/a&gt; for more info.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;h3&gt;Tests&lt;/h3&gt; 
&lt;pre&gt;&lt;code class="language-sh"&gt;# lint and test all files
yarn test

# run all unit tests
yarn unit

# run a given unit test (e.g. core/test/audits/byte-efficiency/uses-long-cache-ttl-test.js)
yarn mocha uses-long-cache-ttl

# watch for file changes and run tests
#   Requires http://entrproject.org : brew install entr
yarn watch

## run linting, unit, and smoke tests separately
yarn lint
yarn unit
yarn smoke

## run tsc compiler
yarn type-check
&lt;/code&gt;&lt;/pre&gt; 
&lt;h3&gt;Docs&lt;/h3&gt; 
&lt;p&gt;Some of our docs have tests that run only in CI by default. To modify our documentation, you'll need to run &lt;code&gt;yarn build-pack &amp;amp;&amp;amp; yarn test-docs&lt;/code&gt; locally to make sure they pass.&lt;/p&gt; 
&lt;p&gt;&lt;strong&gt;Additional Dependencies&lt;/strong&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;code&gt;brew install jq&lt;/code&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lighthouse Integrations in Web Perf services&lt;/h2&gt; 
&lt;p&gt;This section details services that have integrated Lighthouse data. If you're working on a cool project integrating Lighthouse and would like to be featured here, file an issue to this repo or tweet at us &lt;a href="https://twitter.com/____lighthouse"&gt;@_____lighthouse&lt;/a&gt;!&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.webpagetest.org"&gt;Web Page Test&lt;/a&gt;&lt;/strong&gt; — An &lt;a href="https://github.com/WPO-Foundation/webpagetest"&gt;open source&lt;/a&gt; tool for measuring and analyzing the performance of web pages on real devices. Users can choose to produce a Lighthouse report alongside the analysis of WebPageTest results.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="http://httparchive.org/"&gt;HTTPArchive&lt;/a&gt;&lt;/strong&gt; - HTTPArchive tracks how the web is built by crawling 500k pages with Web Page Test, including Lighthouse results, and stores the information in BigQuery where it is &lt;a href="https://discuss.httparchive.org/t/quickstart-guide-to-exploring-the-http-archive/682"&gt;publicly available&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://calibreapp.com"&gt;Calibre&lt;/a&gt;&lt;/strong&gt; - Calibre is a comprehensive performance monitoring platform running on Lighthouse. See the performance impact of your work before it hits production with GitHub Pull Request Reviews. Track the impact of Third Party scripts. Automate your performance system with a developer-first Node.js API. Try Calibre with a free 15-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.debugbear.com/"&gt;DebugBear&lt;/a&gt;&lt;/strong&gt; - DebugBear is a website monitoring tool based on Lighthouse. See how your scores and metrics changed over time, with a focus on understanding what caused each change. DebugBear is a paid product with a free 30-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://treo.sh"&gt;Treo&lt;/a&gt;&lt;/strong&gt; - Treo is Lighthouse as a Service. It provides regression testing, geographical regions, custom networks, and integrations with GitHub &amp;amp; Slack. Treo is a paid product with plans for solo-developers and teams.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://pagevitals.com"&gt;PageVitals&lt;/a&gt;&lt;/strong&gt; - PageVitals combines Lighthouse, CrUX and field testing to monitor the performance of websites. See how your website performs over time and get alerted if it gets too slow. Drill down and find the real cause of any performance issue. PageVitals is a paid product with a free 14-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://screpy.com"&gt;Screpy&lt;/a&gt;&lt;/strong&gt; - Screpy is a web analysis tool that can analyze all pages of your websites in one dashboard and monitor them with your team. It's powered by Lighthouse and it also includes some different analysis tools (SERP, W3C, Uptime, etc). Screpy has free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://siteimprove.com/en/performance/"&gt;Siteimprove Performance&lt;/a&gt;&lt;/strong&gt; — Siteimprove Performance is a web Performance monitoring solution that enables a marketer, manager or decision maker to understand and optimize website load times. Get easy-to-use insights with a focus on quick and impactful wins. Siteimprove Performance is a paid product with a free 14-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://speedcurve.com"&gt;SpeedCurve&lt;/a&gt;&lt;/strong&gt; — SpeedCurve is a tool for continuously monitoring web performance across different browsers, devices, and regions. It can aggregate any metric including Lighthouse scores across multiple pages and sites, and allows you to set performance budgets with Slack or email alerts. SpeedCurve is a paid product with a free 30-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://www.foo.software/lighthouse"&gt;Foo&lt;/a&gt;&lt;/strong&gt; - Lighthouse-as-a-service offering free and premium plans. Provides monitoring and historical reporting of Lighthouse audits with CircleCI, GitHub, and other integrations. Features include Slack notifications, PR comment reporting and more.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://apdex.co"&gt;Apdex&lt;/a&gt;&lt;/strong&gt; - Apdex is a website performance service. The main features are historical Lighthouse report visualizations, mobile/desktop options, alerts, uptime monitoring, and more. There are flexible paid plans and a 30-day free trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://websu.io"&gt;Websu&lt;/a&gt;&lt;/strong&gt; - Websu is an open source project to provide Lighthouse-as-a-Service through a simple HTTP REST API. The main features are ability to host and deploy in your own environment and historical Lighthouse report summaries.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://dtekt.io"&gt;DTEKT.IO&lt;/a&gt;&lt;/strong&gt; - DTEKT is a website performance and uptime monitoring service. It uses lighthouse to provide visibility into the performance of websites from multiple locations on multiple devices. It offers three months free trial and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://speedvitals.com"&gt;SpeedVitals&lt;/a&gt;&lt;/strong&gt; - SpeedVitals is a Lighthouse powered tool to measure web performance across multiple devices and locations. It has various features like Layout Shift Visualization, Waterfall Chart, Field Data and Resource Graphs. SpeedVitals offers both free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://lighthouse-metrics.com/"&gt;Lighthouse Metrics&lt;/a&gt;&lt;/strong&gt; - Lighthouse Metrics gives you global performance insights with a single test. You can also monitor your websites on a daily or hourly base. Lighthouse Metrics offers free global one-time tests and performance monitoring as a paid feature with a free 14-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://auditzy.com"&gt;Auditzy&lt;/a&gt;&lt;/strong&gt; - Auditzy™ is a robust website auditing &amp;amp; monitoring tool which lets you analyze your web page(s) pre-user journey. Analyze the Competitor Health Metric, Core Web Vitals, and Technology. Compare your web pages with your competitors to understand where you are leading or lagging. Real-time notification with Slack. Have Seamless Collaboration with Multiple Teams. Automate your Audits hourly, daily, weekly, and so on. It has a free trial with pay as you go plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="http://lighthousemetricschina.com"&gt;Lighthouse Metrics China&lt;/a&gt;&lt;/strong&gt; - The first Lighthouse metrics tool specifically designed for China. Experience unparalleled website monitoring capabilities with Lighthouse. Gain insights into the fluctuations of your scores and metrics within the realm of the &lt;a href="https://www.chinafirewalltest.co"&gt;Great Firewall of China&lt;/a&gt;, enabling a comprehensive understanding of the factors influencing each change. Lighthouse Metrics China offers both free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://deploymenthawk.com"&gt;DeploymentHawk&lt;/a&gt;&lt;/strong&gt; - DeploymentHawk is an automated site auditing tool powered by Lighthouse. Effortlessly catch performance, accessibility, and SEO issues before they impact your users. DeploymentHawk is a paid product with a free 7-day trial.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://guardius.io"&gt;Guardius&lt;/a&gt;&lt;/strong&gt; - Guardius is a DevOps and DevSecOps SaaS platform that integrates Lighthouse to deliver automated web performance analysis. It not only provides metrics evaluation and automatic scanning but also enables performance comparisons across different periods and ongoing observation over time. Additionally, Guardius offers predefined and customized alerts tailored to your specific requirements. A free version of Guardius is available for users to explore its features.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://getsona.io"&gt;Sonā&lt;/a&gt;&lt;/strong&gt; - Powered by Lighthouse amongst others, Sonā delivers in-depth insights into your website’s health. Track changes over time, share reports, and receive actionable recommendations to improve performance, accessibility, SEO, best practices, and security. Sonā is free during its beta period.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Lighthouse Integrations in non-Web Perf services&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://pagewatch.dev/"&gt;PageWatch&lt;/a&gt;&lt;/strong&gt; — PageWatch is a tool to find problem pages on your website. It provides insights into spelling errors, layout issues, slow pages (powered by Lighthouse) and more. PageWatch is offered via free and paid plans.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://fluxguard.com/"&gt;Fluxguard&lt;/a&gt;&lt;/strong&gt; - Fluxguard provides website DOM change monitoring orchestrated with Google Puppeteer, and audited by Lighthouse. Fluxguard is a freemium product, with monthly monitoring of up to 75 pages for free.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://microlink.io"&gt;Microlink&lt;/a&gt;&lt;/strong&gt; — Microlink is a cloud browser as API. It offers Lighthouse reports on demand, making it easy to build any service on top. Similar functionality is available via the underlying open-source project named browserless.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://wattspeed.com/"&gt;Wattspeed&lt;/a&gt;&lt;/strong&gt; — Wattspeed is a free tool that generates snapshots - historical captures of your web pages that include Lighthouse scores, a list of technologies, W3C HTML validator results, DOM size, mixed content info, and more.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Plugins&lt;/h2&gt; 
&lt;ul&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/treosh/lighthouse-plugin-field-performance"&gt;lighthouse-plugin-field-performance&lt;/a&gt;&lt;/strong&gt; - a plugin that adds real-user performance metrics for the URL using the data from &lt;a href="https://developers.google.com/web/tools/chrome-user-experience-report/"&gt;Chrome UX Report&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/googleads/publisher-ads-lighthouse-plugin"&gt;lighthouse-plugin-publisher-ads&lt;/a&gt;&lt;/strong&gt; - a tool to improve ad speed and overall quality through a series of automated audits. At the moment, this is primarily targeted at sites using Google Ad Manager. This tool will aid in resolving discovered problems, providing a tool to be used to evaluate effectiveness of iterative changes while suggesting actionable feedback.&lt;/p&gt; &lt;/li&gt; 
 &lt;li&gt; &lt;p&gt;&lt;strong&gt;&lt;a href="https://github.com/dvelasquez/lighthouse-plugin-crux"&gt;lighthouse-plugin-crux&lt;/a&gt;&lt;/strong&gt; - a plugin that quickly gathers real-user-metrics data from the &lt;a href="https://developers.google.com/web/tools/chrome-user-experience-report/api/reference"&gt;Chrome UX Report API&lt;/a&gt;.&lt;/p&gt; &lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;Related projects&lt;/h2&gt; 
&lt;p&gt;Other awesome open source projects that use Lighthouse.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/TGiles/auto-lighthouse"&gt;auto-lighthouse&lt;/a&gt;&lt;/strong&gt; - a CLI for crawling a domain and generating mobile and desktop reports for each page.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/treosh/exthouse"&gt;Exthouse&lt;/a&gt;&lt;/strong&gt; - Analyze the impact of a browser extension on web performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://labs.moduscreate.com/gimbal-web-performance-audit-budgeting"&gt;Gimbal&lt;/a&gt;&lt;/strong&gt; - An &lt;a href="https://github.com/ModusCreateOrg/gimbal"&gt;open source (MIT licensed)&lt;/a&gt; tool used to measure, analyze, and budget aspects of a web application. Gimbal also integrates reports with GitHub pull requests.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Cognifide/gradle-lighthouse-plugin"&gt;Gradle Lighthouse Plugin&lt;/a&gt;&lt;/strong&gt; - An open source Gradle plugin that runs Lighthouse tests on multiple URLs and asserts category score thresholds (useful in continuous integration).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/emazzotta/lighthouse-badges"&gt;lighthouse-badges&lt;/a&gt;&lt;/strong&gt; - Generate gh-badges (shields.io) based on Lighthouse performance.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/mikestead/lighthouse-batch"&gt;lighthouse-batch&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse over a number of sites and generate a summary of their metrics/scores.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Carr1005/lighthouse-batch-parallel"&gt;lighthouse-batch-parallel&lt;/a&gt;&lt;/strong&gt; - Run multiple Lighthouse runs in parallel to accelerate the data collecting process, get the result stream (csv, json, js object) in your own process (warning: performance results may be volatile).&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/foo-software/lighthouse-check-action"&gt;lighthouse-check-action&lt;/a&gt;&lt;/strong&gt; - A GitHub Action to run Lighthouse in a workflow, featuring Slack notifications and report upload to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://circleci.com/orbs/registry/orb/foo-software/lighthouse-check"&gt;lighthouse-check-orb&lt;/a&gt;&lt;/strong&gt; - A CircleCI Orb to run Lighthouse in a workflow, featuring Slack notifications and report upload to S3.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/andreasonny83/lighthouse-ci"&gt;andreasonny83/lighthouse-ci&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and assert scores satisfy your custom thresholds.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/GoogleChrome/lighthouse-ci"&gt;GoogleChrome/lighthouse-ci&lt;/a&gt;&lt;/strong&gt; - (&lt;strong&gt;official&lt;/strong&gt;) Automate running Lighthouse for every commit, viewing the changes, and preventing regressions.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/treosh/lighthouse-ci-action"&gt;lighthouse-ci-action&lt;/a&gt;&lt;/strong&gt; - A GitHub Action that makes it easy to run Lighthouse in CI and keep your pages small using performance budgets.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/carlesnunez/lighthouse-gh-reporter"&gt;lighthouse-gh-reporter&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse in CI and report back in a comment on your pull requests&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/justinribeiro/lighthouse-jest-example"&gt;lighthouse-jest-example&lt;/a&gt;&lt;/strong&gt; - Gather performance metrics via Lighthouse and assert results with Jest; uses Puppeteer to start Chrome with network emulation settings defined by WebPageTest.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Otterseer/lighthouse-lambda"&gt;lighthouse-lambda&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse on AWS Lambda with prebuilt stable desktop Headless Chrome.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/ackama/lighthouse-matchers"&gt;lighthouse-matchers&lt;/a&gt;&lt;/strong&gt; - Provides RSpec matchers for executing and evaluating Google Chrome Lighthouse audit scores.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/rishichawda/lighthouse-mocha-example"&gt;lighthouse-mocha-example&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse performance tests with Mocha and chrome-launcher.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/verivox/lighthouse-monitor"&gt;lighthouse-monitor&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse against all your URLs. Send metrics to any backend you want, save all reports with automatic data retention, and compare any two results in a web UI.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/foo-software/lighthouse-persist"&gt;lighthouse-persist&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and upload HTML reports to an AWS S3 bucket.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/dvelasquez/lighthouse-viewer/tree/main/packages/lighthouse-viewer"&gt;lighthouse-viewer&lt;/a&gt;&lt;/strong&gt; - Render the Lighthouse JSON into a report, using the Lighthouse Report Renderer repackaged as UMD and ESM. Also available with React, Svelte and Vue wrappers.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/godaddy/lighthouse4u"&gt;lighthouse4u&lt;/a&gt;&lt;/strong&gt; - LH4U provides Google Lighthouse as a service, surfaced by both a friendly UI+API, and backed by Elastic Search for easy querying and visualization.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://www.npmjs.com/package/react-lighthouse-viewer"&gt;react-lighthouse-viewer&lt;/a&gt;&lt;/strong&gt; - Render a Lighthouse JSON report in a React Component.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/viasite/site-audit-seo"&gt;site-audit-seo&lt;/a&gt;&lt;/strong&gt; - CLI tool for SEO site audit, crawl site, lighthouse each page. Output to console and tables in csv, xlsx, json, web or Google Drive.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/addyosmani/webpack-lighthouse-plugin"&gt;webpack-lighthouse-plugin&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse from a Webpack build.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/mfrachet/cypress-audit"&gt;cypress-audit&lt;/a&gt;&lt;/strong&gt; - Run Lighthouse and Pa11y audits directly in your E2E test suites.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/adityadees/laravel-lighthouse"&gt;laravel-lighthouse&lt;/a&gt;&lt;/strong&gt; - Google Lighthouse wrapper for laravel framework to run Google Lighthouse CLI with custom option and can automatically save result in your server directory.&lt;/li&gt; 
 &lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/Xceptance/neodymium/wiki/Accessibility"&gt;Neodymium&lt;/a&gt;&lt;/strong&gt; - The Neodymium test automation framework integrates Lighthouse for accessibility and Web Vitals verification, allowing programmatic validation and assertion of all audit values.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;h2&gt;FAQ&lt;/h2&gt; 
&lt;h3&gt;How does Lighthouse work?&lt;/h3&gt; 
&lt;p&gt;See &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/architecture.md"&gt;Lighthouse Architecture&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why is the performance score so low? It looks fine to me.&lt;/h3&gt; 
&lt;p&gt;Lighthouse reports the performance metrics as they would be experienced by a typical mobile user on a 4G connection and a mid-tier ~$200 phone. Even if it loads quickly on your device and network, users in other environments will experience the site very differently.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/throttling.md"&gt;guide to throttling&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Why does the performance score change so much?&lt;/h3&gt; 
&lt;p&gt;Lighthouse performance scores will change due to inherent variability in web and network technologies, even if there hasn't been a code change. Test in consistent environments, run Lighthouse multiple times, and beware of variability before drawing conclusions about a performance-impacting change.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/variability.md"&gt;guide to reducing variability&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Can I configure the lighthouse run?&lt;/h3&gt; 
&lt;p&gt;Yes! Details in &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/configuration.md"&gt;Lighthouse configuration&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;How does Lighthouse use network throttling, and how can I make it better?&lt;/h3&gt; 
&lt;p&gt;Good question. Network and CPU throttling are applied by default in a Lighthouse run. The network attempts to emulate slow 4G connectivity and the CPU is slowed down 4x from your machine's default speed. If you prefer to run Lighthouse without throttling, you'll have to use the CLI and disable it with the &lt;code&gt;--throttling.*&lt;/code&gt; flags mentioned above.&lt;/p&gt; 
&lt;p&gt;Read more in our &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/throttling.md"&gt;guide to network throttling&lt;/a&gt;.&lt;/p&gt; 
&lt;h3&gt;Are results sent to a remote server?&lt;/h3&gt; 
&lt;p&gt;Nope. Lighthouse runs locally, auditing a page using a local version of the Chrome browser installed on the machine. Report results are never processed or beaconed to a remote server.&lt;/p&gt; 
&lt;h3&gt;How do I get localized Lighthouse results via the CLI?&lt;/h3&gt; 
&lt;p&gt;Starting in Lighthouse 8.0, Lighthouse relies entirely on native &lt;code&gt;Intl&lt;/code&gt; support and no longer uses an &lt;code&gt;Intl&lt;/code&gt; polyfill. If you're using Node 14 or later, there should be no issue because Node is now &lt;a href="https://nodejs.medium.com/node-js-12-to-lts-and-node-js-13-is-here-e28d6a4a2bd#9514"&gt;built with &lt;code&gt;full-icu&lt;/code&gt; by default&lt;/a&gt;.&lt;/p&gt; 
&lt;p&gt;However, if you're using a &lt;code&gt;small-icu&lt;/code&gt; Node build, you may see Lighthouse log messages about your locale not being available. To remedy this, you can manually install ICU data by using the &lt;a href="https://www.npmjs.com/package/full-icu"&gt;&lt;code&gt;full-icu&lt;/code&gt;&lt;/a&gt; module and the &lt;a href="https://nodejs.org/api/intl.html#intl_providing_icu_data_at_runtime"&gt;&lt;code&gt;--icu-data-dir&lt;/code&gt; node flag&lt;/a&gt; at launch.&lt;/p&gt; 
&lt;h3&gt;How do I author custom audits to extend Lighthouse?&lt;/h3&gt; 
&lt;blockquote&gt; 
 &lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: see &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/architecture.md"&gt;Lighthouse Architecture&lt;/a&gt; for more information on terminology and architecture.&lt;/p&gt; 
&lt;/blockquote&gt; 
&lt;p&gt;Lighthouse can be extended to run custom audits and gatherers that you author. This is great if you're already tracking performance metrics in your site and want to surface those metrics within a Lighthouse report.&lt;/p&gt; 
&lt;p&gt;If you're interested in running your own custom audits, check out our &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/docs/recipes/custom-audit"&gt;Custom Audit Example&lt;/a&gt; over in recipes.&lt;/p&gt; 
&lt;h3&gt;How do I contribute?&lt;/h3&gt; 
&lt;p&gt;We'd love help writing audits, fixing bugs, and making the tool more useful! See &lt;a href="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/CONTRIBUTING.md"&gt;Contributing&lt;/a&gt; to get started.&lt;/p&gt; 
&lt;hr /&gt; 
&lt;p align="center"&gt; &lt;img src="https://raw.githubusercontent.com/GoogleChrome/lighthouse/main/assets/lighthouse-logo_512px.png" alt="Lighthouse logo" height="150" /&gt; &lt;br /&gt; &lt;b&gt;Lighthouse&lt;/b&gt;, ˈlītˌhous (n): a &lt;s&gt;tower or other structure&lt;/s&gt; tool containing a beacon light to warn or guide &lt;s&gt;ships at sea&lt;/s&gt; developers. &lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>